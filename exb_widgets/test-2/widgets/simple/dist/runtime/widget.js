System.register(["jimu-core","esri/geometry/projection","jimu-core/react"], function(__WEBPACK_DYNAMIC_EXPORT__, __system_context__) {
	var __WEBPACK_EXTERNAL_MODULE_jimu_core__ = {};
	var __WEBPACK_EXTERNAL_MODULE_esri_geometry_projection__ = {};
	var __WEBPACK_EXTERNAL_MODULE_react__ = {};
	Object.defineProperty(__WEBPACK_EXTERNAL_MODULE_jimu_core__, "__esModule", { value: true });
	Object.defineProperty(__WEBPACK_EXTERNAL_MODULE_esri_geometry_projection__, "__esModule", { value: true });
	Object.defineProperty(__WEBPACK_EXTERNAL_MODULE_react__, "__esModule", { value: true });
	return {
		setters: [
			function(module) {
				Object.keys(module).forEach(function(key) {
					__WEBPACK_EXTERNAL_MODULE_jimu_core__[key] = module[key];
				});
			},
			function(module) {
				Object.keys(module).forEach(function(key) {
					__WEBPACK_EXTERNAL_MODULE_esri_geometry_projection__[key] = module[key];
				});
			},
			function(module) {
				Object.keys(module).forEach(function(key) {
					__WEBPACK_EXTERNAL_MODULE_react__[key] = module[key];
				});
			}
		],
		execute: function() {
			__WEBPACK_DYNAMIC_EXPORT__(
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/@esri/calcite-components-react/dist/components.js":
/*!************************************************************************!*\
  !*** ./node_modules/@esri/calcite-components-react/dist/components.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   CalciteAccordion: () => (/* binding */ CalciteAccordion),
/* harmony export */   CalciteAccordionItem: () => (/* binding */ CalciteAccordionItem),
/* harmony export */   CalciteAction: () => (/* binding */ CalciteAction),
/* harmony export */   CalciteActionBar: () => (/* binding */ CalciteActionBar),
/* harmony export */   CalciteActionGroup: () => (/* binding */ CalciteActionGroup),
/* harmony export */   CalciteActionMenu: () => (/* binding */ CalciteActionMenu),
/* harmony export */   CalciteActionPad: () => (/* binding */ CalciteActionPad),
/* harmony export */   CalciteAlert: () => (/* binding */ CalciteAlert),
/* harmony export */   CalciteAvatar: () => (/* binding */ CalciteAvatar),
/* harmony export */   CalciteBlock: () => (/* binding */ CalciteBlock),
/* harmony export */   CalciteBlockSection: () => (/* binding */ CalciteBlockSection),
/* harmony export */   CalciteButton: () => (/* binding */ CalciteButton),
/* harmony export */   CalciteCard: () => (/* binding */ CalciteCard),
/* harmony export */   CalciteCheckbox: () => (/* binding */ CalciteCheckbox),
/* harmony export */   CalciteChip: () => (/* binding */ CalciteChip),
/* harmony export */   CalciteChipGroup: () => (/* binding */ CalciteChipGroup),
/* harmony export */   CalciteColorPicker: () => (/* binding */ CalciteColorPicker),
/* harmony export */   CalciteColorPickerHexInput: () => (/* binding */ CalciteColorPickerHexInput),
/* harmony export */   CalciteColorPickerSwatch: () => (/* binding */ CalciteColorPickerSwatch),
/* harmony export */   CalciteCombobox: () => (/* binding */ CalciteCombobox),
/* harmony export */   CalciteComboboxItem: () => (/* binding */ CalciteComboboxItem),
/* harmony export */   CalciteComboboxItemGroup: () => (/* binding */ CalciteComboboxItemGroup),
/* harmony export */   CalciteDatePicker: () => (/* binding */ CalciteDatePicker),
/* harmony export */   CalciteDatePickerDay: () => (/* binding */ CalciteDatePickerDay),
/* harmony export */   CalciteDatePickerMonth: () => (/* binding */ CalciteDatePickerMonth),
/* harmony export */   CalciteDatePickerMonthHeader: () => (/* binding */ CalciteDatePickerMonthHeader),
/* harmony export */   CalciteDropdown: () => (/* binding */ CalciteDropdown),
/* harmony export */   CalciteDropdownGroup: () => (/* binding */ CalciteDropdownGroup),
/* harmony export */   CalciteDropdownItem: () => (/* binding */ CalciteDropdownItem),
/* harmony export */   CalciteFab: () => (/* binding */ CalciteFab),
/* harmony export */   CalciteFilter: () => (/* binding */ CalciteFilter),
/* harmony export */   CalciteFlow: () => (/* binding */ CalciteFlow),
/* harmony export */   CalciteFlowItem: () => (/* binding */ CalciteFlowItem),
/* harmony export */   CalciteGraph: () => (/* binding */ CalciteGraph),
/* harmony export */   CalciteHandle: () => (/* binding */ CalciteHandle),
/* harmony export */   CalciteIcon: () => (/* binding */ CalciteIcon),
/* harmony export */   CalciteInlineEditable: () => (/* binding */ CalciteInlineEditable),
/* harmony export */   CalciteInput: () => (/* binding */ CalciteInput),
/* harmony export */   CalciteInputDatePicker: () => (/* binding */ CalciteInputDatePicker),
/* harmony export */   CalciteInputMessage: () => (/* binding */ CalciteInputMessage),
/* harmony export */   CalciteInputNumber: () => (/* binding */ CalciteInputNumber),
/* harmony export */   CalciteInputText: () => (/* binding */ CalciteInputText),
/* harmony export */   CalciteInputTimePicker: () => (/* binding */ CalciteInputTimePicker),
/* harmony export */   CalciteInputTimeZone: () => (/* binding */ CalciteInputTimeZone),
/* harmony export */   CalciteLabel: () => (/* binding */ CalciteLabel),
/* harmony export */   CalciteLink: () => (/* binding */ CalciteLink),
/* harmony export */   CalciteList: () => (/* binding */ CalciteList),
/* harmony export */   CalciteListItem: () => (/* binding */ CalciteListItem),
/* harmony export */   CalciteListItemGroup: () => (/* binding */ CalciteListItemGroup),
/* harmony export */   CalciteLoader: () => (/* binding */ CalciteLoader),
/* harmony export */   CalciteMenu: () => (/* binding */ CalciteMenu),
/* harmony export */   CalciteMenuItem: () => (/* binding */ CalciteMenuItem),
/* harmony export */   CalciteMeter: () => (/* binding */ CalciteMeter),
/* harmony export */   CalciteModal: () => (/* binding */ CalciteModal),
/* harmony export */   CalciteNavigation: () => (/* binding */ CalciteNavigation),
/* harmony export */   CalciteNavigationLogo: () => (/* binding */ CalciteNavigationLogo),
/* harmony export */   CalciteNavigationUser: () => (/* binding */ CalciteNavigationUser),
/* harmony export */   CalciteNotice: () => (/* binding */ CalciteNotice),
/* harmony export */   CalciteOption: () => (/* binding */ CalciteOption),
/* harmony export */   CalciteOptionGroup: () => (/* binding */ CalciteOptionGroup),
/* harmony export */   CalcitePagination: () => (/* binding */ CalcitePagination),
/* harmony export */   CalcitePanel: () => (/* binding */ CalcitePanel),
/* harmony export */   CalcitePickList: () => (/* binding */ CalcitePickList),
/* harmony export */   CalcitePickListGroup: () => (/* binding */ CalcitePickListGroup),
/* harmony export */   CalcitePickListItem: () => (/* binding */ CalcitePickListItem),
/* harmony export */   CalcitePopover: () => (/* binding */ CalcitePopover),
/* harmony export */   CalciteProgress: () => (/* binding */ CalciteProgress),
/* harmony export */   CalciteRadioButton: () => (/* binding */ CalciteRadioButton),
/* harmony export */   CalciteRadioButtonGroup: () => (/* binding */ CalciteRadioButtonGroup),
/* harmony export */   CalciteRating: () => (/* binding */ CalciteRating),
/* harmony export */   CalciteScrim: () => (/* binding */ CalciteScrim),
/* harmony export */   CalciteSegmentedControl: () => (/* binding */ CalciteSegmentedControl),
/* harmony export */   CalciteSegmentedControlItem: () => (/* binding */ CalciteSegmentedControlItem),
/* harmony export */   CalciteSelect: () => (/* binding */ CalciteSelect),
/* harmony export */   CalciteSheet: () => (/* binding */ CalciteSheet),
/* harmony export */   CalciteShell: () => (/* binding */ CalciteShell),
/* harmony export */   CalciteShellCenterRow: () => (/* binding */ CalciteShellCenterRow),
/* harmony export */   CalciteShellPanel: () => (/* binding */ CalciteShellPanel),
/* harmony export */   CalciteSlider: () => (/* binding */ CalciteSlider),
/* harmony export */   CalciteSortableList: () => (/* binding */ CalciteSortableList),
/* harmony export */   CalciteSplitButton: () => (/* binding */ CalciteSplitButton),
/* harmony export */   CalciteStack: () => (/* binding */ CalciteStack),
/* harmony export */   CalciteStepper: () => (/* binding */ CalciteStepper),
/* harmony export */   CalciteStepperItem: () => (/* binding */ CalciteStepperItem),
/* harmony export */   CalciteSwitch: () => (/* binding */ CalciteSwitch),
/* harmony export */   CalciteTab: () => (/* binding */ CalciteTab),
/* harmony export */   CalciteTabNav: () => (/* binding */ CalciteTabNav),
/* harmony export */   CalciteTabTitle: () => (/* binding */ CalciteTabTitle),
/* harmony export */   CalciteTable: () => (/* binding */ CalciteTable),
/* harmony export */   CalciteTableCell: () => (/* binding */ CalciteTableCell),
/* harmony export */   CalciteTableHeader: () => (/* binding */ CalciteTableHeader),
/* harmony export */   CalciteTableRow: () => (/* binding */ CalciteTableRow),
/* harmony export */   CalciteTabs: () => (/* binding */ CalciteTabs),
/* harmony export */   CalciteTextArea: () => (/* binding */ CalciteTextArea),
/* harmony export */   CalciteTile: () => (/* binding */ CalciteTile),
/* harmony export */   CalciteTileSelect: () => (/* binding */ CalciteTileSelect),
/* harmony export */   CalciteTileSelectGroup: () => (/* binding */ CalciteTileSelectGroup),
/* harmony export */   CalciteTimePicker: () => (/* binding */ CalciteTimePicker),
/* harmony export */   CalciteTip: () => (/* binding */ CalciteTip),
/* harmony export */   CalciteTipGroup: () => (/* binding */ CalciteTipGroup),
/* harmony export */   CalciteTipManager: () => (/* binding */ CalciteTipManager),
/* harmony export */   CalciteTooltip: () => (/* binding */ CalciteTooltip),
/* harmony export */   CalciteTree: () => (/* binding */ CalciteTree),
/* harmony export */   CalciteTreeItem: () => (/* binding */ CalciteTreeItem),
/* harmony export */   CalciteValueList: () => (/* binding */ CalciteValueList),
/* harmony export */   CalciteValueListItem: () => (/* binding */ CalciteValueListItem)
/* harmony export */ });
/* harmony import */ var _react_component_lib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./react-component-lib */ "./node_modules/@esri/calcite-components-react/dist/react-component-lib/createComponent.js");
var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
/* eslint-disable */
/* tslint:disable */
/* auto-generated react proxies */

// https://github.com/flexdinesh/browser-or-node/blob/master/src/index.js
const isBrowser = typeof window !== "undefined" && typeof window.document !== "undefined";
const isNode = typeof process !== "undefined" &&
    process.versions != null &&
    process.versions.node != null &&
    (process === null || process === void 0 ? void 0 : process.platform) !== "browser";
const CalciteAccordion = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-accordion', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-22435f")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-accordion.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-accordion.js"))).defineCustomElement(); }) : undefined);
const CalciteAccordionItem = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-accordion-item', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-612cb0"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b6510")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-accordion-item.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-accordion-item.js"))).defineCustomElement(); }) : undefined);
const CalciteAction = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-action', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-6cd580"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-cafbf1"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-49d2fb")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-action.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-action.js"))).defineCustomElement(); }) : undefined);
const CalciteActionBar = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-action-bar', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-6cd580"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-08845b"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-cafbf1"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-afcda1"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-d7e502"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-bbcc8a"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-5ef4d3"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-99836c"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-5cee3f"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b6511")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-action-bar.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-action-bar.js"))).defineCustomElement(); }) : undefined);
const CalciteActionGroup = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-action-group', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-6cd580"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-08845b"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-cafbf1"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-afcda1"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-d7e502"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-bbcc8a"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-5ef4d3"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-feb445")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-action-group.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-action-group.js"))).defineCustomElement(); }) : undefined);
const CalciteActionMenu = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-action-menu', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-6cd580"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-08845b"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-cafbf1"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-afcda1"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-d7e502"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-bbcc8a"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-5ef4d3"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-70f5c6")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-action-menu.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-action-menu.js"))).defineCustomElement(); }) : undefined);
const CalciteActionPad = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-action-pad', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-6cd580"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-08845b"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-cafbf1"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-afcda1"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-d7e502"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-bbcc8a"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-5ef4d3"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-99836c"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-6dc9e8")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-action-pad.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-action-pad.js"))).defineCustomElement(); }) : undefined);
const CalciteAlert = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-alert', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-6cd580"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-49933b"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-42027a"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-9fca22"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b6512")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-alert.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-alert.js"))).defineCustomElement(); }) : undefined);
const CalciteAvatar = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-avatar', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-affb86"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-185c5e")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-avatar.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-avatar.js"))).defineCustomElement(); }) : undefined);
const CalciteBlock = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-block', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-6cd580"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-08845b"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-cafbf1"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-afcda1"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-d7e502"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-bbcc8a"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-5ef4d3"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-fda5fb"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b6513")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-block.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-block.js"))).defineCustomElement(); }) : undefined);
const CalciteBlockSection = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-block-section', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-6cd580"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-580a35"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-8dc8d7"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-15dcef"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b6514")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-block-section.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-block-section.js"))).defineCustomElement(); }) : undefined);
const CalciteButton = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-button', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-6cd580"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-580a35"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-e8854b"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-1e606f")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-button.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-button.js"))).defineCustomElement(); }) : undefined);
const CalciteCard = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-card', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-6cd580"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-580a35"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-ec422b"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-0a6a66"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b6515")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-card.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-card.js"))).defineCustomElement(); }) : undefined);
const CalciteCheckbox = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-checkbox', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-580a35"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-ec422b"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-10db21")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-checkbox.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-checkbox.js"))).defineCustomElement(); }) : undefined);
const CalciteChip = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-chip', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-6cd580"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-49933b"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-3bad42"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b6516")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-chip.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-chip.js"))).defineCustomElement(); }) : undefined);
const CalciteChipGroup = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-chip-group', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-450fd8"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b6517")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-chip-group.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-chip-group.js"))).defineCustomElement(); }) : undefined);
const CalciteColorPicker = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-color-picker', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-6cd580"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-580a35"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-08845b"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-e8854b"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-98cdc1"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-a73221"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-2a6904"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-a292ea"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-5abfb9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-335364"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-568ad7"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b6518")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-color-picker.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-color-picker.js"))).defineCustomElement(); }) : undefined);
const CalciteColorPickerHexInput = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-color-picker-hex-input', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-6cd580"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-580a35"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-98cdc1"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-a73221"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-2a6904"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-5abfb9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-371a99"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b6519")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-color-picker-hex-input.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-color-picker-hex-input.js"))).defineCustomElement(); }) : undefined);
const CalciteColorPickerSwatch = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-color-picker-swatch', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-a73221"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-9b12ae")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-color-picker-swatch.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-color-picker-swatch.js"))).defineCustomElement(); }) : undefined);
const CalciteCombobox = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-combobox', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-6cd580"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-580a35"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-08845b"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-afcda1"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-bc0c20"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-49933b"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-65d81a"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-8167fd")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-combobox.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-combobox.js"))).defineCustomElement(); }) : undefined);
const CalciteComboboxItem = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-combobox-item', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-8a9684"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65110")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-combobox-item.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-combobox-item.js"))).defineCustomElement(); }) : undefined);
const CalciteComboboxItemGroup = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-combobox-item-group', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-2e47ee")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-combobox-item-group.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-combobox-item-group.js"))).defineCustomElement(); }) : undefined);
const CalciteDatePicker = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-date-picker', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-6cd580"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-6e9f40"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-853b98"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-b59e41"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-ced01d"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-1eb552")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-date-picker.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-date-picker.js"))).defineCustomElement(); }) : undefined);
const CalciteDatePickerDay = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-date-picker-day', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-6cd580"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-6e9f40"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-36fb7e")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-date-picker-day.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-date-picker-day.js"))).defineCustomElement(); }) : undefined);
const CalciteDatePickerMonth = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-date-picker-month', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-6cd580"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-6e9f40"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-b59e41"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-d80d1a")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-date-picker-month.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-date-picker-month.js"))).defineCustomElement(); }) : undefined);
const CalciteDatePickerMonthHeader = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-date-picker-month-header', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-6cd580"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-853b98"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-0d074b")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-date-picker-month-header.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-date-picker-month-header.js"))).defineCustomElement(); }) : undefined);
const CalciteDropdown = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-dropdown', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-08845b"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-afcda1"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-b1d7fc"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-84c939"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65111")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-dropdown.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-dropdown.js"))).defineCustomElement(); }) : undefined);
const CalciteDropdownGroup = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-dropdown-group', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-328696")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-dropdown-group.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-dropdown-group.js"))).defineCustomElement(); }) : undefined);
const CalciteDropdownItem = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-dropdown-item', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-e45851"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65112")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-dropdown-item.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-dropdown-item.js"))).defineCustomElement(); }) : undefined);
const CalciteFab = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-fab', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-6cd580"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-580a35"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-e8854b"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-e196a7")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-fab.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-fab.js"))).defineCustomElement(); }) : undefined);
const CalciteFilter = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-filter', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-6cd580"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-580a35"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-08845b"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-bc0c20"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-340868"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-65f9d9")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-filter.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-filter.js"))).defineCustomElement(); }) : undefined);
const CalciteFlow = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-flow', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-658038"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65113")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-flow.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-flow.js"))).defineCustomElement(); }) : undefined);
const CalciteFlowItem = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-flow-item', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-6cd580"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-08845b"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-cafbf1"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-afcda1"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-d7e502"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-bbcc8a"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-5ef4d3"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f73a03"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-31e305"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65114")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-flow-item.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-flow-item.js"))).defineCustomElement(); }) : undefined);
const CalciteGraph = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-graph', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-49959e"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65115")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-graph.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-graph.js"))).defineCustomElement(); }) : undefined);
const CalciteHandle = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-handle', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-6cd580"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f6746d"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65116")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-handle.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-handle.js"))).defineCustomElement(); }) : undefined);
const CalciteIcon = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-icon', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-dece0b")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-icon.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-icon.js"))).defineCustomElement(); }) : undefined);
const CalciteInlineEditable = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-inline-editable', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-6cd580"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-580a35"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-e8854b"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-1badd6"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65117")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-inline-editable.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-inline-editable.js"))).defineCustomElement(); }) : undefined);
const CalciteInput = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-input', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-6cd580"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-580a35"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-340868"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-2fbc33"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65118")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-input.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-input.js"))).defineCustomElement(); }) : undefined);
const CalciteInputDatePicker = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-input-date-picker', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-6cd580"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-580a35"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-08845b"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-afcda1"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-d7e502"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-98cdc1"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-6e9f40"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-853b98"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-b59e41"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-ced01d"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f6204c"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65119")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-input-date-picker.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-input-date-picker.js"))).defineCustomElement(); }) : undefined);
const CalciteInputMessage = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-input-message', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-0085c2"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65120")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-input-message.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-input-message.js"))).defineCustomElement(); }) : undefined);
const CalciteInputNumber = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-input-number', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-6cd580"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-580a35"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-2a6904"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-edc936"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65121")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-input-number.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-input-number.js"))).defineCustomElement(); }) : undefined);
const CalciteInputText = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-input-text', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-6cd580"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-580a35"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-98cdc1"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-56f4a3"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65122")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-input-text.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-input-text.js"))).defineCustomElement(); }) : undefined);
const CalciteInputTimePicker = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-input-time-picker', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-6cd580"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-580a35"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-08845b"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-cafbf1"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-afcda1"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-d7e502"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-bbcc8a"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-98cdc1"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-42222b"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-bff128"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65123")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-input-time-picker.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-input-time-picker.js"))).defineCustomElement(); }) : undefined);
const CalciteInputTimeZone = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-input-time-zone', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-6cd580"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-580a35"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-08845b"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-afcda1"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-bc0c20"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-49933b"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-65d81a"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-0a657e"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65124")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-input-time-zone.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-input-time-zone.js"))).defineCustomElement(); }) : undefined);
const CalciteLabel = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-label', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-9b0a9b"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65125")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-label.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-label.js"))).defineCustomElement(); }) : undefined);
const CalciteLink = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-link', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-fc5ebf"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-77b7dd")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-link.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-link.js"))).defineCustomElement(); }) : undefined);
const CalciteList = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-list', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-6cd580"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-580a35"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-08845b"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-bc0c20"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-340868"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-bd32b8"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-2bdedf"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65126")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-list.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-list.js"))).defineCustomElement(); }) : undefined);
const CalciteListItem = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-list-item', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-6cd580"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-cafbf1"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-166e7f"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65127")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-list-item.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-list-item.js"))).defineCustomElement(); }) : undefined);
const CalciteListItemGroup = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-list-item-group', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-c77b8d"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65128")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-list-item-group.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-list-item-group.js"))).defineCustomElement(); }) : undefined);
const CalciteLoader = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-loader', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-87c9cd"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65129")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-loader.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-loader.js"))).defineCustomElement(); }) : undefined);
const CalciteMenu = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-menu', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-6cd580"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-32688d"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-8bef38")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-menu.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-menu.js"))).defineCustomElement(); }) : undefined);
const CalciteMenuItem = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-menu-item', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-6cd580"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-cafbf1"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-32688d"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-0a975a"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65130")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-menu-item.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-menu-item.js"))).defineCustomElement(); }) : undefined);
const CalciteMeter = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-meter', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-6cd580"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-580a35"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-49e107"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65131")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-meter.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-meter.js"))).defineCustomElement(); }) : undefined);
const CalciteModal = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-modal', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-6cd580"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-d7e502"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-857841"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65132")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-modal.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-modal.js"))).defineCustomElement(); }) : undefined);
const CalciteNavigation = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-navigation', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-6cd580"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-cafbf1"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-da5a4c"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65133")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-navigation.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-navigation.js"))).defineCustomElement(); }) : undefined);
const CalciteNavigationLogo = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-navigation-logo', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-783595"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65134")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-navigation-logo.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-navigation-logo.js"))).defineCustomElement(); }) : undefined);
const CalciteNavigationUser = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-navigation-user', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-affb86"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-d4251f")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-navigation-user.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-navigation-user.js"))).defineCustomElement(); }) : undefined);
const CalciteNotice = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-notice', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-6cd580"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-42027a"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-ca2b00"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65135")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-notice.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-notice.js"))).defineCustomElement(); }) : undefined);
const CalciteOption = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-option', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-e642b5")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-option.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-option.js"))).defineCustomElement(); }) : undefined);
const CalciteOptionGroup = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-option-group', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-8dc94d")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-option-group.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-option-group.js"))).defineCustomElement(); }) : undefined);
const CalcitePagination = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-pagination', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-6cd580"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-cf15f1"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-3505a3"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65136")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-pagination.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-pagination.js"))).defineCustomElement(); }) : undefined);
const CalcitePanel = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-panel', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-6cd580"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-08845b"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-cafbf1"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-afcda1"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-d7e502"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-bbcc8a"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-5ef4d3"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f73a03"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-bc0a37")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-panel.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-panel.js"))).defineCustomElement(); }) : undefined);
const CalcitePickList = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-pick-list', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-6cd580"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-580a35"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-08845b"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-bc0c20"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-340868"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-db44bb"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-a27112")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-pick-list.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-pick-list.js"))).defineCustomElement(); }) : undefined);
const CalcitePickListGroup = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-pick-list-group', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-24da96")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-pick-list-group.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-pick-list-group.js"))).defineCustomElement(); }) : undefined);
const CalcitePickListItem = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-pick-list-item', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-6cd580"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-cafbf1"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-cb167b"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-dc2971")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-pick-list-item.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-pick-list-item.js"))).defineCustomElement(); }) : undefined);
const CalcitePopover = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-popover', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-6cd580"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-08845b"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-cafbf1"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-afcda1"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-d7e502"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-bbcc8a"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-2f09d8")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-popover.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-popover.js"))).defineCustomElement(); }) : undefined);
const CalciteProgress = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-progress', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-ffc994")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-progress.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-progress.js"))).defineCustomElement(); }) : undefined);
const CalciteRadioButton = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-radio-button', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-580a35"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-7b3599"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65137")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-radio-button.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-radio-button.js"))).defineCustomElement(); }) : undefined);
const CalciteRadioButtonGroup = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-radio-button-group', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-3990fb")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-radio-button-group.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-radio-button-group.js"))).defineCustomElement(); }) : undefined);
const CalciteRating = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-rating', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-6cd580"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-580a35"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-49933b"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f436af"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65138")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-rating.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-rating.js"))).defineCustomElement(); }) : undefined);
const CalciteScrim = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-scrim', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-6cd580"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-8f0575"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65139")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-scrim.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-scrim.js"))).defineCustomElement(); }) : undefined);
const CalciteSegmentedControl = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-segmented-control', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-580a35"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-28f8b8"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65140")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-segmented-control.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-segmented-control.js"))).defineCustomElement(); }) : undefined);
const CalciteSegmentedControlItem = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-segmented-control-item', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-457afd"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65141")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-segmented-control-item.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-segmented-control-item.js"))).defineCustomElement(); }) : undefined);
const CalciteSelect = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-select', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-580a35"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-3c46bd"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65142")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-select.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-select.js"))).defineCustomElement(); }) : undefined);
const CalciteSheet = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-sheet', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-6cd580"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-d7e502"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-506901"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65143")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-sheet.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-sheet.js"))).defineCustomElement(); }) : undefined);
const CalciteShell = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-shell', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-5c99df"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65144")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-shell.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-shell.js"))).defineCustomElement(); }) : undefined);
const CalciteShellCenterRow = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-shell-center-row', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-396491")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-shell-center-row.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-shell-center-row.js"))).defineCustomElement(); }) : undefined);
const CalciteShellPanel = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-shell-panel', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-6cd580"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-2b8ed8"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65145")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-shell-panel.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-shell-panel.js"))).defineCustomElement(); }) : undefined);
const CalciteSlider = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-slider', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-6cd580"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-580a35"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-586fcc"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65146")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-slider.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-slider.js"))).defineCustomElement(); }) : undefined);
const CalciteSortableList = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-sortable-list', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-bd32b8"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-bb0941"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65147")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-sortable-list.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-sortable-list.js"))).defineCustomElement(); }) : undefined);
const CalciteSplitButton = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-split-button', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-6cd580"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-580a35"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-08845b"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-afcda1"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-e8854b"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-b1d7fc"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-4729f8"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65148")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-split-button.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-split-button.js"))).defineCustomElement(); }) : undefined);
const CalciteStack = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-stack', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-eda6c5")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-stack.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-stack.js"))).defineCustomElement(); }) : undefined);
const CalciteStepper = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-stepper', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-6cd580"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-cafbf1"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-1c1671"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65149")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-stepper.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-stepper.js"))).defineCustomElement(); }) : undefined);
const CalciteStepperItem = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-stepper-item', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-6cd580"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-74332f"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65150")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-stepper-item.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-stepper-item.js"))).defineCustomElement(); }) : undefined);
const CalciteSwitch = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-switch', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-580a35"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-8dc8d7"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-2b3897")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-switch.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-switch.js"))).defineCustomElement(); }) : undefined);
const CalciteTab = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-tab', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-b2c59c")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-tab.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-tab.js"))).defineCustomElement(); }) : undefined);
const CalciteTabNav = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-tab-nav', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-335364"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-a199e7")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-tab-nav.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-tab-nav.js"))).defineCustomElement(); }) : undefined);
const CalciteTabTitle = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-tab-title', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-6cd580"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-a292ea"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-8837a8"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65151")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-tab-title.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-tab-title.js"))).defineCustomElement(); }) : undefined);
const CalciteTable = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-table', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-6cd580"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-580a35"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-e8854b"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-49933b"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-cf15f1"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-31d427"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65152")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-table.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-table.js"))).defineCustomElement(); }) : undefined);
const CalciteTableCell = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-table-cell', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-6cd580"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-97d550"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-c86438")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-table-cell.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-table-cell.js"))).defineCustomElement(); }) : undefined);
const CalciteTableHeader = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-table-header', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-6cd580"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-4526f2"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-9d091c")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-table-header.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-table-header.js"))).defineCustomElement(); }) : undefined);
const CalciteTableRow = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-table-row', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-6cd580"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-4526f2"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-97d550"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-d70c83"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65153")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-table-row.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-table-row.js"))).defineCustomElement(); }) : undefined);
const CalciteTabs = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-tabs', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-a1e81e")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-tabs.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-tabs.js"))).defineCustomElement(); }) : undefined);
const CalciteTextArea = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-text-area', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-6cd580"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-580a35"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-08845b"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-ebc0a1"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65154")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-text-area.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-text-area.js"))).defineCustomElement(); }) : undefined);
const CalciteTile = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-tile', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-fc5ebf"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-a68795")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-tile.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-tile.js"))).defineCustomElement(); }) : undefined);
const CalciteTileSelect = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-tile-select', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-fc5ebf"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-1a7c8d"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65155")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-tile-select.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-tile-select.js"))).defineCustomElement(); }) : undefined);
const CalciteTileSelectGroup = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-tile-select-group', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-2c450e")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-tile-select-group.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-tile-select-group.js"))).defineCustomElement(); }) : undefined);
const CalciteTimePicker = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-time-picker', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-6cd580"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-42222b"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-9a115d"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65156")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-time-picker.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-time-picker.js"))).defineCustomElement(); }) : undefined);
const CalciteTip = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-tip', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-6cd580"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-cafbf1"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-ddf285"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65157")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-tip.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-tip.js"))).defineCustomElement(); }) : undefined);
const CalciteTipGroup = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-tip-group', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-cf5131")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-tip-group.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-tip-group.js"))).defineCustomElement(); }) : undefined);
const CalciteTipManager = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-tip-manager', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-6cd580"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-cafbf1"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-4222af"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65158")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-tip-manager.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-tip-manager.js"))).defineCustomElement(); }) : undefined);
const CalciteTooltip = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-tooltip', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-08845b"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-afcda1"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-160bc0"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65159")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-tooltip.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-tooltip.js"))).defineCustomElement(); }) : undefined);
const CalciteTree = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-tree', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-7340ff"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65160")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-tree.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-tree.js"))).defineCustomElement(); }) : undefined);
const CalciteTreeItem = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-tree-item', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-580a35"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-ec422b"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-801e93"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65161")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-tree-item.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-tree-item.js"))).defineCustomElement(); }) : undefined);
const CalciteValueList = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-value-list', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-6cd580"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-580a35"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-08845b"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-bc0c20"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-340868"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-bd32b8"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-db44bb"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-1be921"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65162")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-value-list.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-value-list.js"))).defineCustomElement(); }) : undefined);
const CalciteValueListItem = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-value-list-item', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-6cd580"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-cafbf1"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-cb167b"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-5ffed3")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-value-list-item.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-value-list-item.js"))).defineCustomElement(); }) : undefined);


/***/ }),

/***/ "./node_modules/@esri/calcite-components-react/dist/react-component-lib/createComponent.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@esri/calcite-components-react/dist/react-component-lib/createComponent.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   createReactComponent: () => (/* binding */ createReactComponent)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils */ "./node_modules/@esri/calcite-components-react/dist/react-component-lib/utils/case.js");
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils */ "./node_modules/@esri/calcite-components-react/dist/react-component-lib/utils/attachProps.js");
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils */ "./node_modules/@esri/calcite-components-react/dist/react-component-lib/utils/index.js");
var __rest = (undefined && undefined.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};


const createReactComponent = (tagName, ReactComponentContext, manipulatePropsFunction, defineCustomElement) => {
    if (defineCustomElement !== undefined) {
        defineCustomElement();
    }
    const displayName = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.dashToPascalCase)(tagName);
    const ReactComponent = class extends react__WEBPACK_IMPORTED_MODULE_0__["default"].Component {
        constructor(props) {
            super(props);
            this.setComponentElRef = (element) => {
                this.componentEl = element;
            };
        }
        componentDidMount() {
            this.componentDidUpdate(this.props);
        }
        componentDidUpdate(prevProps) {
            (0,_utils__WEBPACK_IMPORTED_MODULE_2__.attachProps)(this.componentEl, this.props, prevProps);
        }
        render() {
            const _a = this.props, { children, forwardedRef, style, className, ref } = _a, cProps = __rest(_a, ["children", "forwardedRef", "style", "className", "ref"]);
            let propsToPass = Object.keys(cProps).reduce((acc, name) => {
                const value = cProps[name];
                if (name.indexOf('on') === 0 && name[2] === name[2].toUpperCase()) {
                    const eventName = name.substring(2).toLowerCase();
                    if (typeof document !== 'undefined' && (0,_utils__WEBPACK_IMPORTED_MODULE_2__.isCoveredByReact)(eventName)) {
                        acc[name] = value;
                    }
                }
                else {
                    // we should only render strings, booleans, and numbers as attrs in html.
                    // objects, functions, arrays etc get synced via properties on mount.
                    const type = typeof value;
                    if (type === 'string' || type === 'boolean' || type === 'number') {
                        acc[(0,_utils__WEBPACK_IMPORTED_MODULE_1__.camelToDashCase)(name)] = value;
                    }
                }
                return acc;
            }, {});
            if (manipulatePropsFunction) {
                propsToPass = manipulatePropsFunction(this.props, propsToPass);
            }
            const newProps = Object.assign(Object.assign({}, propsToPass), { ref: (0,_utils__WEBPACK_IMPORTED_MODULE_3__.mergeRefs)(forwardedRef, this.setComponentElRef), style });
            /**
             * We use createElement here instead of
             * React.createElement to work around a
             * bug in Vite (https://github.com/vitejs/vite/issues/6104).
             * React.createElement causes all elements to be rendered
             * as <tagname> instead of the actual Web Component.
             */
            return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(tagName, newProps, children);
        }
        static get displayName() {
            return displayName;
        }
    };
    // If context was passed to createReactComponent then conditionally add it to the Component Class
    if (ReactComponentContext) {
        ReactComponent.contextType = ReactComponentContext;
    }
    return (0,_utils__WEBPACK_IMPORTED_MODULE_3__.createForwardRef)(ReactComponent, displayName);
};


/***/ }),

/***/ "./node_modules/@esri/calcite-components-react/dist/react-component-lib/utils/attachProps.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@esri/calcite-components-react/dist/react-component-lib/utils/attachProps.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   attachProps: () => (/* binding */ attachProps),
/* harmony export */   getClassName: () => (/* binding */ getClassName),
/* harmony export */   isCoveredByReact: () => (/* binding */ isCoveredByReact),
/* harmony export */   syncEvent: () => (/* binding */ syncEvent),
/* harmony export */   transformReactEventName: () => (/* binding */ transformReactEventName)
/* harmony export */ });
/* harmony import */ var _case__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./case */ "./node_modules/@esri/calcite-components-react/dist/react-component-lib/utils/case.js");

const attachProps = (node, newProps, oldProps = {}) => {
    // some test frameworks don't render DOM elements, so we test here to make sure we are dealing with DOM first
    if (node instanceof Element) {
        // add any classes in className to the class list
        const className = getClassName(node.classList, newProps, oldProps);
        if (className !== '') {
            node.className = className;
        }
        Object.keys(newProps).forEach((name) => {
            if (name === 'children' ||
                name === 'style' ||
                name === 'ref' ||
                name === 'class' ||
                name === 'className' ||
                name === 'forwardedRef') {
                return;
            }
            if (name.indexOf('on') === 0 && name[2] === name[2].toUpperCase()) {
                const eventName = name.substring(2);
                const eventNameLc = eventName[0].toLowerCase() + eventName.substring(1);
                if (!isCoveredByReact(eventNameLc)) {
                    syncEvent(node, eventNameLc, newProps[name]);
                }
            }
            else {
                node[name] = newProps[name];
                const propType = typeof newProps[name];
                if (propType === 'string') {
                    node.setAttribute((0,_case__WEBPACK_IMPORTED_MODULE_0__.camelToDashCase)(name), newProps[name]);
                }
            }
        });
    }
};
const getClassName = (classList, newProps, oldProps) => {
    const newClassProp = newProps.className || newProps.class;
    const oldClassProp = oldProps.className || oldProps.class;
    // map the classes to Maps for performance
    const currentClasses = arrayToMap(classList);
    const incomingPropClasses = arrayToMap(newClassProp ? newClassProp.split(' ') : []);
    const oldPropClasses = arrayToMap(oldClassProp ? oldClassProp.split(' ') : []);
    const finalClassNames = [];
    // loop through each of the current classes on the component
    // to see if it should be a part of the classNames added
    currentClasses.forEach((currentClass) => {
        if (incomingPropClasses.has(currentClass)) {
            // add it as its already included in classnames coming in from newProps
            finalClassNames.push(currentClass);
            incomingPropClasses.delete(currentClass);
        }
        else if (!oldPropClasses.has(currentClass)) {
            // add it as it has NOT been removed by user
            finalClassNames.push(currentClass);
        }
    });
    incomingPropClasses.forEach((s) => finalClassNames.push(s));
    return finalClassNames.join(' ');
};
/**
 * Transforms a React event name to a browser event name.
 */
const transformReactEventName = (eventNameSuffix) => {
    switch (eventNameSuffix) {
        case 'doubleclick':
            return 'dblclick';
    }
    return eventNameSuffix;
};
/**
 * Checks if an event is supported in the current execution environment.
 * @license Modernizr 3.0.0pre (Custom Build) | MIT
 */
const isCoveredByReact = (eventNameSuffix) => {
    if (typeof document === 'undefined') {
        return true;
    }
    else {
        const eventName = 'on' + transformReactEventName(eventNameSuffix);
        let isSupported = eventName in document;
        if (!isSupported) {
            const element = document.createElement('div');
            element.setAttribute(eventName, 'return;');
            isSupported = typeof element[eventName] === 'function';
        }
        return isSupported;
    }
};
const syncEvent = (node, eventName, newEventHandler) => {
    const eventStore = node.__events || (node.__events = {});
    const oldEventHandler = eventStore[eventName];
    // Remove old listener so they don't double up.
    if (oldEventHandler) {
        node.removeEventListener(eventName, oldEventHandler);
    }
    // Bind new listener.
    node.addEventListener(eventName, (eventStore[eventName] = function handler(e) {
        if (newEventHandler) {
            newEventHandler.call(this, e);
        }
    }));
};
const arrayToMap = (arr) => {
    const map = new Map();
    arr.forEach((s) => map.set(s, s));
    return map;
};


/***/ }),

/***/ "./node_modules/@esri/calcite-components-react/dist/react-component-lib/utils/case.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@esri/calcite-components-react/dist/react-component-lib/utils/case.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   camelToDashCase: () => (/* binding */ camelToDashCase),
/* harmony export */   dashToPascalCase: () => (/* binding */ dashToPascalCase)
/* harmony export */ });
const dashToPascalCase = (str) => str
    .toLowerCase()
    .split('-')
    .map((segment) => segment.charAt(0).toUpperCase() + segment.slice(1))
    .join('');
const camelToDashCase = (str) => str.replace(/([A-Z])/g, (m) => `-${m[0].toLowerCase()}`);


/***/ }),

/***/ "./node_modules/@esri/calcite-components-react/dist/react-component-lib/utils/index.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@esri/calcite-components-react/dist/react-component-lib/utils/index.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   attachProps: () => (/* reexport safe */ _attachProps__WEBPACK_IMPORTED_MODULE_1__.attachProps),
/* harmony export */   camelToDashCase: () => (/* reexport safe */ _case__WEBPACK_IMPORTED_MODULE_2__.camelToDashCase),
/* harmony export */   createForwardRef: () => (/* binding */ createForwardRef),
/* harmony export */   dashToPascalCase: () => (/* reexport safe */ _case__WEBPACK_IMPORTED_MODULE_2__.dashToPascalCase),
/* harmony export */   defineCustomElement: () => (/* binding */ defineCustomElement),
/* harmony export */   getClassName: () => (/* reexport safe */ _attachProps__WEBPACK_IMPORTED_MODULE_1__.getClassName),
/* harmony export */   isCoveredByReact: () => (/* reexport safe */ _attachProps__WEBPACK_IMPORTED_MODULE_1__.isCoveredByReact),
/* harmony export */   mergeRefs: () => (/* binding */ mergeRefs),
/* harmony export */   setRef: () => (/* binding */ setRef),
/* harmony export */   syncEvent: () => (/* reexport safe */ _attachProps__WEBPACK_IMPORTED_MODULE_1__.syncEvent),
/* harmony export */   transformReactEventName: () => (/* reexport safe */ _attachProps__WEBPACK_IMPORTED_MODULE_1__.transformReactEventName)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var _attachProps__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./attachProps */ "./node_modules/@esri/calcite-components-react/dist/react-component-lib/utils/attachProps.js");
/* harmony import */ var _case__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./case */ "./node_modules/@esri/calcite-components-react/dist/react-component-lib/utils/case.js");

const setRef = (ref, value) => {
    if (typeof ref === 'function') {
        ref(value);
    }
    else if (ref != null) {
        // Cast as a MutableRef so we can assign current
        ref.current = value;
    }
};
const mergeRefs = (...refs) => {
    return (value) => {
        refs.forEach((ref) => {
            setRef(ref, value);
        });
    };
};
const createForwardRef = (ReactComponent, displayName) => {
    const forwardRef = (props, ref) => {
        return react__WEBPACK_IMPORTED_MODULE_0__["default"].createElement(ReactComponent, Object.assign({}, props, { forwardedRef: ref }));
    };
    forwardRef.displayName = displayName;
    return react__WEBPACK_IMPORTED_MODULE_0__["default"].forwardRef(forwardRef);
};
const defineCustomElement = (tagName, customElement) => {
    if (customElement !== undefined && typeof customElements !== 'undefined' && !customElements.get(tagName)) {
        customElements.define(tagName, customElement);
    }
};




/***/ }),

/***/ "./node_modules/@stencil/core/internal/client/index.js":
/*!*************************************************************!*\
  !*** ./node_modules/@stencil/core/internal/client/index.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   BUILD: () => (/* reexport safe */ _stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD),
/* harmony export */   Build: () => (/* binding */ Build),
/* harmony export */   Env: () => (/* reexport safe */ _stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.Env),
/* harmony export */   Fragment: () => (/* binding */ Fragment),
/* harmony export */   H: () => (/* binding */ H),
/* harmony export */   HTMLElement: () => (/* binding */ H),
/* harmony export */   Host: () => (/* binding */ Host),
/* harmony export */   NAMESPACE: () => (/* reexport safe */ _stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.NAMESPACE),
/* harmony export */   STENCIL_DEV_MODE: () => (/* binding */ STENCIL_DEV_MODE),
/* harmony export */   addHostEventListeners: () => (/* binding */ addHostEventListeners),
/* harmony export */   bootstrapLazy: () => (/* binding */ bootstrapLazy),
/* harmony export */   cmpModules: () => (/* binding */ cmpModules),
/* harmony export */   connectedCallback: () => (/* binding */ connectedCallback),
/* harmony export */   consoleDevError: () => (/* binding */ consoleDevError),
/* harmony export */   consoleDevInfo: () => (/* binding */ consoleDevInfo),
/* harmony export */   consoleDevWarn: () => (/* binding */ consoleDevWarn),
/* harmony export */   consoleError: () => (/* binding */ consoleError),
/* harmony export */   createEvent: () => (/* binding */ createEvent),
/* harmony export */   defineCustomElement: () => (/* binding */ defineCustomElement),
/* harmony export */   disconnectedCallback: () => (/* binding */ disconnectedCallback),
/* harmony export */   doc: () => (/* binding */ doc),
/* harmony export */   forceModeUpdate: () => (/* binding */ forceModeUpdate),
/* harmony export */   forceUpdate: () => (/* binding */ forceUpdate),
/* harmony export */   getAssetPath: () => (/* binding */ getAssetPath),
/* harmony export */   getElement: () => (/* binding */ getElement),
/* harmony export */   getHostRef: () => (/* binding */ getHostRef),
/* harmony export */   getMode: () => (/* binding */ getMode),
/* harmony export */   getRenderingRef: () => (/* binding */ getRenderingRef),
/* harmony export */   getValue: () => (/* binding */ getValue),
/* harmony export */   h: () => (/* binding */ h),
/* harmony export */   insertVdomAnnotations: () => (/* binding */ insertVdomAnnotations),
/* harmony export */   isMemberInElement: () => (/* binding */ isMemberInElement),
/* harmony export */   loadModule: () => (/* binding */ loadModule),
/* harmony export */   modeResolutionChain: () => (/* binding */ modeResolutionChain),
/* harmony export */   nextTick: () => (/* binding */ nextTick),
/* harmony export */   parsePropertyValue: () => (/* binding */ parsePropertyValue),
/* harmony export */   plt: () => (/* binding */ plt),
/* harmony export */   postUpdateComponent: () => (/* binding */ postUpdateComponent),
/* harmony export */   promiseResolve: () => (/* binding */ promiseResolve),
/* harmony export */   proxyComponent: () => (/* binding */ proxyComponent),
/* harmony export */   proxyCustomElement: () => (/* binding */ proxyCustomElement),
/* harmony export */   readTask: () => (/* binding */ readTask),
/* harmony export */   registerHost: () => (/* binding */ registerHost),
/* harmony export */   registerInstance: () => (/* binding */ registerInstance),
/* harmony export */   renderVdom: () => (/* binding */ renderVdom),
/* harmony export */   setAssetPath: () => (/* binding */ setAssetPath),
/* harmony export */   setErrorHandler: () => (/* binding */ setErrorHandler),
/* harmony export */   setMode: () => (/* binding */ setMode),
/* harmony export */   setNonce: () => (/* binding */ setNonce),
/* harmony export */   setPlatformHelpers: () => (/* binding */ setPlatformHelpers),
/* harmony export */   setPlatformOptions: () => (/* binding */ setPlatformOptions),
/* harmony export */   setValue: () => (/* binding */ setValue),
/* harmony export */   styles: () => (/* binding */ styles),
/* harmony export */   supportsConstructableStylesheets: () => (/* binding */ supportsConstructableStylesheets),
/* harmony export */   supportsListenerOptions: () => (/* binding */ supportsListenerOptions),
/* harmony export */   supportsShadow: () => (/* binding */ supportsShadow),
/* harmony export */   win: () => (/* binding */ win),
/* harmony export */   writeTask: () => (/* binding */ writeTask)
/* harmony export */ });
/* harmony import */ var _stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @stencil/core/internal/app-data */ "./node_modules/@stencil/core/internal/app-data/index.js");
/**
 * Virtual DOM patching algorithm based on Snabbdom by
 * Simon Friis Vindum (@paldepind)
 * Licensed under the MIT License
 * https://github.com/snabbdom/snabbdom/blob/master/LICENSE
 *
 * Modified for Stencil's renderer and slot projection
 */
let scopeId;
let contentRef;
let hostTagName;
let customError;
let i = 0;
let useNativeShadowDom = false;
let checkSlotFallbackVisibility = false;
let checkSlotRelocate = false;
let isSvgMode = false;
let renderingRef = null;
let queueCongestion = 0;
let queuePending = false;
/*
 Stencil Client Platform v4.7.2 | MIT Licensed | https://stenciljs.com
 */

const Build = {
    isDev: _stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.isDev ? true : false,
    isBrowser: true,
    isServer: false,
    isTesting: _stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.isTesting ? true : false,
};
const getAssetPath = (path) => {
    const assetUrl = new URL(path, plt.$resourcesUrl$);
    return assetUrl.origin !== win.location.origin ? assetUrl.href : assetUrl.pathname;
};
const setAssetPath = (path) => (plt.$resourcesUrl$ = path);
const createTime = (fnName, tagName = '') => {
    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.profile && performance.mark) {
        const key = `st:${fnName}:${tagName}:${i++}`;
        // Start
        performance.mark(key);
        // End
        return () => performance.measure(`[Stencil] ${fnName}() <${tagName}>`, key);
    }
    else {
        return () => {
            return;
        };
    }
};
const uniqueTime = (key, measureText) => {
    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.profile && performance.mark) {
        if (performance.getEntriesByName(key, 'mark').length === 0) {
            performance.mark(key);
        }
        return () => {
            if (performance.getEntriesByName(measureText, 'measure').length === 0) {
                performance.measure(measureText, key);
            }
        };
    }
    else {
        return () => {
            return;
        };
    }
};
const inspect = (ref) => {
    const hostRef = getHostRef(ref);
    if (!hostRef) {
        return undefined;
    }
    const flags = hostRef.$flags$;
    const hostElement = hostRef.$hostElement$;
    return {
        renderCount: hostRef.$renderCount$,
        flags: {
            hasRendered: !!(flags & 2 /* HOST_FLAGS.hasRendered */),
            hasConnected: !!(flags & 1 /* HOST_FLAGS.hasConnected */),
            isWaitingForChildren: !!(flags & 4 /* HOST_FLAGS.isWaitingForChildren */),
            isConstructingInstance: !!(flags & 8 /* HOST_FLAGS.isConstructingInstance */),
            isQueuedForUpdate: !!(flags & 16 /* HOST_FLAGS.isQueuedForUpdate */),
            hasInitializedComponent: !!(flags & 32 /* HOST_FLAGS.hasInitializedComponent */),
            hasLoadedComponent: !!(flags & 64 /* HOST_FLAGS.hasLoadedComponent */),
            isWatchReady: !!(flags & 128 /* HOST_FLAGS.isWatchReady */),
            isListenReady: !!(flags & 256 /* HOST_FLAGS.isListenReady */),
            needsRerender: !!(flags & 512 /* HOST_FLAGS.needsRerender */),
        },
        instanceValues: hostRef.$instanceValues$,
        ancestorComponent: hostRef.$ancestorComponent$,
        hostElement,
        lazyInstance: hostRef.$lazyInstance$,
        vnode: hostRef.$vnode$,
        modeName: hostRef.$modeName$,
        onReadyPromise: hostRef.$onReadyPromise$,
        onReadyResolve: hostRef.$onReadyResolve$,
        onInstancePromise: hostRef.$onInstancePromise$,
        onInstanceResolve: hostRef.$onInstanceResolve$,
        onRenderResolve: hostRef.$onRenderResolve$,
        queuedListeners: hostRef.$queuedListeners$,
        rmListeners: hostRef.$rmListeners$,
        ['s-id']: hostElement['s-id'],
        ['s-cr']: hostElement['s-cr'],
        ['s-lr']: hostElement['s-lr'],
        ['s-p']: hostElement['s-p'],
        ['s-rc']: hostElement['s-rc'],
        ['s-sc']: hostElement['s-sc'],
    };
};
const installDevTools = () => {
    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.devTools) {
        const stencil = (win.stencil = win.stencil || {});
        const originalInspect = stencil.inspect;
        stencil.inspect = (ref) => {
            let result = inspect(ref);
            if (!result && typeof originalInspect === 'function') {
                result = originalInspect(ref);
            }
            return result;
        };
    }
};
const CONTENT_REF_ID = 'r';
const ORG_LOCATION_ID = 'o';
const SLOT_NODE_ID = 's';
const TEXT_NODE_ID = 't';
const HYDRATE_ID = 's-id';
const HYDRATED_STYLE_ID = 'sty-id';
const HYDRATE_CHILD_ID = 'c-id';
const HYDRATED_CSS = '{visibility:hidden}.hydrated{visibility:inherit}';
/**
 * Constant for styles to be globally applied to `slot-fb` elements for pseudo-slot behavior.
 *
 * Two cascading rules must be used instead of a `:not()` selector due to Stencil browser
 * support as of Stencil v4.
 */
const SLOT_FB_CSS = 'slot-fb{display:contents}slot-fb[hidden]{display:none}';
const XLINK_NS = 'http://www.w3.org/1999/xlink';
/**
 * Default style mode id
 */
/**
 * Reusable empty obj/array
 * Don't add values to these!!
 */
const EMPTY_OBJ = {};
/**
 * Namespaces
 */
const SVG_NS = 'http://www.w3.org/2000/svg';
const HTML_NS = 'http://www.w3.org/1999/xhtml';
const isDef = (v) => v != null;
/**
 * Check whether a value is a 'complex type', defined here as an object or a
 * function.
 *
 * @param o the value to check
 * @returns whether it's a complex type or not
 */
const isComplexType = (o) => {
    // https://jsperf.com/typeof-fn-object/5
    o = typeof o;
    return o === 'object' || o === 'function';
};
/**
 * Helper method for querying a `meta` tag that contains a nonce value
 * out of a DOM's head.
 *
 * @param doc The DOM containing the `head` to query against
 * @returns The content of the meta tag representing the nonce value, or `undefined` if no tag
 * exists or the tag has no content.
 */
function queryNonceMetaTagContent(doc) {
    var _a, _b, _c;
    return (_c = (_b = (_a = doc.head) === null || _a === void 0 ? void 0 : _a.querySelector('meta[name="csp-nonce"]')) === null || _b === void 0 ? void 0 : _b.getAttribute('content')) !== null && _c !== void 0 ? _c : undefined;
}
/**
 * Production h() function based on Preact by
 * Jason Miller (@developit)
 * Licensed under the MIT License
 * https://github.com/developit/preact/blob/master/LICENSE
 *
 * Modified for Stencil's compiler and vdom
 */
// export function h(nodeName: string | d.FunctionalComponent, vnodeData: d.PropsType, child?: d.ChildType): d.VNode;
// export function h(nodeName: string | d.FunctionalComponent, vnodeData: d.PropsType, ...children: d.ChildType[]): d.VNode;
const h = (nodeName, vnodeData, ...children) => {
    let child = null;
    let key = null;
    let slotName = null;
    let simple = false;
    let lastSimple = false;
    const vNodeChildren = [];
    const walk = (c) => {
        for (let i = 0; i < c.length; i++) {
            child = c[i];
            if (Array.isArray(child)) {
                walk(child);
            }
            else if (child != null && typeof child !== 'boolean') {
                if ((simple = typeof nodeName !== 'function' && !isComplexType(child))) {
                    child = String(child);
                }
                else if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.isDev && typeof nodeName !== 'function' && child.$flags$ === undefined) {
                    consoleDevError(`vNode passed as children has unexpected type.
Make sure it's using the correct h() function.
Empty objects can also be the cause, look for JSX comments that became objects.`);
                }
                if (simple && lastSimple) {
                    // If the previous child was simple (string), we merge both
                    vNodeChildren[vNodeChildren.length - 1].$text$ += child;
                }
                else {
                    // Append a new vNode, if it's text, we create a text vNode
                    vNodeChildren.push(simple ? newVNode(null, child) : child);
                }
                lastSimple = simple;
            }
        }
    };
    walk(children);
    if (vnodeData) {
        if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.isDev && nodeName === 'input') {
            validateInputProperties(vnodeData);
        }
        if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.vdomKey && vnodeData.key) {
            key = vnodeData.key;
        }
        if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.slotRelocation && vnodeData.name) {
            slotName = vnodeData.name;
        }
        // normalize class / className attributes
        if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.vdomClass) {
            const classData = vnodeData.className || vnodeData.class;
            if (classData) {
                vnodeData.class =
                    typeof classData !== 'object'
                        ? classData
                        : Object.keys(classData)
                            .filter((k) => classData[k])
                            .join(' ');
            }
        }
    }
    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.isDev && vNodeChildren.some(isHost)) {
        consoleDevError(`The <Host> must be the single root component. Make sure:
- You are NOT using hostData() and <Host> in the same component.
- <Host> is used once, and it's the single root component of the render() function.`);
    }
    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.vdomFunctional && typeof nodeName === 'function') {
        // nodeName is a functional component
        return nodeName(vnodeData === null ? {} : vnodeData, vNodeChildren, vdomFnUtils);
    }
    const vnode = newVNode(nodeName, null);
    vnode.$attrs$ = vnodeData;
    if (vNodeChildren.length > 0) {
        vnode.$children$ = vNodeChildren;
    }
    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.vdomKey) {
        vnode.$key$ = key;
    }
    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.slotRelocation) {
        vnode.$name$ = slotName;
    }
    return vnode;
};
/**
 * A utility function for creating a virtual DOM node from a tag and some
 * possible text content.
 *
 * @param tag the tag for this element
 * @param text possible text content for the node
 * @returns a newly-minted virtual DOM node
 */
const newVNode = (tag, text) => {
    const vnode = {
        $flags$: 0,
        $tag$: tag,
        $text$: text,
        $elm$: null,
        $children$: null,
    };
    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.vdomAttribute) {
        vnode.$attrs$ = null;
    }
    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.vdomKey) {
        vnode.$key$ = null;
    }
    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.slotRelocation) {
        vnode.$name$ = null;
    }
    return vnode;
};
const Host = {};
/**
 * Check whether a given node is a Host node or not
 *
 * @param node the virtual DOM node to check
 * @returns whether it's a Host node or not
 */
const isHost = (node) => node && node.$tag$ === Host;
/**
 * Implementation of {@link d.FunctionalUtilities} for Stencil's VDom.
 *
 * Note that these functions convert from {@link d.VNode} to
 * {@link d.ChildNode} to give functional component developers a friendly
 * interface.
 */
const vdomFnUtils = {
    forEach: (children, cb) => children.map(convertToPublic).forEach(cb),
    map: (children, cb) => children.map(convertToPublic).map(cb).map(convertToPrivate),
};
/**
 * Convert a {@link d.VNode} to a {@link d.ChildNode} in order to present a
 * friendlier public interface (hence, 'convertToPublic').
 *
 * @param node the virtual DOM node to convert
 * @returns a converted child node
 */
const convertToPublic = (node) => ({
    vattrs: node.$attrs$,
    vchildren: node.$children$,
    vkey: node.$key$,
    vname: node.$name$,
    vtag: node.$tag$,
    vtext: node.$text$,
});
/**
 * Convert a {@link d.ChildNode} back to an equivalent {@link d.VNode} in
 * order to use the resulting object in the virtual DOM. The initial object was
 * likely created as part of presenting a public API, so converting it back
 * involved making it 'private' again (hence, `convertToPrivate`).
 *
 * @param node the child node to convert
 * @returns a converted virtual DOM node
 */
const convertToPrivate = (node) => {
    if (typeof node.vtag === 'function') {
        const vnodeData = Object.assign({}, node.vattrs);
        if (node.vkey) {
            vnodeData.key = node.vkey;
        }
        if (node.vname) {
            vnodeData.name = node.vname;
        }
        return h(node.vtag, vnodeData, ...(node.vchildren || []));
    }
    const vnode = newVNode(node.vtag, node.vtext);
    vnode.$attrs$ = node.vattrs;
    vnode.$children$ = node.vchildren;
    vnode.$key$ = node.vkey;
    vnode.$name$ = node.vname;
    return vnode;
};
/**
 * Validates the ordering of attributes on an input element
 *
 * @param inputElm the element to validate
 */
const validateInputProperties = (inputElm) => {
    const props = Object.keys(inputElm);
    const value = props.indexOf('value');
    if (value === -1) {
        return;
    }
    const typeIndex = props.indexOf('type');
    const minIndex = props.indexOf('min');
    const maxIndex = props.indexOf('max');
    const stepIndex = props.indexOf('step');
    if (value < typeIndex || value < minIndex || value < maxIndex || value < stepIndex) {
        consoleDevWarn(`The "value" prop of <input> should be set after "min", "max", "type" and "step"`);
    }
};
const initializeClientHydrate = (hostElm, tagName, hostId, hostRef) => {
    const endHydrate = createTime('hydrateClient', tagName);
    const shadowRoot = hostElm.shadowRoot;
    const childRenderNodes = [];
    const slotNodes = [];
    const shadowRootNodes = _stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.shadowDom && shadowRoot ? [] : null;
    const vnode = (hostRef.$vnode$ = newVNode(tagName, null));
    if (!plt.$orgLocNodes$) {
        initializeDocumentHydrate(doc.body, (plt.$orgLocNodes$ = new Map()));
    }
    hostElm[HYDRATE_ID] = hostId;
    hostElm.removeAttribute(HYDRATE_ID);
    clientHydrate(vnode, childRenderNodes, slotNodes, shadowRootNodes, hostElm, hostElm, hostId);
    childRenderNodes.map((c) => {
        const orgLocationId = c.$hostId$ + '.' + c.$nodeId$;
        const orgLocationNode = plt.$orgLocNodes$.get(orgLocationId);
        const node = c.$elm$;
        if (orgLocationNode && supportsShadow && orgLocationNode['s-en'] === '') {
            orgLocationNode.parentNode.insertBefore(node, orgLocationNode.nextSibling);
        }
        if (!shadowRoot) {
            node['s-hn'] = tagName;
            if (orgLocationNode) {
                node['s-ol'] = orgLocationNode;
                node['s-ol']['s-nr'] = node;
            }
        }
        plt.$orgLocNodes$.delete(orgLocationId);
    });
    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.shadowDom && shadowRoot) {
        shadowRootNodes.map((shadowRootNode) => {
            if (shadowRootNode) {
                shadowRoot.appendChild(shadowRootNode);
            }
        });
    }
    endHydrate();
};
const clientHydrate = (parentVNode, childRenderNodes, slotNodes, shadowRootNodes, hostElm, node, hostId) => {
    let childNodeType;
    let childIdSplt;
    let childVNode;
    let i;
    if (node.nodeType === 1 /* NODE_TYPE.ElementNode */) {
        childNodeType = node.getAttribute(HYDRATE_CHILD_ID);
        if (childNodeType) {
            // got the node data from the element's attribute
            // `${hostId}.${nodeId}.${depth}.${index}`
            childIdSplt = childNodeType.split('.');
            if (childIdSplt[0] === hostId || childIdSplt[0] === '0') {
                childVNode = {
                    $flags$: 0,
                    $hostId$: childIdSplt[0],
                    $nodeId$: childIdSplt[1],
                    $depth$: childIdSplt[2],
                    $index$: childIdSplt[3],
                    $tag$: node.tagName.toLowerCase(),
                    $elm$: node,
                    $attrs$: null,
                    $children$: null,
                    $key$: null,
                    $name$: null,
                    $text$: null,
                };
                childRenderNodes.push(childVNode);
                node.removeAttribute(HYDRATE_CHILD_ID);
                // this is a new child vnode
                // so ensure its parent vnode has the vchildren array
                if (!parentVNode.$children$) {
                    parentVNode.$children$ = [];
                }
                // add our child vnode to a specific index of the vnode's children
                parentVNode.$children$[childVNode.$index$] = childVNode;
                // this is now the new parent vnode for all the next child checks
                parentVNode = childVNode;
                if (shadowRootNodes && childVNode.$depth$ === '0') {
                    shadowRootNodes[childVNode.$index$] = childVNode.$elm$;
                }
            }
        }
        // recursively drill down, end to start so we can remove nodes
        for (i = node.childNodes.length - 1; i >= 0; i--) {
            clientHydrate(parentVNode, childRenderNodes, slotNodes, shadowRootNodes, hostElm, node.childNodes[i], hostId);
        }
        if (node.shadowRoot) {
            // keep drilling down through the shadow root nodes
            for (i = node.shadowRoot.childNodes.length - 1; i >= 0; i--) {
                clientHydrate(parentVNode, childRenderNodes, slotNodes, shadowRootNodes, hostElm, node.shadowRoot.childNodes[i], hostId);
            }
        }
    }
    else if (node.nodeType === 8 /* NODE_TYPE.CommentNode */) {
        // `${COMMENT_TYPE}.${hostId}.${nodeId}.${depth}.${index}`
        childIdSplt = node.nodeValue.split('.');
        if (childIdSplt[1] === hostId || childIdSplt[1] === '0') {
            // comment node for either the host id or a 0 host id
            childNodeType = childIdSplt[0];
            childVNode = {
                $flags$: 0,
                $hostId$: childIdSplt[1],
                $nodeId$: childIdSplt[2],
                $depth$: childIdSplt[3],
                $index$: childIdSplt[4],
                $elm$: node,
                $attrs$: null,
                $children$: null,
                $key$: null,
                $name$: null,
                $tag$: null,
                $text$: null,
            };
            if (childNodeType === TEXT_NODE_ID) {
                childVNode.$elm$ = node.nextSibling;
                if (childVNode.$elm$ && childVNode.$elm$.nodeType === 3 /* NODE_TYPE.TextNode */) {
                    childVNode.$text$ = childVNode.$elm$.textContent;
                    childRenderNodes.push(childVNode);
                    // remove the text comment since it's no longer needed
                    node.remove();
                    if (!parentVNode.$children$) {
                        parentVNode.$children$ = [];
                    }
                    parentVNode.$children$[childVNode.$index$] = childVNode;
                    if (shadowRootNodes && childVNode.$depth$ === '0') {
                        shadowRootNodes[childVNode.$index$] = childVNode.$elm$;
                    }
                }
            }
            else if (childVNode.$hostId$ === hostId) {
                // this comment node is specifically for this host id
                if (childNodeType === SLOT_NODE_ID) {
                    // `${SLOT_NODE_ID}.${hostId}.${nodeId}.${depth}.${index}.${slotName}`;
                    childVNode.$tag$ = 'slot';
                    if (childIdSplt[5]) {
                        node['s-sn'] = childVNode.$name$ = childIdSplt[5];
                    }
                    else {
                        node['s-sn'] = '';
                    }
                    node['s-sr'] = true;
                    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.shadowDom && shadowRootNodes) {
                        // browser support shadowRoot and this is a shadow dom component
                        // create an actual slot element
                        childVNode.$elm$ = doc.createElement(childVNode.$tag$);
                        if (childVNode.$name$) {
                            // add the slot name attribute
                            childVNode.$elm$.setAttribute('name', childVNode.$name$);
                        }
                        // insert the new slot element before the slot comment
                        node.parentNode.insertBefore(childVNode.$elm$, node);
                        // remove the slot comment since it's not needed for shadow
                        node.remove();
                        if (childVNode.$depth$ === '0') {
                            shadowRootNodes[childVNode.$index$] = childVNode.$elm$;
                        }
                    }
                    slotNodes.push(childVNode);
                    if (!parentVNode.$children$) {
                        parentVNode.$children$ = [];
                    }
                    parentVNode.$children$[childVNode.$index$] = childVNode;
                }
                else if (childNodeType === CONTENT_REF_ID) {
                    // `${CONTENT_REF_ID}.${hostId}`;
                    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.shadowDom && shadowRootNodes) {
                        // remove the content ref comment since it's not needed for shadow
                        node.remove();
                    }
                    else if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.slotRelocation) {
                        hostElm['s-cr'] = node;
                        node['s-cn'] = true;
                    }
                }
            }
        }
    }
    else if (parentVNode && parentVNode.$tag$ === 'style') {
        const vnode = newVNode(null, node.textContent);
        vnode.$elm$ = node;
        vnode.$index$ = '0';
        parentVNode.$children$ = [vnode];
    }
};
const initializeDocumentHydrate = (node, orgLocNodes) => {
    if (node.nodeType === 1 /* NODE_TYPE.ElementNode */) {
        let i = 0;
        for (; i < node.childNodes.length; i++) {
            initializeDocumentHydrate(node.childNodes[i], orgLocNodes);
        }
        if (node.shadowRoot) {
            for (i = 0; i < node.shadowRoot.childNodes.length; i++) {
                initializeDocumentHydrate(node.shadowRoot.childNodes[i], orgLocNodes);
            }
        }
    }
    else if (node.nodeType === 8 /* NODE_TYPE.CommentNode */) {
        const childIdSplt = node.nodeValue.split('.');
        if (childIdSplt[0] === ORG_LOCATION_ID) {
            orgLocNodes.set(childIdSplt[1] + '.' + childIdSplt[2], node);
            node.nodeValue = '';
            // useful to know if the original location is
            // the root light-dom of a shadow dom component
            node['s-en'] = childIdSplt[3];
        }
    }
};
// Private
const computeMode = (elm) => modeResolutionChain.map((h) => h(elm)).find((m) => !!m);
// Public
const setMode = (handler) => modeResolutionChain.push(handler);
const getMode = (ref) => getHostRef(ref).$modeName$;
/**
 * Parse a new property value for a given property type.
 *
 * While the prop value can reasonably be expected to be of `any` type as far as TypeScript's type checker is concerned,
 * it is not safe to assume that the string returned by evaluating `typeof propValue` matches:
 *   1. `any`, the type given to `propValue` in the function signature
 *   2. the type stored from `propType`.
 *
 * This function provides the capability to parse/coerce a property's value to potentially any other JavaScript type.
 *
 * Property values represented in TSX preserve their type information. In the example below, the number 0 is passed to
 * a component. This `propValue` will preserve its type information (`typeof propValue === 'number'`). Note that is
 * based on the type of the value being passed in, not the type declared of the class member decorated with `@Prop`.
 * ```tsx
 * <my-cmp prop-val={0}></my-cmp>
 * ```
 *
 * HTML prop values on the other hand, will always a string
 *
 * @param propValue the new value to coerce to some type
 * @param propType the type of the prop, expressed as a binary number
 * @returns the parsed/coerced value
 */
const parsePropertyValue = (propValue, propType) => {
    // ensure this value is of the correct prop type
    if (propValue != null && !isComplexType(propValue)) {
        if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.propBoolean && propType & 4 /* MEMBER_FLAGS.Boolean */) {
            // per the HTML spec, any string value means it is a boolean true value
            // but we'll cheat here and say that the string "false" is the boolean false
            return propValue === 'false' ? false : propValue === '' || !!propValue;
        }
        if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.propNumber && propType & 2 /* MEMBER_FLAGS.Number */) {
            // force it to be a number
            return parseFloat(propValue);
        }
        if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.propString && propType & 1 /* MEMBER_FLAGS.String */) {
            // could have been passed as a number or boolean
            // but we still want it as a string
            return String(propValue);
        }
        // redundant return here for better minification
        return propValue;
    }
    // not sure exactly what type we want
    // so no need to change to a different type
    return propValue;
};
const getElement = (ref) => (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.lazyLoad ? getHostRef(ref).$hostElement$ : ref);
const createEvent = (ref, name, flags) => {
    const elm = getElement(ref);
    return {
        emit: (detail) => {
            if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.isDev && !elm.isConnected) {
                consoleDevWarn(`The "${name}" event was emitted, but the dispatcher node is no longer connected to the dom.`);
            }
            return emitEvent(elm, name, {
                bubbles: !!(flags & 4 /* EVENT_FLAGS.Bubbles */),
                composed: !!(flags & 2 /* EVENT_FLAGS.Composed */),
                cancelable: !!(flags & 1 /* EVENT_FLAGS.Cancellable */),
                detail,
            });
        },
    };
};
/**
 * Helper function to create & dispatch a custom Event on a provided target
 * @param elm the target of the Event
 * @param name the name to give the custom Event
 * @param opts options for configuring a custom Event
 * @returns the custom Event
 */
const emitEvent = (elm, name, opts) => {
    const ev = plt.ce(name, opts);
    elm.dispatchEvent(ev);
    return ev;
};
const rootAppliedStyles = /*@__PURE__*/ new WeakMap();
const registerStyle = (scopeId, cssText, allowCS) => {
    let style = styles.get(scopeId);
    if (supportsConstructableStylesheets && allowCS) {
        style = (style || new CSSStyleSheet());
        if (typeof style === 'string') {
            style = cssText;
        }
        else {
            style.replaceSync(cssText);
        }
    }
    else {
        style = cssText;
    }
    styles.set(scopeId, style);
};
const addStyle = (styleContainerNode, cmpMeta, mode) => {
    var _a;
    const scopeId = getScopeId(cmpMeta, mode);
    const style = styles.get(scopeId);
    if (!_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.attachStyles) {
        return scopeId;
    }
    // if an element is NOT connected then getRootNode() will return the wrong root node
    // so the fallback is to always use the document for the root node in those cases
    styleContainerNode = styleContainerNode.nodeType === 11 /* NODE_TYPE.DocumentFragment */ ? styleContainerNode : doc;
    if (style) {
        if (typeof style === 'string') {
            styleContainerNode = styleContainerNode.head || styleContainerNode;
            let appliedStyles = rootAppliedStyles.get(styleContainerNode);
            let styleElm;
            if (!appliedStyles) {
                rootAppliedStyles.set(styleContainerNode, (appliedStyles = new Set()));
            }
            if (!appliedStyles.has(scopeId)) {
                if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.hydrateClientSide &&
                    styleContainerNode.host &&
                    (styleElm = styleContainerNode.querySelector(`[${HYDRATED_STYLE_ID}="${scopeId}"]`))) {
                    // This is only happening on native shadow-dom, do not needs CSS var shim
                    styleElm.innerHTML = style;
                }
                else {
                    styleElm = doc.createElement('style');
                    styleElm.innerHTML = style;
                    // Apply CSP nonce to the style tag if it exists
                    const nonce = (_a = plt.$nonce$) !== null && _a !== void 0 ? _a : queryNonceMetaTagContent(doc);
                    if (nonce != null) {
                        styleElm.setAttribute('nonce', nonce);
                    }
                    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.hydrateServerSide || _stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.hotModuleReplacement) {
                        styleElm.setAttribute(HYDRATED_STYLE_ID, scopeId);
                    }
                    styleContainerNode.insertBefore(styleElm, styleContainerNode.querySelector('link'));
                }
                // Add styles for `slot-fb` elements if we're using slots outside the Shadow DOM
                if (cmpMeta.$flags$ & 4 /* CMP_FLAGS.hasSlotRelocation */) {
                    styleElm.innerHTML += SLOT_FB_CSS;
                }
                if (appliedStyles) {
                    appliedStyles.add(scopeId);
                }
            }
        }
        else if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.constructableCSS && !styleContainerNode.adoptedStyleSheets.includes(style)) {
            styleContainerNode.adoptedStyleSheets = [...styleContainerNode.adoptedStyleSheets, style];
        }
    }
    return scopeId;
};
const attachStyles = (hostRef) => {
    const cmpMeta = hostRef.$cmpMeta$;
    const elm = hostRef.$hostElement$;
    const flags = cmpMeta.$flags$;
    const endAttachStyles = createTime('attachStyles', cmpMeta.$tagName$);
    const scopeId = addStyle(_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.shadowDom && supportsShadow && elm.shadowRoot ? elm.shadowRoot : elm.getRootNode(), cmpMeta, hostRef.$modeName$);
    if ((_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.shadowDom || _stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.scoped) && _stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.cssAnnotations && flags & 10 /* CMP_FLAGS.needsScopedEncapsulation */) {
        // only required when we're NOT using native shadow dom (slot)
        // or this browser doesn't support native shadow dom
        // and this host element was NOT created with SSR
        // let's pick out the inner content for slot projection
        // create a node to represent where the original
        // content was first placed, which is useful later on
        // DOM WRITE!!
        elm['s-sc'] = scopeId;
        elm.classList.add(scopeId + '-h');
        if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.scoped && flags & 2 /* CMP_FLAGS.scopedCssEncapsulation */) {
            elm.classList.add(scopeId + '-s');
        }
    }
    endAttachStyles();
};
const getScopeId = (cmp, mode) => 'sc-' + (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.mode && mode && cmp.$flags$ & 32 /* CMP_FLAGS.hasMode */ ? cmp.$tagName$ + '-' + mode : cmp.$tagName$);
const convertScopedToShadow = (css) => css.replace(/\/\*!@([^\/]+)\*\/[^\{]+\{/g, '$1{');
/**
 * Production setAccessor() function based on Preact by
 * Jason Miller (@developit)
 * Licensed under the MIT License
 * https://github.com/developit/preact/blob/master/LICENSE
 *
 * Modified for Stencil's compiler and vdom
 */
/**
 * When running a VDom render set properties present on a VDom node onto the
 * corresponding HTML element.
 *
 * Note that this function has special functionality for the `class`,
 * `style`, `key`, and `ref` attributes, as well as event handlers (like
 * `onClick`, etc). All others are just passed through as-is.
 *
 * @param elm the HTMLElement onto which attributes should be set
 * @param memberName the name of the attribute to set
 * @param oldValue the old value for the attribute
 * @param newValue the new value for the attribute
 * @param isSvg whether we're in an svg context or not
 * @param flags bitflags for Vdom variables
 */
const setAccessor = (elm, memberName, oldValue, newValue, isSvg, flags) => {
    if (oldValue !== newValue) {
        let isProp = isMemberInElement(elm, memberName);
        let ln = memberName.toLowerCase();
        if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.vdomClass && memberName === 'class') {
            const classList = elm.classList;
            const oldClasses = parseClassList(oldValue);
            const newClasses = parseClassList(newValue);
            classList.remove(...oldClasses.filter((c) => c && !newClasses.includes(c)));
            classList.add(...newClasses.filter((c) => c && !oldClasses.includes(c)));
        }
        else if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.vdomStyle && memberName === 'style') {
            // update style attribute, css properties and values
            if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.updatable) {
                for (const prop in oldValue) {
                    if (!newValue || newValue[prop] == null) {
                        if (!_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.hydrateServerSide && prop.includes('-')) {
                            elm.style.removeProperty(prop);
                        }
                        else {
                            elm.style[prop] = '';
                        }
                    }
                }
            }
            for (const prop in newValue) {
                if (!oldValue || newValue[prop] !== oldValue[prop]) {
                    if (!_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.hydrateServerSide && prop.includes('-')) {
                        elm.style.setProperty(prop, newValue[prop]);
                    }
                    else {
                        elm.style[prop] = newValue[prop];
                    }
                }
            }
        }
        else if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.vdomKey && memberName === 'key')
            ;
        else if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.vdomRef && memberName === 'ref') {
            // minifier will clean this up
            if (newValue) {
                newValue(elm);
            }
        }
        else if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.vdomListener &&
            (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.lazyLoad ? !isProp : !elm.__lookupSetter__(memberName)) &&
            memberName[0] === 'o' &&
            memberName[1] === 'n') {
            // Event Handlers
            // so if the member name starts with "on" and the 3rd characters is
            // a capital letter, and it's not already a member on the element,
            // then we're assuming it's an event listener
            if (memberName[2] === '-') {
                // on- prefixed events
                // allows to be explicit about the dom event to listen without any magic
                // under the hood:
                // <my-cmp on-click> // listens for "click"
                // <my-cmp on-Click> // listens for "Click"
                // <my-cmp on-ionChange> // listens for "ionChange"
                // <my-cmp on-EVENTS> // listens for "EVENTS"
                memberName = memberName.slice(3);
            }
            else if (isMemberInElement(win, ln)) {
                // standard event
                // the JSX attribute could have been "onMouseOver" and the
                // member name "onmouseover" is on the window's prototype
                // so let's add the listener "mouseover", which is all lowercased
                memberName = ln.slice(2);
            }
            else {
                // custom event
                // the JSX attribute could have been "onMyCustomEvent"
                // so let's trim off the "on" prefix and lowercase the first character
                // and add the listener "myCustomEvent"
                // except for the first character, we keep the event name case
                memberName = ln[2] + memberName.slice(3);
            }
            if (oldValue || newValue) {
                // Need to account for "capture" events.
                // If the event name ends with "Capture", we'll update the name to remove
                // the "Capture" suffix and make sure the event listener is setup to handle the capture event.
                const capture = memberName.endsWith(CAPTURE_EVENT_SUFFIX);
                // Make sure we only replace the last instance of "Capture"
                memberName = memberName.replace(CAPTURE_EVENT_REGEX, '');
                if (oldValue) {
                    plt.rel(elm, memberName, oldValue, capture);
                }
                if (newValue) {
                    plt.ael(elm, memberName, newValue, capture);
                }
            }
        }
        else if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.vdomPropOrAttr) {
            // Set property if it exists and it's not a SVG
            const isComplex = isComplexType(newValue);
            if ((isProp || (isComplex && newValue !== null)) && !isSvg) {
                try {
                    if (!elm.tagName.includes('-')) {
                        const n = newValue == null ? '' : newValue;
                        // Workaround for Safari, moving the <input> caret when re-assigning the same valued
                        if (memberName === 'list') {
                            isProp = false;
                        }
                        else if (oldValue == null || elm[memberName] != n) {
                            elm[memberName] = n;
                        }
                    }
                    else {
                        elm[memberName] = newValue;
                    }
                }
                catch (e) { }
            }
            /**
             * Need to manually update attribute if:
             * - memberName is not an attribute
             * - if we are rendering the host element in order to reflect attribute
             * - if it's a SVG, since properties might not work in <svg>
             * - if the newValue is null/undefined or 'false'.
             */
            let xlink = false;
            if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.vdomXlink) {
                if (ln !== (ln = ln.replace(/^xlink\:?/, ''))) {
                    memberName = ln;
                    xlink = true;
                }
            }
            if (newValue == null || newValue === false) {
                if (newValue !== false || elm.getAttribute(memberName) === '') {
                    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.vdomXlink && xlink) {
                        elm.removeAttributeNS(XLINK_NS, memberName);
                    }
                    else {
                        elm.removeAttribute(memberName);
                    }
                }
            }
            else if ((!isProp || flags & 4 /* VNODE_FLAGS.isHost */ || isSvg) && !isComplex) {
                newValue = newValue === true ? '' : newValue;
                if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.vdomXlink && xlink) {
                    elm.setAttributeNS(XLINK_NS, memberName, newValue);
                }
                else {
                    elm.setAttribute(memberName, newValue);
                }
            }
        }
    }
};
const parseClassListRegex = /\s/;
const parseClassList = (value) => (!value ? [] : value.split(parseClassListRegex));
const CAPTURE_EVENT_SUFFIX = 'Capture';
const CAPTURE_EVENT_REGEX = new RegExp(CAPTURE_EVENT_SUFFIX + '$');
const updateElement = (oldVnode, newVnode, isSvgMode, memberName) => {
    // if the element passed in is a shadow root, which is a document fragment
    // then we want to be adding attrs/props to the shadow root's "host" element
    // if it's not a shadow root, then we add attrs/props to the same element
    const elm = newVnode.$elm$.nodeType === 11 /* NODE_TYPE.DocumentFragment */ && newVnode.$elm$.host
        ? newVnode.$elm$.host
        : newVnode.$elm$;
    const oldVnodeAttrs = (oldVnode && oldVnode.$attrs$) || EMPTY_OBJ;
    const newVnodeAttrs = newVnode.$attrs$ || EMPTY_OBJ;
    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.updatable) {
        // remove attributes no longer present on the vnode by setting them to undefined
        for (memberName in oldVnodeAttrs) {
            if (!(memberName in newVnodeAttrs)) {
                setAccessor(elm, memberName, oldVnodeAttrs[memberName], undefined, isSvgMode, newVnode.$flags$);
            }
        }
    }
    // add new & update changed attributes
    for (memberName in newVnodeAttrs) {
        setAccessor(elm, memberName, oldVnodeAttrs[memberName], newVnodeAttrs[memberName], isSvgMode, newVnode.$flags$);
    }
};
/**
 * Create a DOM Node corresponding to one of the children of a given VNode.
 *
 * @param oldParentVNode the parent VNode from the previous render
 * @param newParentVNode the parent VNode from the current render
 * @param childIndex the index of the VNode, in the _new_ parent node's
 * children, for which we will create a new DOM node
 * @param parentElm the parent DOM node which our new node will be a child of
 * @returns the newly created node
 */
const createElm = (oldParentVNode, newParentVNode, childIndex, parentElm) => {
    var _a;
    // tslint:disable-next-line: prefer-const
    const newVNode = newParentVNode.$children$[childIndex];
    let i = 0;
    let elm;
    let childNode;
    let oldVNode;
    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.slotRelocation && !useNativeShadowDom) {
        // remember for later we need to check to relocate nodes
        checkSlotRelocate = true;
        if (newVNode.$tag$ === 'slot') {
            if (scopeId) {
                // scoped css needs to add its scoped id to the parent element
                parentElm.classList.add(scopeId + '-s');
            }
            newVNode.$flags$ |= newVNode.$children$
                ? // slot element has fallback content
                    2 /* VNODE_FLAGS.isSlotFallback */
                : // slot element does not have fallback content
                    1 /* VNODE_FLAGS.isSlotReference */;
        }
    }
    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.isDev && newVNode.$elm$) {
        consoleDevError(`The JSX ${newVNode.$text$ !== null ? `"${newVNode.$text$}" text` : `"${newVNode.$tag$}" element`} node should not be shared within the same renderer. The renderer caches element lookups in order to improve performance. However, a side effect from this is that the exact same JSX node should not be reused. For more information please see https://stenciljs.com/docs/templating-jsx#avoid-shared-jsx-nodes`);
    }
    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.vdomText && newVNode.$text$ !== null) {
        // create text node
        elm = newVNode.$elm$ = doc.createTextNode(newVNode.$text$);
    }
    else if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.slotRelocation && newVNode.$flags$ & 1 /* VNODE_FLAGS.isSlotReference */) {
        // create a slot reference node
        elm = newVNode.$elm$ =
            _stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.isDebug || _stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.hydrateServerSide ? slotReferenceDebugNode(newVNode) : doc.createTextNode('');
    }
    else {
        if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.svg && !isSvgMode) {
            isSvgMode = newVNode.$tag$ === 'svg';
        }
        // create element
        elm = newVNode.$elm$ = (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.svg
            ? doc.createElementNS(isSvgMode ? SVG_NS : HTML_NS, _stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.slotRelocation && newVNode.$flags$ & 2 /* VNODE_FLAGS.isSlotFallback */
                ? 'slot-fb'
                : newVNode.$tag$)
            : doc.createElement(_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.slotRelocation && newVNode.$flags$ & 2 /* VNODE_FLAGS.isSlotFallback */
                ? 'slot-fb'
                : newVNode.$tag$));
        if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.svg && isSvgMode && newVNode.$tag$ === 'foreignObject') {
            isSvgMode = false;
        }
        // add css classes, attrs, props, listeners, etc.
        if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.vdomAttribute) {
            updateElement(null, newVNode, isSvgMode);
        }
        if ((_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.shadowDom || _stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.scoped) && isDef(scopeId) && elm['s-si'] !== scopeId) {
            // if there is a scopeId and this is the initial render
            // then let's add the scopeId as a css class
            elm.classList.add((elm['s-si'] = scopeId));
        }
        if (newVNode.$children$) {
            for (i = 0; i < newVNode.$children$.length; ++i) {
                // create the node
                childNode = createElm(oldParentVNode, newVNode, i, elm);
                // return node could have been null
                if (childNode) {
                    // append our new node
                    elm.appendChild(childNode);
                }
            }
        }
        if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.svg) {
            if (newVNode.$tag$ === 'svg') {
                // Only reset the SVG context when we're exiting <svg> element
                isSvgMode = false;
            }
            else if (elm.tagName === 'foreignObject') {
                // Reenter SVG context when we're exiting <foreignObject> element
                isSvgMode = true;
            }
        }
    }
    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.slotRelocation) {
        elm['s-hn'] = hostTagName;
        if (newVNode.$flags$ & (2 /* VNODE_FLAGS.isSlotFallback */ | 1 /* VNODE_FLAGS.isSlotReference */)) {
            // remember the content reference comment
            elm['s-sr'] = true;
            // Persist the name of the slot that this slot was going to be projected into.
            elm['s-fs'] = (_a = newVNode.$attrs$) === null || _a === void 0 ? void 0 : _a.slot;
            // remember the content reference comment
            elm['s-cr'] = contentRef;
            // remember the slot name, or empty string for default slot
            elm['s-sn'] = newVNode.$name$ || '';
            // check if we've got an old vnode for this slot
            oldVNode = oldParentVNode && oldParentVNode.$children$ && oldParentVNode.$children$[childIndex];
            if (oldVNode && oldVNode.$tag$ === newVNode.$tag$ && oldParentVNode.$elm$) {
                // we've got an old slot vnode and the wrapper is being replaced
                // so let's move the old slot content back to it's original location
                putBackInOriginalLocation(oldParentVNode.$elm$, false);
            }
        }
    }
    return elm;
};
const putBackInOriginalLocation = (parentElm, recursive) => {
    var _a;
    plt.$flags$ |= 1 /* PLATFORM_FLAGS.isTmpDisconnected */;
    const oldSlotChildNodes = parentElm.childNodes;
    for (let i = oldSlotChildNodes.length - 1; i >= 0; i--) {
        const childNode = oldSlotChildNodes[i];
        if (childNode['s-hn'] !== hostTagName && childNode['s-ol']) {
            // // this child node in the old element is from another component
            // // remove this node from the old slot's parent
            // childNode.remove();
            // and relocate it back to it's original location
            parentReferenceNode(childNode).insertBefore(childNode, referenceNode(childNode));
            // remove the old original location comment entirely
            // later on the patch function will know what to do
            // and move this to the correct spot if need be
            childNode['s-ol'].remove();
            childNode['s-ol'] = undefined;
            // Reset so we can correctly move the node around again.
            childNode['s-sh'] = undefined;
            // When putting an element node back in its original location,
            // we need to reset the `slot` attribute back to the value it originally had
            // so we can correctly relocate it again in the future
            if (childNode.nodeType === 1 /* NODE_TYPE.ElementNode */) {
                childNode.setAttribute('slot', (_a = childNode['s-sn']) !== null && _a !== void 0 ? _a : '');
            }
            checkSlotRelocate = true;
        }
        if (recursive) {
            putBackInOriginalLocation(childNode, recursive);
        }
    }
    plt.$flags$ &= ~1 /* PLATFORM_FLAGS.isTmpDisconnected */;
};
/**
 * Create DOM nodes corresponding to a list of {@link d.Vnode} objects and
 * add them to the DOM in the appropriate place.
 *
 * @param parentElm the DOM node which should be used as a parent for the new
 * DOM nodes
 * @param before a child of the `parentElm` which the new children should be
 * inserted before (optional)
 * @param parentVNode the parent virtual DOM node
 * @param vnodes the new child virtual DOM nodes to produce DOM nodes for
 * @param startIdx the index in the child virtual DOM nodes at which to start
 * creating DOM nodes (inclusive)
 * @param endIdx the index in the child virtual DOM nodes at which to stop
 * creating DOM nodes (inclusive)
 */
const addVnodes = (parentElm, before, parentVNode, vnodes, startIdx, endIdx) => {
    let containerElm = ((_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.slotRelocation && parentElm['s-cr'] && parentElm['s-cr'].parentNode) || parentElm);
    let childNode;
    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.shadowDom && containerElm.shadowRoot && containerElm.tagName === hostTagName) {
        containerElm = containerElm.shadowRoot;
    }
    for (; startIdx <= endIdx; ++startIdx) {
        if (vnodes[startIdx]) {
            childNode = createElm(null, parentVNode, startIdx, parentElm);
            if (childNode) {
                vnodes[startIdx].$elm$ = childNode;
                containerElm.insertBefore(childNode, _stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.slotRelocation ? referenceNode(before) : before);
            }
        }
    }
};
/**
 * Remove the DOM elements corresponding to a list of {@link d.VNode} objects.
 * This can be used to, for instance, clean up after a list of children which
 * should no longer be shown.
 *
 * This function also handles some of Stencil's slot relocation logic.
 *
 * @param vnodes a list of virtual DOM nodes to remove
 * @param startIdx the index at which to start removing nodes (inclusive)
 * @param endIdx the index at which to stop removing nodes (inclusive)
 */
const removeVnodes = (vnodes, startIdx, endIdx) => {
    for (let index = startIdx; index <= endIdx; ++index) {
        const vnode = vnodes[index];
        if (vnode) {
            const elm = vnode.$elm$;
            nullifyVNodeRefs(vnode);
            if (elm) {
                if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.slotRelocation) {
                    // we're removing this element
                    // so it's possible we need to show slot fallback content now
                    checkSlotFallbackVisibility = true;
                    if (elm['s-ol']) {
                        // remove the original location comment
                        elm['s-ol'].remove();
                    }
                    else {
                        // it's possible that child nodes of the node
                        // that's being removed are slot nodes
                        putBackInOriginalLocation(elm, true);
                    }
                }
                // remove the vnode's element from the dom
                elm.remove();
            }
        }
    }
};
/**
 * Reconcile the children of a new VNode with the children of an old VNode by
 * traversing the two collections of children, identifying nodes that are
 * conserved or changed, calling out to `patch` to make any necessary
 * updates to the DOM, and rearranging DOM nodes as needed.
 *
 * The algorithm for reconciling children works by analyzing two 'windows' onto
 * the two arrays of children (`oldCh` and `newCh`). We keep track of the
 * 'windows' by storing start and end indices and references to the
 * corresponding array entries. Initially the two 'windows' are basically equal
 * to the entire array, but we progressively narrow the windows until there are
 * no children left to update by doing the following:
 *
 * 1. Skip any `null` entries at the beginning or end of the two arrays, so
 *    that if we have an initial array like the following we'll end up dealing
 *    only with a window bounded by the highlighted elements:
 *
 *    [null, null, VNode1 , ... , VNode2, null, null]
 *                 ^^^^^^         ^^^^^^
 *
 * 2. Check to see if the elements at the head and tail positions are equal
 *    across the windows. This will basically detect elements which haven't
 *    been added, removed, or changed position, i.e. if you had the following
 *    VNode elements (represented as HTML):
 *
 *    oldVNode: `<div><p><span>HEY</span></p></div>`
 *    newVNode: `<div><p><span>THERE</span></p></div>`
 *
 *    Then when comparing the children of the `<div>` tag we check the equality
 *    of the VNodes corresponding to the `<p>` tags and, since they are the
 *    same tag in the same position, we'd be able to avoid completely
 *    re-rendering the subtree under them with a new DOM element and would just
 *    call out to `patch` to handle reconciling their children and so on.
 *
 * 3. Check, for both windows, to see if the element at the beginning of the
 *    window corresponds to the element at the end of the other window. This is
 *    a heuristic which will let us identify _some_ situations in which
 *    elements have changed position, for instance it _should_ detect that the
 *    children nodes themselves have not changed but merely moved in the
 *    following example:
 *
 *    oldVNode: `<div><element-one /><element-two /></div>`
 *    newVNode: `<div><element-two /><element-one /></div>`
 *
 *    If we find cases like this then we also need to move the concrete DOM
 *    elements corresponding to the moved children to write the re-order to the
 *    DOM.
 *
 * 4. Finally, if VNodes have the `key` attribute set on them we check for any
 *    nodes in the old children which have the same key as the first element in
 *    our window on the new children. If we find such a node we handle calling
 *    out to `patch`, moving relevant DOM nodes, and so on, in accordance with
 *    what we find.
 *
 * Finally, once we've narrowed our 'windows' to the point that either of them
 * collapse (i.e. they have length 0) we then handle any remaining VNode
 * insertion or deletion that needs to happen to get a DOM state that correctly
 * reflects the new child VNodes. If, for instance, after our window on the old
 * children has collapsed we still have more nodes on the new children that
 * we haven't dealt with yet then we need to add them, or if the new children
 * collapse but we still have unhandled _old_ children then we need to make
 * sure the corresponding DOM nodes are removed.
 *
 * @param parentElm the node into which the parent VNode is rendered
 * @param oldCh the old children of the parent node
 * @param newVNode the new VNode which will replace the parent
 * @param newCh the new children of the parent node
 */
const updateChildren = (parentElm, oldCh, newVNode, newCh) => {
    let oldStartIdx = 0;
    let newStartIdx = 0;
    let idxInOld = 0;
    let i = 0;
    let oldEndIdx = oldCh.length - 1;
    let oldStartVnode = oldCh[0];
    let oldEndVnode = oldCh[oldEndIdx];
    let newEndIdx = newCh.length - 1;
    let newStartVnode = newCh[0];
    let newEndVnode = newCh[newEndIdx];
    let node;
    let elmToMove;
    while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {
        if (oldStartVnode == null) {
            // VNode might have been moved left
            oldStartVnode = oldCh[++oldStartIdx];
        }
        else if (oldEndVnode == null) {
            oldEndVnode = oldCh[--oldEndIdx];
        }
        else if (newStartVnode == null) {
            newStartVnode = newCh[++newStartIdx];
        }
        else if (newEndVnode == null) {
            newEndVnode = newCh[--newEndIdx];
        }
        else if (isSameVnode(oldStartVnode, newStartVnode)) {
            // if the start nodes are the same then we should patch the new VNode
            // onto the old one, and increment our `newStartIdx` and `oldStartIdx`
            // indices to reflect that. We don't need to move any DOM Nodes around
            // since things are matched up in order.
            patch(oldStartVnode, newStartVnode);
            oldStartVnode = oldCh[++oldStartIdx];
            newStartVnode = newCh[++newStartIdx];
        }
        else if (isSameVnode(oldEndVnode, newEndVnode)) {
            // likewise, if the end nodes are the same we patch new onto old and
            // decrement our end indices, and also likewise in this case we don't
            // need to move any DOM Nodes.
            patch(oldEndVnode, newEndVnode);
            oldEndVnode = oldCh[--oldEndIdx];
            newEndVnode = newCh[--newEndIdx];
        }
        else if (isSameVnode(oldStartVnode, newEndVnode)) {
            // case: "Vnode moved right"
            //
            // We've found that the last node in our window on the new children is
            // the same VNode as the _first_ node in our window on the old children
            // we're dealing with now. Visually, this is the layout of these two
            // nodes:
            //
            // newCh: [..., newStartVnode , ... , newEndVnode , ...]
            //                                    ^^^^^^^^^^^
            // oldCh: [..., oldStartVnode , ... , oldEndVnode , ...]
            //              ^^^^^^^^^^^^^
            //
            // In this situation we need to patch `newEndVnode` onto `oldStartVnode`
            // and move the DOM element for `oldStartVnode`.
            if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.slotRelocation && (oldStartVnode.$tag$ === 'slot' || newEndVnode.$tag$ === 'slot')) {
                putBackInOriginalLocation(oldStartVnode.$elm$.parentNode, false);
            }
            patch(oldStartVnode, newEndVnode);
            // We need to move the element for `oldStartVnode` into a position which
            // will be appropriate for `newEndVnode`. For this we can use
            // `.insertBefore` and `oldEndVnode.$elm$.nextSibling`. If there is a
            // sibling for `oldEndVnode.$elm$` then we want to move the DOM node for
            // `oldStartVnode` between `oldEndVnode` and it's sibling, like so:
            //
            // <old-start-node />
            // <some-intervening-node />
            // <old-end-node />
            // <!-- ->              <-- `oldStartVnode.$elm$` should be inserted here
            // <next-sibling />
            //
            // If instead `oldEndVnode.$elm$` has no sibling then we just want to put
            // the node for `oldStartVnode` at the end of the children of
            // `parentElm`. Luckily, `Node.nextSibling` will return `null` if there
            // aren't any siblings, and passing `null` to `Node.insertBefore` will
            // append it to the children of the parent element.
            parentElm.insertBefore(oldStartVnode.$elm$, oldEndVnode.$elm$.nextSibling);
            oldStartVnode = oldCh[++oldStartIdx];
            newEndVnode = newCh[--newEndIdx];
        }
        else if (isSameVnode(oldEndVnode, newStartVnode)) {
            // case: "Vnode moved left"
            //
            // We've found that the first node in our window on the new children is
            // the same VNode as the _last_ node in our window on the old children.
            // Visually, this is the layout of these two nodes:
            //
            // newCh: [..., newStartVnode , ... , newEndVnode , ...]
            //              ^^^^^^^^^^^^^
            // oldCh: [..., oldStartVnode , ... , oldEndVnode , ...]
            //                                    ^^^^^^^^^^^
            //
            // In this situation we need to patch `newStartVnode` onto `oldEndVnode`
            // (which will handle updating any changed attributes, reconciling their
            // children etc) but we also need to move the DOM node to which
            // `oldEndVnode` corresponds.
            if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.slotRelocation && (oldStartVnode.$tag$ === 'slot' || newEndVnode.$tag$ === 'slot')) {
                putBackInOriginalLocation(oldEndVnode.$elm$.parentNode, false);
            }
            patch(oldEndVnode, newStartVnode);
            // We've already checked above if `oldStartVnode` and `newStartVnode` are
            // the same node, so since we're here we know that they are not. Thus we
            // can move the element for `oldEndVnode` _before_ the element for
            // `oldStartVnode`, leaving `oldStartVnode` to be reconciled in the
            // future.
            parentElm.insertBefore(oldEndVnode.$elm$, oldStartVnode.$elm$);
            oldEndVnode = oldCh[--oldEndIdx];
            newStartVnode = newCh[++newStartIdx];
        }
        else {
            // Here we do some checks to match up old and new nodes based on the
            // `$key$` attribute, which is set by putting a `key="my-key"` attribute
            // in the JSX for a DOM element in the implementation of a Stencil
            // component.
            //
            // First we check to see if there are any nodes in the array of old
            // children which have the same key as the first node in the new
            // children.
            idxInOld = -1;
            if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.vdomKey) {
                for (i = oldStartIdx; i <= oldEndIdx; ++i) {
                    if (oldCh[i] && oldCh[i].$key$ !== null && oldCh[i].$key$ === newStartVnode.$key$) {
                        idxInOld = i;
                        break;
                    }
                }
            }
            if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.vdomKey && idxInOld >= 0) {
                // We found a node in the old children which matches up with the first
                // node in the new children! So let's deal with that
                elmToMove = oldCh[idxInOld];
                if (elmToMove.$tag$ !== newStartVnode.$tag$) {
                    // the tag doesn't match so we'll need a new DOM element
                    node = createElm(oldCh && oldCh[newStartIdx], newVNode, idxInOld, parentElm);
                }
                else {
                    patch(elmToMove, newStartVnode);
                    // invalidate the matching old node so that we won't try to update it
                    // again later on
                    oldCh[idxInOld] = undefined;
                    node = elmToMove.$elm$;
                }
                newStartVnode = newCh[++newStartIdx];
            }
            else {
                // We either didn't find an element in the old children that matches
                // the key of the first new child OR the build is not using `key`
                // attributes at all. In either case we need to create a new element
                // for the new node.
                node = createElm(oldCh && oldCh[newStartIdx], newVNode, newStartIdx, parentElm);
                newStartVnode = newCh[++newStartIdx];
            }
            if (node) {
                // if we created a new node then handle inserting it to the DOM
                if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.slotRelocation) {
                    parentReferenceNode(oldStartVnode.$elm$).insertBefore(node, referenceNode(oldStartVnode.$elm$));
                }
                else {
                    oldStartVnode.$elm$.parentNode.insertBefore(node, oldStartVnode.$elm$);
                }
            }
        }
    }
    if (oldStartIdx > oldEndIdx) {
        // we have some more new nodes to add which don't match up with old nodes
        addVnodes(parentElm, newCh[newEndIdx + 1] == null ? null : newCh[newEndIdx + 1].$elm$, newVNode, newCh, newStartIdx, newEndIdx);
    }
    else if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.updatable && newStartIdx > newEndIdx) {
        // there are nodes in the `oldCh` array which no longer correspond to nodes
        // in the new array, so lets remove them (which entails cleaning up the
        // relevant DOM nodes)
        removeVnodes(oldCh, oldStartIdx, oldEndIdx);
    }
};
/**
 * Compare two VNodes to determine if they are the same
 *
 * **NB**: This function is an equality _heuristic_ based on the available
 * information set on the two VNodes and can be misleading under certain
 * circumstances. In particular, if the two nodes do not have `key` attrs
 * (available under `$key$` on VNodes) then the function falls back on merely
 * checking that they have the same tag.
 *
 * So, in other words, if `key` attrs are not set on VNodes which may be
 * changing order within a `children` array or something along those lines then
 * we could obtain a false negative and then have to do needless re-rendering
 * (i.e. we'd say two VNodes aren't equal when in fact they should be).
 *
 * @param leftVNode the first VNode to check
 * @param rightVNode the second VNode to check
 * @returns whether they're equal or not
 */
const isSameVnode = (leftVNode, rightVNode) => {
    // compare if two vnode to see if they're "technically" the same
    // need to have the same element tag, and same key to be the same
    if (leftVNode.$tag$ === rightVNode.$tag$) {
        if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.slotRelocation && leftVNode.$tag$ === 'slot') {
            return leftVNode.$name$ === rightVNode.$name$;
        }
        // this will be set if components in the build have `key` attrs set on them
        if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.vdomKey) {
            return leftVNode.$key$ === rightVNode.$key$;
        }
        return true;
    }
    return false;
};
const referenceNode = (node) => {
    // this node was relocated to a new location in the dom
    // because of some other component's slot
    // but we still have an html comment in place of where
    // it's original location was according to it's original vdom
    return (node && node['s-ol']) || node;
};
const parentReferenceNode = (node) => (node['s-ol'] ? node['s-ol'] : node).parentNode;
/**
 * Handle reconciling an outdated VNode with a new one which corresponds to
 * it. This function handles flushing updates to the DOM and reconciling the
 * children of the two nodes (if any).
 *
 * @param oldVNode an old VNode whose DOM element and children we want to update
 * @param newVNode a new VNode representing an updated version of the old one
 */
const patch = (oldVNode, newVNode) => {
    const elm = (newVNode.$elm$ = oldVNode.$elm$);
    const oldChildren = oldVNode.$children$;
    const newChildren = newVNode.$children$;
    const tag = newVNode.$tag$;
    const text = newVNode.$text$;
    let defaultHolder;
    if (!_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.vdomText || text === null) {
        if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.svg) {
            // test if we're rendering an svg element, or still rendering nodes inside of one
            // only add this to the when the compiler sees we're using an svg somewhere
            isSvgMode = tag === 'svg' ? true : tag === 'foreignObject' ? false : isSvgMode;
        }
        if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.vdomAttribute || _stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.reflect) {
            if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.slot && tag === 'slot')
                ;
            else {
                // either this is the first render of an element OR it's an update
                // AND we already know it's possible it could have changed
                // this updates the element's css classes, attrs, props, listeners, etc.
                updateElement(oldVNode, newVNode, isSvgMode);
            }
        }
        if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.updatable && oldChildren !== null && newChildren !== null) {
            // looks like there's child vnodes for both the old and new vnodes
            // so we need to call `updateChildren` to reconcile them
            updateChildren(elm, oldChildren, newVNode, newChildren);
        }
        else if (newChildren !== null) {
            // no old child vnodes, but there are new child vnodes to add
            if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.updatable && _stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.vdomText && oldVNode.$text$ !== null) {
                // the old vnode was text, so be sure to clear it out
                elm.textContent = '';
            }
            // add the new vnode children
            addVnodes(elm, null, newVNode, newChildren, 0, newChildren.length - 1);
        }
        else if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.updatable && oldChildren !== null) {
            // no new child vnodes, but there are old child vnodes to remove
            removeVnodes(oldChildren, 0, oldChildren.length - 1);
        }
        if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.svg && isSvgMode && tag === 'svg') {
            isSvgMode = false;
        }
    }
    else if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.vdomText && _stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.slotRelocation && (defaultHolder = elm['s-cr'])) {
        // this element has slotted content
        defaultHolder.parentNode.textContent = text;
    }
    else if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.vdomText && oldVNode.$text$ !== text) {
        // update the text content for the text only vnode
        // and also only if the text is different than before
        elm.data = text;
    }
};
/**
 * Adjust the `.hidden` property as-needed on any nodes in a DOM subtree which
 * are slot fallbacks nodes.
 *
 * A slot fallback node should be visible by default. Then, it should be
 * conditionally hidden if:
 *
 * - it has a sibling with a `slot` property set to its slot name or if
 * - it is a default fallback slot node, in which case we hide if it has any
 *   content
 *
 * @param elm the element of interest
 */
const updateFallbackSlotVisibility = (elm) => {
    const childNodes = elm.childNodes;
    for (const childNode of childNodes) {
        if (childNode.nodeType === 1 /* NODE_TYPE.ElementNode */) {
            if (childNode['s-sr']) {
                // this is a slot fallback node
                // get the slot name for this slot reference node
                const slotName = childNode['s-sn'];
                // by default always show a fallback slot node
                // then hide it if there are other slots in the light dom
                childNode.hidden = false;
                // we need to check all of its sibling nodes in order to see if
                // `childNode` should be hidden
                for (const siblingNode of childNodes) {
                    // Don't check the node against itself
                    if (siblingNode !== childNode) {
                        if (siblingNode['s-hn'] !== childNode['s-hn'] || slotName !== '') {
                            // this sibling node is from a different component OR is a named
                            // fallback slot node
                            if (siblingNode.nodeType === 1 /* NODE_TYPE.ElementNode */ &&
                                (slotName === siblingNode.getAttribute('slot') || slotName === siblingNode['s-sn'])) {
                                childNode.hidden = true;
                                break;
                            }
                        }
                        else {
                            // this is a default fallback slot node
                            // any element or text node (with content)
                            // should hide the default fallback slot node
                            if (siblingNode.nodeType === 1 /* NODE_TYPE.ElementNode */ ||
                                (siblingNode.nodeType === 3 /* NODE_TYPE.TextNode */ && siblingNode.textContent.trim() !== '')) {
                                childNode.hidden = true;
                                break;
                            }
                        }
                    }
                }
            }
            // keep drilling down
            updateFallbackSlotVisibility(childNode);
        }
    }
};
/**
 * Component-global information about nodes which are either currently being
 * relocated or will be shortly.
 */
const relocateNodes = [];
/**
 * Mark the contents of a slot for relocation via adding references to them to
 * the {@link relocateNodes} data structure. The actual work of relocating them
 * will then be handled in {@link renderVdom}.
 *
 * @param elm a render node whose child nodes need to be relocated
 */
const markSlotContentForRelocation = (elm) => {
    // tslint:disable-next-line: prefer-const
    let node;
    let hostContentNodes;
    let j;
    for (const childNode of elm.childNodes) {
        // we need to find child nodes which are slot references so we can then try
        // to match them up with nodes that need to be relocated
        if (childNode['s-sr'] && (node = childNode['s-cr']) && node.parentNode) {
            // first get the content reference comment node ('s-cr'), then we get
            // its parent, which is where all the host content is now
            hostContentNodes = node.parentNode.childNodes;
            const slotName = childNode['s-sn'];
            // iterate through all the nodes under the location where the host was
            // originally rendered
            for (j = hostContentNodes.length - 1; j >= 0; j--) {
                node = hostContentNodes[j];
                // check that the node is not a content reference node or a node
                // reference and then check that the host name does not match that of
                // childNode.
                // In addition, check that the slot either has not already been relocated, or
                // that its current location's host is not childNode's host. This is essentially
                // a check so that we don't try to relocate (and then hide) a node that is already
                // where it should be.
                if (!node['s-cn'] &&
                    !node['s-nr'] &&
                    node['s-hn'] !== childNode['s-hn'] &&
                    (!_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.experimentalSlotFixes || !node['s-sh'] || node['s-sh'] !== childNode['s-hn'])) {
                    // if `node` is located in the slot that `childNode` refers to (via the
                    // `'s-sn'` property) then we need to relocate it from it's current spot
                    // (under the host element parent) to the right slot location
                    if (isNodeLocatedInSlot(node, slotName)) {
                        // it's possible we've already decided to relocate this node
                        let relocateNodeData = relocateNodes.find((r) => r.$nodeToRelocate$ === node);
                        // made some changes to slots
                        // let's make sure we also double check
                        // fallbacks are correctly hidden or shown
                        checkSlotFallbackVisibility = true;
                        // ensure that the slot-name attr is correct
                        node['s-sn'] = node['s-sn'] || slotName;
                        if (relocateNodeData) {
                            relocateNodeData.$nodeToRelocate$['s-sh'] = childNode['s-hn'];
                            // we marked this node for relocation previously but didn't find
                            // out the slot reference node to which it needs to be relocated
                            // so write it down now!
                            relocateNodeData.$slotRefNode$ = childNode;
                        }
                        else {
                            node['s-sh'] = childNode['s-hn'];
                            // add to our list of nodes to relocate
                            relocateNodes.push({
                                $slotRefNode$: childNode,
                                $nodeToRelocate$: node,
                            });
                        }
                        if (node['s-sr']) {
                            relocateNodes.map((relocateNode) => {
                                if (isNodeLocatedInSlot(relocateNode.$nodeToRelocate$, node['s-sn'])) {
                                    relocateNodeData = relocateNodes.find((r) => r.$nodeToRelocate$ === node);
                                    if (relocateNodeData && !relocateNode.$slotRefNode$) {
                                        relocateNode.$slotRefNode$ = relocateNodeData.$slotRefNode$;
                                    }
                                }
                            });
                        }
                    }
                    else if (!relocateNodes.some((r) => r.$nodeToRelocate$ === node)) {
                        // the node is not found within the slot (`childNode`) that we're
                        // currently looking at, so we stick it into `relocateNodes` to
                        // handle later. If we never find a home for this element then
                        // we'll need to hide it
                        relocateNodes.push({
                            $nodeToRelocate$: node,
                        });
                    }
                }
            }
        }
        // if we're dealing with any type of element (capable of itself being a
        // slot reference or containing one) then we recur
        if (childNode.nodeType === 1 /* NODE_TYPE.ElementNode */) {
            markSlotContentForRelocation(childNode);
        }
    }
};
/**
 * Check whether a node is located in a given named slot.
 *
 * @param nodeToRelocate the node of interest
 * @param slotName the slot name to check
 * @returns whether the node is located in the slot or not
 */
const isNodeLocatedInSlot = (nodeToRelocate, slotName) => {
    if (nodeToRelocate.nodeType === 1 /* NODE_TYPE.ElementNode */) {
        if (nodeToRelocate.getAttribute('slot') === null && slotName === '') {
            // if the node doesn't have a slot attribute, and the slot we're checking
            // is not a named slot, then we assume the node should be within the slot
            return true;
        }
        if (nodeToRelocate.getAttribute('slot') === slotName) {
            return true;
        }
        return false;
    }
    if (nodeToRelocate['s-sn'] === slotName) {
        return true;
    }
    return slotName === '';
};
/**
 * 'Nullify' any VDom `ref` callbacks on a VDom node or its children by calling
 * them with `null`. This signals that the DOM element corresponding to the VDom
 * node has been removed from the DOM.
 *
 * @param vNode a virtual DOM node
 */
const nullifyVNodeRefs = (vNode) => {
    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.vdomRef) {
        vNode.$attrs$ && vNode.$attrs$.ref && vNode.$attrs$.ref(null);
        vNode.$children$ && vNode.$children$.map(nullifyVNodeRefs);
    }
};
/**
 * The main entry point for Stencil's virtual DOM-based rendering engine
 *
 * Given a {@link d.HostRef} container and some virtual DOM nodes, this
 * function will handle creating a virtual DOM tree with a single root, patching
 * the current virtual DOM tree onto an old one (if any), dealing with slot
 * relocation, and reflecting attributes.
 *
 * @param hostRef data needed to root and render the virtual DOM tree, such as
 * the DOM node into which it should be rendered.
 * @param renderFnResults the virtual DOM nodes to be rendered
 * @param isInitialLoad whether or not this is the first call after page load
 */
const renderVdom = (hostRef, renderFnResults, isInitialLoad = false) => {
    var _a, _b;
    const hostElm = hostRef.$hostElement$;
    const cmpMeta = hostRef.$cmpMeta$;
    const oldVNode = hostRef.$vnode$ || newVNode(null, null);
    // if `renderFnResults` is a Host node then we can use it directly. If not,
    // we need to call `h` again to wrap the children of our component in a
    // 'dummy' Host node (well, an empty vnode) since `renderVdom` assumes
    // implicitly that the top-level vdom node is 1) an only child and 2)
    // contains attrs that need to be set on the host element.
    const rootVnode = isHost(renderFnResults) ? renderFnResults : h(null, null, renderFnResults);
    hostTagName = hostElm.tagName;
    // <Host> runtime check
    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.isDev && Array.isArray(renderFnResults) && renderFnResults.some(isHost)) {
        throw new Error(`The <Host> must be the single root component.
Looks like the render() function of "${hostTagName.toLowerCase()}" is returning an array that contains the <Host>.

The render() function should look like this instead:

render() {
  // Do not return an array
  return (
    <Host>{content}</Host>
  );
}
  `);
    }
    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.reflect && cmpMeta.$attrsToReflect$) {
        rootVnode.$attrs$ = rootVnode.$attrs$ || {};
        cmpMeta.$attrsToReflect$.map(([propName, attribute]) => (rootVnode.$attrs$[attribute] = hostElm[propName]));
    }
    // On the first render and *only* on the first render we want to check for
    // any attributes set on the host element which are also set on the vdom
    // node. If we find them, we override the value on the VDom node attrs with
    // the value from the host element, which allows developers building apps
    // with Stencil components to override e.g. the `role` attribute on a
    // component even if it's already set on the `Host`.
    if (isInitialLoad && rootVnode.$attrs$) {
        for (const key of Object.keys(rootVnode.$attrs$)) {
            // We have a special implementation in `setAccessor` for `style` and
            // `class` which reconciles values coming from the VDom with values
            // already present on the DOM element, so we don't want to override those
            // attributes on the VDom tree with values from the host element if they
            // are present.
            //
            // Likewise, `ref` and `key` are special internal values for the Stencil
            // runtime and we don't want to override those either.
            if (hostElm.hasAttribute(key) && !['key', 'ref', 'style', 'class'].includes(key)) {
                rootVnode.$attrs$[key] = hostElm[key];
            }
        }
    }
    rootVnode.$tag$ = null;
    rootVnode.$flags$ |= 4 /* VNODE_FLAGS.isHost */;
    hostRef.$vnode$ = rootVnode;
    rootVnode.$elm$ = oldVNode.$elm$ = (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.shadowDom ? hostElm.shadowRoot || hostElm : hostElm);
    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.scoped || _stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.shadowDom) {
        scopeId = hostElm['s-sc'];
    }
    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.slotRelocation) {
        contentRef = hostElm['s-cr'];
        useNativeShadowDom = supportsShadow && (cmpMeta.$flags$ & 1 /* CMP_FLAGS.shadowDomEncapsulation */) !== 0;
        // always reset
        checkSlotFallbackVisibility = false;
    }
    // synchronous patch
    patch(oldVNode, rootVnode);
    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.slotRelocation) {
        // while we're moving nodes around existing nodes, temporarily disable
        // the disconnectCallback from working
        plt.$flags$ |= 1 /* PLATFORM_FLAGS.isTmpDisconnected */;
        if (checkSlotRelocate) {
            markSlotContentForRelocation(rootVnode.$elm$);
            for (const relocateData of relocateNodes) {
                const nodeToRelocate = relocateData.$nodeToRelocate$;
                if (!nodeToRelocate['s-ol']) {
                    // add a reference node marking this node's original location
                    // keep a reference to this node for later lookups
                    const orgLocationNode = _stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.isDebug || _stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.hydrateServerSide
                        ? originalLocationDebugNode(nodeToRelocate)
                        : doc.createTextNode('');
                    orgLocationNode['s-nr'] = nodeToRelocate;
                    nodeToRelocate.parentNode.insertBefore((nodeToRelocate['s-ol'] = orgLocationNode), nodeToRelocate);
                }
            }
            for (const relocateData of relocateNodes) {
                const nodeToRelocate = relocateData.$nodeToRelocate$;
                const slotRefNode = relocateData.$slotRefNode$;
                if (slotRefNode) {
                    const parentNodeRef = slotRefNode.parentNode;
                    // When determining where to insert content, the most simple case would be
                    // to relocate the node immediately following the slot reference node. We do this
                    // by getting a reference to the node immediately following the slot reference node
                    // since we will use `insertBefore` to manipulate the DOM.
                    //
                    // If there is no node immediately following the slot reference node, then we will just
                    // end up appending the node as the last child of the parent.
                    let insertBeforeNode = slotRefNode.nextSibling;
                    // If the node we're currently planning on inserting the new node before is an element,
                    // we need to do some additional checks to make sure we're inserting the node in the correct order.
                    // The use case here would be that we have multiple nodes being relocated to the same slot. So, we want
                    // to make sure they get inserted into their new how in the same order they were declared in their original location.
                    //
                    // TODO(STENCIL-914): Remove `experimentalSlotFixes` check
                    if (!_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.experimentalSlotFixes ||
                        (insertBeforeNode && insertBeforeNode.nodeType === 1 /* NODE_TYPE.ElementNode */)) {
                        let orgLocationNode = (_a = nodeToRelocate['s-ol']) === null || _a === void 0 ? void 0 : _a.previousSibling;
                        while (orgLocationNode) {
                            let refNode = (_b = orgLocationNode['s-nr']) !== null && _b !== void 0 ? _b : null;
                            if (refNode && refNode['s-sn'] === nodeToRelocate['s-sn'] && parentNodeRef === refNode.parentNode) {
                                refNode = refNode.nextSibling;
                                if (!refNode || !refNode['s-nr']) {
                                    insertBeforeNode = refNode;
                                    break;
                                }
                            }
                            orgLocationNode = orgLocationNode.previousSibling;
                        }
                    }
                    if ((!insertBeforeNode && parentNodeRef !== nodeToRelocate.parentNode) ||
                        nodeToRelocate.nextSibling !== insertBeforeNode) {
                        // we've checked that it's worth while to relocate
                        // since that the node to relocate
                        // has a different next sibling or parent relocated
                        if (nodeToRelocate !== insertBeforeNode) {
                            if (!nodeToRelocate['s-hn'] && nodeToRelocate['s-ol']) {
                                // probably a component in the index.html that doesn't have its hostname set
                                nodeToRelocate['s-hn'] = nodeToRelocate['s-ol'].parentNode.nodeName;
                            }
                            // Handle a use-case where we relocate a slot where
                            // the slot name changes along the way (for instance, a default to a named slot).
                            // In this case, we need to update the relocated node's slot attribute to match
                            // the slot name it is being relocated into.
                            //
                            // There is a very niche use case where we may be relocating a text node. For now,
                            // we ignore anything that is not an element node since non-element nodes cannot have
                            // attributes to specify the slot. We'll deal with this if it becomes a problem... but super edge-case-y
                            if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.experimentalSlotFixes &&
                                nodeToRelocate.nodeType === 1 /* NODE_TYPE.ElementNode */ &&
                                slotRefNode['s-fs'] !== nodeToRelocate.getAttribute('slot')) {
                                if (!slotRefNode['s-fs']) {
                                    nodeToRelocate.removeAttribute('slot');
                                }
                                else {
                                    nodeToRelocate.setAttribute('slot', slotRefNode['s-fs']);
                                }
                            }
                            // Add it back to the dom but in its new home
                            // If we get to this point and `insertBeforeNode` is `null`, that means
                            // we're just going to append the node as the last child of the parent. Passing
                            // `null` as the second arg here will trigger that behavior.
                            parentNodeRef.insertBefore(nodeToRelocate, insertBeforeNode);
                        }
                    }
                }
                else {
                    // this node doesn't have a slot home to go to, so let's hide it
                    if (nodeToRelocate.nodeType === 1 /* NODE_TYPE.ElementNode */) {
                        nodeToRelocate.hidden = true;
                    }
                }
            }
        }
        if (checkSlotFallbackVisibility) {
            updateFallbackSlotVisibility(rootVnode.$elm$);
        }
        // done moving nodes around
        // allow the disconnect callback to work again
        plt.$flags$ &= ~1 /* PLATFORM_FLAGS.isTmpDisconnected */;
        // always reset
        relocateNodes.length = 0;
    }
};
// slot comment debug nodes only created with the `--debug` flag
// otherwise these nodes are text nodes w/out content
const slotReferenceDebugNode = (slotVNode) => doc.createComment(`<slot${slotVNode.$name$ ? ' name="' + slotVNode.$name$ + '"' : ''}> (host=${hostTagName.toLowerCase()})`);
const originalLocationDebugNode = (nodeToRelocate) => doc.createComment(`org-location for ` +
    (nodeToRelocate.localName
        ? `<${nodeToRelocate.localName}> (host=${nodeToRelocate['s-hn']})`
        : `[${nodeToRelocate.textContent}]`));
const attachToAncestor = (hostRef, ancestorComponent) => {
    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.asyncLoading && ancestorComponent && !hostRef.$onRenderResolve$ && ancestorComponent['s-p']) {
        ancestorComponent['s-p'].push(new Promise((r) => (hostRef.$onRenderResolve$ = r)));
    }
};
const scheduleUpdate = (hostRef, isInitialLoad) => {
    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.taskQueue && _stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.updatable) {
        hostRef.$flags$ |= 16 /* HOST_FLAGS.isQueuedForUpdate */;
    }
    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.asyncLoading && hostRef.$flags$ & 4 /* HOST_FLAGS.isWaitingForChildren */) {
        hostRef.$flags$ |= 512 /* HOST_FLAGS.needsRerender */;
        return;
    }
    attachToAncestor(hostRef, hostRef.$ancestorComponent$);
    // there is no ancestor component or the ancestor component
    // has already fired off its lifecycle update then
    // fire off the initial update
    const dispatch = () => dispatchHooks(hostRef, isInitialLoad);
    return _stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.taskQueue ? writeTask(dispatch) : dispatch();
};
/**
 * Dispatch initial-render and update lifecycle hooks, enqueuing calls to
 * component lifecycle methods like `componentWillLoad` as well as
 * {@link updateComponent}, which will kick off the virtual DOM re-render.
 *
 * @param hostRef a reference to a host DOM node
 * @param isInitialLoad whether we're on the initial load or not
 * @returns an empty Promise which is used to enqueue a series of operations for
 * the component
 */
const dispatchHooks = (hostRef, isInitialLoad) => {
    const elm = hostRef.$hostElement$;
    const endSchedule = createTime('scheduleUpdate', hostRef.$cmpMeta$.$tagName$);
    const instance = _stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.lazyLoad ? hostRef.$lazyInstance$ : elm;
    // We're going to use this variable together with `enqueue` to implement a
    // little promise-based queue. We start out with it `undefined`. When we add
    // the first function to the queue we'll set this variable to be that
    // function's return value. When we attempt to add subsequent values to the
    // queue we'll check that value and, if it was a `Promise`, we'll then chain
    // the new function off of that `Promise` using `.then()`. This will give our
    // queue two nice properties:
    //
    // 1. If all functions added to the queue are synchronous they'll be called
    //    synchronously right away.
    // 2. If all functions added to the queue are asynchronous they'll all be
    //    called in order after `dispatchHooks` exits.
    let maybePromise;
    if (isInitialLoad) {
        if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.lazyLoad && _stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.hostListener) {
            hostRef.$flags$ |= 256 /* HOST_FLAGS.isListenReady */;
            if (hostRef.$queuedListeners$) {
                hostRef.$queuedListeners$.map(([methodName, event]) => safeCall(instance, methodName, event));
                hostRef.$queuedListeners$ = undefined;
            }
        }
        emitLifecycleEvent(elm, 'componentWillLoad');
        if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.cmpWillLoad) {
            // If `componentWillLoad` returns a `Promise` then we want to wait on
            // whatever's going on in that `Promise` before we launch into
            // rendering the component, doing other lifecycle stuff, etc. So
            // in that case we assign the returned promise to the variable we
            // declared above to hold a possible 'queueing' Promise
            maybePromise = safeCall(instance, 'componentWillLoad');
        }
    }
    else {
        emitLifecycleEvent(elm, 'componentWillUpdate');
        if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.cmpWillUpdate) {
            // Like `componentWillLoad` above, we allow Stencil component
            // authors to return a `Promise` from this lifecycle callback, and
            // we specify that our runtime will wait for that `Promise` to
            // resolve before the component re-renders. So if the method
            // returns a `Promise` we need to keep it around!
            maybePromise = safeCall(instance, 'componentWillUpdate');
        }
    }
    emitLifecycleEvent(elm, 'componentWillRender');
    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.cmpWillRender) {
        maybePromise = enqueue(maybePromise, () => safeCall(instance, 'componentWillRender'));
    }
    endSchedule();
    return enqueue(maybePromise, () => updateComponent(hostRef, instance, isInitialLoad));
};
/**
 * This function uses a Promise to implement a simple first-in, first-out queue
 * of functions to be called.
 *
 * The queue is ordered on the basis of the first argument. If it's
 * `undefined`, then nothing is on the queue yet, so the provided function can
 * be called synchronously (although note that this function may return a
 * `Promise`). The idea is that then the return value of that enqueueing
 * operation is kept around, so that if it was a `Promise` then subsequent
 * functions can be enqueued by calling this function again with that `Promise`
 * as the first argument.
 *
 * @param maybePromise either a `Promise` which should resolve before the next function is called or an 'empty' sentinel
 * @param fn a function to enqueue
 * @returns either a `Promise` or the return value of the provided function
 */
const enqueue = (maybePromise, fn) => isPromisey(maybePromise) ? maybePromise.then(fn) : fn();
/**
 * Check that a value is a `Promise`. To check, we first see if the value is an
 * instance of the `Promise` global. In a few circumstances, in particular if
 * the global has been overwritten, this is could be misleading, so we also do
 * a little 'duck typing' check to see if the `.then` property of the value is
 * defined and a function.
 *
 * @param maybePromise it might be a promise!
 * @returns whether it is or not
 */
const isPromisey = (maybePromise) => maybePromise instanceof Promise ||
    (maybePromise && maybePromise.then && typeof maybePromise.then === 'function');
/**
 * Update a component given reference to its host elements and so on.
 *
 * @param hostRef an object containing references to the element's host node,
 * VDom nodes, and other metadata
 * @param instance a reference to the underlying host element where it will be
 * rendered
 * @param isInitialLoad whether or not this function is being called as part of
 * the first render cycle
 */
const updateComponent = async (hostRef, instance, isInitialLoad) => {
    var _a;
    const elm = hostRef.$hostElement$;
    const endUpdate = createTime('update', hostRef.$cmpMeta$.$tagName$);
    const rc = elm['s-rc'];
    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.style && isInitialLoad) {
        // DOM WRITE!
        attachStyles(hostRef);
    }
    const endRender = createTime('render', hostRef.$cmpMeta$.$tagName$);
    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.isDev) {
        hostRef.$flags$ |= 1024 /* HOST_FLAGS.devOnRender */;
    }
    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.hydrateServerSide) {
        await callRender(hostRef, instance, elm, isInitialLoad);
    }
    else {
        callRender(hostRef, instance, elm, isInitialLoad);
    }
    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.isDev) {
        hostRef.$renderCount$ = hostRef.$renderCount$ === undefined ? 1 : hostRef.$renderCount$ + 1;
        hostRef.$flags$ &= ~1024 /* HOST_FLAGS.devOnRender */;
    }
    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.hydrateServerSide) {
        try {
            // manually connected child components during server-side hydrate
            serverSideConnected(elm);
            if (isInitialLoad) {
                // using only during server-side hydrate
                if (hostRef.$cmpMeta$.$flags$ & 1 /* CMP_FLAGS.shadowDomEncapsulation */) {
                    elm['s-en'] = '';
                }
                else if (hostRef.$cmpMeta$.$flags$ & 2 /* CMP_FLAGS.scopedCssEncapsulation */) {
                    elm['s-en'] = 'c';
                }
            }
        }
        catch (e) {
            consoleError(e, elm);
        }
    }
    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.asyncLoading && rc) {
        // ok, so turns out there are some child host elements
        // waiting on this parent element to load
        // let's fire off all update callbacks waiting
        rc.map((cb) => cb());
        elm['s-rc'] = undefined;
    }
    endRender();
    endUpdate();
    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.asyncLoading) {
        const childrenPromises = (_a = elm['s-p']) !== null && _a !== void 0 ? _a : [];
        const postUpdate = () => postUpdateComponent(hostRef);
        if (childrenPromises.length === 0) {
            postUpdate();
        }
        else {
            Promise.all(childrenPromises).then(postUpdate);
            hostRef.$flags$ |= 4 /* HOST_FLAGS.isWaitingForChildren */;
            childrenPromises.length = 0;
        }
    }
    else {
        postUpdateComponent(hostRef);
    }
};
/**
 * Handle making the call to the VDom renderer with the proper context given
 * various build variables
 *
 * @param hostRef an object containing references to the element's host node,
 * VDom nodes, and other metadata
 * @param instance a reference to the underlying host element where it will be
 * rendered
 * @param elm the Host element for the component
 * @param isInitialLoad whether or not this function is being called as part of
 * @returns an empty promise
 */
const callRender = (hostRef, instance, elm, isInitialLoad) => {
    // in order for bundlers to correctly tree-shake the BUILD object
    // we need to ensure BUILD is not deoptimized within a try/catch
    // https://rollupjs.org/guide/en/#treeshake tryCatchDeoptimization
    const allRenderFn = _stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.allRenderFn ? true : false;
    const lazyLoad = _stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.lazyLoad ? true : false;
    const taskQueue = _stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.taskQueue ? true : false;
    const updatable = _stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.updatable ? true : false;
    try {
        renderingRef = instance;
        /**
         * minification optimization: `allRenderFn` is `true` if all components have a `render`
         * method, so we can call the method immediately. If not, check before calling it.
         */
        instance = allRenderFn ? instance.render() : instance.render && instance.render();
        if (updatable && taskQueue) {
            hostRef.$flags$ &= ~16 /* HOST_FLAGS.isQueuedForUpdate */;
        }
        if (updatable || lazyLoad) {
            hostRef.$flags$ |= 2 /* HOST_FLAGS.hasRendered */;
        }
        if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.hasRenderFn || _stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.reflect) {
            if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.vdomRender || _stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.reflect) {
                // looks like we've got child nodes to render into this host element
                // or we need to update the css class/attrs on the host element
                // DOM WRITE!
                if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.hydrateServerSide) {
                    return Promise.resolve(instance).then((value) => renderVdom(hostRef, value, isInitialLoad));
                }
                else {
                    renderVdom(hostRef, instance, isInitialLoad);
                }
            }
            else {
                elm.textContent = instance;
            }
        }
    }
    catch (e) {
        consoleError(e, hostRef.$hostElement$);
    }
    renderingRef = null;
    return null;
};
const getRenderingRef = () => renderingRef;
const postUpdateComponent = (hostRef) => {
    const tagName = hostRef.$cmpMeta$.$tagName$;
    const elm = hostRef.$hostElement$;
    const endPostUpdate = createTime('postUpdate', tagName);
    const instance = _stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.lazyLoad ? hostRef.$lazyInstance$ : elm;
    const ancestorComponent = hostRef.$ancestorComponent$;
    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.cmpDidRender) {
        if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.isDev) {
            hostRef.$flags$ |= 1024 /* HOST_FLAGS.devOnRender */;
        }
        safeCall(instance, 'componentDidRender');
        if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.isDev) {
            hostRef.$flags$ &= ~1024 /* HOST_FLAGS.devOnRender */;
        }
    }
    emitLifecycleEvent(elm, 'componentDidRender');
    if (!(hostRef.$flags$ & 64 /* HOST_FLAGS.hasLoadedComponent */)) {
        hostRef.$flags$ |= 64 /* HOST_FLAGS.hasLoadedComponent */;
        if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.asyncLoading && _stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.cssAnnotations) {
            // DOM WRITE!
            addHydratedFlag(elm);
        }
        if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.cmpDidLoad) {
            if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.isDev) {
                hostRef.$flags$ |= 2048 /* HOST_FLAGS.devOnDidLoad */;
            }
            safeCall(instance, 'componentDidLoad');
            if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.isDev) {
                hostRef.$flags$ &= ~2048 /* HOST_FLAGS.devOnDidLoad */;
            }
        }
        emitLifecycleEvent(elm, 'componentDidLoad');
        endPostUpdate();
        if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.asyncLoading) {
            hostRef.$onReadyResolve$(elm);
            if (!ancestorComponent) {
                appDidLoad(tagName);
            }
        }
    }
    else {
        if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.cmpDidUpdate) {
            // we've already loaded this component
            // fire off the user's componentDidUpdate method (if one was provided)
            // componentDidUpdate runs AFTER render() has been called
            // and all child components have finished updating
            if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.isDev) {
                hostRef.$flags$ |= 1024 /* HOST_FLAGS.devOnRender */;
            }
            safeCall(instance, 'componentDidUpdate');
            if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.isDev) {
                hostRef.$flags$ &= ~1024 /* HOST_FLAGS.devOnRender */;
            }
        }
        emitLifecycleEvent(elm, 'componentDidUpdate');
        endPostUpdate();
    }
    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.method && _stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.lazyLoad) {
        hostRef.$onInstanceResolve$(elm);
    }
    // load events fire from bottom to top
    // the deepest elements load first then bubbles up
    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.asyncLoading) {
        if (hostRef.$onRenderResolve$) {
            hostRef.$onRenderResolve$();
            hostRef.$onRenderResolve$ = undefined;
        }
        if (hostRef.$flags$ & 512 /* HOST_FLAGS.needsRerender */) {
            nextTick(() => scheduleUpdate(hostRef, false));
        }
        hostRef.$flags$ &= ~(4 /* HOST_FLAGS.isWaitingForChildren */ | 512 /* HOST_FLAGS.needsRerender */);
    }
    // ( •_•)
    // ( •_•)>⌐■-■
    // (⌐■_■)
};
const forceUpdate = (ref) => {
    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.updatable && (Build.isBrowser || Build.isTesting)) {
        const hostRef = getHostRef(ref);
        const isConnected = hostRef.$hostElement$.isConnected;
        if (isConnected &&
            (hostRef.$flags$ & (2 /* HOST_FLAGS.hasRendered */ | 16 /* HOST_FLAGS.isQueuedForUpdate */)) === 2 /* HOST_FLAGS.hasRendered */) {
            scheduleUpdate(hostRef, false);
        }
        // Returns "true" when the forced update was successfully scheduled
        return isConnected;
    }
    return false;
};
const appDidLoad = (who) => {
    // on appload
    // we have finish the first big initial render
    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.cssAnnotations) {
        addHydratedFlag(doc.documentElement);
    }
    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.asyncQueue) {
        plt.$flags$ |= 2 /* PLATFORM_FLAGS.appLoaded */;
    }
    nextTick(() => emitEvent(win, 'appload', { detail: { namespace: _stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.NAMESPACE } }));
    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.profile && performance.measure) {
        performance.measure(`[Stencil] ${_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.NAMESPACE} initial load (by ${who})`, 'st:app:start');
    }
};
/**
 * Allows to safely call a method, e.g. `componentDidLoad`, on an instance,
 * e.g. custom element node. If a build figures out that e.g. no component
 * has a `componentDidLoad` method, the instance method gets removed from the
 * output bundle and this function returns `undefined`.
 * @param instance any object that may or may not contain methods
 * @param method method name
 * @param arg single arbitrary argument
 * @returns result of method call if it exists, otherwise `undefined`
 */
const safeCall = (instance, method, arg) => {
    if (instance && instance[method]) {
        try {
            return instance[method](arg);
        }
        catch (e) {
            consoleError(e);
        }
    }
    return undefined;
};
/**
 * For debugging purposes as `BUILD.lifecycleDOMEvents` is `false` by default and will
 * get removed by the compiler. Used for timing events to see how long they take.
 * @param elm the target of the Event
 * @param lifecycleName name of the event
 */
const emitLifecycleEvent = (elm, lifecycleName) => {
    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.lifecycleDOMEvents) {
        emitEvent(elm, 'stencil_' + lifecycleName, {
            bubbles: true,
            composed: true,
            detail: {
                namespace: _stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.NAMESPACE,
            },
        });
    }
};
const addHydratedFlag = (elm) => _stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.hydratedClass
    ? elm.classList.add('hydrated')
    : _stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.hydratedAttribute
        ? elm.setAttribute('hydrated', '')
        : undefined;
const serverSideConnected = (elm) => {
    const children = elm.children;
    if (children != null) {
        for (let i = 0, ii = children.length; i < ii; i++) {
            const childElm = children[i];
            if (typeof childElm.connectedCallback === 'function') {
                childElm.connectedCallback();
            }
            serverSideConnected(childElm);
        }
    }
};
const getValue = (ref, propName) => getHostRef(ref).$instanceValues$.get(propName);
const setValue = (ref, propName, newVal, cmpMeta) => {
    // check our new property value against our internal value
    const hostRef = getHostRef(ref);
    const elm = _stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.lazyLoad ? hostRef.$hostElement$ : ref;
    const oldVal = hostRef.$instanceValues$.get(propName);
    const flags = hostRef.$flags$;
    const instance = _stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.lazyLoad ? hostRef.$lazyInstance$ : elm;
    newVal = parsePropertyValue(newVal, cmpMeta.$members$[propName][0]);
    // explicitly check for NaN on both sides, as `NaN === NaN` is always false
    const areBothNaN = Number.isNaN(oldVal) && Number.isNaN(newVal);
    const didValueChange = newVal !== oldVal && !areBothNaN;
    if ((!_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.lazyLoad || !(flags & 8 /* HOST_FLAGS.isConstructingInstance */) || oldVal === undefined) && didValueChange) {
        // gadzooks! the property's value has changed!!
        // set our new value!
        hostRef.$instanceValues$.set(propName, newVal);
        if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.isDev) {
            if (hostRef.$flags$ & 1024 /* HOST_FLAGS.devOnRender */) {
                consoleDevWarn(`The state/prop "${propName}" changed during rendering. This can potentially lead to infinite-loops and other bugs.`, '\nElement', elm, '\nNew value', newVal, '\nOld value', oldVal);
            }
            else if (hostRef.$flags$ & 2048 /* HOST_FLAGS.devOnDidLoad */) {
                consoleDevWarn(`The state/prop "${propName}" changed during "componentDidLoad()", this triggers extra re-renders, try to setup on "componentWillLoad()"`, '\nElement', elm, '\nNew value', newVal, '\nOld value', oldVal);
            }
        }
        if (!_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.lazyLoad || instance) {
            // get an array of method names of watch functions to call
            if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.watchCallback && cmpMeta.$watchers$ && flags & 128 /* HOST_FLAGS.isWatchReady */) {
                const watchMethods = cmpMeta.$watchers$[propName];
                if (watchMethods) {
                    // this instance is watching for when this property changed
                    watchMethods.map((watchMethodName) => {
                        try {
                            // fire off each of the watch methods that are watching this property
                            instance[watchMethodName](newVal, oldVal, propName);
                        }
                        catch (e) {
                            consoleError(e, elm);
                        }
                    });
                }
            }
            if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.updatable &&
                (flags & (2 /* HOST_FLAGS.hasRendered */ | 16 /* HOST_FLAGS.isQueuedForUpdate */)) === 2 /* HOST_FLAGS.hasRendered */) {
                if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.cmpShouldUpdate && instance.componentShouldUpdate) {
                    if (instance.componentShouldUpdate(newVal, oldVal, propName) === false) {
                        return;
                    }
                }
                // looks like this value actually changed, so we've got work to do!
                // but only if we've already rendered, otherwise just chill out
                // queue that we need to do an update, but don't worry about queuing
                // up millions cuz this function ensures it only runs once
                scheduleUpdate(hostRef, false);
            }
        }
    }
};
/**
 * Attach a series of runtime constructs to a compiled Stencil component
 * constructor, including getters and setters for the `@Prop` and `@State`
 * decorators, callbacks for when attributes change, and so on.
 *
 * @param Cstr the constructor for a component that we need to process
 * @param cmpMeta metadata collected previously about the component
 * @param flags a number used to store a series of bit flags
 * @returns a reference to the same constructor passed in (but now mutated)
 */
const proxyComponent = (Cstr, cmpMeta, flags) => {
    var _a;
    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.member && cmpMeta.$members$) {
        if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.watchCallback && Cstr.watchers) {
            cmpMeta.$watchers$ = Cstr.watchers;
        }
        // It's better to have a const than two Object.entries()
        const members = Object.entries(cmpMeta.$members$);
        const prototype = Cstr.prototype;
        members.map(([memberName, [memberFlags]]) => {
            if ((_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.prop || _stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.state) &&
                (memberFlags & 31 /* MEMBER_FLAGS.Prop */ ||
                    ((!_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.lazyLoad || flags & 2 /* PROXY_FLAGS.proxyState */) && memberFlags & 32 /* MEMBER_FLAGS.State */))) {
                // proxyComponent - prop
                Object.defineProperty(prototype, memberName, {
                    get() {
                        // proxyComponent, get value
                        return getValue(this, memberName);
                    },
                    set(newValue) {
                        // only during dev time
                        if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.isDev) {
                            const ref = getHostRef(this);
                            if (
                            // we are proxying the instance (not element)
                            (flags & 1 /* PROXY_FLAGS.isElementConstructor */) === 0 &&
                                // the element is not constructing
                                (ref.$flags$ & 8 /* HOST_FLAGS.isConstructingInstance */) === 0 &&
                                // the member is a prop
                                (memberFlags & 31 /* MEMBER_FLAGS.Prop */) !== 0 &&
                                // the member is not mutable
                                (memberFlags & 1024 /* MEMBER_FLAGS.Mutable */) === 0) {
                                consoleDevWarn(`@Prop() "${memberName}" on <${cmpMeta.$tagName$}> is immutable but was modified from within the component.\nMore information: https://stenciljs.com/docs/properties#prop-mutability`);
                            }
                        }
                        // proxyComponent, set value
                        setValue(this, memberName, newValue, cmpMeta);
                    },
                    configurable: true,
                    enumerable: true,
                });
            }
            else if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.lazyLoad &&
                _stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.method &&
                flags & 1 /* PROXY_FLAGS.isElementConstructor */ &&
                memberFlags & 64 /* MEMBER_FLAGS.Method */) {
                // proxyComponent - method
                Object.defineProperty(prototype, memberName, {
                    value(...args) {
                        const ref = getHostRef(this);
                        return ref.$onInstancePromise$.then(() => ref.$lazyInstance$[memberName](...args));
                    },
                });
            }
        });
        if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.observeAttribute && (!_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.lazyLoad || flags & 1 /* PROXY_FLAGS.isElementConstructor */)) {
            const attrNameToPropName = new Map();
            prototype.attributeChangedCallback = function (attrName, oldValue, newValue) {
                plt.jmp(() => {
                    const propName = attrNameToPropName.get(attrName);
                    //  In a web component lifecycle the attributeChangedCallback runs prior to connectedCallback
                    //  in the case where an attribute was set inline.
                    //  ```html
                    //    <my-component some-attribute="some-value"></my-component>
                    //  ```
                    //
                    //  There is an edge case where a developer sets the attribute inline on a custom element and then
                    //  programmatically changes it before it has been upgraded as shown below:
                    //
                    //  ```html
                    //    <!-- this component has _not_ been upgraded yet -->
                    //    <my-component id="test" some-attribute="some-value"></my-component>
                    //    <script>
                    //      // grab non-upgraded component
                    //      el = document.querySelector("#test");
                    //      el.someAttribute = "another-value";
                    //      // upgrade component
                    //      customElements.define('my-component', MyComponent);
                    //    </script>
                    //  ```
                    //  In this case if we do not un-shadow here and use the value of the shadowing property, attributeChangedCallback
                    //  will be called with `newValue = "some-value"` and will set the shadowed property (this.someAttribute = "another-value")
                    //  to the value that was set inline i.e. "some-value" from above example. When
                    //  the connectedCallback attempts to un-shadow it will use "some-value" as the initial value rather than "another-value"
                    //
                    //  The case where the attribute was NOT set inline but was not set programmatically shall be handled/un-shadowed
                    //  by connectedCallback as this attributeChangedCallback will not fire.
                    //
                    //  https://developers.google.com/web/fundamentals/web-components/best-practices#lazy-properties
                    //
                    //  TODO(STENCIL-16) we should think about whether or not we actually want to be reflecting the attributes to
                    //  properties here given that this goes against best practices outlined here
                    //  https://developers.google.com/web/fundamentals/web-components/best-practices#avoid-reentrancy
                    if (this.hasOwnProperty(propName)) {
                        newValue = this[propName];
                        delete this[propName];
                    }
                    else if (prototype.hasOwnProperty(propName) &&
                        typeof this[propName] === 'number' &&
                        this[propName] == newValue) {
                        // if the propName exists on the prototype of `Cstr`, this update may be a result of Stencil using native
                        // APIs to reflect props as attributes. Calls to `setAttribute(someElement, propName)` will result in
                        // `propName` to be converted to a `DOMString`, which may not be what we want for other primitive props.
                        return;
                    }
                    else if (propName == null) {
                        // At this point we should know this is not a "member", so we can treat it like watching an attribute
                        // on a vanilla web component
                        const hostRef = getHostRef(this);
                        const flags = hostRef === null || hostRef === void 0 ? void 0 : hostRef.$flags$;
                        // We only want to trigger the callback(s) if:
                        // 1. The instance is ready
                        // 2. The watchers are ready
                        // 3. The value has changed
                        if (!(flags & 8 /* HOST_FLAGS.isConstructingInstance */) &&
                            flags & 128 /* HOST_FLAGS.isWatchReady */ &&
                            newValue !== oldValue) {
                            const elm = _stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.lazyLoad ? hostRef.$hostElement$ : this;
                            const instance = _stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.lazyLoad ? hostRef.$lazyInstance$ : elm;
                            const entry = cmpMeta.$watchers$[attrName];
                            entry === null || entry === void 0 ? void 0 : entry.forEach((callbackName) => {
                                if (instance[callbackName] != null) {
                                    instance[callbackName].call(instance, newValue, oldValue, attrName);
                                }
                            });
                        }
                        return;
                    }
                    this[propName] = newValue === null && typeof this[propName] === 'boolean' ? false : newValue;
                });
            };
            // Create an array of attributes to observe
            // This list in comprised of all strings used within a `@Watch()` decorator
            // on a component as well as any Stencil-specific "members" (`@Prop()`s and `@State()`s).
            // As such, there is no way to guarantee type-safety here that a user hasn't entered
            // an invalid attribute.
            Cstr.observedAttributes = Array.from(new Set([
                ...Object.keys((_a = cmpMeta.$watchers$) !== null && _a !== void 0 ? _a : {}),
                ...members
                    .filter(([_, m]) => m[0] & 15 /* MEMBER_FLAGS.HasAttribute */)
                    .map(([propName, m]) => {
                    const attrName = m[1] || propName;
                    attrNameToPropName.set(attrName, propName);
                    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.reflect && m[0] & 512 /* MEMBER_FLAGS.ReflectAttr */) {
                        cmpMeta.$attrsToReflect$.push([propName, attrName]);
                    }
                    return attrName;
                }),
            ]));
        }
    }
    return Cstr;
};
/**
 * Initialize a Stencil component given a reference to its host element, its
 * runtime bookkeeping data structure, runtime metadata about the component,
 * and (optionally) an HMR version ID.
 *
 * @param elm a host element
 * @param hostRef the element's runtime bookkeeping object
 * @param cmpMeta runtime metadata for the Stencil component
 * @param hmrVersionId an (optional) HMR version ID
 */
const initializeComponent = async (elm, hostRef, cmpMeta, hmrVersionId) => {
    let Cstr;
    // initializeComponent
    if ((hostRef.$flags$ & 32 /* HOST_FLAGS.hasInitializedComponent */) === 0) {
        // Let the runtime know that the component has been initialized
        hostRef.$flags$ |= 32 /* HOST_FLAGS.hasInitializedComponent */;
        if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.lazyLoad || _stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.hydrateClientSide) {
            // lazy loaded components
            // request the component's implementation to be
            // wired up with the host element
            Cstr = loadModule(cmpMeta, hostRef, hmrVersionId);
            if (Cstr.then) {
                // Await creates a micro-task avoid if possible
                const endLoad = uniqueTime(`st:load:${cmpMeta.$tagName$}:${hostRef.$modeName$}`, `[Stencil] Load module for <${cmpMeta.$tagName$}>`);
                Cstr = await Cstr;
                endLoad();
            }
            if ((_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.isDev || _stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.isDebug) && !Cstr) {
                throw new Error(`Constructor for "${cmpMeta.$tagName$}#${hostRef.$modeName$}" was not found`);
            }
            if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.member && !Cstr.isProxied) {
                // we've never proxied this Constructor before
                // let's add the getters/setters to its prototype before
                // the first time we create an instance of the implementation
                if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.watchCallback) {
                    cmpMeta.$watchers$ = Cstr.watchers;
                }
                proxyComponent(Cstr, cmpMeta, 2 /* PROXY_FLAGS.proxyState */);
                Cstr.isProxied = true;
            }
            const endNewInstance = createTime('createInstance', cmpMeta.$tagName$);
            // ok, time to construct the instance
            // but let's keep track of when we start and stop
            // so that the getters/setters don't incorrectly step on data
            if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.member) {
                hostRef.$flags$ |= 8 /* HOST_FLAGS.isConstructingInstance */;
            }
            // construct the lazy-loaded component implementation
            // passing the hostRef is very important during
            // construction in order to directly wire together the
            // host element and the lazy-loaded instance
            try {
                new Cstr(hostRef);
            }
            catch (e) {
                consoleError(e);
            }
            if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.member) {
                hostRef.$flags$ &= ~8 /* HOST_FLAGS.isConstructingInstance */;
            }
            if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.watchCallback) {
                hostRef.$flags$ |= 128 /* HOST_FLAGS.isWatchReady */;
            }
            endNewInstance();
            fireConnectedCallback(hostRef.$lazyInstance$);
        }
        else {
            // sync constructor component
            Cstr = elm.constructor;
            // wait for the CustomElementRegistry to mark the component as ready before setting `isWatchReady`. Otherwise,
            // watchers may fire prematurely if `customElements.get()`/`customElements.whenDefined()` resolves _before_
            // Stencil has completed instantiating the component.
            customElements.whenDefined(cmpMeta.$tagName$).then(() => (hostRef.$flags$ |= 128 /* HOST_FLAGS.isWatchReady */));
        }
        if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.style && Cstr.style) {
            // this component has styles but we haven't registered them yet
            let style = Cstr.style;
            if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.mode && typeof style !== 'string') {
                style = style[(hostRef.$modeName$ = computeMode(elm))];
                if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.hydrateServerSide && hostRef.$modeName$) {
                    elm.setAttribute('s-mode', hostRef.$modeName$);
                }
            }
            const scopeId = getScopeId(cmpMeta, hostRef.$modeName$);
            if (!styles.has(scopeId)) {
                const endRegisterStyles = createTime('registerStyles', cmpMeta.$tagName$);
                if (!_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.hydrateServerSide &&
                    _stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.shadowDom &&
                    // TODO(STENCIL-854): Remove code related to legacy shadowDomShim field
                    _stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.shadowDomShim &&
                    cmpMeta.$flags$ & 8 /* CMP_FLAGS.needsShadowDomShim */) {
                    style = await __webpack_require__.e(/*! import() */ "vendors-node_modules_stencil_core_internal_client_shadow-css_js").then(__webpack_require__.bind(__webpack_require__, /*! ./shadow-css.js */ "./node_modules/@stencil/core/internal/client/shadow-css.js")).then((m) => m.scopeCss(style, scopeId, false));
                }
                registerStyle(scopeId, style, !!(cmpMeta.$flags$ & 1 /* CMP_FLAGS.shadowDomEncapsulation */));
                endRegisterStyles();
            }
        }
    }
    // we've successfully created a lazy instance
    const ancestorComponent = hostRef.$ancestorComponent$;
    const schedule = () => scheduleUpdate(hostRef, true);
    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.asyncLoading && ancestorComponent && ancestorComponent['s-rc']) {
        // this is the initial load and this component it has an ancestor component
        // but the ancestor component has NOT fired its will update lifecycle yet
        // so let's just cool our jets and wait for the ancestor to continue first
        // this will get fired off when the ancestor component
        // finally gets around to rendering its lazy self
        // fire off the initial update
        ancestorComponent['s-rc'].push(schedule);
    }
    else {
        schedule();
    }
};
const fireConnectedCallback = (instance) => {
    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.lazyLoad && _stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.connectedCallback) {
        safeCall(instance, 'connectedCallback');
    }
};
const connectedCallback = (elm) => {
    if ((plt.$flags$ & 1 /* PLATFORM_FLAGS.isTmpDisconnected */) === 0) {
        const hostRef = getHostRef(elm);
        const cmpMeta = hostRef.$cmpMeta$;
        const endConnected = createTime('connectedCallback', cmpMeta.$tagName$);
        if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.hostListenerTargetParent) {
            // only run if we have listeners being attached to a parent
            addHostEventListeners(elm, hostRef, cmpMeta.$listeners$, true);
        }
        if (!(hostRef.$flags$ & 1 /* HOST_FLAGS.hasConnected */)) {
            // first time this component has connected
            hostRef.$flags$ |= 1 /* HOST_FLAGS.hasConnected */;
            let hostId;
            if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.hydrateClientSide) {
                hostId = elm.getAttribute(HYDRATE_ID);
                if (hostId) {
                    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.shadowDom && supportsShadow && cmpMeta.$flags$ & 1 /* CMP_FLAGS.shadowDomEncapsulation */) {
                        const scopeId = _stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.mode
                            ? addStyle(elm.shadowRoot, cmpMeta, elm.getAttribute('s-mode'))
                            : addStyle(elm.shadowRoot, cmpMeta);
                        elm.classList.remove(scopeId + '-h', scopeId + '-s');
                    }
                    initializeClientHydrate(elm, cmpMeta.$tagName$, hostId, hostRef);
                }
            }
            if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.slotRelocation && !hostId) {
                // initUpdate
                // if the slot polyfill is required we'll need to put some nodes
                // in here to act as original content anchors as we move nodes around
                // host element has been connected to the DOM
                if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.hydrateServerSide ||
                    ((_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.slot || _stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.shadowDom) &&
                        // TODO(STENCIL-854): Remove code related to legacy shadowDomShim field
                        cmpMeta.$flags$ & (4 /* CMP_FLAGS.hasSlotRelocation */ | 8 /* CMP_FLAGS.needsShadowDomShim */))) {
                    setContentReference(elm);
                }
            }
            if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.asyncLoading) {
                // find the first ancestor component (if there is one) and register
                // this component as one of the actively loading child components for its ancestor
                let ancestorComponent = elm;
                while ((ancestorComponent = ancestorComponent.parentNode || ancestorComponent.host)) {
                    // climb up the ancestors looking for the first
                    // component that hasn't finished its lifecycle update yet
                    if ((_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.hydrateClientSide &&
                        ancestorComponent.nodeType === 1 /* NODE_TYPE.ElementNode */ &&
                        ancestorComponent.hasAttribute('s-id') &&
                        ancestorComponent['s-p']) ||
                        ancestorComponent['s-p']) {
                        // we found this components first ancestor component
                        // keep a reference to this component's ancestor component
                        attachToAncestor(hostRef, (hostRef.$ancestorComponent$ = ancestorComponent));
                        break;
                    }
                }
            }
            // Lazy properties
            // https://developers.google.com/web/fundamentals/web-components/best-practices#lazy-properties
            if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.prop && !_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.hydrateServerSide && cmpMeta.$members$) {
                Object.entries(cmpMeta.$members$).map(([memberName, [memberFlags]]) => {
                    if (memberFlags & 31 /* MEMBER_FLAGS.Prop */ && elm.hasOwnProperty(memberName)) {
                        const value = elm[memberName];
                        delete elm[memberName];
                        elm[memberName] = value;
                    }
                });
            }
            if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.initializeNextTick) {
                // connectedCallback, taskQueue, initialLoad
                // angular sets attribute AFTER connectCallback
                // https://github.com/angular/angular/issues/18909
                // https://github.com/angular/angular/issues/19940
                nextTick(() => initializeComponent(elm, hostRef, cmpMeta));
            }
            else {
                initializeComponent(elm, hostRef, cmpMeta);
            }
        }
        else {
            // not the first time this has connected
            // reattach any event listeners to the host
            // since they would have been removed when disconnected
            addHostEventListeners(elm, hostRef, cmpMeta.$listeners$, false);
            // fire off connectedCallback() on component instance
            if (hostRef === null || hostRef === void 0 ? void 0 : hostRef.$lazyInstance$) {
                fireConnectedCallback(hostRef.$lazyInstance$);
            }
            else if (hostRef === null || hostRef === void 0 ? void 0 : hostRef.$onReadyPromise$) {
                hostRef.$onReadyPromise$.then(() => fireConnectedCallback(hostRef.$lazyInstance$));
            }
        }
        endConnected();
    }
};
const setContentReference = (elm) => {
    // only required when we're NOT using native shadow dom (slot)
    // or this browser doesn't support native shadow dom
    // and this host element was NOT created with SSR
    // let's pick out the inner content for slot projection
    // create a node to represent where the original
    // content was first placed, which is useful later on
    const contentRefElm = (elm['s-cr'] = doc.createComment(_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.isDebug ? `content-ref (host=${elm.localName})` : ''));
    contentRefElm['s-cn'] = true;
    elm.insertBefore(contentRefElm, elm.firstChild);
};
const disconnectInstance = (instance) => {
    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.lazyLoad && _stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.disconnectedCallback) {
        safeCall(instance, 'disconnectedCallback');
    }
    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.cmpDidUnload) {
        safeCall(instance, 'componentDidUnload');
    }
};
const disconnectedCallback = async (elm) => {
    if ((plt.$flags$ & 1 /* PLATFORM_FLAGS.isTmpDisconnected */) === 0) {
        const hostRef = getHostRef(elm);
        if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.hostListener) {
            if (hostRef.$rmListeners$) {
                hostRef.$rmListeners$.map((rmListener) => rmListener());
                hostRef.$rmListeners$ = undefined;
            }
        }
        if (!_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.lazyLoad) {
            disconnectInstance(elm);
        }
        else if (hostRef === null || hostRef === void 0 ? void 0 : hostRef.$lazyInstance$) {
            disconnectInstance(hostRef.$lazyInstance$);
        }
        else if (hostRef === null || hostRef === void 0 ? void 0 : hostRef.$onReadyPromise$) {
            hostRef.$onReadyPromise$.then(() => disconnectInstance(hostRef.$lazyInstance$));
        }
    }
};
const patchPseudoShadowDom = (hostElementPrototype, descriptorPrototype) => {
    patchCloneNode(hostElementPrototype);
    patchSlotAppendChild(hostElementPrototype);
    patchSlotAppend(hostElementPrototype);
    patchSlotPrepend(hostElementPrototype);
    patchSlotInsertAdjacentElement(hostElementPrototype);
    patchSlotInsertAdjacentHTML(hostElementPrototype);
    patchSlotInsertAdjacentText(hostElementPrototype);
    patchTextContent(hostElementPrototype, descriptorPrototype);
    patchChildSlotNodes(hostElementPrototype, descriptorPrototype);
};
const patchCloneNode = (HostElementPrototype) => {
    const orgCloneNode = HostElementPrototype.cloneNode;
    HostElementPrototype.cloneNode = function (deep) {
        const srcNode = this;
        const isShadowDom = _stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.shadowDom ? srcNode.shadowRoot && supportsShadow : false;
        const clonedNode = orgCloneNode.call(srcNode, isShadowDom ? deep : false);
        if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.slot && !isShadowDom && deep) {
            let i = 0;
            let slotted, nonStencilNode;
            const stencilPrivates = [
                's-id',
                's-cr',
                's-lr',
                's-rc',
                's-sc',
                's-p',
                's-cn',
                's-sr',
                's-sn',
                's-hn',
                's-ol',
                's-nr',
                's-si',
            ];
            for (; i < srcNode.childNodes.length; i++) {
                slotted = srcNode.childNodes[i]['s-nr'];
                nonStencilNode = stencilPrivates.every((privateField) => !srcNode.childNodes[i][privateField]);
                if (slotted) {
                    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.appendChildSlotFix && clonedNode.__appendChild) {
                        clonedNode.__appendChild(slotted.cloneNode(true));
                    }
                    else {
                        clonedNode.appendChild(slotted.cloneNode(true));
                    }
                }
                if (nonStencilNode) {
                    clonedNode.appendChild(srcNode.childNodes[i].cloneNode(true));
                }
            }
        }
        return clonedNode;
    };
};
const patchSlotAppendChild = (HostElementPrototype) => {
    HostElementPrototype.__appendChild = HostElementPrototype.appendChild;
    HostElementPrototype.appendChild = function (newChild) {
        const slotName = (newChild['s-sn'] = getSlotName(newChild));
        const slotNode = getHostSlotNode(this.childNodes, slotName);
        if (slotNode) {
            const slotChildNodes = getHostSlotChildNodes(slotNode, slotName);
            const appendAfter = slotChildNodes[slotChildNodes.length - 1];
            return appendAfter.parentNode.insertBefore(newChild, appendAfter.nextSibling);
        }
        return this.__appendChild(newChild);
    };
};
/**
 * Patches the `prepend` method for a slotted node inside a scoped component.
 *
 * @param HostElementPrototype the `Element` to be patched
 */
const patchSlotPrepend = (HostElementPrototype) => {
    const originalPrepend = HostElementPrototype.prepend;
    HostElementPrototype.prepend = function (...newChildren) {
        newChildren.forEach((newChild) => {
            if (typeof newChild === 'string') {
                newChild = this.ownerDocument.createTextNode(newChild);
            }
            const slotName = (newChild['s-sn'] = getSlotName(newChild));
            const slotNode = getHostSlotNode(this.childNodes, slotName);
            if (slotNode) {
                const slotPlaceholder = document.createTextNode('');
                slotPlaceholder['s-nr'] = newChild;
                slotNode['s-cr'].parentNode.__appendChild(slotPlaceholder);
                newChild['s-ol'] = slotPlaceholder;
                const slotChildNodes = getHostSlotChildNodes(slotNode, slotName);
                const appendAfter = slotChildNodes[0];
                return appendAfter.parentNode.insertBefore(newChild, appendAfter.nextSibling);
            }
            if (newChild.nodeType === 1 && !!newChild.getAttribute('slot')) {
                newChild.hidden = true;
            }
            return originalPrepend.call(this, newChild);
        });
    };
};
/**
 * Patches the `append` method for a slotted node inside a scoped component. The patched method uses
 * `appendChild` under-the-hood while creating text nodes for any new children that passed as bare strings.
 *
 * @param HostElementPrototype the `Element` to be patched
 */
const patchSlotAppend = (HostElementPrototype) => {
    HostElementPrototype.append = function (...newChildren) {
        newChildren.forEach((newChild) => {
            if (typeof newChild === 'string') {
                newChild = this.ownerDocument.createTextNode(newChild);
            }
            this.appendChild(newChild);
        });
    };
};
/**
 * Patches the `insertAdjacentHTML` method for a slotted node inside a scoped component. Specifically,
 * we only need to patch the behavior for the specific `beforeend` and `afterbegin` positions so the element
 * gets inserted into the DOM in the correct location.
 *
 * @param HostElementPrototype the `Element` to be patched
 */
const patchSlotInsertAdjacentHTML = (HostElementPrototype) => {
    const originalInsertAdjacentHtml = HostElementPrototype.insertAdjacentHTML;
    HostElementPrototype.insertAdjacentHTML = function (position, text) {
        if (position !== 'afterbegin' && position !== 'beforeend') {
            return originalInsertAdjacentHtml.call(this, position, text);
        }
        const container = this.ownerDocument.createElement('_');
        let node;
        container.innerHTML = text;
        if (position === 'afterbegin') {
            while ((node = container.firstChild)) {
                this.prepend(node);
            }
        }
        else if (position === 'beforeend') {
            while ((node = container.firstChild)) {
                this.append(node);
            }
        }
    };
};
/**
 * Patches the `insertAdjacentText` method for a slotted node inside a scoped component. Specifically,
 * we only need to patch the behavior for the specific `beforeend` and `afterbegin` positions so the text node
 * gets inserted into the DOM in the correct location.
 *
 * @param HostElementPrototype the `Element` to be patched
 */
const patchSlotInsertAdjacentText = (HostElementPrototype) => {
    HostElementPrototype.insertAdjacentText = function (position, text) {
        this.insertAdjacentHTML(position, text);
    };
};
/**
 * Patches the `insertAdjacentElement` method for a slotted node inside a scoped component. Specifically,
 * we only need to patch the behavior for the specific `beforeend` and `afterbegin` positions so the element
 * gets inserted into the DOM in the correct location.
 *
 * @param HostElementPrototype the `Element` to be patched
 */
const patchSlotInsertAdjacentElement = (HostElementPrototype) => {
    const originalInsertAdjacentElement = HostElementPrototype.insertAdjacentElement;
    HostElementPrototype.insertAdjacentElement = function (position, element) {
        if (position !== 'afterbegin' && position !== 'beforeend') {
            return originalInsertAdjacentElement.call(this, position, element);
        }
        if (position === 'afterbegin') {
            this.prepend(element);
            return element;
        }
        else if (position === 'beforeend') {
            this.append(element);
            return element;
        }
        return element;
    };
};
/**
 * Patches the text content of an unnamed slotted node inside a scoped component
 * @param hostElementPrototype the `Element` to be patched
 * @param cmpMeta component runtime metadata used to determine if the component should be patched or not
 */
const patchTextContent = (hostElementPrototype, cmpMeta) => {
    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.scoped && cmpMeta.$flags$ & 2 /* CMP_FLAGS.scopedCssEncapsulation */) {
        const descriptor = Object.getOwnPropertyDescriptor(Node.prototype, 'textContent');
        Object.defineProperty(hostElementPrototype, '__textContent', descriptor);
        Object.defineProperty(hostElementPrototype, 'textContent', {
            get() {
                var _a;
                // get the 'default slot', which would be the first slot in a shadow tree (if we were using one), whose name is
                // the empty string
                const slotNode = getHostSlotNode(this.childNodes, '');
                // when a slot node is found, the textContent _may_ be found in the next sibling (text) node, depending on how
                // nodes were reordered during the vdom render. first try to get the text content from the sibling.
                if (((_a = slotNode === null || slotNode === void 0 ? void 0 : slotNode.nextSibling) === null || _a === void 0 ? void 0 : _a.nodeType) === 3 /* NODE_TYPES.TEXT_NODE */) {
                    return slotNode.nextSibling.textContent;
                }
                else if (slotNode) {
                    return slotNode.textContent;
                }
                else {
                    // fallback to the original implementation
                    return this.__textContent;
                }
            },
            set(value) {
                var _a;
                // get the 'default slot', which would be the first slot in a shadow tree (if we were using one), whose name is
                // the empty string
                const slotNode = getHostSlotNode(this.childNodes, '');
                // when a slot node is found, the textContent _may_ need to be placed in the next sibling (text) node,
                // depending on how nodes were reordered during the vdom render. first try to set the text content on the
                // sibling.
                if (((_a = slotNode === null || slotNode === void 0 ? void 0 : slotNode.nextSibling) === null || _a === void 0 ? void 0 : _a.nodeType) === 3 /* NODE_TYPES.TEXT_NODE */) {
                    slotNode.nextSibling.textContent = value;
                }
                else if (slotNode) {
                    slotNode.textContent = value;
                }
                else {
                    // we couldn't find a slot, but that doesn't mean that there isn't one. if this check ran before the DOM
                    // loaded, we could have missed it. check for a content reference element on the scoped component and insert
                    // it there
                    this.__textContent = value;
                    const contentRefElm = this['s-cr'];
                    if (contentRefElm) {
                        this.insertBefore(contentRefElm, this.firstChild);
                    }
                }
            },
        });
    }
};
const patchChildSlotNodes = (elm, cmpMeta) => {
    class FakeNodeList extends Array {
        item(n) {
            return this[n];
        }
    }
    // TODO(STENCIL-854): Remove code related to legacy shadowDomShim field
    if (cmpMeta.$flags$ & 8 /* CMP_FLAGS.needsShadowDomShim */) {
        const childNodesFn = elm.__lookupGetter__('childNodes');
        Object.defineProperty(elm, 'children', {
            get() {
                return this.childNodes.map((n) => n.nodeType === 1);
            },
        });
        Object.defineProperty(elm, 'childElementCount', {
            get() {
                return elm.children.length;
            },
        });
        Object.defineProperty(elm, 'childNodes', {
            get() {
                const childNodes = childNodesFn.call(this);
                if ((plt.$flags$ & 1 /* PLATFORM_FLAGS.isTmpDisconnected */) === 0 &&
                    getHostRef(this).$flags$ & 2 /* HOST_FLAGS.hasRendered */) {
                    const result = new FakeNodeList();
                    for (let i = 0; i < childNodes.length; i++) {
                        const slot = childNodes[i]['s-nr'];
                        if (slot) {
                            result.push(slot);
                        }
                    }
                    return result;
                }
                return FakeNodeList.from(childNodes);
            },
        });
    }
};
const getSlotName = (node) => node['s-sn'] || (node.nodeType === 1 && node.getAttribute('slot')) || '';
/**
 * Recursively searches a series of child nodes for a slot with the provided name.
 * @param childNodes the nodes to search for a slot with a specific name.
 * @param slotName the name of the slot to match on.
 * @returns a reference to the slot node that matches the provided name, `null` otherwise
 */
const getHostSlotNode = (childNodes, slotName) => {
    let i = 0;
    let childNode;
    for (; i < childNodes.length; i++) {
        childNode = childNodes[i];
        if (childNode['s-sr'] && childNode['s-sn'] === slotName) {
            return childNode;
        }
        childNode = getHostSlotNode(childNode.childNodes, slotName);
        if (childNode) {
            return childNode;
        }
    }
    return null;
};
const getHostSlotChildNodes = (n, slotName) => {
    const childNodes = [n];
    while ((n = n.nextSibling) && n['s-sn'] === slotName) {
        childNodes.push(n);
    }
    return childNodes;
};
const defineCustomElement = (Cstr, compactMeta) => {
    customElements.define(compactMeta[1], proxyCustomElement(Cstr, compactMeta));
};
const proxyCustomElement = (Cstr, compactMeta) => {
    const cmpMeta = {
        $flags$: compactMeta[0],
        $tagName$: compactMeta[1],
    };
    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.member) {
        cmpMeta.$members$ = compactMeta[2];
    }
    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.hostListener) {
        cmpMeta.$listeners$ = compactMeta[3];
    }
    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.watchCallback) {
        cmpMeta.$watchers$ = Cstr.$watchers$;
    }
    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.reflect) {
        cmpMeta.$attrsToReflect$ = [];
    }
    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.shadowDom && !supportsShadow && cmpMeta.$flags$ & 1 /* CMP_FLAGS.shadowDomEncapsulation */) {
        // TODO(STENCIL-854): Remove code related to legacy shadowDomShim field
        cmpMeta.$flags$ |= 8 /* CMP_FLAGS.needsShadowDomShim */;
    }
    // TODO(STENCIL-914): this check and `else` block can go away and be replaced by just `BUILD.scoped` once we
    // default our pseudo-slot behavior
    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.experimentalSlotFixes && _stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.scoped) {
        patchPseudoShadowDom(Cstr.prototype, cmpMeta);
    }
    else {
        if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.slotChildNodesFix) {
            patchChildSlotNodes(Cstr.prototype, cmpMeta);
        }
        if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.cloneNodeFix) {
            patchCloneNode(Cstr.prototype);
        }
        if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.appendChildSlotFix) {
            patchSlotAppendChild(Cstr.prototype);
        }
        if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.scopedSlotTextContentFix) {
            patchTextContent(Cstr.prototype, cmpMeta);
        }
    }
    const originalConnectedCallback = Cstr.prototype.connectedCallback;
    const originalDisconnectedCallback = Cstr.prototype.disconnectedCallback;
    Object.assign(Cstr.prototype, {
        __registerHost() {
            registerHost(this, cmpMeta);
        },
        connectedCallback() {
            connectedCallback(this);
            if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.connectedCallback && originalConnectedCallback) {
                originalConnectedCallback.call(this);
            }
        },
        disconnectedCallback() {
            disconnectedCallback(this);
            if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.disconnectedCallback && originalDisconnectedCallback) {
                originalDisconnectedCallback.call(this);
            }
        },
        __attachShadow() {
            if (supportsShadow) {
                if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.shadowDelegatesFocus) {
                    this.attachShadow({
                        mode: 'open',
                        delegatesFocus: !!(cmpMeta.$flags$ & 16 /* CMP_FLAGS.shadowDelegatesFocus */),
                    });
                }
                else {
                    this.attachShadow({ mode: 'open' });
                }
            }
            else {
                this.shadowRoot = this;
            }
        },
    });
    Cstr.is = cmpMeta.$tagName$;
    return proxyComponent(Cstr, cmpMeta, 1 /* PROXY_FLAGS.isElementConstructor */ | 2 /* PROXY_FLAGS.proxyState */);
};
const forceModeUpdate = (elm) => {
    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.style && _stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.mode && !_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.lazyLoad) {
        const mode = computeMode(elm);
        const hostRef = getHostRef(elm);
        if (hostRef.$modeName$ !== mode) {
            const cmpMeta = hostRef.$cmpMeta$;
            const oldScopeId = elm['s-sc'];
            const scopeId = getScopeId(cmpMeta, mode);
            const style = elm.constructor.style[mode];
            const flags = cmpMeta.$flags$;
            if (style) {
                if (!styles.has(scopeId)) {
                    registerStyle(scopeId, style, !!(flags & 1 /* CMP_FLAGS.shadowDomEncapsulation */));
                }
                hostRef.$modeName$ = mode;
                elm.classList.remove(oldScopeId + '-h', oldScopeId + '-s');
                attachStyles(hostRef);
                forceUpdate(elm);
            }
        }
    }
};
/**
 * Kick off hot-module-replacement for a component. In order to replace the
 * component in-place we:
 *
 * 1. get a reference to the {@link d.HostRef} for the element
 * 2. reset the element's runtime flags
 * 3. re-run the initialization logic for the element (via
 *    {@link initializeComponent})
 *
 * @param hostElement the host element for the component which we want to start
 * doing HMR
 * @param cmpMeta runtime metadata for the component
 * @param hmrVersionId the current HMR version ID
 */
const hmrStart = (hostElement, cmpMeta, hmrVersionId) => {
    // ¯\_(ツ)_/¯
    const hostRef = getHostRef(hostElement);
    // reset state flags to only have been connected
    hostRef.$flags$ = 1 /* HOST_FLAGS.hasConnected */;
    // TODO
    // detach any event listeners that may have been added
    // because we're not passing an exact event name it'll
    // remove all of this element's event, which is good
    // re-initialize the component
    initializeComponent(hostElement, hostRef, cmpMeta, hmrVersionId);
};
const bootstrapLazy = (lazyBundles, options = {}) => {
    var _a;
    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.profile && performance.mark) {
        performance.mark('st:app:start');
    }
    installDevTools();
    const endBootstrap = createTime('bootstrapLazy');
    const cmpTags = [];
    const exclude = options.exclude || [];
    const customElements = win.customElements;
    const head = doc.head;
    const metaCharset = /*@__PURE__*/ head.querySelector('meta[charset]');
    const dataStyles = /*@__PURE__*/ doc.createElement('style');
    const deferredConnectedCallbacks = [];
    const styles = /*@__PURE__*/ doc.querySelectorAll(`[${HYDRATED_STYLE_ID}]`);
    let appLoadFallback;
    let isBootstrapping = true;
    let i = 0;
    Object.assign(plt, options);
    plt.$resourcesUrl$ = new URL(options.resourcesUrl || './', doc.baseURI).href;
    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.asyncQueue) {
        if (options.syncQueue) {
            plt.$flags$ |= 4 /* PLATFORM_FLAGS.queueSync */;
        }
    }
    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.hydrateClientSide) {
        // If the app is already hydrated there is not point to disable the
        // async queue. This will improve the first input delay
        plt.$flags$ |= 2 /* PLATFORM_FLAGS.appLoaded */;
    }
    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.hydrateClientSide && _stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.shadowDom) {
        for (; i < styles.length; i++) {
            registerStyle(styles[i].getAttribute(HYDRATED_STYLE_ID), convertScopedToShadow(styles[i].innerHTML), true);
        }
    }
    let hasSlotRelocation = false;
    lazyBundles.map((lazyBundle) => {
        lazyBundle[1].map((compactMeta) => {
            var _a;
            const cmpMeta = {
                $flags$: compactMeta[0],
                $tagName$: compactMeta[1],
                $members$: compactMeta[2],
                $listeners$: compactMeta[3],
            };
            // Check if we are using slots outside the shadow DOM in this component.
            // We'll use this information later to add styles for `slot-fb` elements
            if (cmpMeta.$flags$ & 4 /* CMP_FLAGS.hasSlotRelocation */) {
                hasSlotRelocation = true;
            }
            if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.member) {
                cmpMeta.$members$ = compactMeta[2];
            }
            if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.hostListener) {
                cmpMeta.$listeners$ = compactMeta[3];
            }
            if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.reflect) {
                cmpMeta.$attrsToReflect$ = [];
            }
            if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.watchCallback) {
                cmpMeta.$watchers$ = (_a = compactMeta[4]) !== null && _a !== void 0 ? _a : {};
            }
            if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.shadowDom && !supportsShadow && cmpMeta.$flags$ & 1 /* CMP_FLAGS.shadowDomEncapsulation */) {
                // TODO(STENCIL-854): Remove code related to legacy shadowDomShim field
                cmpMeta.$flags$ |= 8 /* CMP_FLAGS.needsShadowDomShim */;
            }
            const tagName = _stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.transformTagName && options.transformTagName
                ? options.transformTagName(cmpMeta.$tagName$)
                : cmpMeta.$tagName$;
            const HostElement = class extends HTMLElement {
                // StencilLazyHost
                constructor(self) {
                    // @ts-ignore
                    super(self);
                    self = this;
                    registerHost(self, cmpMeta);
                    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.shadowDom && cmpMeta.$flags$ & 1 /* CMP_FLAGS.shadowDomEncapsulation */) {
                        // this component is using shadow dom
                        // and this browser supports shadow dom
                        // add the read-only property "shadowRoot" to the host element
                        // adding the shadow root build conditionals to minimize runtime
                        if (supportsShadow) {
                            if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.shadowDelegatesFocus) {
                                self.attachShadow({
                                    mode: 'open',
                                    delegatesFocus: !!(cmpMeta.$flags$ & 16 /* CMP_FLAGS.shadowDelegatesFocus */),
                                });
                            }
                            else {
                                self.attachShadow({ mode: 'open' });
                            }
                        }
                        else if (!_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.hydrateServerSide && !('shadowRoot' in self)) {
                            self.shadowRoot = self;
                        }
                    }
                }
                connectedCallback() {
                    if (appLoadFallback) {
                        clearTimeout(appLoadFallback);
                        appLoadFallback = null;
                    }
                    if (isBootstrapping) {
                        // connectedCallback will be processed once all components have been registered
                        deferredConnectedCallbacks.push(this);
                    }
                    else {
                        plt.jmp(() => connectedCallback(this));
                    }
                }
                disconnectedCallback() {
                    plt.jmp(() => disconnectedCallback(this));
                }
                componentOnReady() {
                    return getHostRef(this).$onReadyPromise$;
                }
            };
            // TODO(STENCIL-914): this check and `else` block can go away and be replaced by just `BUILD.scoped` once we
            // default our pseudo-slot behavior
            if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.experimentalSlotFixes && _stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.scoped) {
                patchPseudoShadowDom(HostElement.prototype, cmpMeta);
            }
            else {
                if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.slotChildNodesFix) {
                    patchChildSlotNodes(HostElement.prototype, cmpMeta);
                }
                if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.cloneNodeFix) {
                    patchCloneNode(HostElement.prototype);
                }
                if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.appendChildSlotFix) {
                    patchSlotAppendChild(HostElement.prototype);
                }
                if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.scopedSlotTextContentFix) {
                    patchTextContent(HostElement.prototype, cmpMeta);
                }
            }
            // if the component is formAssociated we need to set that on the host
            // element so that it will be ready for `attachInternals` to be called on
            // it later on
            if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.formAssociated && cmpMeta.$flags$ & 64 /* CMP_FLAGS.formAssociated */) {
                HostElement.formAssociated = true;
            }
            if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.hotModuleReplacement) {
                // if we're in an HMR dev build then we need to set up the callback
                // which will carry out the work of actually replacing the module for
                // this particular component
                HostElement.prototype['s-hmr'] = function (hmrVersionId) {
                    hmrStart(this, cmpMeta, hmrVersionId);
                };
            }
            cmpMeta.$lazyBundleId$ = lazyBundle[0];
            if (!exclude.includes(tagName) && !customElements.get(tagName)) {
                cmpTags.push(tagName);
                customElements.define(tagName, proxyComponent(HostElement, cmpMeta, 1 /* PROXY_FLAGS.isElementConstructor */));
            }
        });
    });
    // Add styles for `slot-fb` elements if any of our components are using slots outside the Shadow DOM
    if (hasSlotRelocation) {
        dataStyles.innerHTML += SLOT_FB_CSS;
    }
    // Add hydration styles
    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.invisiblePrehydration && (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.hydratedClass || _stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.hydratedAttribute)) {
        dataStyles.innerHTML += cmpTags + HYDRATED_CSS;
    }
    // If we have styles, add them to the DOM
    if (dataStyles.innerHTML.length) {
        dataStyles.setAttribute('data-styles', '');
        head.insertBefore(dataStyles, metaCharset ? metaCharset.nextSibling : head.firstChild);
        // Apply CSP nonce to the style tag if it exists
        const nonce = (_a = plt.$nonce$) !== null && _a !== void 0 ? _a : queryNonceMetaTagContent(doc);
        if (nonce != null) {
            dataStyles.setAttribute('nonce', nonce);
        }
    }
    // Process deferred connectedCallbacks now all components have been registered
    isBootstrapping = false;
    if (deferredConnectedCallbacks.length) {
        deferredConnectedCallbacks.map((host) => host.connectedCallback());
    }
    else {
        if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.profile) {
            plt.jmp(() => (appLoadFallback = setTimeout(appDidLoad, 30, 'timeout')));
        }
        else {
            plt.jmp(() => (appLoadFallback = setTimeout(appDidLoad, 30)));
        }
    }
    // Fallback appLoad event
    endBootstrap();
};
const Fragment = (_, children) => children;
const addHostEventListeners = (elm, hostRef, listeners, attachParentListeners) => {
    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.hostListener && listeners) {
        // this is called immediately within the element's constructor
        // initialize our event listeners on the host element
        // we do this now so that we can listen to events that may
        // have fired even before the instance is ready
        if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.hostListenerTargetParent) {
            // this component may have event listeners that should be attached to the parent
            if (attachParentListeners) {
                // this is being ran from within the connectedCallback
                // which is important so that we know the host element actually has a parent element
                // filter out the listeners to only have the ones that ARE being attached to the parent
                listeners = listeners.filter(([flags]) => flags & 32 /* LISTENER_FLAGS.TargetParent */);
            }
            else {
                // this is being ran from within the component constructor
                // everything BUT the parent element listeners should be attached at this time
                // filter out the listeners that are NOT being attached to the parent
                listeners = listeners.filter(([flags]) => !(flags & 32 /* LISTENER_FLAGS.TargetParent */));
            }
        }
        listeners.map(([flags, name, method]) => {
            const target = _stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.hostListenerTarget ? getHostListenerTarget(elm, flags) : elm;
            const handler = hostListenerProxy(hostRef, method);
            const opts = hostListenerOpts(flags);
            plt.ael(target, name, handler, opts);
            (hostRef.$rmListeners$ = hostRef.$rmListeners$ || []).push(() => plt.rel(target, name, handler, opts));
        });
    }
};
const hostListenerProxy = (hostRef, methodName) => (ev) => {
    try {
        if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.lazyLoad) {
            if (hostRef.$flags$ & 256 /* HOST_FLAGS.isListenReady */) {
                // instance is ready, let's call it's member method for this event
                hostRef.$lazyInstance$[methodName](ev);
            }
            else {
                (hostRef.$queuedListeners$ = hostRef.$queuedListeners$ || []).push([methodName, ev]);
            }
        }
        else {
            hostRef.$hostElement$[methodName](ev);
        }
    }
    catch (e) {
        consoleError(e);
    }
};
const getHostListenerTarget = (elm, flags) => {
    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.hostListenerTargetDocument && flags & 4 /* LISTENER_FLAGS.TargetDocument */)
        return doc;
    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.hostListenerTargetWindow && flags & 8 /* LISTENER_FLAGS.TargetWindow */)
        return win;
    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.hostListenerTargetBody && flags & 16 /* LISTENER_FLAGS.TargetBody */)
        return doc.body;
    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.hostListenerTargetParent && flags & 32 /* LISTENER_FLAGS.TargetParent */)
        return elm.parentElement;
    return elm;
};
// prettier-ignore
const hostListenerOpts = (flags) => supportsListenerOptions
    ? ({
        passive: (flags & 1 /* LISTENER_FLAGS.Passive */) !== 0,
        capture: (flags & 2 /* LISTENER_FLAGS.Capture */) !== 0,
    })
    : (flags & 2 /* LISTENER_FLAGS.Capture */) !== 0;
/**
 * Assigns the given value to the nonce property on the runtime platform object.
 * During runtime, this value is used to set the nonce attribute on all dynamically created script and style tags.
 * @param nonce The value to be assigned to the platform nonce property.
 * @returns void
 */
const setNonce = (nonce) => (plt.$nonce$ = nonce);
const setPlatformOptions = (opts) => Object.assign(plt, opts);
const insertVdomAnnotations = (doc, staticComponents) => {
    if (doc != null) {
        const docData = {
            hostIds: 0,
            rootLevelIds: 0,
            staticComponents: new Set(staticComponents),
        };
        const orgLocationNodes = [];
        parseVNodeAnnotations(doc, doc.body, docData, orgLocationNodes);
        orgLocationNodes.forEach((orgLocationNode) => {
            if (orgLocationNode != null) {
                const nodeRef = orgLocationNode['s-nr'];
                let hostId = nodeRef['s-host-id'];
                let nodeId = nodeRef['s-node-id'];
                let childId = `${hostId}.${nodeId}`;
                if (hostId == null) {
                    hostId = 0;
                    docData.rootLevelIds++;
                    nodeId = docData.rootLevelIds;
                    childId = `${hostId}.${nodeId}`;
                    if (nodeRef.nodeType === 1 /* NODE_TYPE.ElementNode */) {
                        nodeRef.setAttribute(HYDRATE_CHILD_ID, childId);
                    }
                    else if (nodeRef.nodeType === 3 /* NODE_TYPE.TextNode */) {
                        if (hostId === 0) {
                            const textContent = nodeRef.nodeValue.trim();
                            if (textContent === '') {
                                // useless whitespace node at the document root
                                orgLocationNode.remove();
                                return;
                            }
                        }
                        const commentBeforeTextNode = doc.createComment(childId);
                        commentBeforeTextNode.nodeValue = `${TEXT_NODE_ID}.${childId}`;
                        nodeRef.parentNode.insertBefore(commentBeforeTextNode, nodeRef);
                    }
                }
                let orgLocationNodeId = `${ORG_LOCATION_ID}.${childId}`;
                const orgLocationParentNode = orgLocationNode.parentElement;
                if (orgLocationParentNode) {
                    if (orgLocationParentNode['s-en'] === '') {
                        // ending with a "." means that the parent element
                        // of this node's original location is a SHADOW dom element
                        // and this node is apart of the root level light dom
                        orgLocationNodeId += `.`;
                    }
                    else if (orgLocationParentNode['s-en'] === 'c') {
                        // ending with a ".c" means that the parent element
                        // of this node's original location is a SCOPED element
                        // and this node is apart of the root level light dom
                        orgLocationNodeId += `.c`;
                    }
                }
                orgLocationNode.nodeValue = orgLocationNodeId;
            }
        });
    }
};
const parseVNodeAnnotations = (doc, node, docData, orgLocationNodes) => {
    if (node == null) {
        return;
    }
    if (node['s-nr'] != null) {
        orgLocationNodes.push(node);
    }
    if (node.nodeType === 1 /* NODE_TYPE.ElementNode */) {
        node.childNodes.forEach((childNode) => {
            const hostRef = getHostRef(childNode);
            if (hostRef != null && !docData.staticComponents.has(childNode.nodeName.toLowerCase())) {
                const cmpData = {
                    nodeIds: 0,
                };
                insertVNodeAnnotations(doc, childNode, hostRef.$vnode$, docData, cmpData);
            }
            parseVNodeAnnotations(doc, childNode, docData, orgLocationNodes);
        });
    }
};
const insertVNodeAnnotations = (doc, hostElm, vnode, docData, cmpData) => {
    if (vnode != null) {
        const hostId = ++docData.hostIds;
        hostElm.setAttribute(HYDRATE_ID, hostId);
        if (hostElm['s-cr'] != null) {
            hostElm['s-cr'].nodeValue = `${CONTENT_REF_ID}.${hostId}`;
        }
        if (vnode.$children$ != null) {
            const depth = 0;
            vnode.$children$.forEach((vnodeChild, index) => {
                insertChildVNodeAnnotations(doc, vnodeChild, cmpData, hostId, depth, index);
            });
        }
        if (hostElm && vnode && vnode.$elm$ && !hostElm.hasAttribute('c-id')) {
            const parent = hostElm.parentElement;
            if (parent && parent.childNodes) {
                const parentChildNodes = Array.from(parent.childNodes);
                const comment = parentChildNodes.find((node) => node.nodeType === 8 /* NODE_TYPE.CommentNode */ && node['s-sr']);
                if (comment) {
                    const index = parentChildNodes.indexOf(hostElm) - 1;
                    vnode.$elm$.setAttribute(HYDRATE_CHILD_ID, `${comment['s-host-id']}.${comment['s-node-id']}.0.${index}`);
                }
            }
        }
    }
};
const insertChildVNodeAnnotations = (doc, vnodeChild, cmpData, hostId, depth, index) => {
    const childElm = vnodeChild.$elm$;
    if (childElm == null) {
        return;
    }
    const nodeId = cmpData.nodeIds++;
    const childId = `${hostId}.${nodeId}.${depth}.${index}`;
    childElm['s-host-id'] = hostId;
    childElm['s-node-id'] = nodeId;
    if (childElm.nodeType === 1 /* NODE_TYPE.ElementNode */) {
        childElm.setAttribute(HYDRATE_CHILD_ID, childId);
    }
    else if (childElm.nodeType === 3 /* NODE_TYPE.TextNode */) {
        const parentNode = childElm.parentNode;
        const nodeName = parentNode.nodeName;
        if (nodeName !== 'STYLE' && nodeName !== 'SCRIPT') {
            const textNodeId = `${TEXT_NODE_ID}.${childId}`;
            const commentBeforeTextNode = doc.createComment(textNodeId);
            parentNode.insertBefore(commentBeforeTextNode, childElm);
        }
    }
    else if (childElm.nodeType === 8 /* NODE_TYPE.CommentNode */) {
        if (childElm['s-sr']) {
            const slotName = childElm['s-sn'] || '';
            const slotNodeId = `${SLOT_NODE_ID}.${childId}.${slotName}`;
            childElm.nodeValue = slotNodeId;
        }
    }
    if (vnodeChild.$children$ != null) {
        const childDepth = depth + 1;
        vnodeChild.$children$.forEach((vnode, index) => {
            insertChildVNodeAnnotations(doc, vnode, cmpData, hostId, childDepth, index);
        });
    }
};
/**
 * A WeakMap mapping runtime component references to their corresponding host reference
 * instances.
 */
const hostRefs = /*@__PURE__*/ new WeakMap();
/**
 * Given a {@link d.RuntimeRef} retrieve the corresponding {@link d.HostRef}
 *
 * @param ref the runtime ref of interest
 * @returns the Host reference (if found) or undefined
 */
const getHostRef = (ref) => hostRefs.get(ref);
/**
 * Register a lazy instance with the {@link hostRefs} object so it's
 * corresponding {@link d.HostRef} can be retrieved later.
 *
 * @param lazyInstance the lazy instance of interest
 * @param hostRef that instances `HostRef` object
 * @returns a reference to the host ref WeakMap
 */
const registerInstance = (lazyInstance, hostRef) => hostRefs.set((hostRef.$lazyInstance$ = lazyInstance), hostRef);
/**
 * Register a host element for a Stencil component, setting up various metadata
 * and callbacks based on {@link BUILD} flags as well as the component's runtime
 * metadata.
 *
 * @param hostElement the host element to register
 * @param cmpMeta runtime metadata for that component
 * @returns a reference to the host ref WeakMap
 */
const registerHost = (hostElement, cmpMeta) => {
    const hostRef = {
        $flags$: 0,
        $hostElement$: hostElement,
        $cmpMeta$: cmpMeta,
        $instanceValues$: new Map(),
    };
    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.isDev) {
        hostRef.$renderCount$ = 0;
    }
    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.method && _stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.lazyLoad) {
        hostRef.$onInstancePromise$ = new Promise((r) => (hostRef.$onInstanceResolve$ = r));
    }
    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.asyncLoading) {
        hostRef.$onReadyPromise$ = new Promise((r) => (hostRef.$onReadyResolve$ = r));
        hostElement['s-p'] = [];
        hostElement['s-rc'] = [];
    }
    addHostEventListeners(hostElement, hostRef, cmpMeta.$listeners$, false);
    return hostRefs.set(hostElement, hostRef);
};
const isMemberInElement = (elm, memberName) => memberName in elm;
const consoleError = (e, el) => (customError || console.error)(e, el);
const STENCIL_DEV_MODE = _stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.isTesting
    ? ['STENCIL:'] // E2E testing
    : [
        '%cstencil',
        'color: white;background:#4c47ff;font-weight: bold; font-size:10px; padding:2px 6px; border-radius: 5px',
    ];
const consoleDevError = (...m) => console.error(...STENCIL_DEV_MODE, ...m);
const consoleDevWarn = (...m) => console.warn(...STENCIL_DEV_MODE, ...m);
const consoleDevInfo = (...m) => console.info(...STENCIL_DEV_MODE, ...m);
const setErrorHandler = (handler) => (customError = handler);
const cmpModules = /*@__PURE__*/ new Map();
const loadModule = (cmpMeta, hostRef, hmrVersionId) => {
    // loadModuleImport
    const exportName = cmpMeta.$tagName$.replace(/-/g, '_');
    const bundleId = cmpMeta.$lazyBundleId$;
    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.isDev && typeof bundleId !== 'string') {
        consoleDevError(`Trying to lazily load component <${cmpMeta.$tagName$}> with style mode "${hostRef.$modeName$}", but it does not exist.`);
        return undefined;
    }
    const module = !_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.hotModuleReplacement ? cmpModules.get(bundleId) : false;
    if (module) {
        return module[exportName];
    }
    /*!__STENCIL_STATIC_IMPORT_SWITCH__*/
    return __webpack_require__("./node_modules/@stencil/core/internal/client lazy recursive ^\\.\\/.*\\.entry\\.js.*$ include: \\.entry\\.js$ exclude: \\.system\\.entry\\.js$")(`./${bundleId}.entry.js${_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.hotModuleReplacement && hmrVersionId ? '?s-hmr=' + hmrVersionId : ''}`).then((importedModule) => {
        if (!_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.hotModuleReplacement) {
            cmpModules.set(bundleId, importedModule);
        }
        return importedModule[exportName];
    }, consoleError);
};
const styles = /*@__PURE__*/ new Map();
const modeResolutionChain = [];
const win = typeof window !== 'undefined' ? window : {};
const doc = win.document || { head: {} };
const H = (win.HTMLElement || class {
});
const plt = {
    $flags$: 0,
    $resourcesUrl$: '',
    jmp: (h) => h(),
    raf: (h) => requestAnimationFrame(h),
    ael: (el, eventName, listener, opts) => el.addEventListener(eventName, listener, opts),
    rel: (el, eventName, listener, opts) => el.removeEventListener(eventName, listener, opts),
    ce: (eventName, opts) => new CustomEvent(eventName, opts),
};
const setPlatformHelpers = (helpers) => {
    Object.assign(plt, helpers);
};
const supportsShadow = 
// TODO(STENCIL-854): Remove code related to legacy shadowDomShim field
_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.shadowDomShim && _stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.shadowDom
    ? /*@__PURE__*/ (() => (doc.head.attachShadow + '').indexOf('[native') > -1)()
    : true;
const supportsListenerOptions = /*@__PURE__*/ (() => {
    let supportsListenerOptions = false;
    try {
        doc.addEventListener('e', null, Object.defineProperty({}, 'passive', {
            get() {
                supportsListenerOptions = true;
            },
        }));
    }
    catch (e) { }
    return supportsListenerOptions;
})();
const promiseResolve = (v) => Promise.resolve(v);
const supportsConstructableStylesheets = _stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.constructableCSS
    ? /*@__PURE__*/ (() => {
        try {
            new CSSStyleSheet();
            return typeof new CSSStyleSheet().replaceSync === 'function';
        }
        catch (e) { }
        return false;
    })()
    : false;
const queueDomReads = [];
const queueDomWrites = [];
const queueDomWritesLow = [];
const queueTask = (queue, write) => (cb) => {
    queue.push(cb);
    if (!queuePending) {
        queuePending = true;
        if (write && plt.$flags$ & 4 /* PLATFORM_FLAGS.queueSync */) {
            nextTick(flush);
        }
        else {
            plt.raf(flush);
        }
    }
};
const consume = (queue) => {
    for (let i = 0; i < queue.length; i++) {
        try {
            queue[i](performance.now());
        }
        catch (e) {
            consoleError(e);
        }
    }
    queue.length = 0;
};
const consumeTimeout = (queue, timeout) => {
    let i = 0;
    let ts = 0;
    while (i < queue.length && (ts = performance.now()) < timeout) {
        try {
            queue[i++](ts);
        }
        catch (e) {
            consoleError(e);
        }
    }
    if (i === queue.length) {
        queue.length = 0;
    }
    else if (i !== 0) {
        queue.splice(0, i);
    }
};
const flush = () => {
    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.asyncQueue) {
        queueCongestion++;
    }
    // always force a bunch of medium callbacks to run, but still have
    // a throttle on how many can run in a certain time
    // DOM READS!!!
    consume(queueDomReads);
    // DOM WRITES!!!
    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.asyncQueue) {
        const timeout = (plt.$flags$ & 6 /* PLATFORM_FLAGS.queueMask */) === 2 /* PLATFORM_FLAGS.appLoaded */
            ? performance.now() + 14 * Math.ceil(queueCongestion * (1.0 / 10.0))
            : Infinity;
        consumeTimeout(queueDomWrites, timeout);
        consumeTimeout(queueDomWritesLow, timeout);
        if (queueDomWrites.length > 0) {
            queueDomWritesLow.push(...queueDomWrites);
            queueDomWrites.length = 0;
        }
        if ((queuePending = queueDomReads.length + queueDomWrites.length + queueDomWritesLow.length > 0)) {
            // still more to do yet, but we've run out of time
            // let's let this thing cool off and try again in the next tick
            plt.raf(flush);
        }
        else {
            queueCongestion = 0;
        }
    }
    else {
        consume(queueDomWrites);
        if ((queuePending = queueDomReads.length > 0)) {
            // still more to do yet, but we've run out of time
            // let's let this thing cool off and try again in the next tick
            plt.raf(flush);
        }
    }
};
const nextTick = (cb) => promiseResolve().then(cb);
const readTask = /*@__PURE__*/ queueTask(queueDomReads, false);
const writeTask = /*@__PURE__*/ queueTask(queueDomWrites, true);




/***/ }),

/***/ "./node_modules/@stencil/core/internal/client lazy recursive ^\\.\\/.*\\.entry\\.js.*$ include: \\.entry\\.js$ exclude: \\.system\\.entry\\.js$":
/*!*****************************************************************************************************************************************************!*\
  !*** ./node_modules/@stencil/core/internal/client/ lazy ^\.\/.*\.entry\.js.*$ include: \.entry\.js$ exclude: \.system\.entry\.js$ namespace object ***!
  \*****************************************************************************************************************************************************/
/***/ ((module) => {

function webpackEmptyAsyncContext(req) {
	// Here Promise.resolve().then() is used instead of new Promise() to prevent
	// uncaught exception popping up in devtools
	return Promise.resolve().then(() => {
		var e = new Error("Cannot find module '" + req + "'");
		e.code = 'MODULE_NOT_FOUND';
		throw e;
	});
}
webpackEmptyAsyncContext.keys = () => ([]);
webpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;
webpackEmptyAsyncContext.id = "./node_modules/@stencil/core/internal/client lazy recursive ^\\.\\/.*\\.entry\\.js.*$ include: \\.entry\\.js$ exclude: \\.system\\.entry\\.js$";
module.exports = webpackEmptyAsyncContext;

/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!./node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[2]!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[3]!./node_modules/@esri/calcite-components/dist/calcite/calcite.css":
/*!************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!./node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[2]!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[3]!./node_modules/@esri/calcite-components/dist/calcite/calcite.css ***!
  \************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../css-loader/dist/runtime/sourceMaps.js */ "./node_modules/css-loader/dist/runtime/sourceMaps.js");
/* harmony import */ var _css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../css-loader/dist/runtime/api.js */ "./node_modules/css-loader/dist/runtime/api.js");
/* harmony import */ var _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);
// Imports


var ___CSS_LOADER_EXPORT___ = _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));
// Module
___CSS_LOADER_EXPORT___.push([module.id, `:root {
  --calcite-z-index-tooltip:901;
  --calcite-z-index-popup:900;
  --calcite-z-index-modal:800;
  --calcite-z-index-overlay:700;
  --calcite-z-index-dropdown:600;
  --calcite-z-index-toast:500;
  --calcite-z-index-header:400;
  --calcite-z-index-sticky:300;
  --calcite-z-index:1;
  --calcite-z-index-deep:-999999;
  --calcite-spacing-xxxl:32px;
  --calcite-spacing-xxl:20px;
  --calcite-spacing-xl:16px;
  --calcite-spacing-lg:14px;
  --calcite-spacing-md:12px;
  --calcite-spacing-sm:8px;
  --calcite-spacing-xs:6px;
  --calcite-spacing-xxs:4px;
  --calcite-spacing-base:2px;
  --calcite-spacing-px:1px;
  --calcite-size-xxxl:32px;
  --calcite-size-xxl:24px;
  --calcite-size-xl:20px;
  --calcite-size-lg:16px;
  --calcite-size-md-plus:14px;
  --calcite-size-md:12px;
  --calcite-size-sm-plus:10px;
  --calcite-size-sm:8px;
  --calcite-size-xs:6px;
  --calcite-size-xxs:4px;
  --calcite-size-xxxs:2px;
  --calcite-size-px:1px;
  --calcite-opacity-disabled:0.5;
  --calcite-opacity-full:1;
  --calcite-opacity-dark:0.85;
  --calcite-opacity-half:0.5;
  --calcite-opacity-light:0.4;
  --calcite-font-text-case-capitalize:capitalize;
  --calcite-font-text-case-lowercase:lowercase;
  --calcite-font-text-case-uppercase:uppercase;
  --calcite-font-text-case-none:none;
  --calcite-font-text-decoration-underline:underline;
  --calcite-font-text-decoration-none:none;
  --calcite-font-paragraph-spacing-normal:4px;
  --calcite-font-letter-spacing-wide:0.4;
  --calcite-font-letter-spacing-normal:0;
  --calcite-font-letter-spacing-tight:-0.4;
  --calcite-font-line-height-relative-loose:2;
  --calcite-font-line-height-relative-relaxed:1.625;
  --calcite-font-line-height-relative-normal:1.5;
  --calcite-font-line-height-relative-snug:1.375;
  --calcite-font-line-height-relative-tight:1.25;
  --calcite-font-line-height-relative:auto;
  --calcite-font-line-height-fixed-xl:24px;
  --calcite-font-line-height-fixed-lg:20px;
  --calcite-font-line-height-fixed-base:16px;
  --calcite-font-line-height-fixed-sm:12px;
  --calcite-font-style-emphasis:italic;
  --calcite-font-size-xxl:24px;
  --calcite-font-size-xl:20px;
  --calcite-font-size-lg:18px;
  --calcite-font-size-md:16px;
  --calcite-font-size:14px;
  --calcite-font-size-sm:12px;
  --calcite-font-size-xs:10px;
  --calcite-font-weight-bold:700;
  --calcite-font-weight-semibold:600;
  --calcite-font-weight-medium:500;
  --calcite-font-weight-regular:400;
  --calcite-font-weight-normal:400;
  --calcite-font-weight-light:300;
  --calcite-font-family-code:Monaco;
  --calcite-font-family:"Avenir Next LT Pro";
  --calcite-container-size-content-fixed:1440px;
  --calcite-container-size-content-fluid:100%;
  --calcite-container-size-gutter:16px;
  --calcite-container-size-margin:24px;
  --calcite-color-background-none:rgba(#ffffff, 0);
  --calcite-corner-radius-pill:100%;
  --calcite-corner-radius-round:4px;
  --calcite-corner-radius-sharp:0;
  --calcite-border-width-lg:4px;
  --calcite-border-width-md:2px;
  --calcite-border-width-sm:1px;
  --calcite-border-width-none:0;
  --calcite-shadow-md:0 4px 20px 0 rgba(0, 0, 0, 0.08), 0 12px 30px rgba(0, 0, 0, 0.1);
  --calcite-shadow-sm:0 2px 8px 0 rgba(0, 0, 0, 0.04), 0 4px 16px 0 rgba(0, 0, 0, 0.08);
  --calcite-shadow-none:0 0 0 0 rgba(0, 0, 0, 0);
  --calcite-corner-radius:var(--calcite-corner-radius-sharp);
}

.calcite-typography-hierarchy-overline {
  line-height: var(--calcite-font-line-height-fixed-sm);
  text-case: var(--calcite-font-text-case-uppercase);
  font-weight: var(--calcite-font-weight-bold);
}

.calcite-typography-wrap-bold-minus-1 {
  font-weight: var(--calcite-font-weight-semibold);
  line-height: var(--calcite-font-line-height-relative-snug);
}

.calcite-typography-wrap-bold-minus-2 {
  font-weight: var(--calcite-font-weight-semibold);
  line-height: var(--calcite-font-line-height-relative-snug);
  font-size: var(--calcite-font-size-sm);
}

.calcite-typography-wrap-bold-3 {
  font-weight: var(--calcite-font-weight-semibold);
  line-height: var(--calcite-font-line-height-relative-snug);
  font-size: var(--calcite-font-size-xxl);
}

.calcite-typography-wrap-bold-2 {
  font-weight: var(--calcite-font-weight-semibold);
  line-height: var(--calcite-font-line-height-relative-snug);
  font-size: var(--calcite-font-size-xl);
}

.calcite-typography-wrap-bold-1 {
  font-weight: var(--calcite-font-weight-semibold);
  line-height: var(--calcite-font-line-height-relative-snug);
  font-size: var(--calcite-font-size-lg);
}

.calcite-typography-wrap-bold-0 {
  font-weight: var(--calcite-font-weight-semibold);
  line-height: var(--calcite-font-line-height-relative-snug);
  font-size: var(--calcite-font-size-md);
}

.calcite-typography-wrap-medium-minus-1 {
  font-weight: var(--calcite-font-weight-medium);
  line-height: var(--calcite-font-line-height-relative-snug);
}

.calcite-typography-wrap-medium-minus-2 {
  font-weight: var(--calcite-font-weight-medium);
  line-height: var(--calcite-font-line-height-relative-snug);
  font-size: var(--calcite-font-size-sm);
}

.calcite-typography-wrap-medium-3 {
  font-weight: var(--calcite-font-weight-medium);
  line-height: var(--calcite-font-line-height-relative-snug);
  font-size: var(--calcite-font-size-xxl);
}

.calcite-typography-wrap-medium-2 {
  font-weight: var(--calcite-font-weight-medium);
  line-height: var(--calcite-font-line-height-relative-snug);
  font-size: var(--calcite-font-size-xl);
}

.calcite-typography-wrap-medium-1 {
  font-weight: var(--calcite-font-weight-medium);
  line-height: var(--calcite-font-line-height-relative-snug);
  font-size: var(--calcite-font-size-lg);
}

.calcite-typography-wrap-medium-0 {
  font-weight: var(--calcite-font-weight-medium);
  line-height: var(--calcite-font-line-height-relative-snug);
  font-size: var(--calcite-font-size-md);
}

.calcite-typography-wrap-regular-minus-1 {
  line-height: var(--calcite-font-line-height-relative-snug);
}

.calcite-typography-wrap-regular-minus-2 {
  line-height: var(--calcite-font-line-height-relative-snug);
  font-size: var(--calcite-font-size-sm);
}

.calcite-typography-wrap-regular-3 {
  line-height: var(--calcite-font-line-height-relative-snug);
  font-size: var(--calcite-font-size-xxl);
}

.calcite-typography-wrap-regular-2 {
  line-height: var(--calcite-font-line-height-relative-snug);
  font-size: var(--calcite-font-size-xl);
}

.calcite-typography-wrap-regular-1 {
  line-height: var(--calcite-font-line-height-relative-snug);
  font-size: var(--calcite-font-size-lg);
}

.calcite-typography-wrap-regular-0 {
  line-height: var(--calcite-font-line-height-relative-snug);
  font-size: var(--calcite-font-size-md);
}

.calcite-typography-wrap-light-minus-1 {
  font-weight: var(--calcite-font-weight-light);
  line-height: var(--calcite-font-line-height-relative-snug);
}

.calcite-typography-wrap-light-minus-2 {
  font-weight: var(--calcite-font-weight-light);
  line-height: var(--calcite-font-line-height-relative-snug);
  font-size: var(--calcite-font-size-sm);
}

.calcite-typography-wrap-light-3 {
  font-weight: var(--calcite-font-weight-light);
  line-height: var(--calcite-font-line-height-relative-tight);
  font-size: var(--calcite-font-size-xxl);
}

.calcite-typography-wrap-light-2 {
  font-weight: var(--calcite-font-weight-light);
  line-height: var(--calcite-font-line-height-relative-snug);
  font-size: var(--calcite-font-size-xl);
}

.calcite-typography-wrap-light-1 {
  font-weight: var(--calcite-font-weight-light);
  line-height: var(--calcite-font-line-height-relative-snug);
  font-size: var(--calcite-font-size-lg);
}

.calcite-typography-wrap-light-0 {
  font-weight: var(--calcite-font-weight-light);
  line-height: var(--calcite-font-line-height-relative-snug);
  font-size: var(--calcite-font-size-md);
}

.calcite-typography-bold-1h {
  font-weight: var(--calcite-font-weight-semibold);
  line-height: var(--calcite-font-line-height-fixed-xl);
  font-size: var(--calcite-font-size-lg);
}

.calcite-typography-bold-0h {
  font-weight: var(--calcite-font-weight-semibold);
  line-height: var(--calcite-font-line-height-fixed-lg);
  font-size: var(--calcite-font-size-md);
}

.calcite-typography-bold-minus-1h {
  font-weight: var(--calcite-font-weight-semibold);
}

.calcite-typography-bold-minus-2h {
  font-weight: var(--calcite-font-weight-semibold);
  font-size: var(--calcite-font-size-sm);
}

.calcite-typography-bold-minus-3h {
  font-weight: var(--calcite-font-weight-semibold);
  line-height: var(--calcite-font-line-height-fixed-sm);
  font-size: var(--calcite-font-size-xs);
}

.calcite-typography-medium-1h {
  font-weight: var(--calcite-font-weight-medium);
  line-height: var(--calcite-font-line-height-fixed-xl);
  font-size: var(--calcite-font-size-lg);
}

.calcite-typography-medium-0h {
  font-weight: var(--calcite-font-weight-medium);
  line-height: var(--calcite-font-line-height-fixed-lg);
  font-size: var(--calcite-font-size-md);
}

.calcite-typography-medium-minus-1h {
  font-weight: var(--calcite-font-weight-medium);
}

.calcite-typography-medium-minus-2h {
  font-weight: var(--calcite-font-weight-medium);
  font-size: var(--calcite-font-size-sm);
}

.calcite-typography-medium-minus-3h {
  font-weight: var(--calcite-font-weight-medium);
  line-height: var(--calcite-font-line-height-fixed-sm);
  font-size: var(--calcite-font-size-xs);
}

.calcite-typography-regular-1h {
  line-height: var(--calcite-font-line-height-fixed-xl);
  font-size: var(--calcite-font-size-lg);
}

.calcite-typography-regular-0h {
  line-height: var(--calcite-font-line-height-fixed-lg);
  font-size: var(--calcite-font-size-md);
}

.calcite-typography-regular-minus-2h {
  font-size: var(--calcite-font-size-sm);
}

.calcite-typography-regular-minus-3h {
  line-height: var(--calcite-font-line-height-fixed-sm);
  font-size: var(--calcite-font-size-xs);
}

.calcite-typography-light-1h {
  font-size: var(--calcite-font-size-lg);
  font-weight: var(--calcite-font-weight-light);
  line-height: var(--calcite-font-line-height-fixed-xl);
}

.calcite-typography-light-0h {
  font-size: var(--calcite-font-size-md);
  font-weight: var(--calcite-font-weight-light);
  line-height: var(--calcite-font-line-height-fixed-lg);
}

.calcite-typography-light-minus-1h {
  font-weight: var(--calcite-font-weight-light);
}

.calcite-typography-light-minus-2h {
  font-size: var(--calcite-font-size-sm);
  font-weight: var(--calcite-font-weight-light);
}

.calcite-typography-light-minus-3h {
  font-size: var(--calcite-font-size-xs);
  font-weight: var(--calcite-font-weight-light);
  line-height: var(--calcite-font-line-height-fixed-sm);
}

.calcite-typography {
  font-family: var(--calcite-font-family);
  font-size: var(--calcite-font-size);
  font-weight: var(--calcite-font-weight-regular);
  letter-spacing: var(--calcite-font-letter-spacing-normal);
  line-height: var(--calcite-font-line-height-fixed-base);
  paragraph-spacing: var(--calcite-font-paragraph-spacing-normal);
  text-case: var(--calcite-font-text-case-none);
  text-decoration: var(--calcite-font-text-decoration-none);
}

.calcite-typography-hierarchy-caption {
  line-height: 1.375;
  font-size: 12px;
}

.calcite-typography-hierarchy-body {
  font-family: "Avenir Next LT Pro";
  font-size: 14px;
  font-weight: 400;
  letter-spacing: 0;
  line-height: 16px;
  paragraph-spacing: 4px;
  text-case: none;
  text-decoration: none;
}

.calcite-typography-hierarchy-body-snug {
  line-height: 1.375;
}

.calcite-typography-hierarchy-heading-5 {
  font-weight: 500;
  line-height: 1.375;
}

.calcite-typography-hierarchy-heading-4 {
  font-weight: 500;
  line-height: 1.375;
  font-size: 16px;
}

.calcite-typography-hierarchy-heading-3 {
  font-weight: 500;
  line-height: 1.375;
  font-size: 18px;
}

.calcite-typography-hierarchy-heading-2 {
  font-weight: 500;
  line-height: 1.375;
  font-size: 20px;
}

.calcite-typography-hierarchy-heading-1 {
  font-weight: 500;
  line-height: 1.375;
  font-size: 24px;
}

.calcite-typography-hierarchy-display-2 {
  font-weight: 600;
  line-height: 1.375;
  font-size: 20px;
}

.calcite-typography-hierarchy-display-1 {
  font-weight: 600;
  line-height: 1.375;
  font-size: 24px;
}

.calcite-typography-regular-minus-1h {
  font-family: "Avenir Next LT Pro";
  font-size: 14px;
  font-weight: 400;
  letter-spacing: 0;
  line-height: 16px;
  paragraph-spacing: 4px;
  text-case: none;
  text-decoration: none;
}

@media (prefers-color-scheme: light) {
  :root {
    --calcite-color-border-white:#ffffff;
    --calcite-color-border-ghost:rgba(0, 0, 0, 0.3);
    --calcite-color-border-input:#949494;
    --calcite-color-border-3:#dfdfdf;
    --calcite-color-border-2:#d4d4d4;
    --calcite-color-border-1:#cacaca;
    --calcite-color-text-link:#00619b;
    --calcite-color-text-inverse:#ffffff;
    --calcite-color-text-3:#6a6a6a;
    --calcite-color-text-2:#4a4a4a;
    --calcite-color-text-1:#151515;
    --calcite-color-inverse-press:#202020;
    --calcite-color-inverse-hover:#2b2b2b;
    --calcite-color-inverse:#353535;
    --calcite-color-status-danger-press:#7c1d13;
    --calcite-color-status-danger-hover:#a82b1e;
    --calcite-color-status-danger:#d83020;
    --calcite-color-status-warning-press:#bfa200;
    --calcite-color-status-warning-hover:#d9bc00;
    --calcite-color-status-warning:#edd317;
    --calcite-color-status-success-press:#1a6324;
    --calcite-color-status-success-hover:#288835;
    --calcite-color-status-success:#35ac46;
    --calcite-color-status-info-press:#00304d;
    --calcite-color-status-info-hover:#004874;
    --calcite-color-status-info:#00619b;
    --calcite-color-brand-underline:rgba(0, 97, 155, 0.4);
    --calcite-color-brand-press:#004874;
    --calcite-color-brand-hover:#00619b;
    --calcite-color-brand:#007ac2;
    --calcite-color-transparent-tint:rgba(255, 255, 255, 0.8);
    --calcite-color-transparent-scrim:rgba(255, 255, 255, 0.85);
    --calcite-color-transparent-press:rgba(0, 0, 0, 0.08);
    --calcite-color-transparent-hover:rgba(0, 0, 0, 0.04);
    --calcite-color-transparent:rgba(0, 0, 0, 0);
    --calcite-color-foreground-current:#c7eaff;
    --calcite-color-foreground-3:#eaeaea;
    --calcite-color-foreground-2:#f3f3f3;
    --calcite-color-foreground-1:#ffffff;
    --calcite-color-background:#f8f8f8;
  }
}
@media (prefers-color-scheme: dark) {
  :root {
    --calcite-color-border-white:#f8f8f8;
    --calcite-color-border-ghost:rgba(117, 117, 117, 0.3);
    --calcite-color-border-input:#757575;
    --calcite-color-border-3:#404040;
    --calcite-color-border-2:#4a4a4a;
    --calcite-color-border-1:#555555;
    --calcite-color-text-link:#00A0FF;
    --calcite-color-text-inverse:#151515;
    --calcite-color-text-3:#9f9f9f;
    --calcite-color-text-2:#bfbfbf;
    --calcite-color-text-1:#ffffff;
    --calcite-color-inverse-press:#f3f3f3;
    --calcite-color-inverse-hover:#ffffff;
    --calcite-color-inverse:#f8f8f8;
    --calcite-color-status-danger-press:#d90012;
    --calcite-color-status-danger-hover:#ff0015;
    --calcite-color-status-danger:#FE583E;
    --calcite-color-status-warning-press:#f5d000;
    --calcite-color-status-warning-hover:#ffee33;
    --calcite-color-status-warning:#FFC900;
    --calcite-color-status-success-press:#00b81b;
    --calcite-color-status-success-hover:#3bed52;
    --calcite-color-status-success:#36DA43;
    --calcite-color-status-info-press:#009af2;
    --calcite-color-status-info-hover:#3db8ff;
    --calcite-color-status-info:#00A0FF;
    --calcite-color-brand-underline:rgba(0, 160, 255, 0.4);
    --calcite-color-brand-press:#00619b;
    --calcite-color-brand-hover:#007ac2;
    --calcite-color-brand:#009af2;
    --calcite-color-transparent-tint:rgba(43, 43, 43, 0.8);
    --calcite-color-transparent-scrim:rgba(0, 0, 0, 0.85);
    --calcite-color-transparent-press:rgba(255, 255, 255, 0.08);
    --calcite-color-transparent-hover:rgba(255, 255, 255, 0.04);
    --calcite-color-transparent:rgba(255, 255, 255, 0);
    --calcite-color-foreground-current:#214155;
    --calcite-color-foreground-3:#151515;
    --calcite-color-foreground-2:#202020;
    --calcite-color-foreground-1:#2b2b2b;
    --calcite-color-background:#353535;
  }
}
.calcite-mode-light {
  --calcite-color-border-white:#ffffff;
  --calcite-color-border-ghost:rgba(0, 0, 0, 0.3);
  --calcite-color-border-input:#949494;
  --calcite-color-border-3:#dfdfdf;
  --calcite-color-border-2:#d4d4d4;
  --calcite-color-border-1:#cacaca;
  --calcite-color-text-link:#00619b;
  --calcite-color-text-inverse:#ffffff;
  --calcite-color-text-3:#6a6a6a;
  --calcite-color-text-2:#4a4a4a;
  --calcite-color-text-1:#151515;
  --calcite-color-inverse-press:#202020;
  --calcite-color-inverse-hover:#2b2b2b;
  --calcite-color-inverse:#353535;
  --calcite-color-status-danger-press:#7c1d13;
  --calcite-color-status-danger-hover:#a82b1e;
  --calcite-color-status-danger:#d83020;
  --calcite-color-status-warning-press:#bfa200;
  --calcite-color-status-warning-hover:#d9bc00;
  --calcite-color-status-warning:#edd317;
  --calcite-color-status-success-press:#1a6324;
  --calcite-color-status-success-hover:#288835;
  --calcite-color-status-success:#35ac46;
  --calcite-color-status-info-press:#00304d;
  --calcite-color-status-info-hover:#004874;
  --calcite-color-status-info:#00619b;
  --calcite-color-brand-underline:rgba(0, 97, 155, 0.4);
  --calcite-color-brand-press:#004874;
  --calcite-color-brand-hover:#00619b;
  --calcite-color-brand:#007ac2;
  --calcite-color-transparent-tint:rgba(255, 255, 255, 0.8);
  --calcite-color-transparent-scrim:rgba(255, 255, 255, 0.85);
  --calcite-color-transparent-press:rgba(0, 0, 0, 0.08);
  --calcite-color-transparent-hover:rgba(0, 0, 0, 0.04);
  --calcite-color-transparent:rgba(0, 0, 0, 0);
  --calcite-color-foreground-current:#c7eaff;
  --calcite-color-foreground-3:#eaeaea;
  --calcite-color-foreground-2:#f3f3f3;
  --calcite-color-foreground-1:#ffffff;
  --calcite-color-background:#f8f8f8;
}

.calcite-mode-dark {
  --calcite-color-border-white:#f8f8f8;
  --calcite-color-border-ghost:rgba(117, 117, 117, 0.3);
  --calcite-color-border-input:#757575;
  --calcite-color-border-3:#404040;
  --calcite-color-border-2:#4a4a4a;
  --calcite-color-border-1:#555555;
  --calcite-color-text-link:#00A0FF;
  --calcite-color-text-inverse:#151515;
  --calcite-color-text-3:#9f9f9f;
  --calcite-color-text-2:#bfbfbf;
  --calcite-color-text-1:#ffffff;
  --calcite-color-inverse-press:#f3f3f3;
  --calcite-color-inverse-hover:#ffffff;
  --calcite-color-inverse:#f8f8f8;
  --calcite-color-status-danger-press:#d90012;
  --calcite-color-status-danger-hover:#ff0015;
  --calcite-color-status-danger:#FE583E;
  --calcite-color-status-warning-press:#f5d000;
  --calcite-color-status-warning-hover:#ffee33;
  --calcite-color-status-warning:#FFC900;
  --calcite-color-status-success-press:#00b81b;
  --calcite-color-status-success-hover:#3bed52;
  --calcite-color-status-success:#36DA43;
  --calcite-color-status-info-press:#009af2;
  --calcite-color-status-info-hover:#3db8ff;
  --calcite-color-status-info:#00A0FF;
  --calcite-color-brand-underline:rgba(0, 160, 255, 0.4);
  --calcite-color-brand-press:#00619b;
  --calcite-color-brand-hover:#007ac2;
  --calcite-color-brand:#009af2;
  --calcite-color-transparent-tint:rgba(43, 43, 43, 0.8);
  --calcite-color-transparent-scrim:rgba(0, 0, 0, 0.85);
  --calcite-color-transparent-press:rgba(255, 255, 255, 0.08);
  --calcite-color-transparent-hover:rgba(255, 255, 255, 0.04);
  --calcite-color-transparent:rgba(255, 255, 255, 0);
  --calcite-color-foreground-current:#214155;
  --calcite-color-foreground-3:#151515;
  --calcite-color-foreground-2:#202020;
  --calcite-color-foreground-1:#2b2b2b;
  --calcite-color-background:#353535;
}

:root {
  --calcite-code-family:"Consolas", "Andale Mono", "Lucida Console", "Monaco", monospace;
  --calcite-sans-family:"Avenir Next", "Avenir", "Helvetica Neue", sans-serif;
  --calcite-font-size--3:0.625rem;
  --calcite-font-size--2:0.75rem;
  --calcite-font-size--1:0.875rem;
  --calcite-font-size-0:1rem;
  --calcite-font-size-1:1.125rem;
  --calcite-font-size-2:1.25rem;
  --calcite-font-size-3:1.625rem;
  --calcite-font-size-4:2rem;
  --calcite-font-size-5:2.5rem;
  --calcite-font-size-6:3rem;
  --calcite-font-size-7:3.5rem;
  --calcite-font-size-8:4rem;
  --calcite-font-weight-light:300;
  --calcite-font-weight-normal:400;
  --calcite-font-weight-medium:500;
  --calcite-font-weight-bold:600;
  --calcite-floating-ui-transition:var(--calcite-animation-timing);
  --calcite-floating-ui-z-index:var(--calcite-z-index-dropdown);
  --calcite-animation-timing:calc(150ms * var(--calcite-internal-duration-factor));
  --calcite-internal-duration-factor:var(--calcite-duration-factor, 1);
  --calcite-internal-animation-timing-fast:calc(100ms * var(--calcite-internal-duration-factor));
  --calcite-internal-animation-timing-medium:calc(200ms * var(--calcite-internal-duration-factor));
  --calcite-internal-animation-timing-slow:calc(300ms * var(--calcite-internal-duration-factor));
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  --calcite-popover-z-index:var(--calcite-z-index-popup);
  --calcite-border-radius:var(--calcite-border-radius-round, 4px);
  --calcite-border-radius-base:0;
  --calcite-offset-invert-focus:0;
  --calcite-panel-width-multiplier:1;
  --calcite-ui-icon-color:currentColor;
  font-family: var(--calcite-sans-family);
}

@media (prefers-color-scheme: dark) {
  .calcite-mode-auto {
    --calcite-color-border-white:#f8f8f8;
    --calcite-color-border-ghost:rgba(117, 117, 117, 0.3);
    --calcite-color-border-input:#757575;
    --calcite-color-border-3:#404040;
    --calcite-color-border-2:#4a4a4a;
    --calcite-color-border-1:#555555;
    --calcite-color-text-link:#00A0FF;
    --calcite-color-text-inverse:#151515;
    --calcite-color-text-3:#9f9f9f;
    --calcite-color-text-2:#bfbfbf;
    --calcite-color-text-1:#ffffff;
    --calcite-color-inverse-press:#f3f3f3;
    --calcite-color-inverse-hover:#ffffff;
    --calcite-color-inverse:#f8f8f8;
    --calcite-color-status-danger-press:#d90012;
    --calcite-color-status-danger-hover:#ff0015;
    --calcite-color-status-danger:#FE583E;
    --calcite-color-status-warning-press:#f5d000;
    --calcite-color-status-warning-hover:#ffee33;
    --calcite-color-status-warning:#FFC900;
    --calcite-color-status-success-press:#00b81b;
    --calcite-color-status-success-hover:#3bed52;
    --calcite-color-status-success:#36DA43;
    --calcite-color-status-info-press:#009af2;
    --calcite-color-status-info-hover:#3db8ff;
    --calcite-color-status-info:#00A0FF;
    --calcite-color-brand-underline:rgba(0, 160, 255, 0.4);
    --calcite-color-brand-press:#00619b;
    --calcite-color-brand-hover:#007ac2;
    --calcite-color-brand:#009af2;
    --calcite-color-transparent-tint:rgba(43, 43, 43, 0.8);
    --calcite-color-transparent-scrim:rgba(0, 0, 0, 0.85);
    --calcite-color-transparent-press:rgba(255, 255, 255, 0.08);
    --calcite-color-transparent-hover:rgba(255, 255, 255, 0.04);
    --calcite-color-transparent:rgba(255, 255, 255, 0);
    --calcite-color-foreground-current:#214155;
    --calcite-color-foreground-3:#151515;
    --calcite-color-foreground-2:#202020;
    --calcite-color-foreground-1:#2b2b2b;
    --calcite-color-background:#353535;
  }
}
@media (prefers-color-scheme: light) {
  .calcite-mode-auto {
    --calcite-color-border-white:#ffffff;
    --calcite-color-border-ghost:rgba(0, 0, 0, 0.3);
    --calcite-color-border-input:#949494;
    --calcite-color-border-3:#dfdfdf;
    --calcite-color-border-2:#d4d4d4;
    --calcite-color-border-1:#cacaca;
    --calcite-color-text-link:#00619b;
    --calcite-color-text-inverse:#ffffff;
    --calcite-color-text-3:#6a6a6a;
    --calcite-color-text-2:#4a4a4a;
    --calcite-color-text-1:#151515;
    --calcite-color-inverse-press:#202020;
    --calcite-color-inverse-hover:#2b2b2b;
    --calcite-color-inverse:#353535;
    --calcite-color-status-danger-press:#7c1d13;
    --calcite-color-status-danger-hover:#a82b1e;
    --calcite-color-status-danger:#d83020;
    --calcite-color-status-warning-press:#bfa200;
    --calcite-color-status-warning-hover:#d9bc00;
    --calcite-color-status-warning:#edd317;
    --calcite-color-status-success-press:#1a6324;
    --calcite-color-status-success-hover:#288835;
    --calcite-color-status-success:#35ac46;
    --calcite-color-status-info-press:#00304d;
    --calcite-color-status-info-hover:#004874;
    --calcite-color-status-info:#00619b;
    --calcite-color-brand-underline:rgba(0, 97, 155, 0.4);
    --calcite-color-brand-press:#004874;
    --calcite-color-brand-hover:#00619b;
    --calcite-color-brand:#007ac2;
    --calcite-color-transparent-tint:rgba(255, 255, 255, 0.8);
    --calcite-color-transparent-scrim:rgba(255, 255, 255, 0.85);
    --calcite-color-transparent-press:rgba(0, 0, 0, 0.08);
    --calcite-color-transparent-hover:rgba(0, 0, 0, 0.04);
    --calcite-color-transparent:rgba(0, 0, 0, 0);
    --calcite-color-foreground-current:#c7eaff;
    --calcite-color-foreground-3:#eaeaea;
    --calcite-color-foreground-2:#f3f3f3;
    --calcite-color-foreground-1:#ffffff;
    --calcite-color-background:#f8f8f8;
  }
}
@media (prefers-reduced-motion: reduce) {
  :root {
    --calcite-internal-duration-factor:0.01;
  }
}
@keyframes in {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}
@keyframes in-down {
  0% {
    opacity: 0;
    transform: translate3D(0, -5px, 0);
  }
  100% {
    opacity: 1;
    transform: translate3D(0, 0, 0);
  }
}
@keyframes in-up {
  0% {
    opacity: 0;
    transform: translate3D(0, 5px, 0);
  }
  100% {
    opacity: 1;
    transform: translate3D(0, 0, 0);
  }
}
@keyframes in-right {
  0% {
    opacity: 0;
    transform: translate3D(-5px, 0, 0);
  }
  100% {
    opacity: 1;
    transform: translate3D(0, 0, 0);
  }
}
@keyframes in-left {
  0% {
    opacity: 0;
    transform: translate3D(5px, 0, 0);
  }
  100% {
    opacity: 1;
    transform: translate3D(0, 0, 0);
  }
}
@keyframes in-scale {
  0% {
    opacity: 0;
    transform: scale3D(0.95, 0.95, 1);
  }
  100% {
    opacity: 1;
    transform: scale3D(1, 1, 1);
  }
}
.calcite-animate {
  opacity: 0;
  animation-fill-mode: both;
  animation-duration: var(--calcite-animation-timing);
}

.calcite-animate__in {
  animation-name: in;
}

.calcite-animate__in-down {
  animation-name: in-down;
}

.calcite-animate__in-up {
  animation-name: in-up;
}

.calcite-animate__in-right {
  animation-name: in-right;
}

.calcite-animate__in-left {
  animation-name: in-left;
}

.calcite-animate__in-scale {
  animation-name: in-scale;
}

.calcite-sortable--ghost, .calcite-sortable--drag {
  overflow: hidden;
}

.calcite-sortable--ghost::before {
  content: "";
  position: absolute;
  inset: 0px;
  z-index: var(--calcite-z-index);
  box-sizing: border-box;
  border-width: 1px;
  border-style: dashed;
  border-color: var(--calcite-color-brand);
  background-color: var(--calcite-color-foreground-2);
}

.calcite-sortable--drag {
  --tw-shadow:0 6px 20px -4px rgba(0, 0, 0, 0.1), 0 4px 12px -2px rgba(0, 0, 0, 0.08);
  --tw-shadow-colored:0 6px 20px -4px var(--tw-shadow-color), 0 4px 12px -2px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 rgba(0, 0, 0, 0)), var(--tw-ring-shadow, 0 0 rgba(0, 0, 0, 0)), var(--tw-shadow);
}`, "",{"version":3,"sources":["webpack://./node_modules/@esri/calcite-components/dist/calcite/calcite.css"],"names":[],"mappings":"AAAA;EAAM,6BAAA;EAA8B,2BAAA;EAA4B,2BAAA;EAA4B,6BAAA;EAA8B,8BAAA;EAA+B,2BAAA;EAA4B,4BAAA;EAA6B,4BAAA;EAA6B,mBAAA;EAAoB,8BAAA;EAA+B,2BAAA;EAA4B,0BAAA;EAA2B,yBAAA;EAA0B,yBAAA;EAA0B,yBAAA;EAA0B,wBAAA;EAAyB,wBAAA;EAAyB,yBAAA;EAA0B,0BAAA;EAA2B,wBAAA;EAAyB,wBAAA;EAAyB,uBAAA;EAAwB,sBAAA;EAAuB,sBAAA;EAAuB,2BAAA;EAA4B,sBAAA;EAAuB,2BAAA;EAA4B,qBAAA;EAAsB,qBAAA;EAAsB,sBAAA;EAAuB,uBAAA;EAAwB,qBAAA;EAAsB,8BAAA;EAA+B,wBAAA;EAAyB,2BAAA;EAA4B,0BAAA;EAA2B,2BAAA;EAA4B,8CAAA;EAA+C,4CAAA;EAA6C,4CAAA;EAA6C,kCAAA;EAAmC,kDAAA;EAAmD,wCAAA;EAAyC,2CAAA;EAA4C,sCAAA;EAAuC,sCAAA;EAAuC,wCAAA;EAAyC,2CAAA;EAA4C,iDAAA;EAAkD,8CAAA;EAA+C,8CAAA;EAA+C,8CAAA;EAA+C,wCAAA;EAAyC,wCAAA;EAAyC,wCAAA;EAAyC,0CAAA;EAA2C,wCAAA;EAAyC,oCAAA;EAAqC,4BAAA;EAA6B,2BAAA;EAA4B,2BAAA;EAA4B,2BAAA;EAA4B,wBAAA;EAAyB,2BAAA;EAA4B,2BAAA;EAA4B,8BAAA;EAA+B,kCAAA;EAAmC,gCAAA;EAAiC,iCAAA;EAAkC,gCAAA;EAAiC,+BAAA;EAAgC,iCAAA;EAAkC,0CAAA;EAA2C,6CAAA;EAA8C,2CAAA;EAA4C,oCAAA;EAAqC,oCAAA;EAAqC,gDAAA;EAAiD,iCAAA;EAAkC,iCAAA;EAAkC,+BAAA;EAAgC,6BAAA;EAA8B,6BAAA;EAA8B,6BAAA;EAA8B,6BAAA;EAA8B,oFAAA;EAAqF,qFAAA;EAAsF,8CAAA;EAA+C,0DAAA;AA0F37F;;AA1Fs/F;EAAuC,qDAAA;EAAqD,kDAAA;EAAkD,4CAAA;AAgGpoG;;AAhGgrG;EAAsC,gDAAA;EAAgD,0DAAA;AAqGtwG;;AArGg0G;EAAsC,gDAAA;EAAgD,0DAAA;EAA0D,sCAAA;AA2Gh9G;;AA3Gs/G;EAAgC,gDAAA;EAAgD,0DAAA;EAA0D,uCAAA;AAiHhoH;;AAjHuqH;EAAgC,gDAAA;EAAgD,0DAAA;EAA0D,sCAAA;AAuHjzH;;AAvHu1H;EAAgC,gDAAA;EAAgD,0DAAA;EAA0D,sCAAA;AA6Hj+H;;AA7HugI;EAAgC,gDAAA;EAAgD,0DAAA;EAA0D,sCAAA;AAmIjpI;;AAnIurI;EAAwC,8CAAA;EAA8C,0DAAA;AAwI7wI;;AAxIu0I;EAAwC,8CAAA;EAA8C,0DAAA;EAA0D,sCAAA;AA8Iv9I;;AA9I6/I;EAAkC,8CAAA;EAA8C,0DAAA;EAA0D,uCAAA;AAoJvoJ;;AApJ8qJ;EAAkC,8CAAA;EAA8C,0DAAA;EAA0D,sCAAA;AA0JxzJ;;AA1J81J;EAAkC,8CAAA;EAA8C,0DAAA;EAA0D,sCAAA;AAgKx+J;;AAhK8gK;EAAkC,8CAAA;EAA8C,0DAAA;EAA0D,sCAAA;AAsKxpK;;AAtK8rK;EAAyC,0DAAA;AA0KvuK;;AA1KiyK;EAAyC,0DAAA;EAA0D,sCAAA;AA+Kp4K;;AA/K06K;EAAmC,0DAAA;EAA0D,uCAAA;AAoLvgL;;AApL8iL;EAAmC,0DAAA;EAA0D,sCAAA;AAyL3oL;;AAzLirL;EAAmC,0DAAA;EAA0D,sCAAA;AA8L9wL;;AA9LozL;EAAmC,0DAAA;EAA0D,sCAAA;AAmMj5L;;AAnMu7L;EAAuC,6CAAA;EAA6C,0DAAA;AAwM3gM;;AAxMqkM;EAAuC,6CAAA;EAA6C,0DAAA;EAA0D,sCAAA;AA8MntM;;AA9MyvM;EAAiC,6CAAA;EAA6C,2DAAA;EAA2D,uCAAA;AAoNl4M;;AApNy6M;EAAiC,6CAAA;EAA6C,0DAAA;EAA0D,sCAAA;AA0NjjN;;AA1NulN;EAAiC,6CAAA;EAA6C,0DAAA;EAA0D,sCAAA;AAgO/tN;;AAhOqwN;EAAiC,6CAAA;EAA6C,0DAAA;EAA0D,sCAAA;AAsO74N;;AAtOm7N;EAA4B,gDAAA;EAAgD,qDAAA;EAAqD,sCAAA;AA4OpjO;;AA5O0lO;EAA4B,gDAAA;EAAgD,qDAAA;EAAqD,sCAAA;AAkP3tO;;AAlPiwO;EAAkC,gDAAA;AAsPnyO;;AAtPm1O;EAAkC,gDAAA;EAAgD,sCAAA;AA2Pr6O;;AA3P28O;EAAkC,gDAAA;EAAgD,qDAAA;EAAqD,sCAAA;AAiQllP;;AAjQwnP;EAA8B,8CAAA;EAA8C,qDAAA;EAAqD,sCAAA;AAuQzvP;;AAvQ+xP;EAA8B,8CAAA;EAA8C,qDAAA;EAAqD,sCAAA;AA6Qh6P;;AA7Qs8P;EAAoC,8CAAA;AAiR1+P;;AAjRwhQ;EAAoC,8CAAA;EAA8C,sCAAA;AAsR1mQ;;AAtRgpQ;EAAoC,8CAAA;EAA8C,qDAAA;EAAqD,sCAAA;AA4RvxQ;;AA5R6zQ;EAA+B,qDAAA;EAAqD,sCAAA;AAiSj5Q;;AAjSu7Q;EAA+B,qDAAA;EAAqD,sCAAA;AAsS3gR;;AAtSijR;EAAqC,sCAAA;AA0StlR;;AA1S4nR;EAAqC,qDAAA;EAAqD,sCAAA;AA+SttR;;AA/S4vR;EAA6B,sCAAA;EAAsC,6CAAA;EAA6C,qDAAA;AAqT52R;;AArTi6R;EAA6B,sCAAA;EAAsC,6CAAA;EAA6C,qDAAA;AA2TjhS;;AA3TskS;EAAmC,6CAAA;AA+TzmS;;AA/TspS;EAAmC,sCAAA;EAAsC,6CAAA;AAoU/tS;;AApU4wS;EAAmC,sCAAA;EAAsC,6CAAA;EAA6C,qDAAA;AA0Ul4S;;AA1Uu7S;EAAoB,uCAAA;EAAuC,mCAAA;EAAmC,+CAAA;EAA+C,yDAAA;EAAyD,uDAAA;EAAuD,+DAAA;EAA+D,6CAAA;EAA6C,yDAAA;AAqVhyT;;AArVy1T;EAAsC,kBAAA;EAAkB,eAAA;AA0Vj5T;;AA1Vg6T;EAAmC,iCAAA;EAAiC,eAAA;EAAe,gBAAA;EAAgB,iBAAA;EAAiB,iBAAA;EAAiB,sBAAA;EAAsB,eAAA;EAAe,qBAAA;AAqW1kU;;AArW+lU;EAAwC,kBAAA;AAyWvoU;;AAzWypU;EAAwC,gBAAA;EAAgB,kBAAA;AA8WjtU;;AA9WmuU;EAAwC,gBAAA;EAAgB,kBAAA;EAAkB,eAAA;AAoX7yU;;AApX4zU;EAAwC,gBAAA;EAAgB,kBAAA;EAAkB,eAAA;AA0Xt4U;;AA1Xq5U;EAAwC,gBAAA;EAAgB,kBAAA;EAAkB,eAAA;AAgY/9U;;AAhY8+U;EAAwC,gBAAA;EAAgB,kBAAA;EAAkB,eAAA;AAsYxjV;;AAtYukV;EAAwC,gBAAA;EAAgB,kBAAA;EAAkB,eAAA;AA4YjpV;;AA5YgqV;EAAwC,gBAAA;EAAgB,kBAAA;EAAkB,eAAA;AAkZ1uV;;AAlZyvV;EAAqC,iCAAA;EAAiC,eAAA;EAAe,gBAAA;EAAgB,iBAAA;EAAiB,iBAAA;EAAiB,sBAAA;EAAsB,eAAA;EAAe,qBAAA;AA6Zr6V;;AA7Z07V;EAAqC;IAAM,oCAAA;IAAqC,+CAAA;IAAgD,oCAAA;IAAqC,gCAAA;IAAiC,gCAAA;IAAiC,gCAAA;IAAiC,iCAAA;IAAkC,oCAAA;IAAqC,8BAAA;IAA+B,8BAAA;IAA+B,8BAAA;IAA+B,qCAAA;IAAsC,qCAAA;IAAsC,+BAAA;IAAgC,2CAAA;IAA4C,2CAAA;IAA4C,qCAAA;IAAsC,4CAAA;IAA6C,4CAAA;IAA6C,sCAAA;IAAuC,4CAAA;IAA6C,4CAAA;IAA6C,sCAAA;IAAuC,yCAAA;IAA0C,yCAAA;IAA0C,mCAAA;IAAoC,qDAAA;IAAsD,mCAAA;IAAoC,mCAAA;IAAoC,6BAAA;IAA8B,yDAAA;IAA0D,2DAAA;IAA4D,qDAAA;IAAsD,qDAAA;IAAsD,4CAAA;IAA6C,0CAAA;IAA2C,oCAAA;IAAqC,oCAAA;IAAqC,oCAAA;IAAqC,kCAAA;EAyc7gZ;AACF;AA1cmjZ;EAAoC;IAAM,oCAAA;IAAqC,qDAAA;IAAsD,oCAAA;IAAqC,gCAAA;IAAiC,gCAAA;IAAiC,gCAAA;IAAiC,iCAAA;IAAkC,oCAAA;IAAqC,8BAAA;IAA+B,8BAAA;IAA+B,8BAAA;IAA+B,qCAAA;IAAsC,qCAAA;IAAsC,+BAAA;IAAgC,2CAAA;IAA4C,2CAAA;IAA4C,qCAAA;IAAsC,4CAAA;IAA6C,4CAAA;IAA6C,sCAAA;IAAuC,4CAAA;IAA6C,4CAAA;IAA6C,sCAAA;IAAuC,yCAAA;IAA0C,yCAAA;IAA0C,mCAAA;IAAoC,sDAAA;IAAuD,mCAAA;IAAoC,mCAAA;IAAoC,6BAAA;IAA8B,sDAAA;IAAuD,qDAAA;IAAsD,2DAAA;IAA4D,2DAAA;IAA4D,kDAAA;IAAmD,0CAAA;IAA2C,oCAAA;IAAqC,oCAAA;IAAqC,oCAAA;IAAqC,kCAAA;EAqfrpc;AACF;AAtf2rc;EAAoB,oCAAA;EAAqC,+CAAA;EAAgD,oCAAA;EAAqC,gCAAA;EAAiC,gCAAA;EAAiC,gCAAA;EAAiC,iCAAA;EAAkC,oCAAA;EAAqC,8BAAA;EAA+B,8BAAA;EAA+B,8BAAA;EAA+B,qCAAA;EAAsC,qCAAA;EAAsC,+BAAA;EAAgC,2CAAA;EAA4C,2CAAA;EAA4C,qCAAA;EAAsC,4CAAA;EAA6C,4CAAA;EAA6C,sCAAA;EAAuC,4CAAA;EAA6C,4CAAA;EAA6C,sCAAA;EAAuC,yCAAA;EAA0C,yCAAA;EAA0C,mCAAA;EAAoC,qDAAA;EAAsD,mCAAA;EAAoC,mCAAA;EAAoC,6BAAA;EAA8B,yDAAA;EAA0D,2DAAA;EAA4D,qDAAA;EAAsD,qDAAA;EAAsD,4CAAA;EAA6C,0CAAA;EAA2C,oCAAA;EAAqC,oCAAA;EAAqC,oCAAA;EAAqC,kCAAA;AAgiBzvf;;AAhiB4xf;EAAmB,oCAAA;EAAqC,qDAAA;EAAsD,oCAAA;EAAqC,gCAAA;EAAiC,gCAAA;EAAiC,gCAAA;EAAiC,iCAAA;EAAkC,oCAAA;EAAqC,8BAAA;EAA+B,8BAAA;EAA+B,8BAAA;EAA+B,qCAAA;EAAsC,qCAAA;EAAsC,+BAAA;EAAgC,2CAAA;EAA4C,2CAAA;EAA4C,qCAAA;EAAsC,4CAAA;EAA6C,4CAAA;EAA6C,sCAAA;EAAuC,4CAAA;EAA6C,4CAAA;EAA6C,sCAAA;EAAuC,yCAAA;EAA0C,yCAAA;EAA0C,mCAAA;EAAoC,sDAAA;EAAuD,mCAAA;EAAoC,mCAAA;EAAoC,6BAAA;EAA8B,sDAAA;EAAuD,qDAAA;EAAsD,2DAAA;EAA4D,2DAAA;EAA4D,kDAAA;EAAmD,0CAAA;EAA2C,oCAAA;EAAqC,oCAAA;EAAqC,oCAAA;EAAqC,kCAAA;AA2kBz2iB;;AA3kB44iB;EAAM,sFAAA;EAAuF,2EAAA;EAA4E,+BAAA;EAAgC,8BAAA;EAA+B,+BAAA;EAAgC,0BAAA;EAA2B,8BAAA;EAA+B,6BAAA;EAA8B,8BAAA;EAA+B,0BAAA;EAA2B,4BAAA;EAA6B,0BAAA;EAA2B,4BAAA;EAA6B,0BAAA;EAA2B,+BAAA;EAAgC,gCAAA;EAAiC,gCAAA;EAAiC,8BAAA;EAA+B,gEAAA;EAAiE,6DAAA;EAA8D,gFAAA;EAAiF,oEAAA;EAAqE,8FAAA;EAA+F,gGAAA;EAAiG,8FAAA;EAA+F,kCAAA;EAAkC,mCAAA;EAAmC,kCAAA;EAAkC,sDAAA;EAAuD,+DAAA;EAAgE,8BAAA;EAA+B,+BAAA;EAAgC,kCAAA;EAAmC,oCAAA;EAAqC,uCAAA;AAinBh7lB;;AAjnBu9lB;EAAoC;IAAmB,oCAAA;IAAqC,qDAAA;IAAsD,oCAAA;IAAqC,gCAAA;IAAiC,gCAAA;IAAiC,gCAAA;IAAiC,iCAAA;IAAkC,oCAAA;IAAqC,8BAAA;IAA+B,8BAAA;IAA+B,8BAAA;IAA+B,qCAAA;IAAsC,qCAAA;IAAsC,+BAAA;IAAgC,2CAAA;IAA4C,2CAAA;IAA4C,qCAAA;IAAsC,4CAAA;IAA6C,4CAAA;IAA6C,sCAAA;IAAuC,4CAAA;IAA6C,4CAAA;IAA6C,sCAAA;IAAuC,yCAAA;IAA0C,yCAAA;IAA0C,mCAAA;IAAoC,sDAAA;IAAuD,mCAAA;IAAoC,mCAAA;IAAoC,6BAAA;IAA8B,sDAAA;IAAuD,qDAAA;IAAsD,2DAAA;IAA4D,2DAAA;IAA4D,kDAAA;IAAmD,0CAAA;IAA2C,oCAAA;IAAqC,oCAAA;IAAqC,oCAAA;IAAqC,kCAAA;EA6pBtkpB;AACF;AA9pB4mpB;EAAqC;IAAmB,oCAAA;IAAqC,+CAAA;IAAgD,oCAAA;IAAqC,gCAAA;IAAiC,gCAAA;IAAiC,gCAAA;IAAiC,iCAAA;IAAkC,oCAAA;IAAqC,8BAAA;IAA+B,8BAAA;IAA+B,8BAAA;IAA+B,qCAAA;IAAsC,qCAAA;IAAsC,+BAAA;IAAgC,2CAAA;IAA4C,2CAAA;IAA4C,qCAAA;IAAsC,4CAAA;IAA6C,4CAAA;IAA6C,sCAAA;IAAuC,4CAAA;IAA6C,4CAAA;IAA6C,sCAAA;IAAuC,yCAAA;IAA0C,yCAAA;IAA0C,mCAAA;IAAoC,qDAAA;IAAsD,mCAAA;IAAoC,mCAAA;IAAoC,6BAAA;IAA8B,yDAAA;IAA0D,2DAAA;IAA4D,qDAAA;IAAsD,qDAAA;IAAsD,4CAAA;IAA6C,0CAAA;IAA2C,oCAAA;IAAqC,oCAAA;IAAqC,oCAAA;IAAqC,kCAAA;EAysB5ssB;AACF;AA1sBkvsB;EAAwC;IAAM,uCAAA;EA8sB9xsB;AACF;AA/sBy0sB;EAAc;IAAG,UAAA;EAmtBx1sB;EAntBk2sB;IAAK,UAAA;EAstBv2sB;AACF;AAvtBo3sB;EAAmB;IAAG,UAAA;IAAU,kCAAA;EA4tBl5sB;EA5tBo7sB;IAAK,UAAA;IAAU,+BAAA;EAguBn8sB;AACF;AAjuBq+sB;EAAiB;IAAG,UAAA;IAAU,iCAAA;EAsuBjgtB;EAtuBkitB;IAAK,UAAA;IAAU,+BAAA;EA0uBjjtB;AACF;AA3uBmltB;EAAoB;IAAG,UAAA;IAAU,kCAAA;EAgvBlntB;EAhvBoptB;IAAK,UAAA;IAAU,+BAAA;EAovBnqtB;AACF;AArvBqstB;EAAmB;IAAG,UAAA;IAAU,iCAAA;EA0vBnutB;EA1vBowtB;IAAK,UAAA;IAAU,+BAAA;EA8vBnxtB;AACF;AA/vBqztB;EAAoB;IAAG,UAAA;IAAU,iCAAA;EAowBp1tB;EApwBq3tB;IAAK,UAAA;IAAU,2BAAA;EAwwBp4tB;AACF;AAzwBk6tB;EAAiB,UAAA;EAAU,yBAAA;EAAyB,mDAAA;AA8wBt9tB;;AA9wByguB;EAAqB,kBAAA;AAkxB9huB;;AAlxBgjuB;EAA0B,uBAAA;AAsxB1kuB;;AAtxBimuB;EAAwB,qBAAA;AA0xBznuB;;AA1xB8ouB;EAA2B,wBAAA;AA8xBzquB;;AA9xBisuB;EAA0B,uBAAA;AAkyB3tuB;;AAlyBkvuB;EAA2B,wBAAA;AAsyB7wuB;;AAtyBqyuB;EAAiD,gBAAA;AA0yBt1uB;;AA1yBs2uB;EAAiC,WAAA;EAAW,kBAAA;EAAkB,UAAA;EAAU,+BAAA;EAA+B,sBAAA;EAAsB,iBAAA;EAAiB,oBAAA;EAAoB,wCAAA;EAAwC,mDAAA;AAszBhjvB;;AAtzBmmvB;EAAwB,mFAAA;EAAoF,kGAAA;EAAmG,6HAAA;AA4zBlzvB","sourcesContent":[":root{--calcite-z-index-tooltip:901;--calcite-z-index-popup:900;--calcite-z-index-modal:800;--calcite-z-index-overlay:700;--calcite-z-index-dropdown:600;--calcite-z-index-toast:500;--calcite-z-index-header:400;--calcite-z-index-sticky:300;--calcite-z-index:1;--calcite-z-index-deep:-999999;--calcite-spacing-xxxl:32px;--calcite-spacing-xxl:20px;--calcite-spacing-xl:16px;--calcite-spacing-lg:14px;--calcite-spacing-md:12px;--calcite-spacing-sm:8px;--calcite-spacing-xs:6px;--calcite-spacing-xxs:4px;--calcite-spacing-base:2px;--calcite-spacing-px:1px;--calcite-size-xxxl:32px;--calcite-size-xxl:24px;--calcite-size-xl:20px;--calcite-size-lg:16px;--calcite-size-md-plus:14px;--calcite-size-md:12px;--calcite-size-sm-plus:10px;--calcite-size-sm:8px;--calcite-size-xs:6px;--calcite-size-xxs:4px;--calcite-size-xxxs:2px;--calcite-size-px:1px;--calcite-opacity-disabled:0.5;--calcite-opacity-full:1;--calcite-opacity-dark:0.85;--calcite-opacity-half:0.5;--calcite-opacity-light:0.4;--calcite-font-text-case-capitalize:capitalize;--calcite-font-text-case-lowercase:lowercase;--calcite-font-text-case-uppercase:uppercase;--calcite-font-text-case-none:none;--calcite-font-text-decoration-underline:underline;--calcite-font-text-decoration-none:none;--calcite-font-paragraph-spacing-normal:4px;--calcite-font-letter-spacing-wide:0.4;--calcite-font-letter-spacing-normal:0;--calcite-font-letter-spacing-tight:-0.4;--calcite-font-line-height-relative-loose:2;--calcite-font-line-height-relative-relaxed:1.625;--calcite-font-line-height-relative-normal:1.5;--calcite-font-line-height-relative-snug:1.375;--calcite-font-line-height-relative-tight:1.25;--calcite-font-line-height-relative:auto;--calcite-font-line-height-fixed-xl:24px;--calcite-font-line-height-fixed-lg:20px;--calcite-font-line-height-fixed-base:16px;--calcite-font-line-height-fixed-sm:12px;--calcite-font-style-emphasis:italic;--calcite-font-size-xxl:24px;--calcite-font-size-xl:20px;--calcite-font-size-lg:18px;--calcite-font-size-md:16px;--calcite-font-size:14px;--calcite-font-size-sm:12px;--calcite-font-size-xs:10px;--calcite-font-weight-bold:700;--calcite-font-weight-semibold:600;--calcite-font-weight-medium:500;--calcite-font-weight-regular:400;--calcite-font-weight-normal:400;--calcite-font-weight-light:300;--calcite-font-family-code:Monaco;--calcite-font-family:\"Avenir Next LT Pro\";--calcite-container-size-content-fixed:1440px;--calcite-container-size-content-fluid:100%;--calcite-container-size-gutter:16px;--calcite-container-size-margin:24px;--calcite-color-background-none:rgba(#ffffff, 0);--calcite-corner-radius-pill:100%;--calcite-corner-radius-round:4px;--calcite-corner-radius-sharp:0;--calcite-border-width-lg:4px;--calcite-border-width-md:2px;--calcite-border-width-sm:1px;--calcite-border-width-none:0;--calcite-shadow-md:0 4px 20px 0 rgba(0, 0, 0, 0.08), 0 12px 30px rgba(0, 0, 0, 0.1);--calcite-shadow-sm:0 2px 8px 0 rgba(0, 0, 0, 0.04), 0 4px 16px 0 rgba(0, 0, 0, 0.08);--calcite-shadow-none:0 0 0 0 rgba(0, 0, 0, 0);--calcite-corner-radius:var(--calcite-corner-radius-sharp)}.calcite-typography-hierarchy-overline{line-height:var(--calcite-font-line-height-fixed-sm);text-case:var(--calcite-font-text-case-uppercase);font-weight:var(--calcite-font-weight-bold)}.calcite-typography-wrap-bold-minus-1{font-weight:var(--calcite-font-weight-semibold);line-height:var(--calcite-font-line-height-relative-snug)}.calcite-typography-wrap-bold-minus-2{font-weight:var(--calcite-font-weight-semibold);line-height:var(--calcite-font-line-height-relative-snug);font-size:var(--calcite-font-size-sm)}.calcite-typography-wrap-bold-3{font-weight:var(--calcite-font-weight-semibold);line-height:var(--calcite-font-line-height-relative-snug);font-size:var(--calcite-font-size-xxl)}.calcite-typography-wrap-bold-2{font-weight:var(--calcite-font-weight-semibold);line-height:var(--calcite-font-line-height-relative-snug);font-size:var(--calcite-font-size-xl)}.calcite-typography-wrap-bold-1{font-weight:var(--calcite-font-weight-semibold);line-height:var(--calcite-font-line-height-relative-snug);font-size:var(--calcite-font-size-lg)}.calcite-typography-wrap-bold-0{font-weight:var(--calcite-font-weight-semibold);line-height:var(--calcite-font-line-height-relative-snug);font-size:var(--calcite-font-size-md)}.calcite-typography-wrap-medium-minus-1{font-weight:var(--calcite-font-weight-medium);line-height:var(--calcite-font-line-height-relative-snug)}.calcite-typography-wrap-medium-minus-2{font-weight:var(--calcite-font-weight-medium);line-height:var(--calcite-font-line-height-relative-snug);font-size:var(--calcite-font-size-sm)}.calcite-typography-wrap-medium-3{font-weight:var(--calcite-font-weight-medium);line-height:var(--calcite-font-line-height-relative-snug);font-size:var(--calcite-font-size-xxl)}.calcite-typography-wrap-medium-2{font-weight:var(--calcite-font-weight-medium);line-height:var(--calcite-font-line-height-relative-snug);font-size:var(--calcite-font-size-xl)}.calcite-typography-wrap-medium-1{font-weight:var(--calcite-font-weight-medium);line-height:var(--calcite-font-line-height-relative-snug);font-size:var(--calcite-font-size-lg)}.calcite-typography-wrap-medium-0{font-weight:var(--calcite-font-weight-medium);line-height:var(--calcite-font-line-height-relative-snug);font-size:var(--calcite-font-size-md)}.calcite-typography-wrap-regular-minus-1{line-height:var(--calcite-font-line-height-relative-snug)}.calcite-typography-wrap-regular-minus-2{line-height:var(--calcite-font-line-height-relative-snug);font-size:var(--calcite-font-size-sm)}.calcite-typography-wrap-regular-3{line-height:var(--calcite-font-line-height-relative-snug);font-size:var(--calcite-font-size-xxl)}.calcite-typography-wrap-regular-2{line-height:var(--calcite-font-line-height-relative-snug);font-size:var(--calcite-font-size-xl)}.calcite-typography-wrap-regular-1{line-height:var(--calcite-font-line-height-relative-snug);font-size:var(--calcite-font-size-lg)}.calcite-typography-wrap-regular-0{line-height:var(--calcite-font-line-height-relative-snug);font-size:var(--calcite-font-size-md)}.calcite-typography-wrap-light-minus-1{font-weight:var(--calcite-font-weight-light);line-height:var(--calcite-font-line-height-relative-snug)}.calcite-typography-wrap-light-minus-2{font-weight:var(--calcite-font-weight-light);line-height:var(--calcite-font-line-height-relative-snug);font-size:var(--calcite-font-size-sm)}.calcite-typography-wrap-light-3{font-weight:var(--calcite-font-weight-light);line-height:var(--calcite-font-line-height-relative-tight);font-size:var(--calcite-font-size-xxl)}.calcite-typography-wrap-light-2{font-weight:var(--calcite-font-weight-light);line-height:var(--calcite-font-line-height-relative-snug);font-size:var(--calcite-font-size-xl)}.calcite-typography-wrap-light-1{font-weight:var(--calcite-font-weight-light);line-height:var(--calcite-font-line-height-relative-snug);font-size:var(--calcite-font-size-lg)}.calcite-typography-wrap-light-0{font-weight:var(--calcite-font-weight-light);line-height:var(--calcite-font-line-height-relative-snug);font-size:var(--calcite-font-size-md)}.calcite-typography-bold-1h{font-weight:var(--calcite-font-weight-semibold);line-height:var(--calcite-font-line-height-fixed-xl);font-size:var(--calcite-font-size-lg)}.calcite-typography-bold-0h{font-weight:var(--calcite-font-weight-semibold);line-height:var(--calcite-font-line-height-fixed-lg);font-size:var(--calcite-font-size-md)}.calcite-typography-bold-minus-1h{font-weight:var(--calcite-font-weight-semibold)}.calcite-typography-bold-minus-2h{font-weight:var(--calcite-font-weight-semibold);font-size:var(--calcite-font-size-sm)}.calcite-typography-bold-minus-3h{font-weight:var(--calcite-font-weight-semibold);line-height:var(--calcite-font-line-height-fixed-sm);font-size:var(--calcite-font-size-xs)}.calcite-typography-medium-1h{font-weight:var(--calcite-font-weight-medium);line-height:var(--calcite-font-line-height-fixed-xl);font-size:var(--calcite-font-size-lg)}.calcite-typography-medium-0h{font-weight:var(--calcite-font-weight-medium);line-height:var(--calcite-font-line-height-fixed-lg);font-size:var(--calcite-font-size-md)}.calcite-typography-medium-minus-1h{font-weight:var(--calcite-font-weight-medium)}.calcite-typography-medium-minus-2h{font-weight:var(--calcite-font-weight-medium);font-size:var(--calcite-font-size-sm)}.calcite-typography-medium-minus-3h{font-weight:var(--calcite-font-weight-medium);line-height:var(--calcite-font-line-height-fixed-sm);font-size:var(--calcite-font-size-xs)}.calcite-typography-regular-1h{line-height:var(--calcite-font-line-height-fixed-xl);font-size:var(--calcite-font-size-lg)}.calcite-typography-regular-0h{line-height:var(--calcite-font-line-height-fixed-lg);font-size:var(--calcite-font-size-md)}.calcite-typography-regular-minus-2h{font-size:var(--calcite-font-size-sm)}.calcite-typography-regular-minus-3h{line-height:var(--calcite-font-line-height-fixed-sm);font-size:var(--calcite-font-size-xs)}.calcite-typography-light-1h{font-size:var(--calcite-font-size-lg);font-weight:var(--calcite-font-weight-light);line-height:var(--calcite-font-line-height-fixed-xl)}.calcite-typography-light-0h{font-size:var(--calcite-font-size-md);font-weight:var(--calcite-font-weight-light);line-height:var(--calcite-font-line-height-fixed-lg)}.calcite-typography-light-minus-1h{font-weight:var(--calcite-font-weight-light)}.calcite-typography-light-minus-2h{font-size:var(--calcite-font-size-sm);font-weight:var(--calcite-font-weight-light)}.calcite-typography-light-minus-3h{font-size:var(--calcite-font-size-xs);font-weight:var(--calcite-font-weight-light);line-height:var(--calcite-font-line-height-fixed-sm)}.calcite-typography{font-family:var(--calcite-font-family);font-size:var(--calcite-font-size);font-weight:var(--calcite-font-weight-regular);letter-spacing:var(--calcite-font-letter-spacing-normal);line-height:var(--calcite-font-line-height-fixed-base);paragraph-spacing:var(--calcite-font-paragraph-spacing-normal);text-case:var(--calcite-font-text-case-none);text-decoration:var(--calcite-font-text-decoration-none)}.calcite-typography-hierarchy-caption{line-height:1.375;font-size:12px}.calcite-typography-hierarchy-body{font-family:\"Avenir Next LT Pro\";font-size:14px;font-weight:400;letter-spacing:0;line-height:16px;paragraph-spacing:4px;text-case:none;text-decoration:none}.calcite-typography-hierarchy-body-snug{line-height:1.375}.calcite-typography-hierarchy-heading-5{font-weight:500;line-height:1.375}.calcite-typography-hierarchy-heading-4{font-weight:500;line-height:1.375;font-size:16px}.calcite-typography-hierarchy-heading-3{font-weight:500;line-height:1.375;font-size:18px}.calcite-typography-hierarchy-heading-2{font-weight:500;line-height:1.375;font-size:20px}.calcite-typography-hierarchy-heading-1{font-weight:500;line-height:1.375;font-size:24px}.calcite-typography-hierarchy-display-2{font-weight:600;line-height:1.375;font-size:20px}.calcite-typography-hierarchy-display-1{font-weight:600;line-height:1.375;font-size:24px}.calcite-typography-regular-minus-1h{font-family:\"Avenir Next LT Pro\";font-size:14px;font-weight:400;letter-spacing:0;line-height:16px;paragraph-spacing:4px;text-case:none;text-decoration:none}@media (prefers-color-scheme: light){:root{--calcite-color-border-white:#ffffff;--calcite-color-border-ghost:rgba(0, 0, 0, 0.3);--calcite-color-border-input:#949494;--calcite-color-border-3:#dfdfdf;--calcite-color-border-2:#d4d4d4;--calcite-color-border-1:#cacaca;--calcite-color-text-link:#00619b;--calcite-color-text-inverse:#ffffff;--calcite-color-text-3:#6a6a6a;--calcite-color-text-2:#4a4a4a;--calcite-color-text-1:#151515;--calcite-color-inverse-press:#202020;--calcite-color-inverse-hover:#2b2b2b;--calcite-color-inverse:#353535;--calcite-color-status-danger-press:#7c1d13;--calcite-color-status-danger-hover:#a82b1e;--calcite-color-status-danger:#d83020;--calcite-color-status-warning-press:#bfa200;--calcite-color-status-warning-hover:#d9bc00;--calcite-color-status-warning:#edd317;--calcite-color-status-success-press:#1a6324;--calcite-color-status-success-hover:#288835;--calcite-color-status-success:#35ac46;--calcite-color-status-info-press:#00304d;--calcite-color-status-info-hover:#004874;--calcite-color-status-info:#00619b;--calcite-color-brand-underline:rgba(0, 97, 155, 0.4);--calcite-color-brand-press:#004874;--calcite-color-brand-hover:#00619b;--calcite-color-brand:#007ac2;--calcite-color-transparent-tint:rgba(255, 255, 255, 0.8);--calcite-color-transparent-scrim:rgba(255, 255, 255, 0.85);--calcite-color-transparent-press:rgba(0, 0, 0, 0.08);--calcite-color-transparent-hover:rgba(0, 0, 0, 0.04);--calcite-color-transparent:rgba(0, 0, 0, 0);--calcite-color-foreground-current:#c7eaff;--calcite-color-foreground-3:#eaeaea;--calcite-color-foreground-2:#f3f3f3;--calcite-color-foreground-1:#ffffff;--calcite-color-background:#f8f8f8}}@media (prefers-color-scheme: dark){:root{--calcite-color-border-white:#f8f8f8;--calcite-color-border-ghost:rgba(117, 117, 117, 0.3);--calcite-color-border-input:#757575;--calcite-color-border-3:#404040;--calcite-color-border-2:#4a4a4a;--calcite-color-border-1:#555555;--calcite-color-text-link:#00A0FF;--calcite-color-text-inverse:#151515;--calcite-color-text-3:#9f9f9f;--calcite-color-text-2:#bfbfbf;--calcite-color-text-1:#ffffff;--calcite-color-inverse-press:#f3f3f3;--calcite-color-inverse-hover:#ffffff;--calcite-color-inverse:#f8f8f8;--calcite-color-status-danger-press:#d90012;--calcite-color-status-danger-hover:#ff0015;--calcite-color-status-danger:#FE583E;--calcite-color-status-warning-press:#f5d000;--calcite-color-status-warning-hover:#ffee33;--calcite-color-status-warning:#FFC900;--calcite-color-status-success-press:#00b81b;--calcite-color-status-success-hover:#3bed52;--calcite-color-status-success:#36DA43;--calcite-color-status-info-press:#009af2;--calcite-color-status-info-hover:#3db8ff;--calcite-color-status-info:#00A0FF;--calcite-color-brand-underline:rgba(0, 160, 255, 0.4);--calcite-color-brand-press:#00619b;--calcite-color-brand-hover:#007ac2;--calcite-color-brand:#009af2;--calcite-color-transparent-tint:rgba(43, 43, 43, 0.8);--calcite-color-transparent-scrim:rgba(0, 0, 0, 0.85);--calcite-color-transparent-press:rgba(255, 255, 255, 0.08);--calcite-color-transparent-hover:rgba(255, 255, 255, 0.04);--calcite-color-transparent:rgba(255, 255, 255, 0);--calcite-color-foreground-current:#214155;--calcite-color-foreground-3:#151515;--calcite-color-foreground-2:#202020;--calcite-color-foreground-1:#2b2b2b;--calcite-color-background:#353535}}.calcite-mode-light{--calcite-color-border-white:#ffffff;--calcite-color-border-ghost:rgba(0, 0, 0, 0.3);--calcite-color-border-input:#949494;--calcite-color-border-3:#dfdfdf;--calcite-color-border-2:#d4d4d4;--calcite-color-border-1:#cacaca;--calcite-color-text-link:#00619b;--calcite-color-text-inverse:#ffffff;--calcite-color-text-3:#6a6a6a;--calcite-color-text-2:#4a4a4a;--calcite-color-text-1:#151515;--calcite-color-inverse-press:#202020;--calcite-color-inverse-hover:#2b2b2b;--calcite-color-inverse:#353535;--calcite-color-status-danger-press:#7c1d13;--calcite-color-status-danger-hover:#a82b1e;--calcite-color-status-danger:#d83020;--calcite-color-status-warning-press:#bfa200;--calcite-color-status-warning-hover:#d9bc00;--calcite-color-status-warning:#edd317;--calcite-color-status-success-press:#1a6324;--calcite-color-status-success-hover:#288835;--calcite-color-status-success:#35ac46;--calcite-color-status-info-press:#00304d;--calcite-color-status-info-hover:#004874;--calcite-color-status-info:#00619b;--calcite-color-brand-underline:rgba(0, 97, 155, 0.4);--calcite-color-brand-press:#004874;--calcite-color-brand-hover:#00619b;--calcite-color-brand:#007ac2;--calcite-color-transparent-tint:rgba(255, 255, 255, 0.8);--calcite-color-transparent-scrim:rgba(255, 255, 255, 0.85);--calcite-color-transparent-press:rgba(0, 0, 0, 0.08);--calcite-color-transparent-hover:rgba(0, 0, 0, 0.04);--calcite-color-transparent:rgba(0, 0, 0, 0);--calcite-color-foreground-current:#c7eaff;--calcite-color-foreground-3:#eaeaea;--calcite-color-foreground-2:#f3f3f3;--calcite-color-foreground-1:#ffffff;--calcite-color-background:#f8f8f8}.calcite-mode-dark{--calcite-color-border-white:#f8f8f8;--calcite-color-border-ghost:rgba(117, 117, 117, 0.3);--calcite-color-border-input:#757575;--calcite-color-border-3:#404040;--calcite-color-border-2:#4a4a4a;--calcite-color-border-1:#555555;--calcite-color-text-link:#00A0FF;--calcite-color-text-inverse:#151515;--calcite-color-text-3:#9f9f9f;--calcite-color-text-2:#bfbfbf;--calcite-color-text-1:#ffffff;--calcite-color-inverse-press:#f3f3f3;--calcite-color-inverse-hover:#ffffff;--calcite-color-inverse:#f8f8f8;--calcite-color-status-danger-press:#d90012;--calcite-color-status-danger-hover:#ff0015;--calcite-color-status-danger:#FE583E;--calcite-color-status-warning-press:#f5d000;--calcite-color-status-warning-hover:#ffee33;--calcite-color-status-warning:#FFC900;--calcite-color-status-success-press:#00b81b;--calcite-color-status-success-hover:#3bed52;--calcite-color-status-success:#36DA43;--calcite-color-status-info-press:#009af2;--calcite-color-status-info-hover:#3db8ff;--calcite-color-status-info:#00A0FF;--calcite-color-brand-underline:rgba(0, 160, 255, 0.4);--calcite-color-brand-press:#00619b;--calcite-color-brand-hover:#007ac2;--calcite-color-brand:#009af2;--calcite-color-transparent-tint:rgba(43, 43, 43, 0.8);--calcite-color-transparent-scrim:rgba(0, 0, 0, 0.85);--calcite-color-transparent-press:rgba(255, 255, 255, 0.08);--calcite-color-transparent-hover:rgba(255, 255, 255, 0.04);--calcite-color-transparent:rgba(255, 255, 255, 0);--calcite-color-foreground-current:#214155;--calcite-color-foreground-3:#151515;--calcite-color-foreground-2:#202020;--calcite-color-foreground-1:#2b2b2b;--calcite-color-background:#353535}:root{--calcite-code-family:\"Consolas\", \"Andale Mono\", \"Lucida Console\", \"Monaco\", monospace;--calcite-sans-family:\"Avenir Next\", \"Avenir\", \"Helvetica Neue\", sans-serif;--calcite-font-size--3:0.625rem;--calcite-font-size--2:0.75rem;--calcite-font-size--1:0.875rem;--calcite-font-size-0:1rem;--calcite-font-size-1:1.125rem;--calcite-font-size-2:1.25rem;--calcite-font-size-3:1.625rem;--calcite-font-size-4:2rem;--calcite-font-size-5:2.5rem;--calcite-font-size-6:3rem;--calcite-font-size-7:3.5rem;--calcite-font-size-8:4rem;--calcite-font-weight-light:300;--calcite-font-weight-normal:400;--calcite-font-weight-medium:500;--calcite-font-weight-bold:600;--calcite-floating-ui-transition:var(--calcite-animation-timing);--calcite-floating-ui-z-index:var(--calcite-z-index-dropdown);--calcite-animation-timing:calc(150ms * var(--calcite-internal-duration-factor));--calcite-internal-duration-factor:var(--calcite-duration-factor, 1);--calcite-internal-animation-timing-fast:calc(100ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-medium:calc(200ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-slow:calc(300ms * var(--calcite-internal-duration-factor));text-rendering:optimizeLegibility;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;--calcite-popover-z-index:var(--calcite-z-index-popup);--calcite-border-radius:var(--calcite-border-radius-round, 4px);--calcite-border-radius-base:0;--calcite-offset-invert-focus:0;--calcite-panel-width-multiplier:1;--calcite-ui-icon-color:currentColor;font-family:var(--calcite-sans-family)}@media (prefers-color-scheme: dark){.calcite-mode-auto{--calcite-color-border-white:#f8f8f8;--calcite-color-border-ghost:rgba(117, 117, 117, 0.3);--calcite-color-border-input:#757575;--calcite-color-border-3:#404040;--calcite-color-border-2:#4a4a4a;--calcite-color-border-1:#555555;--calcite-color-text-link:#00A0FF;--calcite-color-text-inverse:#151515;--calcite-color-text-3:#9f9f9f;--calcite-color-text-2:#bfbfbf;--calcite-color-text-1:#ffffff;--calcite-color-inverse-press:#f3f3f3;--calcite-color-inverse-hover:#ffffff;--calcite-color-inverse:#f8f8f8;--calcite-color-status-danger-press:#d90012;--calcite-color-status-danger-hover:#ff0015;--calcite-color-status-danger:#FE583E;--calcite-color-status-warning-press:#f5d000;--calcite-color-status-warning-hover:#ffee33;--calcite-color-status-warning:#FFC900;--calcite-color-status-success-press:#00b81b;--calcite-color-status-success-hover:#3bed52;--calcite-color-status-success:#36DA43;--calcite-color-status-info-press:#009af2;--calcite-color-status-info-hover:#3db8ff;--calcite-color-status-info:#00A0FF;--calcite-color-brand-underline:rgba(0, 160, 255, 0.4);--calcite-color-brand-press:#00619b;--calcite-color-brand-hover:#007ac2;--calcite-color-brand:#009af2;--calcite-color-transparent-tint:rgba(43, 43, 43, 0.8);--calcite-color-transparent-scrim:rgba(0, 0, 0, 0.85);--calcite-color-transparent-press:rgba(255, 255, 255, 0.08);--calcite-color-transparent-hover:rgba(255, 255, 255, 0.04);--calcite-color-transparent:rgba(255, 255, 255, 0);--calcite-color-foreground-current:#214155;--calcite-color-foreground-3:#151515;--calcite-color-foreground-2:#202020;--calcite-color-foreground-1:#2b2b2b;--calcite-color-background:#353535}}@media (prefers-color-scheme: light){.calcite-mode-auto{--calcite-color-border-white:#ffffff;--calcite-color-border-ghost:rgba(0, 0, 0, 0.3);--calcite-color-border-input:#949494;--calcite-color-border-3:#dfdfdf;--calcite-color-border-2:#d4d4d4;--calcite-color-border-1:#cacaca;--calcite-color-text-link:#00619b;--calcite-color-text-inverse:#ffffff;--calcite-color-text-3:#6a6a6a;--calcite-color-text-2:#4a4a4a;--calcite-color-text-1:#151515;--calcite-color-inverse-press:#202020;--calcite-color-inverse-hover:#2b2b2b;--calcite-color-inverse:#353535;--calcite-color-status-danger-press:#7c1d13;--calcite-color-status-danger-hover:#a82b1e;--calcite-color-status-danger:#d83020;--calcite-color-status-warning-press:#bfa200;--calcite-color-status-warning-hover:#d9bc00;--calcite-color-status-warning:#edd317;--calcite-color-status-success-press:#1a6324;--calcite-color-status-success-hover:#288835;--calcite-color-status-success:#35ac46;--calcite-color-status-info-press:#00304d;--calcite-color-status-info-hover:#004874;--calcite-color-status-info:#00619b;--calcite-color-brand-underline:rgba(0, 97, 155, 0.4);--calcite-color-brand-press:#004874;--calcite-color-brand-hover:#00619b;--calcite-color-brand:#007ac2;--calcite-color-transparent-tint:rgba(255, 255, 255, 0.8);--calcite-color-transparent-scrim:rgba(255, 255, 255, 0.85);--calcite-color-transparent-press:rgba(0, 0, 0, 0.08);--calcite-color-transparent-hover:rgba(0, 0, 0, 0.04);--calcite-color-transparent:rgba(0, 0, 0, 0);--calcite-color-foreground-current:#c7eaff;--calcite-color-foreground-3:#eaeaea;--calcite-color-foreground-2:#f3f3f3;--calcite-color-foreground-1:#ffffff;--calcite-color-background:#f8f8f8}}@media (prefers-reduced-motion: reduce){:root{--calcite-internal-duration-factor:0.01}}@keyframes in{0%{opacity:0}100%{opacity:1}}@keyframes in-down{0%{opacity:0;transform:translate3D(0, -5px, 0)}100%{opacity:1;transform:translate3D(0, 0, 0)}}@keyframes in-up{0%{opacity:0;transform:translate3D(0, 5px, 0)}100%{opacity:1;transform:translate3D(0, 0, 0)}}@keyframes in-right{0%{opacity:0;transform:translate3D(-5px, 0, 0)}100%{opacity:1;transform:translate3D(0, 0, 0)}}@keyframes in-left{0%{opacity:0;transform:translate3D(5px, 0, 0)}100%{opacity:1;transform:translate3D(0, 0, 0)}}@keyframes in-scale{0%{opacity:0;transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;transform:scale3D(1, 1, 1)}}.calcite-animate{opacity:0;animation-fill-mode:both;animation-duration:var(--calcite-animation-timing)}.calcite-animate__in{animation-name:in}.calcite-animate__in-down{animation-name:in-down}.calcite-animate__in-up{animation-name:in-up}.calcite-animate__in-right{animation-name:in-right}.calcite-animate__in-left{animation-name:in-left}.calcite-animate__in-scale{animation-name:in-scale}.calcite-sortable--ghost,.calcite-sortable--drag{overflow:hidden}.calcite-sortable--ghost::before{content:\"\";position:absolute;inset:0px;z-index:var(--calcite-z-index);box-sizing:border-box;border-width:1px;border-style:dashed;border-color:var(--calcite-color-brand);background-color:var(--calcite-color-foreground-2)}.calcite-sortable--drag{--tw-shadow:0 6px 20px -4px rgba(0, 0, 0, 0.1), 0 4px 12px -2px rgba(0, 0, 0, 0.08);--tw-shadow-colored:0 6px 20px -4px var(--tw-shadow-color), 0 4px 12px -2px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}"],"sourceRoot":""}]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/api.js":
/*!*****************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/api.js ***!
  \*****************************************************/
/***/ ((module) => {

"use strict";


/*
  MIT License http://www.opensource.org/licenses/mit-license.php
  Author Tobias Koppers @sokra
*/
module.exports = function (cssWithMappingToString) {
  var list = [];

  // return the list of modules as css string
  list.toString = function toString() {
    return this.map(function (item) {
      var content = "";
      var needLayer = typeof item[5] !== "undefined";
      if (item[4]) {
        content += "@supports (".concat(item[4], ") {");
      }
      if (item[2]) {
        content += "@media ".concat(item[2], " {");
      }
      if (needLayer) {
        content += "@layer".concat(item[5].length > 0 ? " ".concat(item[5]) : "", " {");
      }
      content += cssWithMappingToString(item);
      if (needLayer) {
        content += "}";
      }
      if (item[2]) {
        content += "}";
      }
      if (item[4]) {
        content += "}";
      }
      return content;
    }).join("");
  };

  // import a list of modules into the list
  list.i = function i(modules, media, dedupe, supports, layer) {
    if (typeof modules === "string") {
      modules = [[null, modules, undefined]];
    }
    var alreadyImportedModules = {};
    if (dedupe) {
      for (var k = 0; k < this.length; k++) {
        var id = this[k][0];
        if (id != null) {
          alreadyImportedModules[id] = true;
        }
      }
    }
    for (var _k = 0; _k < modules.length; _k++) {
      var item = [].concat(modules[_k]);
      if (dedupe && alreadyImportedModules[item[0]]) {
        continue;
      }
      if (typeof layer !== "undefined") {
        if (typeof item[5] === "undefined") {
          item[5] = layer;
        } else {
          item[1] = "@layer".concat(item[5].length > 0 ? " ".concat(item[5]) : "", " {").concat(item[1], "}");
          item[5] = layer;
        }
      }
      if (media) {
        if (!item[2]) {
          item[2] = media;
        } else {
          item[1] = "@media ".concat(item[2], " {").concat(item[1], "}");
          item[2] = media;
        }
      }
      if (supports) {
        if (!item[4]) {
          item[4] = "".concat(supports);
        } else {
          item[1] = "@supports (".concat(item[4], ") {").concat(item[1], "}");
          item[4] = supports;
        }
      }
      list.push(item);
    }
  };
  return list;
};

/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/sourceMaps.js":
/*!************************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/sourceMaps.js ***!
  \************************************************************/
/***/ ((module) => {

"use strict";


module.exports = function (item) {
  var content = item[1];
  var cssMapping = item[3];
  if (!cssMapping) {
    return content;
  }
  if (typeof btoa === "function") {
    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));
    var data = "sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(base64);
    var sourceMapping = "/*# ".concat(data, " */");
    return [content].concat([sourceMapping]).join("\n");
  }
  return [content].join("\n");
};

/***/ }),

/***/ "./node_modules/@esri/calcite-components/dist/calcite/calcite.css":
/*!************************************************************************!*\
  !*** ./node_modules/@esri/calcite-components/dist/calcite/calcite.css ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js */ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js");
/* harmony import */ var _style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !../../../../style-loader/dist/runtime/styleDomAPI.js */ "./node_modules/style-loader/dist/runtime/styleDomAPI.js");
/* harmony import */ var _style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! !../../../../style-loader/dist/runtime/insertBySelector.js */ "./node_modules/style-loader/dist/runtime/insertBySelector.js");
/* harmony import */ var _style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! !../../../../style-loader/dist/runtime/setAttributesWithoutAttributes.js */ "./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js");
/* harmony import */ var _style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! !../../../../style-loader/dist/runtime/insertStyleElement.js */ "./node_modules/style-loader/dist/runtime/insertStyleElement.js");
/* harmony import */ var _style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! !../../../../style-loader/dist/runtime/styleTagTransform.js */ "./node_modules/style-loader/dist/runtime/styleTagTransform.js");
/* harmony import */ var _style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _css_loader_dist_cjs_js_ruleSet_1_rules_3_use_1_resolve_url_loader_index_js_ruleSet_1_rules_3_use_2_sass_loader_dist_cjs_js_ruleSet_1_rules_3_use_3_calcite_css__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! !!../../../../css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../resolve-url-loader/index.js??ruleSet[1].rules[3].use[2]!../../../../sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[3]!./calcite.css */ "./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!./node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[2]!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[3]!./node_modules/@esri/calcite-components/dist/calcite/calcite.css");

      
      
      
      
      
      
      
      
      

var options = {};

options.styleTagTransform = (_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default());
options.setAttributes = (_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default());

      options.insert = _style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default().bind(null, "head");
    
options.domAPI = (_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default());
options.insertStyleElement = (_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default());

var update = _style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_css_loader_dist_cjs_js_ruleSet_1_rules_3_use_1_resolve_url_loader_index_js_ruleSet_1_rules_3_use_2_sass_loader_dist_cjs_js_ruleSet_1_rules_3_use_3_calcite_css__WEBPACK_IMPORTED_MODULE_6__["default"], options);




       /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_css_loader_dist_cjs_js_ruleSet_1_rules_3_use_1_resolve_url_loader_index_js_ruleSet_1_rules_3_use_2_sass_loader_dist_cjs_js_ruleSet_1_rules_3_use_3_calcite_css__WEBPACK_IMPORTED_MODULE_6__["default"] && _css_loader_dist_cjs_js_ruleSet_1_rules_3_use_1_resolve_url_loader_index_js_ruleSet_1_rules_3_use_2_sass_loader_dist_cjs_js_ruleSet_1_rules_3_use_3_calcite_css__WEBPACK_IMPORTED_MODULE_6__["default"].locals ? _css_loader_dist_cjs_js_ruleSet_1_rules_3_use_1_resolve_url_loader_index_js_ruleSet_1_rules_3_use_2_sass_loader_dist_cjs_js_ruleSet_1_rules_3_use_3_calcite_css__WEBPACK_IMPORTED_MODULE_6__["default"].locals : undefined);


/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js":
/*!****************************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js ***!
  \****************************************************************************/
/***/ ((module) => {

"use strict";


var stylesInDOM = [];
function getIndexByIdentifier(identifier) {
  var result = -1;
  for (var i = 0; i < stylesInDOM.length; i++) {
    if (stylesInDOM[i].identifier === identifier) {
      result = i;
      break;
    }
  }
  return result;
}
function modulesToDom(list, options) {
  var idCountMap = {};
  var identifiers = [];
  for (var i = 0; i < list.length; i++) {
    var item = list[i];
    var id = options.base ? item[0] + options.base : item[0];
    var count = idCountMap[id] || 0;
    var identifier = "".concat(id, " ").concat(count);
    idCountMap[id] = count + 1;
    var indexByIdentifier = getIndexByIdentifier(identifier);
    var obj = {
      css: item[1],
      media: item[2],
      sourceMap: item[3],
      supports: item[4],
      layer: item[5]
    };
    if (indexByIdentifier !== -1) {
      stylesInDOM[indexByIdentifier].references++;
      stylesInDOM[indexByIdentifier].updater(obj);
    } else {
      var updater = addElementStyle(obj, options);
      options.byIndex = i;
      stylesInDOM.splice(i, 0, {
        identifier: identifier,
        updater: updater,
        references: 1
      });
    }
    identifiers.push(identifier);
  }
  return identifiers;
}
function addElementStyle(obj, options) {
  var api = options.domAPI(options);
  api.update(obj);
  var updater = function updater(newObj) {
    if (newObj) {
      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {
        return;
      }
      api.update(obj = newObj);
    } else {
      api.remove();
    }
  };
  return updater;
}
module.exports = function (list, options) {
  options = options || {};
  list = list || [];
  var lastIdentifiers = modulesToDom(list, options);
  return function update(newList) {
    newList = newList || [];
    for (var i = 0; i < lastIdentifiers.length; i++) {
      var identifier = lastIdentifiers[i];
      var index = getIndexByIdentifier(identifier);
      stylesInDOM[index].references--;
    }
    var newLastIdentifiers = modulesToDom(newList, options);
    for (var _i = 0; _i < lastIdentifiers.length; _i++) {
      var _identifier = lastIdentifiers[_i];
      var _index = getIndexByIdentifier(_identifier);
      if (stylesInDOM[_index].references === 0) {
        stylesInDOM[_index].updater();
        stylesInDOM.splice(_index, 1);
      }
    }
    lastIdentifiers = newLastIdentifiers;
  };
};

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/insertBySelector.js":
/*!********************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/insertBySelector.js ***!
  \********************************************************************/
/***/ ((module) => {

"use strict";


var memo = {};

/* istanbul ignore next  */
function getTarget(target) {
  if (typeof memo[target] === "undefined") {
    var styleTarget = document.querySelector(target);

    // Special case to return head of iframe instead of iframe itself
    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {
      try {
        // This will throw an exception if access to iframe is blocked
        // due to cross-origin restrictions
        styleTarget = styleTarget.contentDocument.head;
      } catch (e) {
        // istanbul ignore next
        styleTarget = null;
      }
    }
    memo[target] = styleTarget;
  }
  return memo[target];
}

/* istanbul ignore next  */
function insertBySelector(insert, style) {
  var target = getTarget(insert);
  if (!target) {
    throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");
  }
  target.appendChild(style);
}
module.exports = insertBySelector;

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/insertStyleElement.js":
/*!**********************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/insertStyleElement.js ***!
  \**********************************************************************/
/***/ ((module) => {

"use strict";


/* istanbul ignore next  */
function insertStyleElement(options) {
  var element = document.createElement("style");
  options.setAttributes(element, options.attributes);
  options.insert(element, options.options);
  return element;
}
module.exports = insertStyleElement;

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js ***!
  \**********************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


/* istanbul ignore next  */
function setAttributesWithoutAttributes(styleElement) {
  var nonce =  true ? __webpack_require__.nc : 0;
  if (nonce) {
    styleElement.setAttribute("nonce", nonce);
  }
}
module.exports = setAttributesWithoutAttributes;

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/styleDomAPI.js":
/*!***************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/styleDomAPI.js ***!
  \***************************************************************/
/***/ ((module) => {

"use strict";


/* istanbul ignore next  */
function apply(styleElement, options, obj) {
  var css = "";
  if (obj.supports) {
    css += "@supports (".concat(obj.supports, ") {");
  }
  if (obj.media) {
    css += "@media ".concat(obj.media, " {");
  }
  var needLayer = typeof obj.layer !== "undefined";
  if (needLayer) {
    css += "@layer".concat(obj.layer.length > 0 ? " ".concat(obj.layer) : "", " {");
  }
  css += obj.css;
  if (needLayer) {
    css += "}";
  }
  if (obj.media) {
    css += "}";
  }
  if (obj.supports) {
    css += "}";
  }
  var sourceMap = obj.sourceMap;
  if (sourceMap && typeof btoa !== "undefined") {
    css += "\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), " */");
  }

  // For old IE
  /* istanbul ignore if  */
  options.styleTagTransform(css, styleElement, options.options);
}
function removeStyleElement(styleElement) {
  // istanbul ignore if
  if (styleElement.parentNode === null) {
    return false;
  }
  styleElement.parentNode.removeChild(styleElement);
}

/* istanbul ignore next  */
function domAPI(options) {
  if (typeof document === "undefined") {
    return {
      update: function update() {},
      remove: function remove() {}
    };
  }
  var styleElement = options.insertStyleElement(options);
  return {
    update: function update(obj) {
      apply(styleElement, options, obj);
    },
    remove: function remove() {
      removeStyleElement(styleElement);
    }
  };
}
module.exports = domAPI;

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/styleTagTransform.js":
/*!*********************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/styleTagTransform.js ***!
  \*********************************************************************/
/***/ ((module) => {

"use strict";


/* istanbul ignore next  */
function styleTagTransform(css, styleElement) {
  if (styleElement.styleSheet) {
    styleElement.styleSheet.cssText = css;
  } else {
    while (styleElement.firstChild) {
      styleElement.removeChild(styleElement.firstChild);
    }
    styleElement.appendChild(document.createTextNode(css));
  }
}
module.exports = styleTagTransform;

/***/ }),

/***/ "esri/geometry/projection":
/*!*******************************************!*\
  !*** external "esri/geometry/projection" ***!
  \*******************************************/
/***/ ((module) => {

"use strict";
module.exports = __WEBPACK_EXTERNAL_MODULE_esri_geometry_projection__;

/***/ }),

/***/ "jimu-core":
/*!****************************!*\
  !*** external "jimu-core" ***!
  \****************************/
/***/ ((module) => {

"use strict";
module.exports = __WEBPACK_EXTERNAL_MODULE_jimu_core__;

/***/ }),

/***/ "react":
/*!**********************************!*\
  !*** external "jimu-core/react" ***!
  \**********************************/
/***/ ((module) => {

"use strict";
module.exports = __WEBPACK_EXTERNAL_MODULE_react__;

/***/ }),

/***/ "./node_modules/@esri/calcite-components/dist/components/index.js":
/*!************************************************************************!*\
  !*** ./node_modules/@esri/calcite-components/dist/components/index.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   getAssetPath: () => (/* reexport safe */ _stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_1__.getAssetPath),
/* harmony export */   setAssetPath: () => (/* reexport safe */ _stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_1__.setAssetPath),
/* harmony export */   setNonce: () => (/* reexport safe */ _stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_1__.setNonce),
/* harmony export */   setPlatformOptions: () => (/* reexport safe */ _stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_1__.setPlatformOptions)
/* harmony export */ });
/* harmony import */ var _resources_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./resources.js */ "./node_modules/@esri/calcite-components/dist/components/resources.js");
/* harmony import */ var _stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @stencil/core/internal/client/index.js */ "./node_modules/@stencil/core/internal/client/index.js");
/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-design-system/blob/main/LICENSE.md for details.
 * v2.0.0
 */



/**
 * Emits when the mode is dynamically toggled between light and dark on <body> or in OS preferences.
 */
function initModeChangeEvent() {
  const { classList } = document.body;
  const prefersDark = window.matchMedia("(prefers-color-scheme: dark)").matches;
  const getMode = () => classList.contains(_resources_js__WEBPACK_IMPORTED_MODULE_0__.d) || (classList.contains(_resources_js__WEBPACK_IMPORTED_MODULE_0__.a) && prefersDark) ? "dark" : "light";
  const emitModeChange = (mode) => document.body.dispatchEvent(new CustomEvent("calciteModeChange", { bubbles: true, detail: { mode } }));
  const modeChangeHandler = (newMode) => {
    currentMode !== newMode && emitModeChange(newMode);
    currentMode = newMode;
  };
  let currentMode = getMode();
  // emits event on page load
  emitModeChange(currentMode);
  // emits event when changing OS mode preferences
  window
    .matchMedia("(prefers-color-scheme: dark)")
    .addEventListener("change", (event) => modeChangeHandler(event.matches ? "dark" : "light"));
  // emits event when toggling between mode classes on <body>
  new MutationObserver(() => modeChangeHandler(getMode())).observe(document.body, {
    attributes: true,
    attributeFilter: ["class"],
  });
}

/**
 * This file is imported in Stencil's `globalScript` config option.
 *
 * @see {@link https://stenciljs.com/docs/config#globalscript}
 */
function appGlobalScript () {
  const isBrowser = typeof window !== "undefined" &&
    typeof location !== "undefined" &&
    typeof document !== "undefined" &&
    window.location === location &&
    window.document === document;
  if (isBrowser) {
    if (document.readyState === "interactive") {
      initModeChangeEvent();
    }
    else {
      document.addEventListener("DOMContentLoaded", () => initModeChangeEvent(), { once: true });
    }
  }
}

const globalScripts = appGlobalScript;

globalScripts();

//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/@esri/calcite-components/dist/components/resources.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@esri/calcite-components/dist/components/resources.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   C: () => (/* binding */ CSS_UTILITY),
/* harmony export */   a: () => (/* binding */ autoMode),
/* harmony export */   d: () => (/* binding */ darkMode)
/* harmony export */ });
/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-design-system/blob/main/LICENSE.md for details.
 * v2.0.0
 */
const autoMode = "calcite-mode-auto";
const darkMode = "calcite-mode-dark";
const lightMode = "calcite-mode-light";
const CSS_UTILITY = {
  autoMode,
  darkMode,
  lightMode,
  rtl: "calcite--rtl",
  calciteAnimate: "calcite-animate",
  calciteAnimateIn: "calcite-animate__in",
  calciteAnimateInUp: "calcite-animate__in-up",
  calciteAnimateInDown: "calcite-animate__in-down",
  calciteAnimateInRight: "calcite-animate__in-right",
  calciteAnimateInLeft: "calcite-animate__in-left",
  calciteAnimateInScale: "calcite-animate__in-scale",
};



//# sourceMappingURL=resources.js.map

/***/ }),

/***/ "./node_modules/@stencil/core/internal/app-data/index.js":
/*!***************************************************************!*\
  !*** ./node_modules/@stencil/core/internal/app-data/index.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   BUILD: () => (/* binding */ BUILD),
/* harmony export */   Env: () => (/* binding */ Env),
/* harmony export */   NAMESPACE: () => (/* binding */ NAMESPACE)
/* harmony export */ });
/**
 * A collection of default build flags for a Stencil project.
 *
 * This collection can be found throughout the Stencil codebase, often imported from the `@app-data` module like so:
 * ```ts
 * import { BUILD } from '@app-data';
 * ```
 * and is used to determine if a portion of the output of a Stencil _project_'s compilation step can be eliminated.
 *
 * e.g. When `BUILD.allRenderFn` evaluates to `false`, the compiler will eliminate conditional statements like:
 * ```ts
 * if (BUILD.allRenderFn) {
 *   // some code that will be eliminated if BUILD.allRenderFn is false
 * }
 * ```
 *
 * `@app-data`, the module that `BUILD` is imported from, is an alias for the `@stencil/core/internal/app-data`, and is
 * partially referenced by {@link STENCIL_APP_DATA_ID}. The `src/compiler/bundle/app-data-plugin.ts` references
 * `STENCIL_APP_DATA_ID` uses it to replace these defaults with {@link BuildConditionals} that are derived from a
 * Stencil project's contents (i.e. metadata from the components). This replacement happens at a Stencil project's
 * compile time. Such code can be found at `src/compiler/app-core/app-data.ts`.
 */
const BUILD = {
    allRenderFn: false,
    cmpDidLoad: true,
    cmpDidUnload: false,
    cmpDidUpdate: true,
    cmpDidRender: true,
    cmpWillLoad: true,
    cmpWillUpdate: true,
    cmpWillRender: true,
    connectedCallback: true,
    disconnectedCallback: true,
    element: true,
    event: true,
    hasRenderFn: true,
    lifecycle: true,
    hostListener: true,
    hostListenerTargetWindow: true,
    hostListenerTargetDocument: true,
    hostListenerTargetBody: true,
    hostListenerTargetParent: false,
    hostListenerTarget: true,
    member: true,
    method: true,
    mode: true,
    observeAttribute: true,
    prop: true,
    propMutable: true,
    reflect: true,
    scoped: true,
    shadowDom: true,
    slot: true,
    cssAnnotations: true,
    state: true,
    style: true,
    formAssociated: false,
    svg: true,
    updatable: true,
    vdomAttribute: true,
    vdomXlink: true,
    vdomClass: true,
    vdomFunctional: true,
    vdomKey: true,
    vdomListener: true,
    vdomRef: true,
    vdomPropOrAttr: true,
    vdomRender: true,
    vdomStyle: true,
    vdomText: true,
    watchCallback: true,
    taskQueue: true,
    hotModuleReplacement: false,
    isDebug: false,
    isDev: false,
    isTesting: false,
    hydrateServerSide: false,
    hydrateClientSide: false,
    lifecycleDOMEvents: false,
    lazyLoad: false,
    profile: false,
    slotRelocation: true,
    // TODO(STENCIL-914): remove this option when `experimentalSlotFixes` is the default behavior
    appendChildSlotFix: false,
    // TODO(STENCIL-914): remove this option when `experimentalSlotFixes` is the default behavior
    cloneNodeFix: false,
    hydratedAttribute: false,
    hydratedClass: true,
    scriptDataOpts: false,
    // TODO(STENCIL-914): remove this option when `experimentalSlotFixes` is the default behavior
    scopedSlotTextContentFix: false,
    // TODO(STENCIL-854): Remove code related to legacy shadowDomShim field
    shadowDomShim: false,
    // TODO(STENCIL-914): remove this option when `experimentalSlotFixes` is the default behavior
    slotChildNodesFix: false,
    invisiblePrehydration: true,
    propBoolean: true,
    propNumber: true,
    propString: true,
    constructableCSS: true,
    cmpShouldUpdate: true,
    devTools: false,
    shadowDelegatesFocus: true,
    initializeNextTick: false,
    asyncLoading: false,
    asyncQueue: false,
    transformTagName: false,
    attachStyles: true,
    // TODO(STENCIL-914): remove this option when `experimentalSlotFixes` is the default behavior
    experimentalSlotFixes: false,
};
const Env = {};
const NAMESPACE = /* default */ 'app';




/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			id: moduleId,
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = __webpack_modules__;
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/ensure chunk */
/******/ 	(() => {
/******/ 		__webpack_require__.f = {};
/******/ 		// This file contains only the entry chunk.
/******/ 		// The chunk loading function for additional chunks
/******/ 		__webpack_require__.e = (chunkId) => {
/******/ 			return Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {
/******/ 				__webpack_require__.f[key](chunkId, promises);
/******/ 				return promises;
/******/ 			}, []));
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/get javascript chunk filename */
/******/ 	(() => {
/******/ 		// This function allow to reference async chunks
/******/ 		__webpack_require__.u = (chunkId) => {
/******/ 			// return url for filenames not based on template
/******/ 			if (chunkId === "vendors-node_modules_stencil_core_internal_client_shadow-css_js") return "widgets/chunks/vendors-node_modules_stencil_core_internal_client_shadow-css_js.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-22435f") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-22435f.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-612cb0") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-612cb0.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b6510") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b6510.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-6cd580") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-6cd580.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-cafbf1") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-cafbf1.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-49d2fb") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-49d2fb.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-08845b") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-08845b.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-afcda1") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-afcda1.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-d7e502") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-d7e502.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-bbcc8a") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-bbcc8a.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-5ef4d3") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-5ef4d3.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-99836c") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-99836c.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-5cee3f") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-5cee3f.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b6511") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b6511.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-feb445") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-feb445.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-70f5c6") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-70f5c6.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-6dc9e8") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-6dc9e8.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-49933b") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-49933b.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-42027a") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-42027a.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-9fca22") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-9fca22.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b6512") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b6512.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-affb86") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-affb86.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-185c5e") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-185c5e.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-fda5fb") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-fda5fb.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b6513") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b6513.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-580a35") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-580a35.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-8dc8d7") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-8dc8d7.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-15dcef") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-15dcef.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b6514") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b6514.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-e8854b") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-e8854b.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-1e606f") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-1e606f.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-ec422b") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-ec422b.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-0a6a66") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-0a6a66.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b6515") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b6515.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-10db21") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-10db21.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-3bad42") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-3bad42.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b6516") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b6516.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-450fd8") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-450fd8.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b6517") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b6517.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-98cdc1") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-98cdc1.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-a73221") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-a73221.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-2a6904") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-2a6904.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-a292ea") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-a292ea.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-5abfb9") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-5abfb9.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-335364") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-335364.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-568ad7") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-568ad7.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b6518") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b6518.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-371a99") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-371a99.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b6519") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b6519.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-9b12ae") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-9b12ae.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-bc0c20") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-bc0c20.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-65d81a") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-65d81a.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-8167fd") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-8167fd.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-8a9684") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-8a9684.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65110") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65110.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-2e47ee") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-2e47ee.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-6e9f40") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-6e9f40.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-853b98") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-853b98.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-b59e41") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-b59e41.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-ced01d") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-ced01d.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-1eb552") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-1eb552.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-36fb7e") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-36fb7e.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-d80d1a") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-d80d1a.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-0d074b") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-0d074b.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-b1d7fc") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-b1d7fc.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-84c939") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-84c939.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65111") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65111.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-328696") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-328696.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-e45851") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-e45851.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65112") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65112.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-e196a7") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-e196a7.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-340868") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-340868.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-65f9d9") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-65f9d9.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-658038") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-658038.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65113") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65113.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f73a03") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f73a03.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-31e305") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-31e305.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65114") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65114.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-49959e") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-49959e.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65115") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65115.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f6746d") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f6746d.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65116") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65116.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-dece0b") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-dece0b.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-1badd6") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-1badd6.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65117") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65117.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-2fbc33") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-2fbc33.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65118") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65118.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f6204c") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f6204c.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65119") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65119.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-0085c2") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-0085c2.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65120") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65120.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-edc936") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-edc936.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65121") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65121.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-56f4a3") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-56f4a3.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65122") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65122.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-42222b") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-42222b.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-bff128") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-bff128.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65123") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65123.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-0a657e") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-0a657e.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65124") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65124.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-9b0a9b") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-9b0a9b.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65125") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65125.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-fc5ebf") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-fc5ebf.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-77b7dd") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-77b7dd.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-bd32b8") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-bd32b8.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-2bdedf") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-2bdedf.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65126") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65126.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-166e7f") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-166e7f.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65127") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65127.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-c77b8d") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-c77b8d.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65128") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65128.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-87c9cd") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-87c9cd.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65129") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65129.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-32688d") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-32688d.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-8bef38") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-8bef38.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-0a975a") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-0a975a.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65130") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65130.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-49e107") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-49e107.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65131") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65131.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-857841") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-857841.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65132") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65132.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-da5a4c") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-da5a4c.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65133") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65133.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-783595") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-783595.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65134") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65134.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-d4251f") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-d4251f.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-ca2b00") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-ca2b00.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65135") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65135.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-e642b5") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-e642b5.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-8dc94d") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-8dc94d.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-cf15f1") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-cf15f1.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-3505a3") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-3505a3.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65136") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65136.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-bc0a37") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-bc0a37.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-db44bb") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-db44bb.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-a27112") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-a27112.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-24da96") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-24da96.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-cb167b") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-cb167b.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-dc2971") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-dc2971.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-2f09d8") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-2f09d8.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-ffc994") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-ffc994.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-7b3599") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-7b3599.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65137") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65137.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-3990fb") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-3990fb.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f436af") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f436af.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65138") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65138.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-8f0575") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-8f0575.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65139") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65139.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-28f8b8") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-28f8b8.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65140") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65140.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-457afd") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-457afd.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65141") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65141.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-3c46bd") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-3c46bd.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65142") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65142.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-506901") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-506901.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65143") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65143.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-5c99df") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-5c99df.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65144") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65144.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-396491") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-396491.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-2b8ed8") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-2b8ed8.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65145") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65145.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-586fcc") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-586fcc.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65146") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65146.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-bb0941") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-bb0941.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65147") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65147.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-4729f8") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-4729f8.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65148") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65148.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-eda6c5") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-eda6c5.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-1c1671") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-1c1671.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65149") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65149.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-74332f") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-74332f.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65150") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65150.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-2b3897") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-2b3897.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-b2c59c") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-b2c59c.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-a199e7") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-a199e7.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-8837a8") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-8837a8.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65151") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65151.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-31d427") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-31d427.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65152") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65152.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-97d550") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-97d550.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-c86438") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-c86438.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-4526f2") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-4526f2.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-9d091c") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-9d091c.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-d70c83") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-d70c83.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65153") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65153.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-a1e81e") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-a1e81e.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-ebc0a1") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-ebc0a1.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65154") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65154.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-a68795") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-a68795.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-1a7c8d") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-1a7c8d.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65155") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65155.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-2c450e") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-2c450e.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-9a115d") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-9a115d.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65156") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65156.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-ddf285") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-ddf285.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65157") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65157.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-cf5131") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-cf5131.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-4222af") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-4222af.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65158") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65158.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-160bc0") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-160bc0.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65159") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65159.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-7340ff") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-7340ff.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65160") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65160.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-801e93") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-801e93.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65161") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65161.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-1be921") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-1be921.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65162") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65162.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-5ffed3") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-5ffed3.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-18e763") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-18e763.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-2f79b1") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-2f79b1.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-6f09be") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-6f09be.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-53d1b1") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-53d1b1.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-10fa4c") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-10fa4c.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-eb39e1") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-eb39e1.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-b16f0d") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-b16f0d.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-e46c1b") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-e46c1b.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-b05801") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-b05801.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-836476") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-836476.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-89e890") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-89e890.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-74fb06") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-74fb06.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-a58d9a") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-a58d9a.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-bfc6ac") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-bfc6ac.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-fba9cf") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-fba9cf.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-2ce12b") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-2ce12b.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-78ca31") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-78ca31.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-05db5a") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-05db5a.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-cc89fb") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-cc89fb.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-ac9b0f") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-ac9b0f.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-3fd1a0") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-3fd1a0.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-edcb00") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-edcb00.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-f25ed3") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-f25ed3.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-579ac1") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-579ac1.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-25901f") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-25901f.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-b5c218") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-b5c218.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-a8f7af") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-a8f7af.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-10d5f3") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-10d5f3.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-c240bf") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-c240bf.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-51e435") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-51e435.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-75b0b1") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-75b0b1.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-027c12") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-027c12.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-ee2988") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-ee2988.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-a2262d") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-a2262d.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-5af91d") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-5af91d.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-bc1bd3") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-bc1bd3.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-40d085") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-40d085.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-9a570f") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-9a570f.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-65a4c6") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-65a4c6.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-a3e962") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-a3e962.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-2fe17d") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-2fe17d.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-0ef701") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-0ef701.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-1dd0cd") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-1dd0cd.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-6c2d94") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-6c2d94.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-a83dac") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-a83dac.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-f4f317") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-f4f317.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-6e1f59") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-6e1f59.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-f608bc") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-f608bc.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-3e5750") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-3e5750.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-22260d") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-22260d.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-dab0e4") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-dab0e4.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-2dc0ec") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-2dc0ec.js";
/******/ 			// return url for filenames based on template
/******/ 			return undefined;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/load script */
/******/ 	(() => {
/******/ 		var inProgress = {};
/******/ 		var dataWebpackPrefix = "exb-client:";
/******/ 		// loadScript function to load a script via script tag
/******/ 		__webpack_require__.l = (url, done, key, chunkId) => {
/******/ 			if(inProgress[url]) { inProgress[url].push(done); return; }
/******/ 			var script, needAttach;
/******/ 			if(key !== undefined) {
/******/ 				var scripts = document.getElementsByTagName("script");
/******/ 				for(var i = 0; i < scripts.length; i++) {
/******/ 					var s = scripts[i];
/******/ 					if(s.getAttribute("src") == url || s.getAttribute("data-webpack") == dataWebpackPrefix + key) { script = s; break; }
/******/ 				}
/******/ 			}
/******/ 			if(!script) {
/******/ 				needAttach = true;
/******/ 				script = document.createElement('script');
/******/ 		
/******/ 				script.charset = 'utf-8';
/******/ 				script.timeout = 120;
/******/ 				if (__webpack_require__.nc) {
/******/ 					script.setAttribute("nonce", __webpack_require__.nc);
/******/ 				}
/******/ 				script.setAttribute("data-webpack", dataWebpackPrefix + key);
/******/ 		
/******/ 				script.src = url;
/******/ 			}
/******/ 			inProgress[url] = [done];
/******/ 			var onScriptComplete = (prev, event) => {
/******/ 				// avoid mem leaks in IE.
/******/ 				script.onerror = script.onload = null;
/******/ 				clearTimeout(timeout);
/******/ 				var doneFns = inProgress[url];
/******/ 				delete inProgress[url];
/******/ 				script.parentNode && script.parentNode.removeChild(script);
/******/ 				doneFns && doneFns.forEach((fn) => (fn(event)));
/******/ 				if(prev) return prev(event);
/******/ 			}
/******/ 			var timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);
/******/ 			script.onerror = onScriptComplete.bind(null, script.onerror);
/******/ 			script.onload = onScriptComplete.bind(null, script.onload);
/******/ 			needAttach && document.head.appendChild(script);
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/publicPath */
/******/ 	(() => {
/******/ 		__webpack_require__.p = "";
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/jsonp chunk loading */
/******/ 	(() => {
/******/ 		// no baseURI
/******/ 		
/******/ 		// object to store loaded and loading chunks
/******/ 		// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 		// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded
/******/ 		var installedChunks = {
/******/ 			"widgets/simple/dist/runtime/widget": 0
/******/ 		};
/******/ 		
/******/ 		__webpack_require__.f.j = (chunkId, promises) => {
/******/ 				// JSONP chunk loading for javascript
/******/ 				var installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;
/******/ 				if(installedChunkData !== 0) { // 0 means "already installed".
/******/ 		
/******/ 					// a Promise means "currently loading".
/******/ 					if(installedChunkData) {
/******/ 						promises.push(installedChunkData[2]);
/******/ 					} else {
/******/ 						if(true) { // all chunks have JS
/******/ 							// setup Promise in chunk cache
/******/ 							var promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));
/******/ 							promises.push(installedChunkData[2] = promise);
/******/ 		
/******/ 							// start chunk loading
/******/ 							var url = __webpack_require__.p + __webpack_require__.u(chunkId);
/******/ 							// create error before stack unwound to get useful stacktrace later
/******/ 							var error = new Error();
/******/ 							var loadingEnded = (event) => {
/******/ 								if(__webpack_require__.o(installedChunks, chunkId)) {
/******/ 									installedChunkData = installedChunks[chunkId];
/******/ 									if(installedChunkData !== 0) installedChunks[chunkId] = undefined;
/******/ 									if(installedChunkData) {
/******/ 										var errorType = event && (event.type === 'load' ? 'missing' : event.type);
/******/ 										var realSrc = event && event.target && event.target.src;
/******/ 										error.message = 'Loading chunk ' + chunkId + ' failed.\n(' + errorType + ': ' + realSrc + ')';
/******/ 										error.name = 'ChunkLoadError';
/******/ 										error.type = errorType;
/******/ 										error.request = realSrc;
/******/ 										installedChunkData[1](error);
/******/ 									}
/******/ 								}
/******/ 							};
/******/ 							__webpack_require__.l(url, loadingEnded, "chunk-" + chunkId, chunkId);
/******/ 						}
/******/ 					}
/******/ 				}
/******/ 		};
/******/ 		
/******/ 		// no prefetching
/******/ 		
/******/ 		// no preloaded
/******/ 		
/******/ 		// no HMR
/******/ 		
/******/ 		// no HMR manifest
/******/ 		
/******/ 		// no on chunks loaded
/******/ 		
/******/ 		// install a JSONP callback for chunk loading
/******/ 		var webpackJsonpCallback = (parentChunkLoadingFunction, data) => {
/******/ 			var [chunkIds, moreModules, runtime] = data;
/******/ 			// add "moreModules" to the modules object,
/******/ 			// then flag all "chunkIds" as loaded and fire callback
/******/ 			var moduleId, chunkId, i = 0;
/******/ 			if(chunkIds.some((id) => (installedChunks[id] !== 0))) {
/******/ 				for(moduleId in moreModules) {
/******/ 					if(__webpack_require__.o(moreModules, moduleId)) {
/******/ 						__webpack_require__.m[moduleId] = moreModules[moduleId];
/******/ 					}
/******/ 				}
/******/ 				if(runtime) var result = runtime(__webpack_require__);
/******/ 			}
/******/ 			if(parentChunkLoadingFunction) parentChunkLoadingFunction(data);
/******/ 			for(;i < chunkIds.length; i++) {
/******/ 				chunkId = chunkIds[i];
/******/ 				if(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {
/******/ 					installedChunks[chunkId][0]();
/******/ 				}
/******/ 				installedChunks[chunkId] = 0;
/******/ 			}
/******/ 		
/******/ 		}
/******/ 		
/******/ 		var chunkLoadingGlobal = self["webpackChunkexb_client"] = self["webpackChunkexb_client"] || [];
/******/ 		chunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));
/******/ 		chunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/nonce */
/******/ 	(() => {
/******/ 		__webpack_require__.nc = undefined;
/******/ 	})();
/******/ 	
/************************************************************************/
var __webpack_exports__ = {};
// This entry need to be wrapped in an IIFE because it need to be isolated against other entry modules.
(() => {
/*!******************************************!*\
  !*** ./jimu-core/lib/set-public-path.ts ***!
  \******************************************/
/**
 * Webpack will replace __webpack_public_path__ with __webpack_require__.p to set the public path dynamically.
 * The reason why we can't set the publicPath in webpack config is: we change the publicPath when download.
 * */
// eslint-disable-next-line
// @ts-ignore
__webpack_require__.p = window.jimuConfig.baseUrl;

})();

// This entry need to be wrapped in an IIFE because it need to be in strict mode.
(() => {
"use strict";
/*!**********************************************************!*\
  !*** ./extensions/widgets/simple/src/runtime/widget.tsx ***!
  \**********************************************************/
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   __set_webpack_public_path__: () => (/* binding */ __set_webpack_public_path__),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var jimu_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jimu-core */ "jimu-core");
/* harmony import */ var _arcgis_core_geometry_projection__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @arcgis/core/geometry/projection */ "esri/geometry/projection");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var _esri_calcite_components_dist_components__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @esri/calcite-components/dist/components */ "./node_modules/@esri/calcite-components/dist/components/index.js");
/* harmony import */ var _esri_calcite_components_react__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @esri/calcite-components-react */ "./node_modules/@esri/calcite-components-react/dist/components.js");
/* harmony import */ var _esri_calcite_components_dist_calcite_calcite_css__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @esri/calcite-components/dist/calcite/calcite.css */ "./node_modules/@esri/calcite-components/dist/calcite/calcite.css");






const Widget = (props) => {
    const [isLoaded, setIsLoaded] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(false);
    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(() => {
        if (!isLoaded) {
            setIsLoaded(true);
            (0,_esri_calcite_components_dist_components__WEBPACK_IMPORTED_MODULE_3__.setAssetPath)(`${props.context.folderUrl}dist/runtime/assets`);
            // isLoaded is not recognized as a function when using import * as projection from '@arcgis/core/geometry/projection'
            // when using import projection from '@arcgis/core/geometry/projection' it works, but this leads to issues when
            // using the widget in the Developer Edition
            if (_arcgis_core_geometry_projection__WEBPACK_IMPORTED_MODULE_1__.isLoaded()) {
                console.log('projection is loaded');
            }
        }
    }, [isLoaded]);
    return (jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.createElement("div", { className: "widget-demo jimu-widget m-2" },
        jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.createElement("p", null, "Simple Widget"),
        jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.createElement("p", null,
            "exampleConfigProperty: ",
            props.config.exampleConfigProperty),
        jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.createElement(_esri_calcite_components_react__WEBPACK_IMPORTED_MODULE_5__.CalciteButton, null, "A button")));
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Widget);
function __set_webpack_public_path__(url) { __webpack_require__.p = url; }

})();

/******/ 	return __webpack_exports__;
/******/ })()

			);
		}
	};
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,