System.register(["jimu-core","esri/geometry/projection","jimu-core/react"], function(__WEBPACK_DYNAMIC_EXPORT__, __system_context__) {
	var __WEBPACK_EXTERNAL_MODULE_jimu_core__ = {};
	var __WEBPACK_EXTERNAL_MODULE_esri_geometry_projection__ = {};
	var __WEBPACK_EXTERNAL_MODULE_react__ = {};
	Object.defineProperty(__WEBPACK_EXTERNAL_MODULE_jimu_core__, "__esModule", { value: true });
	Object.defineProperty(__WEBPACK_EXTERNAL_MODULE_esri_geometry_projection__, "__esModule", { value: true });
	Object.defineProperty(__WEBPACK_EXTERNAL_MODULE_react__, "__esModule", { value: true });
	return {
		setters: [
			function(module) {
				Object.keys(module).forEach(function(key) {
					__WEBPACK_EXTERNAL_MODULE_jimu_core__[key] = module[key];
				});
			},
			function(module) {
				Object.keys(module).forEach(function(key) {
					__WEBPACK_EXTERNAL_MODULE_esri_geometry_projection__[key] = module[key];
				});
			},
			function(module) {
				Object.keys(module).forEach(function(key) {
					__WEBPACK_EXTERNAL_MODULE_react__[key] = module[key];
				});
			}
		],
		execute: function() {
			__WEBPACK_DYNAMIC_EXPORT__(
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/@esri/calcite-components-react/dist/components.js":
/*!************************************************************************!*\
  !*** ./node_modules/@esri/calcite-components-react/dist/components.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   CalciteAccordion: () => (/* binding */ CalciteAccordion),
/* harmony export */   CalciteAccordionItem: () => (/* binding */ CalciteAccordionItem),
/* harmony export */   CalciteAction: () => (/* binding */ CalciteAction),
/* harmony export */   CalciteActionBar: () => (/* binding */ CalciteActionBar),
/* harmony export */   CalciteActionGroup: () => (/* binding */ CalciteActionGroup),
/* harmony export */   CalciteActionMenu: () => (/* binding */ CalciteActionMenu),
/* harmony export */   CalciteActionPad: () => (/* binding */ CalciteActionPad),
/* harmony export */   CalciteAlert: () => (/* binding */ CalciteAlert),
/* harmony export */   CalciteAvatar: () => (/* binding */ CalciteAvatar),
/* harmony export */   CalciteBlock: () => (/* binding */ CalciteBlock),
/* harmony export */   CalciteBlockSection: () => (/* binding */ CalciteBlockSection),
/* harmony export */   CalciteButton: () => (/* binding */ CalciteButton),
/* harmony export */   CalciteCard: () => (/* binding */ CalciteCard),
/* harmony export */   CalciteCheckbox: () => (/* binding */ CalciteCheckbox),
/* harmony export */   CalciteChip: () => (/* binding */ CalciteChip),
/* harmony export */   CalciteChipGroup: () => (/* binding */ CalciteChipGroup),
/* harmony export */   CalciteColorPicker: () => (/* binding */ CalciteColorPicker),
/* harmony export */   CalciteColorPickerHexInput: () => (/* binding */ CalciteColorPickerHexInput),
/* harmony export */   CalciteColorPickerSwatch: () => (/* binding */ CalciteColorPickerSwatch),
/* harmony export */   CalciteCombobox: () => (/* binding */ CalciteCombobox),
/* harmony export */   CalciteComboboxItem: () => (/* binding */ CalciteComboboxItem),
/* harmony export */   CalciteComboboxItemGroup: () => (/* binding */ CalciteComboboxItemGroup),
/* harmony export */   CalciteDatePicker: () => (/* binding */ CalciteDatePicker),
/* harmony export */   CalciteDatePickerDay: () => (/* binding */ CalciteDatePickerDay),
/* harmony export */   CalciteDatePickerMonth: () => (/* binding */ CalciteDatePickerMonth),
/* harmony export */   CalciteDatePickerMonthHeader: () => (/* binding */ CalciteDatePickerMonthHeader),
/* harmony export */   CalciteDropdown: () => (/* binding */ CalciteDropdown),
/* harmony export */   CalciteDropdownGroup: () => (/* binding */ CalciteDropdownGroup),
/* harmony export */   CalciteDropdownItem: () => (/* binding */ CalciteDropdownItem),
/* harmony export */   CalciteFab: () => (/* binding */ CalciteFab),
/* harmony export */   CalciteFilter: () => (/* binding */ CalciteFilter),
/* harmony export */   CalciteFlow: () => (/* binding */ CalciteFlow),
/* harmony export */   CalciteFlowItem: () => (/* binding */ CalciteFlowItem),
/* harmony export */   CalciteGraph: () => (/* binding */ CalciteGraph),
/* harmony export */   CalciteHandle: () => (/* binding */ CalciteHandle),
/* harmony export */   CalciteIcon: () => (/* binding */ CalciteIcon),
/* harmony export */   CalciteInlineEditable: () => (/* binding */ CalciteInlineEditable),
/* harmony export */   CalciteInput: () => (/* binding */ CalciteInput),
/* harmony export */   CalciteInputDatePicker: () => (/* binding */ CalciteInputDatePicker),
/* harmony export */   CalciteInputMessage: () => (/* binding */ CalciteInputMessage),
/* harmony export */   CalciteInputNumber: () => (/* binding */ CalciteInputNumber),
/* harmony export */   CalciteInputText: () => (/* binding */ CalciteInputText),
/* harmony export */   CalciteInputTimePicker: () => (/* binding */ CalciteInputTimePicker),
/* harmony export */   CalciteInputTimeZone: () => (/* binding */ CalciteInputTimeZone),
/* harmony export */   CalciteLabel: () => (/* binding */ CalciteLabel),
/* harmony export */   CalciteLink: () => (/* binding */ CalciteLink),
/* harmony export */   CalciteList: () => (/* binding */ CalciteList),
/* harmony export */   CalciteListItem: () => (/* binding */ CalciteListItem),
/* harmony export */   CalciteListItemGroup: () => (/* binding */ CalciteListItemGroup),
/* harmony export */   CalciteLoader: () => (/* binding */ CalciteLoader),
/* harmony export */   CalciteMenu: () => (/* binding */ CalciteMenu),
/* harmony export */   CalciteMenuItem: () => (/* binding */ CalciteMenuItem),
/* harmony export */   CalciteMeter: () => (/* binding */ CalciteMeter),
/* harmony export */   CalciteModal: () => (/* binding */ CalciteModal),
/* harmony export */   CalciteNavigation: () => (/* binding */ CalciteNavigation),
/* harmony export */   CalciteNavigationLogo: () => (/* binding */ CalciteNavigationLogo),
/* harmony export */   CalciteNavigationUser: () => (/* binding */ CalciteNavigationUser),
/* harmony export */   CalciteNotice: () => (/* binding */ CalciteNotice),
/* harmony export */   CalciteOption: () => (/* binding */ CalciteOption),
/* harmony export */   CalciteOptionGroup: () => (/* binding */ CalciteOptionGroup),
/* harmony export */   CalcitePagination: () => (/* binding */ CalcitePagination),
/* harmony export */   CalcitePanel: () => (/* binding */ CalcitePanel),
/* harmony export */   CalcitePickList: () => (/* binding */ CalcitePickList),
/* harmony export */   CalcitePickListGroup: () => (/* binding */ CalcitePickListGroup),
/* harmony export */   CalcitePickListItem: () => (/* binding */ CalcitePickListItem),
/* harmony export */   CalcitePopover: () => (/* binding */ CalcitePopover),
/* harmony export */   CalciteProgress: () => (/* binding */ CalciteProgress),
/* harmony export */   CalciteRadioButton: () => (/* binding */ CalciteRadioButton),
/* harmony export */   CalciteRadioButtonGroup: () => (/* binding */ CalciteRadioButtonGroup),
/* harmony export */   CalciteRating: () => (/* binding */ CalciteRating),
/* harmony export */   CalciteScrim: () => (/* binding */ CalciteScrim),
/* harmony export */   CalciteSegmentedControl: () => (/* binding */ CalciteSegmentedControl),
/* harmony export */   CalciteSegmentedControlItem: () => (/* binding */ CalciteSegmentedControlItem),
/* harmony export */   CalciteSelect: () => (/* binding */ CalciteSelect),
/* harmony export */   CalciteSheet: () => (/* binding */ CalciteSheet),
/* harmony export */   CalciteShell: () => (/* binding */ CalciteShell),
/* harmony export */   CalciteShellCenterRow: () => (/* binding */ CalciteShellCenterRow),
/* harmony export */   CalciteShellPanel: () => (/* binding */ CalciteShellPanel),
/* harmony export */   CalciteSlider: () => (/* binding */ CalciteSlider),
/* harmony export */   CalciteSortableList: () => (/* binding */ CalciteSortableList),
/* harmony export */   CalciteSplitButton: () => (/* binding */ CalciteSplitButton),
/* harmony export */   CalciteStack: () => (/* binding */ CalciteStack),
/* harmony export */   CalciteStepper: () => (/* binding */ CalciteStepper),
/* harmony export */   CalciteStepperItem: () => (/* binding */ CalciteStepperItem),
/* harmony export */   CalciteSwitch: () => (/* binding */ CalciteSwitch),
/* harmony export */   CalciteTab: () => (/* binding */ CalciteTab),
/* harmony export */   CalciteTabNav: () => (/* binding */ CalciteTabNav),
/* harmony export */   CalciteTabTitle: () => (/* binding */ CalciteTabTitle),
/* harmony export */   CalciteTable: () => (/* binding */ CalciteTable),
/* harmony export */   CalciteTableCell: () => (/* binding */ CalciteTableCell),
/* harmony export */   CalciteTableHeader: () => (/* binding */ CalciteTableHeader),
/* harmony export */   CalciteTableRow: () => (/* binding */ CalciteTableRow),
/* harmony export */   CalciteTabs: () => (/* binding */ CalciteTabs),
/* harmony export */   CalciteTextArea: () => (/* binding */ CalciteTextArea),
/* harmony export */   CalciteTile: () => (/* binding */ CalciteTile),
/* harmony export */   CalciteTileSelect: () => (/* binding */ CalciteTileSelect),
/* harmony export */   CalciteTileSelectGroup: () => (/* binding */ CalciteTileSelectGroup),
/* harmony export */   CalciteTimePicker: () => (/* binding */ CalciteTimePicker),
/* harmony export */   CalciteTip: () => (/* binding */ CalciteTip),
/* harmony export */   CalciteTipGroup: () => (/* binding */ CalciteTipGroup),
/* harmony export */   CalciteTipManager: () => (/* binding */ CalciteTipManager),
/* harmony export */   CalciteTooltip: () => (/* binding */ CalciteTooltip),
/* harmony export */   CalciteTree: () => (/* binding */ CalciteTree),
/* harmony export */   CalciteTreeItem: () => (/* binding */ CalciteTreeItem),
/* harmony export */   CalciteValueList: () => (/* binding */ CalciteValueList),
/* harmony export */   CalciteValueListItem: () => (/* binding */ CalciteValueListItem)
/* harmony export */ });
/* harmony import */ var _react_component_lib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./react-component-lib */ "./node_modules/@esri/calcite-components-react/dist/react-component-lib/createComponent.js");
var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
/* eslint-disable */
/* tslint:disable */
/* auto-generated react proxies */

// https://github.com/flexdinesh/browser-or-node/blob/master/src/index.js
const isBrowser = typeof window !== "undefined" && typeof window.document !== "undefined";
const isNode = typeof process !== "undefined" &&
    process.versions != null &&
    process.versions.node != null &&
    (process === null || process === void 0 ? void 0 : process.platform) !== "browser";
const CalciteAccordion = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-accordion', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-22435f")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-accordion.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-accordion.js"))).defineCustomElement(); }) : undefined);
const CalciteAccordionItem = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-accordion-item', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-612cb0"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b6510")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-accordion-item.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-accordion-item.js"))).defineCustomElement(); }) : undefined);
const CalciteAction = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-action', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-6cd580"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-cafbf1"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-49d2fb")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-action.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-action.js"))).defineCustomElement(); }) : undefined);
const CalciteActionBar = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-action-bar', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-6cd580"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-08845b"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-cafbf1"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-afcda1"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-d7e502"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-bbcc8a"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-5ef4d3"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-99836c"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-5cee3f"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b6511")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-action-bar.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-action-bar.js"))).defineCustomElement(); }) : undefined);
const CalciteActionGroup = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-action-group', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-6cd580"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-08845b"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-cafbf1"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-afcda1"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-d7e502"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-bbcc8a"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-5ef4d3"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-feb445")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-action-group.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-action-group.js"))).defineCustomElement(); }) : undefined);
const CalciteActionMenu = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-action-menu', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-6cd580"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-08845b"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-cafbf1"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-afcda1"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-d7e502"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-bbcc8a"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-5ef4d3"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-70f5c6")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-action-menu.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-action-menu.js"))).defineCustomElement(); }) : undefined);
const CalciteActionPad = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-action-pad', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-6cd580"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-08845b"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-cafbf1"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-afcda1"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-d7e502"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-bbcc8a"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-5ef4d3"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-99836c"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-6dc9e8")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-action-pad.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-action-pad.js"))).defineCustomElement(); }) : undefined);
const CalciteAlert = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-alert', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-6cd580"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-49933b"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-42027a"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-9fca22"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b6512")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-alert.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-alert.js"))).defineCustomElement(); }) : undefined);
const CalciteAvatar = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-avatar', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-affb86"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-185c5e")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-avatar.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-avatar.js"))).defineCustomElement(); }) : undefined);
const CalciteBlock = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-block', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-6cd580"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-08845b"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-cafbf1"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-afcda1"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-d7e502"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-bbcc8a"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-5ef4d3"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-fda5fb"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b6513")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-block.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-block.js"))).defineCustomElement(); }) : undefined);
const CalciteBlockSection = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-block-section', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-6cd580"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-580a35"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-8dc8d7"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-15dcef"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b6514")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-block-section.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-block-section.js"))).defineCustomElement(); }) : undefined);
const CalciteButton = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-button', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-6cd580"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-580a35"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-e8854b"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-1e606f")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-button.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-button.js"))).defineCustomElement(); }) : undefined);
const CalciteCard = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-card', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-6cd580"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-580a35"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-ec422b"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-0a6a66"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b6515")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-card.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-card.js"))).defineCustomElement(); }) : undefined);
const CalciteCheckbox = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-checkbox', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-580a35"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-ec422b"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-10db21")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-checkbox.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-checkbox.js"))).defineCustomElement(); }) : undefined);
const CalciteChip = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-chip', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-6cd580"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-49933b"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-3bad42"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b6516")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-chip.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-chip.js"))).defineCustomElement(); }) : undefined);
const CalciteChipGroup = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-chip-group', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-450fd8"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b6517")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-chip-group.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-chip-group.js"))).defineCustomElement(); }) : undefined);
const CalciteColorPicker = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-color-picker', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-6cd580"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-580a35"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-08845b"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-e8854b"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-98cdc1"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-a73221"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-2a6904"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-a292ea"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-5abfb9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-335364"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-568ad7"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b6518")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-color-picker.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-color-picker.js"))).defineCustomElement(); }) : undefined);
const CalciteColorPickerHexInput = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-color-picker-hex-input', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-6cd580"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-580a35"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-98cdc1"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-a73221"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-2a6904"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-5abfb9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-371a99"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b6519")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-color-picker-hex-input.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-color-picker-hex-input.js"))).defineCustomElement(); }) : undefined);
const CalciteColorPickerSwatch = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-color-picker-swatch', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-a73221"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-9b12ae")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-color-picker-swatch.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-color-picker-swatch.js"))).defineCustomElement(); }) : undefined);
const CalciteCombobox = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-combobox', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-6cd580"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-580a35"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-08845b"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-afcda1"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-bc0c20"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-49933b"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-65d81a"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-8167fd")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-combobox.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-combobox.js"))).defineCustomElement(); }) : undefined);
const CalciteComboboxItem = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-combobox-item', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-8a9684"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65110")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-combobox-item.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-combobox-item.js"))).defineCustomElement(); }) : undefined);
const CalciteComboboxItemGroup = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-combobox-item-group', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-2e47ee")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-combobox-item-group.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-combobox-item-group.js"))).defineCustomElement(); }) : undefined);
const CalciteDatePicker = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-date-picker', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-6cd580"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-6e9f40"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-853b98"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-b59e41"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-ced01d"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-1eb552")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-date-picker.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-date-picker.js"))).defineCustomElement(); }) : undefined);
const CalciteDatePickerDay = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-date-picker-day', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-6cd580"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-6e9f40"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-36fb7e")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-date-picker-day.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-date-picker-day.js"))).defineCustomElement(); }) : undefined);
const CalciteDatePickerMonth = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-date-picker-month', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-6cd580"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-6e9f40"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-b59e41"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-d80d1a")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-date-picker-month.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-date-picker-month.js"))).defineCustomElement(); }) : undefined);
const CalciteDatePickerMonthHeader = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-date-picker-month-header', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-6cd580"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-853b98"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-0d074b")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-date-picker-month-header.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-date-picker-month-header.js"))).defineCustomElement(); }) : undefined);
const CalciteDropdown = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-dropdown', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-08845b"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-afcda1"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-b1d7fc"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-84c939"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65111")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-dropdown.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-dropdown.js"))).defineCustomElement(); }) : undefined);
const CalciteDropdownGroup = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-dropdown-group', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-328696")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-dropdown-group.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-dropdown-group.js"))).defineCustomElement(); }) : undefined);
const CalciteDropdownItem = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-dropdown-item', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-e45851"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65112")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-dropdown-item.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-dropdown-item.js"))).defineCustomElement(); }) : undefined);
const CalciteFab = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-fab', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-6cd580"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-580a35"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-e8854b"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-e196a7")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-fab.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-fab.js"))).defineCustomElement(); }) : undefined);
const CalciteFilter = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-filter', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-6cd580"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-580a35"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-08845b"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-bc0c20"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-340868"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-65f9d9")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-filter.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-filter.js"))).defineCustomElement(); }) : undefined);
const CalciteFlow = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-flow', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-658038"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65113")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-flow.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-flow.js"))).defineCustomElement(); }) : undefined);
const CalciteFlowItem = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-flow-item', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-6cd580"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-08845b"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-cafbf1"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-afcda1"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-d7e502"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-bbcc8a"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-5ef4d3"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f73a03"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-31e305"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65114")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-flow-item.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-flow-item.js"))).defineCustomElement(); }) : undefined);
const CalciteGraph = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-graph', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-49959e"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65115")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-graph.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-graph.js"))).defineCustomElement(); }) : undefined);
const CalciteHandle = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-handle', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-6cd580"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f6746d"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65116")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-handle.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-handle.js"))).defineCustomElement(); }) : undefined);
const CalciteIcon = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-icon', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-dece0b")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-icon.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-icon.js"))).defineCustomElement(); }) : undefined);
const CalciteInlineEditable = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-inline-editable', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-6cd580"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-580a35"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-e8854b"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-1badd6"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65117")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-inline-editable.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-inline-editable.js"))).defineCustomElement(); }) : undefined);
const CalciteInput = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-input', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-6cd580"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-580a35"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-340868"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-2fbc33"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65118")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-input.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-input.js"))).defineCustomElement(); }) : undefined);
const CalciteInputDatePicker = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-input-date-picker', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-6cd580"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-580a35"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-08845b"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-afcda1"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-d7e502"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-98cdc1"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-6e9f40"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-853b98"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-b59e41"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-ced01d"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f6204c"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65119")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-input-date-picker.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-input-date-picker.js"))).defineCustomElement(); }) : undefined);
const CalciteInputMessage = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-input-message', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-0085c2"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65120")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-input-message.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-input-message.js"))).defineCustomElement(); }) : undefined);
const CalciteInputNumber = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-input-number', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-6cd580"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-580a35"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-2a6904"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-edc936"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65121")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-input-number.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-input-number.js"))).defineCustomElement(); }) : undefined);
const CalciteInputText = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-input-text', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-6cd580"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-580a35"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-98cdc1"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-56f4a3"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65122")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-input-text.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-input-text.js"))).defineCustomElement(); }) : undefined);
const CalciteInputTimePicker = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-input-time-picker', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-6cd580"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-580a35"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-08845b"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-cafbf1"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-afcda1"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-d7e502"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-bbcc8a"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-98cdc1"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-42222b"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-bff128"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65123")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-input-time-picker.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-input-time-picker.js"))).defineCustomElement(); }) : undefined);
const CalciteInputTimeZone = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-input-time-zone', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-6cd580"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-580a35"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-08845b"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-afcda1"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-bc0c20"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-49933b"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-65d81a"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-0a657e"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65124")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-input-time-zone.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-input-time-zone.js"))).defineCustomElement(); }) : undefined);
const CalciteLabel = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-label', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-9b0a9b"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65125")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-label.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-label.js"))).defineCustomElement(); }) : undefined);
const CalciteLink = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-link', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-fc5ebf"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-77b7dd")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-link.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-link.js"))).defineCustomElement(); }) : undefined);
const CalciteList = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-list', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-6cd580"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-580a35"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-08845b"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-bc0c20"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-340868"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-bd32b8"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-2bdedf"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65126")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-list.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-list.js"))).defineCustomElement(); }) : undefined);
const CalciteListItem = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-list-item', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-6cd580"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-cafbf1"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-166e7f"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65127")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-list-item.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-list-item.js"))).defineCustomElement(); }) : undefined);
const CalciteListItemGroup = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-list-item-group', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-c77b8d"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65128")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-list-item-group.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-list-item-group.js"))).defineCustomElement(); }) : undefined);
const CalciteLoader = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-loader', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-87c9cd"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65129")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-loader.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-loader.js"))).defineCustomElement(); }) : undefined);
const CalciteMenu = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-menu', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-6cd580"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-32688d"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-8bef38")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-menu.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-menu.js"))).defineCustomElement(); }) : undefined);
const CalciteMenuItem = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-menu-item', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-6cd580"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-cafbf1"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-32688d"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-0a975a"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65130")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-menu-item.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-menu-item.js"))).defineCustomElement(); }) : undefined);
const CalciteMeter = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-meter', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-6cd580"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-580a35"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-49e107"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65131")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-meter.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-meter.js"))).defineCustomElement(); }) : undefined);
const CalciteModal = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-modal', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-6cd580"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-d7e502"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-857841"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65132")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-modal.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-modal.js"))).defineCustomElement(); }) : undefined);
const CalciteNavigation = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-navigation', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-6cd580"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-cafbf1"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-da5a4c"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65133")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-navigation.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-navigation.js"))).defineCustomElement(); }) : undefined);
const CalciteNavigationLogo = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-navigation-logo', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-783595"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65134")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-navigation-logo.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-navigation-logo.js"))).defineCustomElement(); }) : undefined);
const CalciteNavigationUser = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-navigation-user', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-affb86"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-d4251f")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-navigation-user.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-navigation-user.js"))).defineCustomElement(); }) : undefined);
const CalciteNotice = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-notice', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-6cd580"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-42027a"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-ca2b00"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65135")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-notice.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-notice.js"))).defineCustomElement(); }) : undefined);
const CalciteOption = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-option', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-e642b5")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-option.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-option.js"))).defineCustomElement(); }) : undefined);
const CalciteOptionGroup = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-option-group', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-8dc94d")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-option-group.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-option-group.js"))).defineCustomElement(); }) : undefined);
const CalcitePagination = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-pagination', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-6cd580"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-cf15f1"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-3505a3"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65136")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-pagination.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-pagination.js"))).defineCustomElement(); }) : undefined);
const CalcitePanel = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-panel', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-6cd580"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-08845b"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-cafbf1"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-afcda1"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-d7e502"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-bbcc8a"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-5ef4d3"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f73a03"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-bc0a37")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-panel.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-panel.js"))).defineCustomElement(); }) : undefined);
const CalcitePickList = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-pick-list', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-6cd580"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-580a35"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-08845b"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-bc0c20"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-340868"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-db44bb"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-a27112")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-pick-list.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-pick-list.js"))).defineCustomElement(); }) : undefined);
const CalcitePickListGroup = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-pick-list-group', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-24da96")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-pick-list-group.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-pick-list-group.js"))).defineCustomElement(); }) : undefined);
const CalcitePickListItem = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-pick-list-item', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-6cd580"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-cafbf1"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-cb167b"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-dc2971")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-pick-list-item.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-pick-list-item.js"))).defineCustomElement(); }) : undefined);
const CalcitePopover = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-popover', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-6cd580"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-08845b"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-cafbf1"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-afcda1"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-d7e502"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-bbcc8a"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-2f09d8")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-popover.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-popover.js"))).defineCustomElement(); }) : undefined);
const CalciteProgress = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-progress', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-ffc994")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-progress.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-progress.js"))).defineCustomElement(); }) : undefined);
const CalciteRadioButton = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-radio-button', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-580a35"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-7b3599"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65137")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-radio-button.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-radio-button.js"))).defineCustomElement(); }) : undefined);
const CalciteRadioButtonGroup = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-radio-button-group', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-3990fb")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-radio-button-group.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-radio-button-group.js"))).defineCustomElement(); }) : undefined);
const CalciteRating = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-rating', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-6cd580"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-580a35"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-49933b"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f436af"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65138")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-rating.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-rating.js"))).defineCustomElement(); }) : undefined);
const CalciteScrim = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-scrim', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-6cd580"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-8f0575"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65139")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-scrim.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-scrim.js"))).defineCustomElement(); }) : undefined);
const CalciteSegmentedControl = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-segmented-control', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-580a35"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-28f8b8"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65140")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-segmented-control.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-segmented-control.js"))).defineCustomElement(); }) : undefined);
const CalciteSegmentedControlItem = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-segmented-control-item', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-457afd"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65141")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-segmented-control-item.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-segmented-control-item.js"))).defineCustomElement(); }) : undefined);
const CalciteSelect = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-select', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-580a35"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-3c46bd"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65142")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-select.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-select.js"))).defineCustomElement(); }) : undefined);
const CalciteSheet = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-sheet', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-6cd580"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-d7e502"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-506901"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65143")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-sheet.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-sheet.js"))).defineCustomElement(); }) : undefined);
const CalciteShell = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-shell', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-5c99df"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65144")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-shell.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-shell.js"))).defineCustomElement(); }) : undefined);
const CalciteShellCenterRow = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-shell-center-row', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-396491")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-shell-center-row.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-shell-center-row.js"))).defineCustomElement(); }) : undefined);
const CalciteShellPanel = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-shell-panel', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-6cd580"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-2b8ed8"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65145")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-shell-panel.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-shell-panel.js"))).defineCustomElement(); }) : undefined);
const CalciteSlider = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-slider', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-6cd580"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-580a35"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-586fcc"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65146")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-slider.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-slider.js"))).defineCustomElement(); }) : undefined);
const CalciteSortableList = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-sortable-list', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-bd32b8"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-bb0941"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65147")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-sortable-list.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-sortable-list.js"))).defineCustomElement(); }) : undefined);
const CalciteSplitButton = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-split-button', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-6cd580"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-580a35"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-08845b"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-afcda1"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-e8854b"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-b1d7fc"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-4729f8"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65148")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-split-button.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-split-button.js"))).defineCustomElement(); }) : undefined);
const CalciteStack = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-stack', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-eda6c5")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-stack.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-stack.js"))).defineCustomElement(); }) : undefined);
const CalciteStepper = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-stepper', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-6cd580"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-cafbf1"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-1c1671"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65149")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-stepper.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-stepper.js"))).defineCustomElement(); }) : undefined);
const CalciteStepperItem = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-stepper-item', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-6cd580"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-74332f"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65150")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-stepper-item.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-stepper-item.js"))).defineCustomElement(); }) : undefined);
const CalciteSwitch = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-switch', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-580a35"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-8dc8d7"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-2b3897")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-switch.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-switch.js"))).defineCustomElement(); }) : undefined);
const CalciteTab = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-tab', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-b2c59c")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-tab.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-tab.js"))).defineCustomElement(); }) : undefined);
const CalciteTabNav = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-tab-nav', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-335364"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-a199e7")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-tab-nav.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-tab-nav.js"))).defineCustomElement(); }) : undefined);
const CalciteTabTitle = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-tab-title', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-6cd580"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-a292ea"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-8837a8"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65151")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-tab-title.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-tab-title.js"))).defineCustomElement(); }) : undefined);
const CalciteTable = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-table', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-6cd580"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-580a35"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-e8854b"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-49933b"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-cf15f1"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-31d427"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65152")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-table.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-table.js"))).defineCustomElement(); }) : undefined);
const CalciteTableCell = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-table-cell', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-6cd580"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-97d550"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-c86438")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-table-cell.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-table-cell.js"))).defineCustomElement(); }) : undefined);
const CalciteTableHeader = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-table-header', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-6cd580"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-4526f2"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-9d091c")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-table-header.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-table-header.js"))).defineCustomElement(); }) : undefined);
const CalciteTableRow = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-table-row', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-6cd580"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-4526f2"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-97d550"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-d70c83"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65153")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-table-row.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-table-row.js"))).defineCustomElement(); }) : undefined);
const CalciteTabs = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-tabs', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-a1e81e")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-tabs.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-tabs.js"))).defineCustomElement(); }) : undefined);
const CalciteTextArea = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-text-area', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-6cd580"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-580a35"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-08845b"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-ebc0a1"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65154")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-text-area.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-text-area.js"))).defineCustomElement(); }) : undefined);
const CalciteTile = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-tile', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-fc5ebf"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-a68795")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-tile.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-tile.js"))).defineCustomElement(); }) : undefined);
const CalciteTileSelect = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-tile-select', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-fc5ebf"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-1a7c8d"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65155")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-tile-select.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-tile-select.js"))).defineCustomElement(); }) : undefined);
const CalciteTileSelectGroup = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-tile-select-group', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-2c450e")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-tile-select-group.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-tile-select-group.js"))).defineCustomElement(); }) : undefined);
const CalciteTimePicker = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-time-picker', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-6cd580"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-42222b"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-9a115d"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65156")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-time-picker.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-time-picker.js"))).defineCustomElement(); }) : undefined);
const CalciteTip = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-tip', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-6cd580"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-cafbf1"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-ddf285"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65157")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-tip.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-tip.js"))).defineCustomElement(); }) : undefined);
const CalciteTipGroup = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-tip-group', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-cf5131")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-tip-group.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-tip-group.js"))).defineCustomElement(); }) : undefined);
const CalciteTipManager = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-tip-manager', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-6cd580"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-cafbf1"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-4222af"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65158")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-tip-manager.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-tip-manager.js"))).defineCustomElement(); }) : undefined);
const CalciteTooltip = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-tooltip', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-08845b"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-afcda1"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-160bc0"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65159")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-tooltip.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-tooltip.js"))).defineCustomElement(); }) : undefined);
const CalciteTree = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-tree', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-7340ff"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65160")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-tree.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-tree.js"))).defineCustomElement(); }) : undefined);
const CalciteTreeItem = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-tree-item', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-580a35"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-ec422b"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-801e93"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65161")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-tree-item.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-tree-item.js"))).defineCustomElement(); }) : undefined);
const CalciteValueList = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-value-list', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-6cd580"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-580a35"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-08845b"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-bc0c20"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-340868"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-bd32b8"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-db44bb"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-1be921"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65162")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-value-list.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-value-list.js"))).defineCustomElement(); }) : undefined);
const CalciteValueListItem = /*@__PURE__*/ (0,_react_component_lib__WEBPACK_IMPORTED_MODULE_0__.createReactComponent)('calcite-value-list-item', undefined, undefined, isBrowser && !isNode ? () => __awaiter(void 0, void 0, void 0, function* () { return (yield Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-6cd580"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-cafbf1"), __webpack_require__.e("vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-cb167b"), __webpack_require__.e("node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-5ffed3")]).then(__webpack_require__.bind(__webpack_require__, /*! @esri/calcite-components/dist/components/calcite-value-list-item.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-value-list-item.js"))).defineCustomElement(); }) : undefined);


/***/ }),

/***/ "./node_modules/@esri/calcite-components-react/dist/react-component-lib/createComponent.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@esri/calcite-components-react/dist/react-component-lib/createComponent.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   createReactComponent: () => (/* binding */ createReactComponent)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils */ "./node_modules/@esri/calcite-components-react/dist/react-component-lib/utils/case.js");
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils */ "./node_modules/@esri/calcite-components-react/dist/react-component-lib/utils/attachProps.js");
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils */ "./node_modules/@esri/calcite-components-react/dist/react-component-lib/utils/index.js");
var __rest = (undefined && undefined.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};


const createReactComponent = (tagName, ReactComponentContext, manipulatePropsFunction, defineCustomElement) => {
    if (defineCustomElement !== undefined) {
        defineCustomElement();
    }
    const displayName = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.dashToPascalCase)(tagName);
    const ReactComponent = class extends react__WEBPACK_IMPORTED_MODULE_0__["default"].Component {
        constructor(props) {
            super(props);
            this.setComponentElRef = (element) => {
                this.componentEl = element;
            };
        }
        componentDidMount() {
            this.componentDidUpdate(this.props);
        }
        componentDidUpdate(prevProps) {
            (0,_utils__WEBPACK_IMPORTED_MODULE_2__.attachProps)(this.componentEl, this.props, prevProps);
        }
        render() {
            const _a = this.props, { children, forwardedRef, style, className, ref } = _a, cProps = __rest(_a, ["children", "forwardedRef", "style", "className", "ref"]);
            let propsToPass = Object.keys(cProps).reduce((acc, name) => {
                const value = cProps[name];
                if (name.indexOf('on') === 0 && name[2] === name[2].toUpperCase()) {
                    const eventName = name.substring(2).toLowerCase();
                    if (typeof document !== 'undefined' && (0,_utils__WEBPACK_IMPORTED_MODULE_2__.isCoveredByReact)(eventName)) {
                        acc[name] = value;
                    }
                }
                else {
                    // we should only render strings, booleans, and numbers as attrs in html.
                    // objects, functions, arrays etc get synced via properties on mount.
                    const type = typeof value;
                    if (type === 'string' || type === 'boolean' || type === 'number') {
                        acc[(0,_utils__WEBPACK_IMPORTED_MODULE_1__.camelToDashCase)(name)] = value;
                    }
                }
                return acc;
            }, {});
            if (manipulatePropsFunction) {
                propsToPass = manipulatePropsFunction(this.props, propsToPass);
            }
            const newProps = Object.assign(Object.assign({}, propsToPass), { ref: (0,_utils__WEBPACK_IMPORTED_MODULE_3__.mergeRefs)(forwardedRef, this.setComponentElRef), style });
            /**
             * We use createElement here instead of
             * React.createElement to work around a
             * bug in Vite (https://github.com/vitejs/vite/issues/6104).
             * React.createElement causes all elements to be rendered
             * as <tagname> instead of the actual Web Component.
             */
            return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(tagName, newProps, children);
        }
        static get displayName() {
            return displayName;
        }
    };
    // If context was passed to createReactComponent then conditionally add it to the Component Class
    if (ReactComponentContext) {
        ReactComponent.contextType = ReactComponentContext;
    }
    return (0,_utils__WEBPACK_IMPORTED_MODULE_3__.createForwardRef)(ReactComponent, displayName);
};


/***/ }),

/***/ "./node_modules/@esri/calcite-components-react/dist/react-component-lib/utils/attachProps.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@esri/calcite-components-react/dist/react-component-lib/utils/attachProps.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   attachProps: () => (/* binding */ attachProps),
/* harmony export */   getClassName: () => (/* binding */ getClassName),
/* harmony export */   isCoveredByReact: () => (/* binding */ isCoveredByReact),
/* harmony export */   syncEvent: () => (/* binding */ syncEvent),
/* harmony export */   transformReactEventName: () => (/* binding */ transformReactEventName)
/* harmony export */ });
/* harmony import */ var _case__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./case */ "./node_modules/@esri/calcite-components-react/dist/react-component-lib/utils/case.js");

const attachProps = (node, newProps, oldProps = {}) => {
    // some test frameworks don't render DOM elements, so we test here to make sure we are dealing with DOM first
    if (node instanceof Element) {
        // add any classes in className to the class list
        const className = getClassName(node.classList, newProps, oldProps);
        if (className !== '') {
            node.className = className;
        }
        Object.keys(newProps).forEach((name) => {
            if (name === 'children' ||
                name === 'style' ||
                name === 'ref' ||
                name === 'class' ||
                name === 'className' ||
                name === 'forwardedRef') {
                return;
            }
            if (name.indexOf('on') === 0 && name[2] === name[2].toUpperCase()) {
                const eventName = name.substring(2);
                const eventNameLc = eventName[0].toLowerCase() + eventName.substring(1);
                if (!isCoveredByReact(eventNameLc)) {
                    syncEvent(node, eventNameLc, newProps[name]);
                }
            }
            else {
                node[name] = newProps[name];
                const propType = typeof newProps[name];
                if (propType === 'string') {
                    node.setAttribute((0,_case__WEBPACK_IMPORTED_MODULE_0__.camelToDashCase)(name), newProps[name]);
                }
            }
        });
    }
};
const getClassName = (classList, newProps, oldProps) => {
    const newClassProp = newProps.className || newProps.class;
    const oldClassProp = oldProps.className || oldProps.class;
    // map the classes to Maps for performance
    const currentClasses = arrayToMap(classList);
    const incomingPropClasses = arrayToMap(newClassProp ? newClassProp.split(' ') : []);
    const oldPropClasses = arrayToMap(oldClassProp ? oldClassProp.split(' ') : []);
    const finalClassNames = [];
    // loop through each of the current classes on the component
    // to see if it should be a part of the classNames added
    currentClasses.forEach((currentClass) => {
        if (incomingPropClasses.has(currentClass)) {
            // add it as its already included in classnames coming in from newProps
            finalClassNames.push(currentClass);
            incomingPropClasses.delete(currentClass);
        }
        else if (!oldPropClasses.has(currentClass)) {
            // add it as it has NOT been removed by user
            finalClassNames.push(currentClass);
        }
    });
    incomingPropClasses.forEach((s) => finalClassNames.push(s));
    return finalClassNames.join(' ');
};
/**
 * Transforms a React event name to a browser event name.
 */
const transformReactEventName = (eventNameSuffix) => {
    switch (eventNameSuffix) {
        case 'doubleclick':
            return 'dblclick';
    }
    return eventNameSuffix;
};
/**
 * Checks if an event is supported in the current execution environment.
 * @license Modernizr 3.0.0pre (Custom Build) | MIT
 */
const isCoveredByReact = (eventNameSuffix) => {
    if (typeof document === 'undefined') {
        return true;
    }
    else {
        const eventName = 'on' + transformReactEventName(eventNameSuffix);
        let isSupported = eventName in document;
        if (!isSupported) {
            const element = document.createElement('div');
            element.setAttribute(eventName, 'return;');
            isSupported = typeof element[eventName] === 'function';
        }
        return isSupported;
    }
};
const syncEvent = (node, eventName, newEventHandler) => {
    const eventStore = node.__events || (node.__events = {});
    const oldEventHandler = eventStore[eventName];
    // Remove old listener so they don't double up.
    if (oldEventHandler) {
        node.removeEventListener(eventName, oldEventHandler);
    }
    // Bind new listener.
    node.addEventListener(eventName, (eventStore[eventName] = function handler(e) {
        if (newEventHandler) {
            newEventHandler.call(this, e);
        }
    }));
};
const arrayToMap = (arr) => {
    const map = new Map();
    arr.forEach((s) => map.set(s, s));
    return map;
};


/***/ }),

/***/ "./node_modules/@esri/calcite-components-react/dist/react-component-lib/utils/case.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@esri/calcite-components-react/dist/react-component-lib/utils/case.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   camelToDashCase: () => (/* binding */ camelToDashCase),
/* harmony export */   dashToPascalCase: () => (/* binding */ dashToPascalCase)
/* harmony export */ });
const dashToPascalCase = (str) => str
    .toLowerCase()
    .split('-')
    .map((segment) => segment.charAt(0).toUpperCase() + segment.slice(1))
    .join('');
const camelToDashCase = (str) => str.replace(/([A-Z])/g, (m) => `-${m[0].toLowerCase()}`);


/***/ }),

/***/ "./node_modules/@esri/calcite-components-react/dist/react-component-lib/utils/index.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@esri/calcite-components-react/dist/react-component-lib/utils/index.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   attachProps: () => (/* reexport safe */ _attachProps__WEBPACK_IMPORTED_MODULE_1__.attachProps),
/* harmony export */   camelToDashCase: () => (/* reexport safe */ _case__WEBPACK_IMPORTED_MODULE_2__.camelToDashCase),
/* harmony export */   createForwardRef: () => (/* binding */ createForwardRef),
/* harmony export */   dashToPascalCase: () => (/* reexport safe */ _case__WEBPACK_IMPORTED_MODULE_2__.dashToPascalCase),
/* harmony export */   defineCustomElement: () => (/* binding */ defineCustomElement),
/* harmony export */   getClassName: () => (/* reexport safe */ _attachProps__WEBPACK_IMPORTED_MODULE_1__.getClassName),
/* harmony export */   isCoveredByReact: () => (/* reexport safe */ _attachProps__WEBPACK_IMPORTED_MODULE_1__.isCoveredByReact),
/* harmony export */   mergeRefs: () => (/* binding */ mergeRefs),
/* harmony export */   setRef: () => (/* binding */ setRef),
/* harmony export */   syncEvent: () => (/* reexport safe */ _attachProps__WEBPACK_IMPORTED_MODULE_1__.syncEvent),
/* harmony export */   transformReactEventName: () => (/* reexport safe */ _attachProps__WEBPACK_IMPORTED_MODULE_1__.transformReactEventName)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var _attachProps__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./attachProps */ "./node_modules/@esri/calcite-components-react/dist/react-component-lib/utils/attachProps.js");
/* harmony import */ var _case__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./case */ "./node_modules/@esri/calcite-components-react/dist/react-component-lib/utils/case.js");

const setRef = (ref, value) => {
    if (typeof ref === 'function') {
        ref(value);
    }
    else if (ref != null) {
        // Cast as a MutableRef so we can assign current
        ref.current = value;
    }
};
const mergeRefs = (...refs) => {
    return (value) => {
        refs.forEach((ref) => {
            setRef(ref, value);
        });
    };
};
const createForwardRef = (ReactComponent, displayName) => {
    const forwardRef = (props, ref) => {
        return react__WEBPACK_IMPORTED_MODULE_0__["default"].createElement(ReactComponent, Object.assign({}, props, { forwardedRef: ref }));
    };
    forwardRef.displayName = displayName;
    return react__WEBPACK_IMPORTED_MODULE_0__["default"].forwardRef(forwardRef);
};
const defineCustomElement = (tagName, customElement) => {
    if (customElement !== undefined && typeof customElements !== 'undefined' && !customElements.get(tagName)) {
        customElements.define(tagName, customElement);
    }
};




/***/ }),

/***/ "./node_modules/@stencil/core/internal/client/index.js":
/*!*************************************************************!*\
  !*** ./node_modules/@stencil/core/internal/client/index.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   BUILD: () => (/* reexport safe */ _stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD),
/* harmony export */   Build: () => (/* binding */ Build),
/* harmony export */   Env: () => (/* reexport safe */ _stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.Env),
/* harmony export */   Fragment: () => (/* binding */ Fragment),
/* harmony export */   H: () => (/* binding */ H),
/* harmony export */   HTMLElement: () => (/* binding */ H),
/* harmony export */   Host: () => (/* binding */ Host),
/* harmony export */   NAMESPACE: () => (/* reexport safe */ _stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.NAMESPACE),
/* harmony export */   STENCIL_DEV_MODE: () => (/* binding */ STENCIL_DEV_MODE),
/* harmony export */   addHostEventListeners: () => (/* binding */ addHostEventListeners),
/* harmony export */   bootstrapLazy: () => (/* binding */ bootstrapLazy),
/* harmony export */   cmpModules: () => (/* binding */ cmpModules),
/* harmony export */   connectedCallback: () => (/* binding */ connectedCallback),
/* harmony export */   consoleDevError: () => (/* binding */ consoleDevError),
/* harmony export */   consoleDevInfo: () => (/* binding */ consoleDevInfo),
/* harmony export */   consoleDevWarn: () => (/* binding */ consoleDevWarn),
/* harmony export */   consoleError: () => (/* binding */ consoleError),
/* harmony export */   createEvent: () => (/* binding */ createEvent),
/* harmony export */   defineCustomElement: () => (/* binding */ defineCustomElement),
/* harmony export */   disconnectedCallback: () => (/* binding */ disconnectedCallback),
/* harmony export */   doc: () => (/* binding */ doc),
/* harmony export */   forceModeUpdate: () => (/* binding */ forceModeUpdate),
/* harmony export */   forceUpdate: () => (/* binding */ forceUpdate),
/* harmony export */   getAssetPath: () => (/* binding */ getAssetPath),
/* harmony export */   getElement: () => (/* binding */ getElement),
/* harmony export */   getHostRef: () => (/* binding */ getHostRef),
/* harmony export */   getMode: () => (/* binding */ getMode),
/* harmony export */   getRenderingRef: () => (/* binding */ getRenderingRef),
/* harmony export */   getValue: () => (/* binding */ getValue),
/* harmony export */   h: () => (/* binding */ h),
/* harmony export */   insertVdomAnnotations: () => (/* binding */ insertVdomAnnotations),
/* harmony export */   isMemberInElement: () => (/* binding */ isMemberInElement),
/* harmony export */   loadModule: () => (/* binding */ loadModule),
/* harmony export */   modeResolutionChain: () => (/* binding */ modeResolutionChain),
/* harmony export */   nextTick: () => (/* binding */ nextTick),
/* harmony export */   parsePropertyValue: () => (/* binding */ parsePropertyValue),
/* harmony export */   plt: () => (/* binding */ plt),
/* harmony export */   postUpdateComponent: () => (/* binding */ postUpdateComponent),
/* harmony export */   promiseResolve: () => (/* binding */ promiseResolve),
/* harmony export */   proxyComponent: () => (/* binding */ proxyComponent),
/* harmony export */   proxyCustomElement: () => (/* binding */ proxyCustomElement),
/* harmony export */   readTask: () => (/* binding */ readTask),
/* harmony export */   registerHost: () => (/* binding */ registerHost),
/* harmony export */   registerInstance: () => (/* binding */ registerInstance),
/* harmony export */   renderVdom: () => (/* binding */ renderVdom),
/* harmony export */   setAssetPath: () => (/* binding */ setAssetPath),
/* harmony export */   setErrorHandler: () => (/* binding */ setErrorHandler),
/* harmony export */   setMode: () => (/* binding */ setMode),
/* harmony export */   setNonce: () => (/* binding */ setNonce),
/* harmony export */   setPlatformHelpers: () => (/* binding */ setPlatformHelpers),
/* harmony export */   setPlatformOptions: () => (/* binding */ setPlatformOptions),
/* harmony export */   setValue: () => (/* binding */ setValue),
/* harmony export */   styles: () => (/* binding */ styles),
/* harmony export */   supportsConstructableStylesheets: () => (/* binding */ supportsConstructableStylesheets),
/* harmony export */   supportsListenerOptions: () => (/* binding */ supportsListenerOptions),
/* harmony export */   supportsShadow: () => (/* binding */ supportsShadow),
/* harmony export */   win: () => (/* binding */ win),
/* harmony export */   writeTask: () => (/* binding */ writeTask)
/* harmony export */ });
/* harmony import */ var _stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @stencil/core/internal/app-data */ "./node_modules/@stencil/core/internal/app-data/index.js");
/**
 * Virtual DOM patching algorithm based on Snabbdom by
 * Simon Friis Vindum (@paldepind)
 * Licensed under the MIT License
 * https://github.com/snabbdom/snabbdom/blob/master/LICENSE
 *
 * Modified for Stencil's renderer and slot projection
 */
let scopeId;
let contentRef;
let hostTagName;
let customError;
let i = 0;
let useNativeShadowDom = false;
let checkSlotFallbackVisibility = false;
let checkSlotRelocate = false;
let isSvgMode = false;
let renderingRef = null;
let queueCongestion = 0;
let queuePending = false;
/*
 Stencil Client Platform v4.7.2 | MIT Licensed | https://stenciljs.com
 */

const Build = {
    isDev: _stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.isDev ? true : false,
    isBrowser: true,
    isServer: false,
    isTesting: _stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.isTesting ? true : false,
};
const getAssetPath = (path) => {
    const assetUrl = new URL(path, plt.$resourcesUrl$);
    return assetUrl.origin !== win.location.origin ? assetUrl.href : assetUrl.pathname;
};
const setAssetPath = (path) => (plt.$resourcesUrl$ = path);
const createTime = (fnName, tagName = '') => {
    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.profile && performance.mark) {
        const key = `st:${fnName}:${tagName}:${i++}`;
        // Start
        performance.mark(key);
        // End
        return () => performance.measure(`[Stencil] ${fnName}() <${tagName}>`, key);
    }
    else {
        return () => {
            return;
        };
    }
};
const uniqueTime = (key, measureText) => {
    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.profile && performance.mark) {
        if (performance.getEntriesByName(key, 'mark').length === 0) {
            performance.mark(key);
        }
        return () => {
            if (performance.getEntriesByName(measureText, 'measure').length === 0) {
                performance.measure(measureText, key);
            }
        };
    }
    else {
        return () => {
            return;
        };
    }
};
const inspect = (ref) => {
    const hostRef = getHostRef(ref);
    if (!hostRef) {
        return undefined;
    }
    const flags = hostRef.$flags$;
    const hostElement = hostRef.$hostElement$;
    return {
        renderCount: hostRef.$renderCount$,
        flags: {
            hasRendered: !!(flags & 2 /* HOST_FLAGS.hasRendered */),
            hasConnected: !!(flags & 1 /* HOST_FLAGS.hasConnected */),
            isWaitingForChildren: !!(flags & 4 /* HOST_FLAGS.isWaitingForChildren */),
            isConstructingInstance: !!(flags & 8 /* HOST_FLAGS.isConstructingInstance */),
            isQueuedForUpdate: !!(flags & 16 /* HOST_FLAGS.isQueuedForUpdate */),
            hasInitializedComponent: !!(flags & 32 /* HOST_FLAGS.hasInitializedComponent */),
            hasLoadedComponent: !!(flags & 64 /* HOST_FLAGS.hasLoadedComponent */),
            isWatchReady: !!(flags & 128 /* HOST_FLAGS.isWatchReady */),
            isListenReady: !!(flags & 256 /* HOST_FLAGS.isListenReady */),
            needsRerender: !!(flags & 512 /* HOST_FLAGS.needsRerender */),
        },
        instanceValues: hostRef.$instanceValues$,
        ancestorComponent: hostRef.$ancestorComponent$,
        hostElement,
        lazyInstance: hostRef.$lazyInstance$,
        vnode: hostRef.$vnode$,
        modeName: hostRef.$modeName$,
        onReadyPromise: hostRef.$onReadyPromise$,
        onReadyResolve: hostRef.$onReadyResolve$,
        onInstancePromise: hostRef.$onInstancePromise$,
        onInstanceResolve: hostRef.$onInstanceResolve$,
        onRenderResolve: hostRef.$onRenderResolve$,
        queuedListeners: hostRef.$queuedListeners$,
        rmListeners: hostRef.$rmListeners$,
        ['s-id']: hostElement['s-id'],
        ['s-cr']: hostElement['s-cr'],
        ['s-lr']: hostElement['s-lr'],
        ['s-p']: hostElement['s-p'],
        ['s-rc']: hostElement['s-rc'],
        ['s-sc']: hostElement['s-sc'],
    };
};
const installDevTools = () => {
    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.devTools) {
        const stencil = (win.stencil = win.stencil || {});
        const originalInspect = stencil.inspect;
        stencil.inspect = (ref) => {
            let result = inspect(ref);
            if (!result && typeof originalInspect === 'function') {
                result = originalInspect(ref);
            }
            return result;
        };
    }
};
const CONTENT_REF_ID = 'r';
const ORG_LOCATION_ID = 'o';
const SLOT_NODE_ID = 's';
const TEXT_NODE_ID = 't';
const HYDRATE_ID = 's-id';
const HYDRATED_STYLE_ID = 'sty-id';
const HYDRATE_CHILD_ID = 'c-id';
const HYDRATED_CSS = '{visibility:hidden}.hydrated{visibility:inherit}';
/**
 * Constant for styles to be globally applied to `slot-fb` elements for pseudo-slot behavior.
 *
 * Two cascading rules must be used instead of a `:not()` selector due to Stencil browser
 * support as of Stencil v4.
 */
const SLOT_FB_CSS = 'slot-fb{display:contents}slot-fb[hidden]{display:none}';
const XLINK_NS = 'http://www.w3.org/1999/xlink';
/**
 * Default style mode id
 */
/**
 * Reusable empty obj/array
 * Don't add values to these!!
 */
const EMPTY_OBJ = {};
/**
 * Namespaces
 */
const SVG_NS = 'http://www.w3.org/2000/svg';
const HTML_NS = 'http://www.w3.org/1999/xhtml';
const isDef = (v) => v != null;
/**
 * Check whether a value is a 'complex type', defined here as an object or a
 * function.
 *
 * @param o the value to check
 * @returns whether it's a complex type or not
 */
const isComplexType = (o) => {
    // https://jsperf.com/typeof-fn-object/5
    o = typeof o;
    return o === 'object' || o === 'function';
};
/**
 * Helper method for querying a `meta` tag that contains a nonce value
 * out of a DOM's head.
 *
 * @param doc The DOM containing the `head` to query against
 * @returns The content of the meta tag representing the nonce value, or `undefined` if no tag
 * exists or the tag has no content.
 */
function queryNonceMetaTagContent(doc) {
    var _a, _b, _c;
    return (_c = (_b = (_a = doc.head) === null || _a === void 0 ? void 0 : _a.querySelector('meta[name="csp-nonce"]')) === null || _b === void 0 ? void 0 : _b.getAttribute('content')) !== null && _c !== void 0 ? _c : undefined;
}
/**
 * Production h() function based on Preact by
 * Jason Miller (@developit)
 * Licensed under the MIT License
 * https://github.com/developit/preact/blob/master/LICENSE
 *
 * Modified for Stencil's compiler and vdom
 */
// export function h(nodeName: string | d.FunctionalComponent, vnodeData: d.PropsType, child?: d.ChildType): d.VNode;
// export function h(nodeName: string | d.FunctionalComponent, vnodeData: d.PropsType, ...children: d.ChildType[]): d.VNode;
const h = (nodeName, vnodeData, ...children) => {
    let child = null;
    let key = null;
    let slotName = null;
    let simple = false;
    let lastSimple = false;
    const vNodeChildren = [];
    const walk = (c) => {
        for (let i = 0; i < c.length; i++) {
            child = c[i];
            if (Array.isArray(child)) {
                walk(child);
            }
            else if (child != null && typeof child !== 'boolean') {
                if ((simple = typeof nodeName !== 'function' && !isComplexType(child))) {
                    child = String(child);
                }
                else if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.isDev && typeof nodeName !== 'function' && child.$flags$ === undefined) {
                    consoleDevError(`vNode passed as children has unexpected type.
Make sure it's using the correct h() function.
Empty objects can also be the cause, look for JSX comments that became objects.`);
                }
                if (simple && lastSimple) {
                    // If the previous child was simple (string), we merge both
                    vNodeChildren[vNodeChildren.length - 1].$text$ += child;
                }
                else {
                    // Append a new vNode, if it's text, we create a text vNode
                    vNodeChildren.push(simple ? newVNode(null, child) : child);
                }
                lastSimple = simple;
            }
        }
    };
    walk(children);
    if (vnodeData) {
        if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.isDev && nodeName === 'input') {
            validateInputProperties(vnodeData);
        }
        if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.vdomKey && vnodeData.key) {
            key = vnodeData.key;
        }
        if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.slotRelocation && vnodeData.name) {
            slotName = vnodeData.name;
        }
        // normalize class / className attributes
        if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.vdomClass) {
            const classData = vnodeData.className || vnodeData.class;
            if (classData) {
                vnodeData.class =
                    typeof classData !== 'object'
                        ? classData
                        : Object.keys(classData)
                            .filter((k) => classData[k])
                            .join(' ');
            }
        }
    }
    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.isDev && vNodeChildren.some(isHost)) {
        consoleDevError(`The <Host> must be the single root component. Make sure:
- You are NOT using hostData() and <Host> in the same component.
- <Host> is used once, and it's the single root component of the render() function.`);
    }
    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.vdomFunctional && typeof nodeName === 'function') {
        // nodeName is a functional component
        return nodeName(vnodeData === null ? {} : vnodeData, vNodeChildren, vdomFnUtils);
    }
    const vnode = newVNode(nodeName, null);
    vnode.$attrs$ = vnodeData;
    if (vNodeChildren.length > 0) {
        vnode.$children$ = vNodeChildren;
    }
    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.vdomKey) {
        vnode.$key$ = key;
    }
    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.slotRelocation) {
        vnode.$name$ = slotName;
    }
    return vnode;
};
/**
 * A utility function for creating a virtual DOM node from a tag and some
 * possible text content.
 *
 * @param tag the tag for this element
 * @param text possible text content for the node
 * @returns a newly-minted virtual DOM node
 */
const newVNode = (tag, text) => {
    const vnode = {
        $flags$: 0,
        $tag$: tag,
        $text$: text,
        $elm$: null,
        $children$: null,
    };
    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.vdomAttribute) {
        vnode.$attrs$ = null;
    }
    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.vdomKey) {
        vnode.$key$ = null;
    }
    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.slotRelocation) {
        vnode.$name$ = null;
    }
    return vnode;
};
const Host = {};
/**
 * Check whether a given node is a Host node or not
 *
 * @param node the virtual DOM node to check
 * @returns whether it's a Host node or not
 */
const isHost = (node) => node && node.$tag$ === Host;
/**
 * Implementation of {@link d.FunctionalUtilities} for Stencil's VDom.
 *
 * Note that these functions convert from {@link d.VNode} to
 * {@link d.ChildNode} to give functional component developers a friendly
 * interface.
 */
const vdomFnUtils = {
    forEach: (children, cb) => children.map(convertToPublic).forEach(cb),
    map: (children, cb) => children.map(convertToPublic).map(cb).map(convertToPrivate),
};
/**
 * Convert a {@link d.VNode} to a {@link d.ChildNode} in order to present a
 * friendlier public interface (hence, 'convertToPublic').
 *
 * @param node the virtual DOM node to convert
 * @returns a converted child node
 */
const convertToPublic = (node) => ({
    vattrs: node.$attrs$,
    vchildren: node.$children$,
    vkey: node.$key$,
    vname: node.$name$,
    vtag: node.$tag$,
    vtext: node.$text$,
});
/**
 * Convert a {@link d.ChildNode} back to an equivalent {@link d.VNode} in
 * order to use the resulting object in the virtual DOM. The initial object was
 * likely created as part of presenting a public API, so converting it back
 * involved making it 'private' again (hence, `convertToPrivate`).
 *
 * @param node the child node to convert
 * @returns a converted virtual DOM node
 */
const convertToPrivate = (node) => {
    if (typeof node.vtag === 'function') {
        const vnodeData = Object.assign({}, node.vattrs);
        if (node.vkey) {
            vnodeData.key = node.vkey;
        }
        if (node.vname) {
            vnodeData.name = node.vname;
        }
        return h(node.vtag, vnodeData, ...(node.vchildren || []));
    }
    const vnode = newVNode(node.vtag, node.vtext);
    vnode.$attrs$ = node.vattrs;
    vnode.$children$ = node.vchildren;
    vnode.$key$ = node.vkey;
    vnode.$name$ = node.vname;
    return vnode;
};
/**
 * Validates the ordering of attributes on an input element
 *
 * @param inputElm the element to validate
 */
const validateInputProperties = (inputElm) => {
    const props = Object.keys(inputElm);
    const value = props.indexOf('value');
    if (value === -1) {
        return;
    }
    const typeIndex = props.indexOf('type');
    const minIndex = props.indexOf('min');
    const maxIndex = props.indexOf('max');
    const stepIndex = props.indexOf('step');
    if (value < typeIndex || value < minIndex || value < maxIndex || value < stepIndex) {
        consoleDevWarn(`The "value" prop of <input> should be set after "min", "max", "type" and "step"`);
    }
};
const initializeClientHydrate = (hostElm, tagName, hostId, hostRef) => {
    const endHydrate = createTime('hydrateClient', tagName);
    const shadowRoot = hostElm.shadowRoot;
    const childRenderNodes = [];
    const slotNodes = [];
    const shadowRootNodes = _stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.shadowDom && shadowRoot ? [] : null;
    const vnode = (hostRef.$vnode$ = newVNode(tagName, null));
    if (!plt.$orgLocNodes$) {
        initializeDocumentHydrate(doc.body, (plt.$orgLocNodes$ = new Map()));
    }
    hostElm[HYDRATE_ID] = hostId;
    hostElm.removeAttribute(HYDRATE_ID);
    clientHydrate(vnode, childRenderNodes, slotNodes, shadowRootNodes, hostElm, hostElm, hostId);
    childRenderNodes.map((c) => {
        const orgLocationId = c.$hostId$ + '.' + c.$nodeId$;
        const orgLocationNode = plt.$orgLocNodes$.get(orgLocationId);
        const node = c.$elm$;
        if (orgLocationNode && supportsShadow && orgLocationNode['s-en'] === '') {
            orgLocationNode.parentNode.insertBefore(node, orgLocationNode.nextSibling);
        }
        if (!shadowRoot) {
            node['s-hn'] = tagName;
            if (orgLocationNode) {
                node['s-ol'] = orgLocationNode;
                node['s-ol']['s-nr'] = node;
            }
        }
        plt.$orgLocNodes$.delete(orgLocationId);
    });
    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.shadowDom && shadowRoot) {
        shadowRootNodes.map((shadowRootNode) => {
            if (shadowRootNode) {
                shadowRoot.appendChild(shadowRootNode);
            }
        });
    }
    endHydrate();
};
const clientHydrate = (parentVNode, childRenderNodes, slotNodes, shadowRootNodes, hostElm, node, hostId) => {
    let childNodeType;
    let childIdSplt;
    let childVNode;
    let i;
    if (node.nodeType === 1 /* NODE_TYPE.ElementNode */) {
        childNodeType = node.getAttribute(HYDRATE_CHILD_ID);
        if (childNodeType) {
            // got the node data from the element's attribute
            // `${hostId}.${nodeId}.${depth}.${index}`
            childIdSplt = childNodeType.split('.');
            if (childIdSplt[0] === hostId || childIdSplt[0] === '0') {
                childVNode = {
                    $flags$: 0,
                    $hostId$: childIdSplt[0],
                    $nodeId$: childIdSplt[1],
                    $depth$: childIdSplt[2],
                    $index$: childIdSplt[3],
                    $tag$: node.tagName.toLowerCase(),
                    $elm$: node,
                    $attrs$: null,
                    $children$: null,
                    $key$: null,
                    $name$: null,
                    $text$: null,
                };
                childRenderNodes.push(childVNode);
                node.removeAttribute(HYDRATE_CHILD_ID);
                // this is a new child vnode
                // so ensure its parent vnode has the vchildren array
                if (!parentVNode.$children$) {
                    parentVNode.$children$ = [];
                }
                // add our child vnode to a specific index of the vnode's children
                parentVNode.$children$[childVNode.$index$] = childVNode;
                // this is now the new parent vnode for all the next child checks
                parentVNode = childVNode;
                if (shadowRootNodes && childVNode.$depth$ === '0') {
                    shadowRootNodes[childVNode.$index$] = childVNode.$elm$;
                }
            }
        }
        // recursively drill down, end to start so we can remove nodes
        for (i = node.childNodes.length - 1; i >= 0; i--) {
            clientHydrate(parentVNode, childRenderNodes, slotNodes, shadowRootNodes, hostElm, node.childNodes[i], hostId);
        }
        if (node.shadowRoot) {
            // keep drilling down through the shadow root nodes
            for (i = node.shadowRoot.childNodes.length - 1; i >= 0; i--) {
                clientHydrate(parentVNode, childRenderNodes, slotNodes, shadowRootNodes, hostElm, node.shadowRoot.childNodes[i], hostId);
            }
        }
    }
    else if (node.nodeType === 8 /* NODE_TYPE.CommentNode */) {
        // `${COMMENT_TYPE}.${hostId}.${nodeId}.${depth}.${index}`
        childIdSplt = node.nodeValue.split('.');
        if (childIdSplt[1] === hostId || childIdSplt[1] === '0') {
            // comment node for either the host id or a 0 host id
            childNodeType = childIdSplt[0];
            childVNode = {
                $flags$: 0,
                $hostId$: childIdSplt[1],
                $nodeId$: childIdSplt[2],
                $depth$: childIdSplt[3],
                $index$: childIdSplt[4],
                $elm$: node,
                $attrs$: null,
                $children$: null,
                $key$: null,
                $name$: null,
                $tag$: null,
                $text$: null,
            };
            if (childNodeType === TEXT_NODE_ID) {
                childVNode.$elm$ = node.nextSibling;
                if (childVNode.$elm$ && childVNode.$elm$.nodeType === 3 /* NODE_TYPE.TextNode */) {
                    childVNode.$text$ = childVNode.$elm$.textContent;
                    childRenderNodes.push(childVNode);
                    // remove the text comment since it's no longer needed
                    node.remove();
                    if (!parentVNode.$children$) {
                        parentVNode.$children$ = [];
                    }
                    parentVNode.$children$[childVNode.$index$] = childVNode;
                    if (shadowRootNodes && childVNode.$depth$ === '0') {
                        shadowRootNodes[childVNode.$index$] = childVNode.$elm$;
                    }
                }
            }
            else if (childVNode.$hostId$ === hostId) {
                // this comment node is specifically for this host id
                if (childNodeType === SLOT_NODE_ID) {
                    // `${SLOT_NODE_ID}.${hostId}.${nodeId}.${depth}.${index}.${slotName}`;
                    childVNode.$tag$ = 'slot';
                    if (childIdSplt[5]) {
                        node['s-sn'] = childVNode.$name$ = childIdSplt[5];
                    }
                    else {
                        node['s-sn'] = '';
                    }
                    node['s-sr'] = true;
                    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.shadowDom && shadowRootNodes) {
                        // browser support shadowRoot and this is a shadow dom component
                        // create an actual slot element
                        childVNode.$elm$ = doc.createElement(childVNode.$tag$);
                        if (childVNode.$name$) {
                            // add the slot name attribute
                            childVNode.$elm$.setAttribute('name', childVNode.$name$);
                        }
                        // insert the new slot element before the slot comment
                        node.parentNode.insertBefore(childVNode.$elm$, node);
                        // remove the slot comment since it's not needed for shadow
                        node.remove();
                        if (childVNode.$depth$ === '0') {
                            shadowRootNodes[childVNode.$index$] = childVNode.$elm$;
                        }
                    }
                    slotNodes.push(childVNode);
                    if (!parentVNode.$children$) {
                        parentVNode.$children$ = [];
                    }
                    parentVNode.$children$[childVNode.$index$] = childVNode;
                }
                else if (childNodeType === CONTENT_REF_ID) {
                    // `${CONTENT_REF_ID}.${hostId}`;
                    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.shadowDom && shadowRootNodes) {
                        // remove the content ref comment since it's not needed for shadow
                        node.remove();
                    }
                    else if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.slotRelocation) {
                        hostElm['s-cr'] = node;
                        node['s-cn'] = true;
                    }
                }
            }
        }
    }
    else if (parentVNode && parentVNode.$tag$ === 'style') {
        const vnode = newVNode(null, node.textContent);
        vnode.$elm$ = node;
        vnode.$index$ = '0';
        parentVNode.$children$ = [vnode];
    }
};
const initializeDocumentHydrate = (node, orgLocNodes) => {
    if (node.nodeType === 1 /* NODE_TYPE.ElementNode */) {
        let i = 0;
        for (; i < node.childNodes.length; i++) {
            initializeDocumentHydrate(node.childNodes[i], orgLocNodes);
        }
        if (node.shadowRoot) {
            for (i = 0; i < node.shadowRoot.childNodes.length; i++) {
                initializeDocumentHydrate(node.shadowRoot.childNodes[i], orgLocNodes);
            }
        }
    }
    else if (node.nodeType === 8 /* NODE_TYPE.CommentNode */) {
        const childIdSplt = node.nodeValue.split('.');
        if (childIdSplt[0] === ORG_LOCATION_ID) {
            orgLocNodes.set(childIdSplt[1] + '.' + childIdSplt[2], node);
            node.nodeValue = '';
            // useful to know if the original location is
            // the root light-dom of a shadow dom component
            node['s-en'] = childIdSplt[3];
        }
    }
};
// Private
const computeMode = (elm) => modeResolutionChain.map((h) => h(elm)).find((m) => !!m);
// Public
const setMode = (handler) => modeResolutionChain.push(handler);
const getMode = (ref) => getHostRef(ref).$modeName$;
/**
 * Parse a new property value for a given property type.
 *
 * While the prop value can reasonably be expected to be of `any` type as far as TypeScript's type checker is concerned,
 * it is not safe to assume that the string returned by evaluating `typeof propValue` matches:
 *   1. `any`, the type given to `propValue` in the function signature
 *   2. the type stored from `propType`.
 *
 * This function provides the capability to parse/coerce a property's value to potentially any other JavaScript type.
 *
 * Property values represented in TSX preserve their type information. In the example below, the number 0 is passed to
 * a component. This `propValue` will preserve its type information (`typeof propValue === 'number'`). Note that is
 * based on the type of the value being passed in, not the type declared of the class member decorated with `@Prop`.
 * ```tsx
 * <my-cmp prop-val={0}></my-cmp>
 * ```
 *
 * HTML prop values on the other hand, will always a string
 *
 * @param propValue the new value to coerce to some type
 * @param propType the type of the prop, expressed as a binary number
 * @returns the parsed/coerced value
 */
const parsePropertyValue = (propValue, propType) => {
    // ensure this value is of the correct prop type
    if (propValue != null && !isComplexType(propValue)) {
        if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.propBoolean && propType & 4 /* MEMBER_FLAGS.Boolean */) {
            // per the HTML spec, any string value means it is a boolean true value
            // but we'll cheat here and say that the string "false" is the boolean false
            return propValue === 'false' ? false : propValue === '' || !!propValue;
        }
        if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.propNumber && propType & 2 /* MEMBER_FLAGS.Number */) {
            // force it to be a number
            return parseFloat(propValue);
        }
        if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.propString && propType & 1 /* MEMBER_FLAGS.String */) {
            // could have been passed as a number or boolean
            // but we still want it as a string
            return String(propValue);
        }
        // redundant return here for better minification
        return propValue;
    }
    // not sure exactly what type we want
    // so no need to change to a different type
    return propValue;
};
const getElement = (ref) => (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.lazyLoad ? getHostRef(ref).$hostElement$ : ref);
const createEvent = (ref, name, flags) => {
    const elm = getElement(ref);
    return {
        emit: (detail) => {
            if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.isDev && !elm.isConnected) {
                consoleDevWarn(`The "${name}" event was emitted, but the dispatcher node is no longer connected to the dom.`);
            }
            return emitEvent(elm, name, {
                bubbles: !!(flags & 4 /* EVENT_FLAGS.Bubbles */),
                composed: !!(flags & 2 /* EVENT_FLAGS.Composed */),
                cancelable: !!(flags & 1 /* EVENT_FLAGS.Cancellable */),
                detail,
            });
        },
    };
};
/**
 * Helper function to create & dispatch a custom Event on a provided target
 * @param elm the target of the Event
 * @param name the name to give the custom Event
 * @param opts options for configuring a custom Event
 * @returns the custom Event
 */
const emitEvent = (elm, name, opts) => {
    const ev = plt.ce(name, opts);
    elm.dispatchEvent(ev);
    return ev;
};
const rootAppliedStyles = /*@__PURE__*/ new WeakMap();
const registerStyle = (scopeId, cssText, allowCS) => {
    let style = styles.get(scopeId);
    if (supportsConstructableStylesheets && allowCS) {
        style = (style || new CSSStyleSheet());
        if (typeof style === 'string') {
            style = cssText;
        }
        else {
            style.replaceSync(cssText);
        }
    }
    else {
        style = cssText;
    }
    styles.set(scopeId, style);
};
const addStyle = (styleContainerNode, cmpMeta, mode) => {
    var _a;
    const scopeId = getScopeId(cmpMeta, mode);
    const style = styles.get(scopeId);
    if (!_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.attachStyles) {
        return scopeId;
    }
    // if an element is NOT connected then getRootNode() will return the wrong root node
    // so the fallback is to always use the document for the root node in those cases
    styleContainerNode = styleContainerNode.nodeType === 11 /* NODE_TYPE.DocumentFragment */ ? styleContainerNode : doc;
    if (style) {
        if (typeof style === 'string') {
            styleContainerNode = styleContainerNode.head || styleContainerNode;
            let appliedStyles = rootAppliedStyles.get(styleContainerNode);
            let styleElm;
            if (!appliedStyles) {
                rootAppliedStyles.set(styleContainerNode, (appliedStyles = new Set()));
            }
            if (!appliedStyles.has(scopeId)) {
                if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.hydrateClientSide &&
                    styleContainerNode.host &&
                    (styleElm = styleContainerNode.querySelector(`[${HYDRATED_STYLE_ID}="${scopeId}"]`))) {
                    // This is only happening on native shadow-dom, do not needs CSS var shim
                    styleElm.innerHTML = style;
                }
                else {
                    styleElm = doc.createElement('style');
                    styleElm.innerHTML = style;
                    // Apply CSP nonce to the style tag if it exists
                    const nonce = (_a = plt.$nonce$) !== null && _a !== void 0 ? _a : queryNonceMetaTagContent(doc);
                    if (nonce != null) {
                        styleElm.setAttribute('nonce', nonce);
                    }
                    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.hydrateServerSide || _stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.hotModuleReplacement) {
                        styleElm.setAttribute(HYDRATED_STYLE_ID, scopeId);
                    }
                    styleContainerNode.insertBefore(styleElm, styleContainerNode.querySelector('link'));
                }
                // Add styles for `slot-fb` elements if we're using slots outside the Shadow DOM
                if (cmpMeta.$flags$ & 4 /* CMP_FLAGS.hasSlotRelocation */) {
                    styleElm.innerHTML += SLOT_FB_CSS;
                }
                if (appliedStyles) {
                    appliedStyles.add(scopeId);
                }
            }
        }
        else if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.constructableCSS && !styleContainerNode.adoptedStyleSheets.includes(style)) {
            styleContainerNode.adoptedStyleSheets = [...styleContainerNode.adoptedStyleSheets, style];
        }
    }
    return scopeId;
};
const attachStyles = (hostRef) => {
    const cmpMeta = hostRef.$cmpMeta$;
    const elm = hostRef.$hostElement$;
    const flags = cmpMeta.$flags$;
    const endAttachStyles = createTime('attachStyles', cmpMeta.$tagName$);
    const scopeId = addStyle(_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.shadowDom && supportsShadow && elm.shadowRoot ? elm.shadowRoot : elm.getRootNode(), cmpMeta, hostRef.$modeName$);
    if ((_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.shadowDom || _stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.scoped) && _stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.cssAnnotations && flags & 10 /* CMP_FLAGS.needsScopedEncapsulation */) {
        // only required when we're NOT using native shadow dom (slot)
        // or this browser doesn't support native shadow dom
        // and this host element was NOT created with SSR
        // let's pick out the inner content for slot projection
        // create a node to represent where the original
        // content was first placed, which is useful later on
        // DOM WRITE!!
        elm['s-sc'] = scopeId;
        elm.classList.add(scopeId + '-h');
        if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.scoped && flags & 2 /* CMP_FLAGS.scopedCssEncapsulation */) {
            elm.classList.add(scopeId + '-s');
        }
    }
    endAttachStyles();
};
const getScopeId = (cmp, mode) => 'sc-' + (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.mode && mode && cmp.$flags$ & 32 /* CMP_FLAGS.hasMode */ ? cmp.$tagName$ + '-' + mode : cmp.$tagName$);
const convertScopedToShadow = (css) => css.replace(/\/\*!@([^\/]+)\*\/[^\{]+\{/g, '$1{');
/**
 * Production setAccessor() function based on Preact by
 * Jason Miller (@developit)
 * Licensed under the MIT License
 * https://github.com/developit/preact/blob/master/LICENSE
 *
 * Modified for Stencil's compiler and vdom
 */
/**
 * When running a VDom render set properties present on a VDom node onto the
 * corresponding HTML element.
 *
 * Note that this function has special functionality for the `class`,
 * `style`, `key`, and `ref` attributes, as well as event handlers (like
 * `onClick`, etc). All others are just passed through as-is.
 *
 * @param elm the HTMLElement onto which attributes should be set
 * @param memberName the name of the attribute to set
 * @param oldValue the old value for the attribute
 * @param newValue the new value for the attribute
 * @param isSvg whether we're in an svg context or not
 * @param flags bitflags for Vdom variables
 */
const setAccessor = (elm, memberName, oldValue, newValue, isSvg, flags) => {
    if (oldValue !== newValue) {
        let isProp = isMemberInElement(elm, memberName);
        let ln = memberName.toLowerCase();
        if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.vdomClass && memberName === 'class') {
            const classList = elm.classList;
            const oldClasses = parseClassList(oldValue);
            const newClasses = parseClassList(newValue);
            classList.remove(...oldClasses.filter((c) => c && !newClasses.includes(c)));
            classList.add(...newClasses.filter((c) => c && !oldClasses.includes(c)));
        }
        else if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.vdomStyle && memberName === 'style') {
            // update style attribute, css properties and values
            if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.updatable) {
                for (const prop in oldValue) {
                    if (!newValue || newValue[prop] == null) {
                        if (!_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.hydrateServerSide && prop.includes('-')) {
                            elm.style.removeProperty(prop);
                        }
                        else {
                            elm.style[prop] = '';
                        }
                    }
                }
            }
            for (const prop in newValue) {
                if (!oldValue || newValue[prop] !== oldValue[prop]) {
                    if (!_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.hydrateServerSide && prop.includes('-')) {
                        elm.style.setProperty(prop, newValue[prop]);
                    }
                    else {
                        elm.style[prop] = newValue[prop];
                    }
                }
            }
        }
        else if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.vdomKey && memberName === 'key')
            ;
        else if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.vdomRef && memberName === 'ref') {
            // minifier will clean this up
            if (newValue) {
                newValue(elm);
            }
        }
        else if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.vdomListener &&
            (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.lazyLoad ? !isProp : !elm.__lookupSetter__(memberName)) &&
            memberName[0] === 'o' &&
            memberName[1] === 'n') {
            // Event Handlers
            // so if the member name starts with "on" and the 3rd characters is
            // a capital letter, and it's not already a member on the element,
            // then we're assuming it's an event listener
            if (memberName[2] === '-') {
                // on- prefixed events
                // allows to be explicit about the dom event to listen without any magic
                // under the hood:
                // <my-cmp on-click> // listens for "click"
                // <my-cmp on-Click> // listens for "Click"
                // <my-cmp on-ionChange> // listens for "ionChange"
                // <my-cmp on-EVENTS> // listens for "EVENTS"
                memberName = memberName.slice(3);
            }
            else if (isMemberInElement(win, ln)) {
                // standard event
                // the JSX attribute could have been "onMouseOver" and the
                // member name "onmouseover" is on the window's prototype
                // so let's add the listener "mouseover", which is all lowercased
                memberName = ln.slice(2);
            }
            else {
                // custom event
                // the JSX attribute could have been "onMyCustomEvent"
                // so let's trim off the "on" prefix and lowercase the first character
                // and add the listener "myCustomEvent"
                // except for the first character, we keep the event name case
                memberName = ln[2] + memberName.slice(3);
            }
            if (oldValue || newValue) {
                // Need to account for "capture" events.
                // If the event name ends with "Capture", we'll update the name to remove
                // the "Capture" suffix and make sure the event listener is setup to handle the capture event.
                const capture = memberName.endsWith(CAPTURE_EVENT_SUFFIX);
                // Make sure we only replace the last instance of "Capture"
                memberName = memberName.replace(CAPTURE_EVENT_REGEX, '');
                if (oldValue) {
                    plt.rel(elm, memberName, oldValue, capture);
                }
                if (newValue) {
                    plt.ael(elm, memberName, newValue, capture);
                }
            }
        }
        else if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.vdomPropOrAttr) {
            // Set property if it exists and it's not a SVG
            const isComplex = isComplexType(newValue);
            if ((isProp || (isComplex && newValue !== null)) && !isSvg) {
                try {
                    if (!elm.tagName.includes('-')) {
                        const n = newValue == null ? '' : newValue;
                        // Workaround for Safari, moving the <input> caret when re-assigning the same valued
                        if (memberName === 'list') {
                            isProp = false;
                        }
                        else if (oldValue == null || elm[memberName] != n) {
                            elm[memberName] = n;
                        }
                    }
                    else {
                        elm[memberName] = newValue;
                    }
                }
                catch (e) { }
            }
            /**
             * Need to manually update attribute if:
             * - memberName is not an attribute
             * - if we are rendering the host element in order to reflect attribute
             * - if it's a SVG, since properties might not work in <svg>
             * - if the newValue is null/undefined or 'false'.
             */
            let xlink = false;
            if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.vdomXlink) {
                if (ln !== (ln = ln.replace(/^xlink\:?/, ''))) {
                    memberName = ln;
                    xlink = true;
                }
            }
            if (newValue == null || newValue === false) {
                if (newValue !== false || elm.getAttribute(memberName) === '') {
                    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.vdomXlink && xlink) {
                        elm.removeAttributeNS(XLINK_NS, memberName);
                    }
                    else {
                        elm.removeAttribute(memberName);
                    }
                }
            }
            else if ((!isProp || flags & 4 /* VNODE_FLAGS.isHost */ || isSvg) && !isComplex) {
                newValue = newValue === true ? '' : newValue;
                if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.vdomXlink && xlink) {
                    elm.setAttributeNS(XLINK_NS, memberName, newValue);
                }
                else {
                    elm.setAttribute(memberName, newValue);
                }
            }
        }
    }
};
const parseClassListRegex = /\s/;
const parseClassList = (value) => (!value ? [] : value.split(parseClassListRegex));
const CAPTURE_EVENT_SUFFIX = 'Capture';
const CAPTURE_EVENT_REGEX = new RegExp(CAPTURE_EVENT_SUFFIX + '$');
const updateElement = (oldVnode, newVnode, isSvgMode, memberName) => {
    // if the element passed in is a shadow root, which is a document fragment
    // then we want to be adding attrs/props to the shadow root's "host" element
    // if it's not a shadow root, then we add attrs/props to the same element
    const elm = newVnode.$elm$.nodeType === 11 /* NODE_TYPE.DocumentFragment */ && newVnode.$elm$.host
        ? newVnode.$elm$.host
        : newVnode.$elm$;
    const oldVnodeAttrs = (oldVnode && oldVnode.$attrs$) || EMPTY_OBJ;
    const newVnodeAttrs = newVnode.$attrs$ || EMPTY_OBJ;
    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.updatable) {
        // remove attributes no longer present on the vnode by setting them to undefined
        for (memberName in oldVnodeAttrs) {
            if (!(memberName in newVnodeAttrs)) {
                setAccessor(elm, memberName, oldVnodeAttrs[memberName], undefined, isSvgMode, newVnode.$flags$);
            }
        }
    }
    // add new & update changed attributes
    for (memberName in newVnodeAttrs) {
        setAccessor(elm, memberName, oldVnodeAttrs[memberName], newVnodeAttrs[memberName], isSvgMode, newVnode.$flags$);
    }
};
/**
 * Create a DOM Node corresponding to one of the children of a given VNode.
 *
 * @param oldParentVNode the parent VNode from the previous render
 * @param newParentVNode the parent VNode from the current render
 * @param childIndex the index of the VNode, in the _new_ parent node's
 * children, for which we will create a new DOM node
 * @param parentElm the parent DOM node which our new node will be a child of
 * @returns the newly created node
 */
const createElm = (oldParentVNode, newParentVNode, childIndex, parentElm) => {
    var _a;
    // tslint:disable-next-line: prefer-const
    const newVNode = newParentVNode.$children$[childIndex];
    let i = 0;
    let elm;
    let childNode;
    let oldVNode;
    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.slotRelocation && !useNativeShadowDom) {
        // remember for later we need to check to relocate nodes
        checkSlotRelocate = true;
        if (newVNode.$tag$ === 'slot') {
            if (scopeId) {
                // scoped css needs to add its scoped id to the parent element
                parentElm.classList.add(scopeId + '-s');
            }
            newVNode.$flags$ |= newVNode.$children$
                ? // slot element has fallback content
                    2 /* VNODE_FLAGS.isSlotFallback */
                : // slot element does not have fallback content
                    1 /* VNODE_FLAGS.isSlotReference */;
        }
    }
    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.isDev && newVNode.$elm$) {
        consoleDevError(`The JSX ${newVNode.$text$ !== null ? `"${newVNode.$text$}" text` : `"${newVNode.$tag$}" element`} node should not be shared within the same renderer. The renderer caches element lookups in order to improve performance. However, a side effect from this is that the exact same JSX node should not be reused. For more information please see https://stenciljs.com/docs/templating-jsx#avoid-shared-jsx-nodes`);
    }
    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.vdomText && newVNode.$text$ !== null) {
        // create text node
        elm = newVNode.$elm$ = doc.createTextNode(newVNode.$text$);
    }
    else if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.slotRelocation && newVNode.$flags$ & 1 /* VNODE_FLAGS.isSlotReference */) {
        // create a slot reference node
        elm = newVNode.$elm$ =
            _stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.isDebug || _stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.hydrateServerSide ? slotReferenceDebugNode(newVNode) : doc.createTextNode('');
    }
    else {
        if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.svg && !isSvgMode) {
            isSvgMode = newVNode.$tag$ === 'svg';
        }
        // create element
        elm = newVNode.$elm$ = (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.svg
            ? doc.createElementNS(isSvgMode ? SVG_NS : HTML_NS, _stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.slotRelocation && newVNode.$flags$ & 2 /* VNODE_FLAGS.isSlotFallback */
                ? 'slot-fb'
                : newVNode.$tag$)
            : doc.createElement(_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.slotRelocation && newVNode.$flags$ & 2 /* VNODE_FLAGS.isSlotFallback */
                ? 'slot-fb'
                : newVNode.$tag$));
        if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.svg && isSvgMode && newVNode.$tag$ === 'foreignObject') {
            isSvgMode = false;
        }
        // add css classes, attrs, props, listeners, etc.
        if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.vdomAttribute) {
            updateElement(null, newVNode, isSvgMode);
        }
        if ((_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.shadowDom || _stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.scoped) && isDef(scopeId) && elm['s-si'] !== scopeId) {
            // if there is a scopeId and this is the initial render
            // then let's add the scopeId as a css class
            elm.classList.add((elm['s-si'] = scopeId));
        }
        if (newVNode.$children$) {
            for (i = 0; i < newVNode.$children$.length; ++i) {
                // create the node
                childNode = createElm(oldParentVNode, newVNode, i, elm);
                // return node could have been null
                if (childNode) {
                    // append our new node
                    elm.appendChild(childNode);
                }
            }
        }
        if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.svg) {
            if (newVNode.$tag$ === 'svg') {
                // Only reset the SVG context when we're exiting <svg> element
                isSvgMode = false;
            }
            else if (elm.tagName === 'foreignObject') {
                // Reenter SVG context when we're exiting <foreignObject> element
                isSvgMode = true;
            }
        }
    }
    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.slotRelocation) {
        elm['s-hn'] = hostTagName;
        if (newVNode.$flags$ & (2 /* VNODE_FLAGS.isSlotFallback */ | 1 /* VNODE_FLAGS.isSlotReference */)) {
            // remember the content reference comment
            elm['s-sr'] = true;
            // Persist the name of the slot that this slot was going to be projected into.
            elm['s-fs'] = (_a = newVNode.$attrs$) === null || _a === void 0 ? void 0 : _a.slot;
            // remember the content reference comment
            elm['s-cr'] = contentRef;
            // remember the slot name, or empty string for default slot
            elm['s-sn'] = newVNode.$name$ || '';
            // check if we've got an old vnode for this slot
            oldVNode = oldParentVNode && oldParentVNode.$children$ && oldParentVNode.$children$[childIndex];
            if (oldVNode && oldVNode.$tag$ === newVNode.$tag$ && oldParentVNode.$elm$) {
                // we've got an old slot vnode and the wrapper is being replaced
                // so let's move the old slot content back to it's original location
                putBackInOriginalLocation(oldParentVNode.$elm$, false);
            }
        }
    }
    return elm;
};
const putBackInOriginalLocation = (parentElm, recursive) => {
    var _a;
    plt.$flags$ |= 1 /* PLATFORM_FLAGS.isTmpDisconnected */;
    const oldSlotChildNodes = parentElm.childNodes;
    for (let i = oldSlotChildNodes.length - 1; i >= 0; i--) {
        const childNode = oldSlotChildNodes[i];
        if (childNode['s-hn'] !== hostTagName && childNode['s-ol']) {
            // // this child node in the old element is from another component
            // // remove this node from the old slot's parent
            // childNode.remove();
            // and relocate it back to it's original location
            parentReferenceNode(childNode).insertBefore(childNode, referenceNode(childNode));
            // remove the old original location comment entirely
            // later on the patch function will know what to do
            // and move this to the correct spot if need be
            childNode['s-ol'].remove();
            childNode['s-ol'] = undefined;
            // Reset so we can correctly move the node around again.
            childNode['s-sh'] = undefined;
            // When putting an element node back in its original location,
            // we need to reset the `slot` attribute back to the value it originally had
            // so we can correctly relocate it again in the future
            if (childNode.nodeType === 1 /* NODE_TYPE.ElementNode */) {
                childNode.setAttribute('slot', (_a = childNode['s-sn']) !== null && _a !== void 0 ? _a : '');
            }
            checkSlotRelocate = true;
        }
        if (recursive) {
            putBackInOriginalLocation(childNode, recursive);
        }
    }
    plt.$flags$ &= ~1 /* PLATFORM_FLAGS.isTmpDisconnected */;
};
/**
 * Create DOM nodes corresponding to a list of {@link d.Vnode} objects and
 * add them to the DOM in the appropriate place.
 *
 * @param parentElm the DOM node which should be used as a parent for the new
 * DOM nodes
 * @param before a child of the `parentElm` which the new children should be
 * inserted before (optional)
 * @param parentVNode the parent virtual DOM node
 * @param vnodes the new child virtual DOM nodes to produce DOM nodes for
 * @param startIdx the index in the child virtual DOM nodes at which to start
 * creating DOM nodes (inclusive)
 * @param endIdx the index in the child virtual DOM nodes at which to stop
 * creating DOM nodes (inclusive)
 */
const addVnodes = (parentElm, before, parentVNode, vnodes, startIdx, endIdx) => {
    let containerElm = ((_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.slotRelocation && parentElm['s-cr'] && parentElm['s-cr'].parentNode) || parentElm);
    let childNode;
    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.shadowDom && containerElm.shadowRoot && containerElm.tagName === hostTagName) {
        containerElm = containerElm.shadowRoot;
    }
    for (; startIdx <= endIdx; ++startIdx) {
        if (vnodes[startIdx]) {
            childNode = createElm(null, parentVNode, startIdx, parentElm);
            if (childNode) {
                vnodes[startIdx].$elm$ = childNode;
                containerElm.insertBefore(childNode, _stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.slotRelocation ? referenceNode(before) : before);
            }
        }
    }
};
/**
 * Remove the DOM elements corresponding to a list of {@link d.VNode} objects.
 * This can be used to, for instance, clean up after a list of children which
 * should no longer be shown.
 *
 * This function also handles some of Stencil's slot relocation logic.
 *
 * @param vnodes a list of virtual DOM nodes to remove
 * @param startIdx the index at which to start removing nodes (inclusive)
 * @param endIdx the index at which to stop removing nodes (inclusive)
 */
const removeVnodes = (vnodes, startIdx, endIdx) => {
    for (let index = startIdx; index <= endIdx; ++index) {
        const vnode = vnodes[index];
        if (vnode) {
            const elm = vnode.$elm$;
            nullifyVNodeRefs(vnode);
            if (elm) {
                if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.slotRelocation) {
                    // we're removing this element
                    // so it's possible we need to show slot fallback content now
                    checkSlotFallbackVisibility = true;
                    if (elm['s-ol']) {
                        // remove the original location comment
                        elm['s-ol'].remove();
                    }
                    else {
                        // it's possible that child nodes of the node
                        // that's being removed are slot nodes
                        putBackInOriginalLocation(elm, true);
                    }
                }
                // remove the vnode's element from the dom
                elm.remove();
            }
        }
    }
};
/**
 * Reconcile the children of a new VNode with the children of an old VNode by
 * traversing the two collections of children, identifying nodes that are
 * conserved or changed, calling out to `patch` to make any necessary
 * updates to the DOM, and rearranging DOM nodes as needed.
 *
 * The algorithm for reconciling children works by analyzing two 'windows' onto
 * the two arrays of children (`oldCh` and `newCh`). We keep track of the
 * 'windows' by storing start and end indices and references to the
 * corresponding array entries. Initially the two 'windows' are basically equal
 * to the entire array, but we progressively narrow the windows until there are
 * no children left to update by doing the following:
 *
 * 1. Skip any `null` entries at the beginning or end of the two arrays, so
 *    that if we have an initial array like the following we'll end up dealing
 *    only with a window bounded by the highlighted elements:
 *
 *    [null, null, VNode1 , ... , VNode2, null, null]
 *                 ^^^^^^         ^^^^^^
 *
 * 2. Check to see if the elements at the head and tail positions are equal
 *    across the windows. This will basically detect elements which haven't
 *    been added, removed, or changed position, i.e. if you had the following
 *    VNode elements (represented as HTML):
 *
 *    oldVNode: `<div><p><span>HEY</span></p></div>`
 *    newVNode: `<div><p><span>THERE</span></p></div>`
 *
 *    Then when comparing the children of the `<div>` tag we check the equality
 *    of the VNodes corresponding to the `<p>` tags and, since they are the
 *    same tag in the same position, we'd be able to avoid completely
 *    re-rendering the subtree under them with a new DOM element and would just
 *    call out to `patch` to handle reconciling their children and so on.
 *
 * 3. Check, for both windows, to see if the element at the beginning of the
 *    window corresponds to the element at the end of the other window. This is
 *    a heuristic which will let us identify _some_ situations in which
 *    elements have changed position, for instance it _should_ detect that the
 *    children nodes themselves have not changed but merely moved in the
 *    following example:
 *
 *    oldVNode: `<div><element-one /><element-two /></div>`
 *    newVNode: `<div><element-two /><element-one /></div>`
 *
 *    If we find cases like this then we also need to move the concrete DOM
 *    elements corresponding to the moved children to write the re-order to the
 *    DOM.
 *
 * 4. Finally, if VNodes have the `key` attribute set on them we check for any
 *    nodes in the old children which have the same key as the first element in
 *    our window on the new children. If we find such a node we handle calling
 *    out to `patch`, moving relevant DOM nodes, and so on, in accordance with
 *    what we find.
 *
 * Finally, once we've narrowed our 'windows' to the point that either of them
 * collapse (i.e. they have length 0) we then handle any remaining VNode
 * insertion or deletion that needs to happen to get a DOM state that correctly
 * reflects the new child VNodes. If, for instance, after our window on the old
 * children has collapsed we still have more nodes on the new children that
 * we haven't dealt with yet then we need to add them, or if the new children
 * collapse but we still have unhandled _old_ children then we need to make
 * sure the corresponding DOM nodes are removed.
 *
 * @param parentElm the node into which the parent VNode is rendered
 * @param oldCh the old children of the parent node
 * @param newVNode the new VNode which will replace the parent
 * @param newCh the new children of the parent node
 */
const updateChildren = (parentElm, oldCh, newVNode, newCh) => {
    let oldStartIdx = 0;
    let newStartIdx = 0;
    let idxInOld = 0;
    let i = 0;
    let oldEndIdx = oldCh.length - 1;
    let oldStartVnode = oldCh[0];
    let oldEndVnode = oldCh[oldEndIdx];
    let newEndIdx = newCh.length - 1;
    let newStartVnode = newCh[0];
    let newEndVnode = newCh[newEndIdx];
    let node;
    let elmToMove;
    while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {
        if (oldStartVnode == null) {
            // VNode might have been moved left
            oldStartVnode = oldCh[++oldStartIdx];
        }
        else if (oldEndVnode == null) {
            oldEndVnode = oldCh[--oldEndIdx];
        }
        else if (newStartVnode == null) {
            newStartVnode = newCh[++newStartIdx];
        }
        else if (newEndVnode == null) {
            newEndVnode = newCh[--newEndIdx];
        }
        else if (isSameVnode(oldStartVnode, newStartVnode)) {
            // if the start nodes are the same then we should patch the new VNode
            // onto the old one, and increment our `newStartIdx` and `oldStartIdx`
            // indices to reflect that. We don't need to move any DOM Nodes around
            // since things are matched up in order.
            patch(oldStartVnode, newStartVnode);
            oldStartVnode = oldCh[++oldStartIdx];
            newStartVnode = newCh[++newStartIdx];
        }
        else if (isSameVnode(oldEndVnode, newEndVnode)) {
            // likewise, if the end nodes are the same we patch new onto old and
            // decrement our end indices, and also likewise in this case we don't
            // need to move any DOM Nodes.
            patch(oldEndVnode, newEndVnode);
            oldEndVnode = oldCh[--oldEndIdx];
            newEndVnode = newCh[--newEndIdx];
        }
        else if (isSameVnode(oldStartVnode, newEndVnode)) {
            // case: "Vnode moved right"
            //
            // We've found that the last node in our window on the new children is
            // the same VNode as the _first_ node in our window on the old children
            // we're dealing with now. Visually, this is the layout of these two
            // nodes:
            //
            // newCh: [..., newStartVnode , ... , newEndVnode , ...]
            //                                    ^^^^^^^^^^^
            // oldCh: [..., oldStartVnode , ... , oldEndVnode , ...]
            //              ^^^^^^^^^^^^^
            //
            // In this situation we need to patch `newEndVnode` onto `oldStartVnode`
            // and move the DOM element for `oldStartVnode`.
            if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.slotRelocation && (oldStartVnode.$tag$ === 'slot' || newEndVnode.$tag$ === 'slot')) {
                putBackInOriginalLocation(oldStartVnode.$elm$.parentNode, false);
            }
            patch(oldStartVnode, newEndVnode);
            // We need to move the element for `oldStartVnode` into a position which
            // will be appropriate for `newEndVnode`. For this we can use
            // `.insertBefore` and `oldEndVnode.$elm$.nextSibling`. If there is a
            // sibling for `oldEndVnode.$elm$` then we want to move the DOM node for
            // `oldStartVnode` between `oldEndVnode` and it's sibling, like so:
            //
            // <old-start-node />
            // <some-intervening-node />
            // <old-end-node />
            // <!-- ->              <-- `oldStartVnode.$elm$` should be inserted here
            // <next-sibling />
            //
            // If instead `oldEndVnode.$elm$` has no sibling then we just want to put
            // the node for `oldStartVnode` at the end of the children of
            // `parentElm`. Luckily, `Node.nextSibling` will return `null` if there
            // aren't any siblings, and passing `null` to `Node.insertBefore` will
            // append it to the children of the parent element.
            parentElm.insertBefore(oldStartVnode.$elm$, oldEndVnode.$elm$.nextSibling);
            oldStartVnode = oldCh[++oldStartIdx];
            newEndVnode = newCh[--newEndIdx];
        }
        else if (isSameVnode(oldEndVnode, newStartVnode)) {
            // case: "Vnode moved left"
            //
            // We've found that the first node in our window on the new children is
            // the same VNode as the _last_ node in our window on the old children.
            // Visually, this is the layout of these two nodes:
            //
            // newCh: [..., newStartVnode , ... , newEndVnode , ...]
            //              ^^^^^^^^^^^^^
            // oldCh: [..., oldStartVnode , ... , oldEndVnode , ...]
            //                                    ^^^^^^^^^^^
            //
            // In this situation we need to patch `newStartVnode` onto `oldEndVnode`
            // (which will handle updating any changed attributes, reconciling their
            // children etc) but we also need to move the DOM node to which
            // `oldEndVnode` corresponds.
            if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.slotRelocation && (oldStartVnode.$tag$ === 'slot' || newEndVnode.$tag$ === 'slot')) {
                putBackInOriginalLocation(oldEndVnode.$elm$.parentNode, false);
            }
            patch(oldEndVnode, newStartVnode);
            // We've already checked above if `oldStartVnode` and `newStartVnode` are
            // the same node, so since we're here we know that they are not. Thus we
            // can move the element for `oldEndVnode` _before_ the element for
            // `oldStartVnode`, leaving `oldStartVnode` to be reconciled in the
            // future.
            parentElm.insertBefore(oldEndVnode.$elm$, oldStartVnode.$elm$);
            oldEndVnode = oldCh[--oldEndIdx];
            newStartVnode = newCh[++newStartIdx];
        }
        else {
            // Here we do some checks to match up old and new nodes based on the
            // `$key$` attribute, which is set by putting a `key="my-key"` attribute
            // in the JSX for a DOM element in the implementation of a Stencil
            // component.
            //
            // First we check to see if there are any nodes in the array of old
            // children which have the same key as the first node in the new
            // children.
            idxInOld = -1;
            if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.vdomKey) {
                for (i = oldStartIdx; i <= oldEndIdx; ++i) {
                    if (oldCh[i] && oldCh[i].$key$ !== null && oldCh[i].$key$ === newStartVnode.$key$) {
                        idxInOld = i;
                        break;
                    }
                }
            }
            if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.vdomKey && idxInOld >= 0) {
                // We found a node in the old children which matches up with the first
                // node in the new children! So let's deal with that
                elmToMove = oldCh[idxInOld];
                if (elmToMove.$tag$ !== newStartVnode.$tag$) {
                    // the tag doesn't match so we'll need a new DOM element
                    node = createElm(oldCh && oldCh[newStartIdx], newVNode, idxInOld, parentElm);
                }
                else {
                    patch(elmToMove, newStartVnode);
                    // invalidate the matching old node so that we won't try to update it
                    // again later on
                    oldCh[idxInOld] = undefined;
                    node = elmToMove.$elm$;
                }
                newStartVnode = newCh[++newStartIdx];
            }
            else {
                // We either didn't find an element in the old children that matches
                // the key of the first new child OR the build is not using `key`
                // attributes at all. In either case we need to create a new element
                // for the new node.
                node = createElm(oldCh && oldCh[newStartIdx], newVNode, newStartIdx, parentElm);
                newStartVnode = newCh[++newStartIdx];
            }
            if (node) {
                // if we created a new node then handle inserting it to the DOM
                if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.slotRelocation) {
                    parentReferenceNode(oldStartVnode.$elm$).insertBefore(node, referenceNode(oldStartVnode.$elm$));
                }
                else {
                    oldStartVnode.$elm$.parentNode.insertBefore(node, oldStartVnode.$elm$);
                }
            }
        }
    }
    if (oldStartIdx > oldEndIdx) {
        // we have some more new nodes to add which don't match up with old nodes
        addVnodes(parentElm, newCh[newEndIdx + 1] == null ? null : newCh[newEndIdx + 1].$elm$, newVNode, newCh, newStartIdx, newEndIdx);
    }
    else if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.updatable && newStartIdx > newEndIdx) {
        // there are nodes in the `oldCh` array which no longer correspond to nodes
        // in the new array, so lets remove them (which entails cleaning up the
        // relevant DOM nodes)
        removeVnodes(oldCh, oldStartIdx, oldEndIdx);
    }
};
/**
 * Compare two VNodes to determine if they are the same
 *
 * **NB**: This function is an equality _heuristic_ based on the available
 * information set on the two VNodes and can be misleading under certain
 * circumstances. In particular, if the two nodes do not have `key` attrs
 * (available under `$key$` on VNodes) then the function falls back on merely
 * checking that they have the same tag.
 *
 * So, in other words, if `key` attrs are not set on VNodes which may be
 * changing order within a `children` array or something along those lines then
 * we could obtain a false negative and then have to do needless re-rendering
 * (i.e. we'd say two VNodes aren't equal when in fact they should be).
 *
 * @param leftVNode the first VNode to check
 * @param rightVNode the second VNode to check
 * @returns whether they're equal or not
 */
const isSameVnode = (leftVNode, rightVNode) => {
    // compare if two vnode to see if they're "technically" the same
    // need to have the same element tag, and same key to be the same
    if (leftVNode.$tag$ === rightVNode.$tag$) {
        if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.slotRelocation && leftVNode.$tag$ === 'slot') {
            return leftVNode.$name$ === rightVNode.$name$;
        }
        // this will be set if components in the build have `key` attrs set on them
        if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.vdomKey) {
            return leftVNode.$key$ === rightVNode.$key$;
        }
        return true;
    }
    return false;
};
const referenceNode = (node) => {
    // this node was relocated to a new location in the dom
    // because of some other component's slot
    // but we still have an html comment in place of where
    // it's original location was according to it's original vdom
    return (node && node['s-ol']) || node;
};
const parentReferenceNode = (node) => (node['s-ol'] ? node['s-ol'] : node).parentNode;
/**
 * Handle reconciling an outdated VNode with a new one which corresponds to
 * it. This function handles flushing updates to the DOM and reconciling the
 * children of the two nodes (if any).
 *
 * @param oldVNode an old VNode whose DOM element and children we want to update
 * @param newVNode a new VNode representing an updated version of the old one
 */
const patch = (oldVNode, newVNode) => {
    const elm = (newVNode.$elm$ = oldVNode.$elm$);
    const oldChildren = oldVNode.$children$;
    const newChildren = newVNode.$children$;
    const tag = newVNode.$tag$;
    const text = newVNode.$text$;
    let defaultHolder;
    if (!_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.vdomText || text === null) {
        if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.svg) {
            // test if we're rendering an svg element, or still rendering nodes inside of one
            // only add this to the when the compiler sees we're using an svg somewhere
            isSvgMode = tag === 'svg' ? true : tag === 'foreignObject' ? false : isSvgMode;
        }
        if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.vdomAttribute || _stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.reflect) {
            if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.slot && tag === 'slot')
                ;
            else {
                // either this is the first render of an element OR it's an update
                // AND we already know it's possible it could have changed
                // this updates the element's css classes, attrs, props, listeners, etc.
                updateElement(oldVNode, newVNode, isSvgMode);
            }
        }
        if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.updatable && oldChildren !== null && newChildren !== null) {
            // looks like there's child vnodes for both the old and new vnodes
            // so we need to call `updateChildren` to reconcile them
            updateChildren(elm, oldChildren, newVNode, newChildren);
        }
        else if (newChildren !== null) {
            // no old child vnodes, but there are new child vnodes to add
            if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.updatable && _stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.vdomText && oldVNode.$text$ !== null) {
                // the old vnode was text, so be sure to clear it out
                elm.textContent = '';
            }
            // add the new vnode children
            addVnodes(elm, null, newVNode, newChildren, 0, newChildren.length - 1);
        }
        else if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.updatable && oldChildren !== null) {
            // no new child vnodes, but there are old child vnodes to remove
            removeVnodes(oldChildren, 0, oldChildren.length - 1);
        }
        if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.svg && isSvgMode && tag === 'svg') {
            isSvgMode = false;
        }
    }
    else if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.vdomText && _stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.slotRelocation && (defaultHolder = elm['s-cr'])) {
        // this element has slotted content
        defaultHolder.parentNode.textContent = text;
    }
    else if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.vdomText && oldVNode.$text$ !== text) {
        // update the text content for the text only vnode
        // and also only if the text is different than before
        elm.data = text;
    }
};
/**
 * Adjust the `.hidden` property as-needed on any nodes in a DOM subtree which
 * are slot fallbacks nodes.
 *
 * A slot fallback node should be visible by default. Then, it should be
 * conditionally hidden if:
 *
 * - it has a sibling with a `slot` property set to its slot name or if
 * - it is a default fallback slot node, in which case we hide if it has any
 *   content
 *
 * @param elm the element of interest
 */
const updateFallbackSlotVisibility = (elm) => {
    const childNodes = elm.childNodes;
    for (const childNode of childNodes) {
        if (childNode.nodeType === 1 /* NODE_TYPE.ElementNode */) {
            if (childNode['s-sr']) {
                // this is a slot fallback node
                // get the slot name for this slot reference node
                const slotName = childNode['s-sn'];
                // by default always show a fallback slot node
                // then hide it if there are other slots in the light dom
                childNode.hidden = false;
                // we need to check all of its sibling nodes in order to see if
                // `childNode` should be hidden
                for (const siblingNode of childNodes) {
                    // Don't check the node against itself
                    if (siblingNode !== childNode) {
                        if (siblingNode['s-hn'] !== childNode['s-hn'] || slotName !== '') {
                            // this sibling node is from a different component OR is a named
                            // fallback slot node
                            if (siblingNode.nodeType === 1 /* NODE_TYPE.ElementNode */ &&
                                (slotName === siblingNode.getAttribute('slot') || slotName === siblingNode['s-sn'])) {
                                childNode.hidden = true;
                                break;
                            }
                        }
                        else {
                            // this is a default fallback slot node
                            // any element or text node (with content)
                            // should hide the default fallback slot node
                            if (siblingNode.nodeType === 1 /* NODE_TYPE.ElementNode */ ||
                                (siblingNode.nodeType === 3 /* NODE_TYPE.TextNode */ && siblingNode.textContent.trim() !== '')) {
                                childNode.hidden = true;
                                break;
                            }
                        }
                    }
                }
            }
            // keep drilling down
            updateFallbackSlotVisibility(childNode);
        }
    }
};
/**
 * Component-global information about nodes which are either currently being
 * relocated or will be shortly.
 */
const relocateNodes = [];
/**
 * Mark the contents of a slot for relocation via adding references to them to
 * the {@link relocateNodes} data structure. The actual work of relocating them
 * will then be handled in {@link renderVdom}.
 *
 * @param elm a render node whose child nodes need to be relocated
 */
const markSlotContentForRelocation = (elm) => {
    // tslint:disable-next-line: prefer-const
    let node;
    let hostContentNodes;
    let j;
    for (const childNode of elm.childNodes) {
        // we need to find child nodes which are slot references so we can then try
        // to match them up with nodes that need to be relocated
        if (childNode['s-sr'] && (node = childNode['s-cr']) && node.parentNode) {
            // first get the content reference comment node ('s-cr'), then we get
            // its parent, which is where all the host content is now
            hostContentNodes = node.parentNode.childNodes;
            const slotName = childNode['s-sn'];
            // iterate through all the nodes under the location where the host was
            // originally rendered
            for (j = hostContentNodes.length - 1; j >= 0; j--) {
                node = hostContentNodes[j];
                // check that the node is not a content reference node or a node
                // reference and then check that the host name does not match that of
                // childNode.
                // In addition, check that the slot either has not already been relocated, or
                // that its current location's host is not childNode's host. This is essentially
                // a check so that we don't try to relocate (and then hide) a node that is already
                // where it should be.
                if (!node['s-cn'] &&
                    !node['s-nr'] &&
                    node['s-hn'] !== childNode['s-hn'] &&
                    (!_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.experimentalSlotFixes || !node['s-sh'] || node['s-sh'] !== childNode['s-hn'])) {
                    // if `node` is located in the slot that `childNode` refers to (via the
                    // `'s-sn'` property) then we need to relocate it from it's current spot
                    // (under the host element parent) to the right slot location
                    if (isNodeLocatedInSlot(node, slotName)) {
                        // it's possible we've already decided to relocate this node
                        let relocateNodeData = relocateNodes.find((r) => r.$nodeToRelocate$ === node);
                        // made some changes to slots
                        // let's make sure we also double check
                        // fallbacks are correctly hidden or shown
                        checkSlotFallbackVisibility = true;
                        // ensure that the slot-name attr is correct
                        node['s-sn'] = node['s-sn'] || slotName;
                        if (relocateNodeData) {
                            relocateNodeData.$nodeToRelocate$['s-sh'] = childNode['s-hn'];
                            // we marked this node for relocation previously but didn't find
                            // out the slot reference node to which it needs to be relocated
                            // so write it down now!
                            relocateNodeData.$slotRefNode$ = childNode;
                        }
                        else {
                            node['s-sh'] = childNode['s-hn'];
                            // add to our list of nodes to relocate
                            relocateNodes.push({
                                $slotRefNode$: childNode,
                                $nodeToRelocate$: node,
                            });
                        }
                        if (node['s-sr']) {
                            relocateNodes.map((relocateNode) => {
                                if (isNodeLocatedInSlot(relocateNode.$nodeToRelocate$, node['s-sn'])) {
                                    relocateNodeData = relocateNodes.find((r) => r.$nodeToRelocate$ === node);
                                    if (relocateNodeData && !relocateNode.$slotRefNode$) {
                                        relocateNode.$slotRefNode$ = relocateNodeData.$slotRefNode$;
                                    }
                                }
                            });
                        }
                    }
                    else if (!relocateNodes.some((r) => r.$nodeToRelocate$ === node)) {
                        // the node is not found within the slot (`childNode`) that we're
                        // currently looking at, so we stick it into `relocateNodes` to
                        // handle later. If we never find a home for this element then
                        // we'll need to hide it
                        relocateNodes.push({
                            $nodeToRelocate$: node,
                        });
                    }
                }
            }
        }
        // if we're dealing with any type of element (capable of itself being a
        // slot reference or containing one) then we recur
        if (childNode.nodeType === 1 /* NODE_TYPE.ElementNode */) {
            markSlotContentForRelocation(childNode);
        }
    }
};
/**
 * Check whether a node is located in a given named slot.
 *
 * @param nodeToRelocate the node of interest
 * @param slotName the slot name to check
 * @returns whether the node is located in the slot or not
 */
const isNodeLocatedInSlot = (nodeToRelocate, slotName) => {
    if (nodeToRelocate.nodeType === 1 /* NODE_TYPE.ElementNode */) {
        if (nodeToRelocate.getAttribute('slot') === null && slotName === '') {
            // if the node doesn't have a slot attribute, and the slot we're checking
            // is not a named slot, then we assume the node should be within the slot
            return true;
        }
        if (nodeToRelocate.getAttribute('slot') === slotName) {
            return true;
        }
        return false;
    }
    if (nodeToRelocate['s-sn'] === slotName) {
        return true;
    }
    return slotName === '';
};
/**
 * 'Nullify' any VDom `ref` callbacks on a VDom node or its children by calling
 * them with `null`. This signals that the DOM element corresponding to the VDom
 * node has been removed from the DOM.
 *
 * @param vNode a virtual DOM node
 */
const nullifyVNodeRefs = (vNode) => {
    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.vdomRef) {
        vNode.$attrs$ && vNode.$attrs$.ref && vNode.$attrs$.ref(null);
        vNode.$children$ && vNode.$children$.map(nullifyVNodeRefs);
    }
};
/**
 * The main entry point for Stencil's virtual DOM-based rendering engine
 *
 * Given a {@link d.HostRef} container and some virtual DOM nodes, this
 * function will handle creating a virtual DOM tree with a single root, patching
 * the current virtual DOM tree onto an old one (if any), dealing with slot
 * relocation, and reflecting attributes.
 *
 * @param hostRef data needed to root and render the virtual DOM tree, such as
 * the DOM node into which it should be rendered.
 * @param renderFnResults the virtual DOM nodes to be rendered
 * @param isInitialLoad whether or not this is the first call after page load
 */
const renderVdom = (hostRef, renderFnResults, isInitialLoad = false) => {
    var _a, _b;
    const hostElm = hostRef.$hostElement$;
    const cmpMeta = hostRef.$cmpMeta$;
    const oldVNode = hostRef.$vnode$ || newVNode(null, null);
    // if `renderFnResults` is a Host node then we can use it directly. If not,
    // we need to call `h` again to wrap the children of our component in a
    // 'dummy' Host node (well, an empty vnode) since `renderVdom` assumes
    // implicitly that the top-level vdom node is 1) an only child and 2)
    // contains attrs that need to be set on the host element.
    const rootVnode = isHost(renderFnResults) ? renderFnResults : h(null, null, renderFnResults);
    hostTagName = hostElm.tagName;
    // <Host> runtime check
    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.isDev && Array.isArray(renderFnResults) && renderFnResults.some(isHost)) {
        throw new Error(`The <Host> must be the single root component.
Looks like the render() function of "${hostTagName.toLowerCase()}" is returning an array that contains the <Host>.

The render() function should look like this instead:

render() {
  // Do not return an array
  return (
    <Host>{content}</Host>
  );
}
  `);
    }
    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.reflect && cmpMeta.$attrsToReflect$) {
        rootVnode.$attrs$ = rootVnode.$attrs$ || {};
        cmpMeta.$attrsToReflect$.map(([propName, attribute]) => (rootVnode.$attrs$[attribute] = hostElm[propName]));
    }
    // On the first render and *only* on the first render we want to check for
    // any attributes set on the host element which are also set on the vdom
    // node. If we find them, we override the value on the VDom node attrs with
    // the value from the host element, which allows developers building apps
    // with Stencil components to override e.g. the `role` attribute on a
    // component even if it's already set on the `Host`.
    if (isInitialLoad && rootVnode.$attrs$) {
        for (const key of Object.keys(rootVnode.$attrs$)) {
            // We have a special implementation in `setAccessor` for `style` and
            // `class` which reconciles values coming from the VDom with values
            // already present on the DOM element, so we don't want to override those
            // attributes on the VDom tree with values from the host element if they
            // are present.
            //
            // Likewise, `ref` and `key` are special internal values for the Stencil
            // runtime and we don't want to override those either.
            if (hostElm.hasAttribute(key) && !['key', 'ref', 'style', 'class'].includes(key)) {
                rootVnode.$attrs$[key] = hostElm[key];
            }
        }
    }
    rootVnode.$tag$ = null;
    rootVnode.$flags$ |= 4 /* VNODE_FLAGS.isHost */;
    hostRef.$vnode$ = rootVnode;
    rootVnode.$elm$ = oldVNode.$elm$ = (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.shadowDom ? hostElm.shadowRoot || hostElm : hostElm);
    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.scoped || _stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.shadowDom) {
        scopeId = hostElm['s-sc'];
    }
    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.slotRelocation) {
        contentRef = hostElm['s-cr'];
        useNativeShadowDom = supportsShadow && (cmpMeta.$flags$ & 1 /* CMP_FLAGS.shadowDomEncapsulation */) !== 0;
        // always reset
        checkSlotFallbackVisibility = false;
    }
    // synchronous patch
    patch(oldVNode, rootVnode);
    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.slotRelocation) {
        // while we're moving nodes around existing nodes, temporarily disable
        // the disconnectCallback from working
        plt.$flags$ |= 1 /* PLATFORM_FLAGS.isTmpDisconnected */;
        if (checkSlotRelocate) {
            markSlotContentForRelocation(rootVnode.$elm$);
            for (const relocateData of relocateNodes) {
                const nodeToRelocate = relocateData.$nodeToRelocate$;
                if (!nodeToRelocate['s-ol']) {
                    // add a reference node marking this node's original location
                    // keep a reference to this node for later lookups
                    const orgLocationNode = _stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.isDebug || _stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.hydrateServerSide
                        ? originalLocationDebugNode(nodeToRelocate)
                        : doc.createTextNode('');
                    orgLocationNode['s-nr'] = nodeToRelocate;
                    nodeToRelocate.parentNode.insertBefore((nodeToRelocate['s-ol'] = orgLocationNode), nodeToRelocate);
                }
            }
            for (const relocateData of relocateNodes) {
                const nodeToRelocate = relocateData.$nodeToRelocate$;
                const slotRefNode = relocateData.$slotRefNode$;
                if (slotRefNode) {
                    const parentNodeRef = slotRefNode.parentNode;
                    // When determining where to insert content, the most simple case would be
                    // to relocate the node immediately following the slot reference node. We do this
                    // by getting a reference to the node immediately following the slot reference node
                    // since we will use `insertBefore` to manipulate the DOM.
                    //
                    // If there is no node immediately following the slot reference node, then we will just
                    // end up appending the node as the last child of the parent.
                    let insertBeforeNode = slotRefNode.nextSibling;
                    // If the node we're currently planning on inserting the new node before is an element,
                    // we need to do some additional checks to make sure we're inserting the node in the correct order.
                    // The use case here would be that we have multiple nodes being relocated to the same slot. So, we want
                    // to make sure they get inserted into their new how in the same order they were declared in their original location.
                    //
                    // TODO(STENCIL-914): Remove `experimentalSlotFixes` check
                    if (!_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.experimentalSlotFixes ||
                        (insertBeforeNode && insertBeforeNode.nodeType === 1 /* NODE_TYPE.ElementNode */)) {
                        let orgLocationNode = (_a = nodeToRelocate['s-ol']) === null || _a === void 0 ? void 0 : _a.previousSibling;
                        while (orgLocationNode) {
                            let refNode = (_b = orgLocationNode['s-nr']) !== null && _b !== void 0 ? _b : null;
                            if (refNode && refNode['s-sn'] === nodeToRelocate['s-sn'] && parentNodeRef === refNode.parentNode) {
                                refNode = refNode.nextSibling;
                                if (!refNode || !refNode['s-nr']) {
                                    insertBeforeNode = refNode;
                                    break;
                                }
                            }
                            orgLocationNode = orgLocationNode.previousSibling;
                        }
                    }
                    if ((!insertBeforeNode && parentNodeRef !== nodeToRelocate.parentNode) ||
                        nodeToRelocate.nextSibling !== insertBeforeNode) {
                        // we've checked that it's worth while to relocate
                        // since that the node to relocate
                        // has a different next sibling or parent relocated
                        if (nodeToRelocate !== insertBeforeNode) {
                            if (!nodeToRelocate['s-hn'] && nodeToRelocate['s-ol']) {
                                // probably a component in the index.html that doesn't have its hostname set
                                nodeToRelocate['s-hn'] = nodeToRelocate['s-ol'].parentNode.nodeName;
                            }
                            // Handle a use-case where we relocate a slot where
                            // the slot name changes along the way (for instance, a default to a named slot).
                            // In this case, we need to update the relocated node's slot attribute to match
                            // the slot name it is being relocated into.
                            //
                            // There is a very niche use case where we may be relocating a text node. For now,
                            // we ignore anything that is not an element node since non-element nodes cannot have
                            // attributes to specify the slot. We'll deal with this if it becomes a problem... but super edge-case-y
                            if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.experimentalSlotFixes &&
                                nodeToRelocate.nodeType === 1 /* NODE_TYPE.ElementNode */ &&
                                slotRefNode['s-fs'] !== nodeToRelocate.getAttribute('slot')) {
                                if (!slotRefNode['s-fs']) {
                                    nodeToRelocate.removeAttribute('slot');
                                }
                                else {
                                    nodeToRelocate.setAttribute('slot', slotRefNode['s-fs']);
                                }
                            }
                            // Add it back to the dom but in its new home
                            // If we get to this point and `insertBeforeNode` is `null`, that means
                            // we're just going to append the node as the last child of the parent. Passing
                            // `null` as the second arg here will trigger that behavior.
                            parentNodeRef.insertBefore(nodeToRelocate, insertBeforeNode);
                        }
                    }
                }
                else {
                    // this node doesn't have a slot home to go to, so let's hide it
                    if (nodeToRelocate.nodeType === 1 /* NODE_TYPE.ElementNode */) {
                        nodeToRelocate.hidden = true;
                    }
                }
            }
        }
        if (checkSlotFallbackVisibility) {
            updateFallbackSlotVisibility(rootVnode.$elm$);
        }
        // done moving nodes around
        // allow the disconnect callback to work again
        plt.$flags$ &= ~1 /* PLATFORM_FLAGS.isTmpDisconnected */;
        // always reset
        relocateNodes.length = 0;
    }
};
// slot comment debug nodes only created with the `--debug` flag
// otherwise these nodes are text nodes w/out content
const slotReferenceDebugNode = (slotVNode) => doc.createComment(`<slot${slotVNode.$name$ ? ' name="' + slotVNode.$name$ + '"' : ''}> (host=${hostTagName.toLowerCase()})`);
const originalLocationDebugNode = (nodeToRelocate) => doc.createComment(`org-location for ` +
    (nodeToRelocate.localName
        ? `<${nodeToRelocate.localName}> (host=${nodeToRelocate['s-hn']})`
        : `[${nodeToRelocate.textContent}]`));
const attachToAncestor = (hostRef, ancestorComponent) => {
    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.asyncLoading && ancestorComponent && !hostRef.$onRenderResolve$ && ancestorComponent['s-p']) {
        ancestorComponent['s-p'].push(new Promise((r) => (hostRef.$onRenderResolve$ = r)));
    }
};
const scheduleUpdate = (hostRef, isInitialLoad) => {
    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.taskQueue && _stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.updatable) {
        hostRef.$flags$ |= 16 /* HOST_FLAGS.isQueuedForUpdate */;
    }
    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.asyncLoading && hostRef.$flags$ & 4 /* HOST_FLAGS.isWaitingForChildren */) {
        hostRef.$flags$ |= 512 /* HOST_FLAGS.needsRerender */;
        return;
    }
    attachToAncestor(hostRef, hostRef.$ancestorComponent$);
    // there is no ancestor component or the ancestor component
    // has already fired off its lifecycle update then
    // fire off the initial update
    const dispatch = () => dispatchHooks(hostRef, isInitialLoad);
    return _stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.taskQueue ? writeTask(dispatch) : dispatch();
};
/**
 * Dispatch initial-render and update lifecycle hooks, enqueuing calls to
 * component lifecycle methods like `componentWillLoad` as well as
 * {@link updateComponent}, which will kick off the virtual DOM re-render.
 *
 * @param hostRef a reference to a host DOM node
 * @param isInitialLoad whether we're on the initial load or not
 * @returns an empty Promise which is used to enqueue a series of operations for
 * the component
 */
const dispatchHooks = (hostRef, isInitialLoad) => {
    const elm = hostRef.$hostElement$;
    const endSchedule = createTime('scheduleUpdate', hostRef.$cmpMeta$.$tagName$);
    const instance = _stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.lazyLoad ? hostRef.$lazyInstance$ : elm;
    // We're going to use this variable together with `enqueue` to implement a
    // little promise-based queue. We start out with it `undefined`. When we add
    // the first function to the queue we'll set this variable to be that
    // function's return value. When we attempt to add subsequent values to the
    // queue we'll check that value and, if it was a `Promise`, we'll then chain
    // the new function off of that `Promise` using `.then()`. This will give our
    // queue two nice properties:
    //
    // 1. If all functions added to the queue are synchronous they'll be called
    //    synchronously right away.
    // 2. If all functions added to the queue are asynchronous they'll all be
    //    called in order after `dispatchHooks` exits.
    let maybePromise;
    if (isInitialLoad) {
        if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.lazyLoad && _stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.hostListener) {
            hostRef.$flags$ |= 256 /* HOST_FLAGS.isListenReady */;
            if (hostRef.$queuedListeners$) {
                hostRef.$queuedListeners$.map(([methodName, event]) => safeCall(instance, methodName, event));
                hostRef.$queuedListeners$ = undefined;
            }
        }
        emitLifecycleEvent(elm, 'componentWillLoad');
        if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.cmpWillLoad) {
            // If `componentWillLoad` returns a `Promise` then we want to wait on
            // whatever's going on in that `Promise` before we launch into
            // rendering the component, doing other lifecycle stuff, etc. So
            // in that case we assign the returned promise to the variable we
            // declared above to hold a possible 'queueing' Promise
            maybePromise = safeCall(instance, 'componentWillLoad');
        }
    }
    else {
        emitLifecycleEvent(elm, 'componentWillUpdate');
        if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.cmpWillUpdate) {
            // Like `componentWillLoad` above, we allow Stencil component
            // authors to return a `Promise` from this lifecycle callback, and
            // we specify that our runtime will wait for that `Promise` to
            // resolve before the component re-renders. So if the method
            // returns a `Promise` we need to keep it around!
            maybePromise = safeCall(instance, 'componentWillUpdate');
        }
    }
    emitLifecycleEvent(elm, 'componentWillRender');
    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.cmpWillRender) {
        maybePromise = enqueue(maybePromise, () => safeCall(instance, 'componentWillRender'));
    }
    endSchedule();
    return enqueue(maybePromise, () => updateComponent(hostRef, instance, isInitialLoad));
};
/**
 * This function uses a Promise to implement a simple first-in, first-out queue
 * of functions to be called.
 *
 * The queue is ordered on the basis of the first argument. If it's
 * `undefined`, then nothing is on the queue yet, so the provided function can
 * be called synchronously (although note that this function may return a
 * `Promise`). The idea is that then the return value of that enqueueing
 * operation is kept around, so that if it was a `Promise` then subsequent
 * functions can be enqueued by calling this function again with that `Promise`
 * as the first argument.
 *
 * @param maybePromise either a `Promise` which should resolve before the next function is called or an 'empty' sentinel
 * @param fn a function to enqueue
 * @returns either a `Promise` or the return value of the provided function
 */
const enqueue = (maybePromise, fn) => isPromisey(maybePromise) ? maybePromise.then(fn) : fn();
/**
 * Check that a value is a `Promise`. To check, we first see if the value is an
 * instance of the `Promise` global. In a few circumstances, in particular if
 * the global has been overwritten, this is could be misleading, so we also do
 * a little 'duck typing' check to see if the `.then` property of the value is
 * defined and a function.
 *
 * @param maybePromise it might be a promise!
 * @returns whether it is or not
 */
const isPromisey = (maybePromise) => maybePromise instanceof Promise ||
    (maybePromise && maybePromise.then && typeof maybePromise.then === 'function');
/**
 * Update a component given reference to its host elements and so on.
 *
 * @param hostRef an object containing references to the element's host node,
 * VDom nodes, and other metadata
 * @param instance a reference to the underlying host element where it will be
 * rendered
 * @param isInitialLoad whether or not this function is being called as part of
 * the first render cycle
 */
const updateComponent = async (hostRef, instance, isInitialLoad) => {
    var _a;
    const elm = hostRef.$hostElement$;
    const endUpdate = createTime('update', hostRef.$cmpMeta$.$tagName$);
    const rc = elm['s-rc'];
    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.style && isInitialLoad) {
        // DOM WRITE!
        attachStyles(hostRef);
    }
    const endRender = createTime('render', hostRef.$cmpMeta$.$tagName$);
    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.isDev) {
        hostRef.$flags$ |= 1024 /* HOST_FLAGS.devOnRender */;
    }
    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.hydrateServerSide) {
        await callRender(hostRef, instance, elm, isInitialLoad);
    }
    else {
        callRender(hostRef, instance, elm, isInitialLoad);
    }
    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.isDev) {
        hostRef.$renderCount$ = hostRef.$renderCount$ === undefined ? 1 : hostRef.$renderCount$ + 1;
        hostRef.$flags$ &= ~1024 /* HOST_FLAGS.devOnRender */;
    }
    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.hydrateServerSide) {
        try {
            // manually connected child components during server-side hydrate
            serverSideConnected(elm);
            if (isInitialLoad) {
                // using only during server-side hydrate
                if (hostRef.$cmpMeta$.$flags$ & 1 /* CMP_FLAGS.shadowDomEncapsulation */) {
                    elm['s-en'] = '';
                }
                else if (hostRef.$cmpMeta$.$flags$ & 2 /* CMP_FLAGS.scopedCssEncapsulation */) {
                    elm['s-en'] = 'c';
                }
            }
        }
        catch (e) {
            consoleError(e, elm);
        }
    }
    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.asyncLoading && rc) {
        // ok, so turns out there are some child host elements
        // waiting on this parent element to load
        // let's fire off all update callbacks waiting
        rc.map((cb) => cb());
        elm['s-rc'] = undefined;
    }
    endRender();
    endUpdate();
    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.asyncLoading) {
        const childrenPromises = (_a = elm['s-p']) !== null && _a !== void 0 ? _a : [];
        const postUpdate = () => postUpdateComponent(hostRef);
        if (childrenPromises.length === 0) {
            postUpdate();
        }
        else {
            Promise.all(childrenPromises).then(postUpdate);
            hostRef.$flags$ |= 4 /* HOST_FLAGS.isWaitingForChildren */;
            childrenPromises.length = 0;
        }
    }
    else {
        postUpdateComponent(hostRef);
    }
};
/**
 * Handle making the call to the VDom renderer with the proper context given
 * various build variables
 *
 * @param hostRef an object containing references to the element's host node,
 * VDom nodes, and other metadata
 * @param instance a reference to the underlying host element where it will be
 * rendered
 * @param elm the Host element for the component
 * @param isInitialLoad whether or not this function is being called as part of
 * @returns an empty promise
 */
const callRender = (hostRef, instance, elm, isInitialLoad) => {
    // in order for bundlers to correctly tree-shake the BUILD object
    // we need to ensure BUILD is not deoptimized within a try/catch
    // https://rollupjs.org/guide/en/#treeshake tryCatchDeoptimization
    const allRenderFn = _stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.allRenderFn ? true : false;
    const lazyLoad = _stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.lazyLoad ? true : false;
    const taskQueue = _stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.taskQueue ? true : false;
    const updatable = _stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.updatable ? true : false;
    try {
        renderingRef = instance;
        /**
         * minification optimization: `allRenderFn` is `true` if all components have a `render`
         * method, so we can call the method immediately. If not, check before calling it.
         */
        instance = allRenderFn ? instance.render() : instance.render && instance.render();
        if (updatable && taskQueue) {
            hostRef.$flags$ &= ~16 /* HOST_FLAGS.isQueuedForUpdate */;
        }
        if (updatable || lazyLoad) {
            hostRef.$flags$ |= 2 /* HOST_FLAGS.hasRendered */;
        }
        if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.hasRenderFn || _stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.reflect) {
            if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.vdomRender || _stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.reflect) {
                // looks like we've got child nodes to render into this host element
                // or we need to update the css class/attrs on the host element
                // DOM WRITE!
                if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.hydrateServerSide) {
                    return Promise.resolve(instance).then((value) => renderVdom(hostRef, value, isInitialLoad));
                }
                else {
                    renderVdom(hostRef, instance, isInitialLoad);
                }
            }
            else {
                elm.textContent = instance;
            }
        }
    }
    catch (e) {
        consoleError(e, hostRef.$hostElement$);
    }
    renderingRef = null;
    return null;
};
const getRenderingRef = () => renderingRef;
const postUpdateComponent = (hostRef) => {
    const tagName = hostRef.$cmpMeta$.$tagName$;
    const elm = hostRef.$hostElement$;
    const endPostUpdate = createTime('postUpdate', tagName);
    const instance = _stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.lazyLoad ? hostRef.$lazyInstance$ : elm;
    const ancestorComponent = hostRef.$ancestorComponent$;
    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.cmpDidRender) {
        if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.isDev) {
            hostRef.$flags$ |= 1024 /* HOST_FLAGS.devOnRender */;
        }
        safeCall(instance, 'componentDidRender');
        if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.isDev) {
            hostRef.$flags$ &= ~1024 /* HOST_FLAGS.devOnRender */;
        }
    }
    emitLifecycleEvent(elm, 'componentDidRender');
    if (!(hostRef.$flags$ & 64 /* HOST_FLAGS.hasLoadedComponent */)) {
        hostRef.$flags$ |= 64 /* HOST_FLAGS.hasLoadedComponent */;
        if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.asyncLoading && _stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.cssAnnotations) {
            // DOM WRITE!
            addHydratedFlag(elm);
        }
        if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.cmpDidLoad) {
            if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.isDev) {
                hostRef.$flags$ |= 2048 /* HOST_FLAGS.devOnDidLoad */;
            }
            safeCall(instance, 'componentDidLoad');
            if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.isDev) {
                hostRef.$flags$ &= ~2048 /* HOST_FLAGS.devOnDidLoad */;
            }
        }
        emitLifecycleEvent(elm, 'componentDidLoad');
        endPostUpdate();
        if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.asyncLoading) {
            hostRef.$onReadyResolve$(elm);
            if (!ancestorComponent) {
                appDidLoad(tagName);
            }
        }
    }
    else {
        if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.cmpDidUpdate) {
            // we've already loaded this component
            // fire off the user's componentDidUpdate method (if one was provided)
            // componentDidUpdate runs AFTER render() has been called
            // and all child components have finished updating
            if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.isDev) {
                hostRef.$flags$ |= 1024 /* HOST_FLAGS.devOnRender */;
            }
            safeCall(instance, 'componentDidUpdate');
            if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.isDev) {
                hostRef.$flags$ &= ~1024 /* HOST_FLAGS.devOnRender */;
            }
        }
        emitLifecycleEvent(elm, 'componentDidUpdate');
        endPostUpdate();
    }
    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.method && _stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.lazyLoad) {
        hostRef.$onInstanceResolve$(elm);
    }
    // load events fire from bottom to top
    // the deepest elements load first then bubbles up
    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.asyncLoading) {
        if (hostRef.$onRenderResolve$) {
            hostRef.$onRenderResolve$();
            hostRef.$onRenderResolve$ = undefined;
        }
        if (hostRef.$flags$ & 512 /* HOST_FLAGS.needsRerender */) {
            nextTick(() => scheduleUpdate(hostRef, false));
        }
        hostRef.$flags$ &= ~(4 /* HOST_FLAGS.isWaitingForChildren */ | 512 /* HOST_FLAGS.needsRerender */);
    }
    // ( •_•)
    // ( •_•)>⌐■-■
    // (⌐■_■)
};
const forceUpdate = (ref) => {
    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.updatable && (Build.isBrowser || Build.isTesting)) {
        const hostRef = getHostRef(ref);
        const isConnected = hostRef.$hostElement$.isConnected;
        if (isConnected &&
            (hostRef.$flags$ & (2 /* HOST_FLAGS.hasRendered */ | 16 /* HOST_FLAGS.isQueuedForUpdate */)) === 2 /* HOST_FLAGS.hasRendered */) {
            scheduleUpdate(hostRef, false);
        }
        // Returns "true" when the forced update was successfully scheduled
        return isConnected;
    }
    return false;
};
const appDidLoad = (who) => {
    // on appload
    // we have finish the first big initial render
    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.cssAnnotations) {
        addHydratedFlag(doc.documentElement);
    }
    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.asyncQueue) {
        plt.$flags$ |= 2 /* PLATFORM_FLAGS.appLoaded */;
    }
    nextTick(() => emitEvent(win, 'appload', { detail: { namespace: _stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.NAMESPACE } }));
    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.profile && performance.measure) {
        performance.measure(`[Stencil] ${_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.NAMESPACE} initial load (by ${who})`, 'st:app:start');
    }
};
/**
 * Allows to safely call a method, e.g. `componentDidLoad`, on an instance,
 * e.g. custom element node. If a build figures out that e.g. no component
 * has a `componentDidLoad` method, the instance method gets removed from the
 * output bundle and this function returns `undefined`.
 * @param instance any object that may or may not contain methods
 * @param method method name
 * @param arg single arbitrary argument
 * @returns result of method call if it exists, otherwise `undefined`
 */
const safeCall = (instance, method, arg) => {
    if (instance && instance[method]) {
        try {
            return instance[method](arg);
        }
        catch (e) {
            consoleError(e);
        }
    }
    return undefined;
};
/**
 * For debugging purposes as `BUILD.lifecycleDOMEvents` is `false` by default and will
 * get removed by the compiler. Used for timing events to see how long they take.
 * @param elm the target of the Event
 * @param lifecycleName name of the event
 */
const emitLifecycleEvent = (elm, lifecycleName) => {
    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.lifecycleDOMEvents) {
        emitEvent(elm, 'stencil_' + lifecycleName, {
            bubbles: true,
            composed: true,
            detail: {
                namespace: _stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.NAMESPACE,
            },
        });
    }
};
const addHydratedFlag = (elm) => _stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.hydratedClass
    ? elm.classList.add('hydrated')
    : _stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.hydratedAttribute
        ? elm.setAttribute('hydrated', '')
        : undefined;
const serverSideConnected = (elm) => {
    const children = elm.children;
    if (children != null) {
        for (let i = 0, ii = children.length; i < ii; i++) {
            const childElm = children[i];
            if (typeof childElm.connectedCallback === 'function') {
                childElm.connectedCallback();
            }
            serverSideConnected(childElm);
        }
    }
};
const getValue = (ref, propName) => getHostRef(ref).$instanceValues$.get(propName);
const setValue = (ref, propName, newVal, cmpMeta) => {
    // check our new property value against our internal value
    const hostRef = getHostRef(ref);
    const elm = _stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.lazyLoad ? hostRef.$hostElement$ : ref;
    const oldVal = hostRef.$instanceValues$.get(propName);
    const flags = hostRef.$flags$;
    const instance = _stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.lazyLoad ? hostRef.$lazyInstance$ : elm;
    newVal = parsePropertyValue(newVal, cmpMeta.$members$[propName][0]);
    // explicitly check for NaN on both sides, as `NaN === NaN` is always false
    const areBothNaN = Number.isNaN(oldVal) && Number.isNaN(newVal);
    const didValueChange = newVal !== oldVal && !areBothNaN;
    if ((!_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.lazyLoad || !(flags & 8 /* HOST_FLAGS.isConstructingInstance */) || oldVal === undefined) && didValueChange) {
        // gadzooks! the property's value has changed!!
        // set our new value!
        hostRef.$instanceValues$.set(propName, newVal);
        if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.isDev) {
            if (hostRef.$flags$ & 1024 /* HOST_FLAGS.devOnRender */) {
                consoleDevWarn(`The state/prop "${propName}" changed during rendering. This can potentially lead to infinite-loops and other bugs.`, '\nElement', elm, '\nNew value', newVal, '\nOld value', oldVal);
            }
            else if (hostRef.$flags$ & 2048 /* HOST_FLAGS.devOnDidLoad */) {
                consoleDevWarn(`The state/prop "${propName}" changed during "componentDidLoad()", this triggers extra re-renders, try to setup on "componentWillLoad()"`, '\nElement', elm, '\nNew value', newVal, '\nOld value', oldVal);
            }
        }
        if (!_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.lazyLoad || instance) {
            // get an array of method names of watch functions to call
            if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.watchCallback && cmpMeta.$watchers$ && flags & 128 /* HOST_FLAGS.isWatchReady */) {
                const watchMethods = cmpMeta.$watchers$[propName];
                if (watchMethods) {
                    // this instance is watching for when this property changed
                    watchMethods.map((watchMethodName) => {
                        try {
                            // fire off each of the watch methods that are watching this property
                            instance[watchMethodName](newVal, oldVal, propName);
                        }
                        catch (e) {
                            consoleError(e, elm);
                        }
                    });
                }
            }
            if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.updatable &&
                (flags & (2 /* HOST_FLAGS.hasRendered */ | 16 /* HOST_FLAGS.isQueuedForUpdate */)) === 2 /* HOST_FLAGS.hasRendered */) {
                if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.cmpShouldUpdate && instance.componentShouldUpdate) {
                    if (instance.componentShouldUpdate(newVal, oldVal, propName) === false) {
                        return;
                    }
                }
                // looks like this value actually changed, so we've got work to do!
                // but only if we've already rendered, otherwise just chill out
                // queue that we need to do an update, but don't worry about queuing
                // up millions cuz this function ensures it only runs once
                scheduleUpdate(hostRef, false);
            }
        }
    }
};
/**
 * Attach a series of runtime constructs to a compiled Stencil component
 * constructor, including getters and setters for the `@Prop` and `@State`
 * decorators, callbacks for when attributes change, and so on.
 *
 * @param Cstr the constructor for a component that we need to process
 * @param cmpMeta metadata collected previously about the component
 * @param flags a number used to store a series of bit flags
 * @returns a reference to the same constructor passed in (but now mutated)
 */
const proxyComponent = (Cstr, cmpMeta, flags) => {
    var _a;
    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.member && cmpMeta.$members$) {
        if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.watchCallback && Cstr.watchers) {
            cmpMeta.$watchers$ = Cstr.watchers;
        }
        // It's better to have a const than two Object.entries()
        const members = Object.entries(cmpMeta.$members$);
        const prototype = Cstr.prototype;
        members.map(([memberName, [memberFlags]]) => {
            if ((_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.prop || _stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.state) &&
                (memberFlags & 31 /* MEMBER_FLAGS.Prop */ ||
                    ((!_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.lazyLoad || flags & 2 /* PROXY_FLAGS.proxyState */) && memberFlags & 32 /* MEMBER_FLAGS.State */))) {
                // proxyComponent - prop
                Object.defineProperty(prototype, memberName, {
                    get() {
                        // proxyComponent, get value
                        return getValue(this, memberName);
                    },
                    set(newValue) {
                        // only during dev time
                        if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.isDev) {
                            const ref = getHostRef(this);
                            if (
                            // we are proxying the instance (not element)
                            (flags & 1 /* PROXY_FLAGS.isElementConstructor */) === 0 &&
                                // the element is not constructing
                                (ref.$flags$ & 8 /* HOST_FLAGS.isConstructingInstance */) === 0 &&
                                // the member is a prop
                                (memberFlags & 31 /* MEMBER_FLAGS.Prop */) !== 0 &&
                                // the member is not mutable
                                (memberFlags & 1024 /* MEMBER_FLAGS.Mutable */) === 0) {
                                consoleDevWarn(`@Prop() "${memberName}" on <${cmpMeta.$tagName$}> is immutable but was modified from within the component.\nMore information: https://stenciljs.com/docs/properties#prop-mutability`);
                            }
                        }
                        // proxyComponent, set value
                        setValue(this, memberName, newValue, cmpMeta);
                    },
                    configurable: true,
                    enumerable: true,
                });
            }
            else if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.lazyLoad &&
                _stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.method &&
                flags & 1 /* PROXY_FLAGS.isElementConstructor */ &&
                memberFlags & 64 /* MEMBER_FLAGS.Method */) {
                // proxyComponent - method
                Object.defineProperty(prototype, memberName, {
                    value(...args) {
                        const ref = getHostRef(this);
                        return ref.$onInstancePromise$.then(() => ref.$lazyInstance$[memberName](...args));
                    },
                });
            }
        });
        if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.observeAttribute && (!_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.lazyLoad || flags & 1 /* PROXY_FLAGS.isElementConstructor */)) {
            const attrNameToPropName = new Map();
            prototype.attributeChangedCallback = function (attrName, oldValue, newValue) {
                plt.jmp(() => {
                    const propName = attrNameToPropName.get(attrName);
                    //  In a web component lifecycle the attributeChangedCallback runs prior to connectedCallback
                    //  in the case where an attribute was set inline.
                    //  ```html
                    //    <my-component some-attribute="some-value"></my-component>
                    //  ```
                    //
                    //  There is an edge case where a developer sets the attribute inline on a custom element and then
                    //  programmatically changes it before it has been upgraded as shown below:
                    //
                    //  ```html
                    //    <!-- this component has _not_ been upgraded yet -->
                    //    <my-component id="test" some-attribute="some-value"></my-component>
                    //    <script>
                    //      // grab non-upgraded component
                    //      el = document.querySelector("#test");
                    //      el.someAttribute = "another-value";
                    //      // upgrade component
                    //      customElements.define('my-component', MyComponent);
                    //    </script>
                    //  ```
                    //  In this case if we do not un-shadow here and use the value of the shadowing property, attributeChangedCallback
                    //  will be called with `newValue = "some-value"` and will set the shadowed property (this.someAttribute = "another-value")
                    //  to the value that was set inline i.e. "some-value" from above example. When
                    //  the connectedCallback attempts to un-shadow it will use "some-value" as the initial value rather than "another-value"
                    //
                    //  The case where the attribute was NOT set inline but was not set programmatically shall be handled/un-shadowed
                    //  by connectedCallback as this attributeChangedCallback will not fire.
                    //
                    //  https://developers.google.com/web/fundamentals/web-components/best-practices#lazy-properties
                    //
                    //  TODO(STENCIL-16) we should think about whether or not we actually want to be reflecting the attributes to
                    //  properties here given that this goes against best practices outlined here
                    //  https://developers.google.com/web/fundamentals/web-components/best-practices#avoid-reentrancy
                    if (this.hasOwnProperty(propName)) {
                        newValue = this[propName];
                        delete this[propName];
                    }
                    else if (prototype.hasOwnProperty(propName) &&
                        typeof this[propName] === 'number' &&
                        this[propName] == newValue) {
                        // if the propName exists on the prototype of `Cstr`, this update may be a result of Stencil using native
                        // APIs to reflect props as attributes. Calls to `setAttribute(someElement, propName)` will result in
                        // `propName` to be converted to a `DOMString`, which may not be what we want for other primitive props.
                        return;
                    }
                    else if (propName == null) {
                        // At this point we should know this is not a "member", so we can treat it like watching an attribute
                        // on a vanilla web component
                        const hostRef = getHostRef(this);
                        const flags = hostRef === null || hostRef === void 0 ? void 0 : hostRef.$flags$;
                        // We only want to trigger the callback(s) if:
                        // 1. The instance is ready
                        // 2. The watchers are ready
                        // 3. The value has changed
                        if (!(flags & 8 /* HOST_FLAGS.isConstructingInstance */) &&
                            flags & 128 /* HOST_FLAGS.isWatchReady */ &&
                            newValue !== oldValue) {
                            const elm = _stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.lazyLoad ? hostRef.$hostElement$ : this;
                            const instance = _stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.lazyLoad ? hostRef.$lazyInstance$ : elm;
                            const entry = cmpMeta.$watchers$[attrName];
                            entry === null || entry === void 0 ? void 0 : entry.forEach((callbackName) => {
                                if (instance[callbackName] != null) {
                                    instance[callbackName].call(instance, newValue, oldValue, attrName);
                                }
                            });
                        }
                        return;
                    }
                    this[propName] = newValue === null && typeof this[propName] === 'boolean' ? false : newValue;
                });
            };
            // Create an array of attributes to observe
            // This list in comprised of all strings used within a `@Watch()` decorator
            // on a component as well as any Stencil-specific "members" (`@Prop()`s and `@State()`s).
            // As such, there is no way to guarantee type-safety here that a user hasn't entered
            // an invalid attribute.
            Cstr.observedAttributes = Array.from(new Set([
                ...Object.keys((_a = cmpMeta.$watchers$) !== null && _a !== void 0 ? _a : {}),
                ...members
                    .filter(([_, m]) => m[0] & 15 /* MEMBER_FLAGS.HasAttribute */)
                    .map(([propName, m]) => {
                    const attrName = m[1] || propName;
                    attrNameToPropName.set(attrName, propName);
                    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.reflect && m[0] & 512 /* MEMBER_FLAGS.ReflectAttr */) {
                        cmpMeta.$attrsToReflect$.push([propName, attrName]);
                    }
                    return attrName;
                }),
            ]));
        }
    }
    return Cstr;
};
/**
 * Initialize a Stencil component given a reference to its host element, its
 * runtime bookkeeping data structure, runtime metadata about the component,
 * and (optionally) an HMR version ID.
 *
 * @param elm a host element
 * @param hostRef the element's runtime bookkeeping object
 * @param cmpMeta runtime metadata for the Stencil component
 * @param hmrVersionId an (optional) HMR version ID
 */
const initializeComponent = async (elm, hostRef, cmpMeta, hmrVersionId) => {
    let Cstr;
    // initializeComponent
    if ((hostRef.$flags$ & 32 /* HOST_FLAGS.hasInitializedComponent */) === 0) {
        // Let the runtime know that the component has been initialized
        hostRef.$flags$ |= 32 /* HOST_FLAGS.hasInitializedComponent */;
        if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.lazyLoad || _stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.hydrateClientSide) {
            // lazy loaded components
            // request the component's implementation to be
            // wired up with the host element
            Cstr = loadModule(cmpMeta, hostRef, hmrVersionId);
            if (Cstr.then) {
                // Await creates a micro-task avoid if possible
                const endLoad = uniqueTime(`st:load:${cmpMeta.$tagName$}:${hostRef.$modeName$}`, `[Stencil] Load module for <${cmpMeta.$tagName$}>`);
                Cstr = await Cstr;
                endLoad();
            }
            if ((_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.isDev || _stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.isDebug) && !Cstr) {
                throw new Error(`Constructor for "${cmpMeta.$tagName$}#${hostRef.$modeName$}" was not found`);
            }
            if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.member && !Cstr.isProxied) {
                // we've never proxied this Constructor before
                // let's add the getters/setters to its prototype before
                // the first time we create an instance of the implementation
                if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.watchCallback) {
                    cmpMeta.$watchers$ = Cstr.watchers;
                }
                proxyComponent(Cstr, cmpMeta, 2 /* PROXY_FLAGS.proxyState */);
                Cstr.isProxied = true;
            }
            const endNewInstance = createTime('createInstance', cmpMeta.$tagName$);
            // ok, time to construct the instance
            // but let's keep track of when we start and stop
            // so that the getters/setters don't incorrectly step on data
            if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.member) {
                hostRef.$flags$ |= 8 /* HOST_FLAGS.isConstructingInstance */;
            }
            // construct the lazy-loaded component implementation
            // passing the hostRef is very important during
            // construction in order to directly wire together the
            // host element and the lazy-loaded instance
            try {
                new Cstr(hostRef);
            }
            catch (e) {
                consoleError(e);
            }
            if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.member) {
                hostRef.$flags$ &= ~8 /* HOST_FLAGS.isConstructingInstance */;
            }
            if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.watchCallback) {
                hostRef.$flags$ |= 128 /* HOST_FLAGS.isWatchReady */;
            }
            endNewInstance();
            fireConnectedCallback(hostRef.$lazyInstance$);
        }
        else {
            // sync constructor component
            Cstr = elm.constructor;
            // wait for the CustomElementRegistry to mark the component as ready before setting `isWatchReady`. Otherwise,
            // watchers may fire prematurely if `customElements.get()`/`customElements.whenDefined()` resolves _before_
            // Stencil has completed instantiating the component.
            customElements.whenDefined(cmpMeta.$tagName$).then(() => (hostRef.$flags$ |= 128 /* HOST_FLAGS.isWatchReady */));
        }
        if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.style && Cstr.style) {
            // this component has styles but we haven't registered them yet
            let style = Cstr.style;
            if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.mode && typeof style !== 'string') {
                style = style[(hostRef.$modeName$ = computeMode(elm))];
                if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.hydrateServerSide && hostRef.$modeName$) {
                    elm.setAttribute('s-mode', hostRef.$modeName$);
                }
            }
            const scopeId = getScopeId(cmpMeta, hostRef.$modeName$);
            if (!styles.has(scopeId)) {
                const endRegisterStyles = createTime('registerStyles', cmpMeta.$tagName$);
                if (!_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.hydrateServerSide &&
                    _stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.shadowDom &&
                    // TODO(STENCIL-854): Remove code related to legacy shadowDomShim field
                    _stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.shadowDomShim &&
                    cmpMeta.$flags$ & 8 /* CMP_FLAGS.needsShadowDomShim */) {
                    style = await __webpack_require__.e(/*! import() */ "vendors-node_modules_stencil_core_internal_client_shadow-css_js").then(__webpack_require__.bind(__webpack_require__, /*! ./shadow-css.js */ "./node_modules/@stencil/core/internal/client/shadow-css.js")).then((m) => m.scopeCss(style, scopeId, false));
                }
                registerStyle(scopeId, style, !!(cmpMeta.$flags$ & 1 /* CMP_FLAGS.shadowDomEncapsulation */));
                endRegisterStyles();
            }
        }
    }
    // we've successfully created a lazy instance
    const ancestorComponent = hostRef.$ancestorComponent$;
    const schedule = () => scheduleUpdate(hostRef, true);
    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.asyncLoading && ancestorComponent && ancestorComponent['s-rc']) {
        // this is the initial load and this component it has an ancestor component
        // but the ancestor component has NOT fired its will update lifecycle yet
        // so let's just cool our jets and wait for the ancestor to continue first
        // this will get fired off when the ancestor component
        // finally gets around to rendering its lazy self
        // fire off the initial update
        ancestorComponent['s-rc'].push(schedule);
    }
    else {
        schedule();
    }
};
const fireConnectedCallback = (instance) => {
    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.lazyLoad && _stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.connectedCallback) {
        safeCall(instance, 'connectedCallback');
    }
};
const connectedCallback = (elm) => {
    if ((plt.$flags$ & 1 /* PLATFORM_FLAGS.isTmpDisconnected */) === 0) {
        const hostRef = getHostRef(elm);
        const cmpMeta = hostRef.$cmpMeta$;
        const endConnected = createTime('connectedCallback', cmpMeta.$tagName$);
        if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.hostListenerTargetParent) {
            // only run if we have listeners being attached to a parent
            addHostEventListeners(elm, hostRef, cmpMeta.$listeners$, true);
        }
        if (!(hostRef.$flags$ & 1 /* HOST_FLAGS.hasConnected */)) {
            // first time this component has connected
            hostRef.$flags$ |= 1 /* HOST_FLAGS.hasConnected */;
            let hostId;
            if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.hydrateClientSide) {
                hostId = elm.getAttribute(HYDRATE_ID);
                if (hostId) {
                    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.shadowDom && supportsShadow && cmpMeta.$flags$ & 1 /* CMP_FLAGS.shadowDomEncapsulation */) {
                        const scopeId = _stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.mode
                            ? addStyle(elm.shadowRoot, cmpMeta, elm.getAttribute('s-mode'))
                            : addStyle(elm.shadowRoot, cmpMeta);
                        elm.classList.remove(scopeId + '-h', scopeId + '-s');
                    }
                    initializeClientHydrate(elm, cmpMeta.$tagName$, hostId, hostRef);
                }
            }
            if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.slotRelocation && !hostId) {
                // initUpdate
                // if the slot polyfill is required we'll need to put some nodes
                // in here to act as original content anchors as we move nodes around
                // host element has been connected to the DOM
                if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.hydrateServerSide ||
                    ((_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.slot || _stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.shadowDom) &&
                        // TODO(STENCIL-854): Remove code related to legacy shadowDomShim field
                        cmpMeta.$flags$ & (4 /* CMP_FLAGS.hasSlotRelocation */ | 8 /* CMP_FLAGS.needsShadowDomShim */))) {
                    setContentReference(elm);
                }
            }
            if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.asyncLoading) {
                // find the first ancestor component (if there is one) and register
                // this component as one of the actively loading child components for its ancestor
                let ancestorComponent = elm;
                while ((ancestorComponent = ancestorComponent.parentNode || ancestorComponent.host)) {
                    // climb up the ancestors looking for the first
                    // component that hasn't finished its lifecycle update yet
                    if ((_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.hydrateClientSide &&
                        ancestorComponent.nodeType === 1 /* NODE_TYPE.ElementNode */ &&
                        ancestorComponent.hasAttribute('s-id') &&
                        ancestorComponent['s-p']) ||
                        ancestorComponent['s-p']) {
                        // we found this components first ancestor component
                        // keep a reference to this component's ancestor component
                        attachToAncestor(hostRef, (hostRef.$ancestorComponent$ = ancestorComponent));
                        break;
                    }
                }
            }
            // Lazy properties
            // https://developers.google.com/web/fundamentals/web-components/best-practices#lazy-properties
            if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.prop && !_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.hydrateServerSide && cmpMeta.$members$) {
                Object.entries(cmpMeta.$members$).map(([memberName, [memberFlags]]) => {
                    if (memberFlags & 31 /* MEMBER_FLAGS.Prop */ && elm.hasOwnProperty(memberName)) {
                        const value = elm[memberName];
                        delete elm[memberName];
                        elm[memberName] = value;
                    }
                });
            }
            if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.initializeNextTick) {
                // connectedCallback, taskQueue, initialLoad
                // angular sets attribute AFTER connectCallback
                // https://github.com/angular/angular/issues/18909
                // https://github.com/angular/angular/issues/19940
                nextTick(() => initializeComponent(elm, hostRef, cmpMeta));
            }
            else {
                initializeComponent(elm, hostRef, cmpMeta);
            }
        }
        else {
            // not the first time this has connected
            // reattach any event listeners to the host
            // since they would have been removed when disconnected
            addHostEventListeners(elm, hostRef, cmpMeta.$listeners$, false);
            // fire off connectedCallback() on component instance
            if (hostRef === null || hostRef === void 0 ? void 0 : hostRef.$lazyInstance$) {
                fireConnectedCallback(hostRef.$lazyInstance$);
            }
            else if (hostRef === null || hostRef === void 0 ? void 0 : hostRef.$onReadyPromise$) {
                hostRef.$onReadyPromise$.then(() => fireConnectedCallback(hostRef.$lazyInstance$));
            }
        }
        endConnected();
    }
};
const setContentReference = (elm) => {
    // only required when we're NOT using native shadow dom (slot)
    // or this browser doesn't support native shadow dom
    // and this host element was NOT created with SSR
    // let's pick out the inner content for slot projection
    // create a node to represent where the original
    // content was first placed, which is useful later on
    const contentRefElm = (elm['s-cr'] = doc.createComment(_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.isDebug ? `content-ref (host=${elm.localName})` : ''));
    contentRefElm['s-cn'] = true;
    elm.insertBefore(contentRefElm, elm.firstChild);
};
const disconnectInstance = (instance) => {
    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.lazyLoad && _stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.disconnectedCallback) {
        safeCall(instance, 'disconnectedCallback');
    }
    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.cmpDidUnload) {
        safeCall(instance, 'componentDidUnload');
    }
};
const disconnectedCallback = async (elm) => {
    if ((plt.$flags$ & 1 /* PLATFORM_FLAGS.isTmpDisconnected */) === 0) {
        const hostRef = getHostRef(elm);
        if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.hostListener) {
            if (hostRef.$rmListeners$) {
                hostRef.$rmListeners$.map((rmListener) => rmListener());
                hostRef.$rmListeners$ = undefined;
            }
        }
        if (!_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.lazyLoad) {
            disconnectInstance(elm);
        }
        else if (hostRef === null || hostRef === void 0 ? void 0 : hostRef.$lazyInstance$) {
            disconnectInstance(hostRef.$lazyInstance$);
        }
        else if (hostRef === null || hostRef === void 0 ? void 0 : hostRef.$onReadyPromise$) {
            hostRef.$onReadyPromise$.then(() => disconnectInstance(hostRef.$lazyInstance$));
        }
    }
};
const patchPseudoShadowDom = (hostElementPrototype, descriptorPrototype) => {
    patchCloneNode(hostElementPrototype);
    patchSlotAppendChild(hostElementPrototype);
    patchSlotAppend(hostElementPrototype);
    patchSlotPrepend(hostElementPrototype);
    patchSlotInsertAdjacentElement(hostElementPrototype);
    patchSlotInsertAdjacentHTML(hostElementPrototype);
    patchSlotInsertAdjacentText(hostElementPrototype);
    patchTextContent(hostElementPrototype, descriptorPrototype);
    patchChildSlotNodes(hostElementPrototype, descriptorPrototype);
};
const patchCloneNode = (HostElementPrototype) => {
    const orgCloneNode = HostElementPrototype.cloneNode;
    HostElementPrototype.cloneNode = function (deep) {
        const srcNode = this;
        const isShadowDom = _stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.shadowDom ? srcNode.shadowRoot && supportsShadow : false;
        const clonedNode = orgCloneNode.call(srcNode, isShadowDom ? deep : false);
        if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.slot && !isShadowDom && deep) {
            let i = 0;
            let slotted, nonStencilNode;
            const stencilPrivates = [
                's-id',
                's-cr',
                's-lr',
                's-rc',
                's-sc',
                's-p',
                's-cn',
                's-sr',
                's-sn',
                's-hn',
                's-ol',
                's-nr',
                's-si',
            ];
            for (; i < srcNode.childNodes.length; i++) {
                slotted = srcNode.childNodes[i]['s-nr'];
                nonStencilNode = stencilPrivates.every((privateField) => !srcNode.childNodes[i][privateField]);
                if (slotted) {
                    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.appendChildSlotFix && clonedNode.__appendChild) {
                        clonedNode.__appendChild(slotted.cloneNode(true));
                    }
                    else {
                        clonedNode.appendChild(slotted.cloneNode(true));
                    }
                }
                if (nonStencilNode) {
                    clonedNode.appendChild(srcNode.childNodes[i].cloneNode(true));
                }
            }
        }
        return clonedNode;
    };
};
const patchSlotAppendChild = (HostElementPrototype) => {
    HostElementPrototype.__appendChild = HostElementPrototype.appendChild;
    HostElementPrototype.appendChild = function (newChild) {
        const slotName = (newChild['s-sn'] = getSlotName(newChild));
        const slotNode = getHostSlotNode(this.childNodes, slotName);
        if (slotNode) {
            const slotChildNodes = getHostSlotChildNodes(slotNode, slotName);
            const appendAfter = slotChildNodes[slotChildNodes.length - 1];
            return appendAfter.parentNode.insertBefore(newChild, appendAfter.nextSibling);
        }
        return this.__appendChild(newChild);
    };
};
/**
 * Patches the `prepend` method for a slotted node inside a scoped component.
 *
 * @param HostElementPrototype the `Element` to be patched
 */
const patchSlotPrepend = (HostElementPrototype) => {
    const originalPrepend = HostElementPrototype.prepend;
    HostElementPrototype.prepend = function (...newChildren) {
        newChildren.forEach((newChild) => {
            if (typeof newChild === 'string') {
                newChild = this.ownerDocument.createTextNode(newChild);
            }
            const slotName = (newChild['s-sn'] = getSlotName(newChild));
            const slotNode = getHostSlotNode(this.childNodes, slotName);
            if (slotNode) {
                const slotPlaceholder = document.createTextNode('');
                slotPlaceholder['s-nr'] = newChild;
                slotNode['s-cr'].parentNode.__appendChild(slotPlaceholder);
                newChild['s-ol'] = slotPlaceholder;
                const slotChildNodes = getHostSlotChildNodes(slotNode, slotName);
                const appendAfter = slotChildNodes[0];
                return appendAfter.parentNode.insertBefore(newChild, appendAfter.nextSibling);
            }
            if (newChild.nodeType === 1 && !!newChild.getAttribute('slot')) {
                newChild.hidden = true;
            }
            return originalPrepend.call(this, newChild);
        });
    };
};
/**
 * Patches the `append` method for a slotted node inside a scoped component. The patched method uses
 * `appendChild` under-the-hood while creating text nodes for any new children that passed as bare strings.
 *
 * @param HostElementPrototype the `Element` to be patched
 */
const patchSlotAppend = (HostElementPrototype) => {
    HostElementPrototype.append = function (...newChildren) {
        newChildren.forEach((newChild) => {
            if (typeof newChild === 'string') {
                newChild = this.ownerDocument.createTextNode(newChild);
            }
            this.appendChild(newChild);
        });
    };
};
/**
 * Patches the `insertAdjacentHTML` method for a slotted node inside a scoped component. Specifically,
 * we only need to patch the behavior for the specific `beforeend` and `afterbegin` positions so the element
 * gets inserted into the DOM in the correct location.
 *
 * @param HostElementPrototype the `Element` to be patched
 */
const patchSlotInsertAdjacentHTML = (HostElementPrototype) => {
    const originalInsertAdjacentHtml = HostElementPrototype.insertAdjacentHTML;
    HostElementPrototype.insertAdjacentHTML = function (position, text) {
        if (position !== 'afterbegin' && position !== 'beforeend') {
            return originalInsertAdjacentHtml.call(this, position, text);
        }
        const container = this.ownerDocument.createElement('_');
        let node;
        container.innerHTML = text;
        if (position === 'afterbegin') {
            while ((node = container.firstChild)) {
                this.prepend(node);
            }
        }
        else if (position === 'beforeend') {
            while ((node = container.firstChild)) {
                this.append(node);
            }
        }
    };
};
/**
 * Patches the `insertAdjacentText` method for a slotted node inside a scoped component. Specifically,
 * we only need to patch the behavior for the specific `beforeend` and `afterbegin` positions so the text node
 * gets inserted into the DOM in the correct location.
 *
 * @param HostElementPrototype the `Element` to be patched
 */
const patchSlotInsertAdjacentText = (HostElementPrototype) => {
    HostElementPrototype.insertAdjacentText = function (position, text) {
        this.insertAdjacentHTML(position, text);
    };
};
/**
 * Patches the `insertAdjacentElement` method for a slotted node inside a scoped component. Specifically,
 * we only need to patch the behavior for the specific `beforeend` and `afterbegin` positions so the element
 * gets inserted into the DOM in the correct location.
 *
 * @param HostElementPrototype the `Element` to be patched
 */
const patchSlotInsertAdjacentElement = (HostElementPrototype) => {
    const originalInsertAdjacentElement = HostElementPrototype.insertAdjacentElement;
    HostElementPrototype.insertAdjacentElement = function (position, element) {
        if (position !== 'afterbegin' && position !== 'beforeend') {
            return originalInsertAdjacentElement.call(this, position, element);
        }
        if (position === 'afterbegin') {
            this.prepend(element);
            return element;
        }
        else if (position === 'beforeend') {
            this.append(element);
            return element;
        }
        return element;
    };
};
/**
 * Patches the text content of an unnamed slotted node inside a scoped component
 * @param hostElementPrototype the `Element` to be patched
 * @param cmpMeta component runtime metadata used to determine if the component should be patched or not
 */
const patchTextContent = (hostElementPrototype, cmpMeta) => {
    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.scoped && cmpMeta.$flags$ & 2 /* CMP_FLAGS.scopedCssEncapsulation */) {
        const descriptor = Object.getOwnPropertyDescriptor(Node.prototype, 'textContent');
        Object.defineProperty(hostElementPrototype, '__textContent', descriptor);
        Object.defineProperty(hostElementPrototype, 'textContent', {
            get() {
                var _a;
                // get the 'default slot', which would be the first slot in a shadow tree (if we were using one), whose name is
                // the empty string
                const slotNode = getHostSlotNode(this.childNodes, '');
                // when a slot node is found, the textContent _may_ be found in the next sibling (text) node, depending on how
                // nodes were reordered during the vdom render. first try to get the text content from the sibling.
                if (((_a = slotNode === null || slotNode === void 0 ? void 0 : slotNode.nextSibling) === null || _a === void 0 ? void 0 : _a.nodeType) === 3 /* NODE_TYPES.TEXT_NODE */) {
                    return slotNode.nextSibling.textContent;
                }
                else if (slotNode) {
                    return slotNode.textContent;
                }
                else {
                    // fallback to the original implementation
                    return this.__textContent;
                }
            },
            set(value) {
                var _a;
                // get the 'default slot', which would be the first slot in a shadow tree (if we were using one), whose name is
                // the empty string
                const slotNode = getHostSlotNode(this.childNodes, '');
                // when a slot node is found, the textContent _may_ need to be placed in the next sibling (text) node,
                // depending on how nodes were reordered during the vdom render. first try to set the text content on the
                // sibling.
                if (((_a = slotNode === null || slotNode === void 0 ? void 0 : slotNode.nextSibling) === null || _a === void 0 ? void 0 : _a.nodeType) === 3 /* NODE_TYPES.TEXT_NODE */) {
                    slotNode.nextSibling.textContent = value;
                }
                else if (slotNode) {
                    slotNode.textContent = value;
                }
                else {
                    // we couldn't find a slot, but that doesn't mean that there isn't one. if this check ran before the DOM
                    // loaded, we could have missed it. check for a content reference element on the scoped component and insert
                    // it there
                    this.__textContent = value;
                    const contentRefElm = this['s-cr'];
                    if (contentRefElm) {
                        this.insertBefore(contentRefElm, this.firstChild);
                    }
                }
            },
        });
    }
};
const patchChildSlotNodes = (elm, cmpMeta) => {
    class FakeNodeList extends Array {
        item(n) {
            return this[n];
        }
    }
    // TODO(STENCIL-854): Remove code related to legacy shadowDomShim field
    if (cmpMeta.$flags$ & 8 /* CMP_FLAGS.needsShadowDomShim */) {
        const childNodesFn = elm.__lookupGetter__('childNodes');
        Object.defineProperty(elm, 'children', {
            get() {
                return this.childNodes.map((n) => n.nodeType === 1);
            },
        });
        Object.defineProperty(elm, 'childElementCount', {
            get() {
                return elm.children.length;
            },
        });
        Object.defineProperty(elm, 'childNodes', {
            get() {
                const childNodes = childNodesFn.call(this);
                if ((plt.$flags$ & 1 /* PLATFORM_FLAGS.isTmpDisconnected */) === 0 &&
                    getHostRef(this).$flags$ & 2 /* HOST_FLAGS.hasRendered */) {
                    const result = new FakeNodeList();
                    for (let i = 0; i < childNodes.length; i++) {
                        const slot = childNodes[i]['s-nr'];
                        if (slot) {
                            result.push(slot);
                        }
                    }
                    return result;
                }
                return FakeNodeList.from(childNodes);
            },
        });
    }
};
const getSlotName = (node) => node['s-sn'] || (node.nodeType === 1 && node.getAttribute('slot')) || '';
/**
 * Recursively searches a series of child nodes for a slot with the provided name.
 * @param childNodes the nodes to search for a slot with a specific name.
 * @param slotName the name of the slot to match on.
 * @returns a reference to the slot node that matches the provided name, `null` otherwise
 */
const getHostSlotNode = (childNodes, slotName) => {
    let i = 0;
    let childNode;
    for (; i < childNodes.length; i++) {
        childNode = childNodes[i];
        if (childNode['s-sr'] && childNode['s-sn'] === slotName) {
            return childNode;
        }
        childNode = getHostSlotNode(childNode.childNodes, slotName);
        if (childNode) {
            return childNode;
        }
    }
    return null;
};
const getHostSlotChildNodes = (n, slotName) => {
    const childNodes = [n];
    while ((n = n.nextSibling) && n['s-sn'] === slotName) {
        childNodes.push(n);
    }
    return childNodes;
};
const defineCustomElement = (Cstr, compactMeta) => {
    customElements.define(compactMeta[1], proxyCustomElement(Cstr, compactMeta));
};
const proxyCustomElement = (Cstr, compactMeta) => {
    const cmpMeta = {
        $flags$: compactMeta[0],
        $tagName$: compactMeta[1],
    };
    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.member) {
        cmpMeta.$members$ = compactMeta[2];
    }
    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.hostListener) {
        cmpMeta.$listeners$ = compactMeta[3];
    }
    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.watchCallback) {
        cmpMeta.$watchers$ = Cstr.$watchers$;
    }
    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.reflect) {
        cmpMeta.$attrsToReflect$ = [];
    }
    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.shadowDom && !supportsShadow && cmpMeta.$flags$ & 1 /* CMP_FLAGS.shadowDomEncapsulation */) {
        // TODO(STENCIL-854): Remove code related to legacy shadowDomShim field
        cmpMeta.$flags$ |= 8 /* CMP_FLAGS.needsShadowDomShim */;
    }
    // TODO(STENCIL-914): this check and `else` block can go away and be replaced by just `BUILD.scoped` once we
    // default our pseudo-slot behavior
    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.experimentalSlotFixes && _stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.scoped) {
        patchPseudoShadowDom(Cstr.prototype, cmpMeta);
    }
    else {
        if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.slotChildNodesFix) {
            patchChildSlotNodes(Cstr.prototype, cmpMeta);
        }
        if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.cloneNodeFix) {
            patchCloneNode(Cstr.prototype);
        }
        if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.appendChildSlotFix) {
            patchSlotAppendChild(Cstr.prototype);
        }
        if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.scopedSlotTextContentFix) {
            patchTextContent(Cstr.prototype, cmpMeta);
        }
    }
    const originalConnectedCallback = Cstr.prototype.connectedCallback;
    const originalDisconnectedCallback = Cstr.prototype.disconnectedCallback;
    Object.assign(Cstr.prototype, {
        __registerHost() {
            registerHost(this, cmpMeta);
        },
        connectedCallback() {
            connectedCallback(this);
            if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.connectedCallback && originalConnectedCallback) {
                originalConnectedCallback.call(this);
            }
        },
        disconnectedCallback() {
            disconnectedCallback(this);
            if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.disconnectedCallback && originalDisconnectedCallback) {
                originalDisconnectedCallback.call(this);
            }
        },
        __attachShadow() {
            if (supportsShadow) {
                if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.shadowDelegatesFocus) {
                    this.attachShadow({
                        mode: 'open',
                        delegatesFocus: !!(cmpMeta.$flags$ & 16 /* CMP_FLAGS.shadowDelegatesFocus */),
                    });
                }
                else {
                    this.attachShadow({ mode: 'open' });
                }
            }
            else {
                this.shadowRoot = this;
            }
        },
    });
    Cstr.is = cmpMeta.$tagName$;
    return proxyComponent(Cstr, cmpMeta, 1 /* PROXY_FLAGS.isElementConstructor */ | 2 /* PROXY_FLAGS.proxyState */);
};
const forceModeUpdate = (elm) => {
    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.style && _stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.mode && !_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.lazyLoad) {
        const mode = computeMode(elm);
        const hostRef = getHostRef(elm);
        if (hostRef.$modeName$ !== mode) {
            const cmpMeta = hostRef.$cmpMeta$;
            const oldScopeId = elm['s-sc'];
            const scopeId = getScopeId(cmpMeta, mode);
            const style = elm.constructor.style[mode];
            const flags = cmpMeta.$flags$;
            if (style) {
                if (!styles.has(scopeId)) {
                    registerStyle(scopeId, style, !!(flags & 1 /* CMP_FLAGS.shadowDomEncapsulation */));
                }
                hostRef.$modeName$ = mode;
                elm.classList.remove(oldScopeId + '-h', oldScopeId + '-s');
                attachStyles(hostRef);
                forceUpdate(elm);
            }
        }
    }
};
/**
 * Kick off hot-module-replacement for a component. In order to replace the
 * component in-place we:
 *
 * 1. get a reference to the {@link d.HostRef} for the element
 * 2. reset the element's runtime flags
 * 3. re-run the initialization logic for the element (via
 *    {@link initializeComponent})
 *
 * @param hostElement the host element for the component which we want to start
 * doing HMR
 * @param cmpMeta runtime metadata for the component
 * @param hmrVersionId the current HMR version ID
 */
const hmrStart = (hostElement, cmpMeta, hmrVersionId) => {
    // ¯\_(ツ)_/¯
    const hostRef = getHostRef(hostElement);
    // reset state flags to only have been connected
    hostRef.$flags$ = 1 /* HOST_FLAGS.hasConnected */;
    // TODO
    // detach any event listeners that may have been added
    // because we're not passing an exact event name it'll
    // remove all of this element's event, which is good
    // re-initialize the component
    initializeComponent(hostElement, hostRef, cmpMeta, hmrVersionId);
};
const bootstrapLazy = (lazyBundles, options = {}) => {
    var _a;
    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.profile && performance.mark) {
        performance.mark('st:app:start');
    }
    installDevTools();
    const endBootstrap = createTime('bootstrapLazy');
    const cmpTags = [];
    const exclude = options.exclude || [];
    const customElements = win.customElements;
    const head = doc.head;
    const metaCharset = /*@__PURE__*/ head.querySelector('meta[charset]');
    const dataStyles = /*@__PURE__*/ doc.createElement('style');
    const deferredConnectedCallbacks = [];
    const styles = /*@__PURE__*/ doc.querySelectorAll(`[${HYDRATED_STYLE_ID}]`);
    let appLoadFallback;
    let isBootstrapping = true;
    let i = 0;
    Object.assign(plt, options);
    plt.$resourcesUrl$ = new URL(options.resourcesUrl || './', doc.baseURI).href;
    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.asyncQueue) {
        if (options.syncQueue) {
            plt.$flags$ |= 4 /* PLATFORM_FLAGS.queueSync */;
        }
    }
    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.hydrateClientSide) {
        // If the app is already hydrated there is not point to disable the
        // async queue. This will improve the first input delay
        plt.$flags$ |= 2 /* PLATFORM_FLAGS.appLoaded */;
    }
    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.hydrateClientSide && _stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.shadowDom) {
        for (; i < styles.length; i++) {
            registerStyle(styles[i].getAttribute(HYDRATED_STYLE_ID), convertScopedToShadow(styles[i].innerHTML), true);
        }
    }
    let hasSlotRelocation = false;
    lazyBundles.map((lazyBundle) => {
        lazyBundle[1].map((compactMeta) => {
            var _a;
            const cmpMeta = {
                $flags$: compactMeta[0],
                $tagName$: compactMeta[1],
                $members$: compactMeta[2],
                $listeners$: compactMeta[3],
            };
            // Check if we are using slots outside the shadow DOM in this component.
            // We'll use this information later to add styles for `slot-fb` elements
            if (cmpMeta.$flags$ & 4 /* CMP_FLAGS.hasSlotRelocation */) {
                hasSlotRelocation = true;
            }
            if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.member) {
                cmpMeta.$members$ = compactMeta[2];
            }
            if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.hostListener) {
                cmpMeta.$listeners$ = compactMeta[3];
            }
            if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.reflect) {
                cmpMeta.$attrsToReflect$ = [];
            }
            if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.watchCallback) {
                cmpMeta.$watchers$ = (_a = compactMeta[4]) !== null && _a !== void 0 ? _a : {};
            }
            if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.shadowDom && !supportsShadow && cmpMeta.$flags$ & 1 /* CMP_FLAGS.shadowDomEncapsulation */) {
                // TODO(STENCIL-854): Remove code related to legacy shadowDomShim field
                cmpMeta.$flags$ |= 8 /* CMP_FLAGS.needsShadowDomShim */;
            }
            const tagName = _stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.transformTagName && options.transformTagName
                ? options.transformTagName(cmpMeta.$tagName$)
                : cmpMeta.$tagName$;
            const HostElement = class extends HTMLElement {
                // StencilLazyHost
                constructor(self) {
                    // @ts-ignore
                    super(self);
                    self = this;
                    registerHost(self, cmpMeta);
                    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.shadowDom && cmpMeta.$flags$ & 1 /* CMP_FLAGS.shadowDomEncapsulation */) {
                        // this component is using shadow dom
                        // and this browser supports shadow dom
                        // add the read-only property "shadowRoot" to the host element
                        // adding the shadow root build conditionals to minimize runtime
                        if (supportsShadow) {
                            if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.shadowDelegatesFocus) {
                                self.attachShadow({
                                    mode: 'open',
                                    delegatesFocus: !!(cmpMeta.$flags$ & 16 /* CMP_FLAGS.shadowDelegatesFocus */),
                                });
                            }
                            else {
                                self.attachShadow({ mode: 'open' });
                            }
                        }
                        else if (!_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.hydrateServerSide && !('shadowRoot' in self)) {
                            self.shadowRoot = self;
                        }
                    }
                }
                connectedCallback() {
                    if (appLoadFallback) {
                        clearTimeout(appLoadFallback);
                        appLoadFallback = null;
                    }
                    if (isBootstrapping) {
                        // connectedCallback will be processed once all components have been registered
                        deferredConnectedCallbacks.push(this);
                    }
                    else {
                        plt.jmp(() => connectedCallback(this));
                    }
                }
                disconnectedCallback() {
                    plt.jmp(() => disconnectedCallback(this));
                }
                componentOnReady() {
                    return getHostRef(this).$onReadyPromise$;
                }
            };
            // TODO(STENCIL-914): this check and `else` block can go away and be replaced by just `BUILD.scoped` once we
            // default our pseudo-slot behavior
            if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.experimentalSlotFixes && _stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.scoped) {
                patchPseudoShadowDom(HostElement.prototype, cmpMeta);
            }
            else {
                if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.slotChildNodesFix) {
                    patchChildSlotNodes(HostElement.prototype, cmpMeta);
                }
                if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.cloneNodeFix) {
                    patchCloneNode(HostElement.prototype);
                }
                if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.appendChildSlotFix) {
                    patchSlotAppendChild(HostElement.prototype);
                }
                if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.scopedSlotTextContentFix) {
                    patchTextContent(HostElement.prototype, cmpMeta);
                }
            }
            // if the component is formAssociated we need to set that on the host
            // element so that it will be ready for `attachInternals` to be called on
            // it later on
            if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.formAssociated && cmpMeta.$flags$ & 64 /* CMP_FLAGS.formAssociated */) {
                HostElement.formAssociated = true;
            }
            if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.hotModuleReplacement) {
                // if we're in an HMR dev build then we need to set up the callback
                // which will carry out the work of actually replacing the module for
                // this particular component
                HostElement.prototype['s-hmr'] = function (hmrVersionId) {
                    hmrStart(this, cmpMeta, hmrVersionId);
                };
            }
            cmpMeta.$lazyBundleId$ = lazyBundle[0];
            if (!exclude.includes(tagName) && !customElements.get(tagName)) {
                cmpTags.push(tagName);
                customElements.define(tagName, proxyComponent(HostElement, cmpMeta, 1 /* PROXY_FLAGS.isElementConstructor */));
            }
        });
    });
    // Add styles for `slot-fb` elements if any of our components are using slots outside the Shadow DOM
    if (hasSlotRelocation) {
        dataStyles.innerHTML += SLOT_FB_CSS;
    }
    // Add hydration styles
    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.invisiblePrehydration && (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.hydratedClass || _stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.hydratedAttribute)) {
        dataStyles.innerHTML += cmpTags + HYDRATED_CSS;
    }
    // If we have styles, add them to the DOM
    if (dataStyles.innerHTML.length) {
        dataStyles.setAttribute('data-styles', '');
        head.insertBefore(dataStyles, metaCharset ? metaCharset.nextSibling : head.firstChild);
        // Apply CSP nonce to the style tag if it exists
        const nonce = (_a = plt.$nonce$) !== null && _a !== void 0 ? _a : queryNonceMetaTagContent(doc);
        if (nonce != null) {
            dataStyles.setAttribute('nonce', nonce);
        }
    }
    // Process deferred connectedCallbacks now all components have been registered
    isBootstrapping = false;
    if (deferredConnectedCallbacks.length) {
        deferredConnectedCallbacks.map((host) => host.connectedCallback());
    }
    else {
        if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.profile) {
            plt.jmp(() => (appLoadFallback = setTimeout(appDidLoad, 30, 'timeout')));
        }
        else {
            plt.jmp(() => (appLoadFallback = setTimeout(appDidLoad, 30)));
        }
    }
    // Fallback appLoad event
    endBootstrap();
};
const Fragment = (_, children) => children;
const addHostEventListeners = (elm, hostRef, listeners, attachParentListeners) => {
    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.hostListener && listeners) {
        // this is called immediately within the element's constructor
        // initialize our event listeners on the host element
        // we do this now so that we can listen to events that may
        // have fired even before the instance is ready
        if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.hostListenerTargetParent) {
            // this component may have event listeners that should be attached to the parent
            if (attachParentListeners) {
                // this is being ran from within the connectedCallback
                // which is important so that we know the host element actually has a parent element
                // filter out the listeners to only have the ones that ARE being attached to the parent
                listeners = listeners.filter(([flags]) => flags & 32 /* LISTENER_FLAGS.TargetParent */);
            }
            else {
                // this is being ran from within the component constructor
                // everything BUT the parent element listeners should be attached at this time
                // filter out the listeners that are NOT being attached to the parent
                listeners = listeners.filter(([flags]) => !(flags & 32 /* LISTENER_FLAGS.TargetParent */));
            }
        }
        listeners.map(([flags, name, method]) => {
            const target = _stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.hostListenerTarget ? getHostListenerTarget(elm, flags) : elm;
            const handler = hostListenerProxy(hostRef, method);
            const opts = hostListenerOpts(flags);
            plt.ael(target, name, handler, opts);
            (hostRef.$rmListeners$ = hostRef.$rmListeners$ || []).push(() => plt.rel(target, name, handler, opts));
        });
    }
};
const hostListenerProxy = (hostRef, methodName) => (ev) => {
    try {
        if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.lazyLoad) {
            if (hostRef.$flags$ & 256 /* HOST_FLAGS.isListenReady */) {
                // instance is ready, let's call it's member method for this event
                hostRef.$lazyInstance$[methodName](ev);
            }
            else {
                (hostRef.$queuedListeners$ = hostRef.$queuedListeners$ || []).push([methodName, ev]);
            }
        }
        else {
            hostRef.$hostElement$[methodName](ev);
        }
    }
    catch (e) {
        consoleError(e);
    }
};
const getHostListenerTarget = (elm, flags) => {
    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.hostListenerTargetDocument && flags & 4 /* LISTENER_FLAGS.TargetDocument */)
        return doc;
    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.hostListenerTargetWindow && flags & 8 /* LISTENER_FLAGS.TargetWindow */)
        return win;
    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.hostListenerTargetBody && flags & 16 /* LISTENER_FLAGS.TargetBody */)
        return doc.body;
    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.hostListenerTargetParent && flags & 32 /* LISTENER_FLAGS.TargetParent */)
        return elm.parentElement;
    return elm;
};
// prettier-ignore
const hostListenerOpts = (flags) => supportsListenerOptions
    ? ({
        passive: (flags & 1 /* LISTENER_FLAGS.Passive */) !== 0,
        capture: (flags & 2 /* LISTENER_FLAGS.Capture */) !== 0,
    })
    : (flags & 2 /* LISTENER_FLAGS.Capture */) !== 0;
/**
 * Assigns the given value to the nonce property on the runtime platform object.
 * During runtime, this value is used to set the nonce attribute on all dynamically created script and style tags.
 * @param nonce The value to be assigned to the platform nonce property.
 * @returns void
 */
const setNonce = (nonce) => (plt.$nonce$ = nonce);
const setPlatformOptions = (opts) => Object.assign(plt, opts);
const insertVdomAnnotations = (doc, staticComponents) => {
    if (doc != null) {
        const docData = {
            hostIds: 0,
            rootLevelIds: 0,
            staticComponents: new Set(staticComponents),
        };
        const orgLocationNodes = [];
        parseVNodeAnnotations(doc, doc.body, docData, orgLocationNodes);
        orgLocationNodes.forEach((orgLocationNode) => {
            if (orgLocationNode != null) {
                const nodeRef = orgLocationNode['s-nr'];
                let hostId = nodeRef['s-host-id'];
                let nodeId = nodeRef['s-node-id'];
                let childId = `${hostId}.${nodeId}`;
                if (hostId == null) {
                    hostId = 0;
                    docData.rootLevelIds++;
                    nodeId = docData.rootLevelIds;
                    childId = `${hostId}.${nodeId}`;
                    if (nodeRef.nodeType === 1 /* NODE_TYPE.ElementNode */) {
                        nodeRef.setAttribute(HYDRATE_CHILD_ID, childId);
                    }
                    else if (nodeRef.nodeType === 3 /* NODE_TYPE.TextNode */) {
                        if (hostId === 0) {
                            const textContent = nodeRef.nodeValue.trim();
                            if (textContent === '') {
                                // useless whitespace node at the document root
                                orgLocationNode.remove();
                                return;
                            }
                        }
                        const commentBeforeTextNode = doc.createComment(childId);
                        commentBeforeTextNode.nodeValue = `${TEXT_NODE_ID}.${childId}`;
                        nodeRef.parentNode.insertBefore(commentBeforeTextNode, nodeRef);
                    }
                }
                let orgLocationNodeId = `${ORG_LOCATION_ID}.${childId}`;
                const orgLocationParentNode = orgLocationNode.parentElement;
                if (orgLocationParentNode) {
                    if (orgLocationParentNode['s-en'] === '') {
                        // ending with a "." means that the parent element
                        // of this node's original location is a SHADOW dom element
                        // and this node is apart of the root level light dom
                        orgLocationNodeId += `.`;
                    }
                    else if (orgLocationParentNode['s-en'] === 'c') {
                        // ending with a ".c" means that the parent element
                        // of this node's original location is a SCOPED element
                        // and this node is apart of the root level light dom
                        orgLocationNodeId += `.c`;
                    }
                }
                orgLocationNode.nodeValue = orgLocationNodeId;
            }
        });
    }
};
const parseVNodeAnnotations = (doc, node, docData, orgLocationNodes) => {
    if (node == null) {
        return;
    }
    if (node['s-nr'] != null) {
        orgLocationNodes.push(node);
    }
    if (node.nodeType === 1 /* NODE_TYPE.ElementNode */) {
        node.childNodes.forEach((childNode) => {
            const hostRef = getHostRef(childNode);
            if (hostRef != null && !docData.staticComponents.has(childNode.nodeName.toLowerCase())) {
                const cmpData = {
                    nodeIds: 0,
                };
                insertVNodeAnnotations(doc, childNode, hostRef.$vnode$, docData, cmpData);
            }
            parseVNodeAnnotations(doc, childNode, docData, orgLocationNodes);
        });
    }
};
const insertVNodeAnnotations = (doc, hostElm, vnode, docData, cmpData) => {
    if (vnode != null) {
        const hostId = ++docData.hostIds;
        hostElm.setAttribute(HYDRATE_ID, hostId);
        if (hostElm['s-cr'] != null) {
            hostElm['s-cr'].nodeValue = `${CONTENT_REF_ID}.${hostId}`;
        }
        if (vnode.$children$ != null) {
            const depth = 0;
            vnode.$children$.forEach((vnodeChild, index) => {
                insertChildVNodeAnnotations(doc, vnodeChild, cmpData, hostId, depth, index);
            });
        }
        if (hostElm && vnode && vnode.$elm$ && !hostElm.hasAttribute('c-id')) {
            const parent = hostElm.parentElement;
            if (parent && parent.childNodes) {
                const parentChildNodes = Array.from(parent.childNodes);
                const comment = parentChildNodes.find((node) => node.nodeType === 8 /* NODE_TYPE.CommentNode */ && node['s-sr']);
                if (comment) {
                    const index = parentChildNodes.indexOf(hostElm) - 1;
                    vnode.$elm$.setAttribute(HYDRATE_CHILD_ID, `${comment['s-host-id']}.${comment['s-node-id']}.0.${index}`);
                }
            }
        }
    }
};
const insertChildVNodeAnnotations = (doc, vnodeChild, cmpData, hostId, depth, index) => {
    const childElm = vnodeChild.$elm$;
    if (childElm == null) {
        return;
    }
    const nodeId = cmpData.nodeIds++;
    const childId = `${hostId}.${nodeId}.${depth}.${index}`;
    childElm['s-host-id'] = hostId;
    childElm['s-node-id'] = nodeId;
    if (childElm.nodeType === 1 /* NODE_TYPE.ElementNode */) {
        childElm.setAttribute(HYDRATE_CHILD_ID, childId);
    }
    else if (childElm.nodeType === 3 /* NODE_TYPE.TextNode */) {
        const parentNode = childElm.parentNode;
        const nodeName = parentNode.nodeName;
        if (nodeName !== 'STYLE' && nodeName !== 'SCRIPT') {
            const textNodeId = `${TEXT_NODE_ID}.${childId}`;
            const commentBeforeTextNode = doc.createComment(textNodeId);
            parentNode.insertBefore(commentBeforeTextNode, childElm);
        }
    }
    else if (childElm.nodeType === 8 /* NODE_TYPE.CommentNode */) {
        if (childElm['s-sr']) {
            const slotName = childElm['s-sn'] || '';
            const slotNodeId = `${SLOT_NODE_ID}.${childId}.${slotName}`;
            childElm.nodeValue = slotNodeId;
        }
    }
    if (vnodeChild.$children$ != null) {
        const childDepth = depth + 1;
        vnodeChild.$children$.forEach((vnode, index) => {
            insertChildVNodeAnnotations(doc, vnode, cmpData, hostId, childDepth, index);
        });
    }
};
/**
 * A WeakMap mapping runtime component references to their corresponding host reference
 * instances.
 */
const hostRefs = /*@__PURE__*/ new WeakMap();
/**
 * Given a {@link d.RuntimeRef} retrieve the corresponding {@link d.HostRef}
 *
 * @param ref the runtime ref of interest
 * @returns the Host reference (if found) or undefined
 */
const getHostRef = (ref) => hostRefs.get(ref);
/**
 * Register a lazy instance with the {@link hostRefs} object so it's
 * corresponding {@link d.HostRef} can be retrieved later.
 *
 * @param lazyInstance the lazy instance of interest
 * @param hostRef that instances `HostRef` object
 * @returns a reference to the host ref WeakMap
 */
const registerInstance = (lazyInstance, hostRef) => hostRefs.set((hostRef.$lazyInstance$ = lazyInstance), hostRef);
/**
 * Register a host element for a Stencil component, setting up various metadata
 * and callbacks based on {@link BUILD} flags as well as the component's runtime
 * metadata.
 *
 * @param hostElement the host element to register
 * @param cmpMeta runtime metadata for that component
 * @returns a reference to the host ref WeakMap
 */
const registerHost = (hostElement, cmpMeta) => {
    const hostRef = {
        $flags$: 0,
        $hostElement$: hostElement,
        $cmpMeta$: cmpMeta,
        $instanceValues$: new Map(),
    };
    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.isDev) {
        hostRef.$renderCount$ = 0;
    }
    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.method && _stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.lazyLoad) {
        hostRef.$onInstancePromise$ = new Promise((r) => (hostRef.$onInstanceResolve$ = r));
    }
    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.asyncLoading) {
        hostRef.$onReadyPromise$ = new Promise((r) => (hostRef.$onReadyResolve$ = r));
        hostElement['s-p'] = [];
        hostElement['s-rc'] = [];
    }
    addHostEventListeners(hostElement, hostRef, cmpMeta.$listeners$, false);
    return hostRefs.set(hostElement, hostRef);
};
const isMemberInElement = (elm, memberName) => memberName in elm;
const consoleError = (e, el) => (customError || console.error)(e, el);
const STENCIL_DEV_MODE = _stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.isTesting
    ? ['STENCIL:'] // E2E testing
    : [
        '%cstencil',
        'color: white;background:#4c47ff;font-weight: bold; font-size:10px; padding:2px 6px; border-radius: 5px',
    ];
const consoleDevError = (...m) => console.error(...STENCIL_DEV_MODE, ...m);
const consoleDevWarn = (...m) => console.warn(...STENCIL_DEV_MODE, ...m);
const consoleDevInfo = (...m) => console.info(...STENCIL_DEV_MODE, ...m);
const setErrorHandler = (handler) => (customError = handler);
const cmpModules = /*@__PURE__*/ new Map();
const loadModule = (cmpMeta, hostRef, hmrVersionId) => {
    // loadModuleImport
    const exportName = cmpMeta.$tagName$.replace(/-/g, '_');
    const bundleId = cmpMeta.$lazyBundleId$;
    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.isDev && typeof bundleId !== 'string') {
        consoleDevError(`Trying to lazily load component <${cmpMeta.$tagName$}> with style mode "${hostRef.$modeName$}", but it does not exist.`);
        return undefined;
    }
    const module = !_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.hotModuleReplacement ? cmpModules.get(bundleId) : false;
    if (module) {
        return module[exportName];
    }
    /*!__STENCIL_STATIC_IMPORT_SWITCH__*/
    return __webpack_require__("./node_modules/@stencil/core/internal/client lazy recursive ^\\.\\/.*\\.entry\\.js.*$ include: \\.entry\\.js$ exclude: \\.system\\.entry\\.js$")(`./${bundleId}.entry.js${_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.hotModuleReplacement && hmrVersionId ? '?s-hmr=' + hmrVersionId : ''}`).then((importedModule) => {
        if (!_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.hotModuleReplacement) {
            cmpModules.set(bundleId, importedModule);
        }
        return importedModule[exportName];
    }, consoleError);
};
const styles = /*@__PURE__*/ new Map();
const modeResolutionChain = [];
const win = typeof window !== 'undefined' ? window : {};
const doc = win.document || { head: {} };
const H = (win.HTMLElement || class {
});
const plt = {
    $flags$: 0,
    $resourcesUrl$: '',
    jmp: (h) => h(),
    raf: (h) => requestAnimationFrame(h),
    ael: (el, eventName, listener, opts) => el.addEventListener(eventName, listener, opts),
    rel: (el, eventName, listener, opts) => el.removeEventListener(eventName, listener, opts),
    ce: (eventName, opts) => new CustomEvent(eventName, opts),
};
const setPlatformHelpers = (helpers) => {
    Object.assign(plt, helpers);
};
const supportsShadow = 
// TODO(STENCIL-854): Remove code related to legacy shadowDomShim field
_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.shadowDomShim && _stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.shadowDom
    ? /*@__PURE__*/ (() => (doc.head.attachShadow + '').indexOf('[native') > -1)()
    : true;
const supportsListenerOptions = /*@__PURE__*/ (() => {
    let supportsListenerOptions = false;
    try {
        doc.addEventListener('e', null, Object.defineProperty({}, 'passive', {
            get() {
                supportsListenerOptions = true;
            },
        }));
    }
    catch (e) { }
    return supportsListenerOptions;
})();
const promiseResolve = (v) => Promise.resolve(v);
const supportsConstructableStylesheets = _stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.constructableCSS
    ? /*@__PURE__*/ (() => {
        try {
            new CSSStyleSheet();
            return typeof new CSSStyleSheet().replaceSync === 'function';
        }
        catch (e) { }
        return false;
    })()
    : false;
const queueDomReads = [];
const queueDomWrites = [];
const queueDomWritesLow = [];
const queueTask = (queue, write) => (cb) => {
    queue.push(cb);
    if (!queuePending) {
        queuePending = true;
        if (write && plt.$flags$ & 4 /* PLATFORM_FLAGS.queueSync */) {
            nextTick(flush);
        }
        else {
            plt.raf(flush);
        }
    }
};
const consume = (queue) => {
    for (let i = 0; i < queue.length; i++) {
        try {
            queue[i](performance.now());
        }
        catch (e) {
            consoleError(e);
        }
    }
    queue.length = 0;
};
const consumeTimeout = (queue, timeout) => {
    let i = 0;
    let ts = 0;
    while (i < queue.length && (ts = performance.now()) < timeout) {
        try {
            queue[i++](ts);
        }
        catch (e) {
            consoleError(e);
        }
    }
    if (i === queue.length) {
        queue.length = 0;
    }
    else if (i !== 0) {
        queue.splice(0, i);
    }
};
const flush = () => {
    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.asyncQueue) {
        queueCongestion++;
    }
    // always force a bunch of medium callbacks to run, but still have
    // a throttle on how many can run in a certain time
    // DOM READS!!!
    consume(queueDomReads);
    // DOM WRITES!!!
    if (_stencil_core_internal_app_data__WEBPACK_IMPORTED_MODULE_0__.BUILD.asyncQueue) {
        const timeout = (plt.$flags$ & 6 /* PLATFORM_FLAGS.queueMask */) === 2 /* PLATFORM_FLAGS.appLoaded */
            ? performance.now() + 14 * Math.ceil(queueCongestion * (1.0 / 10.0))
            : Infinity;
        consumeTimeout(queueDomWrites, timeout);
        consumeTimeout(queueDomWritesLow, timeout);
        if (queueDomWrites.length > 0) {
            queueDomWritesLow.push(...queueDomWrites);
            queueDomWrites.length = 0;
        }
        if ((queuePending = queueDomReads.length + queueDomWrites.length + queueDomWritesLow.length > 0)) {
            // still more to do yet, but we've run out of time
            // let's let this thing cool off and try again in the next tick
            plt.raf(flush);
        }
        else {
            queueCongestion = 0;
        }
    }
    else {
        consume(queueDomWrites);
        if ((queuePending = queueDomReads.length > 0)) {
            // still more to do yet, but we've run out of time
            // let's let this thing cool off and try again in the next tick
            plt.raf(flush);
        }
    }
};
const nextTick = (cb) => promiseResolve().then(cb);
const readTask = /*@__PURE__*/ queueTask(queueDomReads, false);
const writeTask = /*@__PURE__*/ queueTask(queueDomWrites, true);




/***/ }),

/***/ "./node_modules/@stencil/core/internal/client lazy recursive ^\\.\\/.*\\.entry\\.js.*$ include: \\.entry\\.js$ exclude: \\.system\\.entry\\.js$":
/*!*****************************************************************************************************************************************************!*\
  !*** ./node_modules/@stencil/core/internal/client/ lazy ^\.\/.*\.entry\.js.*$ include: \.entry\.js$ exclude: \.system\.entry\.js$ namespace object ***!
  \*****************************************************************************************************************************************************/
/***/ ((module) => {

function webpackEmptyAsyncContext(req) {
	// Here Promise.resolve().then() is used instead of new Promise() to prevent
	// uncaught exception popping up in devtools
	return Promise.resolve().then(() => {
		var e = new Error("Cannot find module '" + req + "'");
		e.code = 'MODULE_NOT_FOUND';
		throw e;
	});
}
webpackEmptyAsyncContext.keys = () => ([]);
webpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;
webpackEmptyAsyncContext.id = "./node_modules/@stencil/core/internal/client lazy recursive ^\\.\\/.*\\.entry\\.js.*$ include: \\.entry\\.js$ exclude: \\.system\\.entry\\.js$";
module.exports = webpackEmptyAsyncContext;

/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!./node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[2]!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[3]!./node_modules/@esri/calcite-components/dist/calcite/calcite.css":
/*!************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!./node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[2]!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[3]!./node_modules/@esri/calcite-components/dist/calcite/calcite.css ***!
  \************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../css-loader/dist/runtime/sourceMaps.js */ "./node_modules/css-loader/dist/runtime/sourceMaps.js");
/* harmony import */ var _css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../css-loader/dist/runtime/api.js */ "./node_modules/css-loader/dist/runtime/api.js");
/* harmony import */ var _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);
// Imports


var ___CSS_LOADER_EXPORT___ = _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));
// Module
___CSS_LOADER_EXPORT___.push([module.id, `:root {
  --calcite-z-index-tooltip:901;
  --calcite-z-index-popup:900;
  --calcite-z-index-modal:800;
  --calcite-z-index-overlay:700;
  --calcite-z-index-dropdown:600;
  --calcite-z-index-toast:500;
  --calcite-z-index-header:400;
  --calcite-z-index-sticky:300;
  --calcite-z-index:1;
  --calcite-z-index-deep:-999999;
  --calcite-spacing-xxxl:32px;
  --calcite-spacing-xxl:20px;
  --calcite-spacing-xl:16px;
  --calcite-spacing-lg:14px;
  --calcite-spacing-md:12px;
  --calcite-spacing-sm:8px;
  --calcite-spacing-xs:6px;
  --calcite-spacing-xxs:4px;
  --calcite-spacing-base:2px;
  --calcite-spacing-px:1px;
  --calcite-size-xxxl:32px;
  --calcite-size-xxl:24px;
  --calcite-size-xl:20px;
  --calcite-size-lg:16px;
  --calcite-size-md-plus:14px;
  --calcite-size-md:12px;
  --calcite-size-sm-plus:10px;
  --calcite-size-sm:8px;
  --calcite-size-xs:6px;
  --calcite-size-xxs:4px;
  --calcite-size-xxxs:2px;
  --calcite-size-px:1px;
  --calcite-opacity-disabled:0.5;
  --calcite-opacity-full:1;
  --calcite-opacity-dark:0.85;
  --calcite-opacity-half:0.5;
  --calcite-opacity-light:0.4;
  --calcite-font-text-case-capitalize:capitalize;
  --calcite-font-text-case-lowercase:lowercase;
  --calcite-font-text-case-uppercase:uppercase;
  --calcite-font-text-case-none:none;
  --calcite-font-text-decoration-underline:underline;
  --calcite-font-text-decoration-none:none;
  --calcite-font-paragraph-spacing-normal:4px;
  --calcite-font-letter-spacing-wide:0.4;
  --calcite-font-letter-spacing-normal:0;
  --calcite-font-letter-spacing-tight:-0.4;
  --calcite-font-line-height-relative-loose:2;
  --calcite-font-line-height-relative-relaxed:1.625;
  --calcite-font-line-height-relative-normal:1.5;
  --calcite-font-line-height-relative-snug:1.375;
  --calcite-font-line-height-relative-tight:1.25;
  --calcite-font-line-height-relative:auto;
  --calcite-font-line-height-fixed-xl:24px;
  --calcite-font-line-height-fixed-lg:20px;
  --calcite-font-line-height-fixed-base:16px;
  --calcite-font-line-height-fixed-sm:12px;
  --calcite-font-style-emphasis:italic;
  --calcite-font-size-xxl:24px;
  --calcite-font-size-xl:20px;
  --calcite-font-size-lg:18px;
  --calcite-font-size-md:16px;
  --calcite-font-size:14px;
  --calcite-font-size-sm:12px;
  --calcite-font-size-xs:10px;
  --calcite-font-weight-bold:700;
  --calcite-font-weight-semibold:600;
  --calcite-font-weight-medium:500;
  --calcite-font-weight-regular:400;
  --calcite-font-weight-normal:400;
  --calcite-font-weight-light:300;
  --calcite-font-family-code:Monaco;
  --calcite-font-family:"Avenir Next LT Pro";
  --calcite-container-size-content-fixed:1440px;
  --calcite-container-size-content-fluid:100%;
  --calcite-container-size-gutter:16px;
  --calcite-container-size-margin:24px;
  --calcite-color-background-none:rgba(#ffffff, 0);
  --calcite-corner-radius-pill:100%;
  --calcite-corner-radius-round:4px;
  --calcite-corner-radius-sharp:0;
  --calcite-border-width-lg:4px;
  --calcite-border-width-md:2px;
  --calcite-border-width-sm:1px;
  --calcite-border-width-none:0;
  --calcite-shadow-md:0 4px 20px 0 rgba(0, 0, 0, 0.08), 0 12px 30px rgba(0, 0, 0, 0.1);
  --calcite-shadow-sm:0 2px 8px 0 rgba(0, 0, 0, 0.04), 0 4px 16px 0 rgba(0, 0, 0, 0.08);
  --calcite-shadow-none:0 0 0 0 rgba(0, 0, 0, 0);
  --calcite-corner-radius:var(--calcite-corner-radius-sharp);
}

.calcite-typography-hierarchy-overline {
  line-height: var(--calcite-font-line-height-fixed-sm);
  text-case: var(--calcite-font-text-case-uppercase);
  font-weight: var(--calcite-font-weight-bold);
}

.calcite-typography-wrap-bold-minus-1 {
  font-weight: var(--calcite-font-weight-semibold);
  line-height: var(--calcite-font-line-height-relative-snug);
}

.calcite-typography-wrap-bold-minus-2 {
  font-weight: var(--calcite-font-weight-semibold);
  line-height: var(--calcite-font-line-height-relative-snug);
  font-size: var(--calcite-font-size-sm);
}

.calcite-typography-wrap-bold-3 {
  font-weight: var(--calcite-font-weight-semibold);
  line-height: var(--calcite-font-line-height-relative-snug);
  font-size: var(--calcite-font-size-xxl);
}

.calcite-typography-wrap-bold-2 {
  font-weight: var(--calcite-font-weight-semibold);
  line-height: var(--calcite-font-line-height-relative-snug);
  font-size: var(--calcite-font-size-xl);
}

.calcite-typography-wrap-bold-1 {
  font-weight: var(--calcite-font-weight-semibold);
  line-height: var(--calcite-font-line-height-relative-snug);
  font-size: var(--calcite-font-size-lg);
}

.calcite-typography-wrap-bold-0 {
  font-weight: var(--calcite-font-weight-semibold);
  line-height: var(--calcite-font-line-height-relative-snug);
  font-size: var(--calcite-font-size-md);
}

.calcite-typography-wrap-medium-minus-1 {
  font-weight: var(--calcite-font-weight-medium);
  line-height: var(--calcite-font-line-height-relative-snug);
}

.calcite-typography-wrap-medium-minus-2 {
  font-weight: var(--calcite-font-weight-medium);
  line-height: var(--calcite-font-line-height-relative-snug);
  font-size: var(--calcite-font-size-sm);
}

.calcite-typography-wrap-medium-3 {
  font-weight: var(--calcite-font-weight-medium);
  line-height: var(--calcite-font-line-height-relative-snug);
  font-size: var(--calcite-font-size-xxl);
}

.calcite-typography-wrap-medium-2 {
  font-weight: var(--calcite-font-weight-medium);
  line-height: var(--calcite-font-line-height-relative-snug);
  font-size: var(--calcite-font-size-xl);
}

.calcite-typography-wrap-medium-1 {
  font-weight: var(--calcite-font-weight-medium);
  line-height: var(--calcite-font-line-height-relative-snug);
  font-size: var(--calcite-font-size-lg);
}

.calcite-typography-wrap-medium-0 {
  font-weight: var(--calcite-font-weight-medium);
  line-height: var(--calcite-font-line-height-relative-snug);
  font-size: var(--calcite-font-size-md);
}

.calcite-typography-wrap-regular-minus-1 {
  line-height: var(--calcite-font-line-height-relative-snug);
}

.calcite-typography-wrap-regular-minus-2 {
  line-height: var(--calcite-font-line-height-relative-snug);
  font-size: var(--calcite-font-size-sm);
}

.calcite-typography-wrap-regular-3 {
  line-height: var(--calcite-font-line-height-relative-snug);
  font-size: var(--calcite-font-size-xxl);
}

.calcite-typography-wrap-regular-2 {
  line-height: var(--calcite-font-line-height-relative-snug);
  font-size: var(--calcite-font-size-xl);
}

.calcite-typography-wrap-regular-1 {
  line-height: var(--calcite-font-line-height-relative-snug);
  font-size: var(--calcite-font-size-lg);
}

.calcite-typography-wrap-regular-0 {
  line-height: var(--calcite-font-line-height-relative-snug);
  font-size: var(--calcite-font-size-md);
}

.calcite-typography-wrap-light-minus-1 {
  font-weight: var(--calcite-font-weight-light);
  line-height: var(--calcite-font-line-height-relative-snug);
}

.calcite-typography-wrap-light-minus-2 {
  font-weight: var(--calcite-font-weight-light);
  line-height: var(--calcite-font-line-height-relative-snug);
  font-size: var(--calcite-font-size-sm);
}

.calcite-typography-wrap-light-3 {
  font-weight: var(--calcite-font-weight-light);
  line-height: var(--calcite-font-line-height-relative-tight);
  font-size: var(--calcite-font-size-xxl);
}

.calcite-typography-wrap-light-2 {
  font-weight: var(--calcite-font-weight-light);
  line-height: var(--calcite-font-line-height-relative-snug);
  font-size: var(--calcite-font-size-xl);
}

.calcite-typography-wrap-light-1 {
  font-weight: var(--calcite-font-weight-light);
  line-height: var(--calcite-font-line-height-relative-snug);
  font-size: var(--calcite-font-size-lg);
}

.calcite-typography-wrap-light-0 {
  font-weight: var(--calcite-font-weight-light);
  line-height: var(--calcite-font-line-height-relative-snug);
  font-size: var(--calcite-font-size-md);
}

.calcite-typography-bold-1h {
  font-weight: var(--calcite-font-weight-semibold);
  line-height: var(--calcite-font-line-height-fixed-xl);
  font-size: var(--calcite-font-size-lg);
}

.calcite-typography-bold-0h {
  font-weight: var(--calcite-font-weight-semibold);
  line-height: var(--calcite-font-line-height-fixed-lg);
  font-size: var(--calcite-font-size-md);
}

.calcite-typography-bold-minus-1h {
  font-weight: var(--calcite-font-weight-semibold);
}

.calcite-typography-bold-minus-2h {
  font-weight: var(--calcite-font-weight-semibold);
  font-size: var(--calcite-font-size-sm);
}

.calcite-typography-bold-minus-3h {
  font-weight: var(--calcite-font-weight-semibold);
  line-height: var(--calcite-font-line-height-fixed-sm);
  font-size: var(--calcite-font-size-xs);
}

.calcite-typography-medium-1h {
  font-weight: var(--calcite-font-weight-medium);
  line-height: var(--calcite-font-line-height-fixed-xl);
  font-size: var(--calcite-font-size-lg);
}

.calcite-typography-medium-0h {
  font-weight: var(--calcite-font-weight-medium);
  line-height: var(--calcite-font-line-height-fixed-lg);
  font-size: var(--calcite-font-size-md);
}

.calcite-typography-medium-minus-1h {
  font-weight: var(--calcite-font-weight-medium);
}

.calcite-typography-medium-minus-2h {
  font-weight: var(--calcite-font-weight-medium);
  font-size: var(--calcite-font-size-sm);
}

.calcite-typography-medium-minus-3h {
  font-weight: var(--calcite-font-weight-medium);
  line-height: var(--calcite-font-line-height-fixed-sm);
  font-size: var(--calcite-font-size-xs);
}

.calcite-typography-regular-1h {
  line-height: var(--calcite-font-line-height-fixed-xl);
  font-size: var(--calcite-font-size-lg);
}

.calcite-typography-regular-0h {
  line-height: var(--calcite-font-line-height-fixed-lg);
  font-size: var(--calcite-font-size-md);
}

.calcite-typography-regular-minus-2h {
  font-size: var(--calcite-font-size-sm);
}

.calcite-typography-regular-minus-3h {
  line-height: var(--calcite-font-line-height-fixed-sm);
  font-size: var(--calcite-font-size-xs);
}

.calcite-typography-light-1h {
  font-size: var(--calcite-font-size-lg);
  font-weight: var(--calcite-font-weight-light);
  line-height: var(--calcite-font-line-height-fixed-xl);
}

.calcite-typography-light-0h {
  font-size: var(--calcite-font-size-md);
  font-weight: var(--calcite-font-weight-light);
  line-height: var(--calcite-font-line-height-fixed-lg);
}

.calcite-typography-light-minus-1h {
  font-weight: var(--calcite-font-weight-light);
}

.calcite-typography-light-minus-2h {
  font-size: var(--calcite-font-size-sm);
  font-weight: var(--calcite-font-weight-light);
}

.calcite-typography-light-minus-3h {
  font-size: var(--calcite-font-size-xs);
  font-weight: var(--calcite-font-weight-light);
  line-height: var(--calcite-font-line-height-fixed-sm);
}

.calcite-typography {
  font-family: var(--calcite-font-family);
  font-size: var(--calcite-font-size);
  font-weight: var(--calcite-font-weight-regular);
  letter-spacing: var(--calcite-font-letter-spacing-normal);
  line-height: var(--calcite-font-line-height-fixed-base);
  paragraph-spacing: var(--calcite-font-paragraph-spacing-normal);
  text-case: var(--calcite-font-text-case-none);
  text-decoration: var(--calcite-font-text-decoration-none);
}

.calcite-typography-hierarchy-caption {
  line-height: 1.375;
  font-size: 12px;
}

.calcite-typography-hierarchy-body {
  font-family: "Avenir Next LT Pro";
  font-size: 14px;
  font-weight: 400;
  letter-spacing: 0;
  line-height: 16px;
  paragraph-spacing: 4px;
  text-case: none;
  text-decoration: none;
}

.calcite-typography-hierarchy-body-snug {
  line-height: 1.375;
}

.calcite-typography-hierarchy-heading-5 {
  font-weight: 500;
  line-height: 1.375;
}

.calcite-typography-hierarchy-heading-4 {
  font-weight: 500;
  line-height: 1.375;
  font-size: 16px;
}

.calcite-typography-hierarchy-heading-3 {
  font-weight: 500;
  line-height: 1.375;
  font-size: 18px;
}

.calcite-typography-hierarchy-heading-2 {
  font-weight: 500;
  line-height: 1.375;
  font-size: 20px;
}

.calcite-typography-hierarchy-heading-1 {
  font-weight: 500;
  line-height: 1.375;
  font-size: 24px;
}

.calcite-typography-hierarchy-display-2 {
  font-weight: 600;
  line-height: 1.375;
  font-size: 20px;
}

.calcite-typography-hierarchy-display-1 {
  font-weight: 600;
  line-height: 1.375;
  font-size: 24px;
}

.calcite-typography-regular-minus-1h {
  font-family: "Avenir Next LT Pro";
  font-size: 14px;
  font-weight: 400;
  letter-spacing: 0;
  line-height: 16px;
  paragraph-spacing: 4px;
  text-case: none;
  text-decoration: none;
}

@media (prefers-color-scheme: light) {
  :root {
    --calcite-color-border-white:#ffffff;
    --calcite-color-border-ghost:rgba(0, 0, 0, 0.3);
    --calcite-color-border-input:#949494;
    --calcite-color-border-3:#dfdfdf;
    --calcite-color-border-2:#d4d4d4;
    --calcite-color-border-1:#cacaca;
    --calcite-color-text-link:#00619b;
    --calcite-color-text-inverse:#ffffff;
    --calcite-color-text-3:#6a6a6a;
    --calcite-color-text-2:#4a4a4a;
    --calcite-color-text-1:#151515;
    --calcite-color-inverse-press:#202020;
    --calcite-color-inverse-hover:#2b2b2b;
    --calcite-color-inverse:#353535;
    --calcite-color-status-danger-press:#7c1d13;
    --calcite-color-status-danger-hover:#a82b1e;
    --calcite-color-status-danger:#d83020;
    --calcite-color-status-warning-press:#bfa200;
    --calcite-color-status-warning-hover:#d9bc00;
    --calcite-color-status-warning:#edd317;
    --calcite-color-status-success-press:#1a6324;
    --calcite-color-status-success-hover:#288835;
    --calcite-color-status-success:#35ac46;
    --calcite-color-status-info-press:#00304d;
    --calcite-color-status-info-hover:#004874;
    --calcite-color-status-info:#00619b;
    --calcite-color-brand-underline:rgba(0, 97, 155, 0.4);
    --calcite-color-brand-press:#004874;
    --calcite-color-brand-hover:#00619b;
    --calcite-color-brand:#007ac2;
    --calcite-color-transparent-tint:rgba(255, 255, 255, 0.8);
    --calcite-color-transparent-scrim:rgba(255, 255, 255, 0.85);
    --calcite-color-transparent-press:rgba(0, 0, 0, 0.08);
    --calcite-color-transparent-hover:rgba(0, 0, 0, 0.04);
    --calcite-color-transparent:rgba(0, 0, 0, 0);
    --calcite-color-foreground-current:#c7eaff;
    --calcite-color-foreground-3:#eaeaea;
    --calcite-color-foreground-2:#f3f3f3;
    --calcite-color-foreground-1:#ffffff;
    --calcite-color-background:#f8f8f8;
  }
}
@media (prefers-color-scheme: dark) {
  :root {
    --calcite-color-border-white:#f8f8f8;
    --calcite-color-border-ghost:rgba(117, 117, 117, 0.3);
    --calcite-color-border-input:#757575;
    --calcite-color-border-3:#404040;
    --calcite-color-border-2:#4a4a4a;
    --calcite-color-border-1:#555555;
    --calcite-color-text-link:#00A0FF;
    --calcite-color-text-inverse:#151515;
    --calcite-color-text-3:#9f9f9f;
    --calcite-color-text-2:#bfbfbf;
    --calcite-color-text-1:#ffffff;
    --calcite-color-inverse-press:#f3f3f3;
    --calcite-color-inverse-hover:#ffffff;
    --calcite-color-inverse:#f8f8f8;
    --calcite-color-status-danger-press:#d90012;
    --calcite-color-status-danger-hover:#ff0015;
    --calcite-color-status-danger:#FE583E;
    --calcite-color-status-warning-press:#f5d000;
    --calcite-color-status-warning-hover:#ffee33;
    --calcite-color-status-warning:#FFC900;
    --calcite-color-status-success-press:#00b81b;
    --calcite-color-status-success-hover:#3bed52;
    --calcite-color-status-success:#36DA43;
    --calcite-color-status-info-press:#009af2;
    --calcite-color-status-info-hover:#3db8ff;
    --calcite-color-status-info:#00A0FF;
    --calcite-color-brand-underline:rgba(0, 160, 255, 0.4);
    --calcite-color-brand-press:#00619b;
    --calcite-color-brand-hover:#007ac2;
    --calcite-color-brand:#009af2;
    --calcite-color-transparent-tint:rgba(43, 43, 43, 0.8);
    --calcite-color-transparent-scrim:rgba(0, 0, 0, 0.85);
    --calcite-color-transparent-press:rgba(255, 255, 255, 0.08);
    --calcite-color-transparent-hover:rgba(255, 255, 255, 0.04);
    --calcite-color-transparent:rgba(255, 255, 255, 0);
    --calcite-color-foreground-current:#214155;
    --calcite-color-foreground-3:#151515;
    --calcite-color-foreground-2:#202020;
    --calcite-color-foreground-1:#2b2b2b;
    --calcite-color-background:#353535;
  }
}
.calcite-mode-light {
  --calcite-color-border-white:#ffffff;
  --calcite-color-border-ghost:rgba(0, 0, 0, 0.3);
  --calcite-color-border-input:#949494;
  --calcite-color-border-3:#dfdfdf;
  --calcite-color-border-2:#d4d4d4;
  --calcite-color-border-1:#cacaca;
  --calcite-color-text-link:#00619b;
  --calcite-color-text-inverse:#ffffff;
  --calcite-color-text-3:#6a6a6a;
  --calcite-color-text-2:#4a4a4a;
  --calcite-color-text-1:#151515;
  --calcite-color-inverse-press:#202020;
  --calcite-color-inverse-hover:#2b2b2b;
  --calcite-color-inverse:#353535;
  --calcite-color-status-danger-press:#7c1d13;
  --calcite-color-status-danger-hover:#a82b1e;
  --calcite-color-status-danger:#d83020;
  --calcite-color-status-warning-press:#bfa200;
  --calcite-color-status-warning-hover:#d9bc00;
  --calcite-color-status-warning:#edd317;
  --calcite-color-status-success-press:#1a6324;
  --calcite-color-status-success-hover:#288835;
  --calcite-color-status-success:#35ac46;
  --calcite-color-status-info-press:#00304d;
  --calcite-color-status-info-hover:#004874;
  --calcite-color-status-info:#00619b;
  --calcite-color-brand-underline:rgba(0, 97, 155, 0.4);
  --calcite-color-brand-press:#004874;
  --calcite-color-brand-hover:#00619b;
  --calcite-color-brand:#007ac2;
  --calcite-color-transparent-tint:rgba(255, 255, 255, 0.8);
  --calcite-color-transparent-scrim:rgba(255, 255, 255, 0.85);
  --calcite-color-transparent-press:rgba(0, 0, 0, 0.08);
  --calcite-color-transparent-hover:rgba(0, 0, 0, 0.04);
  --calcite-color-transparent:rgba(0, 0, 0, 0);
  --calcite-color-foreground-current:#c7eaff;
  --calcite-color-foreground-3:#eaeaea;
  --calcite-color-foreground-2:#f3f3f3;
  --calcite-color-foreground-1:#ffffff;
  --calcite-color-background:#f8f8f8;
}

.calcite-mode-dark {
  --calcite-color-border-white:#f8f8f8;
  --calcite-color-border-ghost:rgba(117, 117, 117, 0.3);
  --calcite-color-border-input:#757575;
  --calcite-color-border-3:#404040;
  --calcite-color-border-2:#4a4a4a;
  --calcite-color-border-1:#555555;
  --calcite-color-text-link:#00A0FF;
  --calcite-color-text-inverse:#151515;
  --calcite-color-text-3:#9f9f9f;
  --calcite-color-text-2:#bfbfbf;
  --calcite-color-text-1:#ffffff;
  --calcite-color-inverse-press:#f3f3f3;
  --calcite-color-inverse-hover:#ffffff;
  --calcite-color-inverse:#f8f8f8;
  --calcite-color-status-danger-press:#d90012;
  --calcite-color-status-danger-hover:#ff0015;
  --calcite-color-status-danger:#FE583E;
  --calcite-color-status-warning-press:#f5d000;
  --calcite-color-status-warning-hover:#ffee33;
  --calcite-color-status-warning:#FFC900;
  --calcite-color-status-success-press:#00b81b;
  --calcite-color-status-success-hover:#3bed52;
  --calcite-color-status-success:#36DA43;
  --calcite-color-status-info-press:#009af2;
  --calcite-color-status-info-hover:#3db8ff;
  --calcite-color-status-info:#00A0FF;
  --calcite-color-brand-underline:rgba(0, 160, 255, 0.4);
  --calcite-color-brand-press:#00619b;
  --calcite-color-brand-hover:#007ac2;
  --calcite-color-brand:#009af2;
  --calcite-color-transparent-tint:rgba(43, 43, 43, 0.8);
  --calcite-color-transparent-scrim:rgba(0, 0, 0, 0.85);
  --calcite-color-transparent-press:rgba(255, 255, 255, 0.08);
  --calcite-color-transparent-hover:rgba(255, 255, 255, 0.04);
  --calcite-color-transparent:rgba(255, 255, 255, 0);
  --calcite-color-foreground-current:#214155;
  --calcite-color-foreground-3:#151515;
  --calcite-color-foreground-2:#202020;
  --calcite-color-foreground-1:#2b2b2b;
  --calcite-color-background:#353535;
}

:root {
  --calcite-code-family:"Consolas", "Andale Mono", "Lucida Console", "Monaco", monospace;
  --calcite-sans-family:"Avenir Next", "Avenir", "Helvetica Neue", sans-serif;
  --calcite-font-size--3:0.625rem;
  --calcite-font-size--2:0.75rem;
  --calcite-font-size--1:0.875rem;
  --calcite-font-size-0:1rem;
  --calcite-font-size-1:1.125rem;
  --calcite-font-size-2:1.25rem;
  --calcite-font-size-3:1.625rem;
  --calcite-font-size-4:2rem;
  --calcite-font-size-5:2.5rem;
  --calcite-font-size-6:3rem;
  --calcite-font-size-7:3.5rem;
  --calcite-font-size-8:4rem;
  --calcite-font-weight-light:300;
  --calcite-font-weight-normal:400;
  --calcite-font-weight-medium:500;
  --calcite-font-weight-bold:600;
  --calcite-floating-ui-transition:var(--calcite-animation-timing);
  --calcite-floating-ui-z-index:var(--calcite-z-index-dropdown);
  --calcite-animation-timing:calc(150ms * var(--calcite-internal-duration-factor));
  --calcite-internal-duration-factor:var(--calcite-duration-factor, 1);
  --calcite-internal-animation-timing-fast:calc(100ms * var(--calcite-internal-duration-factor));
  --calcite-internal-animation-timing-medium:calc(200ms * var(--calcite-internal-duration-factor));
  --calcite-internal-animation-timing-slow:calc(300ms * var(--calcite-internal-duration-factor));
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  --calcite-popover-z-index:var(--calcite-z-index-popup);
  --calcite-border-radius:var(--calcite-border-radius-round, 4px);
  --calcite-border-radius-base:0;
  --calcite-offset-invert-focus:0;
  --calcite-panel-width-multiplier:1;
  --calcite-ui-icon-color:currentColor;
  font-family: var(--calcite-sans-family);
}

@media (prefers-color-scheme: dark) {
  .calcite-mode-auto {
    --calcite-color-border-white:#f8f8f8;
    --calcite-color-border-ghost:rgba(117, 117, 117, 0.3);
    --calcite-color-border-input:#757575;
    --calcite-color-border-3:#404040;
    --calcite-color-border-2:#4a4a4a;
    --calcite-color-border-1:#555555;
    --calcite-color-text-link:#00A0FF;
    --calcite-color-text-inverse:#151515;
    --calcite-color-text-3:#9f9f9f;
    --calcite-color-text-2:#bfbfbf;
    --calcite-color-text-1:#ffffff;
    --calcite-color-inverse-press:#f3f3f3;
    --calcite-color-inverse-hover:#ffffff;
    --calcite-color-inverse:#f8f8f8;
    --calcite-color-status-danger-press:#d90012;
    --calcite-color-status-danger-hover:#ff0015;
    --calcite-color-status-danger:#FE583E;
    --calcite-color-status-warning-press:#f5d000;
    --calcite-color-status-warning-hover:#ffee33;
    --calcite-color-status-warning:#FFC900;
    --calcite-color-status-success-press:#00b81b;
    --calcite-color-status-success-hover:#3bed52;
    --calcite-color-status-success:#36DA43;
    --calcite-color-status-info-press:#009af2;
    --calcite-color-status-info-hover:#3db8ff;
    --calcite-color-status-info:#00A0FF;
    --calcite-color-brand-underline:rgba(0, 160, 255, 0.4);
    --calcite-color-brand-press:#00619b;
    --calcite-color-brand-hover:#007ac2;
    --calcite-color-brand:#009af2;
    --calcite-color-transparent-tint:rgba(43, 43, 43, 0.8);
    --calcite-color-transparent-scrim:rgba(0, 0, 0, 0.85);
    --calcite-color-transparent-press:rgba(255, 255, 255, 0.08);
    --calcite-color-transparent-hover:rgba(255, 255, 255, 0.04);
    --calcite-color-transparent:rgba(255, 255, 255, 0);
    --calcite-color-foreground-current:#214155;
    --calcite-color-foreground-3:#151515;
    --calcite-color-foreground-2:#202020;
    --calcite-color-foreground-1:#2b2b2b;
    --calcite-color-background:#353535;
  }
}
@media (prefers-color-scheme: light) {
  .calcite-mode-auto {
    --calcite-color-border-white:#ffffff;
    --calcite-color-border-ghost:rgba(0, 0, 0, 0.3);
    --calcite-color-border-input:#949494;
    --calcite-color-border-3:#dfdfdf;
    --calcite-color-border-2:#d4d4d4;
    --calcite-color-border-1:#cacaca;
    --calcite-color-text-link:#00619b;
    --calcite-color-text-inverse:#ffffff;
    --calcite-color-text-3:#6a6a6a;
    --calcite-color-text-2:#4a4a4a;
    --calcite-color-text-1:#151515;
    --calcite-color-inverse-press:#202020;
    --calcite-color-inverse-hover:#2b2b2b;
    --calcite-color-inverse:#353535;
    --calcite-color-status-danger-press:#7c1d13;
    --calcite-color-status-danger-hover:#a82b1e;
    --calcite-color-status-danger:#d83020;
    --calcite-color-status-warning-press:#bfa200;
    --calcite-color-status-warning-hover:#d9bc00;
    --calcite-color-status-warning:#edd317;
    --calcite-color-status-success-press:#1a6324;
    --calcite-color-status-success-hover:#288835;
    --calcite-color-status-success:#35ac46;
    --calcite-color-status-info-press:#00304d;
    --calcite-color-status-info-hover:#004874;
    --calcite-color-status-info:#00619b;
    --calcite-color-brand-underline:rgba(0, 97, 155, 0.4);
    --calcite-color-brand-press:#004874;
    --calcite-color-brand-hover:#00619b;
    --calcite-color-brand:#007ac2;
    --calcite-color-transparent-tint:rgba(255, 255, 255, 0.8);
    --calcite-color-transparent-scrim:rgba(255, 255, 255, 0.85);
    --calcite-color-transparent-press:rgba(0, 0, 0, 0.08);
    --calcite-color-transparent-hover:rgba(0, 0, 0, 0.04);
    --calcite-color-transparent:rgba(0, 0, 0, 0);
    --calcite-color-foreground-current:#c7eaff;
    --calcite-color-foreground-3:#eaeaea;
    --calcite-color-foreground-2:#f3f3f3;
    --calcite-color-foreground-1:#ffffff;
    --calcite-color-background:#f8f8f8;
  }
}
@media (prefers-reduced-motion: reduce) {
  :root {
    --calcite-internal-duration-factor:0.01;
  }
}
@keyframes in {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}
@keyframes in-down {
  0% {
    opacity: 0;
    transform: translate3D(0, -5px, 0);
  }
  100% {
    opacity: 1;
    transform: translate3D(0, 0, 0);
  }
}
@keyframes in-up {
  0% {
    opacity: 0;
    transform: translate3D(0, 5px, 0);
  }
  100% {
    opacity: 1;
    transform: translate3D(0, 0, 0);
  }
}
@keyframes in-right {
  0% {
    opacity: 0;
    transform: translate3D(-5px, 0, 0);
  }
  100% {
    opacity: 1;
    transform: translate3D(0, 0, 0);
  }
}
@keyframes in-left {
  0% {
    opacity: 0;
    transform: translate3D(5px, 0, 0);
  }
  100% {
    opacity: 1;
    transform: translate3D(0, 0, 0);
  }
}
@keyframes in-scale {
  0% {
    opacity: 0;
    transform: scale3D(0.95, 0.95, 1);
  }
  100% {
    opacity: 1;
    transform: scale3D(1, 1, 1);
  }
}
.calcite-animate {
  opacity: 0;
  animation-fill-mode: both;
  animation-duration: var(--calcite-animation-timing);
}

.calcite-animate__in {
  animation-name: in;
}

.calcite-animate__in-down {
  animation-name: in-down;
}

.calcite-animate__in-up {
  animation-name: in-up;
}

.calcite-animate__in-right {
  animation-name: in-right;
}

.calcite-animate__in-left {
  animation-name: in-left;
}

.calcite-animate__in-scale {
  animation-name: in-scale;
}

.calcite-sortable--ghost, .calcite-sortable--drag {
  overflow: hidden;
}

.calcite-sortable--ghost::before {
  content: "";
  position: absolute;
  inset: 0px;
  z-index: var(--calcite-z-index);
  box-sizing: border-box;
  border-width: 1px;
  border-style: dashed;
  border-color: var(--calcite-color-brand);
  background-color: var(--calcite-color-foreground-2);
}

.calcite-sortable--drag {
  --tw-shadow:0 6px 20px -4px rgba(0, 0, 0, 0.1), 0 4px 12px -2px rgba(0, 0, 0, 0.08);
  --tw-shadow-colored:0 6px 20px -4px var(--tw-shadow-color), 0 4px 12px -2px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 rgba(0, 0, 0, 0)), var(--tw-ring-shadow, 0 0 rgba(0, 0, 0, 0)), var(--tw-shadow);
}`, "",{"version":3,"sources":["webpack://./node_modules/@esri/calcite-components/dist/calcite/calcite.css"],"names":[],"mappings":"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","sourcesContent":[":root{--calcite-z-index-tooltip:901;--calcite-z-index-popup:900;--calcite-z-index-modal:800;--calcite-z-index-overlay:700;--calcite-z-index-dropdown:600;--calcite-z-index-toast:500;--calcite-z-index-header:400;--calcite-z-index-sticky:300;--calcite-z-index:1;--calcite-z-index-deep:-999999;--calcite-spacing-xxxl:32px;--calcite-spacing-xxl:20px;--calcite-spacing-xl:16px;--calcite-spacing-lg:14px;--calcite-spacing-md:12px;--calcite-spacing-sm:8px;--calcite-spacing-xs:6px;--calcite-spacing-xxs:4px;--calcite-spacing-base:2px;--calcite-spacing-px:1px;--calcite-size-xxxl:32px;--calcite-size-xxl:24px;--calcite-size-xl:20px;--calcite-size-lg:16px;--calcite-size-md-plus:14px;--calcite-size-md:12px;--calcite-size-sm-plus:10px;--calcite-size-sm:8px;--calcite-size-xs:6px;--calcite-size-xxs:4px;--calcite-size-xxxs:2px;--calcite-size-px:1px;--calcite-opacity-disabled:0.5;--calcite-opacity-full:1;--calcite-opacity-dark:0.85;--calcite-opacity-half:0.5;--calcite-opacity-light:0.4;--calcite-font-text-case-capitalize:capitalize;--calcite-font-text-case-lowercase:lowercase;--calcite-font-text-case-uppercase:uppercase;--calcite-font-text-case-none:none;--calcite-font-text-decoration-underline:underline;--calcite-font-text-decoration-none:none;--calcite-font-paragraph-spacing-normal:4px;--calcite-font-letter-spacing-wide:0.4;--calcite-font-letter-spacing-normal:0;--calcite-font-letter-spacing-tight:-0.4;--calcite-font-line-height-relative-loose:2;--calcite-font-line-height-relative-relaxed:1.625;--calcite-font-line-height-relative-normal:1.5;--calcite-font-line-height-relative-snug:1.375;--calcite-font-line-height-relative-tight:1.25;--calcite-font-line-height-relative:auto;--calcite-font-line-height-fixed-xl:24px;--calcite-font-line-height-fixed-lg:20px;--calcite-font-line-height-fixed-base:16px;--calcite-font-line-height-fixed-sm:12px;--calcite-font-style-emphasis:italic;--calcite-font-size-xxl:24px;--calcite-font-size-xl:20px;--calcite-font-size-lg:18px;--calcite-font-size-md:16px;--calcite-font-size:14px;--calcite-font-size-sm:12px;--calcite-font-size-xs:10px;--calcite-font-weight-bold:700;--calcite-font-weight-semibold:600;--calcite-font-weight-medium:500;--calcite-font-weight-regular:400;--calcite-font-weight-normal:400;--calcite-font-weight-light:300;--calcite-font-family-code:Monaco;--calcite-font-family:\"Avenir Next LT Pro\";--calcite-container-size-content-fixed:1440px;--calcite-container-size-content-fluid:100%;--calcite-container-size-gutter:16px;--calcite-container-size-margin:24px;--calcite-color-background-none:rgba(#ffffff, 0);--calcite-corner-radius-pill:100%;--calcite-corner-radius-round:4px;--calcite-corner-radius-sharp:0;--calcite-border-width-lg:4px;--calcite-border-width-md:2px;--calcite-border-width-sm:1px;--calcite-border-width-none:0;--calcite-shadow-md:0 4px 20px 0 rgba(0, 0, 0, 0.08), 0 12px 30px rgba(0, 0, 0, 0.1);--calcite-shadow-sm:0 2px 8px 0 rgba(0, 0, 0, 0.04), 0 4px 16px 0 rgba(0, 0, 0, 0.08);--calcite-shadow-none:0 0 0 0 rgba(0, 0, 0, 0);--calcite-corner-radius:var(--calcite-corner-radius-sharp)}.calcite-typography-hierarchy-overline{line-height:var(--calcite-font-line-height-fixed-sm);text-case:var(--calcite-font-text-case-uppercase);font-weight:var(--calcite-font-weight-bold)}.calcite-typography-wrap-bold-minus-1{font-weight:var(--calcite-font-weight-semibold);line-height:var(--calcite-font-line-height-relative-snug)}.calcite-typography-wrap-bold-minus-2{font-weight:var(--calcite-font-weight-semibold);line-height:var(--calcite-font-line-height-relative-snug);font-size:var(--calcite-font-size-sm)}.calcite-typography-wrap-bold-3{font-weight:var(--calcite-font-weight-semibold);line-height:var(--calcite-font-line-height-relative-snug);font-size:var(--calcite-font-size-xxl)}.calcite-typography-wrap-bold-2{font-weight:var(--calcite-font-weight-semibold);line-height:var(--calcite-font-line-height-relative-snug);font-size:var(--calcite-font-size-xl)}.calcite-typography-wrap-bold-1{font-weight:var(--calcite-font-weight-semibold);line-height:var(--calcite-font-line-height-relative-snug);font-size:var(--calcite-font-size-lg)}.calcite-typography-wrap-bold-0{font-weight:var(--calcite-font-weight-semibold);line-height:var(--calcite-font-line-height-relative-snug);font-size:var(--calcite-font-size-md)}.calcite-typography-wrap-medium-minus-1{font-weight:var(--calcite-font-weight-medium);line-height:var(--calcite-font-line-height-relative-snug)}.calcite-typography-wrap-medium-minus-2{font-weight:var(--calcite-font-weight-medium);line-height:var(--calcite-font-line-height-relative-snug);font-size:var(--calcite-font-size-sm)}.calcite-typography-wrap-medium-3{font-weight:var(--calcite-font-weight-medium);line-height:var(--calcite-font-line-height-relative-snug);font-size:var(--calcite-font-size-xxl)}.calcite-typography-wrap-medium-2{font-weight:var(--calcite-font-weight-medium);line-height:var(--calcite-font-line-height-relative-snug);font-size:var(--calcite-font-size-xl)}.calcite-typography-wrap-medium-1{font-weight:var(--calcite-font-weight-medium);line-height:var(--calcite-font-line-height-relative-snug);font-size:var(--calcite-font-size-lg)}.calcite-typography-wrap-medium-0{font-weight:var(--calcite-font-weight-medium);line-height:var(--calcite-font-line-height-relative-snug);font-size:var(--calcite-font-size-md)}.calcite-typography-wrap-regular-minus-1{line-height:var(--calcite-font-line-height-relative-snug)}.calcite-typography-wrap-regular-minus-2{line-height:var(--calcite-font-line-height-relative-snug);font-size:var(--calcite-font-size-sm)}.calcite-typography-wrap-regular-3{line-height:var(--calcite-font-line-height-relative-snug);font-size:var(--calcite-font-size-xxl)}.calcite-typography-wrap-regular-2{line-height:var(--calcite-font-line-height-relative-snug);font-size:var(--calcite-font-size-xl)}.calcite-typography-wrap-regular-1{line-height:var(--calcite-font-line-height-relative-snug);font-size:var(--calcite-font-size-lg)}.calcite-typography-wrap-regular-0{line-height:var(--calcite-font-line-height-relative-snug);font-size:var(--calcite-font-size-md)}.calcite-typography-wrap-light-minus-1{font-weight:var(--calcite-font-weight-light);line-height:var(--calcite-font-line-height-relative-snug)}.calcite-typography-wrap-light-minus-2{font-weight:var(--calcite-font-weight-light);line-height:var(--calcite-font-line-height-relative-snug);font-size:var(--calcite-font-size-sm)}.calcite-typography-wrap-light-3{font-weight:var(--calcite-font-weight-light);line-height:var(--calcite-font-line-height-relative-tight);font-size:var(--calcite-font-size-xxl)}.calcite-typography-wrap-light-2{font-weight:var(--calcite-font-weight-light);line-height:var(--calcite-font-line-height-relative-snug);font-size:var(--calcite-font-size-xl)}.calcite-typography-wrap-light-1{font-weight:var(--calcite-font-weight-light);line-height:var(--calcite-font-line-height-relative-snug);font-size:var(--calcite-font-size-lg)}.calcite-typography-wrap-light-0{font-weight:var(--calcite-font-weight-light);line-height:var(--calcite-font-line-height-relative-snug);font-size:var(--calcite-font-size-md)}.calcite-typography-bold-1h{font-weight:var(--calcite-font-weight-semibold);line-height:var(--calcite-font-line-height-fixed-xl);font-size:var(--calcite-font-size-lg)}.calcite-typography-bold-0h{font-weight:var(--calcite-font-weight-semibold);line-height:var(--calcite-font-line-height-fixed-lg);font-size:var(--calcite-font-size-md)}.calcite-typography-bold-minus-1h{font-weight:var(--calcite-font-weight-semibold)}.calcite-typography-bold-minus-2h{font-weight:var(--calcite-font-weight-semibold);font-size:var(--calcite-font-size-sm)}.calcite-typography-bold-minus-3h{font-weight:var(--calcite-font-weight-semibold);line-height:var(--calcite-font-line-height-fixed-sm);font-size:var(--calcite-font-size-xs)}.calcite-typography-medium-1h{font-weight:var(--calcite-font-weight-medium);line-height:var(--calcite-font-line-height-fixed-xl);font-size:var(--calcite-font-size-lg)}.calcite-typography-medium-0h{font-weight:var(--calcite-font-weight-medium);line-height:var(--calcite-font-line-height-fixed-lg);font-size:var(--calcite-font-size-md)}.calcite-typography-medium-minus-1h{font-weight:var(--calcite-font-weight-medium)}.calcite-typography-medium-minus-2h{font-weight:var(--calcite-font-weight-medium);font-size:var(--calcite-font-size-sm)}.calcite-typography-medium-minus-3h{font-weight:var(--calcite-font-weight-medium);line-height:var(--calcite-font-line-height-fixed-sm);font-size:var(--calcite-font-size-xs)}.calcite-typography-regular-1h{line-height:var(--calcite-font-line-height-fixed-xl);font-size:var(--calcite-font-size-lg)}.calcite-typography-regular-0h{line-height:var(--calcite-font-line-height-fixed-lg);font-size:var(--calcite-font-size-md)}.calcite-typography-regular-minus-2h{font-size:var(--calcite-font-size-sm)}.calcite-typography-regular-minus-3h{line-height:var(--calcite-font-line-height-fixed-sm);font-size:var(--calcite-font-size-xs)}.calcite-typography-light-1h{font-size:var(--calcite-font-size-lg);font-weight:var(--calcite-font-weight-light);line-height:var(--calcite-font-line-height-fixed-xl)}.calcite-typography-light-0h{font-size:var(--calcite-font-size-md);font-weight:var(--calcite-font-weight-light);line-height:var(--calcite-font-line-height-fixed-lg)}.calcite-typography-light-minus-1h{font-weight:var(--calcite-font-weight-light)}.calcite-typography-light-minus-2h{font-size:var(--calcite-font-size-sm);font-weight:var(--calcite-font-weight-light)}.calcite-typography-light-minus-3h{font-size:var(--calcite-font-size-xs);font-weight:var(--calcite-font-weight-light);line-height:var(--calcite-font-line-height-fixed-sm)}.calcite-typography{font-family:var(--calcite-font-family);font-size:var(--calcite-font-size);font-weight:var(--calcite-font-weight-regular);letter-spacing:var(--calcite-font-letter-spacing-normal);line-height:var(--calcite-font-line-height-fixed-base);paragraph-spacing:var(--calcite-font-paragraph-spacing-normal);text-case:var(--calcite-font-text-case-none);text-decoration:var(--calcite-font-text-decoration-none)}.calcite-typography-hierarchy-caption{line-height:1.375;font-size:12px}.calcite-typography-hierarchy-body{font-family:\"Avenir Next LT Pro\";font-size:14px;font-weight:400;letter-spacing:0;line-height:16px;paragraph-spacing:4px;text-case:none;text-decoration:none}.calcite-typography-hierarchy-body-snug{line-height:1.375}.calcite-typography-hierarchy-heading-5{font-weight:500;line-height:1.375}.calcite-typography-hierarchy-heading-4{font-weight:500;line-height:1.375;font-size:16px}.calcite-typography-hierarchy-heading-3{font-weight:500;line-height:1.375;font-size:18px}.calcite-typography-hierarchy-heading-2{font-weight:500;line-height:1.375;font-size:20px}.calcite-typography-hierarchy-heading-1{font-weight:500;line-height:1.375;font-size:24px}.calcite-typography-hierarchy-display-2{font-weight:600;line-height:1.375;font-size:20px}.calcite-typography-hierarchy-display-1{font-weight:600;line-height:1.375;font-size:24px}.calcite-typography-regular-minus-1h{font-family:\"Avenir Next LT Pro\";font-size:14px;font-weight:400;letter-spacing:0;line-height:16px;paragraph-spacing:4px;text-case:none;text-decoration:none}@media (prefers-color-scheme: light){:root{--calcite-color-border-white:#ffffff;--calcite-color-border-ghost:rgba(0, 0, 0, 0.3);--calcite-color-border-input:#949494;--calcite-color-border-3:#dfdfdf;--calcite-color-border-2:#d4d4d4;--calcite-color-border-1:#cacaca;--calcite-color-text-link:#00619b;--calcite-color-text-inverse:#ffffff;--calcite-color-text-3:#6a6a6a;--calcite-color-text-2:#4a4a4a;--calcite-color-text-1:#151515;--calcite-color-inverse-press:#202020;--calcite-color-inverse-hover:#2b2b2b;--calcite-color-inverse:#353535;--calcite-color-status-danger-press:#7c1d13;--calcite-color-status-danger-hover:#a82b1e;--calcite-color-status-danger:#d83020;--calcite-color-status-warning-press:#bfa200;--calcite-color-status-warning-hover:#d9bc00;--calcite-color-status-warning:#edd317;--calcite-color-status-success-press:#1a6324;--calcite-color-status-success-hover:#288835;--calcite-color-status-success:#35ac46;--calcite-color-status-info-press:#00304d;--calcite-color-status-info-hover:#004874;--calcite-color-status-info:#00619b;--calcite-color-brand-underline:rgba(0, 97, 155, 0.4);--calcite-color-brand-press:#004874;--calcite-color-brand-hover:#00619b;--calcite-color-brand:#007ac2;--calcite-color-transparent-tint:rgba(255, 255, 255, 0.8);--calcite-color-transparent-scrim:rgba(255, 255, 255, 0.85);--calcite-color-transparent-press:rgba(0, 0, 0, 0.08);--calcite-color-transparent-hover:rgba(0, 0, 0, 0.04);--calcite-color-transparent:rgba(0, 0, 0, 0);--calcite-color-foreground-current:#c7eaff;--calcite-color-foreground-3:#eaeaea;--calcite-color-foreground-2:#f3f3f3;--calcite-color-foreground-1:#ffffff;--calcite-color-background:#f8f8f8}}@media (prefers-color-scheme: dark){:root{--calcite-color-border-white:#f8f8f8;--calcite-color-border-ghost:rgba(117, 117, 117, 0.3);--calcite-color-border-input:#757575;--calcite-color-border-3:#404040;--calcite-color-border-2:#4a4a4a;--calcite-color-border-1:#555555;--calcite-color-text-link:#00A0FF;--calcite-color-text-inverse:#151515;--calcite-color-text-3:#9f9f9f;--calcite-color-text-2:#bfbfbf;--calcite-color-text-1:#ffffff;--calcite-color-inverse-press:#f3f3f3;--calcite-color-inverse-hover:#ffffff;--calcite-color-inverse:#f8f8f8;--calcite-color-status-danger-press:#d90012;--calcite-color-status-danger-hover:#ff0015;--calcite-color-status-danger:#FE583E;--calcite-color-status-warning-press:#f5d000;--calcite-color-status-warning-hover:#ffee33;--calcite-color-status-warning:#FFC900;--calcite-color-status-success-press:#00b81b;--calcite-color-status-success-hover:#3bed52;--calcite-color-status-success:#36DA43;--calcite-color-status-info-press:#009af2;--calcite-color-status-info-hover:#3db8ff;--calcite-color-status-info:#00A0FF;--calcite-color-brand-underline:rgba(0, 160, 255, 0.4);--calcite-color-brand-press:#00619b;--calcite-color-brand-hover:#007ac2;--calcite-color-brand:#009af2;--calcite-color-transparent-tint:rgba(43, 43, 43, 0.8);--calcite-color-transparent-scrim:rgba(0, 0, 0, 0.85);--calcite-color-transparent-press:rgba(255, 255, 255, 0.08);--calcite-color-transparent-hover:rgba(255, 255, 255, 0.04);--calcite-color-transparent:rgba(255, 255, 255, 0);--calcite-color-foreground-current:#214155;--calcite-color-foreground-3:#151515;--calcite-color-foreground-2:#202020;--calcite-color-foreground-1:#2b2b2b;--calcite-color-background:#353535}}.calcite-mode-light{--calcite-color-border-white:#ffffff;--calcite-color-border-ghost:rgba(0, 0, 0, 0.3);--calcite-color-border-input:#949494;--calcite-color-border-3:#dfdfdf;--calcite-color-border-2:#d4d4d4;--calcite-color-border-1:#cacaca;--calcite-color-text-link:#00619b;--calcite-color-text-inverse:#ffffff;--calcite-color-text-3:#6a6a6a;--calcite-color-text-2:#4a4a4a;--calcite-color-text-1:#151515;--calcite-color-inverse-press:#202020;--calcite-color-inverse-hover:#2b2b2b;--calcite-color-inverse:#353535;--calcite-color-status-danger-press:#7c1d13;--calcite-color-status-danger-hover:#a82b1e;--calcite-color-status-danger:#d83020;--calcite-color-status-warning-press:#bfa200;--calcite-color-status-warning-hover:#d9bc00;--calcite-color-status-warning:#edd317;--calcite-color-status-success-press:#1a6324;--calcite-color-status-success-hover:#288835;--calcite-color-status-success:#35ac46;--calcite-color-status-info-press:#00304d;--calcite-color-status-info-hover:#004874;--calcite-color-status-info:#00619b;--calcite-color-brand-underline:rgba(0, 97, 155, 0.4);--calcite-color-brand-press:#004874;--calcite-color-brand-hover:#00619b;--calcite-color-brand:#007ac2;--calcite-color-transparent-tint:rgba(255, 255, 255, 0.8);--calcite-color-transparent-scrim:rgba(255, 255, 255, 0.85);--calcite-color-transparent-press:rgba(0, 0, 0, 0.08);--calcite-color-transparent-hover:rgba(0, 0, 0, 0.04);--calcite-color-transparent:rgba(0, 0, 0, 0);--calcite-color-foreground-current:#c7eaff;--calcite-color-foreground-3:#eaeaea;--calcite-color-foreground-2:#f3f3f3;--calcite-color-foreground-1:#ffffff;--calcite-color-background:#f8f8f8}.calcite-mode-dark{--calcite-color-border-white:#f8f8f8;--calcite-color-border-ghost:rgba(117, 117, 117, 0.3);--calcite-color-border-input:#757575;--calcite-color-border-3:#404040;--calcite-color-border-2:#4a4a4a;--calcite-color-border-1:#555555;--calcite-color-text-link:#00A0FF;--calcite-color-text-inverse:#151515;--calcite-color-text-3:#9f9f9f;--calcite-color-text-2:#bfbfbf;--calcite-color-text-1:#ffffff;--calcite-color-inverse-press:#f3f3f3;--calcite-color-inverse-hover:#ffffff;--calcite-color-inverse:#f8f8f8;--calcite-color-status-danger-press:#d90012;--calcite-color-status-danger-hover:#ff0015;--calcite-color-status-danger:#FE583E;--calcite-color-status-warning-press:#f5d000;--calcite-color-status-warning-hover:#ffee33;--calcite-color-status-warning:#FFC900;--calcite-color-status-success-press:#00b81b;--calcite-color-status-success-hover:#3bed52;--calcite-color-status-success:#36DA43;--calcite-color-status-info-press:#009af2;--calcite-color-status-info-hover:#3db8ff;--calcite-color-status-info:#00A0FF;--calcite-color-brand-underline:rgba(0, 160, 255, 0.4);--calcite-color-brand-press:#00619b;--calcite-color-brand-hover:#007ac2;--calcite-color-brand:#009af2;--calcite-color-transparent-tint:rgba(43, 43, 43, 0.8);--calcite-color-transparent-scrim:rgba(0, 0, 0, 0.85);--calcite-color-transparent-press:rgba(255, 255, 255, 0.08);--calcite-color-transparent-hover:rgba(255, 255, 255, 0.04);--calcite-color-transparent:rgba(255, 255, 255, 0);--calcite-color-foreground-current:#214155;--calcite-color-foreground-3:#151515;--calcite-color-foreground-2:#202020;--calcite-color-foreground-1:#2b2b2b;--calcite-color-background:#353535}:root{--calcite-code-family:\"Consolas\", \"Andale Mono\", \"Lucida Console\", \"Monaco\", monospace;--calcite-sans-family:\"Avenir Next\", \"Avenir\", \"Helvetica Neue\", sans-serif;--calcite-font-size--3:0.625rem;--calcite-font-size--2:0.75rem;--calcite-font-size--1:0.875rem;--calcite-font-size-0:1rem;--calcite-font-size-1:1.125rem;--calcite-font-size-2:1.25rem;--calcite-font-size-3:1.625rem;--calcite-font-size-4:2rem;--calcite-font-size-5:2.5rem;--calcite-font-size-6:3rem;--calcite-font-size-7:3.5rem;--calcite-font-size-8:4rem;--calcite-font-weight-light:300;--calcite-font-weight-normal:400;--calcite-font-weight-medium:500;--calcite-font-weight-bold:600;--calcite-floating-ui-transition:var(--calcite-animation-timing);--calcite-floating-ui-z-index:var(--calcite-z-index-dropdown);--calcite-animation-timing:calc(150ms * var(--calcite-internal-duration-factor));--calcite-internal-duration-factor:var(--calcite-duration-factor, 1);--calcite-internal-animation-timing-fast:calc(100ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-medium:calc(200ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-slow:calc(300ms * var(--calcite-internal-duration-factor));text-rendering:optimizeLegibility;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;--calcite-popover-z-index:var(--calcite-z-index-popup);--calcite-border-radius:var(--calcite-border-radius-round, 4px);--calcite-border-radius-base:0;--calcite-offset-invert-focus:0;--calcite-panel-width-multiplier:1;--calcite-ui-icon-color:currentColor;font-family:var(--calcite-sans-family)}@media (prefers-color-scheme: dark){.calcite-mode-auto{--calcite-color-border-white:#f8f8f8;--calcite-color-border-ghost:rgba(117, 117, 117, 0.3);--calcite-color-border-input:#757575;--calcite-color-border-3:#404040;--calcite-color-border-2:#4a4a4a;--calcite-color-border-1:#555555;--calcite-color-text-link:#00A0FF;--calcite-color-text-inverse:#151515;--calcite-color-text-3:#9f9f9f;--calcite-color-text-2:#bfbfbf;--calcite-color-text-1:#ffffff;--calcite-color-inverse-press:#f3f3f3;--calcite-color-inverse-hover:#ffffff;--calcite-color-inverse:#f8f8f8;--calcite-color-status-danger-press:#d90012;--calcite-color-status-danger-hover:#ff0015;--calcite-color-status-danger:#FE583E;--calcite-color-status-warning-press:#f5d000;--calcite-color-status-warning-hover:#ffee33;--calcite-color-status-warning:#FFC900;--calcite-color-status-success-press:#00b81b;--calcite-color-status-success-hover:#3bed52;--calcite-color-status-success:#36DA43;--calcite-color-status-info-press:#009af2;--calcite-color-status-info-hover:#3db8ff;--calcite-color-status-info:#00A0FF;--calcite-color-brand-underline:rgba(0, 160, 255, 0.4);--calcite-color-brand-press:#00619b;--calcite-color-brand-hover:#007ac2;--calcite-color-brand:#009af2;--calcite-color-transparent-tint:rgba(43, 43, 43, 0.8);--calcite-color-transparent-scrim:rgba(0, 0, 0, 0.85);--calcite-color-transparent-press:rgba(255, 255, 255, 0.08);--calcite-color-transparent-hover:rgba(255, 255, 255, 0.04);--calcite-color-transparent:rgba(255, 255, 255, 0);--calcite-color-foreground-current:#214155;--calcite-color-foreground-3:#151515;--calcite-color-foreground-2:#202020;--calcite-color-foreground-1:#2b2b2b;--calcite-color-background:#353535}}@media (prefers-color-scheme: light){.calcite-mode-auto{--calcite-color-border-white:#ffffff;--calcite-color-border-ghost:rgba(0, 0, 0, 0.3);--calcite-color-border-input:#949494;--calcite-color-border-3:#dfdfdf;--calcite-color-border-2:#d4d4d4;--calcite-color-border-1:#cacaca;--calcite-color-text-link:#00619b;--calcite-color-text-inverse:#ffffff;--calcite-color-text-3:#6a6a6a;--calcite-color-text-2:#4a4a4a;--calcite-color-text-1:#151515;--calcite-color-inverse-press:#202020;--calcite-color-inverse-hover:#2b2b2b;--calcite-color-inverse:#353535;--calcite-color-status-danger-press:#7c1d13;--calcite-color-status-danger-hover:#a82b1e;--calcite-color-status-danger:#d83020;--calcite-color-status-warning-press:#bfa200;--calcite-color-status-warning-hover:#d9bc00;--calcite-color-status-warning:#edd317;--calcite-color-status-success-press:#1a6324;--calcite-color-status-success-hover:#288835;--calcite-color-status-success:#35ac46;--calcite-color-status-info-press:#00304d;--calcite-color-status-info-hover:#004874;--calcite-color-status-info:#00619b;--calcite-color-brand-underline:rgba(0, 97, 155, 0.4);--calcite-color-brand-press:#004874;--calcite-color-brand-hover:#00619b;--calcite-color-brand:#007ac2;--calcite-color-transparent-tint:rgba(255, 255, 255, 0.8);--calcite-color-transparent-scrim:rgba(255, 255, 255, 0.85);--calcite-color-transparent-press:rgba(0, 0, 0, 0.08);--calcite-color-transparent-hover:rgba(0, 0, 0, 0.04);--calcite-color-transparent:rgba(0, 0, 0, 0);--calcite-color-foreground-current:#c7eaff;--calcite-color-foreground-3:#eaeaea;--calcite-color-foreground-2:#f3f3f3;--calcite-color-foreground-1:#ffffff;--calcite-color-background:#f8f8f8}}@media (prefers-reduced-motion: reduce){:root{--calcite-internal-duration-factor:0.01}}@keyframes in{0%{opacity:0}100%{opacity:1}}@keyframes in-down{0%{opacity:0;transform:translate3D(0, -5px, 0)}100%{opacity:1;transform:translate3D(0, 0, 0)}}@keyframes in-up{0%{opacity:0;transform:translate3D(0, 5px, 0)}100%{opacity:1;transform:translate3D(0, 0, 0)}}@keyframes in-right{0%{opacity:0;transform:translate3D(-5px, 0, 0)}100%{opacity:1;transform:translate3D(0, 0, 0)}}@keyframes in-left{0%{opacity:0;transform:translate3D(5px, 0, 0)}100%{opacity:1;transform:translate3D(0, 0, 0)}}@keyframes in-scale{0%{opacity:0;transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;transform:scale3D(1, 1, 1)}}.calcite-animate{opacity:0;animation-fill-mode:both;animation-duration:var(--calcite-animation-timing)}.calcite-animate__in{animation-name:in}.calcite-animate__in-down{animation-name:in-down}.calcite-animate__in-up{animation-name:in-up}.calcite-animate__in-right{animation-name:in-right}.calcite-animate__in-left{animation-name:in-left}.calcite-animate__in-scale{animation-name:in-scale}.calcite-sortable--ghost,.calcite-sortable--drag{overflow:hidden}.calcite-sortable--ghost::before{content:\"\";position:absolute;inset:0px;z-index:var(--calcite-z-index);box-sizing:border-box;border-width:1px;border-style:dashed;border-color:var(--calcite-color-brand);background-color:var(--calcite-color-foreground-2)}.calcite-sortable--drag{--tw-shadow:0 6px 20px -4px rgba(0, 0, 0, 0.1), 0 4px 12px -2px rgba(0, 0, 0, 0.08);--tw-shadow-colored:0 6px 20px -4px var(--tw-shadow-color), 0 4px 12px -2px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}"],"sourceRoot":""}]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/api.js":
/*!*****************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/api.js ***!
  \*****************************************************/
/***/ ((module) => {

"use strict";


/*
  MIT License http://www.opensource.org/licenses/mit-license.php
  Author Tobias Koppers @sokra
*/
module.exports = function (cssWithMappingToString) {
  var list = [];

  // return the list of modules as css string
  list.toString = function toString() {
    return this.map(function (item) {
      var content = "";
      var needLayer = typeof item[5] !== "undefined";
      if (item[4]) {
        content += "@supports (".concat(item[4], ") {");
      }
      if (item[2]) {
        content += "@media ".concat(item[2], " {");
      }
      if (needLayer) {
        content += "@layer".concat(item[5].length > 0 ? " ".concat(item[5]) : "", " {");
      }
      content += cssWithMappingToString(item);
      if (needLayer) {
        content += "}";
      }
      if (item[2]) {
        content += "}";
      }
      if (item[4]) {
        content += "}";
      }
      return content;
    }).join("");
  };

  // import a list of modules into the list
  list.i = function i(modules, media, dedupe, supports, layer) {
    if (typeof modules === "string") {
      modules = [[null, modules, undefined]];
    }
    var alreadyImportedModules = {};
    if (dedupe) {
      for (var k = 0; k < this.length; k++) {
        var id = this[k][0];
        if (id != null) {
          alreadyImportedModules[id] = true;
        }
      }
    }
    for (var _k = 0; _k < modules.length; _k++) {
      var item = [].concat(modules[_k]);
      if (dedupe && alreadyImportedModules[item[0]]) {
        continue;
      }
      if (typeof layer !== "undefined") {
        if (typeof item[5] === "undefined") {
          item[5] = layer;
        } else {
          item[1] = "@layer".concat(item[5].length > 0 ? " ".concat(item[5]) : "", " {").concat(item[1], "}");
          item[5] = layer;
        }
      }
      if (media) {
        if (!item[2]) {
          item[2] = media;
        } else {
          item[1] = "@media ".concat(item[2], " {").concat(item[1], "}");
          item[2] = media;
        }
      }
      if (supports) {
        if (!item[4]) {
          item[4] = "".concat(supports);
        } else {
          item[1] = "@supports (".concat(item[4], ") {").concat(item[1], "}");
          item[4] = supports;
        }
      }
      list.push(item);
    }
  };
  return list;
};

/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/sourceMaps.js":
/*!************************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/sourceMaps.js ***!
  \************************************************************/
/***/ ((module) => {

"use strict";


module.exports = function (item) {
  var content = item[1];
  var cssMapping = item[3];
  if (!cssMapping) {
    return content;
  }
  if (typeof btoa === "function") {
    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));
    var data = "sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(base64);
    var sourceMapping = "/*# ".concat(data, " */");
    return [content].concat([sourceMapping]).join("\n");
  }
  return [content].join("\n");
};

/***/ }),

/***/ "./node_modules/@esri/calcite-components/dist/calcite/calcite.css":
/*!************************************************************************!*\
  !*** ./node_modules/@esri/calcite-components/dist/calcite/calcite.css ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js */ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js");
/* harmony import */ var _style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !../../../../style-loader/dist/runtime/styleDomAPI.js */ "./node_modules/style-loader/dist/runtime/styleDomAPI.js");
/* harmony import */ var _style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! !../../../../style-loader/dist/runtime/insertBySelector.js */ "./node_modules/style-loader/dist/runtime/insertBySelector.js");
/* harmony import */ var _style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! !../../../../style-loader/dist/runtime/setAttributesWithoutAttributes.js */ "./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js");
/* harmony import */ var _style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! !../../../../style-loader/dist/runtime/insertStyleElement.js */ "./node_modules/style-loader/dist/runtime/insertStyleElement.js");
/* harmony import */ var _style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! !../../../../style-loader/dist/runtime/styleTagTransform.js */ "./node_modules/style-loader/dist/runtime/styleTagTransform.js");
/* harmony import */ var _style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _css_loader_dist_cjs_js_ruleSet_1_rules_3_use_1_resolve_url_loader_index_js_ruleSet_1_rules_3_use_2_sass_loader_dist_cjs_js_ruleSet_1_rules_3_use_3_calcite_css__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! !!../../../../css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../resolve-url-loader/index.js??ruleSet[1].rules[3].use[2]!../../../../sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[3]!./calcite.css */ "./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!./node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[2]!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[3]!./node_modules/@esri/calcite-components/dist/calcite/calcite.css");

      
      
      
      
      
      
      
      
      

var options = {};

options.styleTagTransform = (_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default());
options.setAttributes = (_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default());

      options.insert = _style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default().bind(null, "head");
    
options.domAPI = (_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default());
options.insertStyleElement = (_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default());

var update = _style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_css_loader_dist_cjs_js_ruleSet_1_rules_3_use_1_resolve_url_loader_index_js_ruleSet_1_rules_3_use_2_sass_loader_dist_cjs_js_ruleSet_1_rules_3_use_3_calcite_css__WEBPACK_IMPORTED_MODULE_6__["default"], options);




       /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_css_loader_dist_cjs_js_ruleSet_1_rules_3_use_1_resolve_url_loader_index_js_ruleSet_1_rules_3_use_2_sass_loader_dist_cjs_js_ruleSet_1_rules_3_use_3_calcite_css__WEBPACK_IMPORTED_MODULE_6__["default"] && _css_loader_dist_cjs_js_ruleSet_1_rules_3_use_1_resolve_url_loader_index_js_ruleSet_1_rules_3_use_2_sass_loader_dist_cjs_js_ruleSet_1_rules_3_use_3_calcite_css__WEBPACK_IMPORTED_MODULE_6__["default"].locals ? _css_loader_dist_cjs_js_ruleSet_1_rules_3_use_1_resolve_url_loader_index_js_ruleSet_1_rules_3_use_2_sass_loader_dist_cjs_js_ruleSet_1_rules_3_use_3_calcite_css__WEBPACK_IMPORTED_MODULE_6__["default"].locals : undefined);


/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js":
/*!****************************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js ***!
  \****************************************************************************/
/***/ ((module) => {

"use strict";


var stylesInDOM = [];
function getIndexByIdentifier(identifier) {
  var result = -1;
  for (var i = 0; i < stylesInDOM.length; i++) {
    if (stylesInDOM[i].identifier === identifier) {
      result = i;
      break;
    }
  }
  return result;
}
function modulesToDom(list, options) {
  var idCountMap = {};
  var identifiers = [];
  for (var i = 0; i < list.length; i++) {
    var item = list[i];
    var id = options.base ? item[0] + options.base : item[0];
    var count = idCountMap[id] || 0;
    var identifier = "".concat(id, " ").concat(count);
    idCountMap[id] = count + 1;
    var indexByIdentifier = getIndexByIdentifier(identifier);
    var obj = {
      css: item[1],
      media: item[2],
      sourceMap: item[3],
      supports: item[4],
      layer: item[5]
    };
    if (indexByIdentifier !== -1) {
      stylesInDOM[indexByIdentifier].references++;
      stylesInDOM[indexByIdentifier].updater(obj);
    } else {
      var updater = addElementStyle(obj, options);
      options.byIndex = i;
      stylesInDOM.splice(i, 0, {
        identifier: identifier,
        updater: updater,
        references: 1
      });
    }
    identifiers.push(identifier);
  }
  return identifiers;
}
function addElementStyle(obj, options) {
  var api = options.domAPI(options);
  api.update(obj);
  var updater = function updater(newObj) {
    if (newObj) {
      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {
        return;
      }
      api.update(obj = newObj);
    } else {
      api.remove();
    }
  };
  return updater;
}
module.exports = function (list, options) {
  options = options || {};
  list = list || [];
  var lastIdentifiers = modulesToDom(list, options);
  return function update(newList) {
    newList = newList || [];
    for (var i = 0; i < lastIdentifiers.length; i++) {
      var identifier = lastIdentifiers[i];
      var index = getIndexByIdentifier(identifier);
      stylesInDOM[index].references--;
    }
    var newLastIdentifiers = modulesToDom(newList, options);
    for (var _i = 0; _i < lastIdentifiers.length; _i++) {
      var _identifier = lastIdentifiers[_i];
      var _index = getIndexByIdentifier(_identifier);
      if (stylesInDOM[_index].references === 0) {
        stylesInDOM[_index].updater();
        stylesInDOM.splice(_index, 1);
      }
    }
    lastIdentifiers = newLastIdentifiers;
  };
};

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/insertBySelector.js":
/*!********************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/insertBySelector.js ***!
  \********************************************************************/
/***/ ((module) => {

"use strict";


var memo = {};

/* istanbul ignore next  */
function getTarget(target) {
  if (typeof memo[target] === "undefined") {
    var styleTarget = document.querySelector(target);

    // Special case to return head of iframe instead of iframe itself
    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {
      try {
        // This will throw an exception if access to iframe is blocked
        // due to cross-origin restrictions
        styleTarget = styleTarget.contentDocument.head;
      } catch (e) {
        // istanbul ignore next
        styleTarget = null;
      }
    }
    memo[target] = styleTarget;
  }
  return memo[target];
}

/* istanbul ignore next  */
function insertBySelector(insert, style) {
  var target = getTarget(insert);
  if (!target) {
    throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");
  }
  target.appendChild(style);
}
module.exports = insertBySelector;

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/insertStyleElement.js":
/*!**********************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/insertStyleElement.js ***!
  \**********************************************************************/
/***/ ((module) => {

"use strict";


/* istanbul ignore next  */
function insertStyleElement(options) {
  var element = document.createElement("style");
  options.setAttributes(element, options.attributes);
  options.insert(element, options.options);
  return element;
}
module.exports = insertStyleElement;

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js ***!
  \**********************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


/* istanbul ignore next  */
function setAttributesWithoutAttributes(styleElement) {
  var nonce =  true ? __webpack_require__.nc : 0;
  if (nonce) {
    styleElement.setAttribute("nonce", nonce);
  }
}
module.exports = setAttributesWithoutAttributes;

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/styleDomAPI.js":
/*!***************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/styleDomAPI.js ***!
  \***************************************************************/
/***/ ((module) => {

"use strict";


/* istanbul ignore next  */
function apply(styleElement, options, obj) {
  var css = "";
  if (obj.supports) {
    css += "@supports (".concat(obj.supports, ") {");
  }
  if (obj.media) {
    css += "@media ".concat(obj.media, " {");
  }
  var needLayer = typeof obj.layer !== "undefined";
  if (needLayer) {
    css += "@layer".concat(obj.layer.length > 0 ? " ".concat(obj.layer) : "", " {");
  }
  css += obj.css;
  if (needLayer) {
    css += "}";
  }
  if (obj.media) {
    css += "}";
  }
  if (obj.supports) {
    css += "}";
  }
  var sourceMap = obj.sourceMap;
  if (sourceMap && typeof btoa !== "undefined") {
    css += "\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), " */");
  }

  // For old IE
  /* istanbul ignore if  */
  options.styleTagTransform(css, styleElement, options.options);
}
function removeStyleElement(styleElement) {
  // istanbul ignore if
  if (styleElement.parentNode === null) {
    return false;
  }
  styleElement.parentNode.removeChild(styleElement);
}

/* istanbul ignore next  */
function domAPI(options) {
  if (typeof document === "undefined") {
    return {
      update: function update() {},
      remove: function remove() {}
    };
  }
  var styleElement = options.insertStyleElement(options);
  return {
    update: function update(obj) {
      apply(styleElement, options, obj);
    },
    remove: function remove() {
      removeStyleElement(styleElement);
    }
  };
}
module.exports = domAPI;

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/styleTagTransform.js":
/*!*********************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/styleTagTransform.js ***!
  \*********************************************************************/
/***/ ((module) => {

"use strict";


/* istanbul ignore next  */
function styleTagTransform(css, styleElement) {
  if (styleElement.styleSheet) {
    styleElement.styleSheet.cssText = css;
  } else {
    while (styleElement.firstChild) {
      styleElement.removeChild(styleElement.firstChild);
    }
    styleElement.appendChild(document.createTextNode(css));
  }
}
module.exports = styleTagTransform;

/***/ }),

/***/ "esri/geometry/projection":
/*!*******************************************!*\
  !*** external "esri/geometry/projection" ***!
  \*******************************************/
/***/ ((module) => {

"use strict";
module.exports = __WEBPACK_EXTERNAL_MODULE_esri_geometry_projection__;

/***/ }),

/***/ "jimu-core":
/*!****************************!*\
  !*** external "jimu-core" ***!
  \****************************/
/***/ ((module) => {

"use strict";
module.exports = __WEBPACK_EXTERNAL_MODULE_jimu_core__;

/***/ }),

/***/ "react":
/*!**********************************!*\
  !*** external "jimu-core/react" ***!
  \**********************************/
/***/ ((module) => {

"use strict";
module.exports = __WEBPACK_EXTERNAL_MODULE_react__;

/***/ }),

/***/ "./node_modules/@esri/calcite-components/dist/components/index.js":
/*!************************************************************************!*\
  !*** ./node_modules/@esri/calcite-components/dist/components/index.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   getAssetPath: () => (/* reexport safe */ _stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_1__.getAssetPath),
/* harmony export */   setAssetPath: () => (/* reexport safe */ _stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_1__.setAssetPath),
/* harmony export */   setNonce: () => (/* reexport safe */ _stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_1__.setNonce),
/* harmony export */   setPlatformOptions: () => (/* reexport safe */ _stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_1__.setPlatformOptions)
/* harmony export */ });
/* harmony import */ var _resources_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./resources.js */ "./node_modules/@esri/calcite-components/dist/components/resources.js");
/* harmony import */ var _stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @stencil/core/internal/client/index.js */ "./node_modules/@stencil/core/internal/client/index.js");
/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-design-system/blob/main/LICENSE.md for details.
 * v2.0.0
 */



/**
 * Emits when the mode is dynamically toggled between light and dark on <body> or in OS preferences.
 */
function initModeChangeEvent() {
  const { classList } = document.body;
  const prefersDark = window.matchMedia("(prefers-color-scheme: dark)").matches;
  const getMode = () => classList.contains(_resources_js__WEBPACK_IMPORTED_MODULE_0__.d) || (classList.contains(_resources_js__WEBPACK_IMPORTED_MODULE_0__.a) && prefersDark) ? "dark" : "light";
  const emitModeChange = (mode) => document.body.dispatchEvent(new CustomEvent("calciteModeChange", { bubbles: true, detail: { mode } }));
  const modeChangeHandler = (newMode) => {
    currentMode !== newMode && emitModeChange(newMode);
    currentMode = newMode;
  };
  let currentMode = getMode();
  // emits event on page load
  emitModeChange(currentMode);
  // emits event when changing OS mode preferences
  window
    .matchMedia("(prefers-color-scheme: dark)")
    .addEventListener("change", (event) => modeChangeHandler(event.matches ? "dark" : "light"));
  // emits event when toggling between mode classes on <body>
  new MutationObserver(() => modeChangeHandler(getMode())).observe(document.body, {
    attributes: true,
    attributeFilter: ["class"],
  });
}

/**
 * This file is imported in Stencil's `globalScript` config option.
 *
 * @see {@link https://stenciljs.com/docs/config#globalscript}
 */
function appGlobalScript () {
  const isBrowser = typeof window !== "undefined" &&
    typeof location !== "undefined" &&
    typeof document !== "undefined" &&
    window.location === location &&
    window.document === document;
  if (isBrowser) {
    if (document.readyState === "interactive") {
      initModeChangeEvent();
    }
    else {
      document.addEventListener("DOMContentLoaded", () => initModeChangeEvent(), { once: true });
    }
  }
}

const globalScripts = appGlobalScript;

globalScripts();

//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/@esri/calcite-components/dist/components/resources.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@esri/calcite-components/dist/components/resources.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   C: () => (/* binding */ CSS_UTILITY),
/* harmony export */   a: () => (/* binding */ autoMode),
/* harmony export */   d: () => (/* binding */ darkMode)
/* harmony export */ });
/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-design-system/blob/main/LICENSE.md for details.
 * v2.0.0
 */
const autoMode = "calcite-mode-auto";
const darkMode = "calcite-mode-dark";
const lightMode = "calcite-mode-light";
const CSS_UTILITY = {
  autoMode,
  darkMode,
  lightMode,
  rtl: "calcite--rtl",
  calciteAnimate: "calcite-animate",
  calciteAnimateIn: "calcite-animate__in",
  calciteAnimateInUp: "calcite-animate__in-up",
  calciteAnimateInDown: "calcite-animate__in-down",
  calciteAnimateInRight: "calcite-animate__in-right",
  calciteAnimateInLeft: "calcite-animate__in-left",
  calciteAnimateInScale: "calcite-animate__in-scale",
};



//# sourceMappingURL=resources.js.map

/***/ }),

/***/ "./node_modules/@stencil/core/internal/app-data/index.js":
/*!***************************************************************!*\
  !*** ./node_modules/@stencil/core/internal/app-data/index.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   BUILD: () => (/* binding */ BUILD),
/* harmony export */   Env: () => (/* binding */ Env),
/* harmony export */   NAMESPACE: () => (/* binding */ NAMESPACE)
/* harmony export */ });
/**
 * A collection of default build flags for a Stencil project.
 *
 * This collection can be found throughout the Stencil codebase, often imported from the `@app-data` module like so:
 * ```ts
 * import { BUILD } from '@app-data';
 * ```
 * and is used to determine if a portion of the output of a Stencil _project_'s compilation step can be eliminated.
 *
 * e.g. When `BUILD.allRenderFn` evaluates to `false`, the compiler will eliminate conditional statements like:
 * ```ts
 * if (BUILD.allRenderFn) {
 *   // some code that will be eliminated if BUILD.allRenderFn is false
 * }
 * ```
 *
 * `@app-data`, the module that `BUILD` is imported from, is an alias for the `@stencil/core/internal/app-data`, and is
 * partially referenced by {@link STENCIL_APP_DATA_ID}. The `src/compiler/bundle/app-data-plugin.ts` references
 * `STENCIL_APP_DATA_ID` uses it to replace these defaults with {@link BuildConditionals} that are derived from a
 * Stencil project's contents (i.e. metadata from the components). This replacement happens at a Stencil project's
 * compile time. Such code can be found at `src/compiler/app-core/app-data.ts`.
 */
const BUILD = {
    allRenderFn: false,
    cmpDidLoad: true,
    cmpDidUnload: false,
    cmpDidUpdate: true,
    cmpDidRender: true,
    cmpWillLoad: true,
    cmpWillUpdate: true,
    cmpWillRender: true,
    connectedCallback: true,
    disconnectedCallback: true,
    element: true,
    event: true,
    hasRenderFn: true,
    lifecycle: true,
    hostListener: true,
    hostListenerTargetWindow: true,
    hostListenerTargetDocument: true,
    hostListenerTargetBody: true,
    hostListenerTargetParent: false,
    hostListenerTarget: true,
    member: true,
    method: true,
    mode: true,
    observeAttribute: true,
    prop: true,
    propMutable: true,
    reflect: true,
    scoped: true,
    shadowDom: true,
    slot: true,
    cssAnnotations: true,
    state: true,
    style: true,
    formAssociated: false,
    svg: true,
    updatable: true,
    vdomAttribute: true,
    vdomXlink: true,
    vdomClass: true,
    vdomFunctional: true,
    vdomKey: true,
    vdomListener: true,
    vdomRef: true,
    vdomPropOrAttr: true,
    vdomRender: true,
    vdomStyle: true,
    vdomText: true,
    watchCallback: true,
    taskQueue: true,
    hotModuleReplacement: false,
    isDebug: false,
    isDev: false,
    isTesting: false,
    hydrateServerSide: false,
    hydrateClientSide: false,
    lifecycleDOMEvents: false,
    lazyLoad: false,
    profile: false,
    slotRelocation: true,
    // TODO(STENCIL-914): remove this option when `experimentalSlotFixes` is the default behavior
    appendChildSlotFix: false,
    // TODO(STENCIL-914): remove this option when `experimentalSlotFixes` is the default behavior
    cloneNodeFix: false,
    hydratedAttribute: false,
    hydratedClass: true,
    scriptDataOpts: false,
    // TODO(STENCIL-914): remove this option when `experimentalSlotFixes` is the default behavior
    scopedSlotTextContentFix: false,
    // TODO(STENCIL-854): Remove code related to legacy shadowDomShim field
    shadowDomShim: false,
    // TODO(STENCIL-914): remove this option when `experimentalSlotFixes` is the default behavior
    slotChildNodesFix: false,
    invisiblePrehydration: true,
    propBoolean: true,
    propNumber: true,
    propString: true,
    constructableCSS: true,
    cmpShouldUpdate: true,
    devTools: false,
    shadowDelegatesFocus: true,
    initializeNextTick: false,
    asyncLoading: false,
    asyncQueue: false,
    transformTagName: false,
    attachStyles: true,
    // TODO(STENCIL-914): remove this option when `experimentalSlotFixes` is the default behavior
    experimentalSlotFixes: false,
};
const Env = {};
const NAMESPACE = /* default */ 'app';




/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			id: moduleId,
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = __webpack_modules__;
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/ensure chunk */
/******/ 	(() => {
/******/ 		__webpack_require__.f = {};
/******/ 		// This file contains only the entry chunk.
/******/ 		// The chunk loading function for additional chunks
/******/ 		__webpack_require__.e = (chunkId) => {
/******/ 			return Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {
/******/ 				__webpack_require__.f[key](chunkId, promises);
/******/ 				return promises;
/******/ 			}, []));
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/get javascript chunk filename */
/******/ 	(() => {
/******/ 		// This function allow to reference async chunks
/******/ 		__webpack_require__.u = (chunkId) => {
/******/ 			// return url for filenames not based on template
/******/ 			if (chunkId === "vendors-node_modules_stencil_core_internal_client_shadow-css_js") return "widgets/chunks/vendors-node_modules_stencil_core_internal_client_shadow-css_js.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-e6f7e9.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-22435f") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-22435f.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f9c1e4.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-612cb0") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-612cb0.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b6510") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b6510.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-6cd580") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-6cd580.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-cafbf1") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-cafbf1.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-49d2fb") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-49d2fb.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-08845b") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-08845b.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-afcda1") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-afcda1.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-d7e502") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-d7e502.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-bbcc8a") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-bbcc8a.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-5ef4d3") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-5ef4d3.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-99836c") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-99836c.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-5cee3f") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-5cee3f.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b6511") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b6511.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-feb445") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-feb445.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-70f5c6") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-70f5c6.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-6dc9e8") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-6dc9e8.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-49933b") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-49933b.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-42027a") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-42027a.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-9fca22") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-9fca22.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b6512") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b6512.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-affb86") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-affb86.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-185c5e") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-185c5e.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-fda5fb") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-fda5fb.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b6513") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b6513.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-580a35") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-580a35.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-8dc8d7") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-8dc8d7.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-15dcef") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-15dcef.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b6514") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b6514.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-e8854b") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-e8854b.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-1e606f") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-1e606f.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-ec422b") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-ec422b.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-0a6a66") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-0a6a66.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b6515") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b6515.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-10db21") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-10db21.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-3bad42") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-3bad42.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b6516") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b6516.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-450fd8") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-450fd8.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b6517") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b6517.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-98cdc1") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-98cdc1.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-a73221") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-a73221.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-2a6904") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-2a6904.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-a292ea") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-a292ea.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-5abfb9") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-5abfb9.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-335364") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-335364.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-568ad7") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-568ad7.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b6518") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b6518.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-371a99") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-371a99.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b6519") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b6519.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-9b12ae") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-9b12ae.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-bc0c20") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-bc0c20.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-65d81a") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-65d81a.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-8167fd") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-8167fd.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-8a9684") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-8a9684.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65110") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65110.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-2e47ee") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-2e47ee.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-6e9f40") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-6e9f40.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-853b98") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-853b98.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-b59e41") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-b59e41.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-ced01d") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-ced01d.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-1eb552") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-1eb552.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-36fb7e") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-36fb7e.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-d80d1a") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-d80d1a.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-0d074b") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-0d074b.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-b1d7fc") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-b1d7fc.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-84c939") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-84c939.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65111") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65111.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-328696") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-328696.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-e45851") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-e45851.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65112") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65112.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-e196a7") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-e196a7.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-340868") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-340868.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-65f9d9") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-65f9d9.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-658038") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-658038.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65113") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65113.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f73a03") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f73a03.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-31e305") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-31e305.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65114") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65114.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-49959e") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-49959e.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65115") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65115.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f6746d") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f6746d.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65116") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65116.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-dece0b") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-dece0b.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-1badd6") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-1badd6.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65117") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65117.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-2fbc33") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-2fbc33.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65118") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65118.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f6204c") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f6204c.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65119") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65119.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-0085c2") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-0085c2.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65120") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65120.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-edc936") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-edc936.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65121") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65121.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-56f4a3") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-56f4a3.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65122") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65122.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-42222b") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-42222b.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-bff128") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-bff128.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65123") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65123.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-0a657e") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-0a657e.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65124") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65124.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-9b0a9b") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-9b0a9b.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65125") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65125.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-fc5ebf") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-fc5ebf.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-77b7dd") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-77b7dd.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-bd32b8") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-bd32b8.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-2bdedf") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-2bdedf.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65126") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65126.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-166e7f") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-166e7f.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65127") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65127.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-c77b8d") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-c77b8d.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65128") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65128.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-87c9cd") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-87c9cd.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65129") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65129.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-32688d") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-32688d.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-8bef38") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-8bef38.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-0a975a") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-0a975a.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65130") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65130.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-49e107") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-49e107.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65131") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65131.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-857841") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-857841.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65132") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65132.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-da5a4c") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-da5a4c.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65133") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65133.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-783595") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-783595.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65134") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65134.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-d4251f") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-d4251f.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-ca2b00") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-ca2b00.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65135") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65135.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-e642b5") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-e642b5.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-8dc94d") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-8dc94d.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-cf15f1") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-cf15f1.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-3505a3") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-3505a3.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65136") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65136.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-bc0a37") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-bc0a37.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-db44bb") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-db44bb.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-a27112") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-a27112.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-24da96") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-24da96.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-cb167b") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-cb167b.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-dc2971") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-dc2971.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-2f09d8") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-2f09d8.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-ffc994") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-ffc994.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-7b3599") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-7b3599.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65137") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65137.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-3990fb") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-3990fb.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f436af") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-f436af.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65138") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65138.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-8f0575") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-8f0575.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65139") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65139.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-28f8b8") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-28f8b8.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65140") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65140.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-457afd") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-457afd.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65141") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65141.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-3c46bd") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-3c46bd.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65142") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65142.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-506901") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-506901.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65143") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65143.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-5c99df") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-5c99df.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65144") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65144.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-396491") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-396491.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-2b8ed8") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-2b8ed8.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65145") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65145.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-586fcc") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-586fcc.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65146") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65146.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-bb0941") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-bb0941.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65147") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65147.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-4729f8") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-4729f8.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65148") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65148.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-eda6c5") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-eda6c5.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-1c1671") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-1c1671.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65149") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65149.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-74332f") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-74332f.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65150") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65150.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-2b3897") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-2b3897.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-b2c59c") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-b2c59c.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-a199e7") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-a199e7.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-8837a8") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-8837a8.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65151") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65151.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-31d427") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-31d427.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65152") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65152.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-97d550") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-97d550.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-c86438") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-c86438.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-4526f2") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-4526f2.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-9d091c") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-9d091c.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-d70c83") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-d70c83.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65153") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65153.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-a1e81e") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-a1e81e.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-ebc0a1") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-ebc0a1.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65154") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65154.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-a68795") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-a68795.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-1a7c8d") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-1a7c8d.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65155") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65155.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-2c450e") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-2c450e.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-9a115d") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-9a115d.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65156") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65156.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-ddf285") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-ddf285.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65157") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65157.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-cf5131") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-cf5131.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-4222af") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-4222af.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65158") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65158.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-160bc0") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-160bc0.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65159") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65159.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-7340ff") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-7340ff.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65160") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65160.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-801e93") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-801e93.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65161") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65161.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-1be921") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-1be921.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65162") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-f9b65162.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-5ffed3") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_lazy_rec-5ffed3.js";
/******/ 			if (chunkId === "vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-18e763") return "widgets/chunks/vendors-node_modules_esri_calcite-components-react_node_modules_stencil_core_internal_client_-18e763.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-2f79b1") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-2f79b1.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-6f09be") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-6f09be.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-53d1b1") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-53d1b1.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-10fa4c") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-10fa4c.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-eb39e1") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-eb39e1.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-b16f0d") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-b16f0d.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-e46c1b") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-e46c1b.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-b05801") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-b05801.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-836476") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-836476.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-89e890") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-89e890.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-74fb06") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-74fb06.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-a58d9a") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-a58d9a.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-bfc6ac") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-bfc6ac.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-fba9cf") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-fba9cf.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-2ce12b") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-2ce12b.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-78ca31") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-78ca31.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-05db5a") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-05db5a.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-cc89fb") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-cc89fb.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-ac9b0f") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-ac9b0f.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-3fd1a0") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-3fd1a0.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-edcb00") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-edcb00.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-f25ed3") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-f25ed3.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-579ac1") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-579ac1.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-25901f") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-25901f.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-b5c218") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-b5c218.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-a8f7af") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-a8f7af.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-10d5f3") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-10d5f3.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-c240bf") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-c240bf.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-51e435") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-51e435.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-75b0b1") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-75b0b1.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-027c12") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-027c12.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-ee2988") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-ee2988.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-a2262d") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-a2262d.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-5af91d") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-5af91d.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-bc1bd3") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-bc1bd3.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-40d085") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-40d085.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-9a570f") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-9a570f.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-65a4c6") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-65a4c6.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-a3e962") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-a3e962.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-2fe17d") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-2fe17d.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-0ef701") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-0ef701.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-1dd0cd") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-1dd0cd.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-6c2d94") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-6c2d94.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-a83dac") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-a83dac.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-f4f317") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-f4f317.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-6e1f59") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-6e1f59.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-f608bc") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-f608bc.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-3e5750") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-3e5750.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-22260d") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-22260d.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-dab0e4") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-dab0e4.js";
/******/ 			if (chunkId === "node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-2dc0ec") return "widgets/chunks/node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-2dc0ec.js";
/******/ 			// return url for filenames based on template
/******/ 			return undefined;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/load script */
/******/ 	(() => {
/******/ 		var inProgress = {};
/******/ 		var dataWebpackPrefix = "exb-client:";
/******/ 		// loadScript function to load a script via script tag
/******/ 		__webpack_require__.l = (url, done, key, chunkId) => {
/******/ 			if(inProgress[url]) { inProgress[url].push(done); return; }
/******/ 			var script, needAttach;
/******/ 			if(key !== undefined) {
/******/ 				var scripts = document.getElementsByTagName("script");
/******/ 				for(var i = 0; i < scripts.length; i++) {
/******/ 					var s = scripts[i];
/******/ 					if(s.getAttribute("src") == url || s.getAttribute("data-webpack") == dataWebpackPrefix + key) { script = s; break; }
/******/ 				}
/******/ 			}
/******/ 			if(!script) {
/******/ 				needAttach = true;
/******/ 				script = document.createElement('script');
/******/ 		
/******/ 				script.charset = 'utf-8';
/******/ 				script.timeout = 120;
/******/ 				if (__webpack_require__.nc) {
/******/ 					script.setAttribute("nonce", __webpack_require__.nc);
/******/ 				}
/******/ 				script.setAttribute("data-webpack", dataWebpackPrefix + key);
/******/ 		
/******/ 				script.src = url;
/******/ 			}
/******/ 			inProgress[url] = [done];
/******/ 			var onScriptComplete = (prev, event) => {
/******/ 				// avoid mem leaks in IE.
/******/ 				script.onerror = script.onload = null;
/******/ 				clearTimeout(timeout);
/******/ 				var doneFns = inProgress[url];
/******/ 				delete inProgress[url];
/******/ 				script.parentNode && script.parentNode.removeChild(script);
/******/ 				doneFns && doneFns.forEach((fn) => (fn(event)));
/******/ 				if(prev) return prev(event);
/******/ 			}
/******/ 			var timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);
/******/ 			script.onerror = onScriptComplete.bind(null, script.onerror);
/******/ 			script.onload = onScriptComplete.bind(null, script.onload);
/******/ 			needAttach && document.head.appendChild(script);
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/publicPath */
/******/ 	(() => {
/******/ 		__webpack_require__.p = "";
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/jsonp chunk loading */
/******/ 	(() => {
/******/ 		// no baseURI
/******/ 		
/******/ 		// object to store loaded and loading chunks
/******/ 		// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 		// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded
/******/ 		var installedChunks = {
/******/ 			"widgets/simple/dist/runtime/widget": 0
/******/ 		};
/******/ 		
/******/ 		__webpack_require__.f.j = (chunkId, promises) => {
/******/ 				// JSONP chunk loading for javascript
/******/ 				var installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;
/******/ 				if(installedChunkData !== 0) { // 0 means "already installed".
/******/ 		
/******/ 					// a Promise means "currently loading".
/******/ 					if(installedChunkData) {
/******/ 						promises.push(installedChunkData[2]);
/******/ 					} else {
/******/ 						if(true) { // all chunks have JS
/******/ 							// setup Promise in chunk cache
/******/ 							var promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));
/******/ 							promises.push(installedChunkData[2] = promise);
/******/ 		
/******/ 							// start chunk loading
/******/ 							var url = __webpack_require__.p + __webpack_require__.u(chunkId);
/******/ 							// create error before stack unwound to get useful stacktrace later
/******/ 							var error = new Error();
/******/ 							var loadingEnded = (event) => {
/******/ 								if(__webpack_require__.o(installedChunks, chunkId)) {
/******/ 									installedChunkData = installedChunks[chunkId];
/******/ 									if(installedChunkData !== 0) installedChunks[chunkId] = undefined;
/******/ 									if(installedChunkData) {
/******/ 										var errorType = event && (event.type === 'load' ? 'missing' : event.type);
/******/ 										var realSrc = event && event.target && event.target.src;
/******/ 										error.message = 'Loading chunk ' + chunkId + ' failed.\n(' + errorType + ': ' + realSrc + ')';
/******/ 										error.name = 'ChunkLoadError';
/******/ 										error.type = errorType;
/******/ 										error.request = realSrc;
/******/ 										installedChunkData[1](error);
/******/ 									}
/******/ 								}
/******/ 							};
/******/ 							__webpack_require__.l(url, loadingEnded, "chunk-" + chunkId, chunkId);
/******/ 						}
/******/ 					}
/******/ 				}
/******/ 		};
/******/ 		
/******/ 		// no prefetching
/******/ 		
/******/ 		// no preloaded
/******/ 		
/******/ 		// no HMR
/******/ 		
/******/ 		// no HMR manifest
/******/ 		
/******/ 		// no on chunks loaded
/******/ 		
/******/ 		// install a JSONP callback for chunk loading
/******/ 		var webpackJsonpCallback = (parentChunkLoadingFunction, data) => {
/******/ 			var [chunkIds, moreModules, runtime] = data;
/******/ 			// add "moreModules" to the modules object,
/******/ 			// then flag all "chunkIds" as loaded and fire callback
/******/ 			var moduleId, chunkId, i = 0;
/******/ 			if(chunkIds.some((id) => (installedChunks[id] !== 0))) {
/******/ 				for(moduleId in moreModules) {
/******/ 					if(__webpack_require__.o(moreModules, moduleId)) {
/******/ 						__webpack_require__.m[moduleId] = moreModules[moduleId];
/******/ 					}
/******/ 				}
/******/ 				if(runtime) var result = runtime(__webpack_require__);
/******/ 			}
/******/ 			if(parentChunkLoadingFunction) parentChunkLoadingFunction(data);
/******/ 			for(;i < chunkIds.length; i++) {
/******/ 				chunkId = chunkIds[i];
/******/ 				if(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {
/******/ 					installedChunks[chunkId][0]();
/******/ 				}
/******/ 				installedChunks[chunkId] = 0;
/******/ 			}
/******/ 		
/******/ 		}
/******/ 		
/******/ 		var chunkLoadingGlobal = self["webpackChunkexb_client"] = self["webpackChunkexb_client"] || [];
/******/ 		chunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));
/******/ 		chunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/nonce */
/******/ 	(() => {
/******/ 		__webpack_require__.nc = undefined;
/******/ 	})();
/******/ 	
/************************************************************************/
var __webpack_exports__ = {};
// This entry need to be wrapped in an IIFE because it need to be isolated against other entry modules.
(() => {
/*!******************************************!*\
  !*** ./jimu-core/lib/set-public-path.ts ***!
  \******************************************/
/**
 * Webpack will replace __webpack_public_path__ with __webpack_require__.p to set the public path dynamically.
 * The reason why we can't set the publicPath in webpack config is: we change the publicPath when download.
 * */
// eslint-disable-next-line
// @ts-ignore
__webpack_require__.p = window.jimuConfig.baseUrl;

})();

// This entry need to be wrapped in an IIFE because it need to be in strict mode.
(() => {
"use strict";
/*!**********************************************************!*\
  !*** ./extensions/widgets/simple/src/runtime/widget.tsx ***!
  \**********************************************************/
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   __set_webpack_public_path__: () => (/* binding */ __set_webpack_public_path__),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var jimu_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jimu-core */ "jimu-core");
/* harmony import */ var _arcgis_core_geometry_projection__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @arcgis/core/geometry/projection */ "esri/geometry/projection");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var _esri_calcite_components_dist_components__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @esri/calcite-components/dist/components */ "./node_modules/@esri/calcite-components/dist/components/index.js");
/* harmony import */ var _esri_calcite_components_react__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @esri/calcite-components-react */ "./node_modules/@esri/calcite-components-react/dist/components.js");
/* harmony import */ var _esri_calcite_components_dist_calcite_calcite_css__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @esri/calcite-components/dist/calcite/calcite.css */ "./node_modules/@esri/calcite-components/dist/calcite/calcite.css");






const Widget = (props) => {
    const [isLoaded, setIsLoaded] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(false);
    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(() => {
        if (!isLoaded) {
            setIsLoaded(true);
            (0,_esri_calcite_components_dist_components__WEBPACK_IMPORTED_MODULE_3__.setAssetPath)(`${props.context.folderUrl}dist/runtime/assets`);
            // isLoaded is not recognized as a function when using import * as projection from '@arcgis/core/geometry/projection'
            // when using import projection from '@arcgis/core/geometry/projection' it works, but this leads to issues when
            // using the widget in the Developer Edition
            if (_arcgis_core_geometry_projection__WEBPACK_IMPORTED_MODULE_1__["default"].isLoaded()) {
                console.log('projection is loaded');
            }
        }
    }, [isLoaded]);
    return (jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.createElement("div", { className: "widget-demo jimu-widget m-2" },
        jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.createElement("p", null, "Simple Widget"),
        jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.createElement("p", null,
            "exampleConfigProperty: ",
            props.config.exampleConfigProperty),
        jimu_core__WEBPACK_IMPORTED_MODULE_0__.React.createElement(_esri_calcite_components_react__WEBPACK_IMPORTED_MODULE_5__.CalciteButton, null, "A button")));
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Widget);
function __set_webpack_public_path__(url) { __webpack_require__.p = url; }

})();

/******/ 	return __webpack_exports__;
/******/ })()

			);
		}
	};
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2lkZ2V0cy9zaW1wbGUvZGlzdC9ydW50aW1lL3dpZGdldC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSxpQkFBaUIsU0FBSSxJQUFJLFNBQUk7QUFDN0IsNEJBQTRCLCtEQUErRCxpQkFBaUI7QUFDNUc7QUFDQSxvQ0FBb0MsTUFBTSwrQkFBK0IsWUFBWTtBQUNyRixtQ0FBbUMsTUFBTSxtQ0FBbUMsWUFBWTtBQUN4RixnQ0FBZ0M7QUFDaEM7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDNkQ7QUFDN0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08sdUNBQXVDLDBFQUFvQiwwSEFBMEgsY0FBYywrZ0JBQXVFLDBCQUEwQjtBQUNwUywyQ0FBMkMsMEVBQW9CLCtIQUErSCxjQUFjLHd4QkFBNEUsMEJBQTBCO0FBQ2xULG9DQUFvQywwRUFBb0IsdUhBQXVILGNBQWMsczRCQUFvRSwwQkFBMEI7QUFDM1IsdUNBQXVDLDBFQUFvQiwySEFBMkgsY0FBYyx3d0RBQXdFLDBCQUEwQjtBQUN0Uyx5Q0FBeUMsMEVBQW9CLDZIQUE2SCxjQUFjLDZnREFBMEUsMEJBQTBCO0FBQzVTLHdDQUF3QywwRUFBb0IsNEhBQTRILGNBQWMsMmdEQUF5RSwwQkFBMEI7QUFDelMsdUNBQXVDLDBFQUFvQiwySEFBMkgsY0FBYyx3b0RBQXdFLDBCQUEwQjtBQUN0UyxtQ0FBbUMsMEVBQW9CLHNIQUFzSCxjQUFjLG1vQ0FBbUUsMEJBQTBCO0FBQ3hSLG9DQUFvQywwRUFBb0IsdUhBQXVILGNBQWMsdXdCQUFvRSwwQkFBMEI7QUFDM1IsbUNBQW1DLDBFQUFvQixzSEFBc0gsY0FBYywrbkRBQW1FLDBCQUEwQjtBQUN4Uiww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Q0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixrRUFBSztBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixrRUFBSztBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNB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LGtFQUFLO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLGtFQUFLLGFBQWEsa0VBQUs7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLGtFQUFLO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSxrRUFBSztBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLGtFQUFLO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLGtFQUFLO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLGtFQUFLO0FBQ2I7QUFDQTtBQUNBLFFBQVEsa0VBQUs7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUSxrRUFBSztBQUNiO0FBQ0E7QUFDQTtBQUNBLFFBQVEsa0VBQUs7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUSxrRUFBSztBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLGtFQUFLO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FB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QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUSxrRUFBSztBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSxhQUFh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O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDd0U7QUFDZ3VCOzs7Ozs7Ozs7OztBQ3B2SHh5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEVBQUU7QUFDRjtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FDWkE7QUFDc0c7QUFDakI7QUFDckYsOEJBQThCLHNFQUEyQixDQUFDLCtFQUFxQztBQUMvRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsT0FBTyxpSUFBaUksV0FBVyxZQUFZLFlBQVksWUFBWSxZQUFZLFlBQVksWUFBWSxZQUFZLFlBQVksWUFBWSxZQUFZLFlBQVksWUFBWSxZQUFZLFlBQVksWUFBWSxZQUFZLFlBQVksWUFBWSxZQUFZLFlBQVksWUFBWSxZQUFZLFlBQVksWUFBWSxZQUFZLFlBQVksWUFBWSxZQUFZLFlBQVksWUFBWSxZQUFZLFlBQVksWUFBWSxZQUFZLFlBQVksWUFBWSxZQUFZLFlBQVksWUFBWSxZQUFZLFlBQVksWUFBWSxZQUFZLFlBQVksWUFBWSxZQUFZLFlBQVksWUFBWSxZQUFZLFlBQVksWUFBWSxZQUFZLFlBQVksWUFBWSxZQUFZLFlBQVksWUFBWSxZQUFZLFlBQVksWUFBWSxZQUFZLFlBQVksWUFBWSxZQUFZLFlBQVksWUFBWSxZQUFZLFlBQVksWUFBWSxZQUFZLFlBQVksWUFBWSxZQUFZLFlBQVksWUFBWSxZQUFZLFlBQVksWUFBWSxZQUFZLFlBQVksWUFBWSxZQUFZLFlBQVksWUFBWSxZQUFZLFlBQVksWUFBWSxZQUFZLFNBQVMsUUFBUSxZQUFZLFlBQVksWUFBWSxTQUFTLFFBQVEsWUFBWSxZQUFZLFNBQVMsUUFBUSxZQUFZLFlBQVksWUFBWSxTQUFTLFFBQVEsWUFBWSxZQUFZLFlBQVksU0FBUyxRQUFRLFlBQVksWUFBWSxZQUFZLFNBQVMsUUFBUSxZQUFZLFlBQVksWUFBWSxTQUFTLFFBQVEsWUFBWSxZQUFZLFlBQVksU0FBUyxRQUFRLFlBQVksWUFBWSxTQUFTLFFBQVEsWUFBWSxZQUFZLFlBQVksU0FBUyxRQUFRLFlBQVksWUFBWSxZQUFZLFNBQVMsUUFBUSxZQUFZLFlBQVksWUFBWSxTQUFTLFFBQVEsWUFBWSxZQUFZLFlBQVksU0FBUyxRQUFRLFlBQVksWUFBWSxZQUFZLFNBQVMsUUFBUSxZQUFZLFNBQVMsUUFBUSxZQUFZLFlBQVksU0FBUyxRQUFRLFlBQVksWUFBWSxTQUFTLFFBQVEsWUFBWSxZQUFZLFNBQVMsUUFBUSxZQUFZLFlBQVksU0FBUyxRQUFRLFlBQVksWUFBWSxTQUFTLFFBQVEsWUFBWSxZQUFZLFNBQVMsUUFBUSxZQUFZLFlBQVksWUFBWSxTQUFTLFFBQVEsWUFBWSxZQUFZLFlBQVksU0FBUyxRQUFRLFlBQVksWUFBWSxZQUFZLFNBQVMsUUFBUSxZQUFZLFlBQVksWUFBWSxTQUFTLFFBQVEsWUFBWSxZQUFZLFlBQVksU0FBUyxRQUFRLFlBQVksWUFBWSxZQUFZLFNBQVMsUUFBUSxZQUFZLFlBQVksWUFBWSxTQUFTLFFBQVEsWUFBWSxTQUFTLFFBQVEsWUFBWSxZQUFZLFNBQVMsUUFBUSxZQUFZLFlBQVksWUFBWSxTQUFTLFFBQVEsWUFBWSxZQUFZLFlBQVksU0FBUyxRQUFRLFlBQVksWUFBWSxZQUFZLFNBQVMsUUFBUSxZQUFZLFNBQVMsUUFBUSxZQUFZLFlBQVksU0FBUyxRQUFRLFlBQVksWUFBWSxZQUFZLFNBQVMsUUFBUSxZQUFZLFlBQVksU0FBUyxRQUFRLFlBQVksWUFBWSxTQUFTLFFBQVEsWUFBWSxTQUFTLFFBQVEsWUFBWSxZQUFZLFNBQVMsUUFBUSxZQUFZLFlBQVksWUFBWSxTQUFTLFFBQVEsWUFBWSxZQUFZLFlBQVksU0FBUyxRQUFRLFlBQVksU0FBUyxRQUFRLFlBQVksWUFBWSxTQUFTLFFBQVEsWUFBWSxZQUFZLFlBQVksU0FBUyxRQUFRLFlBQVksWUFBWSxZQUFZLFlBQVksWUFBWSxZQUFZLFlBQVksWUFBWSxTQUFTLFFBQVEsWUFBWSxXQUFXLFNBQVMsUUFBUSxZQUFZLFdBQVcsV0FBVyxZQUFZLFlBQVksWUFBWSxXQUFXLFdBQVcsU0FBUyxRQUFRLFlBQVksU0FBUyxRQUFRLFlBQVksWUFBWSxTQUFTLFFBQVEsWUFBWSxZQUFZLFdBQVcsU0FBUyxRQUFRLFlBQVksWUFBWSxXQUFXLFNBQVMsUUFBUSxZQUFZLFlBQVksV0FBVyxTQUFTLFFBQVEsWUFBWSxZQUFZLFdBQVcsU0FBUyxRQUFRLFlBQVksWUFBWSxXQUFXLFNBQVMsUUFBUSxZQUFZLFlBQVksV0FBVyxTQUFTLFFBQVEsWUFBWSxXQUFXLFdBQVcsWUFBWSxZQUFZLFlBQVksV0FBVyxXQUFXLFNBQVMsUUFBUSxNQUFNLFdBQVcsWUFBWSxZQUFZLFlBQVksWUFBWSxZQUFZLFlBQVksWUFBWSxZQUFZLFlBQVksWUFBWSxZQUFZLFlBQVksWUFBWSxZQUFZLFlBQVksWUFBWSxZQUFZLFlBQVksWUFBWSxZQUFZLFlBQVksWUFBWSxZQUFZLFlBQVksWUFBWSxZQUFZLFlBQVksWUFBWSxZQUFZLFlBQVksWUFBWSxZQUFZLFlBQVksWUFBWSxZQUFZLFlBQVksWUFBWSxZQUFZLFlBQVksUUFBUSxLQUFLLFFBQVEsTUFBTSxXQUFXLFlBQVksWUFBWSxZQUFZLFlBQVksWUFBWSxZQUFZLFlBQVksWUFBWSxZQUFZLFlBQVksWUFBWSxZQUFZLFlBQVksWUFBWSxZQUFZLFlBQVksWUFBWSxZQUFZLFlBQVksWUFBWSxZQUFZLFlBQVksWUFBWSxZQUFZLFlBQVksWUFBWSxZQUFZLFlBQVksWUFBWSxZQUFZLFlBQVksWUFBWSxZQUFZLFlBQVksWUFBWSxZQUFZLFlBQVksWUFBWSxZQUFZLFFBQVEsS0FBSyxRQUFRLFlBQVksWUFBWSxZQUFZLFlBQVksWUFBWSxZQUFZLFlBQVksWUFBWSxZQUFZLFlBQVksWUFBWSxZQUFZLFlBQVksWUFBWSxZQUFZLFlBQVksWUFBWSxZQUFZLFlBQVksWUFBWSxZQUFZLFlBQVksWUFBWSxZQUFZLFlBQVksWUFBWSxZQUFZLFlBQVksWUFBWSxZQUFZLFlBQVksWUFBWSxZQUFZLFlBQVksWUFBWSxZQUFZLFlBQVksWUFBWSxZQUFZLFlBQVksVUFBVSxTQUFTLFlBQVksWUFBWSxZQUFZLFlBQVksWUFBWSxZQUFZLFlBQVksWUFBWSxZQUFZLFlBQVksWUFBWSxZQUFZLFlBQVksWUFBWSxZQUFZLFlBQVksWUFBWSxZQUFZLFlBQVksWUFBWSxZQUFZLFlBQVksWUFBWSxZQUFZLFlBQVksWUFBWSxZQUFZLFlBQVksWUFBWSxZQUFZLFlBQVksWUFBWSxZQUFZLFlBQVksWUFBWSxZQUFZLFlBQVksWUFBWSxZQUFZLFlBQVksV0FBVyxVQUFVLFdBQVcsWUFBWSxZQUFZLFlBQVksWUFBWSxZQUFZLFlBQVksWUFBWSxZQUFZLFlBQVksWUFBWSxZQUFZLFlBQVksWUFBWSxZQUFZLFlBQVksWUFBWSxZQUFZLFlBQVksWUFBWSxZQUFZLFlBQVksWUFBWSxZQUFZLFlBQVksWUFBWSxZQUFZLFlBQVksWUFBWSxZQUFZLFlBQVksWUFBWSxZQUFZLFlBQVksWUFBWSxXQUFXLFVBQVUsTUFBTSxZQUFZLFlBQVksWUFBWSxZQUFZLFlBQVksWUFBWSxZQUFZLFlBQVksWUFBWSxZQUFZLFlBQVksWUFBWSxZQUFZLFlBQVksWUFBWSxZQUFZLFlBQVksWUFBWSxZQUFZLFlBQVksWUFBWSxZQUFZLFlBQVksWUFBWSxZQUFZLFlBQVksWUFBWSxZQUFZLFlBQVksWUFBWSxZQUFZLFlBQVksWUFBWSxZQUFZLFlBQVksWUFBWSxZQUFZLFlBQVksWUFBWSxZQUFZLFVBQVUsS0FB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d0NBQXdDO1dBQ2pGO1dBQ0E7V0FDQTs7Ozs7V0NQQTtXQUNBO1dBQ0E7V0FDQTtXQUNBO1dBQ0E7V0FDQTtXQUNBLEVBQUU7V0FDRjs7Ozs7V0NSQTtXQUNBO1dBQ0E7V0FDQTtXQUNBO1dBQ0E7V0FDQTtXQUNBO1dBQ0E7V0FDQTtXQUNBO1dBQ0E7V0FDQTtXQUNBO1dBQ0E7V0FDQTtXQUNBO1dBQ0E7V0FDQTtXQUNBO1dBQ0E7V0FDQTtXQUNBO1dBQ0E7V0FDQTtXQUNBO1dBQ0E7V0FDQTtXQUNBO1dBQ0E7V0FDQTtXQUNBO1dBQ0E7V0FDQTtXQUNBO1dBQ0E7V0FDQTtXQUNBO1dBQ0E7V0FDQTtXQUNBO1dBQ0E7V0FDQTtXQUNBO1dBQ0E7V0FDQTtXQUNBO1dBQ0E7V0FDQTtXQUNBO1dBQ0E7V0FDQTtXQUNBO1dBQ0E7V0FDQTtXQUNBO1dBQ0E7V0FDQTtXQUNBO1dBQ0E7V0FDQTtXQUNBO1dBQ0E7V0FDQTtXQUNBO1dBQ0E7V0FDQTtXQUNBO1dBQ0E7V0FDQTtXQUNBO1dBQ0E7V0FDQTtXQUNBO1dBQ0E7V0FDQTtXQUNBO1dBQ0E7V0FDQTtXQUNBO1dBQ0E7V0FDQTtXQUNBO1dBQ0E7V0FDQTtXQUNBO1dBQ0E7V0FDQTtXQUNBO1dBQ0E7V0FDQTtXQUNBO1dBQ0E7V0FDQTtXQUNBO1dBQ0E7V0FDQTtXQUNBO1dBQ0E7V0FDQTtXQUNBO1dBQ0E7V0FDQTtXQUNBO1dBQ0E7V0FDQTtXQUNBO1dBQ0E7V0FDQTtXQUNBO1dBQ0E7V0FDQTtXQUNBO1dBQ0E7V0FDQTtXQUNBO1dBQ0E7V0FDQTtXQUNBO1dBQ0E7V0FDQTtXQUNBO1dBQ0E7V0FDQTtXQUNBO1dBQ0E7V0FDQTtXQUNBO1dBQ0E7V0FDQTtXQUNBO1dBQ0E7V0FDQTtXQUNBO1dBQ0E7V0FDQTtXQUNBO1dBQ0E7V0FDQTtXQUNBO1dBQ0E7V0FDQTtXQUNBO1dBQ0E7V0FDQTtXQUNBO1dBQ0E7V0FDQTtXQUNBO1dBQ0E7V0FDQTtXQUNBO1dBQ0E7V0FDQTtXQUNBO1dBQ0E7V0FDQTtXQUNBO1dBQ0E7V0FDQTtXQUNBO1dBQ0E7V0FDQTtXQUNB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ckMsQ0FBQztRQUNILENBQUM7SUFDSCxDQUFDLEVBQUUsQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUVkLE9BQU8sQ0FDTCxvRUFBSyxTQUFTLEVBQUMsNkJBQTZCO1FBQzFDLHNGQUFvQjtRQUNwQjs7WUFBMkIsS0FBSyxDQUFDLE1BQU0sQ0FBQyxxQkFBcUIsQ0FBSztRQUNsRSwyREFBQyx5RUFBYSxtQkFBeUIsQ0FDbkMsQ0FDUDtBQUNILENBQUM7QUFFRCxpRUFBZSxNQUFNO0FBRWIsU0FBUywyQkFBMkIsQ0FBQyxHQUFHLElBQUkscUJBQXVCLEdBQUcsR0FBRyxFQUFDLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9leGItY2xpZW50Ly4vbm9kZV9tb2R1bGVzL0Blc3JpL2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdC9kaXN0L2NvbXBvbmVudHMuanMiLCJ3ZWJwYWNrOi8vZXhiLWNsaWVudC8uL25vZGVfbW9kdWxlcy9AZXNyaS9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3QvZGlzdC9yZWFjdC1jb21wb25lbnQtbGliL2NyZWF0ZUNvbXBvbmVudC5qcyIsIndlYnBhY2s6Ly9leGItY2xpZW50Ly4vbm9kZV9tb2R1bGVzL0Blc3JpL2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdC9kaXN0L3JlYWN0LWNvbXBvbmVudC1saWIvdXRpbHMvYXR0YWNoUHJvcHMuanMiLCJ3ZWJwYWNrOi8vZXhiLWNsaWVudC8uL25vZGVfbW9kdWxlcy9AZXNyaS9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3QvZGlzdC9yZWFjdC1jb21wb25lbnQtbGliL3V0aWxzL2Nhc2UuanMiLCJ3ZWJwYWNrOi8vZXhiLWNsaWVudC8uL25vZGVfbW9kdWxlcy9AZXNyaS9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3QvZGlzdC9yZWFjdC1jb21wb25lbnQtbGliL3V0aWxzL2luZGV4LmpzIiwid2VicGFjazovL2V4Yi1jbGllbnQvLi9ub2RlX21vZHVsZXMvQHN0ZW5jaWwvY29yZS9pbnRlcm5hbC9jbGllbnQvaW5kZXguanMiLCJ3ZWJwYWNrOi8vZXhiLWNsaWVudC8uL25vZGVfbW9kdWxlcy9Ac3RlbmNpbC9jb3JlL2ludGVybmFsL2NsaWVudC8gbGF6eSBeXFwuXFwvLipcXC5lbnRyeVxcLmpzLiokIGluY2x1ZGU6IFxcLmVudHJ5XFwuanMkIGV4Y2x1ZGU6IFxcLnN5c3RlbVxcLmVudHJ5XFwuanMkIG5hbWVzcGFjZSBvYmplY3QiLCJ3ZWJwYWNrOi8vZXhiLWNsaWVudC8uL25vZGVfbW9kdWxlcy9AZXNyaS9jYWxjaXRlLWNvbXBvbmVudHMvZGlzdC9jYWxjaXRlL2NhbGNpdGUuY3NzIiwid2VicGFjazovL2V4Yi1jbGllbnQvLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzIiwid2VicGFjazovL2V4Yi1jbGllbnQvLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qcyIsIndlYnBhY2s6Ly9leGItY2xpZW50Ly4vbm9kZV9tb2R1bGVzL0Blc3JpL2NhbGNpdGUtY29tcG9uZW50cy9kaXN0L2NhbGNpdGUvY2FsY2l0ZS5jc3M/OWMzMCIsIndlYnBhY2s6Ly9leGItY2xpZW50Ly4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzIiwid2VicGFjazovL2V4Yi1jbGllbnQvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzIiwid2VicGFjazovL2V4Yi1jbGllbnQvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanMiLCJ3ZWJwYWNrOi8vZXhiLWNsaWVudC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qcyIsIndlYnBhY2s6Ly9leGItY2xpZW50Ly4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanMiLCJ3ZWJwYWNrOi8vZXhiLWNsaWVudC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzIiwid2VicGFjazovL2V4Yi1jbGllbnQvZXh0ZXJuYWwgc3lzdGVtIFwiZXNyaS9nZW9tZXRyeS9wcm9qZWN0aW9uXCIiLCJ3ZWJwYWNrOi8vZXhiLWNsaWVudC9leHRlcm5hbCBzeXN0ZW0gXCJqaW11LWNvcmVcIiIsIndlYnBhY2s6Ly9leGItY2xpZW50L2V4dGVybmFsIHN5c3RlbSBcImppbXUtY29yZS9yZWFjdFwiIiwid2VicGFjazovL2V4Yi1jbGllbnQvLi9ub2RlX21vZHVsZXMvQGVzcmkvY2FsY2l0ZS1jb21wb25lbnRzL2Rpc3QvY29tcG9uZW50cy9pbmRleC5qcyIsIndlYnBhY2s6Ly9leGItY2xpZW50Ly4vbm9kZV9tb2R1bGVzL0Blc3JpL2NhbGNpdGUtY29tcG9uZW50cy9kaXN0L2NvbXBvbmVudHMvcmVzb3VyY2VzLmpzIiwid2VicGFjazovL2V4Yi1jbGllbnQvLi9ub2RlX21vZHVsZXMvQHN0ZW5jaWwvY29yZS9pbnRlcm5hbC9hcHAtZGF0YS9pbmRleC5qcyIsIndlYnBhY2s6Ly9leGItY2xpZW50L3dlYnBhY2svYm9vdHN0cmFwIiwid2VicGFjazovL2V4Yi1jbGllbnQvd2VicGFjay9ydW50aW1lL2NvbXBhdCBnZXQgZGVmYXVsdCBleHBvcnQiLCJ3ZWJwYWNrOi8vZXhiLWNsaWVudC93ZWJwYWNrL3J1bnRpbWUvZGVmaW5lIHByb3BlcnR5IGdldHRlcnMiLCJ3ZWJwYWNrOi8vZXhiLWNsaWVudC93ZWJwYWNrL3J1bnRpbWUvZW5zdXJlIGNodW5rIiwid2VicGFjazovL2V4Yi1jbGllbnQvd2VicGFjay9ydW50aW1lL2dldCBqYXZhc2NyaXB0IGNodW5rIGZpbGVuYW1lIiwid2VicGFjazovL2V4Yi1jbGllbnQvd2VicGFjay9ydW50aW1lL2hhc093blByb3BlcnR5IHNob3J0aGFuZCIsIndlYnBhY2s6Ly9leGItY2xpZW50L3dlYnBhY2svcnVudGltZS9sb2FkIHNjcmlwdCIsIndlYnBhY2s6Ly9leGItY2xpZW50L3dlYnBhY2svcnVudGltZS9tYWtlIG5hbWVzcGFjZSBvYmplY3QiLCJ3ZWJwYWNrOi8vZXhiLWNsaWVudC93ZWJwYWNrL3J1bnRpbWUvcHVibGljUGF0aCIsIndlYnBhY2s6Ly9leGItY2xpZW50L3dlYnBhY2svcnVudGltZS9qc29ucCBjaHVuayBsb2FkaW5nIiwid2VicGFjazovL2V4Yi1jbGllbnQvd2VicGFjay9ydW50aW1lL25vbmNlIiwid2VicGFjazovL2V4Yi1jbGllbnQvLi9qaW11LWNvcmUvbGliL3NldC1wdWJsaWMtcGF0aC50cyIsIndlYnBhY2s6Ly9leGItY2xpZW50Ly4vZXh0ZW5zaW9ucy93aWRnZXRzL3NpbXBsZS9zcmMvcnVudGltZS93aWRnZXQudHN4Il0sInNvdXJjZXNDb250ZW50IjpbInZhciBfX2F3YWl0ZXIgPSAodGhpcyAmJiB0aGlzLl9fYXdhaXRlcikgfHwgZnVuY3Rpb24gKHRoaXNBcmcsIF9hcmd1bWVudHMsIFAsIGdlbmVyYXRvcikge1xuICAgIGZ1bmN0aW9uIGFkb3B0KHZhbHVlKSB7IHJldHVybiB2YWx1ZSBpbnN0YW5jZW9mIFAgPyB2YWx1ZSA6IG5ldyBQKGZ1bmN0aW9uIChyZXNvbHZlKSB7IHJlc29sdmUodmFsdWUpOyB9KTsgfVxuICAgIHJldHVybiBuZXcgKFAgfHwgKFAgPSBQcm9taXNlKSkoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkge1xuICAgICAgICBmdW5jdGlvbiBmdWxmaWxsZWQodmFsdWUpIHsgdHJ5IHsgc3RlcChnZW5lcmF0b3IubmV4dCh2YWx1ZSkpOyB9IGNhdGNoIChlKSB7IHJlamVjdChlKTsgfSB9XG4gICAgICAgIGZ1bmN0aW9uIHJlamVjdGVkKHZhbHVlKSB7IHRyeSB7IHN0ZXAoZ2VuZXJhdG9yW1widGhyb3dcIl0odmFsdWUpKTsgfSBjYXRjaCAoZSkgeyByZWplY3QoZSk7IH0gfVxuICAgICAgICBmdW5jdGlvbiBzdGVwKHJlc3VsdCkgeyByZXN1bHQuZG9uZSA/IHJlc29sdmUocmVzdWx0LnZhbHVlKSA6IGFkb3B0KHJlc3VsdC52YWx1ZSkudGhlbihmdWxmaWxsZWQsIHJlamVjdGVkKTsgfVxuICAgICAgICBzdGVwKChnZW5lcmF0b3IgPSBnZW5lcmF0b3IuYXBwbHkodGhpc0FyZywgX2FyZ3VtZW50cyB8fCBbXSkpLm5leHQoKSk7XG4gICAgfSk7XG59O1xuLyogZXNsaW50LWRpc2FibGUgKi9cbi8qIHRzbGludDpkaXNhYmxlICovXG4vKiBhdXRvLWdlbmVyYXRlZCByZWFjdCBwcm94aWVzICovXG5pbXBvcnQgeyBjcmVhdGVSZWFjdENvbXBvbmVudCB9IGZyb20gJy4vcmVhY3QtY29tcG9uZW50LWxpYic7XG4vLyBodHRwczovL2dpdGh1Yi5jb20vZmxleGRpbmVzaC9icm93c2VyLW9yLW5vZGUvYmxvYi9tYXN0ZXIvc3JjL2luZGV4LmpzXG5jb25zdCBpc0Jyb3dzZXIgPSB0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiICYmIHR5cGVvZiB3aW5kb3cuZG9jdW1lbnQgIT09IFwidW5kZWZpbmVkXCI7XG5jb25zdCBpc05vZGUgPSB0eXBlb2YgcHJvY2VzcyAhPT0gXCJ1bmRlZmluZWRcIiAmJlxuICAgIHByb2Nlc3MudmVyc2lvbnMgIT0gbnVsbCAmJlxuICAgIHByb2Nlc3MudmVyc2lvbnMubm9kZSAhPSBudWxsICYmXG4gICAgKHByb2Nlc3MgPT09IG51bGwgfHwgcHJvY2VzcyA9PT0gdm9pZCAwID8gdm9pZCAwIDogcHJvY2Vzcy5wbGF0Zm9ybSkgIT09IFwiYnJvd3NlclwiO1xuZXhwb3J0IGNvbnN0IENhbGNpdGVBY2NvcmRpb24gPSAvKkBfX1BVUkVfXyovIGNyZWF0ZVJlYWN0Q29tcG9uZW50KCdjYWxjaXRlLWFjY29yZGlvbicsIHVuZGVmaW5lZCwgdW5kZWZpbmVkLCBpc0Jyb3dzZXIgJiYgIWlzTm9kZSA/ICgpID0+IF9fYXdhaXRlcih2b2lkIDAsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkgeyByZXR1cm4gKHlpZWxkIGltcG9ydCgnQGVzcmkvY2FsY2l0ZS1jb21wb25lbnRzL2Rpc3QvY29tcG9uZW50cy9jYWxjaXRlLWFjY29yZGlvbi5qcycpKS5kZWZpbmVDdXN0b21FbGVtZW50KCk7IH0pIDogdW5kZWZpbmVkKTtcbmV4cG9ydCBjb25zdCBDYWxjaXRlQWNjb3JkaW9uSXRlbSA9IC8qQF9fUFVSRV9fKi8gY3JlYXRlUmVhY3RDb21wb25lbnQoJ2NhbGNpdGUtYWNjb3JkaW9uLWl0ZW0nLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgaXNCcm93c2VyICYmICFpc05vZGUgPyAoKSA9PiBfX2F3YWl0ZXIodm9pZCAwLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHsgcmV0dXJuICh5aWVsZCBpbXBvcnQoJ0Blc3JpL2NhbGNpdGUtY29tcG9uZW50cy9kaXN0L2NvbXBvbmVudHMvY2FsY2l0ZS1hY2NvcmRpb24taXRlbS5qcycpKS5kZWZpbmVDdXN0b21FbGVtZW50KCk7IH0pIDogdW5kZWZpbmVkKTtcbmV4cG9ydCBjb25zdCBDYWxjaXRlQWN0aW9uID0gLypAX19QVVJFX18qLyBjcmVhdGVSZWFjdENvbXBvbmVudCgnY2FsY2l0ZS1hY3Rpb24nLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgaXNCcm93c2VyICYmICFpc05vZGUgPyAoKSA9PiBfX2F3YWl0ZXIodm9pZCAwLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHsgcmV0dXJuICh5aWVsZCBpbXBvcnQoJ0Blc3JpL2NhbGNpdGUtY29tcG9uZW50cy9kaXN0L2NvbXBvbmVudHMvY2FsY2l0ZS1hY3Rpb24uanMnKSkuZGVmaW5lQ3VzdG9tRWxlbWVudCgpOyB9KSA6IHVuZGVmaW5lZCk7XG5leHBvcnQgY29uc3QgQ2FsY2l0ZUFjdGlvbkJhciA9IC8qQF9fUFVSRV9fKi8gY3JlYXRlUmVhY3RDb21wb25lbnQoJ2NhbGNpdGUtYWN0aW9uLWJhcicsIHVuZGVmaW5lZCwgdW5kZWZpbmVkLCBpc0Jyb3dzZXIgJiYgIWlzTm9kZSA/ICgpID0+IF9fYXdhaXRlcih2b2lkIDAsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkgeyByZXR1cm4gKHlpZWxkIGltcG9ydCgnQGVzcmkvY2FsY2l0ZS1jb21wb25lbnRzL2Rpc3QvY29tcG9uZW50cy9jYWxjaXRlLWFjdGlvbi1iYXIuanMnKSkuZGVmaW5lQ3VzdG9tRWxlbWVudCgpOyB9KSA6IHVuZGVmaW5lZCk7XG5leHBvcnQgY29uc3QgQ2FsY2l0ZUFjdGlvbkdyb3VwID0gLypAX19QVVJFX18qLyBjcmVhdGVSZWFjdENvbXBvbmVudCgnY2FsY2l0ZS1hY3Rpb24tZ3JvdXAnLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgaXNCcm93c2VyICYmICFpc05vZGUgPyAoKSA9PiBfX2F3YWl0ZXIodm9pZCAwLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHsgcmV0dXJuICh5aWVsZCBpbXBvcnQoJ0Blc3JpL2NhbGNpdGUtY29tcG9uZW50cy9kaXN0L2NvbXBvbmVudHMvY2FsY2l0ZS1hY3Rpb24tZ3JvdXAuanMnKSkuZGVmaW5lQ3VzdG9tRWxlbWVudCgpOyB9KSA6IHVuZGVmaW5lZCk7XG5leHBvcnQgY29uc3QgQ2FsY2l0ZUFjdGlvbk1lbnUgPSAvKkBfX1BVUkVfXyovIGNyZWF0ZVJlYWN0Q29tcG9uZW50KCdjYWxjaXRlLWFjdGlvbi1tZW51JywgdW5kZWZpbmVkLCB1bmRlZmluZWQsIGlzQnJvd3NlciAmJiAhaXNOb2RlID8gKCkgPT4gX19hd2FpdGVyKHZvaWQgMCwgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7IHJldHVybiAoeWllbGQgaW1wb3J0KCdAZXNyaS9jYWxjaXRlLWNvbXBvbmVudHMvZGlzdC9jb21wb25lbnRzL2NhbGNpdGUtYWN0aW9uLW1lbnUuanMnKSkuZGVmaW5lQ3VzdG9tRWxlbWVudCgpOyB9KSA6IHVuZGVmaW5lZCk7XG5leHBvcnQgY29uc3QgQ2FsY2l0ZUFjdGlvblBhZCA9IC8qQF9fUFVSRV9fKi8gY3JlYXRlUmVhY3RDb21wb25lbnQoJ2NhbGNpdGUtYWN0aW9uLXBhZCcsIHVuZGVmaW5lZCwgdW5kZWZpbmVkLCBpc0Jyb3dzZXIgJiYgIWlzTm9kZSA/ICgpID0+IF9fYXdhaXRlcih2b2lkIDAsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkgeyByZXR1cm4gKHlpZWxkIGltcG9ydCgnQGVzcmkvY2FsY2l0ZS1jb21wb25lbnRzL2Rpc3QvY29tcG9uZW50cy9jYWxjaXRlLWFjdGlvbi1wYWQuanMnKSkuZGVmaW5lQ3VzdG9tRWxlbWVudCgpOyB9KSA6IHVuZGVmaW5lZCk7XG5leHBvcnQgY29uc3QgQ2FsY2l0ZUFsZXJ0ID0gLypAX19QVVJFX18qLyBjcmVhdGVSZWFjdENvbXBvbmVudCgnY2FsY2l0ZS1hbGVydCcsIHVuZGVmaW5lZCwgdW5kZWZpbmVkLCBpc0Jyb3dzZXIgJiYgIWlzTm9kZSA/ICgpID0+IF9fYXdhaXRlcih2b2lkIDAsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkgeyByZXR1cm4gKHlpZWxkIGltcG9ydCgnQGVzcmkvY2FsY2l0ZS1jb21wb25lbnRzL2Rpc3QvY29tcG9uZW50cy9jYWxjaXRlLWFsZXJ0LmpzJykpLmRlZmluZUN1c3RvbUVsZW1lbnQoKTsgfSkgOiB1bmRlZmluZWQpO1xuZXhwb3J0IGNvbnN0IENhbGNpdGVBdmF0YXIgPSAvKkBfX1BVUkVfXyovIGNyZWF0ZVJlYWN0Q29tcG9uZW50KCdjYWxjaXRlLWF2YXRhcicsIHVuZGVmaW5lZCwgdW5kZWZpbmVkLCBpc0Jyb3dzZXIgJiYgIWlzTm9kZSA/ICgpID0+IF9fYXdhaXRlcih2b2lkIDAsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkgeyByZXR1cm4gKHlpZWxkIGltcG9ydCgnQGVzcmkvY2FsY2l0ZS1jb21wb25lbnRzL2Rpc3QvY29tcG9uZW50cy9jYWxjaXRlLWF2YXRhci5qcycpKS5kZWZpbmVDdXN0b21FbGVtZW50KCk7IH0pIDogdW5kZWZpbmVkKTtcbmV4cG9ydCBjb25zdCBDYWxjaXRlQmxvY2sgPSAvKkBfX1BVUkVfXyovIGNyZWF0ZVJlYWN0Q29tcG9uZW50KCdjYWxjaXRlLWJsb2NrJywgdW5kZWZpbmVkLCB1bmRlZmluZWQsIGlzQnJvd3NlciAmJiAhaXNOb2RlID8gKCkgPT4gX19hd2FpdGVyKHZvaWQgMCwgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7IHJldHVybiAoeWllbGQgaW1wb3J0KCdAZXNyaS9jYWxjaXRlLWNvbXBvbmVudHMvZGlzdC9jb21wb25lbnRzL2NhbGNpdGUtYmxvY2suanMnKSkuZGVmaW5lQ3VzdG9tRWxlbWVudCgpOyB9KSA6IHVuZGVmaW5lZCk7XG5leHBvcnQgY29uc3QgQ2FsY2l0ZUJsb2NrU2VjdGlvbiA9IC8qQF9fUFVSRV9fKi8gY3JlYXRlUmVhY3RDb21wb25lbnQoJ2NhbGNpdGUtYmxvY2stc2VjdGlvbicsIHVuZGVmaW5lZCwgdW5kZWZpbmVkLCBpc0Jyb3dzZXIgJiYgIWlzTm9kZSA/ICgpID0+IF9fYXdhaXRlcih2b2lkIDAsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkgeyByZXR1cm4gKHlpZWxkIGltcG9ydCgnQGVzcmkvY2FsY2l0ZS1jb21wb25lbnRzL2Rpc3QvY29tcG9uZW50cy9jYWxjaXRlLWJsb2NrLXNlY3Rpb24uanMnKSkuZGVmaW5lQ3VzdG9tRWxlbWVudCgpOyB9KSA6IHVuZGVmaW5lZCk7XG5leHBvcnQgY29uc3QgQ2FsY2l0ZUJ1dHRvbiA9IC8qQF9fUFVSRV9fKi8gY3JlYXRlUmVhY3RDb21wb25lbnQoJ2NhbGNpdGUtYnV0dG9uJywgdW5kZWZpbmVkLCB1bmRlZmluZWQsIGlzQnJvd3NlciAmJiAhaXNOb2RlID8gKCkgPT4gX19hd2FpdGVyKHZvaWQgMCwgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7IHJldHVybiAoeWllbGQgaW1wb3J0KCdAZXNyaS9jYWxjaXRlLWNvbXBvbmVudHMvZGlzdC9jb21wb25lbnRzL2NhbGNpdGUtYnV0dG9uLmpzJykpLmRlZmluZUN1c3RvbUVsZW1lbnQoKTsgfSkgOiB1bmRlZmluZWQpO1xuZXhwb3J0IGNvbnN0IENhbGNpdGVDYXJkID0gLypAX19QVVJFX18qLyBjcmVhdGVSZWFjdENvbXBvbmVudCgnY2FsY2l0ZS1jYXJkJywgdW5kZWZpbmVkLCB1bmRlZmluZWQsIGlzQnJvd3NlciAmJiAhaXNOb2RlID8gKCkgPT4gX19hd2FpdGVyKHZvaWQgMCwgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7IHJldHVybiAoeWllbGQgaW1wb3J0KCdAZXNyaS9jYWxjaXRlLWNvbXBvbmVudHMvZGlzdC9jb21wb25lbnRzL2NhbGNpdGUtY2FyZC5qcycpKS5kZWZpbmVDdXN0b21FbGVtZW50KCk7IH0pIDogdW5kZWZpbmVkKTtcbmV4cG9ydCBjb25zdCBDYWxjaXRlQ2hlY2tib3ggPSAvKkBfX1BVUkVfXyovIGNyZWF0ZVJlYWN0Q29tcG9uZW50KCdjYWxjaXRlLWNoZWNrYm94JywgdW5kZWZpbmVkLCB1bmRlZmluZWQsIGlzQnJvd3NlciAmJiAhaXNOb2RlID8gKCkgPT4gX19hd2FpdGVyKHZvaWQgMCwgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7IHJldHVybiAoeWllbGQgaW1wb3J0KCdAZXNyaS9jYWxjaXRlLWNvbXBvbmVudHMvZGlzdC9jb21wb25lbnRzL2NhbGNpdGUtY2hlY2tib3guanMnKSkuZGVmaW5lQ3VzdG9tRWxlbWVudCgpOyB9KSA6IHVuZGVmaW5lZCk7XG5leHBvcnQgY29uc3QgQ2FsY2l0ZUNoaXAgPSAvKkBfX1BVUkVfXyovIGNyZWF0ZVJlYWN0Q29tcG9uZW50KCdjYWxjaXRlLWNoaXAnLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgaXNCcm93c2VyICYmICFpc05vZGUgPyAoKSA9PiBfX2F3YWl0ZXIodm9pZCAwLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHsgcmV0dXJuICh5aWVsZCBpbXBvcnQoJ0Blc3JpL2NhbGNpdGUtY29tcG9uZW50cy9kaXN0L2NvbXBvbmVudHMvY2FsY2l0ZS1jaGlwLmpzJykpLmRlZmluZUN1c3RvbUVsZW1lbnQoKTsgfSkgOiB1bmRlZmluZWQpO1xuZXhwb3J0IGNvbnN0IENhbGNpdGVDaGlwR3JvdXAgPSAvKkBfX1BVUkVfXyovIGNyZWF0ZVJlYWN0Q29tcG9uZW50KCdjYWxjaXRlLWNoaXAtZ3JvdXAnLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgaXNCcm93c2VyICYmICFpc05vZGUgPyAoKSA9PiBfX2F3YWl0ZXIodm9pZCAwLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHsgcmV0dXJuICh5aWVsZCBpbXBvcnQoJ0Blc3JpL2NhbGNpdGUtY29tcG9uZW50cy9kaXN0L2NvbXBvbmVudHMvY2FsY2l0ZS1jaGlwLWdyb3VwLmpzJykpLmRlZmluZUN1c3RvbUVsZW1lbnQoKTsgfSkgOiB1bmRlZmluZWQpO1xuZXhwb3J0IGNvbnN0IENhbGNpdGVDb2xvclBpY2tlciA9IC8qQF9fUFVSRV9fKi8gY3JlYXRlUmVhY3RDb21wb25lbnQoJ2NhbGNpdGUtY29sb3ItcGlja2VyJywgdW5kZWZpbmVkLCB1bmRlZmluZWQsIGlzQnJvd3NlciAmJiAhaXNOb2RlID8gKCkgPT4gX19hd2FpdGVyKHZvaWQgMCwgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7IHJldHVybiAoeWllbGQgaW1wb3J0KCdAZXNyaS9jYWxjaXRlLWNvbXBvbmVudHMvZGlzdC9jb21wb25lbnRzL2NhbGNpdGUtY29sb3ItcGlja2VyLmpzJykpLmRlZmluZUN1c3RvbUVsZW1lbnQoKTsgfSkgOiB1bmRlZmluZWQpO1xuZXhwb3J0IGNvbnN0IENhbGNpdGVDb2xvclBpY2tlckhleElucHV0ID0gLypAX19QVVJFX18qLyBjcmVhdGVSZWFjdENvbXBvbmVudCgnY2FsY2l0ZS1jb2xvci1waWNrZXItaGV4LWlucHV0JywgdW5kZWZpbmVkLCB1bmRlZmluZWQsIGlzQnJvd3NlciAmJiAhaXNOb2RlID8gKCkgPT4gX19hd2FpdGVyKHZvaWQgMCwgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7IHJldHVybiAoeWllbGQgaW1wb3J0KCdAZXNyaS9jYWxjaXRlLWNvbXBvbmVudHMvZGlzdC9jb21wb25lbnRzL2NhbGNpdGUtY29sb3ItcGlja2VyLWhleC1pbnB1dC5qcycpKS5kZWZpbmVDdXN0b21FbGVtZW50KCk7IH0pIDogdW5kZWZpbmVkKTtcbmV4cG9ydCBjb25zdCBDYWxjaXRlQ29sb3JQaWNrZXJTd2F0Y2ggPSAvKkBfX1BVUkVfXyovIGNyZWF0ZVJlYWN0Q29tcG9uZW50KCdjYWxjaXRlLWNvbG9yLXBpY2tlci1zd2F0Y2gnLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgaXNCcm93c2VyICYmICFpc05vZGUgPyAoKSA9PiBfX2F3YWl0ZXIodm9pZCAwLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHsgcmV0dXJuICh5aWVsZCBpbXBvcnQoJ0Blc3JpL2NhbGNpdGUtY29tcG9uZW50cy9kaXN0L2NvbXBvbmVudHMvY2FsY2l0ZS1jb2xvci1waWNrZXItc3dhdGNoLmpzJykpLmRlZmluZUN1c3RvbUVsZW1lbnQoKTsgfSkgOiB1bmRlZmluZWQpO1xuZXhwb3J0IGNvbnN0IENhbGNpdGVDb21ib2JveCA9IC8qQF9fUFVSRV9fKi8gY3JlYXRlUmVhY3RDb21wb25lbnQoJ2NhbGNpdGUtY29tYm9ib3gnLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgaXNCcm93c2VyICYmICFpc05vZGUgPyAoKSA9PiBfX2F3YWl0ZXIodm9pZCAwLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHsgcmV0dXJuICh5aWVsZCBpbXBvcnQoJ0Blc3JpL2NhbGNpdGUtY29tcG9uZW50cy9kaXN0L2NvbXBvbmVudHMvY2FsY2l0ZS1jb21ib2JveC5qcycpKS5kZWZpbmVDdXN0b21FbGVtZW50KCk7IH0pIDogdW5kZWZpbmVkKTtcbmV4cG9ydCBjb25zdCBDYWxjaXRlQ29tYm9ib3hJdGVtID0gLypAX19QVVJFX18qLyBjcmVhdGVSZWFjdENvbXBvbmVudCgnY2FsY2l0ZS1jb21ib2JveC1pdGVtJywgdW5kZWZpbmVkLCB1bmRlZmluZWQsIGlzQnJvd3NlciAmJiAhaXNOb2RlID8gKCkgPT4gX19hd2FpdGVyKHZvaWQgMCwgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7IHJldHVybiAoeWllbGQgaW1wb3J0KCdAZXNyaS9jYWxjaXRlLWNvbXBvbmVudHMvZGlzdC9jb21wb25lbnRzL2NhbGNpdGUtY29tYm9ib3gtaXRlbS5qcycpKS5kZWZpbmVDdXN0b21FbGVtZW50KCk7IH0pIDogdW5kZWZpbmVkKTtcbmV4cG9ydCBjb25zdCBDYWxjaXRlQ29tYm9ib3hJdGVtR3JvdXAgPSAvKkBfX1BVUkVfXyovIGNyZWF0ZVJlYWN0Q29tcG9uZW50KCdjYWxjaXRlLWNvbWJvYm94LWl0ZW0tZ3JvdXAnLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgaXNCcm93c2VyICYmICFpc05vZGUgPyAoKSA9PiBfX2F3YWl0ZXIodm9pZCAwLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHsgcmV0dXJuICh5aWVsZCBpbXBvcnQoJ0Blc3JpL2NhbGNpdGUtY29tcG9uZW50cy9kaXN0L2NvbXBvbmVudHMvY2FsY2l0ZS1jb21ib2JveC1pdGVtLWdyb3VwLmpzJykpLmRlZmluZUN1c3RvbUVsZW1lbnQoKTsgfSkgOiB1bmRlZmluZWQpO1xuZXhwb3J0IGNvbnN0IENhbGNpdGVEYXRlUGlja2VyID0gLypAX19QVVJFX18qLyBjcmVhdGVSZWFjdENvbXBvbmVudCgnY2FsY2l0ZS1kYXRlLXBpY2tlcicsIHVuZGVmaW5lZCwgdW5kZWZpbmVkLCBpc0Jyb3dzZXIgJiYgIWlzTm9kZSA/ICgpID0+IF9fYXdhaXRlcih2b2lkIDAsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkgeyByZXR1cm4gKHlpZWxkIGltcG9ydCgnQGVzcmkvY2FsY2l0ZS1jb21wb25lbnRzL2Rpc3QvY29tcG9uZW50cy9jYWxjaXRlLWRhdGUtcGlja2VyLmpzJykpLmRlZmluZUN1c3RvbUVsZW1lbnQoKTsgfSkgOiB1bmRlZmluZWQpO1xuZXhwb3J0IGNvbnN0IENhbGNpdGVEYXRlUGlja2VyRGF5ID0gLypAX19QVVJFX18qLyBjcmVhdGVSZWFjdENvbXBvbmVudCgnY2FsY2l0ZS1kYXRlLXBpY2tlci1kYXknLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgaXNCcm93c2VyICYmICFpc05vZGUgPyAoKSA9PiBfX2F3YWl0ZXIodm9pZCAwLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHsgcmV0dXJuICh5aWVsZCBpbXBvcnQoJ0Blc3JpL2NhbGNpdGUtY29tcG9uZW50cy9kaXN0L2NvbXBvbmVudHMvY2FsY2l0ZS1kYXRlLXBpY2tlci1kYXkuanMnKSkuZGVmaW5lQ3VzdG9tRWxlbWVudCgpOyB9KSA6IHVuZGVmaW5lZCk7XG5leHBvcnQgY29uc3QgQ2FsY2l0ZURhdGVQaWNrZXJNb250aCA9IC8qQF9fUFVSRV9fKi8gY3JlYXRlUmVhY3RDb21wb25lbnQoJ2NhbGNpdGUtZGF0ZS1waWNrZXItbW9udGgnLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgaXNCcm93c2VyICYmICFpc05vZGUgPyAoKSA9PiBfX2F3YWl0ZXIodm9pZCAwLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHsgcmV0dXJuICh5aWVsZCBpbXBvcnQoJ0Blc3JpL2NhbGNpdGUtY29tcG9uZW50cy9kaXN0L2NvbXBvbmVudHMvY2FsY2l0ZS1kYXRlLXBpY2tlci1tb250aC5qcycpKS5kZWZpbmVDdXN0b21FbGVtZW50KCk7IH0pIDogdW5kZWZpbmVkKTtcbmV4cG9ydCBjb25zdCBDYWxjaXRlRGF0ZVBpY2tlck1vbnRoSGVhZGVyID0gLypAX19QVVJFX18qLyBjcmVhdGVSZWFjdENvbXBvbmVudCgnY2FsY2l0ZS1kYXRlLXBpY2tlci1tb250aC1oZWFkZXInLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgaXNCcm93c2VyICYmICFpc05vZGUgPyAoKSA9PiBfX2F3YWl0ZXIodm9pZCAwLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHsgcmV0dXJuICh5aWVsZCBpbXBvcnQoJ0Blc3JpL2NhbGNpdGUtY29tcG9uZW50cy9kaXN0L2NvbXBvbmVudHMvY2FsY2l0ZS1kYXRlLXBpY2tlci1tb250aC1oZWFkZXIuanMnKSkuZGVmaW5lQ3VzdG9tRWxlbWVudCgpOyB9KSA6IHVuZGVmaW5lZCk7XG5leHBvcnQgY29uc3QgQ2FsY2l0ZURyb3Bkb3duID0gLypAX19QVVJFX18qLyBjcmVhdGVSZWFjdENvbXBvbmVudCgnY2FsY2l0ZS1kcm9wZG93bicsIHVuZGVmaW5lZCwgdW5kZWZpbmVkLCBpc0Jyb3dzZXIgJiYgIWlzTm9kZSA/ICgpID0+IF9fYXdhaXRlcih2b2lkIDAsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkgeyByZXR1cm4gKHlpZWxkIGltcG9ydCgnQGVzcmkvY2FsY2l0ZS1jb21wb25lbnRzL2Rpc3QvY29tcG9uZW50cy9jYWxjaXRlLWRyb3Bkb3duLmpzJykpLmRlZmluZUN1c3RvbUVsZW1lbnQoKTsgfSkgOiB1bmRlZmluZWQpO1xuZXhwb3J0IGNvbnN0IENhbGNpdGVEcm9wZG93bkdyb3VwID0gLypAX19QVVJFX18qLyBjcmVhdGVSZWFjdENvbXBvbmVudCgnY2FsY2l0ZS1kcm9wZG93bi1ncm91cCcsIHVuZGVmaW5lZCwgdW5kZWZpbmVkLCBpc0Jyb3dzZXIgJiYgIWlzTm9kZSA/ICgpID0+IF9fYXdhaXRlcih2b2lkIDAsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkgeyByZXR1cm4gKHlpZWxkIGltcG9ydCgnQGVzcmkvY2FsY2l0ZS1jb21wb25lbnRzL2Rpc3QvY29tcG9uZW50cy9jYWxjaXRlLWRyb3Bkb3duLWdyb3VwLmpzJykpLmRlZmluZUN1c3RvbUVsZW1lbnQoKTsgfSkgOiB1bmRlZmluZWQpO1xuZXhwb3J0IGNvbnN0IENhbGNpdGVEcm9wZG93bkl0ZW0gPSAvKkBfX1BVUkVfXyovIGNyZWF0ZVJlYWN0Q29tcG9uZW50KCdjYWxjaXRlLWRyb3Bkb3duLWl0ZW0nLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgaXNCcm93c2VyICYmICFpc05vZGUgPyAoKSA9PiBfX2F3YWl0ZXIodm9pZCAwLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHsgcmV0dXJuICh5aWVsZCBpbXBvcnQoJ0Blc3JpL2NhbGNpdGUtY29tcG9uZW50cy9kaXN0L2NvbXBvbmVudHMvY2FsY2l0ZS1kcm9wZG93bi1pdGVtLmpzJykpLmRlZmluZUN1c3RvbUVsZW1lbnQoKTsgfSkgOiB1bmRlZmluZWQpO1xuZXhwb3J0IGNvbnN0IENhbGNpdGVGYWIgPSAvKkBfX1BVUkVfXyovIGNyZWF0ZVJlYWN0Q29tcG9uZW50KCdjYWxjaXRlLWZhYicsIHVuZGVmaW5lZCwgdW5kZWZpbmVkLCBpc0Jyb3dzZXIgJiYgIWlzTm9kZSA/ICgpID0+IF9fYXdhaXRlcih2b2lkIDAsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkgeyByZXR1cm4gKHlpZWxkIGltcG9ydCgnQGVzcmkvY2FsY2l0ZS1jb21wb25lbnRzL2Rpc3QvY29tcG9uZW50cy9jYWxjaXRlLWZhYi5qcycpKS5kZWZpbmVDdXN0b21FbGVtZW50KCk7IH0pIDogdW5kZWZpbmVkKTtcbmV4cG9ydCBjb25zdCBDYWxjaXRlRmlsdGVyID0gLypAX19QVVJFX18qLyBjcmVhdGVSZWFjdENvbXBvbmVudCgnY2FsY2l0ZS1maWx0ZXInLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgaXNCcm93c2VyICYmICFpc05vZGUgPyAoKSA9PiBfX2F3YWl0ZXIodm9pZCAwLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHsgcmV0dXJuICh5aWVsZCBpbXBvcnQoJ0Blc3JpL2NhbGNpdGUtY29tcG9uZW50cy9kaXN0L2NvbXBvbmVudHMvY2FsY2l0ZS1maWx0ZXIuanMnKSkuZGVmaW5lQ3VzdG9tRWxlbWVudCgpOyB9KSA6IHVuZGVmaW5lZCk7XG5leHBvcnQgY29uc3QgQ2FsY2l0ZUZsb3cgPSAvKkBfX1BVUkVfXyovIGNyZWF0ZVJlYWN0Q29tcG9uZW50KCdjYWxjaXRlLWZsb3cnLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgaXNCcm93c2VyICYmICFpc05vZGUgPyAoKSA9PiBfX2F3YWl0ZXIodm9pZCAwLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHsgcmV0dXJuICh5aWVsZCBpbXBvcnQoJ0Blc3JpL2NhbGNpdGUtY29tcG9uZW50cy9kaXN0L2NvbXBvbmVudHMvY2FsY2l0ZS1mbG93LmpzJykpLmRlZmluZUN1c3RvbUVsZW1lbnQoKTsgfSkgOiB1bmRlZmluZWQpO1xuZXhwb3J0IGNvbnN0IENhbGNpdGVGbG93SXRlbSA9IC8qQF9fUFVSRV9fKi8gY3JlYXRlUmVhY3RDb21wb25lbnQoJ2NhbGNpdGUtZmxvdy1pdGVtJywgdW5kZWZpbmVkLCB1bmRlZmluZWQsIGlzQnJvd3NlciAmJiAhaXNOb2RlID8gKCkgPT4gX19hd2FpdGVyKHZvaWQgMCwgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7IHJldHVybiAoeWllbGQgaW1wb3J0KCdAZXNyaS9jYWxjaXRlLWNvbXBvbmVudHMvZGlzdC9jb21wb25lbnRzL2NhbGNpdGUtZmxvdy1pdGVtLmpzJykpLmRlZmluZUN1c3RvbUVsZW1lbnQoKTsgfSkgOiB1bmRlZmluZWQpO1xuZXhwb3J0IGNvbnN0IENhbGNpdGVHcmFwaCA9IC8qQF9fUFVSRV9fKi8gY3JlYXRlUmVhY3RDb21wb25lbnQoJ2NhbGNpdGUtZ3JhcGgnLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgaXNCcm93c2VyICYmICFpc05vZGUgPyAoKSA9PiBfX2F3YWl0ZXIodm9pZCAwLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHsgcmV0dXJuICh5aWVsZCBpbXBvcnQoJ0Blc3JpL2NhbGNpdGUtY29tcG9uZW50cy9kaXN0L2NvbXBvbmVudHMvY2FsY2l0ZS1ncmFwaC5qcycpKS5kZWZpbmVDdXN0b21FbGVtZW50KCk7IH0pIDogdW5kZWZpbmVkKTtcbmV4cG9ydCBjb25zdCBDYWxjaXRlSGFuZGxlID0gLypAX19QVVJFX18qLyBjcmVhdGVSZWFjdENvbXBvbmVudCgnY2FsY2l0ZS1oYW5kbGUnLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgaXNCcm93c2VyICYmICFpc05vZGUgPyAoKSA9PiBfX2F3YWl0ZXIodm9pZCAwLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHsgcmV0dXJuICh5aWVsZCBpbXBvcnQoJ0Blc3JpL2NhbGNpdGUtY29tcG9uZW50cy9kaXN0L2NvbXBvbmVudHMvY2FsY2l0ZS1oYW5kbGUuanMnKSkuZGVmaW5lQ3VzdG9tRWxlbWVudCgpOyB9KSA6IHVuZGVmaW5lZCk7XG5leHBvcnQgY29uc3QgQ2FsY2l0ZUljb24gPSAvKkBfX1BVUkVfXyovIGNyZWF0ZVJlYWN0Q29tcG9uZW50KCdjYWxjaXRlLWljb24nLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgaXNCcm93c2VyICYmICFpc05vZGUgPyAoKSA9PiBfX2F3YWl0ZXIodm9pZCAwLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHsgcmV0dXJuICh5aWVsZCBpbXBvcnQoJ0Blc3JpL2NhbGNpdGUtY29tcG9uZW50cy9kaXN0L2NvbXBvbmVudHMvY2FsY2l0ZS1pY29uLmpzJykpLmRlZmluZUN1c3RvbUVsZW1lbnQoKTsgfSkgOiB1bmRlZmluZWQpO1xuZXhwb3J0IGNvbnN0IENhbGNpdGVJbmxpbmVFZGl0YWJsZSA9IC8qQF9fUFVSRV9fKi8gY3JlYXRlUmVhY3RDb21wb25lbnQoJ2NhbGNpdGUtaW5saW5lLWVkaXRhYmxlJywgdW5kZWZpbmVkLCB1bmRlZmluZWQsIGlzQnJvd3NlciAmJiAhaXNOb2RlID8gKCkgPT4gX19hd2FpdGVyKHZvaWQgMCwgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7IHJldHVybiAoeWllbGQgaW1wb3J0KCdAZXNyaS9jYWxjaXRlLWNvbXBvbmVudHMvZGlzdC9jb21wb25lbnRzL2NhbGNpdGUtaW5saW5lLWVkaXRhYmxlLmpzJykpLmRlZmluZUN1c3RvbUVsZW1lbnQoKTsgfSkgOiB1bmRlZmluZWQpO1xuZXhwb3J0IGNvbnN0IENhbGNpdGVJbnB1dCA9IC8qQF9fUFVSRV9fKi8gY3JlYXRlUmVhY3RDb21wb25lbnQoJ2NhbGNpdGUtaW5wdXQnLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgaXNCcm93c2VyICYmICFpc05vZGUgPyAoKSA9PiBfX2F3YWl0ZXIodm9pZCAwLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHsgcmV0dXJuICh5aWVsZCBpbXBvcnQoJ0Blc3JpL2NhbGNpdGUtY29tcG9uZW50cy9kaXN0L2NvbXBvbmVudHMvY2FsY2l0ZS1pbnB1dC5qcycpKS5kZWZpbmVDdXN0b21FbGVtZW50KCk7IH0pIDogdW5kZWZpbmVkKTtcbmV4cG9ydCBjb25zdCBDYWxjaXRlSW5wdXREYXRlUGlja2VyID0gLypAX19QVVJFX18qLyBjcmVhdGVSZWFjdENvbXBvbmVudCgnY2FsY2l0ZS1pbnB1dC1kYXRlLXBpY2tlcicsIHVuZGVmaW5lZCwgdW5kZWZpbmVkLCBpc0Jyb3dzZXIgJiYgIWlzTm9kZSA/ICgpID0+IF9fYXdhaXRlcih2b2lkIDAsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkgeyByZXR1cm4gKHlpZWxkIGltcG9ydCgnQGVzcmkvY2FsY2l0ZS1jb21wb25lbnRzL2Rpc3QvY29tcG9uZW50cy9jYWxjaXRlLWlucHV0LWRhdGUtcGlja2VyLmpzJykpLmRlZmluZUN1c3RvbUVsZW1lbnQoKTsgfSkgOiB1bmRlZmluZWQpO1xuZXhwb3J0IGNvbnN0IENhbGNpdGVJbnB1dE1lc3NhZ2UgPSAvKkBfX1BVUkVfXyovIGNyZWF0ZVJlYWN0Q29tcG9uZW50KCdjYWxjaXRlLWlucHV0LW1lc3NhZ2UnLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgaXNCcm93c2VyICYmICFpc05vZGUgPyAoKSA9PiBfX2F3YWl0ZXIodm9pZCAwLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHsgcmV0dXJuICh5aWVsZCBpbXBvcnQoJ0Blc3JpL2NhbGNpdGUtY29tcG9uZW50cy9kaXN0L2NvbXBvbmVudHMvY2FsY2l0ZS1pbnB1dC1tZXNzYWdlLmpzJykpLmRlZmluZUN1c3RvbUVsZW1lbnQoKTsgfSkgOiB1bmRlZmluZWQpO1xuZXhwb3J0IGNvbnN0IENhbGNpdGVJbnB1dE51bWJlciA9IC8qQF9fUFVSRV9fKi8gY3JlYXRlUmVhY3RDb21wb25lbnQoJ2NhbGNpdGUtaW5wdXQtbnVtYmVyJywgdW5kZWZpbmVkLCB1bmRlZmluZWQsIGlzQnJvd3NlciAmJiAhaXNOb2RlID8gKCkgPT4gX19hd2FpdGVyKHZvaWQgMCwgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7IHJldHVybiAoeWllbGQgaW1wb3J0KCdAZXNyaS9jYWxjaXRlLWNvbXBvbmVudHMvZGlzdC9jb21wb25lbnRzL2NhbGNpdGUtaW5wdXQtbnVtYmVyLmpzJykpLmRlZmluZUN1c3RvbUVsZW1lbnQoKTsgfSkgOiB1bmRlZmluZWQpO1xuZXhwb3J0IGNvbnN0IENhbGNpdGVJbnB1dFRleHQgPSAvKkBfX1BVUkVfXyovIGNyZWF0ZVJlYWN0Q29tcG9uZW50KCdjYWxjaXRlLWlucHV0LXRleHQnLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgaXNCcm93c2VyICYmICFpc05vZGUgPyAoKSA9PiBfX2F3YWl0ZXIodm9pZCAwLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHsgcmV0dXJuICh5aWVsZCBpbXBvcnQoJ0Blc3JpL2NhbGNpdGUtY29tcG9uZW50cy9kaXN0L2NvbXBvbmVudHMvY2FsY2l0ZS1pbnB1dC10ZXh0LmpzJykpLmRlZmluZUN1c3RvbUVsZW1lbnQoKTsgfSkgOiB1bmRlZmluZWQpO1xuZXhwb3J0IGNvbnN0IENhbGNpdGVJbnB1dFRpbWVQaWNrZXIgPSAvKkBfX1BVUkVfXyovIGNyZWF0ZVJlYWN0Q29tcG9uZW50KCdjYWxjaXRlLWlucHV0LXRpbWUtcGlja2VyJywgdW5kZWZpbmVkLCB1bmRlZmluZWQsIGlzQnJvd3NlciAmJiAhaXNOb2RlID8gKCkgPT4gX19hd2FpdGVyKHZvaWQgMCwgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7IHJldHVybiAoeWllbGQgaW1wb3J0KCdAZXNyaS9jYWxjaXRlLWNvbXBvbmVudHMvZGlzdC9jb21wb25lbnRzL2NhbGNpdGUtaW5wdXQtdGltZS1waWNrZXIuanMnKSkuZGVmaW5lQ3VzdG9tRWxlbWVudCgpOyB9KSA6IHVuZGVmaW5lZCk7XG5leHBvcnQgY29uc3QgQ2FsY2l0ZUlucHV0VGltZVpvbmUgPSAvKkBfX1BVUkVfXyovIGNyZWF0ZVJlYWN0Q29tcG9uZW50KCdjYWxjaXRlLWlucHV0LXRpbWUtem9uZScsIHVuZGVmaW5lZCwgdW5kZWZpbmVkLCBpc0Jyb3dzZXIgJiYgIWlzTm9kZSA/ICgpID0+IF9fYXdhaXRlcih2b2lkIDAsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkgeyByZXR1cm4gKHlpZWxkIGltcG9ydCgnQGVzcmkvY2FsY2l0ZS1jb21wb25lbnRzL2Rpc3QvY29tcG9uZW50cy9jYWxjaXRlLWlucHV0LXRpbWUtem9uZS5qcycpKS5kZWZpbmVDdXN0b21FbGVtZW50KCk7IH0pIDogdW5kZWZpbmVkKTtcbmV4cG9ydCBjb25zdCBDYWxjaXRlTGFiZWwgPSAvKkBfX1BVUkVfXyovIGNyZWF0ZVJlYWN0Q29tcG9uZW50KCdjYWxjaXRlLWxhYmVsJywgdW5kZWZpbmVkLCB1bmRlZmluZWQsIGlzQnJvd3NlciAmJiAhaXNOb2RlID8gKCkgPT4gX19hd2FpdGVyKHZvaWQgMCwgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7IHJldHVybiAoeWllbGQgaW1wb3J0KCdAZXNyaS9jYWxjaXRlLWNvbXBvbmVudHMvZGlzdC9jb21wb25lbnRzL2NhbGNpdGUtbGFiZWwuanMnKSkuZGVmaW5lQ3VzdG9tRWxlbWVudCgpOyB9KSA6IHVuZGVmaW5lZCk7XG5leHBvcnQgY29uc3QgQ2FsY2l0ZUxpbmsgPSAvKkBfX1BVUkVfXyovIGNyZWF0ZVJlYWN0Q29tcG9uZW50KCdjYWxjaXRlLWxpbmsnLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgaXNCcm93c2VyICYmICFpc05vZGUgPyAoKSA9PiBfX2F3YWl0ZXIodm9pZCAwLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHsgcmV0dXJuICh5aWVsZCBpbXBvcnQoJ0Blc3JpL2NhbGNpdGUtY29tcG9uZW50cy9kaXN0L2NvbXBvbmVudHMvY2FsY2l0ZS1saW5rLmpzJykpLmRlZmluZUN1c3RvbUVsZW1lbnQoKTsgfSkgOiB1bmRlZmluZWQpO1xuZXhwb3J0IGNvbnN0IENhbGNpdGVMaXN0ID0gLypAX19QVVJFX18qLyBjcmVhdGVSZWFjdENvbXBvbmVudCgnY2FsY2l0ZS1saXN0JywgdW5kZWZpbmVkLCB1bmRlZmluZWQsIGlzQnJvd3NlciAmJiAhaXNOb2RlID8gKCkgPT4gX19hd2FpdGVyKHZvaWQgMCwgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7IHJldHVybiAoeWllbGQgaW1wb3J0KCdAZXNyaS9jYWxjaXRlLWNvbXBvbmVudHMvZGlzdC9jb21wb25lbnRzL2NhbGNpdGUtbGlzdC5qcycpKS5kZWZpbmVDdXN0b21FbGVtZW50KCk7IH0pIDogdW5kZWZpbmVkKTtcbmV4cG9ydCBjb25zdCBDYWxjaXRlTGlzdEl0ZW0gPSAvKkBfX1BVUkVfXyovIGNyZWF0ZVJlYWN0Q29tcG9uZW50KCdjYWxjaXRlLWxpc3QtaXRlbScsIHVuZGVmaW5lZCwgdW5kZWZpbmVkLCBpc0Jyb3dzZXIgJiYgIWlzTm9kZSA/ICgpID0+IF9fYXdhaXRlcih2b2lkIDAsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkgeyByZXR1cm4gKHlpZWxkIGltcG9ydCgnQGVzcmkvY2FsY2l0ZS1jb21wb25lbnRzL2Rpc3QvY29tcG9uZW50cy9jYWxjaXRlLWxpc3QtaXRlbS5qcycpKS5kZWZpbmVDdXN0b21FbGVtZW50KCk7IH0pIDogdW5kZWZpbmVkKTtcbmV4cG9ydCBjb25zdCBDYWxjaXRlTGlzdEl0ZW1Hcm91cCA9IC8qQF9fUFVSRV9fKi8gY3JlYXRlUmVhY3RDb21wb25lbnQoJ2NhbGNpdGUtbGlzdC1pdGVtLWdyb3VwJywgdW5kZWZpbmVkLCB1bmRlZmluZWQsIGlzQnJvd3NlciAmJiAhaXNOb2RlID8gKCkgPT4gX19hd2FpdGVyKHZvaWQgMCwgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7IHJldHVybiAoeWllbGQgaW1wb3J0KCdAZXNyaS9jYWxjaXRlLWNvbXBvbmVudHMvZGlzdC9jb21wb25lbnRzL2NhbGNpdGUtbGlzdC1pdGVtLWdyb3VwLmpzJykpLmRlZmluZUN1c3RvbUVsZW1lbnQoKTsgfSkgOiB1bmRlZmluZWQpO1xuZXhwb3J0IGNvbnN0IENhbGNpdGVMb2FkZXIgPSAvKkBfX1BVUkVfXyovIGNyZWF0ZVJlYWN0Q29tcG9uZW50KCdjYWxjaXRlLWxvYWRlcicsIHVuZGVmaW5lZCwgdW5kZWZpbmVkLCBpc0Jyb3dzZXIgJiYgIWlzTm9kZSA/ICgpID0+IF9fYXdhaXRlcih2b2lkIDAsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkgeyByZXR1cm4gKHlpZWxkIGltcG9ydCgnQGVzcmkvY2FsY2l0ZS1jb21wb25lbnRzL2Rpc3QvY29tcG9uZW50cy9jYWxjaXRlLWxvYWRlci5qcycpKS5kZWZpbmVDdXN0b21FbGVtZW50KCk7IH0pIDogdW5kZWZpbmVkKTtcbmV4cG9ydCBjb25zdCBDYWxjaXRlTWVudSA9IC8qQF9fUFVSRV9fKi8gY3JlYXRlUmVhY3RDb21wb25lbnQoJ2NhbGNpdGUtbWVudScsIHVuZGVmaW5lZCwgdW5kZWZpbmVkLCBpc0Jyb3dzZXIgJiYgIWlzTm9kZSA/ICgpID0+IF9fYXdhaXRlcih2b2lkIDAsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkgeyByZXR1cm4gKHlpZWxkIGltcG9ydCgnQGVzcmkvY2FsY2l0ZS1jb21wb25lbnRzL2Rpc3QvY29tcG9uZW50cy9jYWxjaXRlLW1lbnUuanMnKSkuZGVmaW5lQ3VzdG9tRWxlbWVudCgpOyB9KSA6IHVuZGVmaW5lZCk7XG5leHBvcnQgY29uc3QgQ2FsY2l0ZU1lbnVJdGVtID0gLypAX19QVVJFX18qLyBjcmVhdGVSZWFjdENvbXBvbmVudCgnY2FsY2l0ZS1tZW51LWl0ZW0nLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgaXNCcm93c2VyICYmICFpc05vZGUgPyAoKSA9PiBfX2F3YWl0ZXIodm9pZCAwLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHsgcmV0dXJuICh5aWVsZCBpbXBvcnQoJ0Blc3JpL2NhbGNpdGUtY29tcG9uZW50cy9kaXN0L2NvbXBvbmVudHMvY2FsY2l0ZS1tZW51LWl0ZW0uanMnKSkuZGVmaW5lQ3VzdG9tRWxlbWVudCgpOyB9KSA6IHVuZGVmaW5lZCk7XG5leHBvcnQgY29uc3QgQ2FsY2l0ZU1ldGVyID0gLypAX19QVVJFX18qLyBjcmVhdGVSZWFjdENvbXBvbmVudCgnY2FsY2l0ZS1tZXRlcicsIHVuZGVmaW5lZCwgdW5kZWZpbmVkLCBpc0Jyb3dzZXIgJiYgIWlzTm9kZSA/ICgpID0+IF9fYXdhaXRlcih2b2lkIDAsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkgeyByZXR1cm4gKHlpZWxkIGltcG9ydCgnQGVzcmkvY2FsY2l0ZS1jb21wb25lbnRzL2Rpc3QvY29tcG9uZW50cy9jYWxjaXRlLW1ldGVyLmpzJykpLmRlZmluZUN1c3RvbUVsZW1lbnQoKTsgfSkgOiB1bmRlZmluZWQpO1xuZXhwb3J0IGNvbnN0IENhbGNpdGVNb2RhbCA9IC8qQF9fUFVSRV9fKi8gY3JlYXRlUmVhY3RDb21wb25lbnQoJ2NhbGNpdGUtbW9kYWwnLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgaXNCcm93c2VyICYmICFpc05vZGUgPyAoKSA9PiBfX2F3YWl0ZXIodm9pZCAwLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHsgcmV0dXJuICh5aWVsZCBpbXBvcnQoJ0Blc3JpL2NhbGNpdGUtY29tcG9uZW50cy9kaXN0L2NvbXBvbmVudHMvY2FsY2l0ZS1tb2RhbC5qcycpKS5kZWZpbmVDdXN0b21FbGVtZW50KCk7IH0pIDogdW5kZWZpbmVkKTtcbmV4cG9ydCBjb25zdCBDYWxjaXRlTmF2aWdhdGlvbiA9IC8qQF9fUFVSRV9fKi8gY3JlYXRlUmVhY3RDb21wb25lbnQoJ2NhbGNpdGUtbmF2aWdhdGlvbicsIHVuZGVmaW5lZCwgdW5kZWZpbmVkLCBpc0Jyb3dzZXIgJiYgIWlzTm9kZSA/ICgpID0+IF9fYXdhaXRlcih2b2lkIDAsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkgeyByZXR1cm4gKHlpZWxkIGltcG9ydCgnQGVzcmkvY2FsY2l0ZS1jb21wb25lbnRzL2Rpc3QvY29tcG9uZW50cy9jYWxjaXRlLW5hdmlnYXRpb24uanMnKSkuZGVmaW5lQ3VzdG9tRWxlbWVudCgpOyB9KSA6IHVuZGVmaW5lZCk7XG5leHBvcnQgY29uc3QgQ2FsY2l0ZU5hdmlnYXRpb25Mb2dvID0gLypAX19QVVJFX18qLyBjcmVhdGVSZWFjdENvbXBvbmVudCgnY2FsY2l0ZS1uYXZpZ2F0aW9uLWxvZ28nLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgaXNCcm93c2VyICYmICFpc05vZGUgPyAoKSA9PiBfX2F3YWl0ZXIodm9pZCAwLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHsgcmV0dXJuICh5aWVsZCBpbXBvcnQoJ0Blc3JpL2NhbGNpdGUtY29tcG9uZW50cy9kaXN0L2NvbXBvbmVudHMvY2FsY2l0ZS1uYXZpZ2F0aW9uLWxvZ28uanMnKSkuZGVmaW5lQ3VzdG9tRWxlbWVudCgpOyB9KSA6IHVuZGVmaW5lZCk7XG5leHBvcnQgY29uc3QgQ2FsY2l0ZU5hdmlnYXRpb25Vc2VyID0gLypAX19QVVJFX18qLyBjcmVhdGVSZWFjdENvbXBvbmVudCgnY2FsY2l0ZS1uYXZpZ2F0aW9uLXVzZXInLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgaXNCcm93c2VyICYmICFpc05vZGUgPyAoKSA9PiBfX2F3YWl0ZXIodm9pZCAwLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHsgcmV0dXJuICh5aWVsZCBpbXBvcnQoJ0Blc3JpL2NhbGNpdGUtY29tcG9uZW50cy9kaXN0L2NvbXBvbmVudHMvY2FsY2l0ZS1uYXZpZ2F0aW9uLXVzZXIuanMnKSkuZGVmaW5lQ3VzdG9tRWxlbWVudCgpOyB9KSA6IHVuZGVmaW5lZCk7XG5leHBvcnQgY29uc3QgQ2FsY2l0ZU5vdGljZSA9IC8qQF9fUFVSRV9fKi8gY3JlYXRlUmVhY3RDb21wb25lbnQoJ2NhbGNpdGUtbm90aWNlJywgdW5kZWZpbmVkLCB1bmRlZmluZWQsIGlzQnJvd3NlciAmJiAhaXNOb2RlID8gKCkgPT4gX19hd2FpdGVyKHZvaWQgMCwgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7IHJldHVybiAoeWllbGQgaW1wb3J0KCdAZXNyaS9jYWxjaXRlLWNvbXBvbmVudHMvZGlzdC9jb21wb25lbnRzL2NhbGNpdGUtbm90aWNlLmpzJykpLmRlZmluZUN1c3RvbUVsZW1lbnQoKTsgfSkgOiB1bmRlZmluZWQpO1xuZXhwb3J0IGNvbnN0IENhbGNpdGVPcHRpb24gPSAvKkBfX1BVUkVfXyovIGNyZWF0ZVJlYWN0Q29tcG9uZW50KCdjYWxjaXRlLW9wdGlvbicsIHVuZGVmaW5lZCwgdW5kZWZpbmVkLCBpc0Jyb3dzZXIgJiYgIWlzTm9kZSA/ICgpID0+IF9fYXdhaXRlcih2b2lkIDAsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkgeyByZXR1cm4gKHlpZWxkIGltcG9ydCgnQGVzcmkvY2FsY2l0ZS1jb21wb25lbnRzL2Rpc3QvY29tcG9uZW50cy9jYWxjaXRlLW9wdGlvbi5qcycpKS5kZWZpbmVDdXN0b21FbGVtZW50KCk7IH0pIDogdW5kZWZpbmVkKTtcbmV4cG9ydCBjb25zdCBDYWxjaXRlT3B0aW9uR3JvdXAgPSAvKkBfX1BVUkVfXyovIGNyZWF0ZVJlYWN0Q29tcG9uZW50KCdjYWxjaXRlLW9wdGlvbi1ncm91cCcsIHVuZGVmaW5lZCwgdW5kZWZpbmVkLCBpc0Jyb3dzZXIgJiYgIWlzTm9kZSA/ICgpID0+IF9fYXdhaXRlcih2b2lkIDAsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkgeyByZXR1cm4gKHlpZWxkIGltcG9ydCgnQGVzcmkvY2FsY2l0ZS1jb21wb25lbnRzL2Rpc3QvY29tcG9uZW50cy9jYWxjaXRlLW9wdGlvbi1ncm91cC5qcycpKS5kZWZpbmVDdXN0b21FbGVtZW50KCk7IH0pIDogdW5kZWZpbmVkKTtcbmV4cG9ydCBjb25zdCBDYWxjaXRlUGFnaW5hdGlvbiA9IC8qQF9fUFVSRV9fKi8gY3JlYXRlUmVhY3RDb21wb25lbnQoJ2NhbGNpdGUtcGFnaW5hdGlvbicsIHVuZGVmaW5lZCwgdW5kZWZpbmVkLCBpc0Jyb3dzZXIgJiYgIWlzTm9kZSA/ICgpID0+IF9fYXdhaXRlcih2b2lkIDAsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkgeyByZXR1cm4gKHlpZWxkIGltcG9ydCgnQGVzcmkvY2FsY2l0ZS1jb21wb25lbnRzL2Rpc3QvY29tcG9uZW50cy9jYWxjaXRlLXBhZ2luYXRpb24uanMnKSkuZGVmaW5lQ3VzdG9tRWxlbWVudCgpOyB9KSA6IHVuZGVmaW5lZCk7XG5leHBvcnQgY29uc3QgQ2FsY2l0ZVBhbmVsID0gLypAX19QVVJFX18qLyBjcmVhdGVSZWFjdENvbXBvbmVudCgnY2FsY2l0ZS1wYW5lbCcsIHVuZGVmaW5lZCwgdW5kZWZpbmVkLCBpc0Jyb3dzZXIgJiYgIWlzTm9kZSA/ICgpID0+IF9fYXdhaXRlcih2b2lkIDAsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkgeyByZXR1cm4gKHlpZWxkIGltcG9ydCgnQGVzcmkvY2FsY2l0ZS1jb21wb25lbnRzL2Rpc3QvY29tcG9uZW50cy9jYWxjaXRlLXBhbmVsLmpzJykpLmRlZmluZUN1c3RvbUVsZW1lbnQoKTsgfSkgOiB1bmRlZmluZWQpO1xuZXhwb3J0IGNvbnN0IENhbGNpdGVQaWNrTGlzdCA9IC8qQF9fUFVSRV9fKi8gY3JlYXRlUmVhY3RDb21wb25lbnQoJ2NhbGNpdGUtcGljay1saXN0JywgdW5kZWZpbmVkLCB1bmRlZmluZWQsIGlzQnJvd3NlciAmJiAhaXNOb2RlID8gKCkgPT4gX19hd2FpdGVyKHZvaWQgMCwgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7IHJldHVybiAoeWllbGQgaW1wb3J0KCdAZXNyaS9jYWxjaXRlLWNvbXBvbmVudHMvZGlzdC9jb21wb25lbnRzL2NhbGNpdGUtcGljay1saXN0LmpzJykpLmRlZmluZUN1c3RvbUVsZW1lbnQoKTsgfSkgOiB1bmRlZmluZWQpO1xuZXhwb3J0IGNvbnN0IENhbGNpdGVQaWNrTGlzdEdyb3VwID0gLypAX19QVVJFX18qLyBjcmVhdGVSZWFjdENvbXBvbmVudCgnY2FsY2l0ZS1waWNrLWxpc3QtZ3JvdXAnLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgaXNCcm93c2VyICYmICFpc05vZGUgPyAoKSA9PiBfX2F3YWl0ZXIodm9pZCAwLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHsgcmV0dXJuICh5aWVsZCBpbXBvcnQoJ0Blc3JpL2NhbGNpdGUtY29tcG9uZW50cy9kaXN0L2NvbXBvbmVudHMvY2FsY2l0ZS1waWNrLWxpc3QtZ3JvdXAuanMnKSkuZGVmaW5lQ3VzdG9tRWxlbWVudCgpOyB9KSA6IHVuZGVmaW5lZCk7XG5leHBvcnQgY29uc3QgQ2FsY2l0ZVBpY2tMaXN0SXRlbSA9IC8qQF9fUFVSRV9fKi8gY3JlYXRlUmVhY3RDb21wb25lbnQoJ2NhbGNpdGUtcGljay1saXN0LWl0ZW0nLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgaXNCcm93c2VyICYmICFpc05vZGUgPyAoKSA9PiBfX2F3YWl0ZXIodm9pZCAwLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHsgcmV0dXJuICh5aWVsZCBpbXBvcnQoJ0Blc3JpL2NhbGNpdGUtY29tcG9uZW50cy9kaXN0L2NvbXBvbmVudHMvY2FsY2l0ZS1waWNrLWxpc3QtaXRlbS5qcycpKS5kZWZpbmVDdXN0b21FbGVtZW50KCk7IH0pIDogdW5kZWZpbmVkKTtcbmV4cG9ydCBjb25zdCBDYWxjaXRlUG9wb3ZlciA9IC8qQF9fUFVSRV9fKi8gY3JlYXRlUmVhY3RDb21wb25lbnQoJ2NhbGNpdGUtcG9wb3ZlcicsIHVuZGVmaW5lZCwgdW5kZWZpbmVkLCBpc0Jyb3dzZXIgJiYgIWlzTm9kZSA/ICgpID0+IF9fYXdhaXRlcih2b2lkIDAsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkgeyByZXR1cm4gKHlpZWxkIGltcG9ydCgnQGVzcmkvY2FsY2l0ZS1jb21wb25lbnRzL2Rpc3QvY29tcG9uZW50cy9jYWxjaXRlLXBvcG92ZXIuanMnKSkuZGVmaW5lQ3VzdG9tRWxlbWVudCgpOyB9KSA6IHVuZGVmaW5lZCk7XG5leHBvcnQgY29uc3QgQ2FsY2l0ZVByb2dyZXNzID0gLypAX19QVVJFX18qLyBjcmVhdGVSZWFjdENvbXBvbmVudCgnY2FsY2l0ZS1wcm9ncmVzcycsIHVuZGVmaW5lZCwgdW5kZWZpbmVkLCBpc0Jyb3dzZXIgJiYgIWlzTm9kZSA/ICgpID0+IF9fYXdhaXRlcih2b2lkIDAsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkgeyByZXR1cm4gKHlpZWxkIGltcG9ydCgnQGVzcmkvY2FsY2l0ZS1jb21wb25lbnRzL2Rpc3QvY29tcG9uZW50cy9jYWxjaXRlLXByb2dyZXNzLmpzJykpLmRlZmluZUN1c3RvbUVsZW1lbnQoKTsgfSkgOiB1bmRlZmluZWQpO1xuZXhwb3J0IGNvbnN0IENhbGNpdGVSYWRpb0J1dHRvbiA9IC8qQF9fUFVSRV9fKi8gY3JlYXRlUmVhY3RDb21wb25lbnQoJ2NhbGNpdGUtcmFkaW8tYnV0dG9uJywgdW5kZWZpbmVkLCB1bmRlZmluZWQsIGlzQnJvd3NlciAmJiAhaXNOb2RlID8gKCkgPT4gX19hd2FpdGVyKHZvaWQgMCwgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7IHJldHVybiAoeWllbGQgaW1wb3J0KCdAZXNyaS9jYWxjaXRlLWNvbXBvbmVudHMvZGlzdC9jb21wb25lbnRzL2NhbGNpdGUtcmFkaW8tYnV0dG9uLmpzJykpLmRlZmluZUN1c3RvbUVsZW1lbnQoKTsgfSkgOiB1bmRlZmluZWQpO1xuZXhwb3J0IGNvbnN0IENhbGNpdGVSYWRpb0J1dHRvbkdyb3VwID0gLypAX19QVVJFX18qLyBjcmVhdGVSZWFjdENvbXBvbmVudCgnY2FsY2l0ZS1yYWRpby1idXR0b24tZ3JvdXAnLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgaXNCcm93c2VyICYmICFpc05vZGUgPyAoKSA9PiBfX2F3YWl0ZXIodm9pZCAwLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHsgcmV0dXJuICh5aWVsZCBpbXBvcnQoJ0Blc3JpL2NhbGNpdGUtY29tcG9uZW50cy9kaXN0L2NvbXBvbmVudHMvY2FsY2l0ZS1yYWRpby1idXR0b24tZ3JvdXAuanMnKSkuZGVmaW5lQ3VzdG9tRWxlbWVudCgpOyB9KSA6IHVuZGVmaW5lZCk7XG5leHBvcnQgY29uc3QgQ2FsY2l0ZVJhdGluZyA9IC8qQF9fUFVSRV9fKi8gY3JlYXRlUmVhY3RDb21wb25lbnQoJ2NhbGNpdGUtcmF0aW5nJywgdW5kZWZpbmVkLCB1bmRlZmluZWQsIGlzQnJvd3NlciAmJiAhaXNOb2RlID8gKCkgPT4gX19hd2FpdGVyKHZvaWQgMCwgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7IHJldHVybiAoeWllbGQgaW1wb3J0KCdAZXNyaS9jYWxjaXRlLWNvbXBvbmVudHMvZGlzdC9jb21wb25lbnRzL2NhbGNpdGUtcmF0aW5nLmpzJykpLmRlZmluZUN1c3RvbUVsZW1lbnQoKTsgfSkgOiB1bmRlZmluZWQpO1xuZXhwb3J0IGNvbnN0IENhbGNpdGVTY3JpbSA9IC8qQF9fUFVSRV9fKi8gY3JlYXRlUmVhY3RDb21wb25lbnQoJ2NhbGNpdGUtc2NyaW0nLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgaXNCcm93c2VyICYmICFpc05vZGUgPyAoKSA9PiBfX2F3YWl0ZXIodm9pZCAwLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHsgcmV0dXJuICh5aWVsZCBpbXBvcnQoJ0Blc3JpL2NhbGNpdGUtY29tcG9uZW50cy9kaXN0L2NvbXBvbmVudHMvY2FsY2l0ZS1zY3JpbS5qcycpKS5kZWZpbmVDdXN0b21FbGVtZW50KCk7IH0pIDogdW5kZWZpbmVkKTtcbmV4cG9ydCBjb25zdCBDYWxjaXRlU2VnbWVudGVkQ29udHJvbCA9IC8qQF9fUFVSRV9fKi8gY3JlYXRlUmVhY3RDb21wb25lbnQoJ2NhbGNpdGUtc2VnbWVudGVkLWNvbnRyb2wnLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgaXNCcm93c2VyICYmICFpc05vZGUgPyAoKSA9PiBfX2F3YWl0ZXIodm9pZCAwLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHsgcmV0dXJuICh5aWVsZCBpbXBvcnQoJ0Blc3JpL2NhbGNpdGUtY29tcG9uZW50cy9kaXN0L2NvbXBvbmVudHMvY2FsY2l0ZS1zZWdtZW50ZWQtY29udHJvbC5qcycpKS5kZWZpbmVDdXN0b21FbGVtZW50KCk7IH0pIDogdW5kZWZpbmVkKTtcbmV4cG9ydCBjb25zdCBDYWxjaXRlU2VnbWVudGVkQ29udHJvbEl0ZW0gPSAvKkBfX1BVUkVfXyovIGNyZWF0ZVJlYWN0Q29tcG9uZW50KCdjYWxjaXRlLXNlZ21lbnRlZC1jb250cm9sLWl0ZW0nLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgaXNCcm93c2VyICYmICFpc05vZGUgPyAoKSA9PiBfX2F3YWl0ZXIodm9pZCAwLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHsgcmV0dXJuICh5aWVsZCBpbXBvcnQoJ0Blc3JpL2NhbGNpdGUtY29tcG9uZW50cy9kaXN0L2NvbXBvbmVudHMvY2FsY2l0ZS1zZWdtZW50ZWQtY29udHJvbC1pdGVtLmpzJykpLmRlZmluZUN1c3RvbUVsZW1lbnQoKTsgfSkgOiB1bmRlZmluZWQpO1xuZXhwb3J0IGNvbnN0IENhbGNpdGVTZWxlY3QgPSAvKkBfX1BVUkVfXyovIGNyZWF0ZVJlYWN0Q29tcG9uZW50KCdjYWxjaXRlLXNlbGVjdCcsIHVuZGVmaW5lZCwgdW5kZWZpbmVkLCBpc0Jyb3dzZXIgJiYgIWlzTm9kZSA/ICgpID0+IF9fYXdhaXRlcih2b2lkIDAsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkgeyByZXR1cm4gKHlpZWxkIGltcG9ydCgnQGVzcmkvY2FsY2l0ZS1jb21wb25lbnRzL2Rpc3QvY29tcG9uZW50cy9jYWxjaXRlLXNlbGVjdC5qcycpKS5kZWZpbmVDdXN0b21FbGVtZW50KCk7IH0pIDogdW5kZWZpbmVkKTtcbmV4cG9ydCBjb25zdCBDYWxjaXRlU2hlZXQgPSAvKkBfX1BVUkVfXyovIGNyZWF0ZVJlYWN0Q29tcG9uZW50KCdjYWxjaXRlLXNoZWV0JywgdW5kZWZpbmVkLCB1bmRlZmluZWQsIGlzQnJvd3NlciAmJiAhaXNOb2RlID8gKCkgPT4gX19hd2FpdGVyKHZvaWQgMCwgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7IHJldHVybiAoeWllbGQgaW1wb3J0KCdAZXNyaS9jYWxjaXRlLWNvbXBvbmVudHMvZGlzdC9jb21wb25lbnRzL2NhbGNpdGUtc2hlZXQuanMnKSkuZGVmaW5lQ3VzdG9tRWxlbWVudCgpOyB9KSA6IHVuZGVmaW5lZCk7XG5leHBvcnQgY29uc3QgQ2FsY2l0ZVNoZWxsID0gLypAX19QVVJFX18qLyBjcmVhdGVSZWFjdENvbXBvbmVudCgnY2FsY2l0ZS1zaGVsbCcsIHVuZGVmaW5lZCwgdW5kZWZpbmVkLCBpc0Jyb3dzZXIgJiYgIWlzTm9kZSA/ICgpID0+IF9fYXdhaXRlcih2b2lkIDAsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkgeyByZXR1cm4gKHlpZWxkIGltcG9ydCgnQGVzcmkvY2FsY2l0ZS1jb21wb25lbnRzL2Rpc3QvY29tcG9uZW50cy9jYWxjaXRlLXNoZWxsLmpzJykpLmRlZmluZUN1c3RvbUVsZW1lbnQoKTsgfSkgOiB1bmRlZmluZWQpO1xuZXhwb3J0IGNvbnN0IENhbGNpdGVTaGVsbENlbnRlclJvdyA9IC8qQF9fUFVSRV9fKi8gY3JlYXRlUmVhY3RDb21wb25lbnQoJ2NhbGNpdGUtc2hlbGwtY2VudGVyLXJvdycsIHVuZGVmaW5lZCwgdW5kZWZpbmVkLCBpc0Jyb3dzZXIgJiYgIWlzTm9kZSA/ICgpID0+IF9fYXdhaXRlcih2b2lkIDAsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkgeyByZXR1cm4gKHlpZWxkIGltcG9ydCgnQGVzcmkvY2FsY2l0ZS1jb21wb25lbnRzL2Rpc3QvY29tcG9uZW50cy9jYWxjaXRlLXNoZWxsLWNlbnRlci1yb3cuanMnKSkuZGVmaW5lQ3VzdG9tRWxlbWVudCgpOyB9KSA6IHVuZGVmaW5lZCk7XG5leHBvcnQgY29uc3QgQ2FsY2l0ZVNoZWxsUGFuZWwgPSAvKkBfX1BVUkVfXyovIGNyZWF0ZVJlYWN0Q29tcG9uZW50KCdjYWxjaXRlLXNoZWxsLXBhbmVsJywgdW5kZWZpbmVkLCB1bmRlZmluZWQsIGlzQnJvd3NlciAmJiAhaXNOb2RlID8gKCkgPT4gX19hd2FpdGVyKHZvaWQgMCwgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7IHJldHVybiAoeWllbGQgaW1wb3J0KCdAZXNyaS9jYWxjaXRlLWNvbXBvbmVudHMvZGlzdC9jb21wb25lbnRzL2NhbGNpdGUtc2hlbGwtcGFuZWwuanMnKSkuZGVmaW5lQ3VzdG9tRWxlbWVudCgpOyB9KSA6IHVuZGVmaW5lZCk7XG5leHBvcnQgY29uc3QgQ2FsY2l0ZVNsaWRlciA9IC8qQF9fUFVSRV9fKi8gY3JlYXRlUmVhY3RDb21wb25lbnQoJ2NhbGNpdGUtc2xpZGVyJywgdW5kZWZpbmVkLCB1bmRlZmluZWQsIGlzQnJvd3NlciAmJiAhaXNOb2RlID8gKCkgPT4gX19hd2FpdGVyKHZvaWQgMCwgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7IHJldHVybiAoeWllbGQgaW1wb3J0KCdAZXNyaS9jYWxjaXRlLWNvbXBvbmVudHMvZGlzdC9jb21wb25lbnRzL2NhbGNpdGUtc2xpZGVyLmpzJykpLmRlZmluZUN1c3RvbUVsZW1lbnQoKTsgfSkgOiB1bmRlZmluZWQpO1xuZXhwb3J0IGNvbnN0IENhbGNpdGVTb3J0YWJsZUxpc3QgPSAvKkBfX1BVUkVfXyovIGNyZWF0ZVJlYWN0Q29tcG9uZW50KCdjYWxjaXRlLXNvcnRhYmxlLWxpc3QnLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgaXNCcm93c2VyICYmICFpc05vZGUgPyAoKSA9PiBfX2F3YWl0ZXIodm9pZCAwLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHsgcmV0dXJuICh5aWVsZCBpbXBvcnQoJ0Blc3JpL2NhbGNpdGUtY29tcG9uZW50cy9kaXN0L2NvbXBvbmVudHMvY2FsY2l0ZS1zb3J0YWJsZS1saXN0LmpzJykpLmRlZmluZUN1c3RvbUVsZW1lbnQoKTsgfSkgOiB1bmRlZmluZWQpO1xuZXhwb3J0IGNvbnN0IENhbGNpdGVTcGxpdEJ1dHRvbiA9IC8qQF9fUFVSRV9fKi8gY3JlYXRlUmVhY3RDb21wb25lbnQoJ2NhbGNpdGUtc3BsaXQtYnV0dG9uJywgdW5kZWZpbmVkLCB1bmRlZmluZWQsIGlzQnJvd3NlciAmJiAhaXNOb2RlID8gKCkgPT4gX19hd2FpdGVyKHZvaWQgMCwgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7IHJldHVybiAoeWllbGQgaW1wb3J0KCdAZXNyaS9jYWxjaXRlLWNvbXBvbmVudHMvZGlzdC9jb21wb25lbnRzL2NhbGNpdGUtc3BsaXQtYnV0dG9uLmpzJykpLmRlZmluZUN1c3RvbUVsZW1lbnQoKTsgfSkgOiB1bmRlZmluZWQpO1xuZXhwb3J0IGNvbnN0IENhbGNpdGVTdGFjayA9IC8qQF9fUFVSRV9fKi8gY3JlYXRlUmVhY3RDb21wb25lbnQoJ2NhbGNpdGUtc3RhY2snLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgaXNCcm93c2VyICYmICFpc05vZGUgPyAoKSA9PiBfX2F3YWl0ZXIodm9pZCAwLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHsgcmV0dXJuICh5aWVsZCBpbXBvcnQoJ0Blc3JpL2NhbGNpdGUtY29tcG9uZW50cy9kaXN0L2NvbXBvbmVudHMvY2FsY2l0ZS1zdGFjay5qcycpKS5kZWZpbmVDdXN0b21FbGVtZW50KCk7IH0pIDogdW5kZWZpbmVkKTtcbmV4cG9ydCBjb25zdCBDYWxjaXRlU3RlcHBlciA9IC8qQF9fUFVSRV9fKi8gY3JlYXRlUmVhY3RDb21wb25lbnQoJ2NhbGNpdGUtc3RlcHBlcicsIHVuZGVmaW5lZCwgdW5kZWZpbmVkLCBpc0Jyb3dzZXIgJiYgIWlzTm9kZSA/ICgpID0+IF9fYXdhaXRlcih2b2lkIDAsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkgeyByZXR1cm4gKHlpZWxkIGltcG9ydCgnQGVzcmkvY2FsY2l0ZS1jb21wb25lbnRzL2Rpc3QvY29tcG9uZW50cy9jYWxjaXRlLXN0ZXBwZXIuanMnKSkuZGVmaW5lQ3VzdG9tRWxlbWVudCgpOyB9KSA6IHVuZGVmaW5lZCk7XG5leHBvcnQgY29uc3QgQ2FsY2l0ZVN0ZXBwZXJJdGVtID0gLypAX19QVVJFX18qLyBjcmVhdGVSZWFjdENvbXBvbmVudCgnY2FsY2l0ZS1zdGVwcGVyLWl0ZW0nLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgaXNCcm93c2VyICYmICFpc05vZGUgPyAoKSA9PiBfX2F3YWl0ZXIodm9pZCAwLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHsgcmV0dXJuICh5aWVsZCBpbXBvcnQoJ0Blc3JpL2NhbGNpdGUtY29tcG9uZW50cy9kaXN0L2NvbXBvbmVudHMvY2FsY2l0ZS1zdGVwcGVyLWl0ZW0uanMnKSkuZGVmaW5lQ3VzdG9tRWxlbWVudCgpOyB9KSA6IHVuZGVmaW5lZCk7XG5leHBvcnQgY29uc3QgQ2FsY2l0ZVN3aXRjaCA9IC8qQF9fUFVSRV9fKi8gY3JlYXRlUmVhY3RDb21wb25lbnQoJ2NhbGNpdGUtc3dpdGNoJywgdW5kZWZpbmVkLCB1bmRlZmluZWQsIGlzQnJvd3NlciAmJiAhaXNOb2RlID8gKCkgPT4gX19hd2FpdGVyKHZvaWQgMCwgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7IHJldHVybiAoeWllbGQgaW1wb3J0KCdAZXNyaS9jYWxjaXRlLWNvbXBvbmVudHMvZGlzdC9jb21wb25lbnRzL2NhbGNpdGUtc3dpdGNoLmpzJykpLmRlZmluZUN1c3RvbUVsZW1lbnQoKTsgfSkgOiB1bmRlZmluZWQpO1xuZXhwb3J0IGNvbnN0IENhbGNpdGVUYWIgPSAvKkBfX1BVUkVfXyovIGNyZWF0ZVJlYWN0Q29tcG9uZW50KCdjYWxjaXRlLXRhYicsIHVuZGVmaW5lZCwgdW5kZWZpbmVkLCBpc0Jyb3dzZXIgJiYgIWlzTm9kZSA/ICgpID0+IF9fYXdhaXRlcih2b2lkIDAsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkgeyByZXR1cm4gKHlpZWxkIGltcG9ydCgnQGVzcmkvY2FsY2l0ZS1jb21wb25lbnRzL2Rpc3QvY29tcG9uZW50cy9jYWxjaXRlLXRhYi5qcycpKS5kZWZpbmVDdXN0b21FbGVtZW50KCk7IH0pIDogdW5kZWZpbmVkKTtcbmV4cG9ydCBjb25zdCBDYWxjaXRlVGFiTmF2ID0gLypAX19QVVJFX18qLyBjcmVhdGVSZWFjdENvbXBvbmVudCgnY2FsY2l0ZS10YWItbmF2JywgdW5kZWZpbmVkLCB1bmRlZmluZWQsIGlzQnJvd3NlciAmJiAhaXNOb2RlID8gKCkgPT4gX19hd2FpdGVyKHZvaWQgMCwgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7IHJldHVybiAoeWllbGQgaW1wb3J0KCdAZXNyaS9jYWxjaXRlLWNvbXBvbmVudHMvZGlzdC9jb21wb25lbnRzL2NhbGNpdGUtdGFiLW5hdi5qcycpKS5kZWZpbmVDdXN0b21FbGVtZW50KCk7IH0pIDogdW5kZWZpbmVkKTtcbmV4cG9ydCBjb25zdCBDYWxjaXRlVGFiVGl0bGUgPSAvKkBfX1BVUkVfXyovIGNyZWF0ZVJlYWN0Q29tcG9uZW50KCdjYWxjaXRlLXRhYi10aXRsZScsIHVuZGVmaW5lZCwgdW5kZWZpbmVkLCBpc0Jyb3dzZXIgJiYgIWlzTm9kZSA/ICgpID0+IF9fYXdhaXRlcih2b2lkIDAsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkgeyByZXR1cm4gKHlpZWxkIGltcG9ydCgnQGVzcmkvY2FsY2l0ZS1jb21wb25lbnRzL2Rpc3QvY29tcG9uZW50cy9jYWxjaXRlLXRhYi10aXRsZS5qcycpKS5kZWZpbmVDdXN0b21FbGVtZW50KCk7IH0pIDogdW5kZWZpbmVkKTtcbmV4cG9ydCBjb25zdCBDYWxjaXRlVGFibGUgPSAvKkBfX1BVUkVfXyovIGNyZWF0ZVJlYWN0Q29tcG9uZW50KCdjYWxjaXRlLXRhYmxlJywgdW5kZWZpbmVkLCB1bmRlZmluZWQsIGlzQnJvd3NlciAmJiAhaXNOb2RlID8gKCkgPT4gX19hd2FpdGVyKHZvaWQgMCwgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7IHJldHVybiAoeWllbGQgaW1wb3J0KCdAZXNyaS9jYWxjaXRlLWNvbXBvbmVudHMvZGlzdC9jb21wb25lbnRzL2NhbGNpdGUtdGFibGUuanMnKSkuZGVmaW5lQ3VzdG9tRWxlbWVudCgpOyB9KSA6IHVuZGVmaW5lZCk7XG5leHBvcnQgY29uc3QgQ2FsY2l0ZVRhYmxlQ2VsbCA9IC8qQF9fUFVSRV9fKi8gY3JlYXRlUmVhY3RDb21wb25lbnQoJ2NhbGNpdGUtdGFibGUtY2VsbCcsIHVuZGVmaW5lZCwgdW5kZWZpbmVkLCBpc0Jyb3dzZXIgJiYgIWlzTm9kZSA/ICgpID0+IF9fYXdhaXRlcih2b2lkIDAsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkgeyByZXR1cm4gKHlpZWxkIGltcG9ydCgnQGVzcmkvY2FsY2l0ZS1jb21wb25lbnRzL2Rpc3QvY29tcG9uZW50cy9jYWxjaXRlLXRhYmxlLWNlbGwuanMnKSkuZGVmaW5lQ3VzdG9tRWxlbWVudCgpOyB9KSA6IHVuZGVmaW5lZCk7XG5leHBvcnQgY29uc3QgQ2FsY2l0ZVRhYmxlSGVhZGVyID0gLypAX19QVVJFX18qLyBjcmVhdGVSZWFjdENvbXBvbmVudCgnY2FsY2l0ZS10YWJsZS1oZWFkZXInLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgaXNCcm93c2VyICYmICFpc05vZGUgPyAoKSA9PiBfX2F3YWl0ZXIodm9pZCAwLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHsgcmV0dXJuICh5aWVsZCBpbXBvcnQoJ0Blc3JpL2NhbGNpdGUtY29tcG9uZW50cy9kaXN0L2NvbXBvbmVudHMvY2FsY2l0ZS10YWJsZS1oZWFkZXIuanMnKSkuZGVmaW5lQ3VzdG9tRWxlbWVudCgpOyB9KSA6IHVuZGVmaW5lZCk7XG5leHBvcnQgY29uc3QgQ2FsY2l0ZVRhYmxlUm93ID0gLypAX19QVVJFX18qLyBjcmVhdGVSZWFjdENvbXBvbmVudCgnY2FsY2l0ZS10YWJsZS1yb3cnLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgaXNCcm93c2VyICYmICFpc05vZGUgPyAoKSA9PiBfX2F3YWl0ZXIodm9pZCAwLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHsgcmV0dXJuICh5aWVsZCBpbXBvcnQoJ0Blc3JpL2NhbGNpdGUtY29tcG9uZW50cy9kaXN0L2NvbXBvbmVudHMvY2FsY2l0ZS10YWJsZS1yb3cuanMnKSkuZGVmaW5lQ3VzdG9tRWxlbWVudCgpOyB9KSA6IHVuZGVmaW5lZCk7XG5leHBvcnQgY29uc3QgQ2FsY2l0ZVRhYnMgPSAvKkBfX1BVUkVfXyovIGNyZWF0ZVJlYWN0Q29tcG9uZW50KCdjYWxjaXRlLXRhYnMnLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgaXNCcm93c2VyICYmICFpc05vZGUgPyAoKSA9PiBfX2F3YWl0ZXIodm9pZCAwLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHsgcmV0dXJuICh5aWVsZCBpbXBvcnQoJ0Blc3JpL2NhbGNpdGUtY29tcG9uZW50cy9kaXN0L2NvbXBvbmVudHMvY2FsY2l0ZS10YWJzLmpzJykpLmRlZmluZUN1c3RvbUVsZW1lbnQoKTsgfSkgOiB1bmRlZmluZWQpO1xuZXhwb3J0IGNvbnN0IENhbGNpdGVUZXh0QXJlYSA9IC8qQF9fUFVSRV9fKi8gY3JlYXRlUmVhY3RDb21wb25lbnQoJ2NhbGNpdGUtdGV4dC1hcmVhJywgdW5kZWZpbmVkLCB1bmRlZmluZWQsIGlzQnJvd3NlciAmJiAhaXNOb2RlID8gKCkgPT4gX19hd2FpdGVyKHZvaWQgMCwgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7IHJldHVybiAoeWllbGQgaW1wb3J0KCdAZXNyaS9jYWxjaXRlLWNvbXBvbmVudHMvZGlzdC9jb21wb25lbnRzL2NhbGNpdGUtdGV4dC1hcmVhLmpzJykpLmRlZmluZUN1c3RvbUVsZW1lbnQoKTsgfSkgOiB1bmRlZmluZWQpO1xuZXhwb3J0IGNvbnN0IENhbGNpdGVUaWxlID0gLypAX19QVVJFX18qLyBjcmVhdGVSZWFjdENvbXBvbmVudCgnY2FsY2l0ZS10aWxlJywgdW5kZWZpbmVkLCB1bmRlZmluZWQsIGlzQnJvd3NlciAmJiAhaXNOb2RlID8gKCkgPT4gX19hd2FpdGVyKHZvaWQgMCwgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7IHJldHVybiAoeWllbGQgaW1wb3J0KCdAZXNyaS9jYWxjaXRlLWNvbXBvbmVudHMvZGlzdC9jb21wb25lbnRzL2NhbGNpdGUtdGlsZS5qcycpKS5kZWZpbmVDdXN0b21FbGVtZW50KCk7IH0pIDogdW5kZWZpbmVkKTtcbmV4cG9ydCBjb25zdCBDYWxjaXRlVGlsZVNlbGVjdCA9IC8qQF9fUFVSRV9fKi8gY3JlYXRlUmVhY3RDb21wb25lbnQoJ2NhbGNpdGUtdGlsZS1zZWxlY3QnLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgaXNCcm93c2VyICYmICFpc05vZGUgPyAoKSA9PiBfX2F3YWl0ZXIodm9pZCAwLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHsgcmV0dXJuICh5aWVsZCBpbXBvcnQoJ0Blc3JpL2NhbGNpdGUtY29tcG9uZW50cy9kaXN0L2NvbXBvbmVudHMvY2FsY2l0ZS10aWxlLXNlbGVjdC5qcycpKS5kZWZpbmVDdXN0b21FbGVtZW50KCk7IH0pIDogdW5kZWZpbmVkKTtcbmV4cG9ydCBjb25zdCBDYWxjaXRlVGlsZVNlbGVjdEdyb3VwID0gLypAX19QVVJFX18qLyBjcmVhdGVSZWFjdENvbXBvbmVudCgnY2FsY2l0ZS10aWxlLXNlbGVjdC1ncm91cCcsIHVuZGVmaW5lZCwgdW5kZWZpbmVkLCBpc0Jyb3dzZXIgJiYgIWlzTm9kZSA/ICgpID0+IF9fYXdhaXRlcih2b2lkIDAsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkgeyByZXR1cm4gKHlpZWxkIGltcG9ydCgnQGVzcmkvY2FsY2l0ZS1jb21wb25lbnRzL2Rpc3QvY29tcG9uZW50cy9jYWxjaXRlLXRpbGUtc2VsZWN0LWdyb3VwLmpzJykpLmRlZmluZUN1c3RvbUVsZW1lbnQoKTsgfSkgOiB1bmRlZmluZWQpO1xuZXhwb3J0IGNvbnN0IENhbGNpdGVUaW1lUGlja2VyID0gLypAX19QVVJFX18qLyBjcmVhdGVSZWFjdENvbXBvbmVudCgnY2FsY2l0ZS10aW1lLXBpY2tlcicsIHVuZGVmaW5lZCwgdW5kZWZpbmVkLCBpc0Jyb3dzZXIgJiYgIWlzTm9kZSA/ICgpID0+IF9fYXdhaXRlcih2b2lkIDAsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkgeyByZXR1cm4gKHlpZWxkIGltcG9ydCgnQGVzcmkvY2FsY2l0ZS1jb21wb25lbnRzL2Rpc3QvY29tcG9uZW50cy9jYWxjaXRlLXRpbWUtcGlja2VyLmpzJykpLmRlZmluZUN1c3RvbUVsZW1lbnQoKTsgfSkgOiB1bmRlZmluZWQpO1xuZXhwb3J0IGNvbnN0IENhbGNpdGVUaXAgPSAvKkBfX1BVUkVfXyovIGNyZWF0ZVJlYWN0Q29tcG9uZW50KCdjYWxjaXRlLXRpcCcsIHVuZGVmaW5lZCwgdW5kZWZpbmVkLCBpc0Jyb3dzZXIgJiYgIWlzTm9kZSA/ICgpID0+IF9fYXdhaXRlcih2b2lkIDAsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkgeyByZXR1cm4gKHlpZWxkIGltcG9ydCgnQGVzcmkvY2FsY2l0ZS1jb21wb25lbnRzL2Rpc3QvY29tcG9uZW50cy9jYWxjaXRlLXRpcC5qcycpKS5kZWZpbmVDdXN0b21FbGVtZW50KCk7IH0pIDogdW5kZWZpbmVkKTtcbmV4cG9ydCBjb25zdCBDYWxjaXRlVGlwR3JvdXAgPSAvKkBfX1BVUkVfXyovIGNyZWF0ZVJlYWN0Q29tcG9uZW50KCdjYWxjaXRlLXRpcC1ncm91cCcsIHVuZGVmaW5lZCwgdW5kZWZpbmVkLCBpc0Jyb3dzZXIgJiYgIWlzTm9kZSA/ICgpID0+IF9fYXdhaXRlcih2b2lkIDAsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkgeyByZXR1cm4gKHlpZWxkIGltcG9ydCgnQGVzcmkvY2FsY2l0ZS1jb21wb25lbnRzL2Rpc3QvY29tcG9uZW50cy9jYWxjaXRlLXRpcC1ncm91cC5qcycpKS5kZWZpbmVDdXN0b21FbGVtZW50KCk7IH0pIDogdW5kZWZpbmVkKTtcbmV4cG9ydCBjb25zdCBDYWxjaXRlVGlwTWFuYWdlciA9IC8qQF9fUFVSRV9fKi8gY3JlYXRlUmVhY3RDb21wb25lbnQoJ2NhbGNpdGUtdGlwLW1hbmFnZXInLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgaXNCcm93c2VyICYmICFpc05vZGUgPyAoKSA9PiBfX2F3YWl0ZXIodm9pZCAwLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHsgcmV0dXJuICh5aWVsZCBpbXBvcnQoJ0Blc3JpL2NhbGNpdGUtY29tcG9uZW50cy9kaXN0L2NvbXBvbmVudHMvY2FsY2l0ZS10aXAtbWFuYWdlci5qcycpKS5kZWZpbmVDdXN0b21FbGVtZW50KCk7IH0pIDogdW5kZWZpbmVkKTtcbmV4cG9ydCBjb25zdCBDYWxjaXRlVG9vbHRpcCA9IC8qQF9fUFVSRV9fKi8gY3JlYXRlUmVhY3RDb21wb25lbnQoJ2NhbGNpdGUtdG9vbHRpcCcsIHVuZGVmaW5lZCwgdW5kZWZpbmVkLCBpc0Jyb3dzZXIgJiYgIWlzTm9kZSA/ICgpID0+IF9fYXdhaXRlcih2b2lkIDAsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkgeyByZXR1cm4gKHlpZWxkIGltcG9ydCgnQGVzcmkvY2FsY2l0ZS1jb21wb25lbnRzL2Rpc3QvY29tcG9uZW50cy9jYWxjaXRlLXRvb2x0aXAuanMnKSkuZGVmaW5lQ3VzdG9tRWxlbWVudCgpOyB9KSA6IHVuZGVmaW5lZCk7XG5leHBvcnQgY29uc3QgQ2FsY2l0ZVRyZWUgPSAvKkBfX1BVUkVfXyovIGNyZWF0ZVJlYWN0Q29tcG9uZW50KCdjYWxjaXRlLXRyZWUnLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgaXNCcm93c2VyICYmICFpc05vZGUgPyAoKSA9PiBfX2F3YWl0ZXIodm9pZCAwLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHsgcmV0dXJuICh5aWVsZCBpbXBvcnQoJ0Blc3JpL2NhbGNpdGUtY29tcG9uZW50cy9kaXN0L2NvbXBvbmVudHMvY2FsY2l0ZS10cmVlLmpzJykpLmRlZmluZUN1c3RvbUVsZW1lbnQoKTsgfSkgOiB1bmRlZmluZWQpO1xuZXhwb3J0IGNvbnN0IENhbGNpdGVUcmVlSXRlbSA9IC8qQF9fUFVSRV9fKi8gY3JlYXRlUmVhY3RDb21wb25lbnQoJ2NhbGNpdGUtdHJlZS1pdGVtJywgdW5kZWZpbmVkLCB1bmRlZmluZWQsIGlzQnJvd3NlciAmJiAhaXNOb2RlID8gKCkgPT4gX19hd2FpdGVyKHZvaWQgMCwgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7IHJldHVybiAoeWllbGQgaW1wb3J0KCdAZXNyaS9jYWxjaXRlLWNvbXBvbmVudHMvZGlzdC9jb21wb25lbnRzL2NhbGNpdGUtdHJlZS1pdGVtLmpzJykpLmRlZmluZUN1c3RvbUVsZW1lbnQoKTsgfSkgOiB1bmRlZmluZWQpO1xuZXhwb3J0IGNvbnN0IENhbGNpdGVWYWx1ZUxpc3QgPSAvKkBfX1BVUkVfXyovIGNyZWF0ZVJlYWN0Q29tcG9uZW50KCdjYWxjaXRlLXZhbHVlLWxpc3QnLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgaXNCcm93c2VyICYmICFpc05vZGUgPyAoKSA9PiBfX2F3YWl0ZXIodm9pZCAwLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHsgcmV0dXJuICh5aWVsZCBpbXBvcnQoJ0Blc3JpL2NhbGNpdGUtY29tcG9uZW50cy9kaXN0L2NvbXBvbmVudHMvY2FsY2l0ZS12YWx1ZS1saXN0LmpzJykpLmRlZmluZUN1c3RvbUVsZW1lbnQoKTsgfSkgOiB1bmRlZmluZWQpO1xuZXhwb3J0IGNvbnN0IENhbGNpdGVWYWx1ZUxpc3RJdGVtID0gLypAX19QVVJFX18qLyBjcmVhdGVSZWFjdENvbXBvbmVudCgnY2FsY2l0ZS12YWx1ZS1saXN0LWl0ZW0nLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgaXNCcm93c2VyICYmICFpc05vZGUgPyAoKSA9PiBfX2F3YWl0ZXIodm9pZCAwLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHsgcmV0dXJuICh5aWVsZCBpbXBvcnQoJ0Blc3JpL2NhbGNpdGUtY29tcG9uZW50cy9kaXN0L2NvbXBvbmVudHMvY2FsY2l0ZS12YWx1ZS1saXN0LWl0ZW0uanMnKSkuZGVmaW5lQ3VzdG9tRWxlbWVudCgpOyB9KSA6IHVuZGVmaW5lZCk7XG4iLCJ2YXIgX19yZXN0ID0gKHRoaXMgJiYgdGhpcy5fX3Jlc3QpIHx8IGZ1bmN0aW9uIChzLCBlKSB7XG4gICAgdmFyIHQgPSB7fTtcbiAgICBmb3IgKHZhciBwIGluIHMpIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwocywgcCkgJiYgZS5pbmRleE9mKHApIDwgMClcbiAgICAgICAgdFtwXSA9IHNbcF07XG4gICAgaWYgKHMgIT0gbnVsbCAmJiB0eXBlb2YgT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyA9PT0gXCJmdW5jdGlvblwiKVxuICAgICAgICBmb3IgKHZhciBpID0gMCwgcCA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMocyk7IGkgPCBwLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICBpZiAoZS5pbmRleE9mKHBbaV0pIDwgMCAmJiBPYmplY3QucHJvdG90eXBlLnByb3BlcnR5SXNFbnVtZXJhYmxlLmNhbGwocywgcFtpXSkpXG4gICAgICAgICAgICAgICAgdFtwW2ldXSA9IHNbcFtpXV07XG4gICAgICAgIH1cbiAgICByZXR1cm4gdDtcbn07XG5pbXBvcnQgUmVhY3QsIHsgY3JlYXRlRWxlbWVudCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IGF0dGFjaFByb3BzLCBjYW1lbFRvRGFzaENhc2UsIGNyZWF0ZUZvcndhcmRSZWYsIGRhc2hUb1Bhc2NhbENhc2UsIGlzQ292ZXJlZEJ5UmVhY3QsIG1lcmdlUmVmcyB9IGZyb20gJy4vdXRpbHMnO1xuZXhwb3J0IGNvbnN0IGNyZWF0ZVJlYWN0Q29tcG9uZW50ID0gKHRhZ05hbWUsIFJlYWN0Q29tcG9uZW50Q29udGV4dCwgbWFuaXB1bGF0ZVByb3BzRnVuY3Rpb24sIGRlZmluZUN1c3RvbUVsZW1lbnQpID0+IHtcbiAgICBpZiAoZGVmaW5lQ3VzdG9tRWxlbWVudCAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIGRlZmluZUN1c3RvbUVsZW1lbnQoKTtcbiAgICB9XG4gICAgY29uc3QgZGlzcGxheU5hbWUgPSBkYXNoVG9QYXNjYWxDYXNlKHRhZ05hbWUpO1xuICAgIGNvbnN0IFJlYWN0Q29tcG9uZW50ID0gY2xhc3MgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICAgICAgICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgICAgICAgICAgc3VwZXIocHJvcHMpO1xuICAgICAgICAgICAgdGhpcy5zZXRDb21wb25lbnRFbFJlZiA9IChlbGVtZW50KSA9PiB7XG4gICAgICAgICAgICAgICAgdGhpcy5jb21wb25lbnRFbCA9IGVsZW1lbnQ7XG4gICAgICAgICAgICB9O1xuICAgICAgICB9XG4gICAgICAgIGNvbXBvbmVudERpZE1vdW50KCkge1xuICAgICAgICAgICAgdGhpcy5jb21wb25lbnREaWRVcGRhdGUodGhpcy5wcm9wcyk7XG4gICAgICAgIH1cbiAgICAgICAgY29tcG9uZW50RGlkVXBkYXRlKHByZXZQcm9wcykge1xuICAgICAgICAgICAgYXR0YWNoUHJvcHModGhpcy5jb21wb25lbnRFbCwgdGhpcy5wcm9wcywgcHJldlByb3BzKTtcbiAgICAgICAgfVxuICAgICAgICByZW5kZXIoKSB7XG4gICAgICAgICAgICBjb25zdCBfYSA9IHRoaXMucHJvcHMsIHsgY2hpbGRyZW4sIGZvcndhcmRlZFJlZiwgc3R5bGUsIGNsYXNzTmFtZSwgcmVmIH0gPSBfYSwgY1Byb3BzID0gX19yZXN0KF9hLCBbXCJjaGlsZHJlblwiLCBcImZvcndhcmRlZFJlZlwiLCBcInN0eWxlXCIsIFwiY2xhc3NOYW1lXCIsIFwicmVmXCJdKTtcbiAgICAgICAgICAgIGxldCBwcm9wc1RvUGFzcyA9IE9iamVjdC5rZXlzKGNQcm9wcykucmVkdWNlKChhY2MsIG5hbWUpID0+IHtcbiAgICAgICAgICAgICAgICBjb25zdCB2YWx1ZSA9IGNQcm9wc1tuYW1lXTtcbiAgICAgICAgICAgICAgICBpZiAobmFtZS5pbmRleE9mKCdvbicpID09PSAwICYmIG5hbWVbMl0gPT09IG5hbWVbMl0udG9VcHBlckNhc2UoKSkge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBldmVudE5hbWUgPSBuYW1lLnN1YnN0cmluZygyKS50b0xvd2VyQ2FzZSgpO1xuICAgICAgICAgICAgICAgICAgICBpZiAodHlwZW9mIGRvY3VtZW50ICE9PSAndW5kZWZpbmVkJyAmJiBpc0NvdmVyZWRCeVJlYWN0KGV2ZW50TmFtZSkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGFjY1tuYW1lXSA9IHZhbHVlO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAvLyB3ZSBzaG91bGQgb25seSByZW5kZXIgc3RyaW5ncywgYm9vbGVhbnMsIGFuZCBudW1iZXJzIGFzIGF0dHJzIGluIGh0bWwuXG4gICAgICAgICAgICAgICAgICAgIC8vIG9iamVjdHMsIGZ1bmN0aW9ucywgYXJyYXlzIGV0YyBnZXQgc3luY2VkIHZpYSBwcm9wZXJ0aWVzIG9uIG1vdW50LlxuICAgICAgICAgICAgICAgICAgICBjb25zdCB0eXBlID0gdHlwZW9mIHZhbHVlO1xuICAgICAgICAgICAgICAgICAgICBpZiAodHlwZSA9PT0gJ3N0cmluZycgfHwgdHlwZSA9PT0gJ2Jvb2xlYW4nIHx8IHR5cGUgPT09ICdudW1iZXInKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBhY2NbY2FtZWxUb0Rhc2hDYXNlKG5hbWUpXSA9IHZhbHVlO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiBhY2M7XG4gICAgICAgICAgICB9LCB7fSk7XG4gICAgICAgICAgICBpZiAobWFuaXB1bGF0ZVByb3BzRnVuY3Rpb24pIHtcbiAgICAgICAgICAgICAgICBwcm9wc1RvUGFzcyA9IG1hbmlwdWxhdGVQcm9wc0Z1bmN0aW9uKHRoaXMucHJvcHMsIHByb3BzVG9QYXNzKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNvbnN0IG5ld1Byb3BzID0gT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHt9LCBwcm9wc1RvUGFzcyksIHsgcmVmOiBtZXJnZVJlZnMoZm9yd2FyZGVkUmVmLCB0aGlzLnNldENvbXBvbmVudEVsUmVmKSwgc3R5bGUgfSk7XG4gICAgICAgICAgICAvKipcbiAgICAgICAgICAgICAqIFdlIHVzZSBjcmVhdGVFbGVtZW50IGhlcmUgaW5zdGVhZCBvZlxuICAgICAgICAgICAgICogUmVhY3QuY3JlYXRlRWxlbWVudCB0byB3b3JrIGFyb3VuZCBhXG4gICAgICAgICAgICAgKiBidWcgaW4gVml0ZSAoaHR0cHM6Ly9naXRodWIuY29tL3ZpdGVqcy92aXRlL2lzc3Vlcy82MTA0KS5cbiAgICAgICAgICAgICAqIFJlYWN0LmNyZWF0ZUVsZW1lbnQgY2F1c2VzIGFsbCBlbGVtZW50cyB0byBiZSByZW5kZXJlZFxuICAgICAgICAgICAgICogYXMgPHRhZ25hbWU+IGluc3RlYWQgb2YgdGhlIGFjdHVhbCBXZWIgQ29tcG9uZW50LlxuICAgICAgICAgICAgICovXG4gICAgICAgICAgICByZXR1cm4gY3JlYXRlRWxlbWVudCh0YWdOYW1lLCBuZXdQcm9wcywgY2hpbGRyZW4pO1xuICAgICAgICB9XG4gICAgICAgIHN0YXRpYyBnZXQgZGlzcGxheU5hbWUoKSB7XG4gICAgICAgICAgICByZXR1cm4gZGlzcGxheU5hbWU7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIC8vIElmIGNvbnRleHQgd2FzIHBhc3NlZCB0byBjcmVhdGVSZWFjdENvbXBvbmVudCB0aGVuIGNvbmRpdGlvbmFsbHkgYWRkIGl0IHRvIHRoZSBDb21wb25lbnQgQ2xhc3NcbiAgICBpZiAoUmVhY3RDb21wb25lbnRDb250ZXh0KSB7XG4gICAgICAgIFJlYWN0Q29tcG9uZW50LmNvbnRleHRUeXBlID0gUmVhY3RDb21wb25lbnRDb250ZXh0O1xuICAgIH1cbiAgICByZXR1cm4gY3JlYXRlRm9yd2FyZFJlZihSZWFjdENvbXBvbmVudCwgZGlzcGxheU5hbWUpO1xufTtcbiIsImltcG9ydCB7IGNhbWVsVG9EYXNoQ2FzZSB9IGZyb20gJy4vY2FzZSc7XG5leHBvcnQgY29uc3QgYXR0YWNoUHJvcHMgPSAobm9kZSwgbmV3UHJvcHMsIG9sZFByb3BzID0ge30pID0+IHtcbiAgICAvLyBzb21lIHRlc3QgZnJhbWV3b3JrcyBkb24ndCByZW5kZXIgRE9NIGVsZW1lbnRzLCBzbyB3ZSB0ZXN0IGhlcmUgdG8gbWFrZSBzdXJlIHdlIGFyZSBkZWFsaW5nIHdpdGggRE9NIGZpcnN0XG4gICAgaWYgKG5vZGUgaW5zdGFuY2VvZiBFbGVtZW50KSB7XG4gICAgICAgIC8vIGFkZCBhbnkgY2xhc3NlcyBpbiBjbGFzc05hbWUgdG8gdGhlIGNsYXNzIGxpc3RcbiAgICAgICAgY29uc3QgY2xhc3NOYW1lID0gZ2V0Q2xhc3NOYW1lKG5vZGUuY2xhc3NMaXN0LCBuZXdQcm9wcywgb2xkUHJvcHMpO1xuICAgICAgICBpZiAoY2xhc3NOYW1lICE9PSAnJykge1xuICAgICAgICAgICAgbm9kZS5jbGFzc05hbWUgPSBjbGFzc05hbWU7XG4gICAgICAgIH1cbiAgICAgICAgT2JqZWN0LmtleXMobmV3UHJvcHMpLmZvckVhY2goKG5hbWUpID0+IHtcbiAgICAgICAgICAgIGlmIChuYW1lID09PSAnY2hpbGRyZW4nIHx8XG4gICAgICAgICAgICAgICAgbmFtZSA9PT0gJ3N0eWxlJyB8fFxuICAgICAgICAgICAgICAgIG5hbWUgPT09ICdyZWYnIHx8XG4gICAgICAgICAgICAgICAgbmFtZSA9PT0gJ2NsYXNzJyB8fFxuICAgICAgICAgICAgICAgIG5hbWUgPT09ICdjbGFzc05hbWUnIHx8XG4gICAgICAgICAgICAgICAgbmFtZSA9PT0gJ2ZvcndhcmRlZFJlZicpIHtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAobmFtZS5pbmRleE9mKCdvbicpID09PSAwICYmIG5hbWVbMl0gPT09IG5hbWVbMl0udG9VcHBlckNhc2UoKSkge1xuICAgICAgICAgICAgICAgIGNvbnN0IGV2ZW50TmFtZSA9IG5hbWUuc3Vic3RyaW5nKDIpO1xuICAgICAgICAgICAgICAgIGNvbnN0IGV2ZW50TmFtZUxjID0gZXZlbnROYW1lWzBdLnRvTG93ZXJDYXNlKCkgKyBldmVudE5hbWUuc3Vic3RyaW5nKDEpO1xuICAgICAgICAgICAgICAgIGlmICghaXNDb3ZlcmVkQnlSZWFjdChldmVudE5hbWVMYykpIHtcbiAgICAgICAgICAgICAgICAgICAgc3luY0V2ZW50KG5vZGUsIGV2ZW50TmFtZUxjLCBuZXdQcm9wc1tuYW1lXSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgbm9kZVtuYW1lXSA9IG5ld1Byb3BzW25hbWVdO1xuICAgICAgICAgICAgICAgIGNvbnN0IHByb3BUeXBlID0gdHlwZW9mIG5ld1Byb3BzW25hbWVdO1xuICAgICAgICAgICAgICAgIGlmIChwcm9wVHlwZSA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgICAgICAgICAgbm9kZS5zZXRBdHRyaWJ1dGUoY2FtZWxUb0Rhc2hDYXNlKG5hbWUpLCBuZXdQcm9wc1tuYW1lXSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9XG59O1xuZXhwb3J0IGNvbnN0IGdldENsYXNzTmFtZSA9IChjbGFzc0xpc3QsIG5ld1Byb3BzLCBvbGRQcm9wcykgPT4ge1xuICAgIGNvbnN0IG5ld0NsYXNzUHJvcCA9IG5ld1Byb3BzLmNsYXNzTmFtZSB8fCBuZXdQcm9wcy5jbGFzcztcbiAgICBjb25zdCBvbGRDbGFzc1Byb3AgPSBvbGRQcm9wcy5jbGFzc05hbWUgfHwgb2xkUHJvcHMuY2xhc3M7XG4gICAgLy8gbWFwIHRoZSBjbGFzc2VzIHRvIE1hcHMgZm9yIHBlcmZvcm1hbmNlXG4gICAgY29uc3QgY3VycmVudENsYXNzZXMgPSBhcnJheVRvTWFwKGNsYXNzTGlzdCk7XG4gICAgY29uc3QgaW5jb21pbmdQcm9wQ2xhc3NlcyA9IGFycmF5VG9NYXAobmV3Q2xhc3NQcm9wID8gbmV3Q2xhc3NQcm9wLnNwbGl0KCcgJykgOiBbXSk7XG4gICAgY29uc3Qgb2xkUHJvcENsYXNzZXMgPSBhcnJheVRvTWFwKG9sZENsYXNzUHJvcCA/IG9sZENsYXNzUHJvcC5zcGxpdCgnICcpIDogW10pO1xuICAgIGNvbnN0IGZpbmFsQ2xhc3NOYW1lcyA9IFtdO1xuICAgIC8vIGxvb3AgdGhyb3VnaCBlYWNoIG9mIHRoZSBjdXJyZW50IGNsYXNzZXMgb24gdGhlIGNvbXBvbmVudFxuICAgIC8vIHRvIHNlZSBpZiBpdCBzaG91bGQgYmUgYSBwYXJ0IG9mIHRoZSBjbGFzc05hbWVzIGFkZGVkXG4gICAgY3VycmVudENsYXNzZXMuZm9yRWFjaCgoY3VycmVudENsYXNzKSA9PiB7XG4gICAgICAgIGlmIChpbmNvbWluZ1Byb3BDbGFzc2VzLmhhcyhjdXJyZW50Q2xhc3MpKSB7XG4gICAgICAgICAgICAvLyBhZGQgaXQgYXMgaXRzIGFscmVhZHkgaW5jbHVkZWQgaW4gY2xhc3NuYW1lcyBjb21pbmcgaW4gZnJvbSBuZXdQcm9wc1xuICAgICAgICAgICAgZmluYWxDbGFzc05hbWVzLnB1c2goY3VycmVudENsYXNzKTtcbiAgICAgICAgICAgIGluY29taW5nUHJvcENsYXNzZXMuZGVsZXRlKGN1cnJlbnRDbGFzcyk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoIW9sZFByb3BDbGFzc2VzLmhhcyhjdXJyZW50Q2xhc3MpKSB7XG4gICAgICAgICAgICAvLyBhZGQgaXQgYXMgaXQgaGFzIE5PVCBiZWVuIHJlbW92ZWQgYnkgdXNlclxuICAgICAgICAgICAgZmluYWxDbGFzc05hbWVzLnB1c2goY3VycmVudENsYXNzKTtcbiAgICAgICAgfVxuICAgIH0pO1xuICAgIGluY29taW5nUHJvcENsYXNzZXMuZm9yRWFjaCgocykgPT4gZmluYWxDbGFzc05hbWVzLnB1c2gocykpO1xuICAgIHJldHVybiBmaW5hbENsYXNzTmFtZXMuam9pbignICcpO1xufTtcbi8qKlxuICogVHJhbnNmb3JtcyBhIFJlYWN0IGV2ZW50IG5hbWUgdG8gYSBicm93c2VyIGV2ZW50IG5hbWUuXG4gKi9cbmV4cG9ydCBjb25zdCB0cmFuc2Zvcm1SZWFjdEV2ZW50TmFtZSA9IChldmVudE5hbWVTdWZmaXgpID0+IHtcbiAgICBzd2l0Y2ggKGV2ZW50TmFtZVN1ZmZpeCkge1xuICAgICAgICBjYXNlICdkb3VibGVjbGljayc6XG4gICAgICAgICAgICByZXR1cm4gJ2RibGNsaWNrJztcbiAgICB9XG4gICAgcmV0dXJuIGV2ZW50TmFtZVN1ZmZpeDtcbn07XG4vKipcbiAqIENoZWNrcyBpZiBhbiBldmVudCBpcyBzdXBwb3J0ZWQgaW4gdGhlIGN1cnJlbnQgZXhlY3V0aW9uIGVudmlyb25tZW50LlxuICogQGxpY2Vuc2UgTW9kZXJuaXpyIDMuMC4wcHJlIChDdXN0b20gQnVpbGQpIHwgTUlUXG4gKi9cbmV4cG9ydCBjb25zdCBpc0NvdmVyZWRCeVJlYWN0ID0gKGV2ZW50TmFtZVN1ZmZpeCkgPT4ge1xuICAgIGlmICh0eXBlb2YgZG9jdW1lbnQgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgY29uc3QgZXZlbnROYW1lID0gJ29uJyArIHRyYW5zZm9ybVJlYWN0RXZlbnROYW1lKGV2ZW50TmFtZVN1ZmZpeCk7XG4gICAgICAgIGxldCBpc1N1cHBvcnRlZCA9IGV2ZW50TmFtZSBpbiBkb2N1bWVudDtcbiAgICAgICAgaWYgKCFpc1N1cHBvcnRlZCkge1xuICAgICAgICAgICAgY29uc3QgZWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgICAgICAgICAgZWxlbWVudC5zZXRBdHRyaWJ1dGUoZXZlbnROYW1lLCAncmV0dXJuOycpO1xuICAgICAgICAgICAgaXNTdXBwb3J0ZWQgPSB0eXBlb2YgZWxlbWVudFtldmVudE5hbWVdID09PSAnZnVuY3Rpb24nO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBpc1N1cHBvcnRlZDtcbiAgICB9XG59O1xuZXhwb3J0IGNvbnN0IHN5bmNFdmVudCA9IChub2RlLCBldmVudE5hbWUsIG5ld0V2ZW50SGFuZGxlcikgPT4ge1xuICAgIGNvbnN0IGV2ZW50U3RvcmUgPSBub2RlLl9fZXZlbnRzIHx8IChub2RlLl9fZXZlbnRzID0ge30pO1xuICAgIGNvbnN0IG9sZEV2ZW50SGFuZGxlciA9IGV2ZW50U3RvcmVbZXZlbnROYW1lXTtcbiAgICAvLyBSZW1vdmUgb2xkIGxpc3RlbmVyIHNvIHRoZXkgZG9uJ3QgZG91YmxlIHVwLlxuICAgIGlmIChvbGRFdmVudEhhbmRsZXIpIHtcbiAgICAgICAgbm9kZS5yZW1vdmVFdmVudExpc3RlbmVyKGV2ZW50TmFtZSwgb2xkRXZlbnRIYW5kbGVyKTtcbiAgICB9XG4gICAgLy8gQmluZCBuZXcgbGlzdGVuZXIuXG4gICAgbm9kZS5hZGRFdmVudExpc3RlbmVyKGV2ZW50TmFtZSwgKGV2ZW50U3RvcmVbZXZlbnROYW1lXSA9IGZ1bmN0aW9uIGhhbmRsZXIoZSkge1xuICAgICAgICBpZiAobmV3RXZlbnRIYW5kbGVyKSB7XG4gICAgICAgICAgICBuZXdFdmVudEhhbmRsZXIuY2FsbCh0aGlzLCBlKTtcbiAgICAgICAgfVxuICAgIH0pKTtcbn07XG5jb25zdCBhcnJheVRvTWFwID0gKGFycikgPT4ge1xuICAgIGNvbnN0IG1hcCA9IG5ldyBNYXAoKTtcbiAgICBhcnIuZm9yRWFjaCgocykgPT4gbWFwLnNldChzLCBzKSk7XG4gICAgcmV0dXJuIG1hcDtcbn07XG4iLCJleHBvcnQgY29uc3QgZGFzaFRvUGFzY2FsQ2FzZSA9IChzdHIpID0+IHN0clxuICAgIC50b0xvd2VyQ2FzZSgpXG4gICAgLnNwbGl0KCctJylcbiAgICAubWFwKChzZWdtZW50KSA9PiBzZWdtZW50LmNoYXJBdCgwKS50b1VwcGVyQ2FzZSgpICsgc2VnbWVudC5zbGljZSgxKSlcbiAgICAuam9pbignJyk7XG5leHBvcnQgY29uc3QgY2FtZWxUb0Rhc2hDYXNlID0gKHN0cikgPT4gc3RyLnJlcGxhY2UoLyhbQS1aXSkvZywgKG0pID0+IGAtJHttWzBdLnRvTG93ZXJDYXNlKCl9YCk7XG4iLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuZXhwb3J0IGNvbnN0IHNldFJlZiA9IChyZWYsIHZhbHVlKSA9PiB7XG4gICAgaWYgKHR5cGVvZiByZWYgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgcmVmKHZhbHVlKTtcbiAgICB9XG4gICAgZWxzZSBpZiAocmVmICE9IG51bGwpIHtcbiAgICAgICAgLy8gQ2FzdCBhcyBhIE11dGFibGVSZWYgc28gd2UgY2FuIGFzc2lnbiBjdXJyZW50XG4gICAgICAgIHJlZi5jdXJyZW50ID0gdmFsdWU7XG4gICAgfVxufTtcbmV4cG9ydCBjb25zdCBtZXJnZVJlZnMgPSAoLi4ucmVmcykgPT4ge1xuICAgIHJldHVybiAodmFsdWUpID0+IHtcbiAgICAgICAgcmVmcy5mb3JFYWNoKChyZWYpID0+IHtcbiAgICAgICAgICAgIHNldFJlZihyZWYsIHZhbHVlKTtcbiAgICAgICAgfSk7XG4gICAgfTtcbn07XG5leHBvcnQgY29uc3QgY3JlYXRlRm9yd2FyZFJlZiA9IChSZWFjdENvbXBvbmVudCwgZGlzcGxheU5hbWUpID0+IHtcbiAgICBjb25zdCBmb3J3YXJkUmVmID0gKHByb3BzLCByZWYpID0+IHtcbiAgICAgICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoUmVhY3RDb21wb25lbnQsIE9iamVjdC5hc3NpZ24oe30sIHByb3BzLCB7IGZvcndhcmRlZFJlZjogcmVmIH0pKTtcbiAgICB9O1xuICAgIGZvcndhcmRSZWYuZGlzcGxheU5hbWUgPSBkaXNwbGF5TmFtZTtcbiAgICByZXR1cm4gUmVhY3QuZm9yd2FyZFJlZihmb3J3YXJkUmVmKTtcbn07XG5leHBvcnQgY29uc3QgZGVmaW5lQ3VzdG9tRWxlbWVudCA9ICh0YWdOYW1lLCBjdXN0b21FbGVtZW50KSA9PiB7XG4gICAgaWYgKGN1c3RvbUVsZW1lbnQgIT09IHVuZGVmaW5lZCAmJiB0eXBlb2YgY3VzdG9tRWxlbWVudHMgIT09ICd1bmRlZmluZWQnICYmICFjdXN0b21FbGVtZW50cy5nZXQodGFnTmFtZSkpIHtcbiAgICAgICAgY3VzdG9tRWxlbWVudHMuZGVmaW5lKHRhZ05hbWUsIGN1c3RvbUVsZW1lbnQpO1xuICAgIH1cbn07XG5leHBvcnQgKiBmcm9tICcuL2F0dGFjaFByb3BzJztcbmV4cG9ydCAqIGZyb20gJy4vY2FzZSc7XG4iLCIvKipcbiAqIFZpcnR1YWwgRE9NIHBhdGNoaW5nIGFsZ29yaXRobSBiYXNlZCBvbiBTbmFiYmRvbSBieVxuICogU2ltb24gRnJpaXMgVmluZHVtIChAcGFsZGVwaW5kKVxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlXG4gKiBodHRwczovL2dpdGh1Yi5jb20vc25hYmJkb20vc25hYmJkb20vYmxvYi9tYXN0ZXIvTElDRU5TRVxuICpcbiAqIE1vZGlmaWVkIGZvciBTdGVuY2lsJ3MgcmVuZGVyZXIgYW5kIHNsb3QgcHJvamVjdGlvblxuICovXG5sZXQgc2NvcGVJZDtcbmxldCBjb250ZW50UmVmO1xubGV0IGhvc3RUYWdOYW1lO1xubGV0IGN1c3RvbUVycm9yO1xubGV0IGkgPSAwO1xubGV0IHVzZU5hdGl2ZVNoYWRvd0RvbSA9IGZhbHNlO1xubGV0IGNoZWNrU2xvdEZhbGxiYWNrVmlzaWJpbGl0eSA9IGZhbHNlO1xubGV0IGNoZWNrU2xvdFJlbG9jYXRlID0gZmFsc2U7XG5sZXQgaXNTdmdNb2RlID0gZmFsc2U7XG5sZXQgcmVuZGVyaW5nUmVmID0gbnVsbDtcbmxldCBxdWV1ZUNvbmdlc3Rpb24gPSAwO1xubGV0IHF1ZXVlUGVuZGluZyA9IGZhbHNlO1xuLypcbiBTdGVuY2lsIENsaWVudCBQbGF0Zm9ybSB2NC43LjIgfCBNSVQgTGljZW5zZWQgfCBodHRwczovL3N0ZW5jaWxqcy5jb21cbiAqL1xuaW1wb3J0IHsgQlVJTEQsIE5BTUVTUEFDRSB9IGZyb20gJ0BzdGVuY2lsL2NvcmUvaW50ZXJuYWwvYXBwLWRhdGEnO1xuY29uc3QgQnVpbGQgPSB7XG4gICAgaXNEZXY6IEJVSUxELmlzRGV2ID8gdHJ1ZSA6IGZhbHNlLFxuICAgIGlzQnJvd3NlcjogdHJ1ZSxcbiAgICBpc1NlcnZlcjogZmFsc2UsXG4gICAgaXNUZXN0aW5nOiBCVUlMRC5pc1Rlc3RpbmcgPyB0cnVlIDogZmFsc2UsXG59O1xuY29uc3QgZ2V0QXNzZXRQYXRoID0gKHBhdGgpID0+IHtcbiAgICBjb25zdCBhc3NldFVybCA9IG5ldyBVUkwocGF0aCwgcGx0LiRyZXNvdXJjZXNVcmwkKTtcbiAgICByZXR1cm4gYXNzZXRVcmwub3JpZ2luICE9PSB3aW4ubG9jYXRpb24ub3JpZ2luID8gYXNzZXRVcmwuaHJlZiA6IGFzc2V0VXJsLnBhdGhuYW1lO1xufTtcbmNvbnN0IHNldEFzc2V0UGF0aCA9IChwYXRoKSA9PiAocGx0LiRyZXNvdXJjZXNVcmwkID0gcGF0aCk7XG5jb25zdCBjcmVhdGVUaW1lID0gKGZuTmFtZSwgdGFnTmFtZSA9ICcnKSA9PiB7XG4gICAgaWYgKEJVSUxELnByb2ZpbGUgJiYgcGVyZm9ybWFuY2UubWFyaykge1xuICAgICAgICBjb25zdCBrZXkgPSBgc3Q6JHtmbk5hbWV9OiR7dGFnTmFtZX06JHtpKyt9YDtcbiAgICAgICAgLy8gU3RhcnRcbiAgICAgICAgcGVyZm9ybWFuY2UubWFyayhrZXkpO1xuICAgICAgICAvLyBFbmRcbiAgICAgICAgcmV0dXJuICgpID0+IHBlcmZvcm1hbmNlLm1lYXN1cmUoYFtTdGVuY2lsXSAke2ZuTmFtZX0oKSA8JHt0YWdOYW1lfT5gLCBrZXkpO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgcmV0dXJuICgpID0+IHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfTtcbiAgICB9XG59O1xuY29uc3QgdW5pcXVlVGltZSA9IChrZXksIG1lYXN1cmVUZXh0KSA9PiB7XG4gICAgaWYgKEJVSUxELnByb2ZpbGUgJiYgcGVyZm9ybWFuY2UubWFyaykge1xuICAgICAgICBpZiAocGVyZm9ybWFuY2UuZ2V0RW50cmllc0J5TmFtZShrZXksICdtYXJrJykubGVuZ3RoID09PSAwKSB7XG4gICAgICAgICAgICBwZXJmb3JtYW5jZS5tYXJrKGtleSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuICgpID0+IHtcbiAgICAgICAgICAgIGlmIChwZXJmb3JtYW5jZS5nZXRFbnRyaWVzQnlOYW1lKG1lYXN1cmVUZXh0LCAnbWVhc3VyZScpLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICAgICAgICAgIHBlcmZvcm1hbmNlLm1lYXN1cmUobWVhc3VyZVRleHQsIGtleSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9O1xuICAgIH1cbn07XG5jb25zdCBpbnNwZWN0ID0gKHJlZikgPT4ge1xuICAgIGNvbnN0IGhvc3RSZWYgPSBnZXRIb3N0UmVmKHJlZik7XG4gICAgaWYgKCFob3N0UmVmKSB7XG4gICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfVxuICAgIGNvbnN0IGZsYWdzID0gaG9zdFJlZi4kZmxhZ3MkO1xuICAgIGNvbnN0IGhvc3RFbGVtZW50ID0gaG9zdFJlZi4kaG9zdEVsZW1lbnQkO1xuICAgIHJldHVybiB7XG4gICAgICAgIHJlbmRlckNvdW50OiBob3N0UmVmLiRyZW5kZXJDb3VudCQsXG4gICAgICAgIGZsYWdzOiB7XG4gICAgICAgICAgICBoYXNSZW5kZXJlZDogISEoZmxhZ3MgJiAyIC8qIEhPU1RfRkxBR1MuaGFzUmVuZGVyZWQgKi8pLFxuICAgICAgICAgICAgaGFzQ29ubmVjdGVkOiAhIShmbGFncyAmIDEgLyogSE9TVF9GTEFHUy5oYXNDb25uZWN0ZWQgKi8pLFxuICAgICAgICAgICAgaXNXYWl0aW5nRm9yQ2hpbGRyZW46ICEhKGZsYWdzICYgNCAvKiBIT1NUX0ZMQUdTLmlzV2FpdGluZ0ZvckNoaWxkcmVuICovKSxcbiAgICAgICAgICAgIGlzQ29uc3RydWN0aW5nSW5zdGFuY2U6ICEhKGZsYWdzICYgOCAvKiBIT1NUX0ZMQUdTLmlzQ29uc3RydWN0aW5nSW5zdGFuY2UgKi8pLFxuICAgICAgICAgICAgaXNRdWV1ZWRGb3JVcGRhdGU6ICEhKGZsYWdzICYgMTYgLyogSE9TVF9GTEFHUy5pc1F1ZXVlZEZvclVwZGF0ZSAqLyksXG4gICAgICAgICAgICBoYXNJbml0aWFsaXplZENvbXBvbmVudDogISEoZmxhZ3MgJiAzMiAvKiBIT1NUX0ZMQUdTLmhhc0luaXRpYWxpemVkQ29tcG9uZW50ICovKSxcbiAgICAgICAgICAgIGhhc0xvYWRlZENvbXBvbmVudDogISEoZmxhZ3MgJiA2NCAvKiBIT1NUX0ZMQUdTLmhhc0xvYWRlZENvbXBvbmVudCAqLyksXG4gICAgICAgICAgICBpc1dhdGNoUmVhZHk6ICEhKGZsYWdzICYgMTI4IC8qIEhPU1RfRkxBR1MuaXNXYXRjaFJlYWR5ICovKSxcbiAgICAgICAgICAgIGlzTGlzdGVuUmVhZHk6ICEhKGZsYWdzICYgMjU2IC8qIEhPU1RfRkxBR1MuaXNMaXN0ZW5SZWFkeSAqLyksXG4gICAgICAgICAgICBuZWVkc1JlcmVuZGVyOiAhIShmbGFncyAmIDUxMiAvKiBIT1NUX0ZMQUdTLm5lZWRzUmVyZW5kZXIgKi8pLFxuICAgICAgICB9LFxuICAgICAgICBpbnN0YW5jZVZhbHVlczogaG9zdFJlZi4kaW5zdGFuY2VWYWx1ZXMkLFxuICAgICAgICBhbmNlc3RvckNvbXBvbmVudDogaG9zdFJlZi4kYW5jZXN0b3JDb21wb25lbnQkLFxuICAgICAgICBob3N0RWxlbWVudCxcbiAgICAgICAgbGF6eUluc3RhbmNlOiBob3N0UmVmLiRsYXp5SW5zdGFuY2UkLFxuICAgICAgICB2bm9kZTogaG9zdFJlZi4kdm5vZGUkLFxuICAgICAgICBtb2RlTmFtZTogaG9zdFJlZi4kbW9kZU5hbWUkLFxuICAgICAgICBvblJlYWR5UHJvbWlzZTogaG9zdFJlZi4kb25SZWFkeVByb21pc2UkLFxuICAgICAgICBvblJlYWR5UmVzb2x2ZTogaG9zdFJlZi4kb25SZWFkeVJlc29sdmUkLFxuICAgICAgICBvbkluc3RhbmNlUHJvbWlzZTogaG9zdFJlZi4kb25JbnN0YW5jZVByb21pc2UkLFxuICAgICAgICBvbkluc3RhbmNlUmVzb2x2ZTogaG9zdFJlZi4kb25JbnN0YW5jZVJlc29sdmUkLFxuICAgICAgICBvblJlbmRlclJlc29sdmU6IGhvc3RSZWYuJG9uUmVuZGVyUmVzb2x2ZSQsXG4gICAgICAgIHF1ZXVlZExpc3RlbmVyczogaG9zdFJlZi4kcXVldWVkTGlzdGVuZXJzJCxcbiAgICAgICAgcm1MaXN0ZW5lcnM6IGhvc3RSZWYuJHJtTGlzdGVuZXJzJCxcbiAgICAgICAgWydzLWlkJ106IGhvc3RFbGVtZW50WydzLWlkJ10sXG4gICAgICAgIFsncy1jciddOiBob3N0RWxlbWVudFsncy1jciddLFxuICAgICAgICBbJ3MtbHInXTogaG9zdEVsZW1lbnRbJ3MtbHInXSxcbiAgICAgICAgWydzLXAnXTogaG9zdEVsZW1lbnRbJ3MtcCddLFxuICAgICAgICBbJ3MtcmMnXTogaG9zdEVsZW1lbnRbJ3MtcmMnXSxcbiAgICAgICAgWydzLXNjJ106IGhvc3RFbGVtZW50WydzLXNjJ10sXG4gICAgfTtcbn07XG5jb25zdCBpbnN0YWxsRGV2VG9vbHMgPSAoKSA9PiB7XG4gICAgaWYgKEJVSUxELmRldlRvb2xzKSB7XG4gICAgICAgIGNvbnN0IHN0ZW5jaWwgPSAod2luLnN0ZW5jaWwgPSB3aW4uc3RlbmNpbCB8fCB7fSk7XG4gICAgICAgIGNvbnN0IG9yaWdpbmFsSW5zcGVjdCA9IHN0ZW5jaWwuaW5zcGVjdDtcbiAgICAgICAgc3RlbmNpbC5pbnNwZWN0ID0gKHJlZikgPT4ge1xuICAgICAgICAgICAgbGV0IHJlc3VsdCA9IGluc3BlY3QocmVmKTtcbiAgICAgICAgICAgIGlmICghcmVzdWx0ICYmIHR5cGVvZiBvcmlnaW5hbEluc3BlY3QgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICAgICAgICByZXN1bHQgPSBvcmlnaW5hbEluc3BlY3QocmVmKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgICAgIH07XG4gICAgfVxufTtcbmNvbnN0IENPTlRFTlRfUkVGX0lEID0gJ3InO1xuY29uc3QgT1JHX0xPQ0FUSU9OX0lEID0gJ28nO1xuY29uc3QgU0xPVF9OT0RFX0lEID0gJ3MnO1xuY29uc3QgVEVYVF9OT0RFX0lEID0gJ3QnO1xuY29uc3QgSFlEUkFURV9JRCA9ICdzLWlkJztcbmNvbnN0IEhZRFJBVEVEX1NUWUxFX0lEID0gJ3N0eS1pZCc7XG5jb25zdCBIWURSQVRFX0NISUxEX0lEID0gJ2MtaWQnO1xuY29uc3QgSFlEUkFURURfQ1NTID0gJ3t2aXNpYmlsaXR5OmhpZGRlbn0uaHlkcmF0ZWR7dmlzaWJpbGl0eTppbmhlcml0fSc7XG4vKipcbiAqIENvbnN0YW50IGZvciBzdHlsZXMgdG8gYmUgZ2xvYmFsbHkgYXBwbGllZCB0byBgc2xvdC1mYmAgZWxlbWVudHMgZm9yIHBzZXVkby1zbG90IGJlaGF2aW9yLlxuICpcbiAqIFR3byBjYXNjYWRpbmcgcnVsZXMgbXVzdCBiZSB1c2VkIGluc3RlYWQgb2YgYSBgOm5vdCgpYCBzZWxlY3RvciBkdWUgdG8gU3RlbmNpbCBicm93c2VyXG4gKiBzdXBwb3J0IGFzIG9mIFN0ZW5jaWwgdjQuXG4gKi9cbmNvbnN0IFNMT1RfRkJfQ1NTID0gJ3Nsb3QtZmJ7ZGlzcGxheTpjb250ZW50c31zbG90LWZiW2hpZGRlbl17ZGlzcGxheTpub25lfSc7XG5jb25zdCBYTElOS19OUyA9ICdodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rJztcbi8qKlxuICogRGVmYXVsdCBzdHlsZSBtb2RlIGlkXG4gKi9cbi8qKlxuICogUmV1c2FibGUgZW1wdHkgb2JqL2FycmF5XG4gKiBEb24ndCBhZGQgdmFsdWVzIHRvIHRoZXNlISFcbiAqL1xuY29uc3QgRU1QVFlfT0JKID0ge307XG4vKipcbiAqIE5hbWVzcGFjZXNcbiAqL1xuY29uc3QgU1ZHX05TID0gJ2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJztcbmNvbnN0IEhUTUxfTlMgPSAnaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbCc7XG5jb25zdCBpc0RlZiA9ICh2KSA9PiB2ICE9IG51bGw7XG4vKipcbiAqIENoZWNrIHdoZXRoZXIgYSB2YWx1ZSBpcyBhICdjb21wbGV4IHR5cGUnLCBkZWZpbmVkIGhlcmUgYXMgYW4gb2JqZWN0IG9yIGFcbiAqIGZ1bmN0aW9uLlxuICpcbiAqIEBwYXJhbSBvIHRoZSB2YWx1ZSB0byBjaGVja1xuICogQHJldHVybnMgd2hldGhlciBpdCdzIGEgY29tcGxleCB0eXBlIG9yIG5vdFxuICovXG5jb25zdCBpc0NvbXBsZXhUeXBlID0gKG8pID0+IHtcbiAgICAvLyBodHRwczovL2pzcGVyZi5jb20vdHlwZW9mLWZuLW9iamVjdC81XG4gICAgbyA9IHR5cGVvZiBvO1xuICAgIHJldHVybiBvID09PSAnb2JqZWN0JyB8fCBvID09PSAnZnVuY3Rpb24nO1xufTtcbi8qKlxuICogSGVscGVyIG1ldGhvZCBmb3IgcXVlcnlpbmcgYSBgbWV0YWAgdGFnIHRoYXQgY29udGFpbnMgYSBub25jZSB2YWx1ZVxuICogb3V0IG9mIGEgRE9NJ3MgaGVhZC5cbiAqXG4gKiBAcGFyYW0gZG9jIFRoZSBET00gY29udGFpbmluZyB0aGUgYGhlYWRgIHRvIHF1ZXJ5IGFnYWluc3RcbiAqIEByZXR1cm5zIFRoZSBjb250ZW50IG9mIHRoZSBtZXRhIHRhZyByZXByZXNlbnRpbmcgdGhlIG5vbmNlIHZhbHVlLCBvciBgdW5kZWZpbmVkYCBpZiBubyB0YWdcbiAqIGV4aXN0cyBvciB0aGUgdGFnIGhhcyBubyBjb250ZW50LlxuICovXG5mdW5jdGlvbiBxdWVyeU5vbmNlTWV0YVRhZ0NvbnRlbnQoZG9jKSB7XG4gICAgdmFyIF9hLCBfYiwgX2M7XG4gICAgcmV0dXJuIChfYyA9IChfYiA9IChfYSA9IGRvYy5oZWFkKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EucXVlcnlTZWxlY3RvcignbWV0YVtuYW1lPVwiY3NwLW5vbmNlXCJdJykpID09PSBudWxsIHx8IF9iID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYi5nZXRBdHRyaWJ1dGUoJ2NvbnRlbnQnKSkgIT09IG51bGwgJiYgX2MgIT09IHZvaWQgMCA/IF9jIDogdW5kZWZpbmVkO1xufVxuLyoqXG4gKiBQcm9kdWN0aW9uIGgoKSBmdW5jdGlvbiBiYXNlZCBvbiBQcmVhY3QgYnlcbiAqIEphc29uIE1pbGxlciAoQGRldmVsb3BpdClcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZVxuICogaHR0cHM6Ly9naXRodWIuY29tL2RldmVsb3BpdC9wcmVhY3QvYmxvYi9tYXN0ZXIvTElDRU5TRVxuICpcbiAqIE1vZGlmaWVkIGZvciBTdGVuY2lsJ3MgY29tcGlsZXIgYW5kIHZkb21cbiAqL1xuLy8gZXhwb3J0IGZ1bmN0aW9uIGgobm9kZU5hbWU6IHN0cmluZyB8IGQuRnVuY3Rpb25hbENvbXBvbmVudCwgdm5vZGVEYXRhOiBkLlByb3BzVHlwZSwgY2hpbGQ/OiBkLkNoaWxkVHlwZSk6IGQuVk5vZGU7XG4vLyBleHBvcnQgZnVuY3Rpb24gaChub2RlTmFtZTogc3RyaW5nIHwgZC5GdW5jdGlvbmFsQ29tcG9uZW50LCB2bm9kZURhdGE6IGQuUHJvcHNUeXBlLCAuLi5jaGlsZHJlbjogZC5DaGlsZFR5cGVbXSk6IGQuVk5vZGU7XG5jb25zdCBoID0gKG5vZGVOYW1lLCB2bm9kZURhdGEsIC4uLmNoaWxkcmVuKSA9PiB7XG4gICAgbGV0IGNoaWxkID0gbnVsbDtcbiAgICBsZXQga2V5ID0gbnVsbDtcbiAgICBsZXQgc2xvdE5hbWUgPSBudWxsO1xuICAgIGxldCBzaW1wbGUgPSBmYWxzZTtcbiAgICBsZXQgbGFzdFNpbXBsZSA9IGZhbHNlO1xuICAgIGNvbnN0IHZOb2RlQ2hpbGRyZW4gPSBbXTtcbiAgICBjb25zdCB3YWxrID0gKGMpID0+IHtcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBjLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICBjaGlsZCA9IGNbaV07XG4gICAgICAgICAgICBpZiAoQXJyYXkuaXNBcnJheShjaGlsZCkpIHtcbiAgICAgICAgICAgICAgICB3YWxrKGNoaWxkKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2UgaWYgKGNoaWxkICE9IG51bGwgJiYgdHlwZW9mIGNoaWxkICE9PSAnYm9vbGVhbicpIHtcbiAgICAgICAgICAgICAgICBpZiAoKHNpbXBsZSA9IHR5cGVvZiBub2RlTmFtZSAhPT0gJ2Z1bmN0aW9uJyAmJiAhaXNDb21wbGV4VHlwZShjaGlsZCkpKSB7XG4gICAgICAgICAgICAgICAgICAgIGNoaWxkID0gU3RyaW5nKGNoaWxkKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSBpZiAoQlVJTEQuaXNEZXYgJiYgdHlwZW9mIG5vZGVOYW1lICE9PSAnZnVuY3Rpb24nICYmIGNoaWxkLiRmbGFncyQgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICAgICAgICBjb25zb2xlRGV2RXJyb3IoYHZOb2RlIHBhc3NlZCBhcyBjaGlsZHJlbiBoYXMgdW5leHBlY3RlZCB0eXBlLlxuTWFrZSBzdXJlIGl0J3MgdXNpbmcgdGhlIGNvcnJlY3QgaCgpIGZ1bmN0aW9uLlxuRW1wdHkgb2JqZWN0cyBjYW4gYWxzbyBiZSB0aGUgY2F1c2UsIGxvb2sgZm9yIEpTWCBjb21tZW50cyB0aGF0IGJlY2FtZSBvYmplY3RzLmApO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAoc2ltcGxlICYmIGxhc3RTaW1wbGUpIHtcbiAgICAgICAgICAgICAgICAgICAgLy8gSWYgdGhlIHByZXZpb3VzIGNoaWxkIHdhcyBzaW1wbGUgKHN0cmluZyksIHdlIG1lcmdlIGJvdGhcbiAgICAgICAgICAgICAgICAgICAgdk5vZGVDaGlsZHJlblt2Tm9kZUNoaWxkcmVuLmxlbmd0aCAtIDFdLiR0ZXh0JCArPSBjaGlsZDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIC8vIEFwcGVuZCBhIG5ldyB2Tm9kZSwgaWYgaXQncyB0ZXh0LCB3ZSBjcmVhdGUgYSB0ZXh0IHZOb2RlXG4gICAgICAgICAgICAgICAgICAgIHZOb2RlQ2hpbGRyZW4ucHVzaChzaW1wbGUgPyBuZXdWTm9kZShudWxsLCBjaGlsZCkgOiBjaGlsZCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGxhc3RTaW1wbGUgPSBzaW1wbGU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9O1xuICAgIHdhbGsoY2hpbGRyZW4pO1xuICAgIGlmICh2bm9kZURhdGEpIHtcbiAgICAgICAgaWYgKEJVSUxELmlzRGV2ICYmIG5vZGVOYW1lID09PSAnaW5wdXQnKSB7XG4gICAgICAgICAgICB2YWxpZGF0ZUlucHV0UHJvcGVydGllcyh2bm9kZURhdGEpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChCVUlMRC52ZG9tS2V5ICYmIHZub2RlRGF0YS5rZXkpIHtcbiAgICAgICAgICAgIGtleSA9IHZub2RlRGF0YS5rZXk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKEJVSUxELnNsb3RSZWxvY2F0aW9uICYmIHZub2RlRGF0YS5uYW1lKSB7XG4gICAgICAgICAgICBzbG90TmFtZSA9IHZub2RlRGF0YS5uYW1lO1xuICAgICAgICB9XG4gICAgICAgIC8vIG5vcm1hbGl6ZSBjbGFzcyAvIGNsYXNzTmFtZSBhdHRyaWJ1dGVzXG4gICAgICAgIGlmIChCVUlMRC52ZG9tQ2xhc3MpIHtcbiAgICAgICAgICAgIGNvbnN0IGNsYXNzRGF0YSA9IHZub2RlRGF0YS5jbGFzc05hbWUgfHwgdm5vZGVEYXRhLmNsYXNzO1xuICAgICAgICAgICAgaWYgKGNsYXNzRGF0YSkge1xuICAgICAgICAgICAgICAgIHZub2RlRGF0YS5jbGFzcyA9XG4gICAgICAgICAgICAgICAgICAgIHR5cGVvZiBjbGFzc0RhdGEgIT09ICdvYmplY3QnXG4gICAgICAgICAgICAgICAgICAgICAgICA/IGNsYXNzRGF0YVxuICAgICAgICAgICAgICAgICAgICAgICAgOiBPYmplY3Qua2V5cyhjbGFzc0RhdGEpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLmZpbHRlcigoaykgPT4gY2xhc3NEYXRhW2tdKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC5qb2luKCcgJyk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgaWYgKEJVSUxELmlzRGV2ICYmIHZOb2RlQ2hpbGRyZW4uc29tZShpc0hvc3QpKSB7XG4gICAgICAgIGNvbnNvbGVEZXZFcnJvcihgVGhlIDxIb3N0PiBtdXN0IGJlIHRoZSBzaW5nbGUgcm9vdCBjb21wb25lbnQuIE1ha2Ugc3VyZTpcbi0gWW91IGFyZSBOT1QgdXNpbmcgaG9zdERhdGEoKSBhbmQgPEhvc3Q+IGluIHRoZSBzYW1lIGNvbXBvbmVudC5cbi0gPEhvc3Q+IGlzIHVzZWQgb25jZSwgYW5kIGl0J3MgdGhlIHNpbmdsZSByb290IGNvbXBvbmVudCBvZiB0aGUgcmVuZGVyKCkgZnVuY3Rpb24uYCk7XG4gICAgfVxuICAgIGlmIChCVUlMRC52ZG9tRnVuY3Rpb25hbCAmJiB0eXBlb2Ygbm9kZU5hbWUgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgLy8gbm9kZU5hbWUgaXMgYSBmdW5jdGlvbmFsIGNvbXBvbmVudFxuICAgICAgICByZXR1cm4gbm9kZU5hbWUodm5vZGVEYXRhID09PSBudWxsID8ge30gOiB2bm9kZURhdGEsIHZOb2RlQ2hpbGRyZW4sIHZkb21GblV0aWxzKTtcbiAgICB9XG4gICAgY29uc3Qgdm5vZGUgPSBuZXdWTm9kZShub2RlTmFtZSwgbnVsbCk7XG4gICAgdm5vZGUuJGF0dHJzJCA9IHZub2RlRGF0YTtcbiAgICBpZiAodk5vZGVDaGlsZHJlbi5sZW5ndGggPiAwKSB7XG4gICAgICAgIHZub2RlLiRjaGlsZHJlbiQgPSB2Tm9kZUNoaWxkcmVuO1xuICAgIH1cbiAgICBpZiAoQlVJTEQudmRvbUtleSkge1xuICAgICAgICB2bm9kZS4ka2V5JCA9IGtleTtcbiAgICB9XG4gICAgaWYgKEJVSUxELnNsb3RSZWxvY2F0aW9uKSB7XG4gICAgICAgIHZub2RlLiRuYW1lJCA9IHNsb3ROYW1lO1xuICAgIH1cbiAgICByZXR1cm4gdm5vZGU7XG59O1xuLyoqXG4gKiBBIHV0aWxpdHkgZnVuY3Rpb24gZm9yIGNyZWF0aW5nIGEgdmlydHVhbCBET00gbm9kZSBmcm9tIGEgdGFnIGFuZCBzb21lXG4gKiBwb3NzaWJsZSB0ZXh0IGNvbnRlbnQuXG4gKlxuICogQHBhcmFtIHRhZyB0aGUgdGFnIGZvciB0aGlzIGVsZW1lbnRcbiAqIEBwYXJhbSB0ZXh0IHBvc3NpYmxlIHRleHQgY29udGVudCBmb3IgdGhlIG5vZGVcbiAqIEByZXR1cm5zIGEgbmV3bHktbWludGVkIHZpcnR1YWwgRE9NIG5vZGVcbiAqL1xuY29uc3QgbmV3Vk5vZGUgPSAodGFnLCB0ZXh0KSA9PiB7XG4gICAgY29uc3Qgdm5vZGUgPSB7XG4gICAgICAgICRmbGFncyQ6IDAsXG4gICAgICAgICR0YWckOiB0YWcsXG4gICAgICAgICR0ZXh0JDogdGV4dCxcbiAgICAgICAgJGVsbSQ6IG51bGwsXG4gICAgICAgICRjaGlsZHJlbiQ6IG51bGwsXG4gICAgfTtcbiAgICBpZiAoQlVJTEQudmRvbUF0dHJpYnV0ZSkge1xuICAgICAgICB2bm9kZS4kYXR0cnMkID0gbnVsbDtcbiAgICB9XG4gICAgaWYgKEJVSUxELnZkb21LZXkpIHtcbiAgICAgICAgdm5vZGUuJGtleSQgPSBudWxsO1xuICAgIH1cbiAgICBpZiAoQlVJTEQuc2xvdFJlbG9jYXRpb24pIHtcbiAgICAgICAgdm5vZGUuJG5hbWUkID0gbnVsbDtcbiAgICB9XG4gICAgcmV0dXJuIHZub2RlO1xufTtcbmNvbnN0IEhvc3QgPSB7fTtcbi8qKlxuICogQ2hlY2sgd2hldGhlciBhIGdpdmVuIG5vZGUgaXMgYSBIb3N0IG5vZGUgb3Igbm90XG4gKlxuICogQHBhcmFtIG5vZGUgdGhlIHZpcnR1YWwgRE9NIG5vZGUgdG8gY2hlY2tcbiAqIEByZXR1cm5zIHdoZXRoZXIgaXQncyBhIEhvc3Qgbm9kZSBvciBub3RcbiAqL1xuY29uc3QgaXNIb3N0ID0gKG5vZGUpID0+IG5vZGUgJiYgbm9kZS4kdGFnJCA9PT0gSG9zdDtcbi8qKlxuICogSW1wbGVtZW50YXRpb24gb2Yge0BsaW5rIGQuRnVuY3Rpb25hbFV0aWxpdGllc30gZm9yIFN0ZW5jaWwncyBWRG9tLlxuICpcbiAqIE5vdGUgdGhhdCB0aGVzZSBmdW5jdGlvbnMgY29udmVydCBmcm9tIHtAbGluayBkLlZOb2RlfSB0b1xuICoge0BsaW5rIGQuQ2hpbGROb2RlfSB0byBnaXZlIGZ1bmN0aW9uYWwgY29tcG9uZW50IGRldmVsb3BlcnMgYSBmcmllbmRseVxuICogaW50ZXJmYWNlLlxuICovXG5jb25zdCB2ZG9tRm5VdGlscyA9IHtcbiAgICBmb3JFYWNoOiAoY2hpbGRyZW4sIGNiKSA9PiBjaGlsZHJlbi5tYXAoY29udmVydFRvUHVibGljKS5mb3JFYWNoKGNiKSxcbiAgICBtYXA6IChjaGlsZHJlbiwgY2IpID0+IGNoaWxkcmVuLm1hcChjb252ZXJ0VG9QdWJsaWMpLm1hcChjYikubWFwKGNvbnZlcnRUb1ByaXZhdGUpLFxufTtcbi8qKlxuICogQ29udmVydCBhIHtAbGluayBkLlZOb2RlfSB0byBhIHtAbGluayBkLkNoaWxkTm9kZX0gaW4gb3JkZXIgdG8gcHJlc2VudCBhXG4gKiBmcmllbmRsaWVyIHB1YmxpYyBpbnRlcmZhY2UgKGhlbmNlLCAnY29udmVydFRvUHVibGljJykuXG4gKlxuICogQHBhcmFtIG5vZGUgdGhlIHZpcnR1YWwgRE9NIG5vZGUgdG8gY29udmVydFxuICogQHJldHVybnMgYSBjb252ZXJ0ZWQgY2hpbGQgbm9kZVxuICovXG5jb25zdCBjb252ZXJ0VG9QdWJsaWMgPSAobm9kZSkgPT4gKHtcbiAgICB2YXR0cnM6IG5vZGUuJGF0dHJzJCxcbiAgICB2Y2hpbGRyZW46IG5vZGUuJGNoaWxkcmVuJCxcbiAgICB2a2V5OiBub2RlLiRrZXkkLFxuICAgIHZuYW1lOiBub2RlLiRuYW1lJCxcbiAgICB2dGFnOiBub2RlLiR0YWckLFxuICAgIHZ0ZXh0OiBub2RlLiR0ZXh0JCxcbn0pO1xuLyoqXG4gKiBDb252ZXJ0IGEge0BsaW5rIGQuQ2hpbGROb2RlfSBiYWNrIHRvIGFuIGVxdWl2YWxlbnQge0BsaW5rIGQuVk5vZGV9IGluXG4gKiBvcmRlciB0byB1c2UgdGhlIHJlc3VsdGluZyBvYmplY3QgaW4gdGhlIHZpcnR1YWwgRE9NLiBUaGUgaW5pdGlhbCBvYmplY3Qgd2FzXG4gKiBsaWtlbHkgY3JlYXRlZCBhcyBwYXJ0IG9mIHByZXNlbnRpbmcgYSBwdWJsaWMgQVBJLCBzbyBjb252ZXJ0aW5nIGl0IGJhY2tcbiAqIGludm9sdmVkIG1ha2luZyBpdCAncHJpdmF0ZScgYWdhaW4gKGhlbmNlLCBgY29udmVydFRvUHJpdmF0ZWApLlxuICpcbiAqIEBwYXJhbSBub2RlIHRoZSBjaGlsZCBub2RlIHRvIGNvbnZlcnRcbiAqIEByZXR1cm5zIGEgY29udmVydGVkIHZpcnR1YWwgRE9NIG5vZGVcbiAqL1xuY29uc3QgY29udmVydFRvUHJpdmF0ZSA9IChub2RlKSA9PiB7XG4gICAgaWYgKHR5cGVvZiBub2RlLnZ0YWcgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgY29uc3Qgdm5vZGVEYXRhID0gT2JqZWN0LmFzc2lnbih7fSwgbm9kZS52YXR0cnMpO1xuICAgICAgICBpZiAobm9kZS52a2V5KSB7XG4gICAgICAgICAgICB2bm9kZURhdGEua2V5ID0gbm9kZS52a2V5O1xuICAgICAgICB9XG4gICAgICAgIGlmIChub2RlLnZuYW1lKSB7XG4gICAgICAgICAgICB2bm9kZURhdGEubmFtZSA9IG5vZGUudm5hbWU7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGgobm9kZS52dGFnLCB2bm9kZURhdGEsIC4uLihub2RlLnZjaGlsZHJlbiB8fCBbXSkpO1xuICAgIH1cbiAgICBjb25zdCB2bm9kZSA9IG5ld1ZOb2RlKG5vZGUudnRhZywgbm9kZS52dGV4dCk7XG4gICAgdm5vZGUuJGF0dHJzJCA9IG5vZGUudmF0dHJzO1xuICAgIHZub2RlLiRjaGlsZHJlbiQgPSBub2RlLnZjaGlsZHJlbjtcbiAgICB2bm9kZS4ka2V5JCA9IG5vZGUudmtleTtcbiAgICB2bm9kZS4kbmFtZSQgPSBub2RlLnZuYW1lO1xuICAgIHJldHVybiB2bm9kZTtcbn07XG4vKipcbiAqIFZhbGlkYXRlcyB0aGUgb3JkZXJpbmcgb2YgYXR0cmlidXRlcyBvbiBhbiBpbnB1dCBlbGVtZW50XG4gKlxuICogQHBhcmFtIGlucHV0RWxtIHRoZSBlbGVtZW50IHRvIHZhbGlkYXRlXG4gKi9cbmNvbnN0IHZhbGlkYXRlSW5wdXRQcm9wZXJ0aWVzID0gKGlucHV0RWxtKSA9PiB7XG4gICAgY29uc3QgcHJvcHMgPSBPYmplY3Qua2V5cyhpbnB1dEVsbSk7XG4gICAgY29uc3QgdmFsdWUgPSBwcm9wcy5pbmRleE9mKCd2YWx1ZScpO1xuICAgIGlmICh2YWx1ZSA9PT0gLTEpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBjb25zdCB0eXBlSW5kZXggPSBwcm9wcy5pbmRleE9mKCd0eXBlJyk7XG4gICAgY29uc3QgbWluSW5kZXggPSBwcm9wcy5pbmRleE9mKCdtaW4nKTtcbiAgICBjb25zdCBtYXhJbmRleCA9IHByb3BzLmluZGV4T2YoJ21heCcpO1xuICAgIGNvbnN0IHN0ZXBJbmRleCA9IHByb3BzLmluZGV4T2YoJ3N0ZXAnKTtcbiAgICBpZiAodmFsdWUgPCB0eXBlSW5kZXggfHwgdmFsdWUgPCBtaW5JbmRleCB8fCB2YWx1ZSA8IG1heEluZGV4IHx8IHZhbHVlIDwgc3RlcEluZGV4KSB7XG4gICAgICAgIGNvbnNvbGVEZXZXYXJuKGBUaGUgXCJ2YWx1ZVwiIHByb3Agb2YgPGlucHV0PiBzaG91bGQgYmUgc2V0IGFmdGVyIFwibWluXCIsIFwibWF4XCIsIFwidHlwZVwiIGFuZCBcInN0ZXBcImApO1xuICAgIH1cbn07XG5jb25zdCBpbml0aWFsaXplQ2xpZW50SHlkcmF0ZSA9IChob3N0RWxtLCB0YWdOYW1lLCBob3N0SWQsIGhvc3RSZWYpID0+IHtcbiAgICBjb25zdCBlbmRIeWRyYXRlID0gY3JlYXRlVGltZSgnaHlkcmF0ZUNsaWVudCcsIHRhZ05hbWUpO1xuICAgIGNvbnN0IHNoYWRvd1Jvb3QgPSBob3N0RWxtLnNoYWRvd1Jvb3Q7XG4gICAgY29uc3QgY2hpbGRSZW5kZXJOb2RlcyA9IFtdO1xuICAgIGNvbnN0IHNsb3ROb2RlcyA9IFtdO1xuICAgIGNvbnN0IHNoYWRvd1Jvb3ROb2RlcyA9IEJVSUxELnNoYWRvd0RvbSAmJiBzaGFkb3dSb290ID8gW10gOiBudWxsO1xuICAgIGNvbnN0IHZub2RlID0gKGhvc3RSZWYuJHZub2RlJCA9IG5ld1ZOb2RlKHRhZ05hbWUsIG51bGwpKTtcbiAgICBpZiAoIXBsdC4kb3JnTG9jTm9kZXMkKSB7XG4gICAgICAgIGluaXRpYWxpemVEb2N1bWVudEh5ZHJhdGUoZG9jLmJvZHksIChwbHQuJG9yZ0xvY05vZGVzJCA9IG5ldyBNYXAoKSkpO1xuICAgIH1cbiAgICBob3N0RWxtW0hZRFJBVEVfSURdID0gaG9zdElkO1xuICAgIGhvc3RFbG0ucmVtb3ZlQXR0cmlidXRlKEhZRFJBVEVfSUQpO1xuICAgIGNsaWVudEh5ZHJhdGUodm5vZGUsIGNoaWxkUmVuZGVyTm9kZXMsIHNsb3ROb2Rlcywgc2hhZG93Um9vdE5vZGVzLCBob3N0RWxtLCBob3N0RWxtLCBob3N0SWQpO1xuICAgIGNoaWxkUmVuZGVyTm9kZXMubWFwKChjKSA9PiB7XG4gICAgICAgIGNvbnN0IG9yZ0xvY2F0aW9uSWQgPSBjLiRob3N0SWQkICsgJy4nICsgYy4kbm9kZUlkJDtcbiAgICAgICAgY29uc3Qgb3JnTG9jYXRpb25Ob2RlID0gcGx0LiRvcmdMb2NOb2RlcyQuZ2V0KG9yZ0xvY2F0aW9uSWQpO1xuICAgICAgICBjb25zdCBub2RlID0gYy4kZWxtJDtcbiAgICAgICAgaWYgKG9yZ0xvY2F0aW9uTm9kZSAmJiBzdXBwb3J0c1NoYWRvdyAmJiBvcmdMb2NhdGlvbk5vZGVbJ3MtZW4nXSA9PT0gJycpIHtcbiAgICAgICAgICAgIG9yZ0xvY2F0aW9uTm9kZS5wYXJlbnROb2RlLmluc2VydEJlZm9yZShub2RlLCBvcmdMb2NhdGlvbk5vZGUubmV4dFNpYmxpbmcpO1xuICAgICAgICB9XG4gICAgICAgIGlmICghc2hhZG93Um9vdCkge1xuICAgICAgICAgICAgbm9kZVsncy1obiddID0gdGFnTmFtZTtcbiAgICAgICAgICAgIGlmIChvcmdMb2NhdGlvbk5vZGUpIHtcbiAgICAgICAgICAgICAgICBub2RlWydzLW9sJ10gPSBvcmdMb2NhdGlvbk5vZGU7XG4gICAgICAgICAgICAgICAgbm9kZVsncy1vbCddWydzLW5yJ10gPSBub2RlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHBsdC4kb3JnTG9jTm9kZXMkLmRlbGV0ZShvcmdMb2NhdGlvbklkKTtcbiAgICB9KTtcbiAgICBpZiAoQlVJTEQuc2hhZG93RG9tICYmIHNoYWRvd1Jvb3QpIHtcbiAgICAgICAgc2hhZG93Um9vdE5vZGVzLm1hcCgoc2hhZG93Um9vdE5vZGUpID0+IHtcbiAgICAgICAgICAgIGlmIChzaGFkb3dSb290Tm9kZSkge1xuICAgICAgICAgICAgICAgIHNoYWRvd1Jvb3QuYXBwZW5kQ2hpbGQoc2hhZG93Um9vdE5vZGUpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9XG4gICAgZW5kSHlkcmF0ZSgpO1xufTtcbmNvbnN0IGNsaWVudEh5ZHJhdGUgPSAocGFyZW50Vk5vZGUsIGNoaWxkUmVuZGVyTm9kZXMsIHNsb3ROb2Rlcywgc2hhZG93Um9vdE5vZGVzLCBob3N0RWxtLCBub2RlLCBob3N0SWQpID0+IHtcbiAgICBsZXQgY2hpbGROb2RlVHlwZTtcbiAgICBsZXQgY2hpbGRJZFNwbHQ7XG4gICAgbGV0IGNoaWxkVk5vZGU7XG4gICAgbGV0IGk7XG4gICAgaWYgKG5vZGUubm9kZVR5cGUgPT09IDEgLyogTk9ERV9UWVBFLkVsZW1lbnROb2RlICovKSB7XG4gICAgICAgIGNoaWxkTm9kZVR5cGUgPSBub2RlLmdldEF0dHJpYnV0ZShIWURSQVRFX0NISUxEX0lEKTtcbiAgICAgICAgaWYgKGNoaWxkTm9kZVR5cGUpIHtcbiAgICAgICAgICAgIC8vIGdvdCB0aGUgbm9kZSBkYXRhIGZyb20gdGhlIGVsZW1lbnQncyBhdHRyaWJ1dGVcbiAgICAgICAgICAgIC8vIGAke2hvc3RJZH0uJHtub2RlSWR9LiR7ZGVwdGh9LiR7aW5kZXh9YFxuICAgICAgICAgICAgY2hpbGRJZFNwbHQgPSBjaGlsZE5vZGVUeXBlLnNwbGl0KCcuJyk7XG4gICAgICAgICAgICBpZiAoY2hpbGRJZFNwbHRbMF0gPT09IGhvc3RJZCB8fCBjaGlsZElkU3BsdFswXSA9PT0gJzAnKSB7XG4gICAgICAgICAgICAgICAgY2hpbGRWTm9kZSA9IHtcbiAgICAgICAgICAgICAgICAgICAgJGZsYWdzJDogMCxcbiAgICAgICAgICAgICAgICAgICAgJGhvc3RJZCQ6IGNoaWxkSWRTcGx0WzBdLFxuICAgICAgICAgICAgICAgICAgICAkbm9kZUlkJDogY2hpbGRJZFNwbHRbMV0sXG4gICAgICAgICAgICAgICAgICAgICRkZXB0aCQ6IGNoaWxkSWRTcGx0WzJdLFxuICAgICAgICAgICAgICAgICAgICAkaW5kZXgkOiBjaGlsZElkU3BsdFszXSxcbiAgICAgICAgICAgICAgICAgICAgJHRhZyQ6IG5vZGUudGFnTmFtZS50b0xvd2VyQ2FzZSgpLFxuICAgICAgICAgICAgICAgICAgICAkZWxtJDogbm9kZSxcbiAgICAgICAgICAgICAgICAgICAgJGF0dHJzJDogbnVsbCxcbiAgICAgICAgICAgICAgICAgICAgJGNoaWxkcmVuJDogbnVsbCxcbiAgICAgICAgICAgICAgICAgICAgJGtleSQ6IG51bGwsXG4gICAgICAgICAgICAgICAgICAgICRuYW1lJDogbnVsbCxcbiAgICAgICAgICAgICAgICAgICAgJHRleHQkOiBudWxsLFxuICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgY2hpbGRSZW5kZXJOb2Rlcy5wdXNoKGNoaWxkVk5vZGUpO1xuICAgICAgICAgICAgICAgIG5vZGUucmVtb3ZlQXR0cmlidXRlKEhZRFJBVEVfQ0hJTERfSUQpO1xuICAgICAgICAgICAgICAgIC8vIHRoaXMgaXMgYSBuZXcgY2hpbGQgdm5vZGVcbiAgICAgICAgICAgICAgICAvLyBzbyBlbnN1cmUgaXRzIHBhcmVudCB2bm9kZSBoYXMgdGhlIHZjaGlsZHJlbiBhcnJheVxuICAgICAgICAgICAgICAgIGlmICghcGFyZW50Vk5vZGUuJGNoaWxkcmVuJCkge1xuICAgICAgICAgICAgICAgICAgICBwYXJlbnRWTm9kZS4kY2hpbGRyZW4kID0gW107XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIC8vIGFkZCBvdXIgY2hpbGQgdm5vZGUgdG8gYSBzcGVjaWZpYyBpbmRleCBvZiB0aGUgdm5vZGUncyBjaGlsZHJlblxuICAgICAgICAgICAgICAgIHBhcmVudFZOb2RlLiRjaGlsZHJlbiRbY2hpbGRWTm9kZS4kaW5kZXgkXSA9IGNoaWxkVk5vZGU7XG4gICAgICAgICAgICAgICAgLy8gdGhpcyBpcyBub3cgdGhlIG5ldyBwYXJlbnQgdm5vZGUgZm9yIGFsbCB0aGUgbmV4dCBjaGlsZCBjaGVja3NcbiAgICAgICAgICAgICAgICBwYXJlbnRWTm9kZSA9IGNoaWxkVk5vZGU7XG4gICAgICAgICAgICAgICAgaWYgKHNoYWRvd1Jvb3ROb2RlcyAmJiBjaGlsZFZOb2RlLiRkZXB0aCQgPT09ICcwJykge1xuICAgICAgICAgICAgICAgICAgICBzaGFkb3dSb290Tm9kZXNbY2hpbGRWTm9kZS4kaW5kZXgkXSA9IGNoaWxkVk5vZGUuJGVsbSQ7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIC8vIHJlY3Vyc2l2ZWx5IGRyaWxsIGRvd24sIGVuZCB0byBzdGFydCBzbyB3ZSBjYW4gcmVtb3ZlIG5vZGVzXG4gICAgICAgIGZvciAoaSA9IG5vZGUuY2hpbGROb2Rlcy5sZW5ndGggLSAxOyBpID49IDA7IGktLSkge1xuICAgICAgICAgICAgY2xpZW50SHlkcmF0ZShwYXJlbnRWTm9kZSwgY2hpbGRSZW5kZXJOb2Rlcywgc2xvdE5vZGVzLCBzaGFkb3dSb290Tm9kZXMsIGhvc3RFbG0sIG5vZGUuY2hpbGROb2Rlc1tpXSwgaG9zdElkKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAobm9kZS5zaGFkb3dSb290KSB7XG4gICAgICAgICAgICAvLyBrZWVwIGRyaWxsaW5nIGRvd24gdGhyb3VnaCB0aGUgc2hhZG93IHJvb3Qgbm9kZXNcbiAgICAgICAgICAgIGZvciAoaSA9IG5vZGUuc2hhZG93Um9vdC5jaGlsZE5vZGVzLmxlbmd0aCAtIDE7IGkgPj0gMDsgaS0tKSB7XG4gICAgICAgICAgICAgICAgY2xpZW50SHlkcmF0ZShwYXJlbnRWTm9kZSwgY2hpbGRSZW5kZXJOb2Rlcywgc2xvdE5vZGVzLCBzaGFkb3dSb290Tm9kZXMsIGhvc3RFbG0sIG5vZGUuc2hhZG93Um9vdC5jaGlsZE5vZGVzW2ldLCBob3N0SWQpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIGVsc2UgaWYgKG5vZGUubm9kZVR5cGUgPT09IDggLyogTk9ERV9UWVBFLkNvbW1lbnROb2RlICovKSB7XG4gICAgICAgIC8vIGAke0NPTU1FTlRfVFlQRX0uJHtob3N0SWR9LiR7bm9kZUlkfS4ke2RlcHRofS4ke2luZGV4fWBcbiAgICAgICAgY2hpbGRJZFNwbHQgPSBub2RlLm5vZGVWYWx1ZS5zcGxpdCgnLicpO1xuICAgICAgICBpZiAoY2hpbGRJZFNwbHRbMV0gPT09IGhvc3RJZCB8fCBjaGlsZElkU3BsdFsxXSA9PT0gJzAnKSB7XG4gICAgICAgICAgICAvLyBjb21tZW50IG5vZGUgZm9yIGVpdGhlciB0aGUgaG9zdCBpZCBvciBhIDAgaG9zdCBpZFxuICAgICAgICAgICAgY2hpbGROb2RlVHlwZSA9IGNoaWxkSWRTcGx0WzBdO1xuICAgICAgICAgICAgY2hpbGRWTm9kZSA9IHtcbiAgICAgICAgICAgICAgICAkZmxhZ3MkOiAwLFxuICAgICAgICAgICAgICAgICRob3N0SWQkOiBjaGlsZElkU3BsdFsxXSxcbiAgICAgICAgICAgICAgICAkbm9kZUlkJDogY2hpbGRJZFNwbHRbMl0sXG4gICAgICAgICAgICAgICAgJGRlcHRoJDogY2hpbGRJZFNwbHRbM10sXG4gICAgICAgICAgICAgICAgJGluZGV4JDogY2hpbGRJZFNwbHRbNF0sXG4gICAgICAgICAgICAgICAgJGVsbSQ6IG5vZGUsXG4gICAgICAgICAgICAgICAgJGF0dHJzJDogbnVsbCxcbiAgICAgICAgICAgICAgICAkY2hpbGRyZW4kOiBudWxsLFxuICAgICAgICAgICAgICAgICRrZXkkOiBudWxsLFxuICAgICAgICAgICAgICAgICRuYW1lJDogbnVsbCxcbiAgICAgICAgICAgICAgICAkdGFnJDogbnVsbCxcbiAgICAgICAgICAgICAgICAkdGV4dCQ6IG51bGwsXG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgaWYgKGNoaWxkTm9kZVR5cGUgPT09IFRFWFRfTk9ERV9JRCkge1xuICAgICAgICAgICAgICAgIGNoaWxkVk5vZGUuJGVsbSQgPSBub2RlLm5leHRTaWJsaW5nO1xuICAgICAgICAgICAgICAgIGlmIChjaGlsZFZOb2RlLiRlbG0kICYmIGNoaWxkVk5vZGUuJGVsbSQubm9kZVR5cGUgPT09IDMgLyogTk9ERV9UWVBFLlRleHROb2RlICovKSB7XG4gICAgICAgICAgICAgICAgICAgIGNoaWxkVk5vZGUuJHRleHQkID0gY2hpbGRWTm9kZS4kZWxtJC50ZXh0Q29udGVudDtcbiAgICAgICAgICAgICAgICAgICAgY2hpbGRSZW5kZXJOb2Rlcy5wdXNoKGNoaWxkVk5vZGUpO1xuICAgICAgICAgICAgICAgICAgICAvLyByZW1vdmUgdGhlIHRleHQgY29tbWVudCBzaW5jZSBpdCdzIG5vIGxvbmdlciBuZWVkZWRcbiAgICAgICAgICAgICAgICAgICAgbm9kZS5yZW1vdmUoKTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKCFwYXJlbnRWTm9kZS4kY2hpbGRyZW4kKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBwYXJlbnRWTm9kZS4kY2hpbGRyZW4kID0gW107XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgcGFyZW50Vk5vZGUuJGNoaWxkcmVuJFtjaGlsZFZOb2RlLiRpbmRleCRdID0gY2hpbGRWTm9kZTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHNoYWRvd1Jvb3ROb2RlcyAmJiBjaGlsZFZOb2RlLiRkZXB0aCQgPT09ICcwJykge1xuICAgICAgICAgICAgICAgICAgICAgICAgc2hhZG93Um9vdE5vZGVzW2NoaWxkVk5vZGUuJGluZGV4JF0gPSBjaGlsZFZOb2RlLiRlbG0kO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZiAoY2hpbGRWTm9kZS4kaG9zdElkJCA9PT0gaG9zdElkKSB7XG4gICAgICAgICAgICAgICAgLy8gdGhpcyBjb21tZW50IG5vZGUgaXMgc3BlY2lmaWNhbGx5IGZvciB0aGlzIGhvc3QgaWRcbiAgICAgICAgICAgICAgICBpZiAoY2hpbGROb2RlVHlwZSA9PT0gU0xPVF9OT0RFX0lEKSB7XG4gICAgICAgICAgICAgICAgICAgIC8vIGAke1NMT1RfTk9ERV9JRH0uJHtob3N0SWR9LiR7bm9kZUlkfS4ke2RlcHRofS4ke2luZGV4fS4ke3Nsb3ROYW1lfWA7XG4gICAgICAgICAgICAgICAgICAgIGNoaWxkVk5vZGUuJHRhZyQgPSAnc2xvdCc7XG4gICAgICAgICAgICAgICAgICAgIGlmIChjaGlsZElkU3BsdFs1XSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgbm9kZVsncy1zbiddID0gY2hpbGRWTm9kZS4kbmFtZSQgPSBjaGlsZElkU3BsdFs1XTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIG5vZGVbJ3Mtc24nXSA9ICcnO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIG5vZGVbJ3Mtc3InXSA9IHRydWU7XG4gICAgICAgICAgICAgICAgICAgIGlmIChCVUlMRC5zaGFkb3dEb20gJiYgc2hhZG93Um9vdE5vZGVzKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBicm93c2VyIHN1cHBvcnQgc2hhZG93Um9vdCBhbmQgdGhpcyBpcyBhIHNoYWRvdyBkb20gY29tcG9uZW50XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBjcmVhdGUgYW4gYWN0dWFsIHNsb3QgZWxlbWVudFxuICAgICAgICAgICAgICAgICAgICAgICAgY2hpbGRWTm9kZS4kZWxtJCA9IGRvYy5jcmVhdGVFbGVtZW50KGNoaWxkVk5vZGUuJHRhZyQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGNoaWxkVk5vZGUuJG5hbWUkKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gYWRkIHRoZSBzbG90IG5hbWUgYXR0cmlidXRlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2hpbGRWTm9kZS4kZWxtJC5zZXRBdHRyaWJ1dGUoJ25hbWUnLCBjaGlsZFZOb2RlLiRuYW1lJCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBpbnNlcnQgdGhlIG5ldyBzbG90IGVsZW1lbnQgYmVmb3JlIHRoZSBzbG90IGNvbW1lbnRcbiAgICAgICAgICAgICAgICAgICAgICAgIG5vZGUucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUoY2hpbGRWTm9kZS4kZWxtJCwgbm9kZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyByZW1vdmUgdGhlIHNsb3QgY29tbWVudCBzaW5jZSBpdCdzIG5vdCBuZWVkZWQgZm9yIHNoYWRvd1xuICAgICAgICAgICAgICAgICAgICAgICAgbm9kZS5yZW1vdmUoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChjaGlsZFZOb2RlLiRkZXB0aCQgPT09ICcwJykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNoYWRvd1Jvb3ROb2Rlc1tjaGlsZFZOb2RlLiRpbmRleCRdID0gY2hpbGRWTm9kZS4kZWxtJDtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBzbG90Tm9kZXMucHVzaChjaGlsZFZOb2RlKTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKCFwYXJlbnRWTm9kZS4kY2hpbGRyZW4kKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBwYXJlbnRWTm9kZS4kY2hpbGRyZW4kID0gW107XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgcGFyZW50Vk5vZGUuJGNoaWxkcmVuJFtjaGlsZFZOb2RlLiRpbmRleCRdID0gY2hpbGRWTm9kZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSBpZiAoY2hpbGROb2RlVHlwZSA9PT0gQ09OVEVOVF9SRUZfSUQpIHtcbiAgICAgICAgICAgICAgICAgICAgLy8gYCR7Q09OVEVOVF9SRUZfSUR9LiR7aG9zdElkfWA7XG4gICAgICAgICAgICAgICAgICAgIGlmIChCVUlMRC5zaGFkb3dEb20gJiYgc2hhZG93Um9vdE5vZGVzKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyByZW1vdmUgdGhlIGNvbnRlbnQgcmVmIGNvbW1lbnQgc2luY2UgaXQncyBub3QgbmVlZGVkIGZvciBzaGFkb3dcbiAgICAgICAgICAgICAgICAgICAgICAgIG5vZGUucmVtb3ZlKCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgZWxzZSBpZiAoQlVJTEQuc2xvdFJlbG9jYXRpb24pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGhvc3RFbG1bJ3MtY3InXSA9IG5vZGU7XG4gICAgICAgICAgICAgICAgICAgICAgICBub2RlWydzLWNuJ10gPSB0cnVlO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIGVsc2UgaWYgKHBhcmVudFZOb2RlICYmIHBhcmVudFZOb2RlLiR0YWckID09PSAnc3R5bGUnKSB7XG4gICAgICAgIGNvbnN0IHZub2RlID0gbmV3Vk5vZGUobnVsbCwgbm9kZS50ZXh0Q29udGVudCk7XG4gICAgICAgIHZub2RlLiRlbG0kID0gbm9kZTtcbiAgICAgICAgdm5vZGUuJGluZGV4JCA9ICcwJztcbiAgICAgICAgcGFyZW50Vk5vZGUuJGNoaWxkcmVuJCA9IFt2bm9kZV07XG4gICAgfVxufTtcbmNvbnN0IGluaXRpYWxpemVEb2N1bWVudEh5ZHJhdGUgPSAobm9kZSwgb3JnTG9jTm9kZXMpID0+IHtcbiAgICBpZiAobm9kZS5ub2RlVHlwZSA9PT0gMSAvKiBOT0RFX1RZUEUuRWxlbWVudE5vZGUgKi8pIHtcbiAgICAgICAgbGV0IGkgPSAwO1xuICAgICAgICBmb3IgKDsgaSA8IG5vZGUuY2hpbGROb2Rlcy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgaW5pdGlhbGl6ZURvY3VtZW50SHlkcmF0ZShub2RlLmNoaWxkTm9kZXNbaV0sIG9yZ0xvY05vZGVzKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAobm9kZS5zaGFkb3dSb290KSB7XG4gICAgICAgICAgICBmb3IgKGkgPSAwOyBpIDwgbm9kZS5zaGFkb3dSb290LmNoaWxkTm9kZXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgICAgICBpbml0aWFsaXplRG9jdW1lbnRIeWRyYXRlKG5vZGUuc2hhZG93Um9vdC5jaGlsZE5vZGVzW2ldLCBvcmdMb2NOb2Rlcyk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgZWxzZSBpZiAobm9kZS5ub2RlVHlwZSA9PT0gOCAvKiBOT0RFX1RZUEUuQ29tbWVudE5vZGUgKi8pIHtcbiAgICAgICAgY29uc3QgY2hpbGRJZFNwbHQgPSBub2RlLm5vZGVWYWx1ZS5zcGxpdCgnLicpO1xuICAgICAgICBpZiAoY2hpbGRJZFNwbHRbMF0gPT09IE9SR19MT0NBVElPTl9JRCkge1xuICAgICAgICAgICAgb3JnTG9jTm9kZXMuc2V0KGNoaWxkSWRTcGx0WzFdICsgJy4nICsgY2hpbGRJZFNwbHRbMl0sIG5vZGUpO1xuICAgICAgICAgICAgbm9kZS5ub2RlVmFsdWUgPSAnJztcbiAgICAgICAgICAgIC8vIHVzZWZ1bCB0byBrbm93IGlmIHRoZSBvcmlnaW5hbCBsb2NhdGlvbiBpc1xuICAgICAgICAgICAgLy8gdGhlIHJvb3QgbGlnaHQtZG9tIG9mIGEgc2hhZG93IGRvbSBjb21wb25lbnRcbiAgICAgICAgICAgIG5vZGVbJ3MtZW4nXSA9IGNoaWxkSWRTcGx0WzNdO1xuICAgICAgICB9XG4gICAgfVxufTtcbi8vIFByaXZhdGVcbmNvbnN0IGNvbXB1dGVNb2RlID0gKGVsbSkgPT4gbW9kZVJlc29sdXRpb25DaGFpbi5tYXAoKGgpID0+IGgoZWxtKSkuZmluZCgobSkgPT4gISFtKTtcbi8vIFB1YmxpY1xuY29uc3Qgc2V0TW9kZSA9IChoYW5kbGVyKSA9PiBtb2RlUmVzb2x1dGlvbkNoYWluLnB1c2goaGFuZGxlcik7XG5jb25zdCBnZXRNb2RlID0gKHJlZikgPT4gZ2V0SG9zdFJlZihyZWYpLiRtb2RlTmFtZSQ7XG4vKipcbiAqIFBhcnNlIGEgbmV3IHByb3BlcnR5IHZhbHVlIGZvciBhIGdpdmVuIHByb3BlcnR5IHR5cGUuXG4gKlxuICogV2hpbGUgdGhlIHByb3AgdmFsdWUgY2FuIHJlYXNvbmFibHkgYmUgZXhwZWN0ZWQgdG8gYmUgb2YgYGFueWAgdHlwZSBhcyBmYXIgYXMgVHlwZVNjcmlwdCdzIHR5cGUgY2hlY2tlciBpcyBjb25jZXJuZWQsXG4gKiBpdCBpcyBub3Qgc2FmZSB0byBhc3N1bWUgdGhhdCB0aGUgc3RyaW5nIHJldHVybmVkIGJ5IGV2YWx1YXRpbmcgYHR5cGVvZiBwcm9wVmFsdWVgIG1hdGNoZXM6XG4gKiAgIDEuIGBhbnlgLCB0aGUgdHlwZSBnaXZlbiB0byBgcHJvcFZhbHVlYCBpbiB0aGUgZnVuY3Rpb24gc2lnbmF0dXJlXG4gKiAgIDIuIHRoZSB0eXBlIHN0b3JlZCBmcm9tIGBwcm9wVHlwZWAuXG4gKlxuICogVGhpcyBmdW5jdGlvbiBwcm92aWRlcyB0aGUgY2FwYWJpbGl0eSB0byBwYXJzZS9jb2VyY2UgYSBwcm9wZXJ0eSdzIHZhbHVlIHRvIHBvdGVudGlhbGx5IGFueSBvdGhlciBKYXZhU2NyaXB0IHR5cGUuXG4gKlxuICogUHJvcGVydHkgdmFsdWVzIHJlcHJlc2VudGVkIGluIFRTWCBwcmVzZXJ2ZSB0aGVpciB0eXBlIGluZm9ybWF0aW9uLiBJbiB0aGUgZXhhbXBsZSBiZWxvdywgdGhlIG51bWJlciAwIGlzIHBhc3NlZCB0b1xuICogYSBjb21wb25lbnQuIFRoaXMgYHByb3BWYWx1ZWAgd2lsbCBwcmVzZXJ2ZSBpdHMgdHlwZSBpbmZvcm1hdGlvbiAoYHR5cGVvZiBwcm9wVmFsdWUgPT09ICdudW1iZXInYCkuIE5vdGUgdGhhdCBpc1xuICogYmFzZWQgb24gdGhlIHR5cGUgb2YgdGhlIHZhbHVlIGJlaW5nIHBhc3NlZCBpbiwgbm90IHRoZSB0eXBlIGRlY2xhcmVkIG9mIHRoZSBjbGFzcyBtZW1iZXIgZGVjb3JhdGVkIHdpdGggYEBQcm9wYC5cbiAqIGBgYHRzeFxuICogPG15LWNtcCBwcm9wLXZhbD17MH0+PC9teS1jbXA+XG4gKiBgYGBcbiAqXG4gKiBIVE1MIHByb3AgdmFsdWVzIG9uIHRoZSBvdGhlciBoYW5kLCB3aWxsIGFsd2F5cyBhIHN0cmluZ1xuICpcbiAqIEBwYXJhbSBwcm9wVmFsdWUgdGhlIG5ldyB2YWx1ZSB0byBjb2VyY2UgdG8gc29tZSB0eXBlXG4gKiBAcGFyYW0gcHJvcFR5cGUgdGhlIHR5cGUgb2YgdGhlIHByb3AsIGV4cHJlc3NlZCBhcyBhIGJpbmFyeSBudW1iZXJcbiAqIEByZXR1cm5zIHRoZSBwYXJzZWQvY29lcmNlZCB2YWx1ZVxuICovXG5jb25zdCBwYXJzZVByb3BlcnR5VmFsdWUgPSAocHJvcFZhbHVlLCBwcm9wVHlwZSkgPT4ge1xuICAgIC8vIGVuc3VyZSB0aGlzIHZhbHVlIGlzIG9mIHRoZSBjb3JyZWN0IHByb3AgdHlwZVxuICAgIGlmIChwcm9wVmFsdWUgIT0gbnVsbCAmJiAhaXNDb21wbGV4VHlwZShwcm9wVmFsdWUpKSB7XG4gICAgICAgIGlmIChCVUlMRC5wcm9wQm9vbGVhbiAmJiBwcm9wVHlwZSAmIDQgLyogTUVNQkVSX0ZMQUdTLkJvb2xlYW4gKi8pIHtcbiAgICAgICAgICAgIC8vIHBlciB0aGUgSFRNTCBzcGVjLCBhbnkgc3RyaW5nIHZhbHVlIG1lYW5zIGl0IGlzIGEgYm9vbGVhbiB0cnVlIHZhbHVlXG4gICAgICAgICAgICAvLyBidXQgd2UnbGwgY2hlYXQgaGVyZSBhbmQgc2F5IHRoYXQgdGhlIHN0cmluZyBcImZhbHNlXCIgaXMgdGhlIGJvb2xlYW4gZmFsc2VcbiAgICAgICAgICAgIHJldHVybiBwcm9wVmFsdWUgPT09ICdmYWxzZScgPyBmYWxzZSA6IHByb3BWYWx1ZSA9PT0gJycgfHwgISFwcm9wVmFsdWU7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKEJVSUxELnByb3BOdW1iZXIgJiYgcHJvcFR5cGUgJiAyIC8qIE1FTUJFUl9GTEFHUy5OdW1iZXIgKi8pIHtcbiAgICAgICAgICAgIC8vIGZvcmNlIGl0IHRvIGJlIGEgbnVtYmVyXG4gICAgICAgICAgICByZXR1cm4gcGFyc2VGbG9hdChwcm9wVmFsdWUpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChCVUlMRC5wcm9wU3RyaW5nICYmIHByb3BUeXBlICYgMSAvKiBNRU1CRVJfRkxBR1MuU3RyaW5nICovKSB7XG4gICAgICAgICAgICAvLyBjb3VsZCBoYXZlIGJlZW4gcGFzc2VkIGFzIGEgbnVtYmVyIG9yIGJvb2xlYW5cbiAgICAgICAgICAgIC8vIGJ1dCB3ZSBzdGlsbCB3YW50IGl0IGFzIGEgc3RyaW5nXG4gICAgICAgICAgICByZXR1cm4gU3RyaW5nKHByb3BWYWx1ZSk7XG4gICAgICAgIH1cbiAgICAgICAgLy8gcmVkdW5kYW50IHJldHVybiBoZXJlIGZvciBiZXR0ZXIgbWluaWZpY2F0aW9uXG4gICAgICAgIHJldHVybiBwcm9wVmFsdWU7XG4gICAgfVxuICAgIC8vIG5vdCBzdXJlIGV4YWN0bHkgd2hhdCB0eXBlIHdlIHdhbnRcbiAgICAvLyBzbyBubyBuZWVkIHRvIGNoYW5nZSB0byBhIGRpZmZlcmVudCB0eXBlXG4gICAgcmV0dXJuIHByb3BWYWx1ZTtcbn07XG5jb25zdCBnZXRFbGVtZW50ID0gKHJlZikgPT4gKEJVSUxELmxhenlMb2FkID8gZ2V0SG9zdFJlZihyZWYpLiRob3N0RWxlbWVudCQgOiByZWYpO1xuY29uc3QgY3JlYXRlRXZlbnQgPSAocmVmLCBuYW1lLCBmbGFncykgPT4ge1xuICAgIGNvbnN0IGVsbSA9IGdldEVsZW1lbnQocmVmKTtcbiAgICByZXR1cm4ge1xuICAgICAgICBlbWl0OiAoZGV0YWlsKSA9PiB7XG4gICAgICAgICAgICBpZiAoQlVJTEQuaXNEZXYgJiYgIWVsbS5pc0Nvbm5lY3RlZCkge1xuICAgICAgICAgICAgICAgIGNvbnNvbGVEZXZXYXJuKGBUaGUgXCIke25hbWV9XCIgZXZlbnQgd2FzIGVtaXR0ZWQsIGJ1dCB0aGUgZGlzcGF0Y2hlciBub2RlIGlzIG5vIGxvbmdlciBjb25uZWN0ZWQgdG8gdGhlIGRvbS5gKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBlbWl0RXZlbnQoZWxtLCBuYW1lLCB7XG4gICAgICAgICAgICAgICAgYnViYmxlczogISEoZmxhZ3MgJiA0IC8qIEVWRU5UX0ZMQUdTLkJ1YmJsZXMgKi8pLFxuICAgICAgICAgICAgICAgIGNvbXBvc2VkOiAhIShmbGFncyAmIDIgLyogRVZFTlRfRkxBR1MuQ29tcG9zZWQgKi8pLFxuICAgICAgICAgICAgICAgIGNhbmNlbGFibGU6ICEhKGZsYWdzICYgMSAvKiBFVkVOVF9GTEFHUy5DYW5jZWxsYWJsZSAqLyksXG4gICAgICAgICAgICAgICAgZGV0YWlsLFxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0sXG4gICAgfTtcbn07XG4vKipcbiAqIEhlbHBlciBmdW5jdGlvbiB0byBjcmVhdGUgJiBkaXNwYXRjaCBhIGN1c3RvbSBFdmVudCBvbiBhIHByb3ZpZGVkIHRhcmdldFxuICogQHBhcmFtIGVsbSB0aGUgdGFyZ2V0IG9mIHRoZSBFdmVudFxuICogQHBhcmFtIG5hbWUgdGhlIG5hbWUgdG8gZ2l2ZSB0aGUgY3VzdG9tIEV2ZW50XG4gKiBAcGFyYW0gb3B0cyBvcHRpb25zIGZvciBjb25maWd1cmluZyBhIGN1c3RvbSBFdmVudFxuICogQHJldHVybnMgdGhlIGN1c3RvbSBFdmVudFxuICovXG5jb25zdCBlbWl0RXZlbnQgPSAoZWxtLCBuYW1lLCBvcHRzKSA9PiB7XG4gICAgY29uc3QgZXYgPSBwbHQuY2UobmFtZSwgb3B0cyk7XG4gICAgZWxtLmRpc3BhdGNoRXZlbnQoZXYpO1xuICAgIHJldHVybiBldjtcbn07XG5jb25zdCByb290QXBwbGllZFN0eWxlcyA9IC8qQF9fUFVSRV9fKi8gbmV3IFdlYWtNYXAoKTtcbmNvbnN0IHJlZ2lzdGVyU3R5bGUgPSAoc2NvcGVJZCwgY3NzVGV4dCwgYWxsb3dDUykgPT4ge1xuICAgIGxldCBzdHlsZSA9IHN0eWxlcy5nZXQoc2NvcGVJZCk7XG4gICAgaWYgKHN1cHBvcnRzQ29uc3RydWN0YWJsZVN0eWxlc2hlZXRzICYmIGFsbG93Q1MpIHtcbiAgICAgICAgc3R5bGUgPSAoc3R5bGUgfHwgbmV3IENTU1N0eWxlU2hlZXQoKSk7XG4gICAgICAgIGlmICh0eXBlb2Ygc3R5bGUgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICBzdHlsZSA9IGNzc1RleHQ7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBzdHlsZS5yZXBsYWNlU3luYyhjc3NUZXh0KTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgc3R5bGUgPSBjc3NUZXh0O1xuICAgIH1cbiAgICBzdHlsZXMuc2V0KHNjb3BlSWQsIHN0eWxlKTtcbn07XG5jb25zdCBhZGRTdHlsZSA9IChzdHlsZUNvbnRhaW5lck5vZGUsIGNtcE1ldGEsIG1vZGUpID0+IHtcbiAgICB2YXIgX2E7XG4gICAgY29uc3Qgc2NvcGVJZCA9IGdldFNjb3BlSWQoY21wTWV0YSwgbW9kZSk7XG4gICAgY29uc3Qgc3R5bGUgPSBzdHlsZXMuZ2V0KHNjb3BlSWQpO1xuICAgIGlmICghQlVJTEQuYXR0YWNoU3R5bGVzKSB7XG4gICAgICAgIHJldHVybiBzY29wZUlkO1xuICAgIH1cbiAgICAvLyBpZiBhbiBlbGVtZW50IGlzIE5PVCBjb25uZWN0ZWQgdGhlbiBnZXRSb290Tm9kZSgpIHdpbGwgcmV0dXJuIHRoZSB3cm9uZyByb290IG5vZGVcbiAgICAvLyBzbyB0aGUgZmFsbGJhY2sgaXMgdG8gYWx3YXlzIHVzZSB0aGUgZG9jdW1lbnQgZm9yIHRoZSByb290IG5vZGUgaW4gdGhvc2UgY2FzZXNcbiAgICBzdHlsZUNvbnRhaW5lck5vZGUgPSBzdHlsZUNvbnRhaW5lck5vZGUubm9kZVR5cGUgPT09IDExIC8qIE5PREVfVFlQRS5Eb2N1bWVudEZyYWdtZW50ICovID8gc3R5bGVDb250YWluZXJOb2RlIDogZG9jO1xuICAgIGlmIChzdHlsZSkge1xuICAgICAgICBpZiAodHlwZW9mIHN0eWxlID09PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgc3R5bGVDb250YWluZXJOb2RlID0gc3R5bGVDb250YWluZXJOb2RlLmhlYWQgfHwgc3R5bGVDb250YWluZXJOb2RlO1xuICAgICAgICAgICAgbGV0IGFwcGxpZWRTdHlsZXMgPSByb290QXBwbGllZFN0eWxlcy5nZXQoc3R5bGVDb250YWluZXJOb2RlKTtcbiAgICAgICAgICAgIGxldCBzdHlsZUVsbTtcbiAgICAgICAgICAgIGlmICghYXBwbGllZFN0eWxlcykge1xuICAgICAgICAgICAgICAgIHJvb3RBcHBsaWVkU3R5bGVzLnNldChzdHlsZUNvbnRhaW5lck5vZGUsIChhcHBsaWVkU3R5bGVzID0gbmV3IFNldCgpKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoIWFwcGxpZWRTdHlsZXMuaGFzKHNjb3BlSWQpKSB7XG4gICAgICAgICAgICAgICAgaWYgKEJVSUxELmh5ZHJhdGVDbGllbnRTaWRlICYmXG4gICAgICAgICAgICAgICAgICAgIHN0eWxlQ29udGFpbmVyTm9kZS5ob3N0ICYmXG4gICAgICAgICAgICAgICAgICAgIChzdHlsZUVsbSA9IHN0eWxlQ29udGFpbmVyTm9kZS5xdWVyeVNlbGVjdG9yKGBbJHtIWURSQVRFRF9TVFlMRV9JRH09XCIke3Njb3BlSWR9XCJdYCkpKSB7XG4gICAgICAgICAgICAgICAgICAgIC8vIFRoaXMgaXMgb25seSBoYXBwZW5pbmcgb24gbmF0aXZlIHNoYWRvdy1kb20sIGRvIG5vdCBuZWVkcyBDU1MgdmFyIHNoaW1cbiAgICAgICAgICAgICAgICAgICAgc3R5bGVFbG0uaW5uZXJIVE1MID0gc3R5bGU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBzdHlsZUVsbSA9IGRvYy5jcmVhdGVFbGVtZW50KCdzdHlsZScpO1xuICAgICAgICAgICAgICAgICAgICBzdHlsZUVsbS5pbm5lckhUTUwgPSBzdHlsZTtcbiAgICAgICAgICAgICAgICAgICAgLy8gQXBwbHkgQ1NQIG5vbmNlIHRvIHRoZSBzdHlsZSB0YWcgaWYgaXQgZXhpc3RzXG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IG5vbmNlID0gKF9hID0gcGx0LiRub25jZSQpICE9PSBudWxsICYmIF9hICE9PSB2b2lkIDAgPyBfYSA6IHF1ZXJ5Tm9uY2VNZXRhVGFnQ29udGVudChkb2MpO1xuICAgICAgICAgICAgICAgICAgICBpZiAobm9uY2UgIT0gbnVsbCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGVFbG0uc2V0QXR0cmlidXRlKCdub25jZScsIG5vbmNlKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBpZiAoQlVJTEQuaHlkcmF0ZVNlcnZlclNpZGUgfHwgQlVJTEQuaG90TW9kdWxlUmVwbGFjZW1lbnQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlRWxtLnNldEF0dHJpYnV0ZShIWURSQVRFRF9TVFlMRV9JRCwgc2NvcGVJZCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgc3R5bGVDb250YWluZXJOb2RlLmluc2VydEJlZm9yZShzdHlsZUVsbSwgc3R5bGVDb250YWluZXJOb2RlLnF1ZXJ5U2VsZWN0b3IoJ2xpbmsnKSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIC8vIEFkZCBzdHlsZXMgZm9yIGBzbG90LWZiYCBlbGVtZW50cyBpZiB3ZSdyZSB1c2luZyBzbG90cyBvdXRzaWRlIHRoZSBTaGFkb3cgRE9NXG4gICAgICAgICAgICAgICAgaWYgKGNtcE1ldGEuJGZsYWdzJCAmIDQgLyogQ01QX0ZMQUdTLmhhc1Nsb3RSZWxvY2F0aW9uICovKSB7XG4gICAgICAgICAgICAgICAgICAgIHN0eWxlRWxtLmlubmVySFRNTCArPSBTTE9UX0ZCX0NTUztcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKGFwcGxpZWRTdHlsZXMpIHtcbiAgICAgICAgICAgICAgICAgICAgYXBwbGllZFN0eWxlcy5hZGQoc2NvcGVJZCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKEJVSUxELmNvbnN0cnVjdGFibGVDU1MgJiYgIXN0eWxlQ29udGFpbmVyTm9kZS5hZG9wdGVkU3R5bGVTaGVldHMuaW5jbHVkZXMoc3R5bGUpKSB7XG4gICAgICAgICAgICBzdHlsZUNvbnRhaW5lck5vZGUuYWRvcHRlZFN0eWxlU2hlZXRzID0gWy4uLnN0eWxlQ29udGFpbmVyTm9kZS5hZG9wdGVkU3R5bGVTaGVldHMsIHN0eWxlXTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gc2NvcGVJZDtcbn07XG5jb25zdCBhdHRhY2hTdHlsZXMgPSAoaG9zdFJlZikgPT4ge1xuICAgIGNvbnN0IGNtcE1ldGEgPSBob3N0UmVmLiRjbXBNZXRhJDtcbiAgICBjb25zdCBlbG0gPSBob3N0UmVmLiRob3N0RWxlbWVudCQ7XG4gICAgY29uc3QgZmxhZ3MgPSBjbXBNZXRhLiRmbGFncyQ7XG4gICAgY29uc3QgZW5kQXR0YWNoU3R5bGVzID0gY3JlYXRlVGltZSgnYXR0YWNoU3R5bGVzJywgY21wTWV0YS4kdGFnTmFtZSQpO1xuICAgIGNvbnN0IHNjb3BlSWQgPSBhZGRTdHlsZShCVUlMRC5zaGFkb3dEb20gJiYgc3VwcG9ydHNTaGFkb3cgJiYgZWxtLnNoYWRvd1Jvb3QgPyBlbG0uc2hhZG93Um9vdCA6IGVsbS5nZXRSb290Tm9kZSgpLCBjbXBNZXRhLCBob3N0UmVmLiRtb2RlTmFtZSQpO1xuICAgIGlmICgoQlVJTEQuc2hhZG93RG9tIHx8IEJVSUxELnNjb3BlZCkgJiYgQlVJTEQuY3NzQW5ub3RhdGlvbnMgJiYgZmxhZ3MgJiAxMCAvKiBDTVBfRkxBR1MubmVlZHNTY29wZWRFbmNhcHN1bGF0aW9uICovKSB7XG4gICAgICAgIC8vIG9ubHkgcmVxdWlyZWQgd2hlbiB3ZSdyZSBOT1QgdXNpbmcgbmF0aXZlIHNoYWRvdyBkb20gKHNsb3QpXG4gICAgICAgIC8vIG9yIHRoaXMgYnJvd3NlciBkb2Vzbid0IHN1cHBvcnQgbmF0aXZlIHNoYWRvdyBkb21cbiAgICAgICAgLy8gYW5kIHRoaXMgaG9zdCBlbGVtZW50IHdhcyBOT1QgY3JlYXRlZCB3aXRoIFNTUlxuICAgICAgICAvLyBsZXQncyBwaWNrIG91dCB0aGUgaW5uZXIgY29udGVudCBmb3Igc2xvdCBwcm9qZWN0aW9uXG4gICAgICAgIC8vIGNyZWF0ZSBhIG5vZGUgdG8gcmVwcmVzZW50IHdoZXJlIHRoZSBvcmlnaW5hbFxuICAgICAgICAvLyBjb250ZW50IHdhcyBmaXJzdCBwbGFjZWQsIHdoaWNoIGlzIHVzZWZ1bCBsYXRlciBvblxuICAgICAgICAvLyBET00gV1JJVEUhIVxuICAgICAgICBlbG1bJ3Mtc2MnXSA9IHNjb3BlSWQ7XG4gICAgICAgIGVsbS5jbGFzc0xpc3QuYWRkKHNjb3BlSWQgKyAnLWgnKTtcbiAgICAgICAgaWYgKEJVSUxELnNjb3BlZCAmJiBmbGFncyAmIDIgLyogQ01QX0ZMQUdTLnNjb3BlZENzc0VuY2Fwc3VsYXRpb24gKi8pIHtcbiAgICAgICAgICAgIGVsbS5jbGFzc0xpc3QuYWRkKHNjb3BlSWQgKyAnLXMnKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBlbmRBdHRhY2hTdHlsZXMoKTtcbn07XG5jb25zdCBnZXRTY29wZUlkID0gKGNtcCwgbW9kZSkgPT4gJ3NjLScgKyAoQlVJTEQubW9kZSAmJiBtb2RlICYmIGNtcC4kZmxhZ3MkICYgMzIgLyogQ01QX0ZMQUdTLmhhc01vZGUgKi8gPyBjbXAuJHRhZ05hbWUkICsgJy0nICsgbW9kZSA6IGNtcC4kdGFnTmFtZSQpO1xuY29uc3QgY29udmVydFNjb3BlZFRvU2hhZG93ID0gKGNzcykgPT4gY3NzLnJlcGxhY2UoL1xcL1xcKiFAKFteXFwvXSspXFwqXFwvW15cXHtdK1xcey9nLCAnJDF7Jyk7XG4vKipcbiAqIFByb2R1Y3Rpb24gc2V0QWNjZXNzb3IoKSBmdW5jdGlvbiBiYXNlZCBvbiBQcmVhY3QgYnlcbiAqIEphc29uIE1pbGxlciAoQGRldmVsb3BpdClcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZVxuICogaHR0cHM6Ly9naXRodWIuY29tL2RldmVsb3BpdC9wcmVhY3QvYmxvYi9tYXN0ZXIvTElDRU5TRVxuICpcbiAqIE1vZGlmaWVkIGZvciBTdGVuY2lsJ3MgY29tcGlsZXIgYW5kIHZkb21cbiAqL1xuLyoqXG4gKiBXaGVuIHJ1bm5pbmcgYSBWRG9tIHJlbmRlciBzZXQgcHJvcGVydGllcyBwcmVzZW50IG9uIGEgVkRvbSBub2RlIG9udG8gdGhlXG4gKiBjb3JyZXNwb25kaW5nIEhUTUwgZWxlbWVudC5cbiAqXG4gKiBOb3RlIHRoYXQgdGhpcyBmdW5jdGlvbiBoYXMgc3BlY2lhbCBmdW5jdGlvbmFsaXR5IGZvciB0aGUgYGNsYXNzYCxcbiAqIGBzdHlsZWAsIGBrZXlgLCBhbmQgYHJlZmAgYXR0cmlidXRlcywgYXMgd2VsbCBhcyBldmVudCBoYW5kbGVycyAobGlrZVxuICogYG9uQ2xpY2tgLCBldGMpLiBBbGwgb3RoZXJzIGFyZSBqdXN0IHBhc3NlZCB0aHJvdWdoIGFzLWlzLlxuICpcbiAqIEBwYXJhbSBlbG0gdGhlIEhUTUxFbGVtZW50IG9udG8gd2hpY2ggYXR0cmlidXRlcyBzaG91bGQgYmUgc2V0XG4gKiBAcGFyYW0gbWVtYmVyTmFtZSB0aGUgbmFtZSBvZiB0aGUgYXR0cmlidXRlIHRvIHNldFxuICogQHBhcmFtIG9sZFZhbHVlIHRoZSBvbGQgdmFsdWUgZm9yIHRoZSBhdHRyaWJ1dGVcbiAqIEBwYXJhbSBuZXdWYWx1ZSB0aGUgbmV3IHZhbHVlIGZvciB0aGUgYXR0cmlidXRlXG4gKiBAcGFyYW0gaXNTdmcgd2hldGhlciB3ZSdyZSBpbiBhbiBzdmcgY29udGV4dCBvciBub3RcbiAqIEBwYXJhbSBmbGFncyBiaXRmbGFncyBmb3IgVmRvbSB2YXJpYWJsZXNcbiAqL1xuY29uc3Qgc2V0QWNjZXNzb3IgPSAoZWxtLCBtZW1iZXJOYW1lLCBvbGRWYWx1ZSwgbmV3VmFsdWUsIGlzU3ZnLCBmbGFncykgPT4ge1xuICAgIGlmIChvbGRWYWx1ZSAhPT0gbmV3VmFsdWUpIHtcbiAgICAgICAgbGV0IGlzUHJvcCA9IGlzTWVtYmVySW5FbGVtZW50KGVsbSwgbWVtYmVyTmFtZSk7XG4gICAgICAgIGxldCBsbiA9IG1lbWJlck5hbWUudG9Mb3dlckNhc2UoKTtcbiAgICAgICAgaWYgKEJVSUxELnZkb21DbGFzcyAmJiBtZW1iZXJOYW1lID09PSAnY2xhc3MnKSB7XG4gICAgICAgICAgICBjb25zdCBjbGFzc0xpc3QgPSBlbG0uY2xhc3NMaXN0O1xuICAgICAgICAgICAgY29uc3Qgb2xkQ2xhc3NlcyA9IHBhcnNlQ2xhc3NMaXN0KG9sZFZhbHVlKTtcbiAgICAgICAgICAgIGNvbnN0IG5ld0NsYXNzZXMgPSBwYXJzZUNsYXNzTGlzdChuZXdWYWx1ZSk7XG4gICAgICAgICAgICBjbGFzc0xpc3QucmVtb3ZlKC4uLm9sZENsYXNzZXMuZmlsdGVyKChjKSA9PiBjICYmICFuZXdDbGFzc2VzLmluY2x1ZGVzKGMpKSk7XG4gICAgICAgICAgICBjbGFzc0xpc3QuYWRkKC4uLm5ld0NsYXNzZXMuZmlsdGVyKChjKSA9PiBjICYmICFvbGRDbGFzc2VzLmluY2x1ZGVzKGMpKSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoQlVJTEQudmRvbVN0eWxlICYmIG1lbWJlck5hbWUgPT09ICdzdHlsZScpIHtcbiAgICAgICAgICAgIC8vIHVwZGF0ZSBzdHlsZSBhdHRyaWJ1dGUsIGNzcyBwcm9wZXJ0aWVzIGFuZCB2YWx1ZXNcbiAgICAgICAgICAgIGlmIChCVUlMRC51cGRhdGFibGUpIHtcbiAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IHByb3AgaW4gb2xkVmFsdWUpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKCFuZXdWYWx1ZSB8fCBuZXdWYWx1ZVtwcm9wXSA9PSBudWxsKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoIUJVSUxELmh5ZHJhdGVTZXJ2ZXJTaWRlICYmIHByb3AuaW5jbHVkZXMoJy0nKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVsbS5zdHlsZS5yZW1vdmVQcm9wZXJ0eShwcm9wKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVsbS5zdHlsZVtwcm9wXSA9ICcnO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZm9yIChjb25zdCBwcm9wIGluIG5ld1ZhbHVlKSB7XG4gICAgICAgICAgICAgICAgaWYgKCFvbGRWYWx1ZSB8fCBuZXdWYWx1ZVtwcm9wXSAhPT0gb2xkVmFsdWVbcHJvcF0pIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKCFCVUlMRC5oeWRyYXRlU2VydmVyU2lkZSAmJiBwcm9wLmluY2x1ZGVzKCctJykpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGVsbS5zdHlsZS5zZXRQcm9wZXJ0eShwcm9wLCBuZXdWYWx1ZVtwcm9wXSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBlbG0uc3R5bGVbcHJvcF0gPSBuZXdWYWx1ZVtwcm9wXTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChCVUlMRC52ZG9tS2V5ICYmIG1lbWJlck5hbWUgPT09ICdrZXknKVxuICAgICAgICAgICAgO1xuICAgICAgICBlbHNlIGlmIChCVUlMRC52ZG9tUmVmICYmIG1lbWJlck5hbWUgPT09ICdyZWYnKSB7XG4gICAgICAgICAgICAvLyBtaW5pZmllciB3aWxsIGNsZWFuIHRoaXMgdXBcbiAgICAgICAgICAgIGlmIChuZXdWYWx1ZSkge1xuICAgICAgICAgICAgICAgIG5ld1ZhbHVlKGVsbSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoQlVJTEQudmRvbUxpc3RlbmVyICYmXG4gICAgICAgICAgICAoQlVJTEQubGF6eUxvYWQgPyAhaXNQcm9wIDogIWVsbS5fX2xvb2t1cFNldHRlcl9fKG1lbWJlck5hbWUpKSAmJlxuICAgICAgICAgICAgbWVtYmVyTmFtZVswXSA9PT0gJ28nICYmXG4gICAgICAgICAgICBtZW1iZXJOYW1lWzFdID09PSAnbicpIHtcbiAgICAgICAgICAgIC8vIEV2ZW50IEhhbmRsZXJzXG4gICAgICAgICAgICAvLyBzbyBpZiB0aGUgbWVtYmVyIG5hbWUgc3RhcnRzIHdpdGggXCJvblwiIGFuZCB0aGUgM3JkIGNoYXJhY3RlcnMgaXNcbiAgICAgICAgICAgIC8vIGEgY2FwaXRhbCBsZXR0ZXIsIGFuZCBpdCdzIG5vdCBhbHJlYWR5IGEgbWVtYmVyIG9uIHRoZSBlbGVtZW50LFxuICAgICAgICAgICAgLy8gdGhlbiB3ZSdyZSBhc3N1bWluZyBpdCdzIGFuIGV2ZW50IGxpc3RlbmVyXG4gICAgICAgICAgICBpZiAobWVtYmVyTmFtZVsyXSA9PT0gJy0nKSB7XG4gICAgICAgICAgICAgICAgLy8gb24tIHByZWZpeGVkIGV2ZW50c1xuICAgICAgICAgICAgICAgIC8vIGFsbG93cyB0byBiZSBleHBsaWNpdCBhYm91dCB0aGUgZG9tIGV2ZW50IHRvIGxpc3RlbiB3aXRob3V0IGFueSBtYWdpY1xuICAgICAgICAgICAgICAgIC8vIHVuZGVyIHRoZSBob29kOlxuICAgICAgICAgICAgICAgIC8vIDxteS1jbXAgb24tY2xpY2s+IC8vIGxpc3RlbnMgZm9yIFwiY2xpY2tcIlxuICAgICAgICAgICAgICAgIC8vIDxteS1jbXAgb24tQ2xpY2s+IC8vIGxpc3RlbnMgZm9yIFwiQ2xpY2tcIlxuICAgICAgICAgICAgICAgIC8vIDxteS1jbXAgb24taW9uQ2hhbmdlPiAvLyBsaXN0ZW5zIGZvciBcImlvbkNoYW5nZVwiXG4gICAgICAgICAgICAgICAgLy8gPG15LWNtcCBvbi1FVkVOVFM+IC8vIGxpc3RlbnMgZm9yIFwiRVZFTlRTXCJcbiAgICAgICAgICAgICAgICBtZW1iZXJOYW1lID0gbWVtYmVyTmFtZS5zbGljZSgzKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2UgaWYgKGlzTWVtYmVySW5FbGVtZW50KHdpbiwgbG4pKSB7XG4gICAgICAgICAgICAgICAgLy8gc3RhbmRhcmQgZXZlbnRcbiAgICAgICAgICAgICAgICAvLyB0aGUgSlNYIGF0dHJpYnV0ZSBjb3VsZCBoYXZlIGJlZW4gXCJvbk1vdXNlT3ZlclwiIGFuZCB0aGVcbiAgICAgICAgICAgICAgICAvLyBtZW1iZXIgbmFtZSBcIm9ubW91c2VvdmVyXCIgaXMgb24gdGhlIHdpbmRvdydzIHByb3RvdHlwZVxuICAgICAgICAgICAgICAgIC8vIHNvIGxldCdzIGFkZCB0aGUgbGlzdGVuZXIgXCJtb3VzZW92ZXJcIiwgd2hpY2ggaXMgYWxsIGxvd2VyY2FzZWRcbiAgICAgICAgICAgICAgICBtZW1iZXJOYW1lID0gbG4uc2xpY2UoMik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAvLyBjdXN0b20gZXZlbnRcbiAgICAgICAgICAgICAgICAvLyB0aGUgSlNYIGF0dHJpYnV0ZSBjb3VsZCBoYXZlIGJlZW4gXCJvbk15Q3VzdG9tRXZlbnRcIlxuICAgICAgICAgICAgICAgIC8vIHNvIGxldCdzIHRyaW0gb2ZmIHRoZSBcIm9uXCIgcHJlZml4IGFuZCBsb3dlcmNhc2UgdGhlIGZpcnN0IGNoYXJhY3RlclxuICAgICAgICAgICAgICAgIC8vIGFuZCBhZGQgdGhlIGxpc3RlbmVyIFwibXlDdXN0b21FdmVudFwiXG4gICAgICAgICAgICAgICAgLy8gZXhjZXB0IGZvciB0aGUgZmlyc3QgY2hhcmFjdGVyLCB3ZSBrZWVwIHRoZSBldmVudCBuYW1lIGNhc2VcbiAgICAgICAgICAgICAgICBtZW1iZXJOYW1lID0gbG5bMl0gKyBtZW1iZXJOYW1lLnNsaWNlKDMpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKG9sZFZhbHVlIHx8IG5ld1ZhbHVlKSB7XG4gICAgICAgICAgICAgICAgLy8gTmVlZCB0byBhY2NvdW50IGZvciBcImNhcHR1cmVcIiBldmVudHMuXG4gICAgICAgICAgICAgICAgLy8gSWYgdGhlIGV2ZW50IG5hbWUgZW5kcyB3aXRoIFwiQ2FwdHVyZVwiLCB3ZSdsbCB1cGRhdGUgdGhlIG5hbWUgdG8gcmVtb3ZlXG4gICAgICAgICAgICAgICAgLy8gdGhlIFwiQ2FwdHVyZVwiIHN1ZmZpeCBhbmQgbWFrZSBzdXJlIHRoZSBldmVudCBsaXN0ZW5lciBpcyBzZXR1cCB0byBoYW5kbGUgdGhlIGNhcHR1cmUgZXZlbnQuXG4gICAgICAgICAgICAgICAgY29uc3QgY2FwdHVyZSA9IG1lbWJlck5hbWUuZW5kc1dpdGgoQ0FQVFVSRV9FVkVOVF9TVUZGSVgpO1xuICAgICAgICAgICAgICAgIC8vIE1ha2Ugc3VyZSB3ZSBvbmx5IHJlcGxhY2UgdGhlIGxhc3QgaW5zdGFuY2Ugb2YgXCJDYXB0dXJlXCJcbiAgICAgICAgICAgICAgICBtZW1iZXJOYW1lID0gbWVtYmVyTmFtZS5yZXBsYWNlKENBUFRVUkVfRVZFTlRfUkVHRVgsICcnKTtcbiAgICAgICAgICAgICAgICBpZiAob2xkVmFsdWUpIHtcbiAgICAgICAgICAgICAgICAgICAgcGx0LnJlbChlbG0sIG1lbWJlck5hbWUsIG9sZFZhbHVlLCBjYXB0dXJlKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKG5ld1ZhbHVlKSB7XG4gICAgICAgICAgICAgICAgICAgIHBsdC5hZWwoZWxtLCBtZW1iZXJOYW1lLCBuZXdWYWx1ZSwgY2FwdHVyZSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKEJVSUxELnZkb21Qcm9wT3JBdHRyKSB7XG4gICAgICAgICAgICAvLyBTZXQgcHJvcGVydHkgaWYgaXQgZXhpc3RzIGFuZCBpdCdzIG5vdCBhIFNWR1xuICAgICAgICAgICAgY29uc3QgaXNDb21wbGV4ID0gaXNDb21wbGV4VHlwZShuZXdWYWx1ZSk7XG4gICAgICAgICAgICBpZiAoKGlzUHJvcCB8fCAoaXNDb21wbGV4ICYmIG5ld1ZhbHVlICE9PSBudWxsKSkgJiYgIWlzU3ZnKSB7XG4gICAgICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKCFlbG0udGFnTmFtZS5pbmNsdWRlcygnLScpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBuID0gbmV3VmFsdWUgPT0gbnVsbCA/ICcnIDogbmV3VmFsdWU7XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBXb3JrYXJvdW5kIGZvciBTYWZhcmksIG1vdmluZyB0aGUgPGlucHV0PiBjYXJldCB3aGVuIHJlLWFzc2lnbmluZyB0aGUgc2FtZSB2YWx1ZWRcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChtZW1iZXJOYW1lID09PSAnbGlzdCcpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpc1Byb3AgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGVsc2UgaWYgKG9sZFZhbHVlID09IG51bGwgfHwgZWxtW21lbWJlck5hbWVdICE9IG4pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbG1bbWVtYmVyTmFtZV0gPSBuO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgZWxtW21lbWJlck5hbWVdID0gbmV3VmFsdWU7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgY2F0Y2ggKGUpIHsgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLyoqXG4gICAgICAgICAgICAgKiBOZWVkIHRvIG1hbnVhbGx5IHVwZGF0ZSBhdHRyaWJ1dGUgaWY6XG4gICAgICAgICAgICAgKiAtIG1lbWJlck5hbWUgaXMgbm90IGFuIGF0dHJpYnV0ZVxuICAgICAgICAgICAgICogLSBpZiB3ZSBhcmUgcmVuZGVyaW5nIHRoZSBob3N0IGVsZW1lbnQgaW4gb3JkZXIgdG8gcmVmbGVjdCBhdHRyaWJ1dGVcbiAgICAgICAgICAgICAqIC0gaWYgaXQncyBhIFNWRywgc2luY2UgcHJvcGVydGllcyBtaWdodCBub3Qgd29yayBpbiA8c3ZnPlxuICAgICAgICAgICAgICogLSBpZiB0aGUgbmV3VmFsdWUgaXMgbnVsbC91bmRlZmluZWQgb3IgJ2ZhbHNlJy5cbiAgICAgICAgICAgICAqL1xuICAgICAgICAgICAgbGV0IHhsaW5rID0gZmFsc2U7XG4gICAgICAgICAgICBpZiAoQlVJTEQudmRvbVhsaW5rKSB7XG4gICAgICAgICAgICAgICAgaWYgKGxuICE9PSAobG4gPSBsbi5yZXBsYWNlKC9eeGxpbmtcXDo/LywgJycpKSkge1xuICAgICAgICAgICAgICAgICAgICBtZW1iZXJOYW1lID0gbG47XG4gICAgICAgICAgICAgICAgICAgIHhsaW5rID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAobmV3VmFsdWUgPT0gbnVsbCB8fCBuZXdWYWx1ZSA9PT0gZmFsc2UpIHtcbiAgICAgICAgICAgICAgICBpZiAobmV3VmFsdWUgIT09IGZhbHNlIHx8IGVsbS5nZXRBdHRyaWJ1dGUobWVtYmVyTmFtZSkgPT09ICcnKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChCVUlMRC52ZG9tWGxpbmsgJiYgeGxpbmspIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGVsbS5yZW1vdmVBdHRyaWJ1dGVOUyhYTElOS19OUywgbWVtYmVyTmFtZSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBlbG0ucmVtb3ZlQXR0cmlidXRlKG1lbWJlck5hbWUpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZiAoKCFpc1Byb3AgfHwgZmxhZ3MgJiA0IC8qIFZOT0RFX0ZMQUdTLmlzSG9zdCAqLyB8fCBpc1N2ZykgJiYgIWlzQ29tcGxleCkge1xuICAgICAgICAgICAgICAgIG5ld1ZhbHVlID0gbmV3VmFsdWUgPT09IHRydWUgPyAnJyA6IG5ld1ZhbHVlO1xuICAgICAgICAgICAgICAgIGlmIChCVUlMRC52ZG9tWGxpbmsgJiYgeGxpbmspIHtcbiAgICAgICAgICAgICAgICAgICAgZWxtLnNldEF0dHJpYnV0ZU5TKFhMSU5LX05TLCBtZW1iZXJOYW1lLCBuZXdWYWx1ZSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBlbG0uc2V0QXR0cmlidXRlKG1lbWJlck5hbWUsIG5ld1ZhbHVlKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG59O1xuY29uc3QgcGFyc2VDbGFzc0xpc3RSZWdleCA9IC9cXHMvO1xuY29uc3QgcGFyc2VDbGFzc0xpc3QgPSAodmFsdWUpID0+ICghdmFsdWUgPyBbXSA6IHZhbHVlLnNwbGl0KHBhcnNlQ2xhc3NMaXN0UmVnZXgpKTtcbmNvbnN0IENBUFRVUkVfRVZFTlRfU1VGRklYID0gJ0NhcHR1cmUnO1xuY29uc3QgQ0FQVFVSRV9FVkVOVF9SRUdFWCA9IG5ldyBSZWdFeHAoQ0FQVFVSRV9FVkVOVF9TVUZGSVggKyAnJCcpO1xuY29uc3QgdXBkYXRlRWxlbWVudCA9IChvbGRWbm9kZSwgbmV3Vm5vZGUsIGlzU3ZnTW9kZSwgbWVtYmVyTmFtZSkgPT4ge1xuICAgIC8vIGlmIHRoZSBlbGVtZW50IHBhc3NlZCBpbiBpcyBhIHNoYWRvdyByb290LCB3aGljaCBpcyBhIGRvY3VtZW50IGZyYWdtZW50XG4gICAgLy8gdGhlbiB3ZSB3YW50IHRvIGJlIGFkZGluZyBhdHRycy9wcm9wcyB0byB0aGUgc2hhZG93IHJvb3QncyBcImhvc3RcIiBlbGVtZW50XG4gICAgLy8gaWYgaXQncyBub3QgYSBzaGFkb3cgcm9vdCwgdGhlbiB3ZSBhZGQgYXR0cnMvcHJvcHMgdG8gdGhlIHNhbWUgZWxlbWVudFxuICAgIGNvbnN0IGVsbSA9IG5ld1Zub2RlLiRlbG0kLm5vZGVUeXBlID09PSAxMSAvKiBOT0RFX1RZUEUuRG9jdW1lbnRGcmFnbWVudCAqLyAmJiBuZXdWbm9kZS4kZWxtJC5ob3N0XG4gICAgICAgID8gbmV3Vm5vZGUuJGVsbSQuaG9zdFxuICAgICAgICA6IG5ld1Zub2RlLiRlbG0kO1xuICAgIGNvbnN0IG9sZFZub2RlQXR0cnMgPSAob2xkVm5vZGUgJiYgb2xkVm5vZGUuJGF0dHJzJCkgfHwgRU1QVFlfT0JKO1xuICAgIGNvbnN0IG5ld1Zub2RlQXR0cnMgPSBuZXdWbm9kZS4kYXR0cnMkIHx8IEVNUFRZX09CSjtcbiAgICBpZiAoQlVJTEQudXBkYXRhYmxlKSB7XG4gICAgICAgIC8vIHJlbW92ZSBhdHRyaWJ1dGVzIG5vIGxvbmdlciBwcmVzZW50IG9uIHRoZSB2bm9kZSBieSBzZXR0aW5nIHRoZW0gdG8gdW5kZWZpbmVkXG4gICAgICAgIGZvciAobWVtYmVyTmFtZSBpbiBvbGRWbm9kZUF0dHJzKSB7XG4gICAgICAgICAgICBpZiAoIShtZW1iZXJOYW1lIGluIG5ld1Zub2RlQXR0cnMpKSB7XG4gICAgICAgICAgICAgICAgc2V0QWNjZXNzb3IoZWxtLCBtZW1iZXJOYW1lLCBvbGRWbm9kZUF0dHJzW21lbWJlck5hbWVdLCB1bmRlZmluZWQsIGlzU3ZnTW9kZSwgbmV3Vm5vZGUuJGZsYWdzJCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgLy8gYWRkIG5ldyAmIHVwZGF0ZSBjaGFuZ2VkIGF0dHJpYnV0ZXNcbiAgICBmb3IgKG1lbWJlck5hbWUgaW4gbmV3Vm5vZGVBdHRycykge1xuICAgICAgICBzZXRBY2Nlc3NvcihlbG0sIG1lbWJlck5hbWUsIG9sZFZub2RlQXR0cnNbbWVtYmVyTmFtZV0sIG5ld1Zub2RlQXR0cnNbbWVtYmVyTmFtZV0sIGlzU3ZnTW9kZSwgbmV3Vm5vZGUuJGZsYWdzJCk7XG4gICAgfVxufTtcbi8qKlxuICogQ3JlYXRlIGEgRE9NIE5vZGUgY29ycmVzcG9uZGluZyB0byBvbmUgb2YgdGhlIGNoaWxkcmVuIG9mIGEgZ2l2ZW4gVk5vZGUuXG4gKlxuICogQHBhcmFtIG9sZFBhcmVudFZOb2RlIHRoZSBwYXJlbnQgVk5vZGUgZnJvbSB0aGUgcHJldmlvdXMgcmVuZGVyXG4gKiBAcGFyYW0gbmV3UGFyZW50Vk5vZGUgdGhlIHBhcmVudCBWTm9kZSBmcm9tIHRoZSBjdXJyZW50IHJlbmRlclxuICogQHBhcmFtIGNoaWxkSW5kZXggdGhlIGluZGV4IG9mIHRoZSBWTm9kZSwgaW4gdGhlIF9uZXdfIHBhcmVudCBub2RlJ3NcbiAqIGNoaWxkcmVuLCBmb3Igd2hpY2ggd2Ugd2lsbCBjcmVhdGUgYSBuZXcgRE9NIG5vZGVcbiAqIEBwYXJhbSBwYXJlbnRFbG0gdGhlIHBhcmVudCBET00gbm9kZSB3aGljaCBvdXIgbmV3IG5vZGUgd2lsbCBiZSBhIGNoaWxkIG9mXG4gKiBAcmV0dXJucyB0aGUgbmV3bHkgY3JlYXRlZCBub2RlXG4gKi9cbmNvbnN0IGNyZWF0ZUVsbSA9IChvbGRQYXJlbnRWTm9kZSwgbmV3UGFyZW50Vk5vZGUsIGNoaWxkSW5kZXgsIHBhcmVudEVsbSkgPT4ge1xuICAgIHZhciBfYTtcbiAgICAvLyB0c2xpbnQ6ZGlzYWJsZS1uZXh0LWxpbmU6IHByZWZlci1jb25zdFxuICAgIGNvbnN0IG5ld1ZOb2RlID0gbmV3UGFyZW50Vk5vZGUuJGNoaWxkcmVuJFtjaGlsZEluZGV4XTtcbiAgICBsZXQgaSA9IDA7XG4gICAgbGV0IGVsbTtcbiAgICBsZXQgY2hpbGROb2RlO1xuICAgIGxldCBvbGRWTm9kZTtcbiAgICBpZiAoQlVJTEQuc2xvdFJlbG9jYXRpb24gJiYgIXVzZU5hdGl2ZVNoYWRvd0RvbSkge1xuICAgICAgICAvLyByZW1lbWJlciBmb3IgbGF0ZXIgd2UgbmVlZCB0byBjaGVjayB0byByZWxvY2F0ZSBub2Rlc1xuICAgICAgICBjaGVja1Nsb3RSZWxvY2F0ZSA9IHRydWU7XG4gICAgICAgIGlmIChuZXdWTm9kZS4kdGFnJCA9PT0gJ3Nsb3QnKSB7XG4gICAgICAgICAgICBpZiAoc2NvcGVJZCkge1xuICAgICAgICAgICAgICAgIC8vIHNjb3BlZCBjc3MgbmVlZHMgdG8gYWRkIGl0cyBzY29wZWQgaWQgdG8gdGhlIHBhcmVudCBlbGVtZW50XG4gICAgICAgICAgICAgICAgcGFyZW50RWxtLmNsYXNzTGlzdC5hZGQoc2NvcGVJZCArICctcycpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgbmV3Vk5vZGUuJGZsYWdzJCB8PSBuZXdWTm9kZS4kY2hpbGRyZW4kXG4gICAgICAgICAgICAgICAgPyAvLyBzbG90IGVsZW1lbnQgaGFzIGZhbGxiYWNrIGNvbnRlbnRcbiAgICAgICAgICAgICAgICAgICAgMiAvKiBWTk9ERV9GTEFHUy5pc1Nsb3RGYWxsYmFjayAqL1xuICAgICAgICAgICAgICAgIDogLy8gc2xvdCBlbGVtZW50IGRvZXMgbm90IGhhdmUgZmFsbGJhY2sgY29udGVudFxuICAgICAgICAgICAgICAgICAgICAxIC8qIFZOT0RFX0ZMQUdTLmlzU2xvdFJlZmVyZW5jZSAqLztcbiAgICAgICAgfVxuICAgIH1cbiAgICBpZiAoQlVJTEQuaXNEZXYgJiYgbmV3Vk5vZGUuJGVsbSQpIHtcbiAgICAgICAgY29uc29sZURldkVycm9yKGBUaGUgSlNYICR7bmV3Vk5vZGUuJHRleHQkICE9PSBudWxsID8gYFwiJHtuZXdWTm9kZS4kdGV4dCR9XCIgdGV4dGAgOiBgXCIke25ld1ZOb2RlLiR0YWckfVwiIGVsZW1lbnRgfSBub2RlIHNob3VsZCBub3QgYmUgc2hhcmVkIHdpdGhpbiB0aGUgc2FtZSByZW5kZXJlci4gVGhlIHJlbmRlcmVyIGNhY2hlcyBlbGVtZW50IGxvb2t1cHMgaW4gb3JkZXIgdG8gaW1wcm92ZSBwZXJmb3JtYW5jZS4gSG93ZXZlciwgYSBzaWRlIGVmZmVjdCBmcm9tIHRoaXMgaXMgdGhhdCB0aGUgZXhhY3Qgc2FtZSBKU1ggbm9kZSBzaG91bGQgbm90IGJlIHJldXNlZC4gRm9yIG1vcmUgaW5mb3JtYXRpb24gcGxlYXNlIHNlZSBodHRwczovL3N0ZW5jaWxqcy5jb20vZG9jcy90ZW1wbGF0aW5nLWpzeCNhdm9pZC1zaGFyZWQtanN4LW5vZGVzYCk7XG4gICAgfVxuICAgIGlmIChCVUlMRC52ZG9tVGV4dCAmJiBuZXdWTm9kZS4kdGV4dCQgIT09IG51bGwpIHtcbiAgICAgICAgLy8gY3JlYXRlIHRleHQgbm9kZVxuICAgICAgICBlbG0gPSBuZXdWTm9kZS4kZWxtJCA9IGRvYy5jcmVhdGVUZXh0Tm9kZShuZXdWTm9kZS4kdGV4dCQpO1xuICAgIH1cbiAgICBlbHNlIGlmIChCVUlMRC5zbG90UmVsb2NhdGlvbiAmJiBuZXdWTm9kZS4kZmxhZ3MkICYgMSAvKiBWTk9ERV9GTEFHUy5pc1Nsb3RSZWZlcmVuY2UgKi8pIHtcbiAgICAgICAgLy8gY3JlYXRlIGEgc2xvdCByZWZlcmVuY2Ugbm9kZVxuICAgICAgICBlbG0gPSBuZXdWTm9kZS4kZWxtJCA9XG4gICAgICAgICAgICBCVUlMRC5pc0RlYnVnIHx8IEJVSUxELmh5ZHJhdGVTZXJ2ZXJTaWRlID8gc2xvdFJlZmVyZW5jZURlYnVnTm9kZShuZXdWTm9kZSkgOiBkb2MuY3JlYXRlVGV4dE5vZGUoJycpO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgaWYgKEJVSUxELnN2ZyAmJiAhaXNTdmdNb2RlKSB7XG4gICAgICAgICAgICBpc1N2Z01vZGUgPSBuZXdWTm9kZS4kdGFnJCA9PT0gJ3N2Zyc7XG4gICAgICAgIH1cbiAgICAgICAgLy8gY3JlYXRlIGVsZW1lbnRcbiAgICAgICAgZWxtID0gbmV3Vk5vZGUuJGVsbSQgPSAoQlVJTEQuc3ZnXG4gICAgICAgICAgICA/IGRvYy5jcmVhdGVFbGVtZW50TlMoaXNTdmdNb2RlID8gU1ZHX05TIDogSFRNTF9OUywgQlVJTEQuc2xvdFJlbG9jYXRpb24gJiYgbmV3Vk5vZGUuJGZsYWdzJCAmIDIgLyogVk5PREVfRkxBR1MuaXNTbG90RmFsbGJhY2sgKi9cbiAgICAgICAgICAgICAgICA/ICdzbG90LWZiJ1xuICAgICAgICAgICAgICAgIDogbmV3Vk5vZGUuJHRhZyQpXG4gICAgICAgICAgICA6IGRvYy5jcmVhdGVFbGVtZW50KEJVSUxELnNsb3RSZWxvY2F0aW9uICYmIG5ld1ZOb2RlLiRmbGFncyQgJiAyIC8qIFZOT0RFX0ZMQUdTLmlzU2xvdEZhbGxiYWNrICovXG4gICAgICAgICAgICAgICAgPyAnc2xvdC1mYidcbiAgICAgICAgICAgICAgICA6IG5ld1ZOb2RlLiR0YWckKSk7XG4gICAgICAgIGlmIChCVUlMRC5zdmcgJiYgaXNTdmdNb2RlICYmIG5ld1ZOb2RlLiR0YWckID09PSAnZm9yZWlnbk9iamVjdCcpIHtcbiAgICAgICAgICAgIGlzU3ZnTW9kZSA9IGZhbHNlO1xuICAgICAgICB9XG4gICAgICAgIC8vIGFkZCBjc3MgY2xhc3NlcywgYXR0cnMsIHByb3BzLCBsaXN0ZW5lcnMsIGV0Yy5cbiAgICAgICAgaWYgKEJVSUxELnZkb21BdHRyaWJ1dGUpIHtcbiAgICAgICAgICAgIHVwZGF0ZUVsZW1lbnQobnVsbCwgbmV3Vk5vZGUsIGlzU3ZnTW9kZSk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKChCVUlMRC5zaGFkb3dEb20gfHwgQlVJTEQuc2NvcGVkKSAmJiBpc0RlZihzY29wZUlkKSAmJiBlbG1bJ3Mtc2knXSAhPT0gc2NvcGVJZCkge1xuICAgICAgICAgICAgLy8gaWYgdGhlcmUgaXMgYSBzY29wZUlkIGFuZCB0aGlzIGlzIHRoZSBpbml0aWFsIHJlbmRlclxuICAgICAgICAgICAgLy8gdGhlbiBsZXQncyBhZGQgdGhlIHNjb3BlSWQgYXMgYSBjc3MgY2xhc3NcbiAgICAgICAgICAgIGVsbS5jbGFzc0xpc3QuYWRkKChlbG1bJ3Mtc2knXSA9IHNjb3BlSWQpKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAobmV3Vk5vZGUuJGNoaWxkcmVuJCkge1xuICAgICAgICAgICAgZm9yIChpID0gMDsgaSA8IG5ld1ZOb2RlLiRjaGlsZHJlbiQubGVuZ3RoOyArK2kpIHtcbiAgICAgICAgICAgICAgICAvLyBjcmVhdGUgdGhlIG5vZGVcbiAgICAgICAgICAgICAgICBjaGlsZE5vZGUgPSBjcmVhdGVFbG0ob2xkUGFyZW50Vk5vZGUsIG5ld1ZOb2RlLCBpLCBlbG0pO1xuICAgICAgICAgICAgICAgIC8vIHJldHVybiBub2RlIGNvdWxkIGhhdmUgYmVlbiBudWxsXG4gICAgICAgICAgICAgICAgaWYgKGNoaWxkTm9kZSkge1xuICAgICAgICAgICAgICAgICAgICAvLyBhcHBlbmQgb3VyIG5ldyBub2RlXG4gICAgICAgICAgICAgICAgICAgIGVsbS5hcHBlbmRDaGlsZChjaGlsZE5vZGUpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBpZiAoQlVJTEQuc3ZnKSB7XG4gICAgICAgICAgICBpZiAobmV3Vk5vZGUuJHRhZyQgPT09ICdzdmcnKSB7XG4gICAgICAgICAgICAgICAgLy8gT25seSByZXNldCB0aGUgU1ZHIGNvbnRleHQgd2hlbiB3ZSdyZSBleGl0aW5nIDxzdmc+IGVsZW1lbnRcbiAgICAgICAgICAgICAgICBpc1N2Z01vZGUgPSBmYWxzZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2UgaWYgKGVsbS50YWdOYW1lID09PSAnZm9yZWlnbk9iamVjdCcpIHtcbiAgICAgICAgICAgICAgICAvLyBSZWVudGVyIFNWRyBjb250ZXh0IHdoZW4gd2UncmUgZXhpdGluZyA8Zm9yZWlnbk9iamVjdD4gZWxlbWVudFxuICAgICAgICAgICAgICAgIGlzU3ZnTW9kZSA9IHRydWU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgaWYgKEJVSUxELnNsb3RSZWxvY2F0aW9uKSB7XG4gICAgICAgIGVsbVsncy1obiddID0gaG9zdFRhZ05hbWU7XG4gICAgICAgIGlmIChuZXdWTm9kZS4kZmxhZ3MkICYgKDIgLyogVk5PREVfRkxBR1MuaXNTbG90RmFsbGJhY2sgKi8gfCAxIC8qIFZOT0RFX0ZMQUdTLmlzU2xvdFJlZmVyZW5jZSAqLykpIHtcbiAgICAgICAgICAgIC8vIHJlbWVtYmVyIHRoZSBjb250ZW50IHJlZmVyZW5jZSBjb21tZW50XG4gICAgICAgICAgICBlbG1bJ3Mtc3InXSA9IHRydWU7XG4gICAgICAgICAgICAvLyBQZXJzaXN0IHRoZSBuYW1lIG9mIHRoZSBzbG90IHRoYXQgdGhpcyBzbG90IHdhcyBnb2luZyB0byBiZSBwcm9qZWN0ZWQgaW50by5cbiAgICAgICAgICAgIGVsbVsncy1mcyddID0gKF9hID0gbmV3Vk5vZGUuJGF0dHJzJCkgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLnNsb3Q7XG4gICAgICAgICAgICAvLyByZW1lbWJlciB0aGUgY29udGVudCByZWZlcmVuY2UgY29tbWVudFxuICAgICAgICAgICAgZWxtWydzLWNyJ10gPSBjb250ZW50UmVmO1xuICAgICAgICAgICAgLy8gcmVtZW1iZXIgdGhlIHNsb3QgbmFtZSwgb3IgZW1wdHkgc3RyaW5nIGZvciBkZWZhdWx0IHNsb3RcbiAgICAgICAgICAgIGVsbVsncy1zbiddID0gbmV3Vk5vZGUuJG5hbWUkIHx8ICcnO1xuICAgICAgICAgICAgLy8gY2hlY2sgaWYgd2UndmUgZ290IGFuIG9sZCB2bm9kZSBmb3IgdGhpcyBzbG90XG4gICAgICAgICAgICBvbGRWTm9kZSA9IG9sZFBhcmVudFZOb2RlICYmIG9sZFBhcmVudFZOb2RlLiRjaGlsZHJlbiQgJiYgb2xkUGFyZW50Vk5vZGUuJGNoaWxkcmVuJFtjaGlsZEluZGV4XTtcbiAgICAgICAgICAgIGlmIChvbGRWTm9kZSAmJiBvbGRWTm9kZS4kdGFnJCA9PT0gbmV3Vk5vZGUuJHRhZyQgJiYgb2xkUGFyZW50Vk5vZGUuJGVsbSQpIHtcbiAgICAgICAgICAgICAgICAvLyB3ZSd2ZSBnb3QgYW4gb2xkIHNsb3Qgdm5vZGUgYW5kIHRoZSB3cmFwcGVyIGlzIGJlaW5nIHJlcGxhY2VkXG4gICAgICAgICAgICAgICAgLy8gc28gbGV0J3MgbW92ZSB0aGUgb2xkIHNsb3QgY29udGVudCBiYWNrIHRvIGl0J3Mgb3JpZ2luYWwgbG9jYXRpb25cbiAgICAgICAgICAgICAgICBwdXRCYWNrSW5PcmlnaW5hbExvY2F0aW9uKG9sZFBhcmVudFZOb2RlLiRlbG0kLCBmYWxzZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGVsbTtcbn07XG5jb25zdCBwdXRCYWNrSW5PcmlnaW5hbExvY2F0aW9uID0gKHBhcmVudEVsbSwgcmVjdXJzaXZlKSA9PiB7XG4gICAgdmFyIF9hO1xuICAgIHBsdC4kZmxhZ3MkIHw9IDEgLyogUExBVEZPUk1fRkxBR1MuaXNUbXBEaXNjb25uZWN0ZWQgKi87XG4gICAgY29uc3Qgb2xkU2xvdENoaWxkTm9kZXMgPSBwYXJlbnRFbG0uY2hpbGROb2RlcztcbiAgICBmb3IgKGxldCBpID0gb2xkU2xvdENoaWxkTm9kZXMubGVuZ3RoIC0gMTsgaSA+PSAwOyBpLS0pIHtcbiAgICAgICAgY29uc3QgY2hpbGROb2RlID0gb2xkU2xvdENoaWxkTm9kZXNbaV07XG4gICAgICAgIGlmIChjaGlsZE5vZGVbJ3MtaG4nXSAhPT0gaG9zdFRhZ05hbWUgJiYgY2hpbGROb2RlWydzLW9sJ10pIHtcbiAgICAgICAgICAgIC8vIC8vIHRoaXMgY2hpbGQgbm9kZSBpbiB0aGUgb2xkIGVsZW1lbnQgaXMgZnJvbSBhbm90aGVyIGNvbXBvbmVudFxuICAgICAgICAgICAgLy8gLy8gcmVtb3ZlIHRoaXMgbm9kZSBmcm9tIHRoZSBvbGQgc2xvdCdzIHBhcmVudFxuICAgICAgICAgICAgLy8gY2hpbGROb2RlLnJlbW92ZSgpO1xuICAgICAgICAgICAgLy8gYW5kIHJlbG9jYXRlIGl0IGJhY2sgdG8gaXQncyBvcmlnaW5hbCBsb2NhdGlvblxuICAgICAgICAgICAgcGFyZW50UmVmZXJlbmNlTm9kZShjaGlsZE5vZGUpLmluc2VydEJlZm9yZShjaGlsZE5vZGUsIHJlZmVyZW5jZU5vZGUoY2hpbGROb2RlKSk7XG4gICAgICAgICAgICAvLyByZW1vdmUgdGhlIG9sZCBvcmlnaW5hbCBsb2NhdGlvbiBjb21tZW50IGVudGlyZWx5XG4gICAgICAgICAgICAvLyBsYXRlciBvbiB0aGUgcGF0Y2ggZnVuY3Rpb24gd2lsbCBrbm93IHdoYXQgdG8gZG9cbiAgICAgICAgICAgIC8vIGFuZCBtb3ZlIHRoaXMgdG8gdGhlIGNvcnJlY3Qgc3BvdCBpZiBuZWVkIGJlXG4gICAgICAgICAgICBjaGlsZE5vZGVbJ3Mtb2wnXS5yZW1vdmUoKTtcbiAgICAgICAgICAgIGNoaWxkTm9kZVsncy1vbCddID0gdW5kZWZpbmVkO1xuICAgICAgICAgICAgLy8gUmVzZXQgc28gd2UgY2FuIGNvcnJlY3RseSBtb3ZlIHRoZSBub2RlIGFyb3VuZCBhZ2Fpbi5cbiAgICAgICAgICAgIGNoaWxkTm9kZVsncy1zaCddID0gdW5kZWZpbmVkO1xuICAgICAgICAgICAgLy8gV2hlbiBwdXR0aW5nIGFuIGVsZW1lbnQgbm9kZSBiYWNrIGluIGl0cyBvcmlnaW5hbCBsb2NhdGlvbixcbiAgICAgICAgICAgIC8vIHdlIG5lZWQgdG8gcmVzZXQgdGhlIGBzbG90YCBhdHRyaWJ1dGUgYmFjayB0byB0aGUgdmFsdWUgaXQgb3JpZ2luYWxseSBoYWRcbiAgICAgICAgICAgIC8vIHNvIHdlIGNhbiBjb3JyZWN0bHkgcmVsb2NhdGUgaXQgYWdhaW4gaW4gdGhlIGZ1dHVyZVxuICAgICAgICAgICAgaWYgKGNoaWxkTm9kZS5ub2RlVHlwZSA9PT0gMSAvKiBOT0RFX1RZUEUuRWxlbWVudE5vZGUgKi8pIHtcbiAgICAgICAgICAgICAgICBjaGlsZE5vZGUuc2V0QXR0cmlidXRlKCdzbG90JywgKF9hID0gY2hpbGROb2RlWydzLXNuJ10pICE9PSBudWxsICYmIF9hICE9PSB2b2lkIDAgPyBfYSA6ICcnKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNoZWNrU2xvdFJlbG9jYXRlID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgICBpZiAocmVjdXJzaXZlKSB7XG4gICAgICAgICAgICBwdXRCYWNrSW5PcmlnaW5hbExvY2F0aW9uKGNoaWxkTm9kZSwgcmVjdXJzaXZlKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBwbHQuJGZsYWdzJCAmPSB+MSAvKiBQTEFURk9STV9GTEFHUy5pc1RtcERpc2Nvbm5lY3RlZCAqLztcbn07XG4vKipcbiAqIENyZWF0ZSBET00gbm9kZXMgY29ycmVzcG9uZGluZyB0byBhIGxpc3Qgb2Yge0BsaW5rIGQuVm5vZGV9IG9iamVjdHMgYW5kXG4gKiBhZGQgdGhlbSB0byB0aGUgRE9NIGluIHRoZSBhcHByb3ByaWF0ZSBwbGFjZS5cbiAqXG4gKiBAcGFyYW0gcGFyZW50RWxtIHRoZSBET00gbm9kZSB3aGljaCBzaG91bGQgYmUgdXNlZCBhcyBhIHBhcmVudCBmb3IgdGhlIG5ld1xuICogRE9NIG5vZGVzXG4gKiBAcGFyYW0gYmVmb3JlIGEgY2hpbGQgb2YgdGhlIGBwYXJlbnRFbG1gIHdoaWNoIHRoZSBuZXcgY2hpbGRyZW4gc2hvdWxkIGJlXG4gKiBpbnNlcnRlZCBiZWZvcmUgKG9wdGlvbmFsKVxuICogQHBhcmFtIHBhcmVudFZOb2RlIHRoZSBwYXJlbnQgdmlydHVhbCBET00gbm9kZVxuICogQHBhcmFtIHZub2RlcyB0aGUgbmV3IGNoaWxkIHZpcnR1YWwgRE9NIG5vZGVzIHRvIHByb2R1Y2UgRE9NIG5vZGVzIGZvclxuICogQHBhcmFtIHN0YXJ0SWR4IHRoZSBpbmRleCBpbiB0aGUgY2hpbGQgdmlydHVhbCBET00gbm9kZXMgYXQgd2hpY2ggdG8gc3RhcnRcbiAqIGNyZWF0aW5nIERPTSBub2RlcyAoaW5jbHVzaXZlKVxuICogQHBhcmFtIGVuZElkeCB0aGUgaW5kZXggaW4gdGhlIGNoaWxkIHZpcnR1YWwgRE9NIG5vZGVzIGF0IHdoaWNoIHRvIHN0b3BcbiAqIGNyZWF0aW5nIERPTSBub2RlcyAoaW5jbHVzaXZlKVxuICovXG5jb25zdCBhZGRWbm9kZXMgPSAocGFyZW50RWxtLCBiZWZvcmUsIHBhcmVudFZOb2RlLCB2bm9kZXMsIHN0YXJ0SWR4LCBlbmRJZHgpID0+IHtcbiAgICBsZXQgY29udGFpbmVyRWxtID0gKChCVUlMRC5zbG90UmVsb2NhdGlvbiAmJiBwYXJlbnRFbG1bJ3MtY3InXSAmJiBwYXJlbnRFbG1bJ3MtY3InXS5wYXJlbnROb2RlKSB8fCBwYXJlbnRFbG0pO1xuICAgIGxldCBjaGlsZE5vZGU7XG4gICAgaWYgKEJVSUxELnNoYWRvd0RvbSAmJiBjb250YWluZXJFbG0uc2hhZG93Um9vdCAmJiBjb250YWluZXJFbG0udGFnTmFtZSA9PT0gaG9zdFRhZ05hbWUpIHtcbiAgICAgICAgY29udGFpbmVyRWxtID0gY29udGFpbmVyRWxtLnNoYWRvd1Jvb3Q7XG4gICAgfVxuICAgIGZvciAoOyBzdGFydElkeCA8PSBlbmRJZHg7ICsrc3RhcnRJZHgpIHtcbiAgICAgICAgaWYgKHZub2Rlc1tzdGFydElkeF0pIHtcbiAgICAgICAgICAgIGNoaWxkTm9kZSA9IGNyZWF0ZUVsbShudWxsLCBwYXJlbnRWTm9kZSwgc3RhcnRJZHgsIHBhcmVudEVsbSk7XG4gICAgICAgICAgICBpZiAoY2hpbGROb2RlKSB7XG4gICAgICAgICAgICAgICAgdm5vZGVzW3N0YXJ0SWR4XS4kZWxtJCA9IGNoaWxkTm9kZTtcbiAgICAgICAgICAgICAgICBjb250YWluZXJFbG0uaW5zZXJ0QmVmb3JlKGNoaWxkTm9kZSwgQlVJTEQuc2xvdFJlbG9jYXRpb24gPyByZWZlcmVuY2VOb2RlKGJlZm9yZSkgOiBiZWZvcmUpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxufTtcbi8qKlxuICogUmVtb3ZlIHRoZSBET00gZWxlbWVudHMgY29ycmVzcG9uZGluZyB0byBhIGxpc3Qgb2Yge0BsaW5rIGQuVk5vZGV9IG9iamVjdHMuXG4gKiBUaGlzIGNhbiBiZSB1c2VkIHRvLCBmb3IgaW5zdGFuY2UsIGNsZWFuIHVwIGFmdGVyIGEgbGlzdCBvZiBjaGlsZHJlbiB3aGljaFxuICogc2hvdWxkIG5vIGxvbmdlciBiZSBzaG93bi5cbiAqXG4gKiBUaGlzIGZ1bmN0aW9uIGFsc28gaGFuZGxlcyBzb21lIG9mIFN0ZW5jaWwncyBzbG90IHJlbG9jYXRpb24gbG9naWMuXG4gKlxuICogQHBhcmFtIHZub2RlcyBhIGxpc3Qgb2YgdmlydHVhbCBET00gbm9kZXMgdG8gcmVtb3ZlXG4gKiBAcGFyYW0gc3RhcnRJZHggdGhlIGluZGV4IGF0IHdoaWNoIHRvIHN0YXJ0IHJlbW92aW5nIG5vZGVzIChpbmNsdXNpdmUpXG4gKiBAcGFyYW0gZW5kSWR4IHRoZSBpbmRleCBhdCB3aGljaCB0byBzdG9wIHJlbW92aW5nIG5vZGVzIChpbmNsdXNpdmUpXG4gKi9cbmNvbnN0IHJlbW92ZVZub2RlcyA9ICh2bm9kZXMsIHN0YXJ0SWR4LCBlbmRJZHgpID0+IHtcbiAgICBmb3IgKGxldCBpbmRleCA9IHN0YXJ0SWR4OyBpbmRleCA8PSBlbmRJZHg7ICsraW5kZXgpIHtcbiAgICAgICAgY29uc3Qgdm5vZGUgPSB2bm9kZXNbaW5kZXhdO1xuICAgICAgICBpZiAodm5vZGUpIHtcbiAgICAgICAgICAgIGNvbnN0IGVsbSA9IHZub2RlLiRlbG0kO1xuICAgICAgICAgICAgbnVsbGlmeVZOb2RlUmVmcyh2bm9kZSk7XG4gICAgICAgICAgICBpZiAoZWxtKSB7XG4gICAgICAgICAgICAgICAgaWYgKEJVSUxELnNsb3RSZWxvY2F0aW9uKSB7XG4gICAgICAgICAgICAgICAgICAgIC8vIHdlJ3JlIHJlbW92aW5nIHRoaXMgZWxlbWVudFxuICAgICAgICAgICAgICAgICAgICAvLyBzbyBpdCdzIHBvc3NpYmxlIHdlIG5lZWQgdG8gc2hvdyBzbG90IGZhbGxiYWNrIGNvbnRlbnQgbm93XG4gICAgICAgICAgICAgICAgICAgIGNoZWNrU2xvdEZhbGxiYWNrVmlzaWJpbGl0eSA9IHRydWU7XG4gICAgICAgICAgICAgICAgICAgIGlmIChlbG1bJ3Mtb2wnXSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8gcmVtb3ZlIHRoZSBvcmlnaW5hbCBsb2NhdGlvbiBjb21tZW50XG4gICAgICAgICAgICAgICAgICAgICAgICBlbG1bJ3Mtb2wnXS5yZW1vdmUoKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIGl0J3MgcG9zc2libGUgdGhhdCBjaGlsZCBub2RlcyBvZiB0aGUgbm9kZVxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gdGhhdCdzIGJlaW5nIHJlbW92ZWQgYXJlIHNsb3Qgbm9kZXNcbiAgICAgICAgICAgICAgICAgICAgICAgIHB1dEJhY2tJbk9yaWdpbmFsTG9jYXRpb24oZWxtLCB0cnVlKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAvLyByZW1vdmUgdGhlIHZub2RlJ3MgZWxlbWVudCBmcm9tIHRoZSBkb21cbiAgICAgICAgICAgICAgICBlbG0ucmVtb3ZlKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG59O1xuLyoqXG4gKiBSZWNvbmNpbGUgdGhlIGNoaWxkcmVuIG9mIGEgbmV3IFZOb2RlIHdpdGggdGhlIGNoaWxkcmVuIG9mIGFuIG9sZCBWTm9kZSBieVxuICogdHJhdmVyc2luZyB0aGUgdHdvIGNvbGxlY3Rpb25zIG9mIGNoaWxkcmVuLCBpZGVudGlmeWluZyBub2RlcyB0aGF0IGFyZVxuICogY29uc2VydmVkIG9yIGNoYW5nZWQsIGNhbGxpbmcgb3V0IHRvIGBwYXRjaGAgdG8gbWFrZSBhbnkgbmVjZXNzYXJ5XG4gKiB1cGRhdGVzIHRvIHRoZSBET00sIGFuZCByZWFycmFuZ2luZyBET00gbm9kZXMgYXMgbmVlZGVkLlxuICpcbiAqIFRoZSBhbGdvcml0aG0gZm9yIHJlY29uY2lsaW5nIGNoaWxkcmVuIHdvcmtzIGJ5IGFuYWx5emluZyB0d28gJ3dpbmRvd3MnIG9udG9cbiAqIHRoZSB0d28gYXJyYXlzIG9mIGNoaWxkcmVuIChgb2xkQ2hgIGFuZCBgbmV3Q2hgKS4gV2Uga2VlcCB0cmFjayBvZiB0aGVcbiAqICd3aW5kb3dzJyBieSBzdG9yaW5nIHN0YXJ0IGFuZCBlbmQgaW5kaWNlcyBhbmQgcmVmZXJlbmNlcyB0byB0aGVcbiAqIGNvcnJlc3BvbmRpbmcgYXJyYXkgZW50cmllcy4gSW5pdGlhbGx5IHRoZSB0d28gJ3dpbmRvd3MnIGFyZSBiYXNpY2FsbHkgZXF1YWxcbiAqIHRvIHRoZSBlbnRpcmUgYXJyYXksIGJ1dCB3ZSBwcm9ncmVzc2l2ZWx5IG5hcnJvdyB0aGUgd2luZG93cyB1bnRpbCB0aGVyZSBhcmVcbiAqIG5vIGNoaWxkcmVuIGxlZnQgdG8gdXBkYXRlIGJ5IGRvaW5nIHRoZSBmb2xsb3dpbmc6XG4gKlxuICogMS4gU2tpcCBhbnkgYG51bGxgIGVudHJpZXMgYXQgdGhlIGJlZ2lubmluZyBvciBlbmQgb2YgdGhlIHR3byBhcnJheXMsIHNvXG4gKiAgICB0aGF0IGlmIHdlIGhhdmUgYW4gaW5pdGlhbCBhcnJheSBsaWtlIHRoZSBmb2xsb3dpbmcgd2UnbGwgZW5kIHVwIGRlYWxpbmdcbiAqICAgIG9ubHkgd2l0aCBhIHdpbmRvdyBib3VuZGVkIGJ5IHRoZSBoaWdobGlnaHRlZCBlbGVtZW50czpcbiAqXG4gKiAgICBbbnVsbCwgbnVsbCwgVk5vZGUxICwgLi4uICwgVk5vZGUyLCBudWxsLCBudWxsXVxuICogICAgICAgICAgICAgICAgIF5eXl5eXiAgICAgICAgIF5eXl5eXlxuICpcbiAqIDIuIENoZWNrIHRvIHNlZSBpZiB0aGUgZWxlbWVudHMgYXQgdGhlIGhlYWQgYW5kIHRhaWwgcG9zaXRpb25zIGFyZSBlcXVhbFxuICogICAgYWNyb3NzIHRoZSB3aW5kb3dzLiBUaGlzIHdpbGwgYmFzaWNhbGx5IGRldGVjdCBlbGVtZW50cyB3aGljaCBoYXZlbid0XG4gKiAgICBiZWVuIGFkZGVkLCByZW1vdmVkLCBvciBjaGFuZ2VkIHBvc2l0aW9uLCBpLmUuIGlmIHlvdSBoYWQgdGhlIGZvbGxvd2luZ1xuICogICAgVk5vZGUgZWxlbWVudHMgKHJlcHJlc2VudGVkIGFzIEhUTUwpOlxuICpcbiAqICAgIG9sZFZOb2RlOiBgPGRpdj48cD48c3Bhbj5IRVk8L3NwYW4+PC9wPjwvZGl2PmBcbiAqICAgIG5ld1ZOb2RlOiBgPGRpdj48cD48c3Bhbj5USEVSRTwvc3Bhbj48L3A+PC9kaXY+YFxuICpcbiAqICAgIFRoZW4gd2hlbiBjb21wYXJpbmcgdGhlIGNoaWxkcmVuIG9mIHRoZSBgPGRpdj5gIHRhZyB3ZSBjaGVjayB0aGUgZXF1YWxpdHlcbiAqICAgIG9mIHRoZSBWTm9kZXMgY29ycmVzcG9uZGluZyB0byB0aGUgYDxwPmAgdGFncyBhbmQsIHNpbmNlIHRoZXkgYXJlIHRoZVxuICogICAgc2FtZSB0YWcgaW4gdGhlIHNhbWUgcG9zaXRpb24sIHdlJ2QgYmUgYWJsZSB0byBhdm9pZCBjb21wbGV0ZWx5XG4gKiAgICByZS1yZW5kZXJpbmcgdGhlIHN1YnRyZWUgdW5kZXIgdGhlbSB3aXRoIGEgbmV3IERPTSBlbGVtZW50IGFuZCB3b3VsZCBqdXN0XG4gKiAgICBjYWxsIG91dCB0byBgcGF0Y2hgIHRvIGhhbmRsZSByZWNvbmNpbGluZyB0aGVpciBjaGlsZHJlbiBhbmQgc28gb24uXG4gKlxuICogMy4gQ2hlY2ssIGZvciBib3RoIHdpbmRvd3MsIHRvIHNlZSBpZiB0aGUgZWxlbWVudCBhdCB0aGUgYmVnaW5uaW5nIG9mIHRoZVxuICogICAgd2luZG93IGNvcnJlc3BvbmRzIHRvIHRoZSBlbGVtZW50IGF0IHRoZSBlbmQgb2YgdGhlIG90aGVyIHdpbmRvdy4gVGhpcyBpc1xuICogICAgYSBoZXVyaXN0aWMgd2hpY2ggd2lsbCBsZXQgdXMgaWRlbnRpZnkgX3NvbWVfIHNpdHVhdGlvbnMgaW4gd2hpY2hcbiAqICAgIGVsZW1lbnRzIGhhdmUgY2hhbmdlZCBwb3NpdGlvbiwgZm9yIGluc3RhbmNlIGl0IF9zaG91bGRfIGRldGVjdCB0aGF0IHRoZVxuICogICAgY2hpbGRyZW4gbm9kZXMgdGhlbXNlbHZlcyBoYXZlIG5vdCBjaGFuZ2VkIGJ1dCBtZXJlbHkgbW92ZWQgaW4gdGhlXG4gKiAgICBmb2xsb3dpbmcgZXhhbXBsZTpcbiAqXG4gKiAgICBvbGRWTm9kZTogYDxkaXY+PGVsZW1lbnQtb25lIC8+PGVsZW1lbnQtdHdvIC8+PC9kaXY+YFxuICogICAgbmV3Vk5vZGU6IGA8ZGl2PjxlbGVtZW50LXR3byAvPjxlbGVtZW50LW9uZSAvPjwvZGl2PmBcbiAqXG4gKiAgICBJZiB3ZSBmaW5kIGNhc2VzIGxpa2UgdGhpcyB0aGVuIHdlIGFsc28gbmVlZCB0byBtb3ZlIHRoZSBjb25jcmV0ZSBET01cbiAqICAgIGVsZW1lbnRzIGNvcnJlc3BvbmRpbmcgdG8gdGhlIG1vdmVkIGNoaWxkcmVuIHRvIHdyaXRlIHRoZSByZS1vcmRlciB0byB0aGVcbiAqICAgIERPTS5cbiAqXG4gKiA0LiBGaW5hbGx5LCBpZiBWTm9kZXMgaGF2ZSB0aGUgYGtleWAgYXR0cmlidXRlIHNldCBvbiB0aGVtIHdlIGNoZWNrIGZvciBhbnlcbiAqICAgIG5vZGVzIGluIHRoZSBvbGQgY2hpbGRyZW4gd2hpY2ggaGF2ZSB0aGUgc2FtZSBrZXkgYXMgdGhlIGZpcnN0IGVsZW1lbnQgaW5cbiAqICAgIG91ciB3aW5kb3cgb24gdGhlIG5ldyBjaGlsZHJlbi4gSWYgd2UgZmluZCBzdWNoIGEgbm9kZSB3ZSBoYW5kbGUgY2FsbGluZ1xuICogICAgb3V0IHRvIGBwYXRjaGAsIG1vdmluZyByZWxldmFudCBET00gbm9kZXMsIGFuZCBzbyBvbiwgaW4gYWNjb3JkYW5jZSB3aXRoXG4gKiAgICB3aGF0IHdlIGZpbmQuXG4gKlxuICogRmluYWxseSwgb25jZSB3ZSd2ZSBuYXJyb3dlZCBvdXIgJ3dpbmRvd3MnIHRvIHRoZSBwb2ludCB0aGF0IGVpdGhlciBvZiB0aGVtXG4gKiBjb2xsYXBzZSAoaS5lLiB0aGV5IGhhdmUgbGVuZ3RoIDApIHdlIHRoZW4gaGFuZGxlIGFueSByZW1haW5pbmcgVk5vZGVcbiAqIGluc2VydGlvbiBvciBkZWxldGlvbiB0aGF0IG5lZWRzIHRvIGhhcHBlbiB0byBnZXQgYSBET00gc3RhdGUgdGhhdCBjb3JyZWN0bHlcbiAqIHJlZmxlY3RzIHRoZSBuZXcgY2hpbGQgVk5vZGVzLiBJZiwgZm9yIGluc3RhbmNlLCBhZnRlciBvdXIgd2luZG93IG9uIHRoZSBvbGRcbiAqIGNoaWxkcmVuIGhhcyBjb2xsYXBzZWQgd2Ugc3RpbGwgaGF2ZSBtb3JlIG5vZGVzIG9uIHRoZSBuZXcgY2hpbGRyZW4gdGhhdFxuICogd2UgaGF2ZW4ndCBkZWFsdCB3aXRoIHlldCB0aGVuIHdlIG5lZWQgdG8gYWRkIHRoZW0sIG9yIGlmIHRoZSBuZXcgY2hpbGRyZW5cbiAqIGNvbGxhcHNlIGJ1dCB3ZSBzdGlsbCBoYXZlIHVuaGFuZGxlZCBfb2xkXyBjaGlsZHJlbiB0aGVuIHdlIG5lZWQgdG8gbWFrZVxuICogc3VyZSB0aGUgY29ycmVzcG9uZGluZyBET00gbm9kZXMgYXJlIHJlbW92ZWQuXG4gKlxuICogQHBhcmFtIHBhcmVudEVsbSB0aGUgbm9kZSBpbnRvIHdoaWNoIHRoZSBwYXJlbnQgVk5vZGUgaXMgcmVuZGVyZWRcbiAqIEBwYXJhbSBvbGRDaCB0aGUgb2xkIGNoaWxkcmVuIG9mIHRoZSBwYXJlbnQgbm9kZVxuICogQHBhcmFtIG5ld1ZOb2RlIHRoZSBuZXcgVk5vZGUgd2hpY2ggd2lsbCByZXBsYWNlIHRoZSBwYXJlbnRcbiAqIEBwYXJhbSBuZXdDaCB0aGUgbmV3IGNoaWxkcmVuIG9mIHRoZSBwYXJlbnQgbm9kZVxuICovXG5jb25zdCB1cGRhdGVDaGlsZHJlbiA9IChwYXJlbnRFbG0sIG9sZENoLCBuZXdWTm9kZSwgbmV3Q2gpID0+IHtcbiAgICBsZXQgb2xkU3RhcnRJZHggPSAwO1xuICAgIGxldCBuZXdTdGFydElkeCA9IDA7XG4gICAgbGV0IGlkeEluT2xkID0gMDtcbiAgICBsZXQgaSA9IDA7XG4gICAgbGV0IG9sZEVuZElkeCA9IG9sZENoLmxlbmd0aCAtIDE7XG4gICAgbGV0IG9sZFN0YXJ0Vm5vZGUgPSBvbGRDaFswXTtcbiAgICBsZXQgb2xkRW5kVm5vZGUgPSBvbGRDaFtvbGRFbmRJZHhdO1xuICAgIGxldCBuZXdFbmRJZHggPSBuZXdDaC5sZW5ndGggLSAxO1xuICAgIGxldCBuZXdTdGFydFZub2RlID0gbmV3Q2hbMF07XG4gICAgbGV0IG5ld0VuZFZub2RlID0gbmV3Q2hbbmV3RW5kSWR4XTtcbiAgICBsZXQgbm9kZTtcbiAgICBsZXQgZWxtVG9Nb3ZlO1xuICAgIHdoaWxlIChvbGRTdGFydElkeCA8PSBvbGRFbmRJZHggJiYgbmV3U3RhcnRJZHggPD0gbmV3RW5kSWR4KSB7XG4gICAgICAgIGlmIChvbGRTdGFydFZub2RlID09IG51bGwpIHtcbiAgICAgICAgICAgIC8vIFZOb2RlIG1pZ2h0IGhhdmUgYmVlbiBtb3ZlZCBsZWZ0XG4gICAgICAgICAgICBvbGRTdGFydFZub2RlID0gb2xkQ2hbKytvbGRTdGFydElkeF07XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAob2xkRW5kVm5vZGUgPT0gbnVsbCkge1xuICAgICAgICAgICAgb2xkRW5kVm5vZGUgPSBvbGRDaFstLW9sZEVuZElkeF07XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAobmV3U3RhcnRWbm9kZSA9PSBudWxsKSB7XG4gICAgICAgICAgICBuZXdTdGFydFZub2RlID0gbmV3Q2hbKytuZXdTdGFydElkeF07XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAobmV3RW5kVm5vZGUgPT0gbnVsbCkge1xuICAgICAgICAgICAgbmV3RW5kVm5vZGUgPSBuZXdDaFstLW5ld0VuZElkeF07XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoaXNTYW1lVm5vZGUob2xkU3RhcnRWbm9kZSwgbmV3U3RhcnRWbm9kZSkpIHtcbiAgICAgICAgICAgIC8vIGlmIHRoZSBzdGFydCBub2RlcyBhcmUgdGhlIHNhbWUgdGhlbiB3ZSBzaG91bGQgcGF0Y2ggdGhlIG5ldyBWTm9kZVxuICAgICAgICAgICAgLy8gb250byB0aGUgb2xkIG9uZSwgYW5kIGluY3JlbWVudCBvdXIgYG5ld1N0YXJ0SWR4YCBhbmQgYG9sZFN0YXJ0SWR4YFxuICAgICAgICAgICAgLy8gaW5kaWNlcyB0byByZWZsZWN0IHRoYXQuIFdlIGRvbid0IG5lZWQgdG8gbW92ZSBhbnkgRE9NIE5vZGVzIGFyb3VuZFxuICAgICAgICAgICAgLy8gc2luY2UgdGhpbmdzIGFyZSBtYXRjaGVkIHVwIGluIG9yZGVyLlxuICAgICAgICAgICAgcGF0Y2gob2xkU3RhcnRWbm9kZSwgbmV3U3RhcnRWbm9kZSk7XG4gICAgICAgICAgICBvbGRTdGFydFZub2RlID0gb2xkQ2hbKytvbGRTdGFydElkeF07XG4gICAgICAgICAgICBuZXdTdGFydFZub2RlID0gbmV3Q2hbKytuZXdTdGFydElkeF07XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoaXNTYW1lVm5vZGUob2xkRW5kVm5vZGUsIG5ld0VuZFZub2RlKSkge1xuICAgICAgICAgICAgLy8gbGlrZXdpc2UsIGlmIHRoZSBlbmQgbm9kZXMgYXJlIHRoZSBzYW1lIHdlIHBhdGNoIG5ldyBvbnRvIG9sZCBhbmRcbiAgICAgICAgICAgIC8vIGRlY3JlbWVudCBvdXIgZW5kIGluZGljZXMsIGFuZCBhbHNvIGxpa2V3aXNlIGluIHRoaXMgY2FzZSB3ZSBkb24ndFxuICAgICAgICAgICAgLy8gbmVlZCB0byBtb3ZlIGFueSBET00gTm9kZXMuXG4gICAgICAgICAgICBwYXRjaChvbGRFbmRWbm9kZSwgbmV3RW5kVm5vZGUpO1xuICAgICAgICAgICAgb2xkRW5kVm5vZGUgPSBvbGRDaFstLW9sZEVuZElkeF07XG4gICAgICAgICAgICBuZXdFbmRWbm9kZSA9IG5ld0NoWy0tbmV3RW5kSWR4XTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChpc1NhbWVWbm9kZShvbGRTdGFydFZub2RlLCBuZXdFbmRWbm9kZSkpIHtcbiAgICAgICAgICAgIC8vIGNhc2U6IFwiVm5vZGUgbW92ZWQgcmlnaHRcIlxuICAgICAgICAgICAgLy9cbiAgICAgICAgICAgIC8vIFdlJ3ZlIGZvdW5kIHRoYXQgdGhlIGxhc3Qgbm9kZSBpbiBvdXIgd2luZG93IG9uIHRoZSBuZXcgY2hpbGRyZW4gaXNcbiAgICAgICAgICAgIC8vIHRoZSBzYW1lIFZOb2RlIGFzIHRoZSBfZmlyc3RfIG5vZGUgaW4gb3VyIHdpbmRvdyBvbiB0aGUgb2xkIGNoaWxkcmVuXG4gICAgICAgICAgICAvLyB3ZSdyZSBkZWFsaW5nIHdpdGggbm93LiBWaXN1YWxseSwgdGhpcyBpcyB0aGUgbGF5b3V0IG9mIHRoZXNlIHR3b1xuICAgICAgICAgICAgLy8gbm9kZXM6XG4gICAgICAgICAgICAvL1xuICAgICAgICAgICAgLy8gbmV3Q2g6IFsuLi4sIG5ld1N0YXJ0Vm5vZGUgLCAuLi4gLCBuZXdFbmRWbm9kZSAsIC4uLl1cbiAgICAgICAgICAgIC8vICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXl5eXl5eXl5eXl5cbiAgICAgICAgICAgIC8vIG9sZENoOiBbLi4uLCBvbGRTdGFydFZub2RlICwgLi4uICwgb2xkRW5kVm5vZGUgLCAuLi5dXG4gICAgICAgICAgICAvLyAgICAgICAgICAgICAgXl5eXl5eXl5eXl5eXlxuICAgICAgICAgICAgLy9cbiAgICAgICAgICAgIC8vIEluIHRoaXMgc2l0dWF0aW9uIHdlIG5lZWQgdG8gcGF0Y2ggYG5ld0VuZFZub2RlYCBvbnRvIGBvbGRTdGFydFZub2RlYFxuICAgICAgICAgICAgLy8gYW5kIG1vdmUgdGhlIERPTSBlbGVtZW50IGZvciBgb2xkU3RhcnRWbm9kZWAuXG4gICAgICAgICAgICBpZiAoQlVJTEQuc2xvdFJlbG9jYXRpb24gJiYgKG9sZFN0YXJ0Vm5vZGUuJHRhZyQgPT09ICdzbG90JyB8fCBuZXdFbmRWbm9kZS4kdGFnJCA9PT0gJ3Nsb3QnKSkge1xuICAgICAgICAgICAgICAgIHB1dEJhY2tJbk9yaWdpbmFsTG9jYXRpb24ob2xkU3RhcnRWbm9kZS4kZWxtJC5wYXJlbnROb2RlLCBmYWxzZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBwYXRjaChvbGRTdGFydFZub2RlLCBuZXdFbmRWbm9kZSk7XG4gICAgICAgICAgICAvLyBXZSBuZWVkIHRvIG1vdmUgdGhlIGVsZW1lbnQgZm9yIGBvbGRTdGFydFZub2RlYCBpbnRvIGEgcG9zaXRpb24gd2hpY2hcbiAgICAgICAgICAgIC8vIHdpbGwgYmUgYXBwcm9wcmlhdGUgZm9yIGBuZXdFbmRWbm9kZWAuIEZvciB0aGlzIHdlIGNhbiB1c2VcbiAgICAgICAgICAgIC8vIGAuaW5zZXJ0QmVmb3JlYCBhbmQgYG9sZEVuZFZub2RlLiRlbG0kLm5leHRTaWJsaW5nYC4gSWYgdGhlcmUgaXMgYVxuICAgICAgICAgICAgLy8gc2libGluZyBmb3IgYG9sZEVuZFZub2RlLiRlbG0kYCB0aGVuIHdlIHdhbnQgdG8gbW92ZSB0aGUgRE9NIG5vZGUgZm9yXG4gICAgICAgICAgICAvLyBgb2xkU3RhcnRWbm9kZWAgYmV0d2VlbiBgb2xkRW5kVm5vZGVgIGFuZCBpdCdzIHNpYmxpbmcsIGxpa2Ugc286XG4gICAgICAgICAgICAvL1xuICAgICAgICAgICAgLy8gPG9sZC1zdGFydC1ub2RlIC8+XG4gICAgICAgICAgICAvLyA8c29tZS1pbnRlcnZlbmluZy1ub2RlIC8+XG4gICAgICAgICAgICAvLyA8b2xkLWVuZC1ub2RlIC8+XG4gICAgICAgICAgICAvLyA8IS0tIC0+ICAgICAgICAgICAgICA8LS0gYG9sZFN0YXJ0Vm5vZGUuJGVsbSRgIHNob3VsZCBiZSBpbnNlcnRlZCBoZXJlXG4gICAgICAgICAgICAvLyA8bmV4dC1zaWJsaW5nIC8+XG4gICAgICAgICAgICAvL1xuICAgICAgICAgICAgLy8gSWYgaW5zdGVhZCBgb2xkRW5kVm5vZGUuJGVsbSRgIGhhcyBubyBzaWJsaW5nIHRoZW4gd2UganVzdCB3YW50IHRvIHB1dFxuICAgICAgICAgICAgLy8gdGhlIG5vZGUgZm9yIGBvbGRTdGFydFZub2RlYCBhdCB0aGUgZW5kIG9mIHRoZSBjaGlsZHJlbiBvZlxuICAgICAgICAgICAgLy8gYHBhcmVudEVsbWAuIEx1Y2tpbHksIGBOb2RlLm5leHRTaWJsaW5nYCB3aWxsIHJldHVybiBgbnVsbGAgaWYgdGhlcmVcbiAgICAgICAgICAgIC8vIGFyZW4ndCBhbnkgc2libGluZ3MsIGFuZCBwYXNzaW5nIGBudWxsYCB0byBgTm9kZS5pbnNlcnRCZWZvcmVgIHdpbGxcbiAgICAgICAgICAgIC8vIGFwcGVuZCBpdCB0byB0aGUgY2hpbGRyZW4gb2YgdGhlIHBhcmVudCBlbGVtZW50LlxuICAgICAgICAgICAgcGFyZW50RWxtLmluc2VydEJlZm9yZShvbGRTdGFydFZub2RlLiRlbG0kLCBvbGRFbmRWbm9kZS4kZWxtJC5uZXh0U2libGluZyk7XG4gICAgICAgICAgICBvbGRTdGFydFZub2RlID0gb2xkQ2hbKytvbGRTdGFydElkeF07XG4gICAgICAgICAgICBuZXdFbmRWbm9kZSA9IG5ld0NoWy0tbmV3RW5kSWR4XTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChpc1NhbWVWbm9kZShvbGRFbmRWbm9kZSwgbmV3U3RhcnRWbm9kZSkpIHtcbiAgICAgICAgICAgIC8vIGNhc2U6IFwiVm5vZGUgbW92ZWQgbGVmdFwiXG4gICAgICAgICAgICAvL1xuICAgICAgICAgICAgLy8gV2UndmUgZm91bmQgdGhhdCB0aGUgZmlyc3Qgbm9kZSBpbiBvdXIgd2luZG93IG9uIHRoZSBuZXcgY2hpbGRyZW4gaXNcbiAgICAgICAgICAgIC8vIHRoZSBzYW1lIFZOb2RlIGFzIHRoZSBfbGFzdF8gbm9kZSBpbiBvdXIgd2luZG93IG9uIHRoZSBvbGQgY2hpbGRyZW4uXG4gICAgICAgICAgICAvLyBWaXN1YWxseSwgdGhpcyBpcyB0aGUgbGF5b3V0IG9mIHRoZXNlIHR3byBub2RlczpcbiAgICAgICAgICAgIC8vXG4gICAgICAgICAgICAvLyBuZXdDaDogWy4uLiwgbmV3U3RhcnRWbm9kZSAsIC4uLiAsIG5ld0VuZFZub2RlICwgLi4uXVxuICAgICAgICAgICAgLy8gICAgICAgICAgICAgIF5eXl5eXl5eXl5eXl5cbiAgICAgICAgICAgIC8vIG9sZENoOiBbLi4uLCBvbGRTdGFydFZub2RlICwgLi4uICwgb2xkRW5kVm5vZGUgLCAuLi5dXG4gICAgICAgICAgICAvLyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF5eXl5eXl5eXl5eXG4gICAgICAgICAgICAvL1xuICAgICAgICAgICAgLy8gSW4gdGhpcyBzaXR1YXRpb24gd2UgbmVlZCB0byBwYXRjaCBgbmV3U3RhcnRWbm9kZWAgb250byBgb2xkRW5kVm5vZGVgXG4gICAgICAgICAgICAvLyAod2hpY2ggd2lsbCBoYW5kbGUgdXBkYXRpbmcgYW55IGNoYW5nZWQgYXR0cmlidXRlcywgcmVjb25jaWxpbmcgdGhlaXJcbiAgICAgICAgICAgIC8vIGNoaWxkcmVuIGV0YykgYnV0IHdlIGFsc28gbmVlZCB0byBtb3ZlIHRoZSBET00gbm9kZSB0byB3aGljaFxuICAgICAgICAgICAgLy8gYG9sZEVuZFZub2RlYCBjb3JyZXNwb25kcy5cbiAgICAgICAgICAgIGlmIChCVUlMRC5zbG90UmVsb2NhdGlvbiAmJiAob2xkU3RhcnRWbm9kZS4kdGFnJCA9PT0gJ3Nsb3QnIHx8IG5ld0VuZFZub2RlLiR0YWckID09PSAnc2xvdCcpKSB7XG4gICAgICAgICAgICAgICAgcHV0QmFja0luT3JpZ2luYWxMb2NhdGlvbihvbGRFbmRWbm9kZS4kZWxtJC5wYXJlbnROb2RlLCBmYWxzZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBwYXRjaChvbGRFbmRWbm9kZSwgbmV3U3RhcnRWbm9kZSk7XG4gICAgICAgICAgICAvLyBXZSd2ZSBhbHJlYWR5IGNoZWNrZWQgYWJvdmUgaWYgYG9sZFN0YXJ0Vm5vZGVgIGFuZCBgbmV3U3RhcnRWbm9kZWAgYXJlXG4gICAgICAgICAgICAvLyB0aGUgc2FtZSBub2RlLCBzbyBzaW5jZSB3ZSdyZSBoZXJlIHdlIGtub3cgdGhhdCB0aGV5IGFyZSBub3QuIFRodXMgd2VcbiAgICAgICAgICAgIC8vIGNhbiBtb3ZlIHRoZSBlbGVtZW50IGZvciBgb2xkRW5kVm5vZGVgIF9iZWZvcmVfIHRoZSBlbGVtZW50IGZvclxuICAgICAgICAgICAgLy8gYG9sZFN0YXJ0Vm5vZGVgLCBsZWF2aW5nIGBvbGRTdGFydFZub2RlYCB0byBiZSByZWNvbmNpbGVkIGluIHRoZVxuICAgICAgICAgICAgLy8gZnV0dXJlLlxuICAgICAgICAgICAgcGFyZW50RWxtLmluc2VydEJlZm9yZShvbGRFbmRWbm9kZS4kZWxtJCwgb2xkU3RhcnRWbm9kZS4kZWxtJCk7XG4gICAgICAgICAgICBvbGRFbmRWbm9kZSA9IG9sZENoWy0tb2xkRW5kSWR4XTtcbiAgICAgICAgICAgIG5ld1N0YXJ0Vm5vZGUgPSBuZXdDaFsrK25ld1N0YXJ0SWR4XTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIC8vIEhlcmUgd2UgZG8gc29tZSBjaGVja3MgdG8gbWF0Y2ggdXAgb2xkIGFuZCBuZXcgbm9kZXMgYmFzZWQgb24gdGhlXG4gICAgICAgICAgICAvLyBgJGtleSRgIGF0dHJpYnV0ZSwgd2hpY2ggaXMgc2V0IGJ5IHB1dHRpbmcgYSBga2V5PVwibXkta2V5XCJgIGF0dHJpYnV0ZVxuICAgICAgICAgICAgLy8gaW4gdGhlIEpTWCBmb3IgYSBET00gZWxlbWVudCBpbiB0aGUgaW1wbGVtZW50YXRpb24gb2YgYSBTdGVuY2lsXG4gICAgICAgICAgICAvLyBjb21wb25lbnQuXG4gICAgICAgICAgICAvL1xuICAgICAgICAgICAgLy8gRmlyc3Qgd2UgY2hlY2sgdG8gc2VlIGlmIHRoZXJlIGFyZSBhbnkgbm9kZXMgaW4gdGhlIGFycmF5IG9mIG9sZFxuICAgICAgICAgICAgLy8gY2hpbGRyZW4gd2hpY2ggaGF2ZSB0aGUgc2FtZSBrZXkgYXMgdGhlIGZpcnN0IG5vZGUgaW4gdGhlIG5ld1xuICAgICAgICAgICAgLy8gY2hpbGRyZW4uXG4gICAgICAgICAgICBpZHhJbk9sZCA9IC0xO1xuICAgICAgICAgICAgaWYgKEJVSUxELnZkb21LZXkpIHtcbiAgICAgICAgICAgICAgICBmb3IgKGkgPSBvbGRTdGFydElkeDsgaSA8PSBvbGRFbmRJZHg7ICsraSkge1xuICAgICAgICAgICAgICAgICAgICBpZiAob2xkQ2hbaV0gJiYgb2xkQ2hbaV0uJGtleSQgIT09IG51bGwgJiYgb2xkQ2hbaV0uJGtleSQgPT09IG5ld1N0YXJ0Vm5vZGUuJGtleSQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlkeEluT2xkID0gaTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKEJVSUxELnZkb21LZXkgJiYgaWR4SW5PbGQgPj0gMCkge1xuICAgICAgICAgICAgICAgIC8vIFdlIGZvdW5kIGEgbm9kZSBpbiB0aGUgb2xkIGNoaWxkcmVuIHdoaWNoIG1hdGNoZXMgdXAgd2l0aCB0aGUgZmlyc3RcbiAgICAgICAgICAgICAgICAvLyBub2RlIGluIHRoZSBuZXcgY2hpbGRyZW4hIFNvIGxldCdzIGRlYWwgd2l0aCB0aGF0XG4gICAgICAgICAgICAgICAgZWxtVG9Nb3ZlID0gb2xkQ2hbaWR4SW5PbGRdO1xuICAgICAgICAgICAgICAgIGlmIChlbG1Ub01vdmUuJHRhZyQgIT09IG5ld1N0YXJ0Vm5vZGUuJHRhZyQpIHtcbiAgICAgICAgICAgICAgICAgICAgLy8gdGhlIHRhZyBkb2Vzbid0IG1hdGNoIHNvIHdlJ2xsIG5lZWQgYSBuZXcgRE9NIGVsZW1lbnRcbiAgICAgICAgICAgICAgICAgICAgbm9kZSA9IGNyZWF0ZUVsbShvbGRDaCAmJiBvbGRDaFtuZXdTdGFydElkeF0sIG5ld1ZOb2RlLCBpZHhJbk9sZCwgcGFyZW50RWxtKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIHBhdGNoKGVsbVRvTW92ZSwgbmV3U3RhcnRWbm9kZSk7XG4gICAgICAgICAgICAgICAgICAgIC8vIGludmFsaWRhdGUgdGhlIG1hdGNoaW5nIG9sZCBub2RlIHNvIHRoYXQgd2Ugd29uJ3QgdHJ5IHRvIHVwZGF0ZSBpdFxuICAgICAgICAgICAgICAgICAgICAvLyBhZ2FpbiBsYXRlciBvblxuICAgICAgICAgICAgICAgICAgICBvbGRDaFtpZHhJbk9sZF0gPSB1bmRlZmluZWQ7XG4gICAgICAgICAgICAgICAgICAgIG5vZGUgPSBlbG1Ub01vdmUuJGVsbSQ7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIG5ld1N0YXJ0Vm5vZGUgPSBuZXdDaFsrK25ld1N0YXJ0SWR4XTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIC8vIFdlIGVpdGhlciBkaWRuJ3QgZmluZCBhbiBlbGVtZW50IGluIHRoZSBvbGQgY2hpbGRyZW4gdGhhdCBtYXRjaGVzXG4gICAgICAgICAgICAgICAgLy8gdGhlIGtleSBvZiB0aGUgZmlyc3QgbmV3IGNoaWxkIE9SIHRoZSBidWlsZCBpcyBub3QgdXNpbmcgYGtleWBcbiAgICAgICAgICAgICAgICAvLyBhdHRyaWJ1dGVzIGF0IGFsbC4gSW4gZWl0aGVyIGNhc2Ugd2UgbmVlZCB0byBjcmVhdGUgYSBuZXcgZWxlbWVudFxuICAgICAgICAgICAgICAgIC8vIGZvciB0aGUgbmV3IG5vZGUuXG4gICAgICAgICAgICAgICAgbm9kZSA9IGNyZWF0ZUVsbShvbGRDaCAmJiBvbGRDaFtuZXdTdGFydElkeF0sIG5ld1ZOb2RlLCBuZXdTdGFydElkeCwgcGFyZW50RWxtKTtcbiAgICAgICAgICAgICAgICBuZXdTdGFydFZub2RlID0gbmV3Q2hbKytuZXdTdGFydElkeF07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAobm9kZSkge1xuICAgICAgICAgICAgICAgIC8vIGlmIHdlIGNyZWF0ZWQgYSBuZXcgbm9kZSB0aGVuIGhhbmRsZSBpbnNlcnRpbmcgaXQgdG8gdGhlIERPTVxuICAgICAgICAgICAgICAgIGlmIChCVUlMRC5zbG90UmVsb2NhdGlvbikge1xuICAgICAgICAgICAgICAgICAgICBwYXJlbnRSZWZlcmVuY2VOb2RlKG9sZFN0YXJ0Vm5vZGUuJGVsbSQpLmluc2VydEJlZm9yZShub2RlLCByZWZlcmVuY2VOb2RlKG9sZFN0YXJ0Vm5vZGUuJGVsbSQpKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIG9sZFN0YXJ0Vm5vZGUuJGVsbSQucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUobm9kZSwgb2xkU3RhcnRWbm9kZS4kZWxtJCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIGlmIChvbGRTdGFydElkeCA+IG9sZEVuZElkeCkge1xuICAgICAgICAvLyB3ZSBoYXZlIHNvbWUgbW9yZSBuZXcgbm9kZXMgdG8gYWRkIHdoaWNoIGRvbid0IG1hdGNoIHVwIHdpdGggb2xkIG5vZGVzXG4gICAgICAgIGFkZFZub2RlcyhwYXJlbnRFbG0sIG5ld0NoW25ld0VuZElkeCArIDFdID09IG51bGwgPyBudWxsIDogbmV3Q2hbbmV3RW5kSWR4ICsgMV0uJGVsbSQsIG5ld1ZOb2RlLCBuZXdDaCwgbmV3U3RhcnRJZHgsIG5ld0VuZElkeCk7XG4gICAgfVxuICAgIGVsc2UgaWYgKEJVSUxELnVwZGF0YWJsZSAmJiBuZXdTdGFydElkeCA+IG5ld0VuZElkeCkge1xuICAgICAgICAvLyB0aGVyZSBhcmUgbm9kZXMgaW4gdGhlIGBvbGRDaGAgYXJyYXkgd2hpY2ggbm8gbG9uZ2VyIGNvcnJlc3BvbmQgdG8gbm9kZXNcbiAgICAgICAgLy8gaW4gdGhlIG5ldyBhcnJheSwgc28gbGV0cyByZW1vdmUgdGhlbSAod2hpY2ggZW50YWlscyBjbGVhbmluZyB1cCB0aGVcbiAgICAgICAgLy8gcmVsZXZhbnQgRE9NIG5vZGVzKVxuICAgICAgICByZW1vdmVWbm9kZXMob2xkQ2gsIG9sZFN0YXJ0SWR4LCBvbGRFbmRJZHgpO1xuICAgIH1cbn07XG4vKipcbiAqIENvbXBhcmUgdHdvIFZOb2RlcyB0byBkZXRlcm1pbmUgaWYgdGhleSBhcmUgdGhlIHNhbWVcbiAqXG4gKiAqKk5CKio6IFRoaXMgZnVuY3Rpb24gaXMgYW4gZXF1YWxpdHkgX2hldXJpc3RpY18gYmFzZWQgb24gdGhlIGF2YWlsYWJsZVxuICogaW5mb3JtYXRpb24gc2V0IG9uIHRoZSB0d28gVk5vZGVzIGFuZCBjYW4gYmUgbWlzbGVhZGluZyB1bmRlciBjZXJ0YWluXG4gKiBjaXJjdW1zdGFuY2VzLiBJbiBwYXJ0aWN1bGFyLCBpZiB0aGUgdHdvIG5vZGVzIGRvIG5vdCBoYXZlIGBrZXlgIGF0dHJzXG4gKiAoYXZhaWxhYmxlIHVuZGVyIGAka2V5JGAgb24gVk5vZGVzKSB0aGVuIHRoZSBmdW5jdGlvbiBmYWxscyBiYWNrIG9uIG1lcmVseVxuICogY2hlY2tpbmcgdGhhdCB0aGV5IGhhdmUgdGhlIHNhbWUgdGFnLlxuICpcbiAqIFNvLCBpbiBvdGhlciB3b3JkcywgaWYgYGtleWAgYXR0cnMgYXJlIG5vdCBzZXQgb24gVk5vZGVzIHdoaWNoIG1heSBiZVxuICogY2hhbmdpbmcgb3JkZXIgd2l0aGluIGEgYGNoaWxkcmVuYCBhcnJheSBvciBzb21ldGhpbmcgYWxvbmcgdGhvc2UgbGluZXMgdGhlblxuICogd2UgY291bGQgb2J0YWluIGEgZmFsc2UgbmVnYXRpdmUgYW5kIHRoZW4gaGF2ZSB0byBkbyBuZWVkbGVzcyByZS1yZW5kZXJpbmdcbiAqIChpLmUuIHdlJ2Qgc2F5IHR3byBWTm9kZXMgYXJlbid0IGVxdWFsIHdoZW4gaW4gZmFjdCB0aGV5IHNob3VsZCBiZSkuXG4gKlxuICogQHBhcmFtIGxlZnRWTm9kZSB0aGUgZmlyc3QgVk5vZGUgdG8gY2hlY2tcbiAqIEBwYXJhbSByaWdodFZOb2RlIHRoZSBzZWNvbmQgVk5vZGUgdG8gY2hlY2tcbiAqIEByZXR1cm5zIHdoZXRoZXIgdGhleSdyZSBlcXVhbCBvciBub3RcbiAqL1xuY29uc3QgaXNTYW1lVm5vZGUgPSAobGVmdFZOb2RlLCByaWdodFZOb2RlKSA9PiB7XG4gICAgLy8gY29tcGFyZSBpZiB0d28gdm5vZGUgdG8gc2VlIGlmIHRoZXkncmUgXCJ0ZWNobmljYWxseVwiIHRoZSBzYW1lXG4gICAgLy8gbmVlZCB0byBoYXZlIHRoZSBzYW1lIGVsZW1lbnQgdGFnLCBhbmQgc2FtZSBrZXkgdG8gYmUgdGhlIHNhbWVcbiAgICBpZiAobGVmdFZOb2RlLiR0YWckID09PSByaWdodFZOb2RlLiR0YWckKSB7XG4gICAgICAgIGlmIChCVUlMRC5zbG90UmVsb2NhdGlvbiAmJiBsZWZ0Vk5vZGUuJHRhZyQgPT09ICdzbG90Jykge1xuICAgICAgICAgICAgcmV0dXJuIGxlZnRWTm9kZS4kbmFtZSQgPT09IHJpZ2h0Vk5vZGUuJG5hbWUkO1xuICAgICAgICB9XG4gICAgICAgIC8vIHRoaXMgd2lsbCBiZSBzZXQgaWYgY29tcG9uZW50cyBpbiB0aGUgYnVpbGQgaGF2ZSBga2V5YCBhdHRycyBzZXQgb24gdGhlbVxuICAgICAgICBpZiAoQlVJTEQudmRvbUtleSkge1xuICAgICAgICAgICAgcmV0dXJuIGxlZnRWTm9kZS4ka2V5JCA9PT0gcmlnaHRWTm9kZS4ka2V5JDtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gICAgcmV0dXJuIGZhbHNlO1xufTtcbmNvbnN0IHJlZmVyZW5jZU5vZGUgPSAobm9kZSkgPT4ge1xuICAgIC8vIHRoaXMgbm9kZSB3YXMgcmVsb2NhdGVkIHRvIGEgbmV3IGxvY2F0aW9uIGluIHRoZSBkb21cbiAgICAvLyBiZWNhdXNlIG9mIHNvbWUgb3RoZXIgY29tcG9uZW50J3Mgc2xvdFxuICAgIC8vIGJ1dCB3ZSBzdGlsbCBoYXZlIGFuIGh0bWwgY29tbWVudCBpbiBwbGFjZSBvZiB3aGVyZVxuICAgIC8vIGl0J3Mgb3JpZ2luYWwgbG9jYXRpb24gd2FzIGFjY29yZGluZyB0byBpdCdzIG9yaWdpbmFsIHZkb21cbiAgICByZXR1cm4gKG5vZGUgJiYgbm9kZVsncy1vbCddKSB8fCBub2RlO1xufTtcbmNvbnN0IHBhcmVudFJlZmVyZW5jZU5vZGUgPSAobm9kZSkgPT4gKG5vZGVbJ3Mtb2wnXSA/IG5vZGVbJ3Mtb2wnXSA6IG5vZGUpLnBhcmVudE5vZGU7XG4vKipcbiAqIEhhbmRsZSByZWNvbmNpbGluZyBhbiBvdXRkYXRlZCBWTm9kZSB3aXRoIGEgbmV3IG9uZSB3aGljaCBjb3JyZXNwb25kcyB0b1xuICogaXQuIFRoaXMgZnVuY3Rpb24gaGFuZGxlcyBmbHVzaGluZyB1cGRhdGVzIHRvIHRoZSBET00gYW5kIHJlY29uY2lsaW5nIHRoZVxuICogY2hpbGRyZW4gb2YgdGhlIHR3byBub2RlcyAoaWYgYW55KS5cbiAqXG4gKiBAcGFyYW0gb2xkVk5vZGUgYW4gb2xkIFZOb2RlIHdob3NlIERPTSBlbGVtZW50IGFuZCBjaGlsZHJlbiB3ZSB3YW50IHRvIHVwZGF0ZVxuICogQHBhcmFtIG5ld1ZOb2RlIGEgbmV3IFZOb2RlIHJlcHJlc2VudGluZyBhbiB1cGRhdGVkIHZlcnNpb24gb2YgdGhlIG9sZCBvbmVcbiAqL1xuY29uc3QgcGF0Y2ggPSAob2xkVk5vZGUsIG5ld1ZOb2RlKSA9PiB7XG4gICAgY29uc3QgZWxtID0gKG5ld1ZOb2RlLiRlbG0kID0gb2xkVk5vZGUuJGVsbSQpO1xuICAgIGNvbnN0IG9sZENoaWxkcmVuID0gb2xkVk5vZGUuJGNoaWxkcmVuJDtcbiAgICBjb25zdCBuZXdDaGlsZHJlbiA9IG5ld1ZOb2RlLiRjaGlsZHJlbiQ7XG4gICAgY29uc3QgdGFnID0gbmV3Vk5vZGUuJHRhZyQ7XG4gICAgY29uc3QgdGV4dCA9IG5ld1ZOb2RlLiR0ZXh0JDtcbiAgICBsZXQgZGVmYXVsdEhvbGRlcjtcbiAgICBpZiAoIUJVSUxELnZkb21UZXh0IHx8IHRleHQgPT09IG51bGwpIHtcbiAgICAgICAgaWYgKEJVSUxELnN2Zykge1xuICAgICAgICAgICAgLy8gdGVzdCBpZiB3ZSdyZSByZW5kZXJpbmcgYW4gc3ZnIGVsZW1lbnQsIG9yIHN0aWxsIHJlbmRlcmluZyBub2RlcyBpbnNpZGUgb2Ygb25lXG4gICAgICAgICAgICAvLyBvbmx5IGFkZCB0aGlzIHRvIHRoZSB3aGVuIHRoZSBjb21waWxlciBzZWVzIHdlJ3JlIHVzaW5nIGFuIHN2ZyBzb21ld2hlcmVcbiAgICAgICAgICAgIGlzU3ZnTW9kZSA9IHRhZyA9PT0gJ3N2ZycgPyB0cnVlIDogdGFnID09PSAnZm9yZWlnbk9iamVjdCcgPyBmYWxzZSA6IGlzU3ZnTW9kZTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoQlVJTEQudmRvbUF0dHJpYnV0ZSB8fCBCVUlMRC5yZWZsZWN0KSB7XG4gICAgICAgICAgICBpZiAoQlVJTEQuc2xvdCAmJiB0YWcgPT09ICdzbG90JylcbiAgICAgICAgICAgICAgICA7XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAvLyBlaXRoZXIgdGhpcyBpcyB0aGUgZmlyc3QgcmVuZGVyIG9mIGFuIGVsZW1lbnQgT1IgaXQncyBhbiB1cGRhdGVcbiAgICAgICAgICAgICAgICAvLyBBTkQgd2UgYWxyZWFkeSBrbm93IGl0J3MgcG9zc2libGUgaXQgY291bGQgaGF2ZSBjaGFuZ2VkXG4gICAgICAgICAgICAgICAgLy8gdGhpcyB1cGRhdGVzIHRoZSBlbGVtZW50J3MgY3NzIGNsYXNzZXMsIGF0dHJzLCBwcm9wcywgbGlzdGVuZXJzLCBldGMuXG4gICAgICAgICAgICAgICAgdXBkYXRlRWxlbWVudChvbGRWTm9kZSwgbmV3Vk5vZGUsIGlzU3ZnTW9kZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgaWYgKEJVSUxELnVwZGF0YWJsZSAmJiBvbGRDaGlsZHJlbiAhPT0gbnVsbCAmJiBuZXdDaGlsZHJlbiAhPT0gbnVsbCkge1xuICAgICAgICAgICAgLy8gbG9va3MgbGlrZSB0aGVyZSdzIGNoaWxkIHZub2RlcyBmb3IgYm90aCB0aGUgb2xkIGFuZCBuZXcgdm5vZGVzXG4gICAgICAgICAgICAvLyBzbyB3ZSBuZWVkIHRvIGNhbGwgYHVwZGF0ZUNoaWxkcmVuYCB0byByZWNvbmNpbGUgdGhlbVxuICAgICAgICAgICAgdXBkYXRlQ2hpbGRyZW4oZWxtLCBvbGRDaGlsZHJlbiwgbmV3Vk5vZGUsIG5ld0NoaWxkcmVuKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChuZXdDaGlsZHJlbiAhPT0gbnVsbCkge1xuICAgICAgICAgICAgLy8gbm8gb2xkIGNoaWxkIHZub2RlcywgYnV0IHRoZXJlIGFyZSBuZXcgY2hpbGQgdm5vZGVzIHRvIGFkZFxuICAgICAgICAgICAgaWYgKEJVSUxELnVwZGF0YWJsZSAmJiBCVUlMRC52ZG9tVGV4dCAmJiBvbGRWTm9kZS4kdGV4dCQgIT09IG51bGwpIHtcbiAgICAgICAgICAgICAgICAvLyB0aGUgb2xkIHZub2RlIHdhcyB0ZXh0LCBzbyBiZSBzdXJlIHRvIGNsZWFyIGl0IG91dFxuICAgICAgICAgICAgICAgIGVsbS50ZXh0Q29udGVudCA9ICcnO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLy8gYWRkIHRoZSBuZXcgdm5vZGUgY2hpbGRyZW5cbiAgICAgICAgICAgIGFkZFZub2RlcyhlbG0sIG51bGwsIG5ld1ZOb2RlLCBuZXdDaGlsZHJlbiwgMCwgbmV3Q2hpbGRyZW4ubGVuZ3RoIC0gMSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoQlVJTEQudXBkYXRhYmxlICYmIG9sZENoaWxkcmVuICE9PSBudWxsKSB7XG4gICAgICAgICAgICAvLyBubyBuZXcgY2hpbGQgdm5vZGVzLCBidXQgdGhlcmUgYXJlIG9sZCBjaGlsZCB2bm9kZXMgdG8gcmVtb3ZlXG4gICAgICAgICAgICByZW1vdmVWbm9kZXMob2xkQ2hpbGRyZW4sIDAsIG9sZENoaWxkcmVuLmxlbmd0aCAtIDEpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChCVUlMRC5zdmcgJiYgaXNTdmdNb2RlICYmIHRhZyA9PT0gJ3N2ZycpIHtcbiAgICAgICAgICAgIGlzU3ZnTW9kZSA9IGZhbHNlO1xuICAgICAgICB9XG4gICAgfVxuICAgIGVsc2UgaWYgKEJVSUxELnZkb21UZXh0ICYmIEJVSUxELnNsb3RSZWxvY2F0aW9uICYmIChkZWZhdWx0SG9sZGVyID0gZWxtWydzLWNyJ10pKSB7XG4gICAgICAgIC8vIHRoaXMgZWxlbWVudCBoYXMgc2xvdHRlZCBjb250ZW50XG4gICAgICAgIGRlZmF1bHRIb2xkZXIucGFyZW50Tm9kZS50ZXh0Q29udGVudCA9IHRleHQ7XG4gICAgfVxuICAgIGVsc2UgaWYgKEJVSUxELnZkb21UZXh0ICYmIG9sZFZOb2RlLiR0ZXh0JCAhPT0gdGV4dCkge1xuICAgICAgICAvLyB1cGRhdGUgdGhlIHRleHQgY29udGVudCBmb3IgdGhlIHRleHQgb25seSB2bm9kZVxuICAgICAgICAvLyBhbmQgYWxzbyBvbmx5IGlmIHRoZSB0ZXh0IGlzIGRpZmZlcmVudCB0aGFuIGJlZm9yZVxuICAgICAgICBlbG0uZGF0YSA9IHRleHQ7XG4gICAgfVxufTtcbi8qKlxuICogQWRqdXN0IHRoZSBgLmhpZGRlbmAgcHJvcGVydHkgYXMtbmVlZGVkIG9uIGFueSBub2RlcyBpbiBhIERPTSBzdWJ0cmVlIHdoaWNoXG4gKiBhcmUgc2xvdCBmYWxsYmFja3Mgbm9kZXMuXG4gKlxuICogQSBzbG90IGZhbGxiYWNrIG5vZGUgc2hvdWxkIGJlIHZpc2libGUgYnkgZGVmYXVsdC4gVGhlbiwgaXQgc2hvdWxkIGJlXG4gKiBjb25kaXRpb25hbGx5IGhpZGRlbiBpZjpcbiAqXG4gKiAtIGl0IGhhcyBhIHNpYmxpbmcgd2l0aCBhIGBzbG90YCBwcm9wZXJ0eSBzZXQgdG8gaXRzIHNsb3QgbmFtZSBvciBpZlxuICogLSBpdCBpcyBhIGRlZmF1bHQgZmFsbGJhY2sgc2xvdCBub2RlLCBpbiB3aGljaCBjYXNlIHdlIGhpZGUgaWYgaXQgaGFzIGFueVxuICogICBjb250ZW50XG4gKlxuICogQHBhcmFtIGVsbSB0aGUgZWxlbWVudCBvZiBpbnRlcmVzdFxuICovXG5jb25zdCB1cGRhdGVGYWxsYmFja1Nsb3RWaXNpYmlsaXR5ID0gKGVsbSkgPT4ge1xuICAgIGNvbnN0IGNoaWxkTm9kZXMgPSBlbG0uY2hpbGROb2RlcztcbiAgICBmb3IgKGNvbnN0IGNoaWxkTm9kZSBvZiBjaGlsZE5vZGVzKSB7XG4gICAgICAgIGlmIChjaGlsZE5vZGUubm9kZVR5cGUgPT09IDEgLyogTk9ERV9UWVBFLkVsZW1lbnROb2RlICovKSB7XG4gICAgICAgICAgICBpZiAoY2hpbGROb2RlWydzLXNyJ10pIHtcbiAgICAgICAgICAgICAgICAvLyB0aGlzIGlzIGEgc2xvdCBmYWxsYmFjayBub2RlXG4gICAgICAgICAgICAgICAgLy8gZ2V0IHRoZSBzbG90IG5hbWUgZm9yIHRoaXMgc2xvdCByZWZlcmVuY2Ugbm9kZVxuICAgICAgICAgICAgICAgIGNvbnN0IHNsb3ROYW1lID0gY2hpbGROb2RlWydzLXNuJ107XG4gICAgICAgICAgICAgICAgLy8gYnkgZGVmYXVsdCBhbHdheXMgc2hvdyBhIGZhbGxiYWNrIHNsb3Qgbm9kZVxuICAgICAgICAgICAgICAgIC8vIHRoZW4gaGlkZSBpdCBpZiB0aGVyZSBhcmUgb3RoZXIgc2xvdHMgaW4gdGhlIGxpZ2h0IGRvbVxuICAgICAgICAgICAgICAgIGNoaWxkTm9kZS5oaWRkZW4gPSBmYWxzZTtcbiAgICAgICAgICAgICAgICAvLyB3ZSBuZWVkIHRvIGNoZWNrIGFsbCBvZiBpdHMgc2libGluZyBub2RlcyBpbiBvcmRlciB0byBzZWUgaWZcbiAgICAgICAgICAgICAgICAvLyBgY2hpbGROb2RlYCBzaG91bGQgYmUgaGlkZGVuXG4gICAgICAgICAgICAgICAgZm9yIChjb25zdCBzaWJsaW5nTm9kZSBvZiBjaGlsZE5vZGVzKSB7XG4gICAgICAgICAgICAgICAgICAgIC8vIERvbid0IGNoZWNrIHRoZSBub2RlIGFnYWluc3QgaXRzZWxmXG4gICAgICAgICAgICAgICAgICAgIGlmIChzaWJsaW5nTm9kZSAhPT0gY2hpbGROb2RlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoc2libGluZ05vZGVbJ3MtaG4nXSAhPT0gY2hpbGROb2RlWydzLWhuJ10gfHwgc2xvdE5hbWUgIT09ICcnKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gdGhpcyBzaWJsaW5nIG5vZGUgaXMgZnJvbSBhIGRpZmZlcmVudCBjb21wb25lbnQgT1IgaXMgYSBuYW1lZFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIGZhbGxiYWNrIHNsb3Qgbm9kZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChzaWJsaW5nTm9kZS5ub2RlVHlwZSA9PT0gMSAvKiBOT0RFX1RZUEUuRWxlbWVudE5vZGUgKi8gJiZcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKHNsb3ROYW1lID09PSBzaWJsaW5nTm9kZS5nZXRBdHRyaWJ1dGUoJ3Nsb3QnKSB8fCBzbG90TmFtZSA9PT0gc2libGluZ05vZGVbJ3Mtc24nXSkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2hpbGROb2RlLmhpZGRlbiA9IHRydWU7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIHRoaXMgaXMgYSBkZWZhdWx0IGZhbGxiYWNrIHNsb3Qgbm9kZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIGFueSBlbGVtZW50IG9yIHRleHQgbm9kZSAod2l0aCBjb250ZW50KVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIHNob3VsZCBoaWRlIHRoZSBkZWZhdWx0IGZhbGxiYWNrIHNsb3Qgbm9kZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChzaWJsaW5nTm9kZS5ub2RlVHlwZSA9PT0gMSAvKiBOT0RFX1RZUEUuRWxlbWVudE5vZGUgKi8gfHxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKHNpYmxpbmdOb2RlLm5vZGVUeXBlID09PSAzIC8qIE5PREVfVFlQRS5UZXh0Tm9kZSAqLyAmJiBzaWJsaW5nTm9kZS50ZXh0Q29udGVudC50cmltKCkgIT09ICcnKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjaGlsZE5vZGUuaGlkZGVuID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLy8ga2VlcCBkcmlsbGluZyBkb3duXG4gICAgICAgICAgICB1cGRhdGVGYWxsYmFja1Nsb3RWaXNpYmlsaXR5KGNoaWxkTm9kZSk7XG4gICAgICAgIH1cbiAgICB9XG59O1xuLyoqXG4gKiBDb21wb25lbnQtZ2xvYmFsIGluZm9ybWF0aW9uIGFib3V0IG5vZGVzIHdoaWNoIGFyZSBlaXRoZXIgY3VycmVudGx5IGJlaW5nXG4gKiByZWxvY2F0ZWQgb3Igd2lsbCBiZSBzaG9ydGx5LlxuICovXG5jb25zdCByZWxvY2F0ZU5vZGVzID0gW107XG4vKipcbiAqIE1hcmsgdGhlIGNvbnRlbnRzIG9mIGEgc2xvdCBmb3IgcmVsb2NhdGlvbiB2aWEgYWRkaW5nIHJlZmVyZW5jZXMgdG8gdGhlbSB0b1xuICogdGhlIHtAbGluayByZWxvY2F0ZU5vZGVzfSBkYXRhIHN0cnVjdHVyZS4gVGhlIGFjdHVhbCB3b3JrIG9mIHJlbG9jYXRpbmcgdGhlbVxuICogd2lsbCB0aGVuIGJlIGhhbmRsZWQgaW4ge0BsaW5rIHJlbmRlclZkb219LlxuICpcbiAqIEBwYXJhbSBlbG0gYSByZW5kZXIgbm9kZSB3aG9zZSBjaGlsZCBub2RlcyBuZWVkIHRvIGJlIHJlbG9jYXRlZFxuICovXG5jb25zdCBtYXJrU2xvdENvbnRlbnRGb3JSZWxvY2F0aW9uID0gKGVsbSkgPT4ge1xuICAgIC8vIHRzbGludDpkaXNhYmxlLW5leHQtbGluZTogcHJlZmVyLWNvbnN0XG4gICAgbGV0IG5vZGU7XG4gICAgbGV0IGhvc3RDb250ZW50Tm9kZXM7XG4gICAgbGV0IGo7XG4gICAgZm9yIChjb25zdCBjaGlsZE5vZGUgb2YgZWxtLmNoaWxkTm9kZXMpIHtcbiAgICAgICAgLy8gd2UgbmVlZCB0byBmaW5kIGNoaWxkIG5vZGVzIHdoaWNoIGFyZSBzbG90IHJlZmVyZW5jZXMgc28gd2UgY2FuIHRoZW4gdHJ5XG4gICAgICAgIC8vIHRvIG1hdGNoIHRoZW0gdXAgd2l0aCBub2RlcyB0aGF0IG5lZWQgdG8gYmUgcmVsb2NhdGVkXG4gICAgICAgIGlmIChjaGlsZE5vZGVbJ3Mtc3InXSAmJiAobm9kZSA9IGNoaWxkTm9kZVsncy1jciddKSAmJiBub2RlLnBhcmVudE5vZGUpIHtcbiAgICAgICAgICAgIC8vIGZpcnN0IGdldCB0aGUgY29udGVudCByZWZlcmVuY2UgY29tbWVudCBub2RlICgncy1jcicpLCB0aGVuIHdlIGdldFxuICAgICAgICAgICAgLy8gaXRzIHBhcmVudCwgd2hpY2ggaXMgd2hlcmUgYWxsIHRoZSBob3N0IGNvbnRlbnQgaXMgbm93XG4gICAgICAgICAgICBob3N0Q29udGVudE5vZGVzID0gbm9kZS5wYXJlbnROb2RlLmNoaWxkTm9kZXM7XG4gICAgICAgICAgICBjb25zdCBzbG90TmFtZSA9IGNoaWxkTm9kZVsncy1zbiddO1xuICAgICAgICAgICAgLy8gaXRlcmF0ZSB0aHJvdWdoIGFsbCB0aGUgbm9kZXMgdW5kZXIgdGhlIGxvY2F0aW9uIHdoZXJlIHRoZSBob3N0IHdhc1xuICAgICAgICAgICAgLy8gb3JpZ2luYWxseSByZW5kZXJlZFxuICAgICAgICAgICAgZm9yIChqID0gaG9zdENvbnRlbnROb2Rlcy5sZW5ndGggLSAxOyBqID49IDA7IGotLSkge1xuICAgICAgICAgICAgICAgIG5vZGUgPSBob3N0Q29udGVudE5vZGVzW2pdO1xuICAgICAgICAgICAgICAgIC8vIGNoZWNrIHRoYXQgdGhlIG5vZGUgaXMgbm90IGEgY29udGVudCByZWZlcmVuY2Ugbm9kZSBvciBhIG5vZGVcbiAgICAgICAgICAgICAgICAvLyByZWZlcmVuY2UgYW5kIHRoZW4gY2hlY2sgdGhhdCB0aGUgaG9zdCBuYW1lIGRvZXMgbm90IG1hdGNoIHRoYXQgb2ZcbiAgICAgICAgICAgICAgICAvLyBjaGlsZE5vZGUuXG4gICAgICAgICAgICAgICAgLy8gSW4gYWRkaXRpb24sIGNoZWNrIHRoYXQgdGhlIHNsb3QgZWl0aGVyIGhhcyBub3QgYWxyZWFkeSBiZWVuIHJlbG9jYXRlZCwgb3JcbiAgICAgICAgICAgICAgICAvLyB0aGF0IGl0cyBjdXJyZW50IGxvY2F0aW9uJ3MgaG9zdCBpcyBub3QgY2hpbGROb2RlJ3MgaG9zdC4gVGhpcyBpcyBlc3NlbnRpYWxseVxuICAgICAgICAgICAgICAgIC8vIGEgY2hlY2sgc28gdGhhdCB3ZSBkb24ndCB0cnkgdG8gcmVsb2NhdGUgKGFuZCB0aGVuIGhpZGUpIGEgbm9kZSB0aGF0IGlzIGFscmVhZHlcbiAgICAgICAgICAgICAgICAvLyB3aGVyZSBpdCBzaG91bGQgYmUuXG4gICAgICAgICAgICAgICAgaWYgKCFub2RlWydzLWNuJ10gJiZcbiAgICAgICAgICAgICAgICAgICAgIW5vZGVbJ3MtbnInXSAmJlxuICAgICAgICAgICAgICAgICAgICBub2RlWydzLWhuJ10gIT09IGNoaWxkTm9kZVsncy1obiddICYmXG4gICAgICAgICAgICAgICAgICAgICghQlVJTEQuZXhwZXJpbWVudGFsU2xvdEZpeGVzIHx8ICFub2RlWydzLXNoJ10gfHwgbm9kZVsncy1zaCddICE9PSBjaGlsZE5vZGVbJ3MtaG4nXSkpIHtcbiAgICAgICAgICAgICAgICAgICAgLy8gaWYgYG5vZGVgIGlzIGxvY2F0ZWQgaW4gdGhlIHNsb3QgdGhhdCBgY2hpbGROb2RlYCByZWZlcnMgdG8gKHZpYSB0aGVcbiAgICAgICAgICAgICAgICAgICAgLy8gYCdzLXNuJ2AgcHJvcGVydHkpIHRoZW4gd2UgbmVlZCB0byByZWxvY2F0ZSBpdCBmcm9tIGl0J3MgY3VycmVudCBzcG90XG4gICAgICAgICAgICAgICAgICAgIC8vICh1bmRlciB0aGUgaG9zdCBlbGVtZW50IHBhcmVudCkgdG8gdGhlIHJpZ2h0IHNsb3QgbG9jYXRpb25cbiAgICAgICAgICAgICAgICAgICAgaWYgKGlzTm9kZUxvY2F0ZWRJblNsb3Qobm9kZSwgc2xvdE5hbWUpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBpdCdzIHBvc3NpYmxlIHdlJ3ZlIGFscmVhZHkgZGVjaWRlZCB0byByZWxvY2F0ZSB0aGlzIG5vZGVcbiAgICAgICAgICAgICAgICAgICAgICAgIGxldCByZWxvY2F0ZU5vZGVEYXRhID0gcmVsb2NhdGVOb2Rlcy5maW5kKChyKSA9PiByLiRub2RlVG9SZWxvY2F0ZSQgPT09IG5vZGUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8gbWFkZSBzb21lIGNoYW5nZXMgdG8gc2xvdHNcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIGxldCdzIG1ha2Ugc3VyZSB3ZSBhbHNvIGRvdWJsZSBjaGVja1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8gZmFsbGJhY2tzIGFyZSBjb3JyZWN0bHkgaGlkZGVuIG9yIHNob3duXG4gICAgICAgICAgICAgICAgICAgICAgICBjaGVja1Nsb3RGYWxsYmFja1Zpc2liaWxpdHkgPSB0cnVlO1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8gZW5zdXJlIHRoYXQgdGhlIHNsb3QtbmFtZSBhdHRyIGlzIGNvcnJlY3RcbiAgICAgICAgICAgICAgICAgICAgICAgIG5vZGVbJ3Mtc24nXSA9IG5vZGVbJ3Mtc24nXSB8fCBzbG90TmFtZTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChyZWxvY2F0ZU5vZGVEYXRhKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVsb2NhdGVOb2RlRGF0YS4kbm9kZVRvUmVsb2NhdGUkWydzLXNoJ10gPSBjaGlsZE5vZGVbJ3MtaG4nXTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyB3ZSBtYXJrZWQgdGhpcyBub2RlIGZvciByZWxvY2F0aW9uIHByZXZpb3VzbHkgYnV0IGRpZG4ndCBmaW5kXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gb3V0IHRoZSBzbG90IHJlZmVyZW5jZSBub2RlIHRvIHdoaWNoIGl0IG5lZWRzIHRvIGJlIHJlbG9jYXRlZFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIHNvIHdyaXRlIGl0IGRvd24gbm93IVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlbG9jYXRlTm9kZURhdGEuJHNsb3RSZWZOb2RlJCA9IGNoaWxkTm9kZTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5vZGVbJ3Mtc2gnXSA9IGNoaWxkTm9kZVsncy1obiddO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIGFkZCB0byBvdXIgbGlzdCBvZiBub2RlcyB0byByZWxvY2F0ZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlbG9jYXRlTm9kZXMucHVzaCh7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRzbG90UmVmTm9kZSQ6IGNoaWxkTm9kZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJG5vZGVUb1JlbG9jYXRlJDogbm9kZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChub2RlWydzLXNyJ10pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWxvY2F0ZU5vZGVzLm1hcCgocmVsb2NhdGVOb2RlKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChpc05vZGVMb2NhdGVkSW5TbG90KHJlbG9jYXRlTm9kZS4kbm9kZVRvUmVsb2NhdGUkLCBub2RlWydzLXNuJ10pKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWxvY2F0ZU5vZGVEYXRhID0gcmVsb2NhdGVOb2Rlcy5maW5kKChyKSA9PiByLiRub2RlVG9SZWxvY2F0ZSQgPT09IG5vZGUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHJlbG9jYXRlTm9kZURhdGEgJiYgIXJlbG9jYXRlTm9kZS4kc2xvdFJlZk5vZGUkKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVsb2NhdGVOb2RlLiRzbG90UmVmTm9kZSQgPSByZWxvY2F0ZU5vZGVEYXRhLiRzbG90UmVmTm9kZSQ7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBlbHNlIGlmICghcmVsb2NhdGVOb2Rlcy5zb21lKChyKSA9PiByLiRub2RlVG9SZWxvY2F0ZSQgPT09IG5vZGUpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyB0aGUgbm9kZSBpcyBub3QgZm91bmQgd2l0aGluIHRoZSBzbG90IChgY2hpbGROb2RlYCkgdGhhdCB3ZSdyZVxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gY3VycmVudGx5IGxvb2tpbmcgYXQsIHNvIHdlIHN0aWNrIGl0IGludG8gYHJlbG9jYXRlTm9kZXNgIHRvXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBoYW5kbGUgbGF0ZXIuIElmIHdlIG5ldmVyIGZpbmQgYSBob21lIGZvciB0aGlzIGVsZW1lbnQgdGhlblxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gd2UnbGwgbmVlZCB0byBoaWRlIGl0XG4gICAgICAgICAgICAgICAgICAgICAgICByZWxvY2F0ZU5vZGVzLnB1c2goe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICRub2RlVG9SZWxvY2F0ZSQ6IG5vZGUsXG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICAvLyBpZiB3ZSdyZSBkZWFsaW5nIHdpdGggYW55IHR5cGUgb2YgZWxlbWVudCAoY2FwYWJsZSBvZiBpdHNlbGYgYmVpbmcgYVxuICAgICAgICAvLyBzbG90IHJlZmVyZW5jZSBvciBjb250YWluaW5nIG9uZSkgdGhlbiB3ZSByZWN1clxuICAgICAgICBpZiAoY2hpbGROb2RlLm5vZGVUeXBlID09PSAxIC8qIE5PREVfVFlQRS5FbGVtZW50Tm9kZSAqLykge1xuICAgICAgICAgICAgbWFya1Nsb3RDb250ZW50Rm9yUmVsb2NhdGlvbihjaGlsZE5vZGUpO1xuICAgICAgICB9XG4gICAgfVxufTtcbi8qKlxuICogQ2hlY2sgd2hldGhlciBhIG5vZGUgaXMgbG9jYXRlZCBpbiBhIGdpdmVuIG5hbWVkIHNsb3QuXG4gKlxuICogQHBhcmFtIG5vZGVUb1JlbG9jYXRlIHRoZSBub2RlIG9mIGludGVyZXN0XG4gKiBAcGFyYW0gc2xvdE5hbWUgdGhlIHNsb3QgbmFtZSB0byBjaGVja1xuICogQHJldHVybnMgd2hldGhlciB0aGUgbm9kZSBpcyBsb2NhdGVkIGluIHRoZSBzbG90IG9yIG5vdFxuICovXG5jb25zdCBpc05vZGVMb2NhdGVkSW5TbG90ID0gKG5vZGVUb1JlbG9jYXRlLCBzbG90TmFtZSkgPT4ge1xuICAgIGlmIChub2RlVG9SZWxvY2F0ZS5ub2RlVHlwZSA9PT0gMSAvKiBOT0RFX1RZUEUuRWxlbWVudE5vZGUgKi8pIHtcbiAgICAgICAgaWYgKG5vZGVUb1JlbG9jYXRlLmdldEF0dHJpYnV0ZSgnc2xvdCcpID09PSBudWxsICYmIHNsb3ROYW1lID09PSAnJykge1xuICAgICAgICAgICAgLy8gaWYgdGhlIG5vZGUgZG9lc24ndCBoYXZlIGEgc2xvdCBhdHRyaWJ1dGUsIGFuZCB0aGUgc2xvdCB3ZSdyZSBjaGVja2luZ1xuICAgICAgICAgICAgLy8gaXMgbm90IGEgbmFtZWQgc2xvdCwgdGhlbiB3ZSBhc3N1bWUgdGhlIG5vZGUgc2hvdWxkIGJlIHdpdGhpbiB0aGUgc2xvdFxuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKG5vZGVUb1JlbG9jYXRlLmdldEF0dHJpYnV0ZSgnc2xvdCcpID09PSBzbG90TmFtZSkge1xuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICBpZiAobm9kZVRvUmVsb2NhdGVbJ3Mtc24nXSA9PT0gc2xvdE5hbWUpIHtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICAgIHJldHVybiBzbG90TmFtZSA9PT0gJyc7XG59O1xuLyoqXG4gKiAnTnVsbGlmeScgYW55IFZEb20gYHJlZmAgY2FsbGJhY2tzIG9uIGEgVkRvbSBub2RlIG9yIGl0cyBjaGlsZHJlbiBieSBjYWxsaW5nXG4gKiB0aGVtIHdpdGggYG51bGxgLiBUaGlzIHNpZ25hbHMgdGhhdCB0aGUgRE9NIGVsZW1lbnQgY29ycmVzcG9uZGluZyB0byB0aGUgVkRvbVxuICogbm9kZSBoYXMgYmVlbiByZW1vdmVkIGZyb20gdGhlIERPTS5cbiAqXG4gKiBAcGFyYW0gdk5vZGUgYSB2aXJ0dWFsIERPTSBub2RlXG4gKi9cbmNvbnN0IG51bGxpZnlWTm9kZVJlZnMgPSAodk5vZGUpID0+IHtcbiAgICBpZiAoQlVJTEQudmRvbVJlZikge1xuICAgICAgICB2Tm9kZS4kYXR0cnMkICYmIHZOb2RlLiRhdHRycyQucmVmICYmIHZOb2RlLiRhdHRycyQucmVmKG51bGwpO1xuICAgICAgICB2Tm9kZS4kY2hpbGRyZW4kICYmIHZOb2RlLiRjaGlsZHJlbiQubWFwKG51bGxpZnlWTm9kZVJlZnMpO1xuICAgIH1cbn07XG4vKipcbiAqIFRoZSBtYWluIGVudHJ5IHBvaW50IGZvciBTdGVuY2lsJ3MgdmlydHVhbCBET00tYmFzZWQgcmVuZGVyaW5nIGVuZ2luZVxuICpcbiAqIEdpdmVuIGEge0BsaW5rIGQuSG9zdFJlZn0gY29udGFpbmVyIGFuZCBzb21lIHZpcnR1YWwgRE9NIG5vZGVzLCB0aGlzXG4gKiBmdW5jdGlvbiB3aWxsIGhhbmRsZSBjcmVhdGluZyBhIHZpcnR1YWwgRE9NIHRyZWUgd2l0aCBhIHNpbmdsZSByb290LCBwYXRjaGluZ1xuICogdGhlIGN1cnJlbnQgdmlydHVhbCBET00gdHJlZSBvbnRvIGFuIG9sZCBvbmUgKGlmIGFueSksIGRlYWxpbmcgd2l0aCBzbG90XG4gKiByZWxvY2F0aW9uLCBhbmQgcmVmbGVjdGluZyBhdHRyaWJ1dGVzLlxuICpcbiAqIEBwYXJhbSBob3N0UmVmIGRhdGEgbmVlZGVkIHRvIHJvb3QgYW5kIHJlbmRlciB0aGUgdmlydHVhbCBET00gdHJlZSwgc3VjaCBhc1xuICogdGhlIERPTSBub2RlIGludG8gd2hpY2ggaXQgc2hvdWxkIGJlIHJlbmRlcmVkLlxuICogQHBhcmFtIHJlbmRlckZuUmVzdWx0cyB0aGUgdmlydHVhbCBET00gbm9kZXMgdG8gYmUgcmVuZGVyZWRcbiAqIEBwYXJhbSBpc0luaXRpYWxMb2FkIHdoZXRoZXIgb3Igbm90IHRoaXMgaXMgdGhlIGZpcnN0IGNhbGwgYWZ0ZXIgcGFnZSBsb2FkXG4gKi9cbmNvbnN0IHJlbmRlclZkb20gPSAoaG9zdFJlZiwgcmVuZGVyRm5SZXN1bHRzLCBpc0luaXRpYWxMb2FkID0gZmFsc2UpID0+IHtcbiAgICB2YXIgX2EsIF9iO1xuICAgIGNvbnN0IGhvc3RFbG0gPSBob3N0UmVmLiRob3N0RWxlbWVudCQ7XG4gICAgY29uc3QgY21wTWV0YSA9IGhvc3RSZWYuJGNtcE1ldGEkO1xuICAgIGNvbnN0IG9sZFZOb2RlID0gaG9zdFJlZi4kdm5vZGUkIHx8IG5ld1ZOb2RlKG51bGwsIG51bGwpO1xuICAgIC8vIGlmIGByZW5kZXJGblJlc3VsdHNgIGlzIGEgSG9zdCBub2RlIHRoZW4gd2UgY2FuIHVzZSBpdCBkaXJlY3RseS4gSWYgbm90LFxuICAgIC8vIHdlIG5lZWQgdG8gY2FsbCBgaGAgYWdhaW4gdG8gd3JhcCB0aGUgY2hpbGRyZW4gb2Ygb3VyIGNvbXBvbmVudCBpbiBhXG4gICAgLy8gJ2R1bW15JyBIb3N0IG5vZGUgKHdlbGwsIGFuIGVtcHR5IHZub2RlKSBzaW5jZSBgcmVuZGVyVmRvbWAgYXNzdW1lc1xuICAgIC8vIGltcGxpY2l0bHkgdGhhdCB0aGUgdG9wLWxldmVsIHZkb20gbm9kZSBpcyAxKSBhbiBvbmx5IGNoaWxkIGFuZCAyKVxuICAgIC8vIGNvbnRhaW5zIGF0dHJzIHRoYXQgbmVlZCB0byBiZSBzZXQgb24gdGhlIGhvc3QgZWxlbWVudC5cbiAgICBjb25zdCByb290Vm5vZGUgPSBpc0hvc3QocmVuZGVyRm5SZXN1bHRzKSA/IHJlbmRlckZuUmVzdWx0cyA6IGgobnVsbCwgbnVsbCwgcmVuZGVyRm5SZXN1bHRzKTtcbiAgICBob3N0VGFnTmFtZSA9IGhvc3RFbG0udGFnTmFtZTtcbiAgICAvLyA8SG9zdD4gcnVudGltZSBjaGVja1xuICAgIGlmIChCVUlMRC5pc0RldiAmJiBBcnJheS5pc0FycmF5KHJlbmRlckZuUmVzdWx0cykgJiYgcmVuZGVyRm5SZXN1bHRzLnNvbWUoaXNIb3N0KSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYFRoZSA8SG9zdD4gbXVzdCBiZSB0aGUgc2luZ2xlIHJvb3QgY29tcG9uZW50LlxuTG9va3MgbGlrZSB0aGUgcmVuZGVyKCkgZnVuY3Rpb24gb2YgXCIke2hvc3RUYWdOYW1lLnRvTG93ZXJDYXNlKCl9XCIgaXMgcmV0dXJuaW5nIGFuIGFycmF5IHRoYXQgY29udGFpbnMgdGhlIDxIb3N0Pi5cblxuVGhlIHJlbmRlcigpIGZ1bmN0aW9uIHNob3VsZCBsb29rIGxpa2UgdGhpcyBpbnN0ZWFkOlxuXG5yZW5kZXIoKSB7XG4gIC8vIERvIG5vdCByZXR1cm4gYW4gYXJyYXlcbiAgcmV0dXJuIChcbiAgICA8SG9zdD57Y29udGVudH08L0hvc3Q+XG4gICk7XG59XG4gIGApO1xuICAgIH1cbiAgICBpZiAoQlVJTEQucmVmbGVjdCAmJiBjbXBNZXRhLiRhdHRyc1RvUmVmbGVjdCQpIHtcbiAgICAgICAgcm9vdFZub2RlLiRhdHRycyQgPSByb290Vm5vZGUuJGF0dHJzJCB8fCB7fTtcbiAgICAgICAgY21wTWV0YS4kYXR0cnNUb1JlZmxlY3QkLm1hcCgoW3Byb3BOYW1lLCBhdHRyaWJ1dGVdKSA9PiAocm9vdFZub2RlLiRhdHRycyRbYXR0cmlidXRlXSA9IGhvc3RFbG1bcHJvcE5hbWVdKSk7XG4gICAgfVxuICAgIC8vIE9uIHRoZSBmaXJzdCByZW5kZXIgYW5kICpvbmx5KiBvbiB0aGUgZmlyc3QgcmVuZGVyIHdlIHdhbnQgdG8gY2hlY2sgZm9yXG4gICAgLy8gYW55IGF0dHJpYnV0ZXMgc2V0IG9uIHRoZSBob3N0IGVsZW1lbnQgd2hpY2ggYXJlIGFsc28gc2V0IG9uIHRoZSB2ZG9tXG4gICAgLy8gbm9kZS4gSWYgd2UgZmluZCB0aGVtLCB3ZSBvdmVycmlkZSB0aGUgdmFsdWUgb24gdGhlIFZEb20gbm9kZSBhdHRycyB3aXRoXG4gICAgLy8gdGhlIHZhbHVlIGZyb20gdGhlIGhvc3QgZWxlbWVudCwgd2hpY2ggYWxsb3dzIGRldmVsb3BlcnMgYnVpbGRpbmcgYXBwc1xuICAgIC8vIHdpdGggU3RlbmNpbCBjb21wb25lbnRzIHRvIG92ZXJyaWRlIGUuZy4gdGhlIGByb2xlYCBhdHRyaWJ1dGUgb24gYVxuICAgIC8vIGNvbXBvbmVudCBldmVuIGlmIGl0J3MgYWxyZWFkeSBzZXQgb24gdGhlIGBIb3N0YC5cbiAgICBpZiAoaXNJbml0aWFsTG9hZCAmJiByb290Vm5vZGUuJGF0dHJzJCkge1xuICAgICAgICBmb3IgKGNvbnN0IGtleSBvZiBPYmplY3Qua2V5cyhyb290Vm5vZGUuJGF0dHJzJCkpIHtcbiAgICAgICAgICAgIC8vIFdlIGhhdmUgYSBzcGVjaWFsIGltcGxlbWVudGF0aW9uIGluIGBzZXRBY2Nlc3NvcmAgZm9yIGBzdHlsZWAgYW5kXG4gICAgICAgICAgICAvLyBgY2xhc3NgIHdoaWNoIHJlY29uY2lsZXMgdmFsdWVzIGNvbWluZyBmcm9tIHRoZSBWRG9tIHdpdGggdmFsdWVzXG4gICAgICAgICAgICAvLyBhbHJlYWR5IHByZXNlbnQgb24gdGhlIERPTSBlbGVtZW50LCBzbyB3ZSBkb24ndCB3YW50IHRvIG92ZXJyaWRlIHRob3NlXG4gICAgICAgICAgICAvLyBhdHRyaWJ1dGVzIG9uIHRoZSBWRG9tIHRyZWUgd2l0aCB2YWx1ZXMgZnJvbSB0aGUgaG9zdCBlbGVtZW50IGlmIHRoZXlcbiAgICAgICAgICAgIC8vIGFyZSBwcmVzZW50LlxuICAgICAgICAgICAgLy9cbiAgICAgICAgICAgIC8vIExpa2V3aXNlLCBgcmVmYCBhbmQgYGtleWAgYXJlIHNwZWNpYWwgaW50ZXJuYWwgdmFsdWVzIGZvciB0aGUgU3RlbmNpbFxuICAgICAgICAgICAgLy8gcnVudGltZSBhbmQgd2UgZG9uJ3Qgd2FudCB0byBvdmVycmlkZSB0aG9zZSBlaXRoZXIuXG4gICAgICAgICAgICBpZiAoaG9zdEVsbS5oYXNBdHRyaWJ1dGUoa2V5KSAmJiAhWydrZXknLCAncmVmJywgJ3N0eWxlJywgJ2NsYXNzJ10uaW5jbHVkZXMoa2V5KSkge1xuICAgICAgICAgICAgICAgIHJvb3RWbm9kZS4kYXR0cnMkW2tleV0gPSBob3N0RWxtW2tleV07XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgcm9vdFZub2RlLiR0YWckID0gbnVsbDtcbiAgICByb290Vm5vZGUuJGZsYWdzJCB8PSA0IC8qIFZOT0RFX0ZMQUdTLmlzSG9zdCAqLztcbiAgICBob3N0UmVmLiR2bm9kZSQgPSByb290Vm5vZGU7XG4gICAgcm9vdFZub2RlLiRlbG0kID0gb2xkVk5vZGUuJGVsbSQgPSAoQlVJTEQuc2hhZG93RG9tID8gaG9zdEVsbS5zaGFkb3dSb290IHx8IGhvc3RFbG0gOiBob3N0RWxtKTtcbiAgICBpZiAoQlVJTEQuc2NvcGVkIHx8IEJVSUxELnNoYWRvd0RvbSkge1xuICAgICAgICBzY29wZUlkID0gaG9zdEVsbVsncy1zYyddO1xuICAgIH1cbiAgICBpZiAoQlVJTEQuc2xvdFJlbG9jYXRpb24pIHtcbiAgICAgICAgY29udGVudFJlZiA9IGhvc3RFbG1bJ3MtY3InXTtcbiAgICAgICAgdXNlTmF0aXZlU2hhZG93RG9tID0gc3VwcG9ydHNTaGFkb3cgJiYgKGNtcE1ldGEuJGZsYWdzJCAmIDEgLyogQ01QX0ZMQUdTLnNoYWRvd0RvbUVuY2Fwc3VsYXRpb24gKi8pICE9PSAwO1xuICAgICAgICAvLyBhbHdheXMgcmVzZXRcbiAgICAgICAgY2hlY2tTbG90RmFsbGJhY2tWaXNpYmlsaXR5ID0gZmFsc2U7XG4gICAgfVxuICAgIC8vIHN5bmNocm9ub3VzIHBhdGNoXG4gICAgcGF0Y2gob2xkVk5vZGUsIHJvb3RWbm9kZSk7XG4gICAgaWYgKEJVSUxELnNsb3RSZWxvY2F0aW9uKSB7XG4gICAgICAgIC8vIHdoaWxlIHdlJ3JlIG1vdmluZyBub2RlcyBhcm91bmQgZXhpc3Rpbmcgbm9kZXMsIHRlbXBvcmFyaWx5IGRpc2FibGVcbiAgICAgICAgLy8gdGhlIGRpc2Nvbm5lY3RDYWxsYmFjayBmcm9tIHdvcmtpbmdcbiAgICAgICAgcGx0LiRmbGFncyQgfD0gMSAvKiBQTEFURk9STV9GTEFHUy5pc1RtcERpc2Nvbm5lY3RlZCAqLztcbiAgICAgICAgaWYgKGNoZWNrU2xvdFJlbG9jYXRlKSB7XG4gICAgICAgICAgICBtYXJrU2xvdENvbnRlbnRGb3JSZWxvY2F0aW9uKHJvb3RWbm9kZS4kZWxtJCk7XG4gICAgICAgICAgICBmb3IgKGNvbnN0IHJlbG9jYXRlRGF0YSBvZiByZWxvY2F0ZU5vZGVzKSB7XG4gICAgICAgICAgICAgICAgY29uc3Qgbm9kZVRvUmVsb2NhdGUgPSByZWxvY2F0ZURhdGEuJG5vZGVUb1JlbG9jYXRlJDtcbiAgICAgICAgICAgICAgICBpZiAoIW5vZGVUb1JlbG9jYXRlWydzLW9sJ10pIHtcbiAgICAgICAgICAgICAgICAgICAgLy8gYWRkIGEgcmVmZXJlbmNlIG5vZGUgbWFya2luZyB0aGlzIG5vZGUncyBvcmlnaW5hbCBsb2NhdGlvblxuICAgICAgICAgICAgICAgICAgICAvLyBrZWVwIGEgcmVmZXJlbmNlIHRvIHRoaXMgbm9kZSBmb3IgbGF0ZXIgbG9va3Vwc1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBvcmdMb2NhdGlvbk5vZGUgPSBCVUlMRC5pc0RlYnVnIHx8IEJVSUxELmh5ZHJhdGVTZXJ2ZXJTaWRlXG4gICAgICAgICAgICAgICAgICAgICAgICA/IG9yaWdpbmFsTG9jYXRpb25EZWJ1Z05vZGUobm9kZVRvUmVsb2NhdGUpXG4gICAgICAgICAgICAgICAgICAgICAgICA6IGRvYy5jcmVhdGVUZXh0Tm9kZSgnJyk7XG4gICAgICAgICAgICAgICAgICAgIG9yZ0xvY2F0aW9uTm9kZVsncy1uciddID0gbm9kZVRvUmVsb2NhdGU7XG4gICAgICAgICAgICAgICAgICAgIG5vZGVUb1JlbG9jYXRlLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKChub2RlVG9SZWxvY2F0ZVsncy1vbCddID0gb3JnTG9jYXRpb25Ob2RlKSwgbm9kZVRvUmVsb2NhdGUpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGZvciAoY29uc3QgcmVsb2NhdGVEYXRhIG9mIHJlbG9jYXRlTm9kZXMpIHtcbiAgICAgICAgICAgICAgICBjb25zdCBub2RlVG9SZWxvY2F0ZSA9IHJlbG9jYXRlRGF0YS4kbm9kZVRvUmVsb2NhdGUkO1xuICAgICAgICAgICAgICAgIGNvbnN0IHNsb3RSZWZOb2RlID0gcmVsb2NhdGVEYXRhLiRzbG90UmVmTm9kZSQ7XG4gICAgICAgICAgICAgICAgaWYgKHNsb3RSZWZOb2RlKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHBhcmVudE5vZGVSZWYgPSBzbG90UmVmTm9kZS5wYXJlbnROb2RlO1xuICAgICAgICAgICAgICAgICAgICAvLyBXaGVuIGRldGVybWluaW5nIHdoZXJlIHRvIGluc2VydCBjb250ZW50LCB0aGUgbW9zdCBzaW1wbGUgY2FzZSB3b3VsZCBiZVxuICAgICAgICAgICAgICAgICAgICAvLyB0byByZWxvY2F0ZSB0aGUgbm9kZSBpbW1lZGlhdGVseSBmb2xsb3dpbmcgdGhlIHNsb3QgcmVmZXJlbmNlIG5vZGUuIFdlIGRvIHRoaXNcbiAgICAgICAgICAgICAgICAgICAgLy8gYnkgZ2V0dGluZyBhIHJlZmVyZW5jZSB0byB0aGUgbm9kZSBpbW1lZGlhdGVseSBmb2xsb3dpbmcgdGhlIHNsb3QgcmVmZXJlbmNlIG5vZGVcbiAgICAgICAgICAgICAgICAgICAgLy8gc2luY2Ugd2Ugd2lsbCB1c2UgYGluc2VydEJlZm9yZWAgdG8gbWFuaXB1bGF0ZSB0aGUgRE9NLlxuICAgICAgICAgICAgICAgICAgICAvL1xuICAgICAgICAgICAgICAgICAgICAvLyBJZiB0aGVyZSBpcyBubyBub2RlIGltbWVkaWF0ZWx5IGZvbGxvd2luZyB0aGUgc2xvdCByZWZlcmVuY2Ugbm9kZSwgdGhlbiB3ZSB3aWxsIGp1c3RcbiAgICAgICAgICAgICAgICAgICAgLy8gZW5kIHVwIGFwcGVuZGluZyB0aGUgbm9kZSBhcyB0aGUgbGFzdCBjaGlsZCBvZiB0aGUgcGFyZW50LlxuICAgICAgICAgICAgICAgICAgICBsZXQgaW5zZXJ0QmVmb3JlTm9kZSA9IHNsb3RSZWZOb2RlLm5leHRTaWJsaW5nO1xuICAgICAgICAgICAgICAgICAgICAvLyBJZiB0aGUgbm9kZSB3ZSdyZSBjdXJyZW50bHkgcGxhbm5pbmcgb24gaW5zZXJ0aW5nIHRoZSBuZXcgbm9kZSBiZWZvcmUgaXMgYW4gZWxlbWVudCxcbiAgICAgICAgICAgICAgICAgICAgLy8gd2UgbmVlZCB0byBkbyBzb21lIGFkZGl0aW9uYWwgY2hlY2tzIHRvIG1ha2Ugc3VyZSB3ZSdyZSBpbnNlcnRpbmcgdGhlIG5vZGUgaW4gdGhlIGNvcnJlY3Qgb3JkZXIuXG4gICAgICAgICAgICAgICAgICAgIC8vIFRoZSB1c2UgY2FzZSBoZXJlIHdvdWxkIGJlIHRoYXQgd2UgaGF2ZSBtdWx0aXBsZSBub2RlcyBiZWluZyByZWxvY2F0ZWQgdG8gdGhlIHNhbWUgc2xvdC4gU28sIHdlIHdhbnRcbiAgICAgICAgICAgICAgICAgICAgLy8gdG8gbWFrZSBzdXJlIHRoZXkgZ2V0IGluc2VydGVkIGludG8gdGhlaXIgbmV3IGhvdyBpbiB0aGUgc2FtZSBvcmRlciB0aGV5IHdlcmUgZGVjbGFyZWQgaW4gdGhlaXIgb3JpZ2luYWwgbG9jYXRpb24uXG4gICAgICAgICAgICAgICAgICAgIC8vXG4gICAgICAgICAgICAgICAgICAgIC8vIFRPRE8oU1RFTkNJTC05MTQpOiBSZW1vdmUgYGV4cGVyaW1lbnRhbFNsb3RGaXhlc2AgY2hlY2tcbiAgICAgICAgICAgICAgICAgICAgaWYgKCFCVUlMRC5leHBlcmltZW50YWxTbG90Rml4ZXMgfHxcbiAgICAgICAgICAgICAgICAgICAgICAgIChpbnNlcnRCZWZvcmVOb2RlICYmIGluc2VydEJlZm9yZU5vZGUubm9kZVR5cGUgPT09IDEgLyogTk9ERV9UWVBFLkVsZW1lbnROb2RlICovKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgbGV0IG9yZ0xvY2F0aW9uTm9kZSA9IChfYSA9IG5vZGVUb1JlbG9jYXRlWydzLW9sJ10pID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS5wcmV2aW91c1NpYmxpbmc7XG4gICAgICAgICAgICAgICAgICAgICAgICB3aGlsZSAob3JnTG9jYXRpb25Ob2RlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbGV0IHJlZk5vZGUgPSAoX2IgPSBvcmdMb2NhdGlvbk5vZGVbJ3MtbnInXSkgIT09IG51bGwgJiYgX2IgIT09IHZvaWQgMCA/IF9iIDogbnVsbDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAocmVmTm9kZSAmJiByZWZOb2RlWydzLXNuJ10gPT09IG5vZGVUb1JlbG9jYXRlWydzLXNuJ10gJiYgcGFyZW50Tm9kZVJlZiA9PT0gcmVmTm9kZS5wYXJlbnROb2RlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlZk5vZGUgPSByZWZOb2RlLm5leHRTaWJsaW5nO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoIXJlZk5vZGUgfHwgIXJlZk5vZGVbJ3MtbnInXSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaW5zZXJ0QmVmb3JlTm9kZSA9IHJlZk5vZGU7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvcmdMb2NhdGlvbk5vZGUgPSBvcmdMb2NhdGlvbk5vZGUucHJldmlvdXNTaWJsaW5nO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGlmICgoIWluc2VydEJlZm9yZU5vZGUgJiYgcGFyZW50Tm9kZVJlZiAhPT0gbm9kZVRvUmVsb2NhdGUucGFyZW50Tm9kZSkgfHxcbiAgICAgICAgICAgICAgICAgICAgICAgIG5vZGVUb1JlbG9jYXRlLm5leHRTaWJsaW5nICE9PSBpbnNlcnRCZWZvcmVOb2RlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyB3ZSd2ZSBjaGVja2VkIHRoYXQgaXQncyB3b3J0aCB3aGlsZSB0byByZWxvY2F0ZVxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gc2luY2UgdGhhdCB0aGUgbm9kZSB0byByZWxvY2F0ZVxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gaGFzIGEgZGlmZmVyZW50IG5leHQgc2libGluZyBvciBwYXJlbnQgcmVsb2NhdGVkXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAobm9kZVRvUmVsb2NhdGUgIT09IGluc2VydEJlZm9yZU5vZGUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoIW5vZGVUb1JlbG9jYXRlWydzLWhuJ10gJiYgbm9kZVRvUmVsb2NhdGVbJ3Mtb2wnXSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBwcm9iYWJseSBhIGNvbXBvbmVudCBpbiB0aGUgaW5kZXguaHRtbCB0aGF0IGRvZXNuJ3QgaGF2ZSBpdHMgaG9zdG5hbWUgc2V0XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5vZGVUb1JlbG9jYXRlWydzLWhuJ10gPSBub2RlVG9SZWxvY2F0ZVsncy1vbCddLnBhcmVudE5vZGUubm9kZU5hbWU7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIEhhbmRsZSBhIHVzZS1jYXNlIHdoZXJlIHdlIHJlbG9jYXRlIGEgc2xvdCB3aGVyZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIHRoZSBzbG90IG5hbWUgY2hhbmdlcyBhbG9uZyB0aGUgd2F5IChmb3IgaW5zdGFuY2UsIGEgZGVmYXVsdCB0byBhIG5hbWVkIHNsb3QpLlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIEluIHRoaXMgY2FzZSwgd2UgbmVlZCB0byB1cGRhdGUgdGhlIHJlbG9jYXRlZCBub2RlJ3Mgc2xvdCBhdHRyaWJ1dGUgdG8gbWF0Y2hcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyB0aGUgc2xvdCBuYW1lIGl0IGlzIGJlaW5nIHJlbG9jYXRlZCBpbnRvLlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gVGhlcmUgaXMgYSB2ZXJ5IG5pY2hlIHVzZSBjYXNlIHdoZXJlIHdlIG1heSBiZSByZWxvY2F0aW5nIGEgdGV4dCBub2RlLiBGb3Igbm93LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIHdlIGlnbm9yZSBhbnl0aGluZyB0aGF0IGlzIG5vdCBhbiBlbGVtZW50IG5vZGUgc2luY2Ugbm9uLWVsZW1lbnQgbm9kZXMgY2Fubm90IGhhdmVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBhdHRyaWJ1dGVzIHRvIHNwZWNpZnkgdGhlIHNsb3QuIFdlJ2xsIGRlYWwgd2l0aCB0aGlzIGlmIGl0IGJlY29tZXMgYSBwcm9ibGVtLi4uIGJ1dCBzdXBlciBlZGdlLWNhc2UteVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChCVUlMRC5leHBlcmltZW50YWxTbG90Rml4ZXMgJiZcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbm9kZVRvUmVsb2NhdGUubm9kZVR5cGUgPT09IDEgLyogTk9ERV9UWVBFLkVsZW1lbnROb2RlICovICYmXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNsb3RSZWZOb2RlWydzLWZzJ10gIT09IG5vZGVUb1JlbG9jYXRlLmdldEF0dHJpYnV0ZSgnc2xvdCcpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICghc2xvdFJlZk5vZGVbJ3MtZnMnXSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbm9kZVRvUmVsb2NhdGUucmVtb3ZlQXR0cmlidXRlKCdzbG90Jyk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBub2RlVG9SZWxvY2F0ZS5zZXRBdHRyaWJ1dGUoJ3Nsb3QnLCBzbG90UmVmTm9kZVsncy1mcyddKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBBZGQgaXQgYmFjayB0byB0aGUgZG9tIGJ1dCBpbiBpdHMgbmV3IGhvbWVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBJZiB3ZSBnZXQgdG8gdGhpcyBwb2ludCBhbmQgYGluc2VydEJlZm9yZU5vZGVgIGlzIGBudWxsYCwgdGhhdCBtZWFuc1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIHdlJ3JlIGp1c3QgZ29pbmcgdG8gYXBwZW5kIHRoZSBub2RlIGFzIHRoZSBsYXN0IGNoaWxkIG9mIHRoZSBwYXJlbnQuIFBhc3NpbmdcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBgbnVsbGAgYXMgdGhlIHNlY29uZCBhcmcgaGVyZSB3aWxsIHRyaWdnZXIgdGhhdCBiZWhhdmlvci5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYXJlbnROb2RlUmVmLmluc2VydEJlZm9yZShub2RlVG9SZWxvY2F0ZSwgaW5zZXJ0QmVmb3JlTm9kZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIC8vIHRoaXMgbm9kZSBkb2Vzbid0IGhhdmUgYSBzbG90IGhvbWUgdG8gZ28gdG8sIHNvIGxldCdzIGhpZGUgaXRcbiAgICAgICAgICAgICAgICAgICAgaWYgKG5vZGVUb1JlbG9jYXRlLm5vZGVUeXBlID09PSAxIC8qIE5PREVfVFlQRS5FbGVtZW50Tm9kZSAqLykge1xuICAgICAgICAgICAgICAgICAgICAgICAgbm9kZVRvUmVsb2NhdGUuaGlkZGVuID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBpZiAoY2hlY2tTbG90RmFsbGJhY2tWaXNpYmlsaXR5KSB7XG4gICAgICAgICAgICB1cGRhdGVGYWxsYmFja1Nsb3RWaXNpYmlsaXR5KHJvb3RWbm9kZS4kZWxtJCk7XG4gICAgICAgIH1cbiAgICAgICAgLy8gZG9uZSBtb3Zpbmcgbm9kZXMgYXJvdW5kXG4gICAgICAgIC8vIGFsbG93IHRoZSBkaXNjb25uZWN0IGNhbGxiYWNrIHRvIHdvcmsgYWdhaW5cbiAgICAgICAgcGx0LiRmbGFncyQgJj0gfjEgLyogUExBVEZPUk1fRkxBR1MuaXNUbXBEaXNjb25uZWN0ZWQgKi87XG4gICAgICAgIC8vIGFsd2F5cyByZXNldFxuICAgICAgICByZWxvY2F0ZU5vZGVzLmxlbmd0aCA9IDA7XG4gICAgfVxufTtcbi8vIHNsb3QgY29tbWVudCBkZWJ1ZyBub2RlcyBvbmx5IGNyZWF0ZWQgd2l0aCB0aGUgYC0tZGVidWdgIGZsYWdcbi8vIG90aGVyd2lzZSB0aGVzZSBub2RlcyBhcmUgdGV4dCBub2RlcyB3L291dCBjb250ZW50XG5jb25zdCBzbG90UmVmZXJlbmNlRGVidWdOb2RlID0gKHNsb3RWTm9kZSkgPT4gZG9jLmNyZWF0ZUNvbW1lbnQoYDxzbG90JHtzbG90Vk5vZGUuJG5hbWUkID8gJyBuYW1lPVwiJyArIHNsb3RWTm9kZS4kbmFtZSQgKyAnXCInIDogJyd9PiAoaG9zdD0ke2hvc3RUYWdOYW1lLnRvTG93ZXJDYXNlKCl9KWApO1xuY29uc3Qgb3JpZ2luYWxMb2NhdGlvbkRlYnVnTm9kZSA9IChub2RlVG9SZWxvY2F0ZSkgPT4gZG9jLmNyZWF0ZUNvbW1lbnQoYG9yZy1sb2NhdGlvbiBmb3IgYCArXG4gICAgKG5vZGVUb1JlbG9jYXRlLmxvY2FsTmFtZVxuICAgICAgICA/IGA8JHtub2RlVG9SZWxvY2F0ZS5sb2NhbE5hbWV9PiAoaG9zdD0ke25vZGVUb1JlbG9jYXRlWydzLWhuJ119KWBcbiAgICAgICAgOiBgWyR7bm9kZVRvUmVsb2NhdGUudGV4dENvbnRlbnR9XWApKTtcbmNvbnN0IGF0dGFjaFRvQW5jZXN0b3IgPSAoaG9zdFJlZiwgYW5jZXN0b3JDb21wb25lbnQpID0+IHtcbiAgICBpZiAoQlVJTEQuYXN5bmNMb2FkaW5nICYmIGFuY2VzdG9yQ29tcG9uZW50ICYmICFob3N0UmVmLiRvblJlbmRlclJlc29sdmUkICYmIGFuY2VzdG9yQ29tcG9uZW50WydzLXAnXSkge1xuICAgICAgICBhbmNlc3RvckNvbXBvbmVudFsncy1wJ10ucHVzaChuZXcgUHJvbWlzZSgocikgPT4gKGhvc3RSZWYuJG9uUmVuZGVyUmVzb2x2ZSQgPSByKSkpO1xuICAgIH1cbn07XG5jb25zdCBzY2hlZHVsZVVwZGF0ZSA9IChob3N0UmVmLCBpc0luaXRpYWxMb2FkKSA9PiB7XG4gICAgaWYgKEJVSUxELnRhc2tRdWV1ZSAmJiBCVUlMRC51cGRhdGFibGUpIHtcbiAgICAgICAgaG9zdFJlZi4kZmxhZ3MkIHw9IDE2IC8qIEhPU1RfRkxBR1MuaXNRdWV1ZWRGb3JVcGRhdGUgKi87XG4gICAgfVxuICAgIGlmIChCVUlMRC5hc3luY0xvYWRpbmcgJiYgaG9zdFJlZi4kZmxhZ3MkICYgNCAvKiBIT1NUX0ZMQUdTLmlzV2FpdGluZ0ZvckNoaWxkcmVuICovKSB7XG4gICAgICAgIGhvc3RSZWYuJGZsYWdzJCB8PSA1MTIgLyogSE9TVF9GTEFHUy5uZWVkc1JlcmVuZGVyICovO1xuICAgICAgICByZXR1cm47XG4gICAgfVxuICAgIGF0dGFjaFRvQW5jZXN0b3IoaG9zdFJlZiwgaG9zdFJlZi4kYW5jZXN0b3JDb21wb25lbnQkKTtcbiAgICAvLyB0aGVyZSBpcyBubyBhbmNlc3RvciBjb21wb25lbnQgb3IgdGhlIGFuY2VzdG9yIGNvbXBvbmVudFxuICAgIC8vIGhhcyBhbHJlYWR5IGZpcmVkIG9mZiBpdHMgbGlmZWN5Y2xlIHVwZGF0ZSB0aGVuXG4gICAgLy8gZmlyZSBvZmYgdGhlIGluaXRpYWwgdXBkYXRlXG4gICAgY29uc3QgZGlzcGF0Y2ggPSAoKSA9PiBkaXNwYXRjaEhvb2tzKGhvc3RSZWYsIGlzSW5pdGlhbExvYWQpO1xuICAgIHJldHVybiBCVUlMRC50YXNrUXVldWUgPyB3cml0ZVRhc2soZGlzcGF0Y2gpIDogZGlzcGF0Y2goKTtcbn07XG4vKipcbiAqIERpc3BhdGNoIGluaXRpYWwtcmVuZGVyIGFuZCB1cGRhdGUgbGlmZWN5Y2xlIGhvb2tzLCBlbnF1ZXVpbmcgY2FsbHMgdG9cbiAqIGNvbXBvbmVudCBsaWZlY3ljbGUgbWV0aG9kcyBsaWtlIGBjb21wb25lbnRXaWxsTG9hZGAgYXMgd2VsbCBhc1xuICoge0BsaW5rIHVwZGF0ZUNvbXBvbmVudH0sIHdoaWNoIHdpbGwga2ljayBvZmYgdGhlIHZpcnR1YWwgRE9NIHJlLXJlbmRlci5cbiAqXG4gKiBAcGFyYW0gaG9zdFJlZiBhIHJlZmVyZW5jZSB0byBhIGhvc3QgRE9NIG5vZGVcbiAqIEBwYXJhbSBpc0luaXRpYWxMb2FkIHdoZXRoZXIgd2UncmUgb24gdGhlIGluaXRpYWwgbG9hZCBvciBub3RcbiAqIEByZXR1cm5zIGFuIGVtcHR5IFByb21pc2Ugd2hpY2ggaXMgdXNlZCB0byBlbnF1ZXVlIGEgc2VyaWVzIG9mIG9wZXJhdGlvbnMgZm9yXG4gKiB0aGUgY29tcG9uZW50XG4gKi9cbmNvbnN0IGRpc3BhdGNoSG9va3MgPSAoaG9zdFJlZiwgaXNJbml0aWFsTG9hZCkgPT4ge1xuICAgIGNvbnN0IGVsbSA9IGhvc3RSZWYuJGhvc3RFbGVtZW50JDtcbiAgICBjb25zdCBlbmRTY2hlZHVsZSA9IGNyZWF0ZVRpbWUoJ3NjaGVkdWxlVXBkYXRlJywgaG9zdFJlZi4kY21wTWV0YSQuJHRhZ05hbWUkKTtcbiAgICBjb25zdCBpbnN0YW5jZSA9IEJVSUxELmxhenlMb2FkID8gaG9zdFJlZi4kbGF6eUluc3RhbmNlJCA6IGVsbTtcbiAgICAvLyBXZSdyZSBnb2luZyB0byB1c2UgdGhpcyB2YXJpYWJsZSB0b2dldGhlciB3aXRoIGBlbnF1ZXVlYCB0byBpbXBsZW1lbnQgYVxuICAgIC8vIGxpdHRsZSBwcm9taXNlLWJhc2VkIHF1ZXVlLiBXZSBzdGFydCBvdXQgd2l0aCBpdCBgdW5kZWZpbmVkYC4gV2hlbiB3ZSBhZGRcbiAgICAvLyB0aGUgZmlyc3QgZnVuY3Rpb24gdG8gdGhlIHF1ZXVlIHdlJ2xsIHNldCB0aGlzIHZhcmlhYmxlIHRvIGJlIHRoYXRcbiAgICAvLyBmdW5jdGlvbidzIHJldHVybiB2YWx1ZS4gV2hlbiB3ZSBhdHRlbXB0IHRvIGFkZCBzdWJzZXF1ZW50IHZhbHVlcyB0byB0aGVcbiAgICAvLyBxdWV1ZSB3ZSdsbCBjaGVjayB0aGF0IHZhbHVlIGFuZCwgaWYgaXQgd2FzIGEgYFByb21pc2VgLCB3ZSdsbCB0aGVuIGNoYWluXG4gICAgLy8gdGhlIG5ldyBmdW5jdGlvbiBvZmYgb2YgdGhhdCBgUHJvbWlzZWAgdXNpbmcgYC50aGVuKClgLiBUaGlzIHdpbGwgZ2l2ZSBvdXJcbiAgICAvLyBxdWV1ZSB0d28gbmljZSBwcm9wZXJ0aWVzOlxuICAgIC8vXG4gICAgLy8gMS4gSWYgYWxsIGZ1bmN0aW9ucyBhZGRlZCB0byB0aGUgcXVldWUgYXJlIHN5bmNocm9ub3VzIHRoZXknbGwgYmUgY2FsbGVkXG4gICAgLy8gICAgc3luY2hyb25vdXNseSByaWdodCBhd2F5LlxuICAgIC8vIDIuIElmIGFsbCBmdW5jdGlvbnMgYWRkZWQgdG8gdGhlIHF1ZXVlIGFyZSBhc3luY2hyb25vdXMgdGhleSdsbCBhbGwgYmVcbiAgICAvLyAgICBjYWxsZWQgaW4gb3JkZXIgYWZ0ZXIgYGRpc3BhdGNoSG9va3NgIGV4aXRzLlxuICAgIGxldCBtYXliZVByb21pc2U7XG4gICAgaWYgKGlzSW5pdGlhbExvYWQpIHtcbiAgICAgICAgaWYgKEJVSUxELmxhenlMb2FkICYmIEJVSUxELmhvc3RMaXN0ZW5lcikge1xuICAgICAgICAgICAgaG9zdFJlZi4kZmxhZ3MkIHw9IDI1NiAvKiBIT1NUX0ZMQUdTLmlzTGlzdGVuUmVhZHkgKi87XG4gICAgICAgICAgICBpZiAoaG9zdFJlZi4kcXVldWVkTGlzdGVuZXJzJCkge1xuICAgICAgICAgICAgICAgIGhvc3RSZWYuJHF1ZXVlZExpc3RlbmVycyQubWFwKChbbWV0aG9kTmFtZSwgZXZlbnRdKSA9PiBzYWZlQ2FsbChpbnN0YW5jZSwgbWV0aG9kTmFtZSwgZXZlbnQpKTtcbiAgICAgICAgICAgICAgICBob3N0UmVmLiRxdWV1ZWRMaXN0ZW5lcnMkID0gdW5kZWZpbmVkO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGVtaXRMaWZlY3ljbGVFdmVudChlbG0sICdjb21wb25lbnRXaWxsTG9hZCcpO1xuICAgICAgICBpZiAoQlVJTEQuY21wV2lsbExvYWQpIHtcbiAgICAgICAgICAgIC8vIElmIGBjb21wb25lbnRXaWxsTG9hZGAgcmV0dXJucyBhIGBQcm9taXNlYCB0aGVuIHdlIHdhbnQgdG8gd2FpdCBvblxuICAgICAgICAgICAgLy8gd2hhdGV2ZXIncyBnb2luZyBvbiBpbiB0aGF0IGBQcm9taXNlYCBiZWZvcmUgd2UgbGF1bmNoIGludG9cbiAgICAgICAgICAgIC8vIHJlbmRlcmluZyB0aGUgY29tcG9uZW50LCBkb2luZyBvdGhlciBsaWZlY3ljbGUgc3R1ZmYsIGV0Yy4gU29cbiAgICAgICAgICAgIC8vIGluIHRoYXQgY2FzZSB3ZSBhc3NpZ24gdGhlIHJldHVybmVkIHByb21pc2UgdG8gdGhlIHZhcmlhYmxlIHdlXG4gICAgICAgICAgICAvLyBkZWNsYXJlZCBhYm92ZSB0byBob2xkIGEgcG9zc2libGUgJ3F1ZXVlaW5nJyBQcm9taXNlXG4gICAgICAgICAgICBtYXliZVByb21pc2UgPSBzYWZlQ2FsbChpbnN0YW5jZSwgJ2NvbXBvbmVudFdpbGxMb2FkJyk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIGVtaXRMaWZlY3ljbGVFdmVudChlbG0sICdjb21wb25lbnRXaWxsVXBkYXRlJyk7XG4gICAgICAgIGlmIChCVUlMRC5jbXBXaWxsVXBkYXRlKSB7XG4gICAgICAgICAgICAvLyBMaWtlIGBjb21wb25lbnRXaWxsTG9hZGAgYWJvdmUsIHdlIGFsbG93IFN0ZW5jaWwgY29tcG9uZW50XG4gICAgICAgICAgICAvLyBhdXRob3JzIHRvIHJldHVybiBhIGBQcm9taXNlYCBmcm9tIHRoaXMgbGlmZWN5Y2xlIGNhbGxiYWNrLCBhbmRcbiAgICAgICAgICAgIC8vIHdlIHNwZWNpZnkgdGhhdCBvdXIgcnVudGltZSB3aWxsIHdhaXQgZm9yIHRoYXQgYFByb21pc2VgIHRvXG4gICAgICAgICAgICAvLyByZXNvbHZlIGJlZm9yZSB0aGUgY29tcG9uZW50IHJlLXJlbmRlcnMuIFNvIGlmIHRoZSBtZXRob2RcbiAgICAgICAgICAgIC8vIHJldHVybnMgYSBgUHJvbWlzZWAgd2UgbmVlZCB0byBrZWVwIGl0IGFyb3VuZCFcbiAgICAgICAgICAgIG1heWJlUHJvbWlzZSA9IHNhZmVDYWxsKGluc3RhbmNlLCAnY29tcG9uZW50V2lsbFVwZGF0ZScpO1xuICAgICAgICB9XG4gICAgfVxuICAgIGVtaXRMaWZlY3ljbGVFdmVudChlbG0sICdjb21wb25lbnRXaWxsUmVuZGVyJyk7XG4gICAgaWYgKEJVSUxELmNtcFdpbGxSZW5kZXIpIHtcbiAgICAgICAgbWF5YmVQcm9taXNlID0gZW5xdWV1ZShtYXliZVByb21pc2UsICgpID0+IHNhZmVDYWxsKGluc3RhbmNlLCAnY29tcG9uZW50V2lsbFJlbmRlcicpKTtcbiAgICB9XG4gICAgZW5kU2NoZWR1bGUoKTtcbiAgICByZXR1cm4gZW5xdWV1ZShtYXliZVByb21pc2UsICgpID0+IHVwZGF0ZUNvbXBvbmVudChob3N0UmVmLCBpbnN0YW5jZSwgaXNJbml0aWFsTG9hZCkpO1xufTtcbi8qKlxuICogVGhpcyBmdW5jdGlvbiB1c2VzIGEgUHJvbWlzZSB0byBpbXBsZW1lbnQgYSBzaW1wbGUgZmlyc3QtaW4sIGZpcnN0LW91dCBxdWV1ZVxuICogb2YgZnVuY3Rpb25zIHRvIGJlIGNhbGxlZC5cbiAqXG4gKiBUaGUgcXVldWUgaXMgb3JkZXJlZCBvbiB0aGUgYmFzaXMgb2YgdGhlIGZpcnN0IGFyZ3VtZW50LiBJZiBpdCdzXG4gKiBgdW5kZWZpbmVkYCwgdGhlbiBub3RoaW5nIGlzIG9uIHRoZSBxdWV1ZSB5ZXQsIHNvIHRoZSBwcm92aWRlZCBmdW5jdGlvbiBjYW5cbiAqIGJlIGNhbGxlZCBzeW5jaHJvbm91c2x5IChhbHRob3VnaCBub3RlIHRoYXQgdGhpcyBmdW5jdGlvbiBtYXkgcmV0dXJuIGFcbiAqIGBQcm9taXNlYCkuIFRoZSBpZGVhIGlzIHRoYXQgdGhlbiB0aGUgcmV0dXJuIHZhbHVlIG9mIHRoYXQgZW5xdWV1ZWluZ1xuICogb3BlcmF0aW9uIGlzIGtlcHQgYXJvdW5kLCBzbyB0aGF0IGlmIGl0IHdhcyBhIGBQcm9taXNlYCB0aGVuIHN1YnNlcXVlbnRcbiAqIGZ1bmN0aW9ucyBjYW4gYmUgZW5xdWV1ZWQgYnkgY2FsbGluZyB0aGlzIGZ1bmN0aW9uIGFnYWluIHdpdGggdGhhdCBgUHJvbWlzZWBcbiAqIGFzIHRoZSBmaXJzdCBhcmd1bWVudC5cbiAqXG4gKiBAcGFyYW0gbWF5YmVQcm9taXNlIGVpdGhlciBhIGBQcm9taXNlYCB3aGljaCBzaG91bGQgcmVzb2x2ZSBiZWZvcmUgdGhlIG5leHQgZnVuY3Rpb24gaXMgY2FsbGVkIG9yIGFuICdlbXB0eScgc2VudGluZWxcbiAqIEBwYXJhbSBmbiBhIGZ1bmN0aW9uIHRvIGVucXVldWVcbiAqIEByZXR1cm5zIGVpdGhlciBhIGBQcm9taXNlYCBvciB0aGUgcmV0dXJuIHZhbHVlIG9mIHRoZSBwcm92aWRlZCBmdW5jdGlvblxuICovXG5jb25zdCBlbnF1ZXVlID0gKG1heWJlUHJvbWlzZSwgZm4pID0+IGlzUHJvbWlzZXkobWF5YmVQcm9taXNlKSA/IG1heWJlUHJvbWlzZS50aGVuKGZuKSA6IGZuKCk7XG4vKipcbiAqIENoZWNrIHRoYXQgYSB2YWx1ZSBpcyBhIGBQcm9taXNlYC4gVG8gY2hlY2ssIHdlIGZpcnN0IHNlZSBpZiB0aGUgdmFsdWUgaXMgYW5cbiAqIGluc3RhbmNlIG9mIHRoZSBgUHJvbWlzZWAgZ2xvYmFsLiBJbiBhIGZldyBjaXJjdW1zdGFuY2VzLCBpbiBwYXJ0aWN1bGFyIGlmXG4gKiB0aGUgZ2xvYmFsIGhhcyBiZWVuIG92ZXJ3cml0dGVuLCB0aGlzIGlzIGNvdWxkIGJlIG1pc2xlYWRpbmcsIHNvIHdlIGFsc28gZG9cbiAqIGEgbGl0dGxlICdkdWNrIHR5cGluZycgY2hlY2sgdG8gc2VlIGlmIHRoZSBgLnRoZW5gIHByb3BlcnR5IG9mIHRoZSB2YWx1ZSBpc1xuICogZGVmaW5lZCBhbmQgYSBmdW5jdGlvbi5cbiAqXG4gKiBAcGFyYW0gbWF5YmVQcm9taXNlIGl0IG1pZ2h0IGJlIGEgcHJvbWlzZSFcbiAqIEByZXR1cm5zIHdoZXRoZXIgaXQgaXMgb3Igbm90XG4gKi9cbmNvbnN0IGlzUHJvbWlzZXkgPSAobWF5YmVQcm9taXNlKSA9PiBtYXliZVByb21pc2UgaW5zdGFuY2VvZiBQcm9taXNlIHx8XG4gICAgKG1heWJlUHJvbWlzZSAmJiBtYXliZVByb21pc2UudGhlbiAmJiB0eXBlb2YgbWF5YmVQcm9taXNlLnRoZW4gPT09ICdmdW5jdGlvbicpO1xuLyoqXG4gKiBVcGRhdGUgYSBjb21wb25lbnQgZ2l2ZW4gcmVmZXJlbmNlIHRvIGl0cyBob3N0IGVsZW1lbnRzIGFuZCBzbyBvbi5cbiAqXG4gKiBAcGFyYW0gaG9zdFJlZiBhbiBvYmplY3QgY29udGFpbmluZyByZWZlcmVuY2VzIHRvIHRoZSBlbGVtZW50J3MgaG9zdCBub2RlLFxuICogVkRvbSBub2RlcywgYW5kIG90aGVyIG1ldGFkYXRhXG4gKiBAcGFyYW0gaW5zdGFuY2UgYSByZWZlcmVuY2UgdG8gdGhlIHVuZGVybHlpbmcgaG9zdCBlbGVtZW50IHdoZXJlIGl0IHdpbGwgYmVcbiAqIHJlbmRlcmVkXG4gKiBAcGFyYW0gaXNJbml0aWFsTG9hZCB3aGV0aGVyIG9yIG5vdCB0aGlzIGZ1bmN0aW9uIGlzIGJlaW5nIGNhbGxlZCBhcyBwYXJ0IG9mXG4gKiB0aGUgZmlyc3QgcmVuZGVyIGN5Y2xlXG4gKi9cbmNvbnN0IHVwZGF0ZUNvbXBvbmVudCA9IGFzeW5jIChob3N0UmVmLCBpbnN0YW5jZSwgaXNJbml0aWFsTG9hZCkgPT4ge1xuICAgIHZhciBfYTtcbiAgICBjb25zdCBlbG0gPSBob3N0UmVmLiRob3N0RWxlbWVudCQ7XG4gICAgY29uc3QgZW5kVXBkYXRlID0gY3JlYXRlVGltZSgndXBkYXRlJywgaG9zdFJlZi4kY21wTWV0YSQuJHRhZ05hbWUkKTtcbiAgICBjb25zdCByYyA9IGVsbVsncy1yYyddO1xuICAgIGlmIChCVUlMRC5zdHlsZSAmJiBpc0luaXRpYWxMb2FkKSB7XG4gICAgICAgIC8vIERPTSBXUklURSFcbiAgICAgICAgYXR0YWNoU3R5bGVzKGhvc3RSZWYpO1xuICAgIH1cbiAgICBjb25zdCBlbmRSZW5kZXIgPSBjcmVhdGVUaW1lKCdyZW5kZXInLCBob3N0UmVmLiRjbXBNZXRhJC4kdGFnTmFtZSQpO1xuICAgIGlmIChCVUlMRC5pc0Rldikge1xuICAgICAgICBob3N0UmVmLiRmbGFncyQgfD0gMTAyNCAvKiBIT1NUX0ZMQUdTLmRldk9uUmVuZGVyICovO1xuICAgIH1cbiAgICBpZiAoQlVJTEQuaHlkcmF0ZVNlcnZlclNpZGUpIHtcbiAgICAgICAgYXdhaXQgY2FsbFJlbmRlcihob3N0UmVmLCBpbnN0YW5jZSwgZWxtLCBpc0luaXRpYWxMb2FkKTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIGNhbGxSZW5kZXIoaG9zdFJlZiwgaW5zdGFuY2UsIGVsbSwgaXNJbml0aWFsTG9hZCk7XG4gICAgfVxuICAgIGlmIChCVUlMRC5pc0Rldikge1xuICAgICAgICBob3N0UmVmLiRyZW5kZXJDb3VudCQgPSBob3N0UmVmLiRyZW5kZXJDb3VudCQgPT09IHVuZGVmaW5lZCA/IDEgOiBob3N0UmVmLiRyZW5kZXJDb3VudCQgKyAxO1xuICAgICAgICBob3N0UmVmLiRmbGFncyQgJj0gfjEwMjQgLyogSE9TVF9GTEFHUy5kZXZPblJlbmRlciAqLztcbiAgICB9XG4gICAgaWYgKEJVSUxELmh5ZHJhdGVTZXJ2ZXJTaWRlKSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICAvLyBtYW51YWxseSBjb25uZWN0ZWQgY2hpbGQgY29tcG9uZW50cyBkdXJpbmcgc2VydmVyLXNpZGUgaHlkcmF0ZVxuICAgICAgICAgICAgc2VydmVyU2lkZUNvbm5lY3RlZChlbG0pO1xuICAgICAgICAgICAgaWYgKGlzSW5pdGlhbExvYWQpIHtcbiAgICAgICAgICAgICAgICAvLyB1c2luZyBvbmx5IGR1cmluZyBzZXJ2ZXItc2lkZSBoeWRyYXRlXG4gICAgICAgICAgICAgICAgaWYgKGhvc3RSZWYuJGNtcE1ldGEkLiRmbGFncyQgJiAxIC8qIENNUF9GTEFHUy5zaGFkb3dEb21FbmNhcHN1bGF0aW9uICovKSB7XG4gICAgICAgICAgICAgICAgICAgIGVsbVsncy1lbiddID0gJyc7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2UgaWYgKGhvc3RSZWYuJGNtcE1ldGEkLiRmbGFncyQgJiAyIC8qIENNUF9GTEFHUy5zY29wZWRDc3NFbmNhcHN1bGF0aW9uICovKSB7XG4gICAgICAgICAgICAgICAgICAgIGVsbVsncy1lbiddID0gJ2MnO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBjYXRjaCAoZSkge1xuICAgICAgICAgICAgY29uc29sZUVycm9yKGUsIGVsbSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgaWYgKEJVSUxELmFzeW5jTG9hZGluZyAmJiByYykge1xuICAgICAgICAvLyBvaywgc28gdHVybnMgb3V0IHRoZXJlIGFyZSBzb21lIGNoaWxkIGhvc3QgZWxlbWVudHNcbiAgICAgICAgLy8gd2FpdGluZyBvbiB0aGlzIHBhcmVudCBlbGVtZW50IHRvIGxvYWRcbiAgICAgICAgLy8gbGV0J3MgZmlyZSBvZmYgYWxsIHVwZGF0ZSBjYWxsYmFja3Mgd2FpdGluZ1xuICAgICAgICByYy5tYXAoKGNiKSA9PiBjYigpKTtcbiAgICAgICAgZWxtWydzLXJjJ10gPSB1bmRlZmluZWQ7XG4gICAgfVxuICAgIGVuZFJlbmRlcigpO1xuICAgIGVuZFVwZGF0ZSgpO1xuICAgIGlmIChCVUlMRC5hc3luY0xvYWRpbmcpIHtcbiAgICAgICAgY29uc3QgY2hpbGRyZW5Qcm9taXNlcyA9IChfYSA9IGVsbVsncy1wJ10pICE9PSBudWxsICYmIF9hICE9PSB2b2lkIDAgPyBfYSA6IFtdO1xuICAgICAgICBjb25zdCBwb3N0VXBkYXRlID0gKCkgPT4gcG9zdFVwZGF0ZUNvbXBvbmVudChob3N0UmVmKTtcbiAgICAgICAgaWYgKGNoaWxkcmVuUHJvbWlzZXMubGVuZ3RoID09PSAwKSB7XG4gICAgICAgICAgICBwb3N0VXBkYXRlKCk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBQcm9taXNlLmFsbChjaGlsZHJlblByb21pc2VzKS50aGVuKHBvc3RVcGRhdGUpO1xuICAgICAgICAgICAgaG9zdFJlZi4kZmxhZ3MkIHw9IDQgLyogSE9TVF9GTEFHUy5pc1dhaXRpbmdGb3JDaGlsZHJlbiAqLztcbiAgICAgICAgICAgIGNoaWxkcmVuUHJvbWlzZXMubGVuZ3RoID0gMDtcbiAgICAgICAgfVxuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgcG9zdFVwZGF0ZUNvbXBvbmVudChob3N0UmVmKTtcbiAgICB9XG59O1xuLyoqXG4gKiBIYW5kbGUgbWFraW5nIHRoZSBjYWxsIHRvIHRoZSBWRG9tIHJlbmRlcmVyIHdpdGggdGhlIHByb3BlciBjb250ZXh0IGdpdmVuXG4gKiB2YXJpb3VzIGJ1aWxkIHZhcmlhYmxlc1xuICpcbiAqIEBwYXJhbSBob3N0UmVmIGFuIG9iamVjdCBjb250YWluaW5nIHJlZmVyZW5jZXMgdG8gdGhlIGVsZW1lbnQncyBob3N0IG5vZGUsXG4gKiBWRG9tIG5vZGVzLCBhbmQgb3RoZXIgbWV0YWRhdGFcbiAqIEBwYXJhbSBpbnN0YW5jZSBhIHJlZmVyZW5jZSB0byB0aGUgdW5kZXJseWluZyBob3N0IGVsZW1lbnQgd2hlcmUgaXQgd2lsbCBiZVxuICogcmVuZGVyZWRcbiAqIEBwYXJhbSBlbG0gdGhlIEhvc3QgZWxlbWVudCBmb3IgdGhlIGNvbXBvbmVudFxuICogQHBhcmFtIGlzSW5pdGlhbExvYWQgd2hldGhlciBvciBub3QgdGhpcyBmdW5jdGlvbiBpcyBiZWluZyBjYWxsZWQgYXMgcGFydCBvZlxuICogQHJldHVybnMgYW4gZW1wdHkgcHJvbWlzZVxuICovXG5jb25zdCBjYWxsUmVuZGVyID0gKGhvc3RSZWYsIGluc3RhbmNlLCBlbG0sIGlzSW5pdGlhbExvYWQpID0+IHtcbiAgICAvLyBpbiBvcmRlciBmb3IgYnVuZGxlcnMgdG8gY29ycmVjdGx5IHRyZWUtc2hha2UgdGhlIEJVSUxEIG9iamVjdFxuICAgIC8vIHdlIG5lZWQgdG8gZW5zdXJlIEJVSUxEIGlzIG5vdCBkZW9wdGltaXplZCB3aXRoaW4gYSB0cnkvY2F0Y2hcbiAgICAvLyBodHRwczovL3JvbGx1cGpzLm9yZy9ndWlkZS9lbi8jdHJlZXNoYWtlIHRyeUNhdGNoRGVvcHRpbWl6YXRpb25cbiAgICBjb25zdCBhbGxSZW5kZXJGbiA9IEJVSUxELmFsbFJlbmRlckZuID8gdHJ1ZSA6IGZhbHNlO1xuICAgIGNvbnN0IGxhenlMb2FkID0gQlVJTEQubGF6eUxvYWQgPyB0cnVlIDogZmFsc2U7XG4gICAgY29uc3QgdGFza1F1ZXVlID0gQlVJTEQudGFza1F1ZXVlID8gdHJ1ZSA6IGZhbHNlO1xuICAgIGNvbnN0IHVwZGF0YWJsZSA9IEJVSUxELnVwZGF0YWJsZSA/IHRydWUgOiBmYWxzZTtcbiAgICB0cnkge1xuICAgICAgICByZW5kZXJpbmdSZWYgPSBpbnN0YW5jZTtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIG1pbmlmaWNhdGlvbiBvcHRpbWl6YXRpb246IGBhbGxSZW5kZXJGbmAgaXMgYHRydWVgIGlmIGFsbCBjb21wb25lbnRzIGhhdmUgYSBgcmVuZGVyYFxuICAgICAgICAgKiBtZXRob2QsIHNvIHdlIGNhbiBjYWxsIHRoZSBtZXRob2QgaW1tZWRpYXRlbHkuIElmIG5vdCwgY2hlY2sgYmVmb3JlIGNhbGxpbmcgaXQuXG4gICAgICAgICAqL1xuICAgICAgICBpbnN0YW5jZSA9IGFsbFJlbmRlckZuID8gaW5zdGFuY2UucmVuZGVyKCkgOiBpbnN0YW5jZS5yZW5kZXIgJiYgaW5zdGFuY2UucmVuZGVyKCk7XG4gICAgICAgIGlmICh1cGRhdGFibGUgJiYgdGFza1F1ZXVlKSB7XG4gICAgICAgICAgICBob3N0UmVmLiRmbGFncyQgJj0gfjE2IC8qIEhPU1RfRkxBR1MuaXNRdWV1ZWRGb3JVcGRhdGUgKi87XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHVwZGF0YWJsZSB8fCBsYXp5TG9hZCkge1xuICAgICAgICAgICAgaG9zdFJlZi4kZmxhZ3MkIHw9IDIgLyogSE9TVF9GTEFHUy5oYXNSZW5kZXJlZCAqLztcbiAgICAgICAgfVxuICAgICAgICBpZiAoQlVJTEQuaGFzUmVuZGVyRm4gfHwgQlVJTEQucmVmbGVjdCkge1xuICAgICAgICAgICAgaWYgKEJVSUxELnZkb21SZW5kZXIgfHwgQlVJTEQucmVmbGVjdCkge1xuICAgICAgICAgICAgICAgIC8vIGxvb2tzIGxpa2Ugd2UndmUgZ290IGNoaWxkIG5vZGVzIHRvIHJlbmRlciBpbnRvIHRoaXMgaG9zdCBlbGVtZW50XG4gICAgICAgICAgICAgICAgLy8gb3Igd2UgbmVlZCB0byB1cGRhdGUgdGhlIGNzcyBjbGFzcy9hdHRycyBvbiB0aGUgaG9zdCBlbGVtZW50XG4gICAgICAgICAgICAgICAgLy8gRE9NIFdSSVRFIVxuICAgICAgICAgICAgICAgIGlmIChCVUlMRC5oeWRyYXRlU2VydmVyU2lkZSkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKGluc3RhbmNlKS50aGVuKCh2YWx1ZSkgPT4gcmVuZGVyVmRvbShob3N0UmVmLCB2YWx1ZSwgaXNJbml0aWFsTG9hZCkpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgcmVuZGVyVmRvbShob3N0UmVmLCBpbnN0YW5jZSwgaXNJbml0aWFsTG9hZCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgZWxtLnRleHRDb250ZW50ID0gaW5zdGFuY2U7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgY2F0Y2ggKGUpIHtcbiAgICAgICAgY29uc29sZUVycm9yKGUsIGhvc3RSZWYuJGhvc3RFbGVtZW50JCk7XG4gICAgfVxuICAgIHJlbmRlcmluZ1JlZiA9IG51bGw7XG4gICAgcmV0dXJuIG51bGw7XG59O1xuY29uc3QgZ2V0UmVuZGVyaW5nUmVmID0gKCkgPT4gcmVuZGVyaW5nUmVmO1xuY29uc3QgcG9zdFVwZGF0ZUNvbXBvbmVudCA9IChob3N0UmVmKSA9PiB7XG4gICAgY29uc3QgdGFnTmFtZSA9IGhvc3RSZWYuJGNtcE1ldGEkLiR0YWdOYW1lJDtcbiAgICBjb25zdCBlbG0gPSBob3N0UmVmLiRob3N0RWxlbWVudCQ7XG4gICAgY29uc3QgZW5kUG9zdFVwZGF0ZSA9IGNyZWF0ZVRpbWUoJ3Bvc3RVcGRhdGUnLCB0YWdOYW1lKTtcbiAgICBjb25zdCBpbnN0YW5jZSA9IEJVSUxELmxhenlMb2FkID8gaG9zdFJlZi4kbGF6eUluc3RhbmNlJCA6IGVsbTtcbiAgICBjb25zdCBhbmNlc3RvckNvbXBvbmVudCA9IGhvc3RSZWYuJGFuY2VzdG9yQ29tcG9uZW50JDtcbiAgICBpZiAoQlVJTEQuY21wRGlkUmVuZGVyKSB7XG4gICAgICAgIGlmIChCVUlMRC5pc0Rldikge1xuICAgICAgICAgICAgaG9zdFJlZi4kZmxhZ3MkIHw9IDEwMjQgLyogSE9TVF9GTEFHUy5kZXZPblJlbmRlciAqLztcbiAgICAgICAgfVxuICAgICAgICBzYWZlQ2FsbChpbnN0YW5jZSwgJ2NvbXBvbmVudERpZFJlbmRlcicpO1xuICAgICAgICBpZiAoQlVJTEQuaXNEZXYpIHtcbiAgICAgICAgICAgIGhvc3RSZWYuJGZsYWdzJCAmPSB+MTAyNCAvKiBIT1NUX0ZMQUdTLmRldk9uUmVuZGVyICovO1xuICAgICAgICB9XG4gICAgfVxuICAgIGVtaXRMaWZlY3ljbGVFdmVudChlbG0sICdjb21wb25lbnREaWRSZW5kZXInKTtcbiAgICBpZiAoIShob3N0UmVmLiRmbGFncyQgJiA2NCAvKiBIT1NUX0ZMQUdTLmhhc0xvYWRlZENvbXBvbmVudCAqLykpIHtcbiAgICAgICAgaG9zdFJlZi4kZmxhZ3MkIHw9IDY0IC8qIEhPU1RfRkxBR1MuaGFzTG9hZGVkQ29tcG9uZW50ICovO1xuICAgICAgICBpZiAoQlVJTEQuYXN5bmNMb2FkaW5nICYmIEJVSUxELmNzc0Fubm90YXRpb25zKSB7XG4gICAgICAgICAgICAvLyBET00gV1JJVEUhXG4gICAgICAgICAgICBhZGRIeWRyYXRlZEZsYWcoZWxtKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoQlVJTEQuY21wRGlkTG9hZCkge1xuICAgICAgICAgICAgaWYgKEJVSUxELmlzRGV2KSB7XG4gICAgICAgICAgICAgICAgaG9zdFJlZi4kZmxhZ3MkIHw9IDIwNDggLyogSE9TVF9GTEFHUy5kZXZPbkRpZExvYWQgKi87XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBzYWZlQ2FsbChpbnN0YW5jZSwgJ2NvbXBvbmVudERpZExvYWQnKTtcbiAgICAgICAgICAgIGlmIChCVUlMRC5pc0Rldikge1xuICAgICAgICAgICAgICAgIGhvc3RSZWYuJGZsYWdzJCAmPSB+MjA0OCAvKiBIT1NUX0ZMQUdTLmRldk9uRGlkTG9hZCAqLztcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBlbWl0TGlmZWN5Y2xlRXZlbnQoZWxtLCAnY29tcG9uZW50RGlkTG9hZCcpO1xuICAgICAgICBlbmRQb3N0VXBkYXRlKCk7XG4gICAgICAgIGlmIChCVUlMRC5hc3luY0xvYWRpbmcpIHtcbiAgICAgICAgICAgIGhvc3RSZWYuJG9uUmVhZHlSZXNvbHZlJChlbG0pO1xuICAgICAgICAgICAgaWYgKCFhbmNlc3RvckNvbXBvbmVudCkge1xuICAgICAgICAgICAgICAgIGFwcERpZExvYWQodGFnTmFtZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIGlmIChCVUlMRC5jbXBEaWRVcGRhdGUpIHtcbiAgICAgICAgICAgIC8vIHdlJ3ZlIGFscmVhZHkgbG9hZGVkIHRoaXMgY29tcG9uZW50XG4gICAgICAgICAgICAvLyBmaXJlIG9mZiB0aGUgdXNlcidzIGNvbXBvbmVudERpZFVwZGF0ZSBtZXRob2QgKGlmIG9uZSB3YXMgcHJvdmlkZWQpXG4gICAgICAgICAgICAvLyBjb21wb25lbnREaWRVcGRhdGUgcnVucyBBRlRFUiByZW5kZXIoKSBoYXMgYmVlbiBjYWxsZWRcbiAgICAgICAgICAgIC8vIGFuZCBhbGwgY2hpbGQgY29tcG9uZW50cyBoYXZlIGZpbmlzaGVkIHVwZGF0aW5nXG4gICAgICAgICAgICBpZiAoQlVJTEQuaXNEZXYpIHtcbiAgICAgICAgICAgICAgICBob3N0UmVmLiRmbGFncyQgfD0gMTAyNCAvKiBIT1NUX0ZMQUdTLmRldk9uUmVuZGVyICovO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgc2FmZUNhbGwoaW5zdGFuY2UsICdjb21wb25lbnREaWRVcGRhdGUnKTtcbiAgICAgICAgICAgIGlmIChCVUlMRC5pc0Rldikge1xuICAgICAgICAgICAgICAgIGhvc3RSZWYuJGZsYWdzJCAmPSB+MTAyNCAvKiBIT1NUX0ZMQUdTLmRldk9uUmVuZGVyICovO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGVtaXRMaWZlY3ljbGVFdmVudChlbG0sICdjb21wb25lbnREaWRVcGRhdGUnKTtcbiAgICAgICAgZW5kUG9zdFVwZGF0ZSgpO1xuICAgIH1cbiAgICBpZiAoQlVJTEQubWV0aG9kICYmIEJVSUxELmxhenlMb2FkKSB7XG4gICAgICAgIGhvc3RSZWYuJG9uSW5zdGFuY2VSZXNvbHZlJChlbG0pO1xuICAgIH1cbiAgICAvLyBsb2FkIGV2ZW50cyBmaXJlIGZyb20gYm90dG9tIHRvIHRvcFxuICAgIC8vIHRoZSBkZWVwZXN0IGVsZW1lbnRzIGxvYWQgZmlyc3QgdGhlbiBidWJibGVzIHVwXG4gICAgaWYgKEJVSUxELmFzeW5jTG9hZGluZykge1xuICAgICAgICBpZiAoaG9zdFJlZi4kb25SZW5kZXJSZXNvbHZlJCkge1xuICAgICAgICAgICAgaG9zdFJlZi4kb25SZW5kZXJSZXNvbHZlJCgpO1xuICAgICAgICAgICAgaG9zdFJlZi4kb25SZW5kZXJSZXNvbHZlJCA9IHVuZGVmaW5lZDtcbiAgICAgICAgfVxuICAgICAgICBpZiAoaG9zdFJlZi4kZmxhZ3MkICYgNTEyIC8qIEhPU1RfRkxBR1MubmVlZHNSZXJlbmRlciAqLykge1xuICAgICAgICAgICAgbmV4dFRpY2soKCkgPT4gc2NoZWR1bGVVcGRhdGUoaG9zdFJlZiwgZmFsc2UpKTtcbiAgICAgICAgfVxuICAgICAgICBob3N0UmVmLiRmbGFncyQgJj0gfig0IC8qIEhPU1RfRkxBR1MuaXNXYWl0aW5nRm9yQ2hpbGRyZW4gKi8gfCA1MTIgLyogSE9TVF9GTEFHUy5uZWVkc1JlcmVuZGVyICovKTtcbiAgICB9XG4gICAgLy8gKCDigKJf4oCiKVxuICAgIC8vICgg4oCiX+KAoik+4oyQ4pagLeKWoFxuICAgIC8vICjijJDilqBf4pagKVxufTtcbmNvbnN0IGZvcmNlVXBkYXRlID0gKHJlZikgPT4ge1xuICAgIGlmIChCVUlMRC51cGRhdGFibGUgJiYgKEJ1aWxkLmlzQnJvd3NlciB8fCBCdWlsZC5pc1Rlc3RpbmcpKSB7XG4gICAgICAgIGNvbnN0IGhvc3RSZWYgPSBnZXRIb3N0UmVmKHJlZik7XG4gICAgICAgIGNvbnN0IGlzQ29ubmVjdGVkID0gaG9zdFJlZi4kaG9zdEVsZW1lbnQkLmlzQ29ubmVjdGVkO1xuICAgICAgICBpZiAoaXNDb25uZWN0ZWQgJiZcbiAgICAgICAgICAgIChob3N0UmVmLiRmbGFncyQgJiAoMiAvKiBIT1NUX0ZMQUdTLmhhc1JlbmRlcmVkICovIHwgMTYgLyogSE9TVF9GTEFHUy5pc1F1ZXVlZEZvclVwZGF0ZSAqLykpID09PSAyIC8qIEhPU1RfRkxBR1MuaGFzUmVuZGVyZWQgKi8pIHtcbiAgICAgICAgICAgIHNjaGVkdWxlVXBkYXRlKGhvc3RSZWYsIGZhbHNlKTtcbiAgICAgICAgfVxuICAgICAgICAvLyBSZXR1cm5zIFwidHJ1ZVwiIHdoZW4gdGhlIGZvcmNlZCB1cGRhdGUgd2FzIHN1Y2Nlc3NmdWxseSBzY2hlZHVsZWRcbiAgICAgICAgcmV0dXJuIGlzQ29ubmVjdGVkO1xuICAgIH1cbiAgICByZXR1cm4gZmFsc2U7XG59O1xuY29uc3QgYXBwRGlkTG9hZCA9ICh3aG8pID0+IHtcbiAgICAvLyBvbiBhcHBsb2FkXG4gICAgLy8gd2UgaGF2ZSBmaW5pc2ggdGhlIGZpcnN0IGJpZyBpbml0aWFsIHJlbmRlclxuICAgIGlmIChCVUlMRC5jc3NBbm5vdGF0aW9ucykge1xuICAgICAgICBhZGRIeWRyYXRlZEZsYWcoZG9jLmRvY3VtZW50RWxlbWVudCk7XG4gICAgfVxuICAgIGlmIChCVUlMRC5hc3luY1F1ZXVlKSB7XG4gICAgICAgIHBsdC4kZmxhZ3MkIHw9IDIgLyogUExBVEZPUk1fRkxBR1MuYXBwTG9hZGVkICovO1xuICAgIH1cbiAgICBuZXh0VGljaygoKSA9PiBlbWl0RXZlbnQod2luLCAnYXBwbG9hZCcsIHsgZGV0YWlsOiB7IG5hbWVzcGFjZTogTkFNRVNQQUNFIH0gfSkpO1xuICAgIGlmIChCVUlMRC5wcm9maWxlICYmIHBlcmZvcm1hbmNlLm1lYXN1cmUpIHtcbiAgICAgICAgcGVyZm9ybWFuY2UubWVhc3VyZShgW1N0ZW5jaWxdICR7TkFNRVNQQUNFfSBpbml0aWFsIGxvYWQgKGJ5ICR7d2hvfSlgLCAnc3Q6YXBwOnN0YXJ0Jyk7XG4gICAgfVxufTtcbi8qKlxuICogQWxsb3dzIHRvIHNhZmVseSBjYWxsIGEgbWV0aG9kLCBlLmcuIGBjb21wb25lbnREaWRMb2FkYCwgb24gYW4gaW5zdGFuY2UsXG4gKiBlLmcuIGN1c3RvbSBlbGVtZW50IG5vZGUuIElmIGEgYnVpbGQgZmlndXJlcyBvdXQgdGhhdCBlLmcuIG5vIGNvbXBvbmVudFxuICogaGFzIGEgYGNvbXBvbmVudERpZExvYWRgIG1ldGhvZCwgdGhlIGluc3RhbmNlIG1ldGhvZCBnZXRzIHJlbW92ZWQgZnJvbSB0aGVcbiAqIG91dHB1dCBidW5kbGUgYW5kIHRoaXMgZnVuY3Rpb24gcmV0dXJucyBgdW5kZWZpbmVkYC5cbiAqIEBwYXJhbSBpbnN0YW5jZSBhbnkgb2JqZWN0IHRoYXQgbWF5IG9yIG1heSBub3QgY29udGFpbiBtZXRob2RzXG4gKiBAcGFyYW0gbWV0aG9kIG1ldGhvZCBuYW1lXG4gKiBAcGFyYW0gYXJnIHNpbmdsZSBhcmJpdHJhcnkgYXJndW1lbnRcbiAqIEByZXR1cm5zIHJlc3VsdCBvZiBtZXRob2QgY2FsbCBpZiBpdCBleGlzdHMsIG90aGVyd2lzZSBgdW5kZWZpbmVkYFxuICovXG5jb25zdCBzYWZlQ2FsbCA9IChpbnN0YW5jZSwgbWV0aG9kLCBhcmcpID0+IHtcbiAgICBpZiAoaW5zdGFuY2UgJiYgaW5zdGFuY2VbbWV0aG9kXSkge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgcmV0dXJuIGluc3RhbmNlW21ldGhvZF0oYXJnKTtcbiAgICAgICAgfVxuICAgICAgICBjYXRjaCAoZSkge1xuICAgICAgICAgICAgY29uc29sZUVycm9yKGUpO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiB1bmRlZmluZWQ7XG59O1xuLyoqXG4gKiBGb3IgZGVidWdnaW5nIHB1cnBvc2VzIGFzIGBCVUlMRC5saWZlY3ljbGVET01FdmVudHNgIGlzIGBmYWxzZWAgYnkgZGVmYXVsdCBhbmQgd2lsbFxuICogZ2V0IHJlbW92ZWQgYnkgdGhlIGNvbXBpbGVyLiBVc2VkIGZvciB0aW1pbmcgZXZlbnRzIHRvIHNlZSBob3cgbG9uZyB0aGV5IHRha2UuXG4gKiBAcGFyYW0gZWxtIHRoZSB0YXJnZXQgb2YgdGhlIEV2ZW50XG4gKiBAcGFyYW0gbGlmZWN5Y2xlTmFtZSBuYW1lIG9mIHRoZSBldmVudFxuICovXG5jb25zdCBlbWl0TGlmZWN5Y2xlRXZlbnQgPSAoZWxtLCBsaWZlY3ljbGVOYW1lKSA9PiB7XG4gICAgaWYgKEJVSUxELmxpZmVjeWNsZURPTUV2ZW50cykge1xuICAgICAgICBlbWl0RXZlbnQoZWxtLCAnc3RlbmNpbF8nICsgbGlmZWN5Y2xlTmFtZSwge1xuICAgICAgICAgICAgYnViYmxlczogdHJ1ZSxcbiAgICAgICAgICAgIGNvbXBvc2VkOiB0cnVlLFxuICAgICAgICAgICAgZGV0YWlsOiB7XG4gICAgICAgICAgICAgICAgbmFtZXNwYWNlOiBOQU1FU1BBQ0UsXG4gICAgICAgICAgICB9LFxuICAgICAgICB9KTtcbiAgICB9XG59O1xuY29uc3QgYWRkSHlkcmF0ZWRGbGFnID0gKGVsbSkgPT4gQlVJTEQuaHlkcmF0ZWRDbGFzc1xuICAgID8gZWxtLmNsYXNzTGlzdC5hZGQoJ2h5ZHJhdGVkJylcbiAgICA6IEJVSUxELmh5ZHJhdGVkQXR0cmlidXRlXG4gICAgICAgID8gZWxtLnNldEF0dHJpYnV0ZSgnaHlkcmF0ZWQnLCAnJylcbiAgICAgICAgOiB1bmRlZmluZWQ7XG5jb25zdCBzZXJ2ZXJTaWRlQ29ubmVjdGVkID0gKGVsbSkgPT4ge1xuICAgIGNvbnN0IGNoaWxkcmVuID0gZWxtLmNoaWxkcmVuO1xuICAgIGlmIChjaGlsZHJlbiAhPSBudWxsKSB7XG4gICAgICAgIGZvciAobGV0IGkgPSAwLCBpaSA9IGNoaWxkcmVuLmxlbmd0aDsgaSA8IGlpOyBpKyspIHtcbiAgICAgICAgICAgIGNvbnN0IGNoaWxkRWxtID0gY2hpbGRyZW5baV07XG4gICAgICAgICAgICBpZiAodHlwZW9mIGNoaWxkRWxtLmNvbm5lY3RlZENhbGxiYWNrID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgICAgICAgY2hpbGRFbG0uY29ubmVjdGVkQ2FsbGJhY2soKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHNlcnZlclNpZGVDb25uZWN0ZWQoY2hpbGRFbG0pO1xuICAgICAgICB9XG4gICAgfVxufTtcbmNvbnN0IGdldFZhbHVlID0gKHJlZiwgcHJvcE5hbWUpID0+IGdldEhvc3RSZWYocmVmKS4kaW5zdGFuY2VWYWx1ZXMkLmdldChwcm9wTmFtZSk7XG5jb25zdCBzZXRWYWx1ZSA9IChyZWYsIHByb3BOYW1lLCBuZXdWYWwsIGNtcE1ldGEpID0+IHtcbiAgICAvLyBjaGVjayBvdXIgbmV3IHByb3BlcnR5IHZhbHVlIGFnYWluc3Qgb3VyIGludGVybmFsIHZhbHVlXG4gICAgY29uc3QgaG9zdFJlZiA9IGdldEhvc3RSZWYocmVmKTtcbiAgICBjb25zdCBlbG0gPSBCVUlMRC5sYXp5TG9hZCA/IGhvc3RSZWYuJGhvc3RFbGVtZW50JCA6IHJlZjtcbiAgICBjb25zdCBvbGRWYWwgPSBob3N0UmVmLiRpbnN0YW5jZVZhbHVlcyQuZ2V0KHByb3BOYW1lKTtcbiAgICBjb25zdCBmbGFncyA9IGhvc3RSZWYuJGZsYWdzJDtcbiAgICBjb25zdCBpbnN0YW5jZSA9IEJVSUxELmxhenlMb2FkID8gaG9zdFJlZi4kbGF6eUluc3RhbmNlJCA6IGVsbTtcbiAgICBuZXdWYWwgPSBwYXJzZVByb3BlcnR5VmFsdWUobmV3VmFsLCBjbXBNZXRhLiRtZW1iZXJzJFtwcm9wTmFtZV1bMF0pO1xuICAgIC8vIGV4cGxpY2l0bHkgY2hlY2sgZm9yIE5hTiBvbiBib3RoIHNpZGVzLCBhcyBgTmFOID09PSBOYU5gIGlzIGFsd2F5cyBmYWxzZVxuICAgIGNvbnN0IGFyZUJvdGhOYU4gPSBOdW1iZXIuaXNOYU4ob2xkVmFsKSAmJiBOdW1iZXIuaXNOYU4obmV3VmFsKTtcbiAgICBjb25zdCBkaWRWYWx1ZUNoYW5nZSA9IG5ld1ZhbCAhPT0gb2xkVmFsICYmICFhcmVCb3RoTmFOO1xuICAgIGlmICgoIUJVSUxELmxhenlMb2FkIHx8ICEoZmxhZ3MgJiA4IC8qIEhPU1RfRkxBR1MuaXNDb25zdHJ1Y3RpbmdJbnN0YW5jZSAqLykgfHwgb2xkVmFsID09PSB1bmRlZmluZWQpICYmIGRpZFZhbHVlQ2hhbmdlKSB7XG4gICAgICAgIC8vIGdhZHpvb2tzISB0aGUgcHJvcGVydHkncyB2YWx1ZSBoYXMgY2hhbmdlZCEhXG4gICAgICAgIC8vIHNldCBvdXIgbmV3IHZhbHVlIVxuICAgICAgICBob3N0UmVmLiRpbnN0YW5jZVZhbHVlcyQuc2V0KHByb3BOYW1lLCBuZXdWYWwpO1xuICAgICAgICBpZiAoQlVJTEQuaXNEZXYpIHtcbiAgICAgICAgICAgIGlmIChob3N0UmVmLiRmbGFncyQgJiAxMDI0IC8qIEhPU1RfRkxBR1MuZGV2T25SZW5kZXIgKi8pIHtcbiAgICAgICAgICAgICAgICBjb25zb2xlRGV2V2FybihgVGhlIHN0YXRlL3Byb3AgXCIke3Byb3BOYW1lfVwiIGNoYW5nZWQgZHVyaW5nIHJlbmRlcmluZy4gVGhpcyBjYW4gcG90ZW50aWFsbHkgbGVhZCB0byBpbmZpbml0ZS1sb29wcyBhbmQgb3RoZXIgYnVncy5gLCAnXFxuRWxlbWVudCcsIGVsbSwgJ1xcbk5ldyB2YWx1ZScsIG5ld1ZhbCwgJ1xcbk9sZCB2YWx1ZScsIG9sZFZhbCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIGlmIChob3N0UmVmLiRmbGFncyQgJiAyMDQ4IC8qIEhPU1RfRkxBR1MuZGV2T25EaWRMb2FkICovKSB7XG4gICAgICAgICAgICAgICAgY29uc29sZURldldhcm4oYFRoZSBzdGF0ZS9wcm9wIFwiJHtwcm9wTmFtZX1cIiBjaGFuZ2VkIGR1cmluZyBcImNvbXBvbmVudERpZExvYWQoKVwiLCB0aGlzIHRyaWdnZXJzIGV4dHJhIHJlLXJlbmRlcnMsIHRyeSB0byBzZXR1cCBvbiBcImNvbXBvbmVudFdpbGxMb2FkKClcImAsICdcXG5FbGVtZW50JywgZWxtLCAnXFxuTmV3IHZhbHVlJywgbmV3VmFsLCAnXFxuT2xkIHZhbHVlJywgb2xkVmFsKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBpZiAoIUJVSUxELmxhenlMb2FkIHx8IGluc3RhbmNlKSB7XG4gICAgICAgICAgICAvLyBnZXQgYW4gYXJyYXkgb2YgbWV0aG9kIG5hbWVzIG9mIHdhdGNoIGZ1bmN0aW9ucyB0byBjYWxsXG4gICAgICAgICAgICBpZiAoQlVJTEQud2F0Y2hDYWxsYmFjayAmJiBjbXBNZXRhLiR3YXRjaGVycyQgJiYgZmxhZ3MgJiAxMjggLyogSE9TVF9GTEFHUy5pc1dhdGNoUmVhZHkgKi8pIHtcbiAgICAgICAgICAgICAgICBjb25zdCB3YXRjaE1ldGhvZHMgPSBjbXBNZXRhLiR3YXRjaGVycyRbcHJvcE5hbWVdO1xuICAgICAgICAgICAgICAgIGlmICh3YXRjaE1ldGhvZHMpIHtcbiAgICAgICAgICAgICAgICAgICAgLy8gdGhpcyBpbnN0YW5jZSBpcyB3YXRjaGluZyBmb3Igd2hlbiB0aGlzIHByb3BlcnR5IGNoYW5nZWRcbiAgICAgICAgICAgICAgICAgICAgd2F0Y2hNZXRob2RzLm1hcCgod2F0Y2hNZXRob2ROYW1lKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIGZpcmUgb2ZmIGVhY2ggb2YgdGhlIHdhdGNoIG1ldGhvZHMgdGhhdCBhcmUgd2F0Y2hpbmcgdGhpcyBwcm9wZXJ0eVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGluc3RhbmNlW3dhdGNoTWV0aG9kTmFtZV0obmV3VmFsLCBvbGRWYWwsIHByb3BOYW1lKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGNhdGNoIChlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZUVycm9yKGUsIGVsbSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChCVUlMRC51cGRhdGFibGUgJiZcbiAgICAgICAgICAgICAgICAoZmxhZ3MgJiAoMiAvKiBIT1NUX0ZMQUdTLmhhc1JlbmRlcmVkICovIHwgMTYgLyogSE9TVF9GTEFHUy5pc1F1ZXVlZEZvclVwZGF0ZSAqLykpID09PSAyIC8qIEhPU1RfRkxBR1MuaGFzUmVuZGVyZWQgKi8pIHtcbiAgICAgICAgICAgICAgICBpZiAoQlVJTEQuY21wU2hvdWxkVXBkYXRlICYmIGluc3RhbmNlLmNvbXBvbmVudFNob3VsZFVwZGF0ZSkge1xuICAgICAgICAgICAgICAgICAgICBpZiAoaW5zdGFuY2UuY29tcG9uZW50U2hvdWxkVXBkYXRlKG5ld1ZhbCwgb2xkVmFsLCBwcm9wTmFtZSkgPT09IGZhbHNlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgLy8gbG9va3MgbGlrZSB0aGlzIHZhbHVlIGFjdHVhbGx5IGNoYW5nZWQsIHNvIHdlJ3ZlIGdvdCB3b3JrIHRvIGRvIVxuICAgICAgICAgICAgICAgIC8vIGJ1dCBvbmx5IGlmIHdlJ3ZlIGFscmVhZHkgcmVuZGVyZWQsIG90aGVyd2lzZSBqdXN0IGNoaWxsIG91dFxuICAgICAgICAgICAgICAgIC8vIHF1ZXVlIHRoYXQgd2UgbmVlZCB0byBkbyBhbiB1cGRhdGUsIGJ1dCBkb24ndCB3b3JyeSBhYm91dCBxdWV1aW5nXG4gICAgICAgICAgICAgICAgLy8gdXAgbWlsbGlvbnMgY3V6IHRoaXMgZnVuY3Rpb24gZW5zdXJlcyBpdCBvbmx5IHJ1bnMgb25jZVxuICAgICAgICAgICAgICAgIHNjaGVkdWxlVXBkYXRlKGhvc3RSZWYsIGZhbHNlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbn07XG4vKipcbiAqIEF0dGFjaCBhIHNlcmllcyBvZiBydW50aW1lIGNvbnN0cnVjdHMgdG8gYSBjb21waWxlZCBTdGVuY2lsIGNvbXBvbmVudFxuICogY29uc3RydWN0b3IsIGluY2x1ZGluZyBnZXR0ZXJzIGFuZCBzZXR0ZXJzIGZvciB0aGUgYEBQcm9wYCBhbmQgYEBTdGF0ZWBcbiAqIGRlY29yYXRvcnMsIGNhbGxiYWNrcyBmb3Igd2hlbiBhdHRyaWJ1dGVzIGNoYW5nZSwgYW5kIHNvIG9uLlxuICpcbiAqIEBwYXJhbSBDc3RyIHRoZSBjb25zdHJ1Y3RvciBmb3IgYSBjb21wb25lbnQgdGhhdCB3ZSBuZWVkIHRvIHByb2Nlc3NcbiAqIEBwYXJhbSBjbXBNZXRhIG1ldGFkYXRhIGNvbGxlY3RlZCBwcmV2aW91c2x5IGFib3V0IHRoZSBjb21wb25lbnRcbiAqIEBwYXJhbSBmbGFncyBhIG51bWJlciB1c2VkIHRvIHN0b3JlIGEgc2VyaWVzIG9mIGJpdCBmbGFnc1xuICogQHJldHVybnMgYSByZWZlcmVuY2UgdG8gdGhlIHNhbWUgY29uc3RydWN0b3IgcGFzc2VkIGluIChidXQgbm93IG11dGF0ZWQpXG4gKi9cbmNvbnN0IHByb3h5Q29tcG9uZW50ID0gKENzdHIsIGNtcE1ldGEsIGZsYWdzKSA9PiB7XG4gICAgdmFyIF9hO1xuICAgIGlmIChCVUlMRC5tZW1iZXIgJiYgY21wTWV0YS4kbWVtYmVycyQpIHtcbiAgICAgICAgaWYgKEJVSUxELndhdGNoQ2FsbGJhY2sgJiYgQ3N0ci53YXRjaGVycykge1xuICAgICAgICAgICAgY21wTWV0YS4kd2F0Y2hlcnMkID0gQ3N0ci53YXRjaGVycztcbiAgICAgICAgfVxuICAgICAgICAvLyBJdCdzIGJldHRlciB0byBoYXZlIGEgY29uc3QgdGhhbiB0d28gT2JqZWN0LmVudHJpZXMoKVxuICAgICAgICBjb25zdCBtZW1iZXJzID0gT2JqZWN0LmVudHJpZXMoY21wTWV0YS4kbWVtYmVycyQpO1xuICAgICAgICBjb25zdCBwcm90b3R5cGUgPSBDc3RyLnByb3RvdHlwZTtcbiAgICAgICAgbWVtYmVycy5tYXAoKFttZW1iZXJOYW1lLCBbbWVtYmVyRmxhZ3NdXSkgPT4ge1xuICAgICAgICAgICAgaWYgKChCVUlMRC5wcm9wIHx8IEJVSUxELnN0YXRlKSAmJlxuICAgICAgICAgICAgICAgIChtZW1iZXJGbGFncyAmIDMxIC8qIE1FTUJFUl9GTEFHUy5Qcm9wICovIHx8XG4gICAgICAgICAgICAgICAgICAgICgoIUJVSUxELmxhenlMb2FkIHx8IGZsYWdzICYgMiAvKiBQUk9YWV9GTEFHUy5wcm94eVN0YXRlICovKSAmJiBtZW1iZXJGbGFncyAmIDMyIC8qIE1FTUJFUl9GTEFHUy5TdGF0ZSAqLykpKSB7XG4gICAgICAgICAgICAgICAgLy8gcHJveHlDb21wb25lbnQgLSBwcm9wXG4gICAgICAgICAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHByb3RvdHlwZSwgbWVtYmVyTmFtZSwge1xuICAgICAgICAgICAgICAgICAgICBnZXQoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBwcm94eUNvbXBvbmVudCwgZ2V0IHZhbHVlXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gZ2V0VmFsdWUodGhpcywgbWVtYmVyTmFtZSk7XG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIHNldChuZXdWYWx1ZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8gb25seSBkdXJpbmcgZGV2IHRpbWVcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChCVUlMRC5pc0Rldikge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHJlZiA9IGdldEhvc3RSZWYodGhpcyk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIHdlIGFyZSBwcm94eWluZyB0aGUgaW5zdGFuY2UgKG5vdCBlbGVtZW50KVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIChmbGFncyAmIDEgLyogUFJPWFlfRkxBR1MuaXNFbGVtZW50Q29uc3RydWN0b3IgKi8pID09PSAwICYmXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIHRoZSBlbGVtZW50IGlzIG5vdCBjb25zdHJ1Y3RpbmdcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKHJlZi4kZmxhZ3MkICYgOCAvKiBIT1NUX0ZMQUdTLmlzQ29uc3RydWN0aW5nSW5zdGFuY2UgKi8pID09PSAwICYmXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIHRoZSBtZW1iZXIgaXMgYSBwcm9wXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIChtZW1iZXJGbGFncyAmIDMxIC8qIE1FTUJFUl9GTEFHUy5Qcm9wICovKSAhPT0gMCAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyB0aGUgbWVtYmVyIGlzIG5vdCBtdXRhYmxlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIChtZW1iZXJGbGFncyAmIDEwMjQgLyogTUVNQkVSX0ZMQUdTLk11dGFibGUgKi8pID09PSAwKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGVEZXZXYXJuKGBAUHJvcCgpIFwiJHttZW1iZXJOYW1lfVwiIG9uIDwke2NtcE1ldGEuJHRhZ05hbWUkfT4gaXMgaW1tdXRhYmxlIGJ1dCB3YXMgbW9kaWZpZWQgZnJvbSB3aXRoaW4gdGhlIGNvbXBvbmVudC5cXG5Nb3JlIGluZm9ybWF0aW9uOiBodHRwczovL3N0ZW5jaWxqcy5jb20vZG9jcy9wcm9wZXJ0aWVzI3Byb3AtbXV0YWJpbGl0eWApO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIHByb3h5Q29tcG9uZW50LCBzZXQgdmFsdWVcbiAgICAgICAgICAgICAgICAgICAgICAgIHNldFZhbHVlKHRoaXMsIG1lbWJlck5hbWUsIG5ld1ZhbHVlLCBjbXBNZXRhKTtcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZiAoQlVJTEQubGF6eUxvYWQgJiZcbiAgICAgICAgICAgICAgICBCVUlMRC5tZXRob2QgJiZcbiAgICAgICAgICAgICAgICBmbGFncyAmIDEgLyogUFJPWFlfRkxBR1MuaXNFbGVtZW50Q29uc3RydWN0b3IgKi8gJiZcbiAgICAgICAgICAgICAgICBtZW1iZXJGbGFncyAmIDY0IC8qIE1FTUJFUl9GTEFHUy5NZXRob2QgKi8pIHtcbiAgICAgICAgICAgICAgICAvLyBwcm94eUNvbXBvbmVudCAtIG1ldGhvZFxuICAgICAgICAgICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShwcm90b3R5cGUsIG1lbWJlck5hbWUsIHtcbiAgICAgICAgICAgICAgICAgICAgdmFsdWUoLi4uYXJncykge1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgcmVmID0gZ2V0SG9zdFJlZih0aGlzKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiByZWYuJG9uSW5zdGFuY2VQcm9taXNlJC50aGVuKCgpID0+IHJlZi4kbGF6eUluc3RhbmNlJFttZW1iZXJOYW1lXSguLi5hcmdzKSk7XG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgICBpZiAoQlVJTEQub2JzZXJ2ZUF0dHJpYnV0ZSAmJiAoIUJVSUxELmxhenlMb2FkIHx8IGZsYWdzICYgMSAvKiBQUk9YWV9GTEFHUy5pc0VsZW1lbnRDb25zdHJ1Y3RvciAqLykpIHtcbiAgICAgICAgICAgIGNvbnN0IGF0dHJOYW1lVG9Qcm9wTmFtZSA9IG5ldyBNYXAoKTtcbiAgICAgICAgICAgIHByb3RvdHlwZS5hdHRyaWJ1dGVDaGFuZ2VkQ2FsbGJhY2sgPSBmdW5jdGlvbiAoYXR0ck5hbWUsIG9sZFZhbHVlLCBuZXdWYWx1ZSkge1xuICAgICAgICAgICAgICAgIHBsdC5qbXAoKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBwcm9wTmFtZSA9IGF0dHJOYW1lVG9Qcm9wTmFtZS5nZXQoYXR0ck5hbWUpO1xuICAgICAgICAgICAgICAgICAgICAvLyAgSW4gYSB3ZWIgY29tcG9uZW50IGxpZmVjeWNsZSB0aGUgYXR0cmlidXRlQ2hhbmdlZENhbGxiYWNrIHJ1bnMgcHJpb3IgdG8gY29ubmVjdGVkQ2FsbGJhY2tcbiAgICAgICAgICAgICAgICAgICAgLy8gIGluIHRoZSBjYXNlIHdoZXJlIGFuIGF0dHJpYnV0ZSB3YXMgc2V0IGlubGluZS5cbiAgICAgICAgICAgICAgICAgICAgLy8gIGBgYGh0bWxcbiAgICAgICAgICAgICAgICAgICAgLy8gICAgPG15LWNvbXBvbmVudCBzb21lLWF0dHJpYnV0ZT1cInNvbWUtdmFsdWVcIj48L215LWNvbXBvbmVudD5cbiAgICAgICAgICAgICAgICAgICAgLy8gIGBgYFxuICAgICAgICAgICAgICAgICAgICAvL1xuICAgICAgICAgICAgICAgICAgICAvLyAgVGhlcmUgaXMgYW4gZWRnZSBjYXNlIHdoZXJlIGEgZGV2ZWxvcGVyIHNldHMgdGhlIGF0dHJpYnV0ZSBpbmxpbmUgb24gYSBjdXN0b20gZWxlbWVudCBhbmQgdGhlblxuICAgICAgICAgICAgICAgICAgICAvLyAgcHJvZ3JhbW1hdGljYWxseSBjaGFuZ2VzIGl0IGJlZm9yZSBpdCBoYXMgYmVlbiB1cGdyYWRlZCBhcyBzaG93biBiZWxvdzpcbiAgICAgICAgICAgICAgICAgICAgLy9cbiAgICAgICAgICAgICAgICAgICAgLy8gIGBgYGh0bWxcbiAgICAgICAgICAgICAgICAgICAgLy8gICAgPCEtLSB0aGlzIGNvbXBvbmVudCBoYXMgX25vdF8gYmVlbiB1cGdyYWRlZCB5ZXQgLS0+XG4gICAgICAgICAgICAgICAgICAgIC8vICAgIDxteS1jb21wb25lbnQgaWQ9XCJ0ZXN0XCIgc29tZS1hdHRyaWJ1dGU9XCJzb21lLXZhbHVlXCI+PC9teS1jb21wb25lbnQ+XG4gICAgICAgICAgICAgICAgICAgIC8vICAgIDxzY3JpcHQ+XG4gICAgICAgICAgICAgICAgICAgIC8vICAgICAgLy8gZ3JhYiBub24tdXBncmFkZWQgY29tcG9uZW50XG4gICAgICAgICAgICAgICAgICAgIC8vICAgICAgZWwgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI3Rlc3RcIik7XG4gICAgICAgICAgICAgICAgICAgIC8vICAgICAgZWwuc29tZUF0dHJpYnV0ZSA9IFwiYW5vdGhlci12YWx1ZVwiO1xuICAgICAgICAgICAgICAgICAgICAvLyAgICAgIC8vIHVwZ3JhZGUgY29tcG9uZW50XG4gICAgICAgICAgICAgICAgICAgIC8vICAgICAgY3VzdG9tRWxlbWVudHMuZGVmaW5lKCdteS1jb21wb25lbnQnLCBNeUNvbXBvbmVudCk7XG4gICAgICAgICAgICAgICAgICAgIC8vICAgIDwvc2NyaXB0PlxuICAgICAgICAgICAgICAgICAgICAvLyAgYGBgXG4gICAgICAgICAgICAgICAgICAgIC8vICBJbiB0aGlzIGNhc2UgaWYgd2UgZG8gbm90IHVuLXNoYWRvdyBoZXJlIGFuZCB1c2UgdGhlIHZhbHVlIG9mIHRoZSBzaGFkb3dpbmcgcHJvcGVydHksIGF0dHJpYnV0ZUNoYW5nZWRDYWxsYmFja1xuICAgICAgICAgICAgICAgICAgICAvLyAgd2lsbCBiZSBjYWxsZWQgd2l0aCBgbmV3VmFsdWUgPSBcInNvbWUtdmFsdWVcImAgYW5kIHdpbGwgc2V0IHRoZSBzaGFkb3dlZCBwcm9wZXJ0eSAodGhpcy5zb21lQXR0cmlidXRlID0gXCJhbm90aGVyLXZhbHVlXCIpXG4gICAgICAgICAgICAgICAgICAgIC8vICB0byB0aGUgdmFsdWUgdGhhdCB3YXMgc2V0IGlubGluZSBpLmUuIFwic29tZS12YWx1ZVwiIGZyb20gYWJvdmUgZXhhbXBsZS4gV2hlblxuICAgICAgICAgICAgICAgICAgICAvLyAgdGhlIGNvbm5lY3RlZENhbGxiYWNrIGF0dGVtcHRzIHRvIHVuLXNoYWRvdyBpdCB3aWxsIHVzZSBcInNvbWUtdmFsdWVcIiBhcyB0aGUgaW5pdGlhbCB2YWx1ZSByYXRoZXIgdGhhbiBcImFub3RoZXItdmFsdWVcIlxuICAgICAgICAgICAgICAgICAgICAvL1xuICAgICAgICAgICAgICAgICAgICAvLyAgVGhlIGNhc2Ugd2hlcmUgdGhlIGF0dHJpYnV0ZSB3YXMgTk9UIHNldCBpbmxpbmUgYnV0IHdhcyBub3Qgc2V0IHByb2dyYW1tYXRpY2FsbHkgc2hhbGwgYmUgaGFuZGxlZC91bi1zaGFkb3dlZFxuICAgICAgICAgICAgICAgICAgICAvLyAgYnkgY29ubmVjdGVkQ2FsbGJhY2sgYXMgdGhpcyBhdHRyaWJ1dGVDaGFuZ2VkQ2FsbGJhY2sgd2lsbCBub3QgZmlyZS5cbiAgICAgICAgICAgICAgICAgICAgLy9cbiAgICAgICAgICAgICAgICAgICAgLy8gIGh0dHBzOi8vZGV2ZWxvcGVycy5nb29nbGUuY29tL3dlYi9mdW5kYW1lbnRhbHMvd2ViLWNvbXBvbmVudHMvYmVzdC1wcmFjdGljZXMjbGF6eS1wcm9wZXJ0aWVzXG4gICAgICAgICAgICAgICAgICAgIC8vXG4gICAgICAgICAgICAgICAgICAgIC8vICBUT0RPKFNURU5DSUwtMTYpIHdlIHNob3VsZCB0aGluayBhYm91dCB3aGV0aGVyIG9yIG5vdCB3ZSBhY3R1YWxseSB3YW50IHRvIGJlIHJlZmxlY3RpbmcgdGhlIGF0dHJpYnV0ZXMgdG9cbiAgICAgICAgICAgICAgICAgICAgLy8gIHByb3BlcnRpZXMgaGVyZSBnaXZlbiB0aGF0IHRoaXMgZ29lcyBhZ2FpbnN0IGJlc3QgcHJhY3RpY2VzIG91dGxpbmVkIGhlcmVcbiAgICAgICAgICAgICAgICAgICAgLy8gIGh0dHBzOi8vZGV2ZWxvcGVycy5nb29nbGUuY29tL3dlYi9mdW5kYW1lbnRhbHMvd2ViLWNvbXBvbmVudHMvYmVzdC1wcmFjdGljZXMjYXZvaWQtcmVlbnRyYW5jeVxuICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5oYXNPd25Qcm9wZXJ0eShwcm9wTmFtZSkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIG5ld1ZhbHVlID0gdGhpc1twcm9wTmFtZV07XG4gICAgICAgICAgICAgICAgICAgICAgICBkZWxldGUgdGhpc1twcm9wTmFtZV07XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgZWxzZSBpZiAocHJvdG90eXBlLmhhc093blByb3BlcnR5KHByb3BOYW1lKSAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgdHlwZW9mIHRoaXNbcHJvcE5hbWVdID09PSAnbnVtYmVyJyAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpc1twcm9wTmFtZV0gPT0gbmV3VmFsdWUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIGlmIHRoZSBwcm9wTmFtZSBleGlzdHMgb24gdGhlIHByb3RvdHlwZSBvZiBgQ3N0cmAsIHRoaXMgdXBkYXRlIG1heSBiZSBhIHJlc3VsdCBvZiBTdGVuY2lsIHVzaW5nIG5hdGl2ZVxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gQVBJcyB0byByZWZsZWN0IHByb3BzIGFzIGF0dHJpYnV0ZXMuIENhbGxzIHRvIGBzZXRBdHRyaWJ1dGUoc29tZUVsZW1lbnQsIHByb3BOYW1lKWAgd2lsbCByZXN1bHQgaW5cbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIGBwcm9wTmFtZWAgdG8gYmUgY29udmVydGVkIHRvIGEgYERPTVN0cmluZ2AsIHdoaWNoIG1heSBub3QgYmUgd2hhdCB3ZSB3YW50IGZvciBvdGhlciBwcmltaXRpdmUgcHJvcHMuXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgZWxzZSBpZiAocHJvcE5hbWUgPT0gbnVsbCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8gQXQgdGhpcyBwb2ludCB3ZSBzaG91bGQga25vdyB0aGlzIGlzIG5vdCBhIFwibWVtYmVyXCIsIHNvIHdlIGNhbiB0cmVhdCBpdCBsaWtlIHdhdGNoaW5nIGFuIGF0dHJpYnV0ZVxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gb24gYSB2YW5pbGxhIHdlYiBjb21wb25lbnRcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGhvc3RSZWYgPSBnZXRIb3N0UmVmKHRoaXMpO1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgZmxhZ3MgPSBob3N0UmVmID09PSBudWxsIHx8IGhvc3RSZWYgPT09IHZvaWQgMCA/IHZvaWQgMCA6IGhvc3RSZWYuJGZsYWdzJDtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIFdlIG9ubHkgd2FudCB0byB0cmlnZ2VyIHRoZSBjYWxsYmFjayhzKSBpZjpcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIDEuIFRoZSBpbnN0YW5jZSBpcyByZWFkeVxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gMi4gVGhlIHdhdGNoZXJzIGFyZSByZWFkeVxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gMy4gVGhlIHZhbHVlIGhhcyBjaGFuZ2VkXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoIShmbGFncyAmIDggLyogSE9TVF9GTEFHUy5pc0NvbnN0cnVjdGluZ0luc3RhbmNlICovKSAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZsYWdzICYgMTI4IC8qIEhPU1RfRkxBR1MuaXNXYXRjaFJlYWR5ICovICYmXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbmV3VmFsdWUgIT09IG9sZFZhbHVlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgZWxtID0gQlVJTEQubGF6eUxvYWQgPyBob3N0UmVmLiRob3N0RWxlbWVudCQgOiB0aGlzO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGluc3RhbmNlID0gQlVJTEQubGF6eUxvYWQgPyBob3N0UmVmLiRsYXp5SW5zdGFuY2UkIDogZWxtO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGVudHJ5ID0gY21wTWV0YS4kd2F0Y2hlcnMkW2F0dHJOYW1lXTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbnRyeSA9PT0gbnVsbCB8fCBlbnRyeSA9PT0gdm9pZCAwID8gdm9pZCAwIDogZW50cnkuZm9yRWFjaCgoY2FsbGJhY2tOYW1lKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChpbnN0YW5jZVtjYWxsYmFja05hbWVdICE9IG51bGwpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGluc3RhbmNlW2NhbGxiYWNrTmFtZV0uY2FsbChpbnN0YW5jZSwgbmV3VmFsdWUsIG9sZFZhbHVlLCBhdHRyTmFtZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB0aGlzW3Byb3BOYW1lXSA9IG5ld1ZhbHVlID09PSBudWxsICYmIHR5cGVvZiB0aGlzW3Byb3BOYW1lXSA9PT0gJ2Jvb2xlYW4nID8gZmFsc2UgOiBuZXdWYWx1ZTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICAvLyBDcmVhdGUgYW4gYXJyYXkgb2YgYXR0cmlidXRlcyB0byBvYnNlcnZlXG4gICAgICAgICAgICAvLyBUaGlzIGxpc3QgaW4gY29tcHJpc2VkIG9mIGFsbCBzdHJpbmdzIHVzZWQgd2l0aGluIGEgYEBXYXRjaCgpYCBkZWNvcmF0b3JcbiAgICAgICAgICAgIC8vIG9uIGEgY29tcG9uZW50IGFzIHdlbGwgYXMgYW55IFN0ZW5jaWwtc3BlY2lmaWMgXCJtZW1iZXJzXCIgKGBAUHJvcCgpYHMgYW5kIGBAU3RhdGUoKWBzKS5cbiAgICAgICAgICAgIC8vIEFzIHN1Y2gsIHRoZXJlIGlzIG5vIHdheSB0byBndWFyYW50ZWUgdHlwZS1zYWZldHkgaGVyZSB0aGF0IGEgdXNlciBoYXNuJ3QgZW50ZXJlZFxuICAgICAgICAgICAgLy8gYW4gaW52YWxpZCBhdHRyaWJ1dGUuXG4gICAgICAgICAgICBDc3RyLm9ic2VydmVkQXR0cmlidXRlcyA9IEFycmF5LmZyb20obmV3IFNldChbXG4gICAgICAgICAgICAgICAgLi4uT2JqZWN0LmtleXMoKF9hID0gY21wTWV0YS4kd2F0Y2hlcnMkKSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiB7fSksXG4gICAgICAgICAgICAgICAgLi4ubWVtYmVyc1xuICAgICAgICAgICAgICAgICAgICAuZmlsdGVyKChbXywgbV0pID0+IG1bMF0gJiAxNSAvKiBNRU1CRVJfRkxBR1MuSGFzQXR0cmlidXRlICovKVxuICAgICAgICAgICAgICAgICAgICAubWFwKChbcHJvcE5hbWUsIG1dKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGF0dHJOYW1lID0gbVsxXSB8fCBwcm9wTmFtZTtcbiAgICAgICAgICAgICAgICAgICAgYXR0ck5hbWVUb1Byb3BOYW1lLnNldChhdHRyTmFtZSwgcHJvcE5hbWUpO1xuICAgICAgICAgICAgICAgICAgICBpZiAoQlVJTEQucmVmbGVjdCAmJiBtWzBdICYgNTEyIC8qIE1FTUJFUl9GTEFHUy5SZWZsZWN0QXR0ciAqLykge1xuICAgICAgICAgICAgICAgICAgICAgICAgY21wTWV0YS4kYXR0cnNUb1JlZmxlY3QkLnB1c2goW3Byb3BOYW1lLCBhdHRyTmFtZV0pO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBhdHRyTmFtZTtcbiAgICAgICAgICAgICAgICB9KSxcbiAgICAgICAgICAgIF0pKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gQ3N0cjtcbn07XG4vKipcbiAqIEluaXRpYWxpemUgYSBTdGVuY2lsIGNvbXBvbmVudCBnaXZlbiBhIHJlZmVyZW5jZSB0byBpdHMgaG9zdCBlbGVtZW50LCBpdHNcbiAqIHJ1bnRpbWUgYm9va2tlZXBpbmcgZGF0YSBzdHJ1Y3R1cmUsIHJ1bnRpbWUgbWV0YWRhdGEgYWJvdXQgdGhlIGNvbXBvbmVudCxcbiAqIGFuZCAob3B0aW9uYWxseSkgYW4gSE1SIHZlcnNpb24gSUQuXG4gKlxuICogQHBhcmFtIGVsbSBhIGhvc3QgZWxlbWVudFxuICogQHBhcmFtIGhvc3RSZWYgdGhlIGVsZW1lbnQncyBydW50aW1lIGJvb2trZWVwaW5nIG9iamVjdFxuICogQHBhcmFtIGNtcE1ldGEgcnVudGltZSBtZXRhZGF0YSBmb3IgdGhlIFN0ZW5jaWwgY29tcG9uZW50XG4gKiBAcGFyYW0gaG1yVmVyc2lvbklkIGFuIChvcHRpb25hbCkgSE1SIHZlcnNpb24gSURcbiAqL1xuY29uc3QgaW5pdGlhbGl6ZUNvbXBvbmVudCA9IGFzeW5jIChlbG0sIGhvc3RSZWYsIGNtcE1ldGEsIGhtclZlcnNpb25JZCkgPT4ge1xuICAgIGxldCBDc3RyO1xuICAgIC8vIGluaXRpYWxpemVDb21wb25lbnRcbiAgICBpZiAoKGhvc3RSZWYuJGZsYWdzJCAmIDMyIC8qIEhPU1RfRkxBR1MuaGFzSW5pdGlhbGl6ZWRDb21wb25lbnQgKi8pID09PSAwKSB7XG4gICAgICAgIC8vIExldCB0aGUgcnVudGltZSBrbm93IHRoYXQgdGhlIGNvbXBvbmVudCBoYXMgYmVlbiBpbml0aWFsaXplZFxuICAgICAgICBob3N0UmVmLiRmbGFncyQgfD0gMzIgLyogSE9TVF9GTEFHUy5oYXNJbml0aWFsaXplZENvbXBvbmVudCAqLztcbiAgICAgICAgaWYgKEJVSUxELmxhenlMb2FkIHx8IEJVSUxELmh5ZHJhdGVDbGllbnRTaWRlKSB7XG4gICAgICAgICAgICAvLyBsYXp5IGxvYWRlZCBjb21wb25lbnRzXG4gICAgICAgICAgICAvLyByZXF1ZXN0IHRoZSBjb21wb25lbnQncyBpbXBsZW1lbnRhdGlvbiB0byBiZVxuICAgICAgICAgICAgLy8gd2lyZWQgdXAgd2l0aCB0aGUgaG9zdCBlbGVtZW50XG4gICAgICAgICAgICBDc3RyID0gbG9hZE1vZHVsZShjbXBNZXRhLCBob3N0UmVmLCBobXJWZXJzaW9uSWQpO1xuICAgICAgICAgICAgaWYgKENzdHIudGhlbikge1xuICAgICAgICAgICAgICAgIC8vIEF3YWl0IGNyZWF0ZXMgYSBtaWNyby10YXNrIGF2b2lkIGlmIHBvc3NpYmxlXG4gICAgICAgICAgICAgICAgY29uc3QgZW5kTG9hZCA9IHVuaXF1ZVRpbWUoYHN0OmxvYWQ6JHtjbXBNZXRhLiR0YWdOYW1lJH06JHtob3N0UmVmLiRtb2RlTmFtZSR9YCwgYFtTdGVuY2lsXSBMb2FkIG1vZHVsZSBmb3IgPCR7Y21wTWV0YS4kdGFnTmFtZSR9PmApO1xuICAgICAgICAgICAgICAgIENzdHIgPSBhd2FpdCBDc3RyO1xuICAgICAgICAgICAgICAgIGVuZExvYWQoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICgoQlVJTEQuaXNEZXYgfHwgQlVJTEQuaXNEZWJ1ZykgJiYgIUNzdHIpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYENvbnN0cnVjdG9yIGZvciBcIiR7Y21wTWV0YS4kdGFnTmFtZSR9IyR7aG9zdFJlZi4kbW9kZU5hbWUkfVwiIHdhcyBub3QgZm91bmRgKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChCVUlMRC5tZW1iZXIgJiYgIUNzdHIuaXNQcm94aWVkKSB7XG4gICAgICAgICAgICAgICAgLy8gd2UndmUgbmV2ZXIgcHJveGllZCB0aGlzIENvbnN0cnVjdG9yIGJlZm9yZVxuICAgICAgICAgICAgICAgIC8vIGxldCdzIGFkZCB0aGUgZ2V0dGVycy9zZXR0ZXJzIHRvIGl0cyBwcm90b3R5cGUgYmVmb3JlXG4gICAgICAgICAgICAgICAgLy8gdGhlIGZpcnN0IHRpbWUgd2UgY3JlYXRlIGFuIGluc3RhbmNlIG9mIHRoZSBpbXBsZW1lbnRhdGlvblxuICAgICAgICAgICAgICAgIGlmIChCVUlMRC53YXRjaENhbGxiYWNrKSB7XG4gICAgICAgICAgICAgICAgICAgIGNtcE1ldGEuJHdhdGNoZXJzJCA9IENzdHIud2F0Y2hlcnM7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHByb3h5Q29tcG9uZW50KENzdHIsIGNtcE1ldGEsIDIgLyogUFJPWFlfRkxBR1MucHJveHlTdGF0ZSAqLyk7XG4gICAgICAgICAgICAgICAgQ3N0ci5pc1Byb3hpZWQgPSB0cnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY29uc3QgZW5kTmV3SW5zdGFuY2UgPSBjcmVhdGVUaW1lKCdjcmVhdGVJbnN0YW5jZScsIGNtcE1ldGEuJHRhZ05hbWUkKTtcbiAgICAgICAgICAgIC8vIG9rLCB0aW1lIHRvIGNvbnN0cnVjdCB0aGUgaW5zdGFuY2VcbiAgICAgICAgICAgIC8vIGJ1dCBsZXQncyBrZWVwIHRyYWNrIG9mIHdoZW4gd2Ugc3RhcnQgYW5kIHN0b3BcbiAgICAgICAgICAgIC8vIHNvIHRoYXQgdGhlIGdldHRlcnMvc2V0dGVycyBkb24ndCBpbmNvcnJlY3RseSBzdGVwIG9uIGRhdGFcbiAgICAgICAgICAgIGlmIChCVUlMRC5tZW1iZXIpIHtcbiAgICAgICAgICAgICAgICBob3N0UmVmLiRmbGFncyQgfD0gOCAvKiBIT1NUX0ZMQUdTLmlzQ29uc3RydWN0aW5nSW5zdGFuY2UgKi87XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAvLyBjb25zdHJ1Y3QgdGhlIGxhenktbG9hZGVkIGNvbXBvbmVudCBpbXBsZW1lbnRhdGlvblxuICAgICAgICAgICAgLy8gcGFzc2luZyB0aGUgaG9zdFJlZiBpcyB2ZXJ5IGltcG9ydGFudCBkdXJpbmdcbiAgICAgICAgICAgIC8vIGNvbnN0cnVjdGlvbiBpbiBvcmRlciB0byBkaXJlY3RseSB3aXJlIHRvZ2V0aGVyIHRoZVxuICAgICAgICAgICAgLy8gaG9zdCBlbGVtZW50IGFuZCB0aGUgbGF6eS1sb2FkZWQgaW5zdGFuY2VcbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgbmV3IENzdHIoaG9zdFJlZik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjYXRjaCAoZSkge1xuICAgICAgICAgICAgICAgIGNvbnNvbGVFcnJvcihlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChCVUlMRC5tZW1iZXIpIHtcbiAgICAgICAgICAgICAgICBob3N0UmVmLiRmbGFncyQgJj0gfjggLyogSE9TVF9GTEFHUy5pc0NvbnN0cnVjdGluZ0luc3RhbmNlICovO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKEJVSUxELndhdGNoQ2FsbGJhY2spIHtcbiAgICAgICAgICAgICAgICBob3N0UmVmLiRmbGFncyQgfD0gMTI4IC8qIEhPU1RfRkxBR1MuaXNXYXRjaFJlYWR5ICovO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZW5kTmV3SW5zdGFuY2UoKTtcbiAgICAgICAgICAgIGZpcmVDb25uZWN0ZWRDYWxsYmFjayhob3N0UmVmLiRsYXp5SW5zdGFuY2UkKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIC8vIHN5bmMgY29uc3RydWN0b3IgY29tcG9uZW50XG4gICAgICAgICAgICBDc3RyID0gZWxtLmNvbnN0cnVjdG9yO1xuICAgICAgICAgICAgLy8gd2FpdCBmb3IgdGhlIEN1c3RvbUVsZW1lbnRSZWdpc3RyeSB0byBtYXJrIHRoZSBjb21wb25lbnQgYXMgcmVhZHkgYmVmb3JlIHNldHRpbmcgYGlzV2F0Y2hSZWFkeWAuIE90aGVyd2lzZSxcbiAgICAgICAgICAgIC8vIHdhdGNoZXJzIG1heSBmaXJlIHByZW1hdHVyZWx5IGlmIGBjdXN0b21FbGVtZW50cy5nZXQoKWAvYGN1c3RvbUVsZW1lbnRzLndoZW5EZWZpbmVkKClgIHJlc29sdmVzIF9iZWZvcmVfXG4gICAgICAgICAgICAvLyBTdGVuY2lsIGhhcyBjb21wbGV0ZWQgaW5zdGFudGlhdGluZyB0aGUgY29tcG9uZW50LlxuICAgICAgICAgICAgY3VzdG9tRWxlbWVudHMud2hlbkRlZmluZWQoY21wTWV0YS4kdGFnTmFtZSQpLnRoZW4oKCkgPT4gKGhvc3RSZWYuJGZsYWdzJCB8PSAxMjggLyogSE9TVF9GTEFHUy5pc1dhdGNoUmVhZHkgKi8pKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoQlVJTEQuc3R5bGUgJiYgQ3N0ci5zdHlsZSkge1xuICAgICAgICAgICAgLy8gdGhpcyBjb21wb25lbnQgaGFzIHN0eWxlcyBidXQgd2UgaGF2ZW4ndCByZWdpc3RlcmVkIHRoZW0geWV0XG4gICAgICAgICAgICBsZXQgc3R5bGUgPSBDc3RyLnN0eWxlO1xuICAgICAgICAgICAgaWYgKEJVSUxELm1vZGUgJiYgdHlwZW9mIHN0eWxlICE9PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgICAgIHN0eWxlID0gc3R5bGVbKGhvc3RSZWYuJG1vZGVOYW1lJCA9IGNvbXB1dGVNb2RlKGVsbSkpXTtcbiAgICAgICAgICAgICAgICBpZiAoQlVJTEQuaHlkcmF0ZVNlcnZlclNpZGUgJiYgaG9zdFJlZi4kbW9kZU5hbWUkKSB7XG4gICAgICAgICAgICAgICAgICAgIGVsbS5zZXRBdHRyaWJ1dGUoJ3MtbW9kZScsIGhvc3RSZWYuJG1vZGVOYW1lJCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY29uc3Qgc2NvcGVJZCA9IGdldFNjb3BlSWQoY21wTWV0YSwgaG9zdFJlZi4kbW9kZU5hbWUkKTtcbiAgICAgICAgICAgIGlmICghc3R5bGVzLmhhcyhzY29wZUlkKSkge1xuICAgICAgICAgICAgICAgIGNvbnN0IGVuZFJlZ2lzdGVyU3R5bGVzID0gY3JlYXRlVGltZSgncmVnaXN0ZXJTdHlsZXMnLCBjbXBNZXRhLiR0YWdOYW1lJCk7XG4gICAgICAgICAgICAgICAgaWYgKCFCVUlMRC5oeWRyYXRlU2VydmVyU2lkZSAmJlxuICAgICAgICAgICAgICAgICAgICBCVUlMRC5zaGFkb3dEb20gJiZcbiAgICAgICAgICAgICAgICAgICAgLy8gVE9ETyhTVEVOQ0lMLTg1NCk6IFJlbW92ZSBjb2RlIHJlbGF0ZWQgdG8gbGVnYWN5IHNoYWRvd0RvbVNoaW0gZmllbGRcbiAgICAgICAgICAgICAgICAgICAgQlVJTEQuc2hhZG93RG9tU2hpbSAmJlxuICAgICAgICAgICAgICAgICAgICBjbXBNZXRhLiRmbGFncyQgJiA4IC8qIENNUF9GTEFHUy5uZWVkc1NoYWRvd0RvbVNoaW0gKi8pIHtcbiAgICAgICAgICAgICAgICAgICAgc3R5bGUgPSBhd2FpdCBpbXBvcnQoJy4vc2hhZG93LWNzcy5qcycpLnRoZW4oKG0pID0+IG0uc2NvcGVDc3Moc3R5bGUsIHNjb3BlSWQsIGZhbHNlKSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJlZ2lzdGVyU3R5bGUoc2NvcGVJZCwgc3R5bGUsICEhKGNtcE1ldGEuJGZsYWdzJCAmIDEgLyogQ01QX0ZMQUdTLnNoYWRvd0RvbUVuY2Fwc3VsYXRpb24gKi8pKTtcbiAgICAgICAgICAgICAgICBlbmRSZWdpc3RlclN0eWxlcygpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIC8vIHdlJ3ZlIHN1Y2Nlc3NmdWxseSBjcmVhdGVkIGEgbGF6eSBpbnN0YW5jZVxuICAgIGNvbnN0IGFuY2VzdG9yQ29tcG9uZW50ID0gaG9zdFJlZi4kYW5jZXN0b3JDb21wb25lbnQkO1xuICAgIGNvbnN0IHNjaGVkdWxlID0gKCkgPT4gc2NoZWR1bGVVcGRhdGUoaG9zdFJlZiwgdHJ1ZSk7XG4gICAgaWYgKEJVSUxELmFzeW5jTG9hZGluZyAmJiBhbmNlc3RvckNvbXBvbmVudCAmJiBhbmNlc3RvckNvbXBvbmVudFsncy1yYyddKSB7XG4gICAgICAgIC8vIHRoaXMgaXMgdGhlIGluaXRpYWwgbG9hZCBhbmQgdGhpcyBjb21wb25lbnQgaXQgaGFzIGFuIGFuY2VzdG9yIGNvbXBvbmVudFxuICAgICAgICAvLyBidXQgdGhlIGFuY2VzdG9yIGNvbXBvbmVudCBoYXMgTk9UIGZpcmVkIGl0cyB3aWxsIHVwZGF0ZSBsaWZlY3ljbGUgeWV0XG4gICAgICAgIC8vIHNvIGxldCdzIGp1c3QgY29vbCBvdXIgamV0cyBhbmQgd2FpdCBmb3IgdGhlIGFuY2VzdG9yIHRvIGNvbnRpbnVlIGZpcnN0XG4gICAgICAgIC8vIHRoaXMgd2lsbCBnZXQgZmlyZWQgb2ZmIHdoZW4gdGhlIGFuY2VzdG9yIGNvbXBvbmVudFxuICAgICAgICAvLyBmaW5hbGx5IGdldHMgYXJvdW5kIHRvIHJlbmRlcmluZyBpdHMgbGF6eSBzZWxmXG4gICAgICAgIC8vIGZpcmUgb2ZmIHRoZSBpbml0aWFsIHVwZGF0ZVxuICAgICAgICBhbmNlc3RvckNvbXBvbmVudFsncy1yYyddLnB1c2goc2NoZWR1bGUpO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgc2NoZWR1bGUoKTtcbiAgICB9XG59O1xuY29uc3QgZmlyZUNvbm5lY3RlZENhbGxiYWNrID0gKGluc3RhbmNlKSA9PiB7XG4gICAgaWYgKEJVSUxELmxhenlMb2FkICYmIEJVSUxELmNvbm5lY3RlZENhbGxiYWNrKSB7XG4gICAgICAgIHNhZmVDYWxsKGluc3RhbmNlLCAnY29ubmVjdGVkQ2FsbGJhY2snKTtcbiAgICB9XG59O1xuY29uc3QgY29ubmVjdGVkQ2FsbGJhY2sgPSAoZWxtKSA9PiB7XG4gICAgaWYgKChwbHQuJGZsYWdzJCAmIDEgLyogUExBVEZPUk1fRkxBR1MuaXNUbXBEaXNjb25uZWN0ZWQgKi8pID09PSAwKSB7XG4gICAgICAgIGNvbnN0IGhvc3RSZWYgPSBnZXRIb3N0UmVmKGVsbSk7XG4gICAgICAgIGNvbnN0IGNtcE1ldGEgPSBob3N0UmVmLiRjbXBNZXRhJDtcbiAgICAgICAgY29uc3QgZW5kQ29ubmVjdGVkID0gY3JlYXRlVGltZSgnY29ubmVjdGVkQ2FsbGJhY2snLCBjbXBNZXRhLiR0YWdOYW1lJCk7XG4gICAgICAgIGlmIChCVUlMRC5ob3N0TGlzdGVuZXJUYXJnZXRQYXJlbnQpIHtcbiAgICAgICAgICAgIC8vIG9ubHkgcnVuIGlmIHdlIGhhdmUgbGlzdGVuZXJzIGJlaW5nIGF0dGFjaGVkIHRvIGEgcGFyZW50XG4gICAgICAgICAgICBhZGRIb3N0RXZlbnRMaXN0ZW5lcnMoZWxtLCBob3N0UmVmLCBjbXBNZXRhLiRsaXN0ZW5lcnMkLCB0cnVlKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoIShob3N0UmVmLiRmbGFncyQgJiAxIC8qIEhPU1RfRkxBR1MuaGFzQ29ubmVjdGVkICovKSkge1xuICAgICAgICAgICAgLy8gZmlyc3QgdGltZSB0aGlzIGNvbXBvbmVudCBoYXMgY29ubmVjdGVkXG4gICAgICAgICAgICBob3N0UmVmLiRmbGFncyQgfD0gMSAvKiBIT1NUX0ZMQUdTLmhhc0Nvbm5lY3RlZCAqLztcbiAgICAgICAgICAgIGxldCBob3N0SWQ7XG4gICAgICAgICAgICBpZiAoQlVJTEQuaHlkcmF0ZUNsaWVudFNpZGUpIHtcbiAgICAgICAgICAgICAgICBob3N0SWQgPSBlbG0uZ2V0QXR0cmlidXRlKEhZRFJBVEVfSUQpO1xuICAgICAgICAgICAgICAgIGlmIChob3N0SWQpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKEJVSUxELnNoYWRvd0RvbSAmJiBzdXBwb3J0c1NoYWRvdyAmJiBjbXBNZXRhLiRmbGFncyQgJiAxIC8qIENNUF9GTEFHUy5zaGFkb3dEb21FbmNhcHN1bGF0aW9uICovKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBzY29wZUlkID0gQlVJTEQubW9kZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgID8gYWRkU3R5bGUoZWxtLnNoYWRvd1Jvb3QsIGNtcE1ldGEsIGVsbS5nZXRBdHRyaWJ1dGUoJ3MtbW9kZScpKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDogYWRkU3R5bGUoZWxtLnNoYWRvd1Jvb3QsIGNtcE1ldGEpO1xuICAgICAgICAgICAgICAgICAgICAgICAgZWxtLmNsYXNzTGlzdC5yZW1vdmUoc2NvcGVJZCArICctaCcsIHNjb3BlSWQgKyAnLXMnKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBpbml0aWFsaXplQ2xpZW50SHlkcmF0ZShlbG0sIGNtcE1ldGEuJHRhZ05hbWUkLCBob3N0SWQsIGhvc3RSZWYpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChCVUlMRC5zbG90UmVsb2NhdGlvbiAmJiAhaG9zdElkKSB7XG4gICAgICAgICAgICAgICAgLy8gaW5pdFVwZGF0ZVxuICAgICAgICAgICAgICAgIC8vIGlmIHRoZSBzbG90IHBvbHlmaWxsIGlzIHJlcXVpcmVkIHdlJ2xsIG5lZWQgdG8gcHV0IHNvbWUgbm9kZXNcbiAgICAgICAgICAgICAgICAvLyBpbiBoZXJlIHRvIGFjdCBhcyBvcmlnaW5hbCBjb250ZW50IGFuY2hvcnMgYXMgd2UgbW92ZSBub2RlcyBhcm91bmRcbiAgICAgICAgICAgICAgICAvLyBob3N0IGVsZW1lbnQgaGFzIGJlZW4gY29ubmVjdGVkIHRvIHRoZSBET01cbiAgICAgICAgICAgICAgICBpZiAoQlVJTEQuaHlkcmF0ZVNlcnZlclNpZGUgfHxcbiAgICAgICAgICAgICAgICAgICAgKChCVUlMRC5zbG90IHx8IEJVSUxELnNoYWRvd0RvbSkgJiZcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIFRPRE8oU1RFTkNJTC04NTQpOiBSZW1vdmUgY29kZSByZWxhdGVkIHRvIGxlZ2FjeSBzaGFkb3dEb21TaGltIGZpZWxkXG4gICAgICAgICAgICAgICAgICAgICAgICBjbXBNZXRhLiRmbGFncyQgJiAoNCAvKiBDTVBfRkxBR1MuaGFzU2xvdFJlbG9jYXRpb24gKi8gfCA4IC8qIENNUF9GTEFHUy5uZWVkc1NoYWRvd0RvbVNoaW0gKi8pKSkge1xuICAgICAgICAgICAgICAgICAgICBzZXRDb250ZW50UmVmZXJlbmNlKGVsbSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKEJVSUxELmFzeW5jTG9hZGluZykge1xuICAgICAgICAgICAgICAgIC8vIGZpbmQgdGhlIGZpcnN0IGFuY2VzdG9yIGNvbXBvbmVudCAoaWYgdGhlcmUgaXMgb25lKSBhbmQgcmVnaXN0ZXJcbiAgICAgICAgICAgICAgICAvLyB0aGlzIGNvbXBvbmVudCBhcyBvbmUgb2YgdGhlIGFjdGl2ZWx5IGxvYWRpbmcgY2hpbGQgY29tcG9uZW50cyBmb3IgaXRzIGFuY2VzdG9yXG4gICAgICAgICAgICAgICAgbGV0IGFuY2VzdG9yQ29tcG9uZW50ID0gZWxtO1xuICAgICAgICAgICAgICAgIHdoaWxlICgoYW5jZXN0b3JDb21wb25lbnQgPSBhbmNlc3RvckNvbXBvbmVudC5wYXJlbnROb2RlIHx8IGFuY2VzdG9yQ29tcG9uZW50Lmhvc3QpKSB7XG4gICAgICAgICAgICAgICAgICAgIC8vIGNsaW1iIHVwIHRoZSBhbmNlc3RvcnMgbG9va2luZyBmb3IgdGhlIGZpcnN0XG4gICAgICAgICAgICAgICAgICAgIC8vIGNvbXBvbmVudCB0aGF0IGhhc24ndCBmaW5pc2hlZCBpdHMgbGlmZWN5Y2xlIHVwZGF0ZSB5ZXRcbiAgICAgICAgICAgICAgICAgICAgaWYgKChCVUlMRC5oeWRyYXRlQ2xpZW50U2lkZSAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgYW5jZXN0b3JDb21wb25lbnQubm9kZVR5cGUgPT09IDEgLyogTk9ERV9UWVBFLkVsZW1lbnROb2RlICovICYmXG4gICAgICAgICAgICAgICAgICAgICAgICBhbmNlc3RvckNvbXBvbmVudC5oYXNBdHRyaWJ1dGUoJ3MtaWQnKSAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgYW5jZXN0b3JDb21wb25lbnRbJ3MtcCddKSB8fFxuICAgICAgICAgICAgICAgICAgICAgICAgYW5jZXN0b3JDb21wb25lbnRbJ3MtcCddKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyB3ZSBmb3VuZCB0aGlzIGNvbXBvbmVudHMgZmlyc3QgYW5jZXN0b3IgY29tcG9uZW50XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBrZWVwIGEgcmVmZXJlbmNlIHRvIHRoaXMgY29tcG9uZW50J3MgYW5jZXN0b3IgY29tcG9uZW50XG4gICAgICAgICAgICAgICAgICAgICAgICBhdHRhY2hUb0FuY2VzdG9yKGhvc3RSZWYsIChob3N0UmVmLiRhbmNlc3RvckNvbXBvbmVudCQgPSBhbmNlc3RvckNvbXBvbmVudCkpO1xuICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAvLyBMYXp5IHByb3BlcnRpZXNcbiAgICAgICAgICAgIC8vIGh0dHBzOi8vZGV2ZWxvcGVycy5nb29nbGUuY29tL3dlYi9mdW5kYW1lbnRhbHMvd2ViLWNvbXBvbmVudHMvYmVzdC1wcmFjdGljZXMjbGF6eS1wcm9wZXJ0aWVzXG4gICAgICAgICAgICBpZiAoQlVJTEQucHJvcCAmJiAhQlVJTEQuaHlkcmF0ZVNlcnZlclNpZGUgJiYgY21wTWV0YS4kbWVtYmVycyQpIHtcbiAgICAgICAgICAgICAgICBPYmplY3QuZW50cmllcyhjbXBNZXRhLiRtZW1iZXJzJCkubWFwKChbbWVtYmVyTmFtZSwgW21lbWJlckZsYWdzXV0pID0+IHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKG1lbWJlckZsYWdzICYgMzEgLyogTUVNQkVSX0ZMQUdTLlByb3AgKi8gJiYgZWxtLmhhc093blByb3BlcnR5KG1lbWJlck5hbWUpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdCB2YWx1ZSA9IGVsbVttZW1iZXJOYW1lXTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGRlbGV0ZSBlbG1bbWVtYmVyTmFtZV07XG4gICAgICAgICAgICAgICAgICAgICAgICBlbG1bbWVtYmVyTmFtZV0gPSB2YWx1ZTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKEJVSUxELmluaXRpYWxpemVOZXh0VGljaykge1xuICAgICAgICAgICAgICAgIC8vIGNvbm5lY3RlZENhbGxiYWNrLCB0YXNrUXVldWUsIGluaXRpYWxMb2FkXG4gICAgICAgICAgICAgICAgLy8gYW5ndWxhciBzZXRzIGF0dHJpYnV0ZSBBRlRFUiBjb25uZWN0Q2FsbGJhY2tcbiAgICAgICAgICAgICAgICAvLyBodHRwczovL2dpdGh1Yi5jb20vYW5ndWxhci9hbmd1bGFyL2lzc3Vlcy8xODkwOVxuICAgICAgICAgICAgICAgIC8vIGh0dHBzOi8vZ2l0aHViLmNvbS9hbmd1bGFyL2FuZ3VsYXIvaXNzdWVzLzE5OTQwXG4gICAgICAgICAgICAgICAgbmV4dFRpY2soKCkgPT4gaW5pdGlhbGl6ZUNvbXBvbmVudChlbG0sIGhvc3RSZWYsIGNtcE1ldGEpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIGluaXRpYWxpemVDb21wb25lbnQoZWxtLCBob3N0UmVmLCBjbXBNZXRhKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIC8vIG5vdCB0aGUgZmlyc3QgdGltZSB0aGlzIGhhcyBjb25uZWN0ZWRcbiAgICAgICAgICAgIC8vIHJlYXR0YWNoIGFueSBldmVudCBsaXN0ZW5lcnMgdG8gdGhlIGhvc3RcbiAgICAgICAgICAgIC8vIHNpbmNlIHRoZXkgd291bGQgaGF2ZSBiZWVuIHJlbW92ZWQgd2hlbiBkaXNjb25uZWN0ZWRcbiAgICAgICAgICAgIGFkZEhvc3RFdmVudExpc3RlbmVycyhlbG0sIGhvc3RSZWYsIGNtcE1ldGEuJGxpc3RlbmVycyQsIGZhbHNlKTtcbiAgICAgICAgICAgIC8vIGZpcmUgb2ZmIGNvbm5lY3RlZENhbGxiYWNrKCkgb24gY29tcG9uZW50IGluc3RhbmNlXG4gICAgICAgICAgICBpZiAoaG9zdFJlZiA9PT0gbnVsbCB8fCBob3N0UmVmID09PSB2b2lkIDAgPyB2b2lkIDAgOiBob3N0UmVmLiRsYXp5SW5zdGFuY2UkKSB7XG4gICAgICAgICAgICAgICAgZmlyZUNvbm5lY3RlZENhbGxiYWNrKGhvc3RSZWYuJGxhenlJbnN0YW5jZSQpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZiAoaG9zdFJlZiA9PT0gbnVsbCB8fCBob3N0UmVmID09PSB2b2lkIDAgPyB2b2lkIDAgOiBob3N0UmVmLiRvblJlYWR5UHJvbWlzZSQpIHtcbiAgICAgICAgICAgICAgICBob3N0UmVmLiRvblJlYWR5UHJvbWlzZSQudGhlbigoKSA9PiBmaXJlQ29ubmVjdGVkQ2FsbGJhY2soaG9zdFJlZi4kbGF6eUluc3RhbmNlJCkpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGVuZENvbm5lY3RlZCgpO1xuICAgIH1cbn07XG5jb25zdCBzZXRDb250ZW50UmVmZXJlbmNlID0gKGVsbSkgPT4ge1xuICAgIC8vIG9ubHkgcmVxdWlyZWQgd2hlbiB3ZSdyZSBOT1QgdXNpbmcgbmF0aXZlIHNoYWRvdyBkb20gKHNsb3QpXG4gICAgLy8gb3IgdGhpcyBicm93c2VyIGRvZXNuJ3Qgc3VwcG9ydCBuYXRpdmUgc2hhZG93IGRvbVxuICAgIC8vIGFuZCB0aGlzIGhvc3QgZWxlbWVudCB3YXMgTk9UIGNyZWF0ZWQgd2l0aCBTU1JcbiAgICAvLyBsZXQncyBwaWNrIG91dCB0aGUgaW5uZXIgY29udGVudCBmb3Igc2xvdCBwcm9qZWN0aW9uXG4gICAgLy8gY3JlYXRlIGEgbm9kZSB0byByZXByZXNlbnQgd2hlcmUgdGhlIG9yaWdpbmFsXG4gICAgLy8gY29udGVudCB3YXMgZmlyc3QgcGxhY2VkLCB3aGljaCBpcyB1c2VmdWwgbGF0ZXIgb25cbiAgICBjb25zdCBjb250ZW50UmVmRWxtID0gKGVsbVsncy1jciddID0gZG9jLmNyZWF0ZUNvbW1lbnQoQlVJTEQuaXNEZWJ1ZyA/IGBjb250ZW50LXJlZiAoaG9zdD0ke2VsbS5sb2NhbE5hbWV9KWAgOiAnJykpO1xuICAgIGNvbnRlbnRSZWZFbG1bJ3MtY24nXSA9IHRydWU7XG4gICAgZWxtLmluc2VydEJlZm9yZShjb250ZW50UmVmRWxtLCBlbG0uZmlyc3RDaGlsZCk7XG59O1xuY29uc3QgZGlzY29ubmVjdEluc3RhbmNlID0gKGluc3RhbmNlKSA9PiB7XG4gICAgaWYgKEJVSUxELmxhenlMb2FkICYmIEJVSUxELmRpc2Nvbm5lY3RlZENhbGxiYWNrKSB7XG4gICAgICAgIHNhZmVDYWxsKGluc3RhbmNlLCAnZGlzY29ubmVjdGVkQ2FsbGJhY2snKTtcbiAgICB9XG4gICAgaWYgKEJVSUxELmNtcERpZFVubG9hZCkge1xuICAgICAgICBzYWZlQ2FsbChpbnN0YW5jZSwgJ2NvbXBvbmVudERpZFVubG9hZCcpO1xuICAgIH1cbn07XG5jb25zdCBkaXNjb25uZWN0ZWRDYWxsYmFjayA9IGFzeW5jIChlbG0pID0+IHtcbiAgICBpZiAoKHBsdC4kZmxhZ3MkICYgMSAvKiBQTEFURk9STV9GTEFHUy5pc1RtcERpc2Nvbm5lY3RlZCAqLykgPT09IDApIHtcbiAgICAgICAgY29uc3QgaG9zdFJlZiA9IGdldEhvc3RSZWYoZWxtKTtcbiAgICAgICAgaWYgKEJVSUxELmhvc3RMaXN0ZW5lcikge1xuICAgICAgICAgICAgaWYgKGhvc3RSZWYuJHJtTGlzdGVuZXJzJCkge1xuICAgICAgICAgICAgICAgIGhvc3RSZWYuJHJtTGlzdGVuZXJzJC5tYXAoKHJtTGlzdGVuZXIpID0+IHJtTGlzdGVuZXIoKSk7XG4gICAgICAgICAgICAgICAgaG9zdFJlZi4kcm1MaXN0ZW5lcnMkID0gdW5kZWZpbmVkO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGlmICghQlVJTEQubGF6eUxvYWQpIHtcbiAgICAgICAgICAgIGRpc2Nvbm5lY3RJbnN0YW5jZShlbG0pO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKGhvc3RSZWYgPT09IG51bGwgfHwgaG9zdFJlZiA9PT0gdm9pZCAwID8gdm9pZCAwIDogaG9zdFJlZi4kbGF6eUluc3RhbmNlJCkge1xuICAgICAgICAgICAgZGlzY29ubmVjdEluc3RhbmNlKGhvc3RSZWYuJGxhenlJbnN0YW5jZSQpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKGhvc3RSZWYgPT09IG51bGwgfHwgaG9zdFJlZiA9PT0gdm9pZCAwID8gdm9pZCAwIDogaG9zdFJlZi4kb25SZWFkeVByb21pc2UkKSB7XG4gICAgICAgICAgICBob3N0UmVmLiRvblJlYWR5UHJvbWlzZSQudGhlbigoKSA9PiBkaXNjb25uZWN0SW5zdGFuY2UoaG9zdFJlZi4kbGF6eUluc3RhbmNlJCkpO1xuICAgICAgICB9XG4gICAgfVxufTtcbmNvbnN0IHBhdGNoUHNldWRvU2hhZG93RG9tID0gKGhvc3RFbGVtZW50UHJvdG90eXBlLCBkZXNjcmlwdG9yUHJvdG90eXBlKSA9PiB7XG4gICAgcGF0Y2hDbG9uZU5vZGUoaG9zdEVsZW1lbnRQcm90b3R5cGUpO1xuICAgIHBhdGNoU2xvdEFwcGVuZENoaWxkKGhvc3RFbGVtZW50UHJvdG90eXBlKTtcbiAgICBwYXRjaFNsb3RBcHBlbmQoaG9zdEVsZW1lbnRQcm90b3R5cGUpO1xuICAgIHBhdGNoU2xvdFByZXBlbmQoaG9zdEVsZW1lbnRQcm90b3R5cGUpO1xuICAgIHBhdGNoU2xvdEluc2VydEFkamFjZW50RWxlbWVudChob3N0RWxlbWVudFByb3RvdHlwZSk7XG4gICAgcGF0Y2hTbG90SW5zZXJ0QWRqYWNlbnRIVE1MKGhvc3RFbGVtZW50UHJvdG90eXBlKTtcbiAgICBwYXRjaFNsb3RJbnNlcnRBZGphY2VudFRleHQoaG9zdEVsZW1lbnRQcm90b3R5cGUpO1xuICAgIHBhdGNoVGV4dENvbnRlbnQoaG9zdEVsZW1lbnRQcm90b3R5cGUsIGRlc2NyaXB0b3JQcm90b3R5cGUpO1xuICAgIHBhdGNoQ2hpbGRTbG90Tm9kZXMoaG9zdEVsZW1lbnRQcm90b3R5cGUsIGRlc2NyaXB0b3JQcm90b3R5cGUpO1xufTtcbmNvbnN0IHBhdGNoQ2xvbmVOb2RlID0gKEhvc3RFbGVtZW50UHJvdG90eXBlKSA9PiB7XG4gICAgY29uc3Qgb3JnQ2xvbmVOb2RlID0gSG9zdEVsZW1lbnRQcm90b3R5cGUuY2xvbmVOb2RlO1xuICAgIEhvc3RFbGVtZW50UHJvdG90eXBlLmNsb25lTm9kZSA9IGZ1bmN0aW9uIChkZWVwKSB7XG4gICAgICAgIGNvbnN0IHNyY05vZGUgPSB0aGlzO1xuICAgICAgICBjb25zdCBpc1NoYWRvd0RvbSA9IEJVSUxELnNoYWRvd0RvbSA/IHNyY05vZGUuc2hhZG93Um9vdCAmJiBzdXBwb3J0c1NoYWRvdyA6IGZhbHNlO1xuICAgICAgICBjb25zdCBjbG9uZWROb2RlID0gb3JnQ2xvbmVOb2RlLmNhbGwoc3JjTm9kZSwgaXNTaGFkb3dEb20gPyBkZWVwIDogZmFsc2UpO1xuICAgICAgICBpZiAoQlVJTEQuc2xvdCAmJiAhaXNTaGFkb3dEb20gJiYgZGVlcCkge1xuICAgICAgICAgICAgbGV0IGkgPSAwO1xuICAgICAgICAgICAgbGV0IHNsb3R0ZWQsIG5vblN0ZW5jaWxOb2RlO1xuICAgICAgICAgICAgY29uc3Qgc3RlbmNpbFByaXZhdGVzID0gW1xuICAgICAgICAgICAgICAgICdzLWlkJyxcbiAgICAgICAgICAgICAgICAncy1jcicsXG4gICAgICAgICAgICAgICAgJ3MtbHInLFxuICAgICAgICAgICAgICAgICdzLXJjJyxcbiAgICAgICAgICAgICAgICAncy1zYycsXG4gICAgICAgICAgICAgICAgJ3MtcCcsXG4gICAgICAgICAgICAgICAgJ3MtY24nLFxuICAgICAgICAgICAgICAgICdzLXNyJyxcbiAgICAgICAgICAgICAgICAncy1zbicsXG4gICAgICAgICAgICAgICAgJ3MtaG4nLFxuICAgICAgICAgICAgICAgICdzLW9sJyxcbiAgICAgICAgICAgICAgICAncy1ucicsXG4gICAgICAgICAgICAgICAgJ3Mtc2knLFxuICAgICAgICAgICAgXTtcbiAgICAgICAgICAgIGZvciAoOyBpIDwgc3JjTm9kZS5jaGlsZE5vZGVzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgc2xvdHRlZCA9IHNyY05vZGUuY2hpbGROb2Rlc1tpXVsncy1uciddO1xuICAgICAgICAgICAgICAgIG5vblN0ZW5jaWxOb2RlID0gc3RlbmNpbFByaXZhdGVzLmV2ZXJ5KChwcml2YXRlRmllbGQpID0+ICFzcmNOb2RlLmNoaWxkTm9kZXNbaV1bcHJpdmF0ZUZpZWxkXSk7XG4gICAgICAgICAgICAgICAgaWYgKHNsb3R0ZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKEJVSUxELmFwcGVuZENoaWxkU2xvdEZpeCAmJiBjbG9uZWROb2RlLl9fYXBwZW5kQ2hpbGQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNsb25lZE5vZGUuX19hcHBlbmRDaGlsZChzbG90dGVkLmNsb25lTm9kZSh0cnVlKSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjbG9uZWROb2RlLmFwcGVuZENoaWxkKHNsb3R0ZWQuY2xvbmVOb2RlKHRydWUpKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAobm9uU3RlbmNpbE5vZGUpIHtcbiAgICAgICAgICAgICAgICAgICAgY2xvbmVkTm9kZS5hcHBlbmRDaGlsZChzcmNOb2RlLmNoaWxkTm9kZXNbaV0uY2xvbmVOb2RlKHRydWUpKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGNsb25lZE5vZGU7XG4gICAgfTtcbn07XG5jb25zdCBwYXRjaFNsb3RBcHBlbmRDaGlsZCA9IChIb3N0RWxlbWVudFByb3RvdHlwZSkgPT4ge1xuICAgIEhvc3RFbGVtZW50UHJvdG90eXBlLl9fYXBwZW5kQ2hpbGQgPSBIb3N0RWxlbWVudFByb3RvdHlwZS5hcHBlbmRDaGlsZDtcbiAgICBIb3N0RWxlbWVudFByb3RvdHlwZS5hcHBlbmRDaGlsZCA9IGZ1bmN0aW9uIChuZXdDaGlsZCkge1xuICAgICAgICBjb25zdCBzbG90TmFtZSA9IChuZXdDaGlsZFsncy1zbiddID0gZ2V0U2xvdE5hbWUobmV3Q2hpbGQpKTtcbiAgICAgICAgY29uc3Qgc2xvdE5vZGUgPSBnZXRIb3N0U2xvdE5vZGUodGhpcy5jaGlsZE5vZGVzLCBzbG90TmFtZSk7XG4gICAgICAgIGlmIChzbG90Tm9kZSkge1xuICAgICAgICAgICAgY29uc3Qgc2xvdENoaWxkTm9kZXMgPSBnZXRIb3N0U2xvdENoaWxkTm9kZXMoc2xvdE5vZGUsIHNsb3ROYW1lKTtcbiAgICAgICAgICAgIGNvbnN0IGFwcGVuZEFmdGVyID0gc2xvdENoaWxkTm9kZXNbc2xvdENoaWxkTm9kZXMubGVuZ3RoIC0gMV07XG4gICAgICAgICAgICByZXR1cm4gYXBwZW5kQWZ0ZXIucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUobmV3Q2hpbGQsIGFwcGVuZEFmdGVyLm5leHRTaWJsaW5nKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGhpcy5fX2FwcGVuZENoaWxkKG5ld0NoaWxkKTtcbiAgICB9O1xufTtcbi8qKlxuICogUGF0Y2hlcyB0aGUgYHByZXBlbmRgIG1ldGhvZCBmb3IgYSBzbG90dGVkIG5vZGUgaW5zaWRlIGEgc2NvcGVkIGNvbXBvbmVudC5cbiAqXG4gKiBAcGFyYW0gSG9zdEVsZW1lbnRQcm90b3R5cGUgdGhlIGBFbGVtZW50YCB0byBiZSBwYXRjaGVkXG4gKi9cbmNvbnN0IHBhdGNoU2xvdFByZXBlbmQgPSAoSG9zdEVsZW1lbnRQcm90b3R5cGUpID0+IHtcbiAgICBjb25zdCBvcmlnaW5hbFByZXBlbmQgPSBIb3N0RWxlbWVudFByb3RvdHlwZS5wcmVwZW5kO1xuICAgIEhvc3RFbGVtZW50UHJvdG90eXBlLnByZXBlbmQgPSBmdW5jdGlvbiAoLi4ubmV3Q2hpbGRyZW4pIHtcbiAgICAgICAgbmV3Q2hpbGRyZW4uZm9yRWFjaCgobmV3Q2hpbGQpID0+IHtcbiAgICAgICAgICAgIGlmICh0eXBlb2YgbmV3Q2hpbGQgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICAgICAgbmV3Q2hpbGQgPSB0aGlzLm93bmVyRG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUobmV3Q2hpbGQpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY29uc3Qgc2xvdE5hbWUgPSAobmV3Q2hpbGRbJ3Mtc24nXSA9IGdldFNsb3ROYW1lKG5ld0NoaWxkKSk7XG4gICAgICAgICAgICBjb25zdCBzbG90Tm9kZSA9IGdldEhvc3RTbG90Tm9kZSh0aGlzLmNoaWxkTm9kZXMsIHNsb3ROYW1lKTtcbiAgICAgICAgICAgIGlmIChzbG90Tm9kZSkge1xuICAgICAgICAgICAgICAgIGNvbnN0IHNsb3RQbGFjZWhvbGRlciA9IGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKCcnKTtcbiAgICAgICAgICAgICAgICBzbG90UGxhY2Vob2xkZXJbJ3MtbnInXSA9IG5ld0NoaWxkO1xuICAgICAgICAgICAgICAgIHNsb3ROb2RlWydzLWNyJ10ucGFyZW50Tm9kZS5fX2FwcGVuZENoaWxkKHNsb3RQbGFjZWhvbGRlcik7XG4gICAgICAgICAgICAgICAgbmV3Q2hpbGRbJ3Mtb2wnXSA9IHNsb3RQbGFjZWhvbGRlcjtcbiAgICAgICAgICAgICAgICBjb25zdCBzbG90Q2hpbGROb2RlcyA9IGdldEhvc3RTbG90Q2hpbGROb2RlcyhzbG90Tm9kZSwgc2xvdE5hbWUpO1xuICAgICAgICAgICAgICAgIGNvbnN0IGFwcGVuZEFmdGVyID0gc2xvdENoaWxkTm9kZXNbMF07XG4gICAgICAgICAgICAgICAgcmV0dXJuIGFwcGVuZEFmdGVyLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKG5ld0NoaWxkLCBhcHBlbmRBZnRlci5uZXh0U2libGluZyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAobmV3Q2hpbGQubm9kZVR5cGUgPT09IDEgJiYgISFuZXdDaGlsZC5nZXRBdHRyaWJ1dGUoJ3Nsb3QnKSkge1xuICAgICAgICAgICAgICAgIG5ld0NoaWxkLmhpZGRlbiA9IHRydWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gb3JpZ2luYWxQcmVwZW5kLmNhbGwodGhpcywgbmV3Q2hpbGQpO1xuICAgICAgICB9KTtcbiAgICB9O1xufTtcbi8qKlxuICogUGF0Y2hlcyB0aGUgYGFwcGVuZGAgbWV0aG9kIGZvciBhIHNsb3R0ZWQgbm9kZSBpbnNpZGUgYSBzY29wZWQgY29tcG9uZW50LiBUaGUgcGF0Y2hlZCBtZXRob2QgdXNlc1xuICogYGFwcGVuZENoaWxkYCB1bmRlci10aGUtaG9vZCB3aGlsZSBjcmVhdGluZyB0ZXh0IG5vZGVzIGZvciBhbnkgbmV3IGNoaWxkcmVuIHRoYXQgcGFzc2VkIGFzIGJhcmUgc3RyaW5ncy5cbiAqXG4gKiBAcGFyYW0gSG9zdEVsZW1lbnRQcm90b3R5cGUgdGhlIGBFbGVtZW50YCB0byBiZSBwYXRjaGVkXG4gKi9cbmNvbnN0IHBhdGNoU2xvdEFwcGVuZCA9IChIb3N0RWxlbWVudFByb3RvdHlwZSkgPT4ge1xuICAgIEhvc3RFbGVtZW50UHJvdG90eXBlLmFwcGVuZCA9IGZ1bmN0aW9uICguLi5uZXdDaGlsZHJlbikge1xuICAgICAgICBuZXdDaGlsZHJlbi5mb3JFYWNoKChuZXdDaGlsZCkgPT4ge1xuICAgICAgICAgICAgaWYgKHR5cGVvZiBuZXdDaGlsZCA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgICAgICBuZXdDaGlsZCA9IHRoaXMub3duZXJEb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShuZXdDaGlsZCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0aGlzLmFwcGVuZENoaWxkKG5ld0NoaWxkKTtcbiAgICAgICAgfSk7XG4gICAgfTtcbn07XG4vKipcbiAqIFBhdGNoZXMgdGhlIGBpbnNlcnRBZGphY2VudEhUTUxgIG1ldGhvZCBmb3IgYSBzbG90dGVkIG5vZGUgaW5zaWRlIGEgc2NvcGVkIGNvbXBvbmVudC4gU3BlY2lmaWNhbGx5LFxuICogd2Ugb25seSBuZWVkIHRvIHBhdGNoIHRoZSBiZWhhdmlvciBmb3IgdGhlIHNwZWNpZmljIGBiZWZvcmVlbmRgIGFuZCBgYWZ0ZXJiZWdpbmAgcG9zaXRpb25zIHNvIHRoZSBlbGVtZW50XG4gKiBnZXRzIGluc2VydGVkIGludG8gdGhlIERPTSBpbiB0aGUgY29ycmVjdCBsb2NhdGlvbi5cbiAqXG4gKiBAcGFyYW0gSG9zdEVsZW1lbnRQcm90b3R5cGUgdGhlIGBFbGVtZW50YCB0byBiZSBwYXRjaGVkXG4gKi9cbmNvbnN0IHBhdGNoU2xvdEluc2VydEFkamFjZW50SFRNTCA9IChIb3N0RWxlbWVudFByb3RvdHlwZSkgPT4ge1xuICAgIGNvbnN0IG9yaWdpbmFsSW5zZXJ0QWRqYWNlbnRIdG1sID0gSG9zdEVsZW1lbnRQcm90b3R5cGUuaW5zZXJ0QWRqYWNlbnRIVE1MO1xuICAgIEhvc3RFbGVtZW50UHJvdG90eXBlLmluc2VydEFkamFjZW50SFRNTCA9IGZ1bmN0aW9uIChwb3NpdGlvbiwgdGV4dCkge1xuICAgICAgICBpZiAocG9zaXRpb24gIT09ICdhZnRlcmJlZ2luJyAmJiBwb3NpdGlvbiAhPT0gJ2JlZm9yZWVuZCcpIHtcbiAgICAgICAgICAgIHJldHVybiBvcmlnaW5hbEluc2VydEFkamFjZW50SHRtbC5jYWxsKHRoaXMsIHBvc2l0aW9uLCB0ZXh0KTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBjb250YWluZXIgPSB0aGlzLm93bmVyRG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnXycpO1xuICAgICAgICBsZXQgbm9kZTtcbiAgICAgICAgY29udGFpbmVyLmlubmVySFRNTCA9IHRleHQ7XG4gICAgICAgIGlmIChwb3NpdGlvbiA9PT0gJ2FmdGVyYmVnaW4nKSB7XG4gICAgICAgICAgICB3aGlsZSAoKG5vZGUgPSBjb250YWluZXIuZmlyc3RDaGlsZCkpIHtcbiAgICAgICAgICAgICAgICB0aGlzLnByZXBlbmQobm9kZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAocG9zaXRpb24gPT09ICdiZWZvcmVlbmQnKSB7XG4gICAgICAgICAgICB3aGlsZSAoKG5vZGUgPSBjb250YWluZXIuZmlyc3RDaGlsZCkpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmFwcGVuZChub2RlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH07XG59O1xuLyoqXG4gKiBQYXRjaGVzIHRoZSBgaW5zZXJ0QWRqYWNlbnRUZXh0YCBtZXRob2QgZm9yIGEgc2xvdHRlZCBub2RlIGluc2lkZSBhIHNjb3BlZCBjb21wb25lbnQuIFNwZWNpZmljYWxseSxcbiAqIHdlIG9ubHkgbmVlZCB0byBwYXRjaCB0aGUgYmVoYXZpb3IgZm9yIHRoZSBzcGVjaWZpYyBgYmVmb3JlZW5kYCBhbmQgYGFmdGVyYmVnaW5gIHBvc2l0aW9ucyBzbyB0aGUgdGV4dCBub2RlXG4gKiBnZXRzIGluc2VydGVkIGludG8gdGhlIERPTSBpbiB0aGUgY29ycmVjdCBsb2NhdGlvbi5cbiAqXG4gKiBAcGFyYW0gSG9zdEVsZW1lbnRQcm90b3R5cGUgdGhlIGBFbGVtZW50YCB0byBiZSBwYXRjaGVkXG4gKi9cbmNvbnN0IHBhdGNoU2xvdEluc2VydEFkamFjZW50VGV4dCA9IChIb3N0RWxlbWVudFByb3RvdHlwZSkgPT4ge1xuICAgIEhvc3RFbGVtZW50UHJvdG90eXBlLmluc2VydEFkamFjZW50VGV4dCA9IGZ1bmN0aW9uIChwb3NpdGlvbiwgdGV4dCkge1xuICAgICAgICB0aGlzLmluc2VydEFkamFjZW50SFRNTChwb3NpdGlvbiwgdGV4dCk7XG4gICAgfTtcbn07XG4vKipcbiAqIFBhdGNoZXMgdGhlIGBpbnNlcnRBZGphY2VudEVsZW1lbnRgIG1ldGhvZCBmb3IgYSBzbG90dGVkIG5vZGUgaW5zaWRlIGEgc2NvcGVkIGNvbXBvbmVudC4gU3BlY2lmaWNhbGx5LFxuICogd2Ugb25seSBuZWVkIHRvIHBhdGNoIHRoZSBiZWhhdmlvciBmb3IgdGhlIHNwZWNpZmljIGBiZWZvcmVlbmRgIGFuZCBgYWZ0ZXJiZWdpbmAgcG9zaXRpb25zIHNvIHRoZSBlbGVtZW50XG4gKiBnZXRzIGluc2VydGVkIGludG8gdGhlIERPTSBpbiB0aGUgY29ycmVjdCBsb2NhdGlvbi5cbiAqXG4gKiBAcGFyYW0gSG9zdEVsZW1lbnRQcm90b3R5cGUgdGhlIGBFbGVtZW50YCB0byBiZSBwYXRjaGVkXG4gKi9cbmNvbnN0IHBhdGNoU2xvdEluc2VydEFkamFjZW50RWxlbWVudCA9IChIb3N0RWxlbWVudFByb3RvdHlwZSkgPT4ge1xuICAgIGNvbnN0IG9yaWdpbmFsSW5zZXJ0QWRqYWNlbnRFbGVtZW50ID0gSG9zdEVsZW1lbnRQcm90b3R5cGUuaW5zZXJ0QWRqYWNlbnRFbGVtZW50O1xuICAgIEhvc3RFbGVtZW50UHJvdG90eXBlLmluc2VydEFkamFjZW50RWxlbWVudCA9IGZ1bmN0aW9uIChwb3NpdGlvbiwgZWxlbWVudCkge1xuICAgICAgICBpZiAocG9zaXRpb24gIT09ICdhZnRlcmJlZ2luJyAmJiBwb3NpdGlvbiAhPT0gJ2JlZm9yZWVuZCcpIHtcbiAgICAgICAgICAgIHJldHVybiBvcmlnaW5hbEluc2VydEFkamFjZW50RWxlbWVudC5jYWxsKHRoaXMsIHBvc2l0aW9uLCBlbGVtZW50KTtcbiAgICAgICAgfVxuICAgICAgICBpZiAocG9zaXRpb24gPT09ICdhZnRlcmJlZ2luJykge1xuICAgICAgICAgICAgdGhpcy5wcmVwZW5kKGVsZW1lbnQpO1xuICAgICAgICAgICAgcmV0dXJuIGVsZW1lbnQ7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAocG9zaXRpb24gPT09ICdiZWZvcmVlbmQnKSB7XG4gICAgICAgICAgICB0aGlzLmFwcGVuZChlbGVtZW50KTtcbiAgICAgICAgICAgIHJldHVybiBlbGVtZW50O1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBlbGVtZW50O1xuICAgIH07XG59O1xuLyoqXG4gKiBQYXRjaGVzIHRoZSB0ZXh0IGNvbnRlbnQgb2YgYW4gdW5uYW1lZCBzbG90dGVkIG5vZGUgaW5zaWRlIGEgc2NvcGVkIGNvbXBvbmVudFxuICogQHBhcmFtIGhvc3RFbGVtZW50UHJvdG90eXBlIHRoZSBgRWxlbWVudGAgdG8gYmUgcGF0Y2hlZFxuICogQHBhcmFtIGNtcE1ldGEgY29tcG9uZW50IHJ1bnRpbWUgbWV0YWRhdGEgdXNlZCB0byBkZXRlcm1pbmUgaWYgdGhlIGNvbXBvbmVudCBzaG91bGQgYmUgcGF0Y2hlZCBvciBub3RcbiAqL1xuY29uc3QgcGF0Y2hUZXh0Q29udGVudCA9IChob3N0RWxlbWVudFByb3RvdHlwZSwgY21wTWV0YSkgPT4ge1xuICAgIGlmIChCVUlMRC5zY29wZWQgJiYgY21wTWV0YS4kZmxhZ3MkICYgMiAvKiBDTVBfRkxBR1Muc2NvcGVkQ3NzRW5jYXBzdWxhdGlvbiAqLykge1xuICAgICAgICBjb25zdCBkZXNjcmlwdG9yID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihOb2RlLnByb3RvdHlwZSwgJ3RleHRDb250ZW50Jyk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShob3N0RWxlbWVudFByb3RvdHlwZSwgJ19fdGV4dENvbnRlbnQnLCBkZXNjcmlwdG9yKTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGhvc3RFbGVtZW50UHJvdG90eXBlLCAndGV4dENvbnRlbnQnLCB7XG4gICAgICAgICAgICBnZXQoKSB7XG4gICAgICAgICAgICAgICAgdmFyIF9hO1xuICAgICAgICAgICAgICAgIC8vIGdldCB0aGUgJ2RlZmF1bHQgc2xvdCcsIHdoaWNoIHdvdWxkIGJlIHRoZSBmaXJzdCBzbG90IGluIGEgc2hhZG93IHRyZWUgKGlmIHdlIHdlcmUgdXNpbmcgb25lKSwgd2hvc2UgbmFtZSBpc1xuICAgICAgICAgICAgICAgIC8vIHRoZSBlbXB0eSBzdHJpbmdcbiAgICAgICAgICAgICAgICBjb25zdCBzbG90Tm9kZSA9IGdldEhvc3RTbG90Tm9kZSh0aGlzLmNoaWxkTm9kZXMsICcnKTtcbiAgICAgICAgICAgICAgICAvLyB3aGVuIGEgc2xvdCBub2RlIGlzIGZvdW5kLCB0aGUgdGV4dENvbnRlbnQgX21heV8gYmUgZm91bmQgaW4gdGhlIG5leHQgc2libGluZyAodGV4dCkgbm9kZSwgZGVwZW5kaW5nIG9uIGhvd1xuICAgICAgICAgICAgICAgIC8vIG5vZGVzIHdlcmUgcmVvcmRlcmVkIGR1cmluZyB0aGUgdmRvbSByZW5kZXIuIGZpcnN0IHRyeSB0byBnZXQgdGhlIHRleHQgY29udGVudCBmcm9tIHRoZSBzaWJsaW5nLlxuICAgICAgICAgICAgICAgIGlmICgoKF9hID0gc2xvdE5vZGUgPT09IG51bGwgfHwgc2xvdE5vZGUgPT09IHZvaWQgMCA/IHZvaWQgMCA6IHNsb3ROb2RlLm5leHRTaWJsaW5nKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2Eubm9kZVR5cGUpID09PSAzIC8qIE5PREVfVFlQRVMuVEVYVF9OT0RFICovKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBzbG90Tm9kZS5uZXh0U2libGluZy50ZXh0Q29udGVudDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSBpZiAoc2xvdE5vZGUpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHNsb3ROb2RlLnRleHRDb250ZW50O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgLy8gZmFsbGJhY2sgdG8gdGhlIG9yaWdpbmFsIGltcGxlbWVudGF0aW9uXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLl9fdGV4dENvbnRlbnQ7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHNldCh2YWx1ZSkge1xuICAgICAgICAgICAgICAgIHZhciBfYTtcbiAgICAgICAgICAgICAgICAvLyBnZXQgdGhlICdkZWZhdWx0IHNsb3QnLCB3aGljaCB3b3VsZCBiZSB0aGUgZmlyc3Qgc2xvdCBpbiBhIHNoYWRvdyB0cmVlIChpZiB3ZSB3ZXJlIHVzaW5nIG9uZSksIHdob3NlIG5hbWUgaXNcbiAgICAgICAgICAgICAgICAvLyB0aGUgZW1wdHkgc3RyaW5nXG4gICAgICAgICAgICAgICAgY29uc3Qgc2xvdE5vZGUgPSBnZXRIb3N0U2xvdE5vZGUodGhpcy5jaGlsZE5vZGVzLCAnJyk7XG4gICAgICAgICAgICAgICAgLy8gd2hlbiBhIHNsb3Qgbm9kZSBpcyBmb3VuZCwgdGhlIHRleHRDb250ZW50IF9tYXlfIG5lZWQgdG8gYmUgcGxhY2VkIGluIHRoZSBuZXh0IHNpYmxpbmcgKHRleHQpIG5vZGUsXG4gICAgICAgICAgICAgICAgLy8gZGVwZW5kaW5nIG9uIGhvdyBub2RlcyB3ZXJlIHJlb3JkZXJlZCBkdXJpbmcgdGhlIHZkb20gcmVuZGVyLiBmaXJzdCB0cnkgdG8gc2V0IHRoZSB0ZXh0IGNvbnRlbnQgb24gdGhlXG4gICAgICAgICAgICAgICAgLy8gc2libGluZy5cbiAgICAgICAgICAgICAgICBpZiAoKChfYSA9IHNsb3ROb2RlID09PSBudWxsIHx8IHNsb3ROb2RlID09PSB2b2lkIDAgPyB2b2lkIDAgOiBzbG90Tm9kZS5uZXh0U2libGluZykgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLm5vZGVUeXBlKSA9PT0gMyAvKiBOT0RFX1RZUEVTLlRFWFRfTk9ERSAqLykge1xuICAgICAgICAgICAgICAgICAgICBzbG90Tm9kZS5uZXh0U2libGluZy50ZXh0Q29udGVudCA9IHZhbHVlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIGlmIChzbG90Tm9kZSkge1xuICAgICAgICAgICAgICAgICAgICBzbG90Tm9kZS50ZXh0Q29udGVudCA9IHZhbHVlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgLy8gd2UgY291bGRuJ3QgZmluZCBhIHNsb3QsIGJ1dCB0aGF0IGRvZXNuJ3QgbWVhbiB0aGF0IHRoZXJlIGlzbid0IG9uZS4gaWYgdGhpcyBjaGVjayByYW4gYmVmb3JlIHRoZSBET01cbiAgICAgICAgICAgICAgICAgICAgLy8gbG9hZGVkLCB3ZSBjb3VsZCBoYXZlIG1pc3NlZCBpdC4gY2hlY2sgZm9yIGEgY29udGVudCByZWZlcmVuY2UgZWxlbWVudCBvbiB0aGUgc2NvcGVkIGNvbXBvbmVudCBhbmQgaW5zZXJ0XG4gICAgICAgICAgICAgICAgICAgIC8vIGl0IHRoZXJlXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuX190ZXh0Q29udGVudCA9IHZhbHVlO1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBjb250ZW50UmVmRWxtID0gdGhpc1sncy1jciddO1xuICAgICAgICAgICAgICAgICAgICBpZiAoY29udGVudFJlZkVsbSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5pbnNlcnRCZWZvcmUoY29udGVudFJlZkVsbSwgdGhpcy5maXJzdENoaWxkKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0sXG4gICAgICAgIH0pO1xuICAgIH1cbn07XG5jb25zdCBwYXRjaENoaWxkU2xvdE5vZGVzID0gKGVsbSwgY21wTWV0YSkgPT4ge1xuICAgIGNsYXNzIEZha2VOb2RlTGlzdCBleHRlbmRzIEFycmF5IHtcbiAgICAgICAgaXRlbShuKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpc1tuXTtcbiAgICAgICAgfVxuICAgIH1cbiAgICAvLyBUT0RPKFNURU5DSUwtODU0KTogUmVtb3ZlIGNvZGUgcmVsYXRlZCB0byBsZWdhY3kgc2hhZG93RG9tU2hpbSBmaWVsZFxuICAgIGlmIChjbXBNZXRhLiRmbGFncyQgJiA4IC8qIENNUF9GTEFHUy5uZWVkc1NoYWRvd0RvbVNoaW0gKi8pIHtcbiAgICAgICAgY29uc3QgY2hpbGROb2Rlc0ZuID0gZWxtLl9fbG9va3VwR2V0dGVyX18oJ2NoaWxkTm9kZXMnKTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGVsbSwgJ2NoaWxkcmVuJywge1xuICAgICAgICAgICAgZ2V0KCkge1xuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLmNoaWxkTm9kZXMubWFwKChuKSA9PiBuLm5vZGVUeXBlID09PSAxKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgIH0pO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoZWxtLCAnY2hpbGRFbGVtZW50Q291bnQnLCB7XG4gICAgICAgICAgICBnZXQoKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGVsbS5jaGlsZHJlbi5sZW5ndGg7XG4gICAgICAgICAgICB9LFxuICAgICAgICB9KTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGVsbSwgJ2NoaWxkTm9kZXMnLCB7XG4gICAgICAgICAgICBnZXQoKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgY2hpbGROb2RlcyA9IGNoaWxkTm9kZXNGbi5jYWxsKHRoaXMpO1xuICAgICAgICAgICAgICAgIGlmICgocGx0LiRmbGFncyQgJiAxIC8qIFBMQVRGT1JNX0ZMQUdTLmlzVG1wRGlzY29ubmVjdGVkICovKSA9PT0gMCAmJlxuICAgICAgICAgICAgICAgICAgICBnZXRIb3N0UmVmKHRoaXMpLiRmbGFncyQgJiAyIC8qIEhPU1RfRkxBR1MuaGFzUmVuZGVyZWQgKi8pIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgcmVzdWx0ID0gbmV3IEZha2VOb2RlTGlzdCgpO1xuICAgICAgICAgICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGNoaWxkTm9kZXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHNsb3QgPSBjaGlsZE5vZGVzW2ldWydzLW5yJ107XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoc2xvdCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlc3VsdC5wdXNoKHNsb3QpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiBGYWtlTm9kZUxpc3QuZnJvbShjaGlsZE5vZGVzKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgIH0pO1xuICAgIH1cbn07XG5jb25zdCBnZXRTbG90TmFtZSA9IChub2RlKSA9PiBub2RlWydzLXNuJ10gfHwgKG5vZGUubm9kZVR5cGUgPT09IDEgJiYgbm9kZS5nZXRBdHRyaWJ1dGUoJ3Nsb3QnKSkgfHwgJyc7XG4vKipcbiAqIFJlY3Vyc2l2ZWx5IHNlYXJjaGVzIGEgc2VyaWVzIG9mIGNoaWxkIG5vZGVzIGZvciBhIHNsb3Qgd2l0aCB0aGUgcHJvdmlkZWQgbmFtZS5cbiAqIEBwYXJhbSBjaGlsZE5vZGVzIHRoZSBub2RlcyB0byBzZWFyY2ggZm9yIGEgc2xvdCB3aXRoIGEgc3BlY2lmaWMgbmFtZS5cbiAqIEBwYXJhbSBzbG90TmFtZSB0aGUgbmFtZSBvZiB0aGUgc2xvdCB0byBtYXRjaCBvbi5cbiAqIEByZXR1cm5zIGEgcmVmZXJlbmNlIHRvIHRoZSBzbG90IG5vZGUgdGhhdCBtYXRjaGVzIHRoZSBwcm92aWRlZCBuYW1lLCBgbnVsbGAgb3RoZXJ3aXNlXG4gKi9cbmNvbnN0IGdldEhvc3RTbG90Tm9kZSA9IChjaGlsZE5vZGVzLCBzbG90TmFtZSkgPT4ge1xuICAgIGxldCBpID0gMDtcbiAgICBsZXQgY2hpbGROb2RlO1xuICAgIGZvciAoOyBpIDwgY2hpbGROb2Rlcy5sZW5ndGg7IGkrKykge1xuICAgICAgICBjaGlsZE5vZGUgPSBjaGlsZE5vZGVzW2ldO1xuICAgICAgICBpZiAoY2hpbGROb2RlWydzLXNyJ10gJiYgY2hpbGROb2RlWydzLXNuJ10gPT09IHNsb3ROYW1lKSB7XG4gICAgICAgICAgICByZXR1cm4gY2hpbGROb2RlO1xuICAgICAgICB9XG4gICAgICAgIGNoaWxkTm9kZSA9IGdldEhvc3RTbG90Tm9kZShjaGlsZE5vZGUuY2hpbGROb2Rlcywgc2xvdE5hbWUpO1xuICAgICAgICBpZiAoY2hpbGROb2RlKSB7XG4gICAgICAgICAgICByZXR1cm4gY2hpbGROb2RlO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiBudWxsO1xufTtcbmNvbnN0IGdldEhvc3RTbG90Q2hpbGROb2RlcyA9IChuLCBzbG90TmFtZSkgPT4ge1xuICAgIGNvbnN0IGNoaWxkTm9kZXMgPSBbbl07XG4gICAgd2hpbGUgKChuID0gbi5uZXh0U2libGluZykgJiYgblsncy1zbiddID09PSBzbG90TmFtZSkge1xuICAgICAgICBjaGlsZE5vZGVzLnB1c2gobik7XG4gICAgfVxuICAgIHJldHVybiBjaGlsZE5vZGVzO1xufTtcbmNvbnN0IGRlZmluZUN1c3RvbUVsZW1lbnQgPSAoQ3N0ciwgY29tcGFjdE1ldGEpID0+IHtcbiAgICBjdXN0b21FbGVtZW50cy5kZWZpbmUoY29tcGFjdE1ldGFbMV0sIHByb3h5Q3VzdG9tRWxlbWVudChDc3RyLCBjb21wYWN0TWV0YSkpO1xufTtcbmNvbnN0IHByb3h5Q3VzdG9tRWxlbWVudCA9IChDc3RyLCBjb21wYWN0TWV0YSkgPT4ge1xuICAgIGNvbnN0IGNtcE1ldGEgPSB7XG4gICAgICAgICRmbGFncyQ6IGNvbXBhY3RNZXRhWzBdLFxuICAgICAgICAkdGFnTmFtZSQ6IGNvbXBhY3RNZXRhWzFdLFxuICAgIH07XG4gICAgaWYgKEJVSUxELm1lbWJlcikge1xuICAgICAgICBjbXBNZXRhLiRtZW1iZXJzJCA9IGNvbXBhY3RNZXRhWzJdO1xuICAgIH1cbiAgICBpZiAoQlVJTEQuaG9zdExpc3RlbmVyKSB7XG4gICAgICAgIGNtcE1ldGEuJGxpc3RlbmVycyQgPSBjb21wYWN0TWV0YVszXTtcbiAgICB9XG4gICAgaWYgKEJVSUxELndhdGNoQ2FsbGJhY2spIHtcbiAgICAgICAgY21wTWV0YS4kd2F0Y2hlcnMkID0gQ3N0ci4kd2F0Y2hlcnMkO1xuICAgIH1cbiAgICBpZiAoQlVJTEQucmVmbGVjdCkge1xuICAgICAgICBjbXBNZXRhLiRhdHRyc1RvUmVmbGVjdCQgPSBbXTtcbiAgICB9XG4gICAgaWYgKEJVSUxELnNoYWRvd0RvbSAmJiAhc3VwcG9ydHNTaGFkb3cgJiYgY21wTWV0YS4kZmxhZ3MkICYgMSAvKiBDTVBfRkxBR1Muc2hhZG93RG9tRW5jYXBzdWxhdGlvbiAqLykge1xuICAgICAgICAvLyBUT0RPKFNURU5DSUwtODU0KTogUmVtb3ZlIGNvZGUgcmVsYXRlZCB0byBsZWdhY3kgc2hhZG93RG9tU2hpbSBmaWVsZFxuICAgICAgICBjbXBNZXRhLiRmbGFncyQgfD0gOCAvKiBDTVBfRkxBR1MubmVlZHNTaGFkb3dEb21TaGltICovO1xuICAgIH1cbiAgICAvLyBUT0RPKFNURU5DSUwtOTE0KTogdGhpcyBjaGVjayBhbmQgYGVsc2VgIGJsb2NrIGNhbiBnbyBhd2F5IGFuZCBiZSByZXBsYWNlZCBieSBqdXN0IGBCVUlMRC5zY29wZWRgIG9uY2Ugd2VcbiAgICAvLyBkZWZhdWx0IG91ciBwc2V1ZG8tc2xvdCBiZWhhdmlvclxuICAgIGlmIChCVUlMRC5leHBlcmltZW50YWxTbG90Rml4ZXMgJiYgQlVJTEQuc2NvcGVkKSB7XG4gICAgICAgIHBhdGNoUHNldWRvU2hhZG93RG9tKENzdHIucHJvdG90eXBlLCBjbXBNZXRhKTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIGlmIChCVUlMRC5zbG90Q2hpbGROb2Rlc0ZpeCkge1xuICAgICAgICAgICAgcGF0Y2hDaGlsZFNsb3ROb2RlcyhDc3RyLnByb3RvdHlwZSwgY21wTWV0YSk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKEJVSUxELmNsb25lTm9kZUZpeCkge1xuICAgICAgICAgICAgcGF0Y2hDbG9uZU5vZGUoQ3N0ci5wcm90b3R5cGUpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChCVUlMRC5hcHBlbmRDaGlsZFNsb3RGaXgpIHtcbiAgICAgICAgICAgIHBhdGNoU2xvdEFwcGVuZENoaWxkKENzdHIucHJvdG90eXBlKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoQlVJTEQuc2NvcGVkU2xvdFRleHRDb250ZW50Rml4KSB7XG4gICAgICAgICAgICBwYXRjaFRleHRDb250ZW50KENzdHIucHJvdG90eXBlLCBjbXBNZXRhKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBjb25zdCBvcmlnaW5hbENvbm5lY3RlZENhbGxiYWNrID0gQ3N0ci5wcm90b3R5cGUuY29ubmVjdGVkQ2FsbGJhY2s7XG4gICAgY29uc3Qgb3JpZ2luYWxEaXNjb25uZWN0ZWRDYWxsYmFjayA9IENzdHIucHJvdG90eXBlLmRpc2Nvbm5lY3RlZENhbGxiYWNrO1xuICAgIE9iamVjdC5hc3NpZ24oQ3N0ci5wcm90b3R5cGUsIHtcbiAgICAgICAgX19yZWdpc3Rlckhvc3QoKSB7XG4gICAgICAgICAgICByZWdpc3Rlckhvc3QodGhpcywgY21wTWV0YSk7XG4gICAgICAgIH0sXG4gICAgICAgIGNvbm5lY3RlZENhbGxiYWNrKCkge1xuICAgICAgICAgICAgY29ubmVjdGVkQ2FsbGJhY2sodGhpcyk7XG4gICAgICAgICAgICBpZiAoQlVJTEQuY29ubmVjdGVkQ2FsbGJhY2sgJiYgb3JpZ2luYWxDb25uZWN0ZWRDYWxsYmFjaykge1xuICAgICAgICAgICAgICAgIG9yaWdpbmFsQ29ubmVjdGVkQ2FsbGJhY2suY2FsbCh0aGlzKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgZGlzY29ubmVjdGVkQ2FsbGJhY2soKSB7XG4gICAgICAgICAgICBkaXNjb25uZWN0ZWRDYWxsYmFjayh0aGlzKTtcbiAgICAgICAgICAgIGlmIChCVUlMRC5kaXNjb25uZWN0ZWRDYWxsYmFjayAmJiBvcmlnaW5hbERpc2Nvbm5lY3RlZENhbGxiYWNrKSB7XG4gICAgICAgICAgICAgICAgb3JpZ2luYWxEaXNjb25uZWN0ZWRDYWxsYmFjay5jYWxsKHRoaXMpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICBfX2F0dGFjaFNoYWRvdygpIHtcbiAgICAgICAgICAgIGlmIChzdXBwb3J0c1NoYWRvdykge1xuICAgICAgICAgICAgICAgIGlmIChCVUlMRC5zaGFkb3dEZWxlZ2F0ZXNGb2N1cykge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmF0dGFjaFNoYWRvdyh7XG4gICAgICAgICAgICAgICAgICAgICAgICBtb2RlOiAnb3BlbicsXG4gICAgICAgICAgICAgICAgICAgICAgICBkZWxlZ2F0ZXNGb2N1czogISEoY21wTWV0YS4kZmxhZ3MkICYgMTYgLyogQ01QX0ZMQUdTLnNoYWRvd0RlbGVnYXRlc0ZvY3VzICovKSxcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmF0dGFjaFNoYWRvdyh7IG1vZGU6ICdvcGVuJyB9KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICB0aGlzLnNoYWRvd1Jvb3QgPSB0aGlzO1xuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuICAgIH0pO1xuICAgIENzdHIuaXMgPSBjbXBNZXRhLiR0YWdOYW1lJDtcbiAgICByZXR1cm4gcHJveHlDb21wb25lbnQoQ3N0ciwgY21wTWV0YSwgMSAvKiBQUk9YWV9GTEFHUy5pc0VsZW1lbnRDb25zdHJ1Y3RvciAqLyB8IDIgLyogUFJPWFlfRkxBR1MucHJveHlTdGF0ZSAqLyk7XG59O1xuY29uc3QgZm9yY2VNb2RlVXBkYXRlID0gKGVsbSkgPT4ge1xuICAgIGlmIChCVUlMRC5zdHlsZSAmJiBCVUlMRC5tb2RlICYmICFCVUlMRC5sYXp5TG9hZCkge1xuICAgICAgICBjb25zdCBtb2RlID0gY29tcHV0ZU1vZGUoZWxtKTtcbiAgICAgICAgY29uc3QgaG9zdFJlZiA9IGdldEhvc3RSZWYoZWxtKTtcbiAgICAgICAgaWYgKGhvc3RSZWYuJG1vZGVOYW1lJCAhPT0gbW9kZSkge1xuICAgICAgICAgICAgY29uc3QgY21wTWV0YSA9IGhvc3RSZWYuJGNtcE1ldGEkO1xuICAgICAgICAgICAgY29uc3Qgb2xkU2NvcGVJZCA9IGVsbVsncy1zYyddO1xuICAgICAgICAgICAgY29uc3Qgc2NvcGVJZCA9IGdldFNjb3BlSWQoY21wTWV0YSwgbW9kZSk7XG4gICAgICAgICAgICBjb25zdCBzdHlsZSA9IGVsbS5jb25zdHJ1Y3Rvci5zdHlsZVttb2RlXTtcbiAgICAgICAgICAgIGNvbnN0IGZsYWdzID0gY21wTWV0YS4kZmxhZ3MkO1xuICAgICAgICAgICAgaWYgKHN0eWxlKSB7XG4gICAgICAgICAgICAgICAgaWYgKCFzdHlsZXMuaGFzKHNjb3BlSWQpKSB7XG4gICAgICAgICAgICAgICAgICAgIHJlZ2lzdGVyU3R5bGUoc2NvcGVJZCwgc3R5bGUsICEhKGZsYWdzICYgMSAvKiBDTVBfRkxBR1Muc2hhZG93RG9tRW5jYXBzdWxhdGlvbiAqLykpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBob3N0UmVmLiRtb2RlTmFtZSQgPSBtb2RlO1xuICAgICAgICAgICAgICAgIGVsbS5jbGFzc0xpc3QucmVtb3ZlKG9sZFNjb3BlSWQgKyAnLWgnLCBvbGRTY29wZUlkICsgJy1zJyk7XG4gICAgICAgICAgICAgICAgYXR0YWNoU3R5bGVzKGhvc3RSZWYpO1xuICAgICAgICAgICAgICAgIGZvcmNlVXBkYXRlKGVsbSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG59O1xuLyoqXG4gKiBLaWNrIG9mZiBob3QtbW9kdWxlLXJlcGxhY2VtZW50IGZvciBhIGNvbXBvbmVudC4gSW4gb3JkZXIgdG8gcmVwbGFjZSB0aGVcbiAqIGNvbXBvbmVudCBpbi1wbGFjZSB3ZTpcbiAqXG4gKiAxLiBnZXQgYSByZWZlcmVuY2UgdG8gdGhlIHtAbGluayBkLkhvc3RSZWZ9IGZvciB0aGUgZWxlbWVudFxuICogMi4gcmVzZXQgdGhlIGVsZW1lbnQncyBydW50aW1lIGZsYWdzXG4gKiAzLiByZS1ydW4gdGhlIGluaXRpYWxpemF0aW9uIGxvZ2ljIGZvciB0aGUgZWxlbWVudCAodmlhXG4gKiAgICB7QGxpbmsgaW5pdGlhbGl6ZUNvbXBvbmVudH0pXG4gKlxuICogQHBhcmFtIGhvc3RFbGVtZW50IHRoZSBob3N0IGVsZW1lbnQgZm9yIHRoZSBjb21wb25lbnQgd2hpY2ggd2Ugd2FudCB0byBzdGFydFxuICogZG9pbmcgSE1SXG4gKiBAcGFyYW0gY21wTWV0YSBydW50aW1lIG1ldGFkYXRhIGZvciB0aGUgY29tcG9uZW50XG4gKiBAcGFyYW0gaG1yVmVyc2lvbklkIHRoZSBjdXJyZW50IEhNUiB2ZXJzaW9uIElEXG4gKi9cbmNvbnN0IGhtclN0YXJ0ID0gKGhvc3RFbGVtZW50LCBjbXBNZXRhLCBobXJWZXJzaW9uSWQpID0+IHtcbiAgICAvLyDCr1xcXyjjg4QpXy/Cr1xuICAgIGNvbnN0IGhvc3RSZWYgPSBnZXRIb3N0UmVmKGhvc3RFbGVtZW50KTtcbiAgICAvLyByZXNldCBzdGF0ZSBmbGFncyB0byBvbmx5IGhhdmUgYmVlbiBjb25uZWN0ZWRcbiAgICBob3N0UmVmLiRmbGFncyQgPSAxIC8qIEhPU1RfRkxBR1MuaGFzQ29ubmVjdGVkICovO1xuICAgIC8vIFRPRE9cbiAgICAvLyBkZXRhY2ggYW55IGV2ZW50IGxpc3RlbmVycyB0aGF0IG1heSBoYXZlIGJlZW4gYWRkZWRcbiAgICAvLyBiZWNhdXNlIHdlJ3JlIG5vdCBwYXNzaW5nIGFuIGV4YWN0IGV2ZW50IG5hbWUgaXQnbGxcbiAgICAvLyByZW1vdmUgYWxsIG9mIHRoaXMgZWxlbWVudCdzIGV2ZW50LCB3aGljaCBpcyBnb29kXG4gICAgLy8gcmUtaW5pdGlhbGl6ZSB0aGUgY29tcG9uZW50XG4gICAgaW5pdGlhbGl6ZUNvbXBvbmVudChob3N0RWxlbWVudCwgaG9zdFJlZiwgY21wTWV0YSwgaG1yVmVyc2lvbklkKTtcbn07XG5jb25zdCBib290c3RyYXBMYXp5ID0gKGxhenlCdW5kbGVzLCBvcHRpb25zID0ge30pID0+IHtcbiAgICB2YXIgX2E7XG4gICAgaWYgKEJVSUxELnByb2ZpbGUgJiYgcGVyZm9ybWFuY2UubWFyaykge1xuICAgICAgICBwZXJmb3JtYW5jZS5tYXJrKCdzdDphcHA6c3RhcnQnKTtcbiAgICB9XG4gICAgaW5zdGFsbERldlRvb2xzKCk7XG4gICAgY29uc3QgZW5kQm9vdHN0cmFwID0gY3JlYXRlVGltZSgnYm9vdHN0cmFwTGF6eScpO1xuICAgIGNvbnN0IGNtcFRhZ3MgPSBbXTtcbiAgICBjb25zdCBleGNsdWRlID0gb3B0aW9ucy5leGNsdWRlIHx8IFtdO1xuICAgIGNvbnN0IGN1c3RvbUVsZW1lbnRzID0gd2luLmN1c3RvbUVsZW1lbnRzO1xuICAgIGNvbnN0IGhlYWQgPSBkb2MuaGVhZDtcbiAgICBjb25zdCBtZXRhQ2hhcnNldCA9IC8qQF9fUFVSRV9fKi8gaGVhZC5xdWVyeVNlbGVjdG9yKCdtZXRhW2NoYXJzZXRdJyk7XG4gICAgY29uc3QgZGF0YVN0eWxlcyA9IC8qQF9fUFVSRV9fKi8gZG9jLmNyZWF0ZUVsZW1lbnQoJ3N0eWxlJyk7XG4gICAgY29uc3QgZGVmZXJyZWRDb25uZWN0ZWRDYWxsYmFja3MgPSBbXTtcbiAgICBjb25zdCBzdHlsZXMgPSAvKkBfX1BVUkVfXyovIGRvYy5xdWVyeVNlbGVjdG9yQWxsKGBbJHtIWURSQVRFRF9TVFlMRV9JRH1dYCk7XG4gICAgbGV0IGFwcExvYWRGYWxsYmFjaztcbiAgICBsZXQgaXNCb290c3RyYXBwaW5nID0gdHJ1ZTtcbiAgICBsZXQgaSA9IDA7XG4gICAgT2JqZWN0LmFzc2lnbihwbHQsIG9wdGlvbnMpO1xuICAgIHBsdC4kcmVzb3VyY2VzVXJsJCA9IG5ldyBVUkwob3B0aW9ucy5yZXNvdXJjZXNVcmwgfHwgJy4vJywgZG9jLmJhc2VVUkkpLmhyZWY7XG4gICAgaWYgKEJVSUxELmFzeW5jUXVldWUpIHtcbiAgICAgICAgaWYgKG9wdGlvbnMuc3luY1F1ZXVlKSB7XG4gICAgICAgICAgICBwbHQuJGZsYWdzJCB8PSA0IC8qIFBMQVRGT1JNX0ZMQUdTLnF1ZXVlU3luYyAqLztcbiAgICAgICAgfVxuICAgIH1cbiAgICBpZiAoQlVJTEQuaHlkcmF0ZUNsaWVudFNpZGUpIHtcbiAgICAgICAgLy8gSWYgdGhlIGFwcCBpcyBhbHJlYWR5IGh5ZHJhdGVkIHRoZXJlIGlzIG5vdCBwb2ludCB0byBkaXNhYmxlIHRoZVxuICAgICAgICAvLyBhc3luYyBxdWV1ZS4gVGhpcyB3aWxsIGltcHJvdmUgdGhlIGZpcnN0IGlucHV0IGRlbGF5XG4gICAgICAgIHBsdC4kZmxhZ3MkIHw9IDIgLyogUExBVEZPUk1fRkxBR1MuYXBwTG9hZGVkICovO1xuICAgIH1cbiAgICBpZiAoQlVJTEQuaHlkcmF0ZUNsaWVudFNpZGUgJiYgQlVJTEQuc2hhZG93RG9tKSB7XG4gICAgICAgIGZvciAoOyBpIDwgc3R5bGVzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICByZWdpc3RlclN0eWxlKHN0eWxlc1tpXS5nZXRBdHRyaWJ1dGUoSFlEUkFURURfU1RZTEVfSUQpLCBjb252ZXJ0U2NvcGVkVG9TaGFkb3coc3R5bGVzW2ldLmlubmVySFRNTCksIHRydWUpO1xuICAgICAgICB9XG4gICAgfVxuICAgIGxldCBoYXNTbG90UmVsb2NhdGlvbiA9IGZhbHNlO1xuICAgIGxhenlCdW5kbGVzLm1hcCgobGF6eUJ1bmRsZSkgPT4ge1xuICAgICAgICBsYXp5QnVuZGxlWzFdLm1hcCgoY29tcGFjdE1ldGEpID0+IHtcbiAgICAgICAgICAgIHZhciBfYTtcbiAgICAgICAgICAgIGNvbnN0IGNtcE1ldGEgPSB7XG4gICAgICAgICAgICAgICAgJGZsYWdzJDogY29tcGFjdE1ldGFbMF0sXG4gICAgICAgICAgICAgICAgJHRhZ05hbWUkOiBjb21wYWN0TWV0YVsxXSxcbiAgICAgICAgICAgICAgICAkbWVtYmVycyQ6IGNvbXBhY3RNZXRhWzJdLFxuICAgICAgICAgICAgICAgICRsaXN0ZW5lcnMkOiBjb21wYWN0TWV0YVszXSxcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICAvLyBDaGVjayBpZiB3ZSBhcmUgdXNpbmcgc2xvdHMgb3V0c2lkZSB0aGUgc2hhZG93IERPTSBpbiB0aGlzIGNvbXBvbmVudC5cbiAgICAgICAgICAgIC8vIFdlJ2xsIHVzZSB0aGlzIGluZm9ybWF0aW9uIGxhdGVyIHRvIGFkZCBzdHlsZXMgZm9yIGBzbG90LWZiYCBlbGVtZW50c1xuICAgICAgICAgICAgaWYgKGNtcE1ldGEuJGZsYWdzJCAmIDQgLyogQ01QX0ZMQUdTLmhhc1Nsb3RSZWxvY2F0aW9uICovKSB7XG4gICAgICAgICAgICAgICAgaGFzU2xvdFJlbG9jYXRpb24gPSB0cnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKEJVSUxELm1lbWJlcikge1xuICAgICAgICAgICAgICAgIGNtcE1ldGEuJG1lbWJlcnMkID0gY29tcGFjdE1ldGFbMl07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoQlVJTEQuaG9zdExpc3RlbmVyKSB7XG4gICAgICAgICAgICAgICAgY21wTWV0YS4kbGlzdGVuZXJzJCA9IGNvbXBhY3RNZXRhWzNdO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKEJVSUxELnJlZmxlY3QpIHtcbiAgICAgICAgICAgICAgICBjbXBNZXRhLiRhdHRyc1RvUmVmbGVjdCQgPSBbXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChCVUlMRC53YXRjaENhbGxiYWNrKSB7XG4gICAgICAgICAgICAgICAgY21wTWV0YS4kd2F0Y2hlcnMkID0gKF9hID0gY29tcGFjdE1ldGFbNF0pICE9PSBudWxsICYmIF9hICE9PSB2b2lkIDAgPyBfYSA6IHt9O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKEJVSUxELnNoYWRvd0RvbSAmJiAhc3VwcG9ydHNTaGFkb3cgJiYgY21wTWV0YS4kZmxhZ3MkICYgMSAvKiBDTVBfRkxBR1Muc2hhZG93RG9tRW5jYXBzdWxhdGlvbiAqLykge1xuICAgICAgICAgICAgICAgIC8vIFRPRE8oU1RFTkNJTC04NTQpOiBSZW1vdmUgY29kZSByZWxhdGVkIHRvIGxlZ2FjeSBzaGFkb3dEb21TaGltIGZpZWxkXG4gICAgICAgICAgICAgICAgY21wTWV0YS4kZmxhZ3MkIHw9IDggLyogQ01QX0ZMQUdTLm5lZWRzU2hhZG93RG9tU2hpbSAqLztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNvbnN0IHRhZ05hbWUgPSBCVUlMRC50cmFuc2Zvcm1UYWdOYW1lICYmIG9wdGlvbnMudHJhbnNmb3JtVGFnTmFtZVxuICAgICAgICAgICAgICAgID8gb3B0aW9ucy50cmFuc2Zvcm1UYWdOYW1lKGNtcE1ldGEuJHRhZ05hbWUkKVxuICAgICAgICAgICAgICAgIDogY21wTWV0YS4kdGFnTmFtZSQ7XG4gICAgICAgICAgICBjb25zdCBIb3N0RWxlbWVudCA9IGNsYXNzIGV4dGVuZHMgSFRNTEVsZW1lbnQge1xuICAgICAgICAgICAgICAgIC8vIFN0ZW5jaWxMYXp5SG9zdFxuICAgICAgICAgICAgICAgIGNvbnN0cnVjdG9yKHNlbGYpIHtcbiAgICAgICAgICAgICAgICAgICAgLy8gQHRzLWlnbm9yZVxuICAgICAgICAgICAgICAgICAgICBzdXBlcihzZWxmKTtcbiAgICAgICAgICAgICAgICAgICAgc2VsZiA9IHRoaXM7XG4gICAgICAgICAgICAgICAgICAgIHJlZ2lzdGVySG9zdChzZWxmLCBjbXBNZXRhKTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKEJVSUxELnNoYWRvd0RvbSAmJiBjbXBNZXRhLiRmbGFncyQgJiAxIC8qIENNUF9GTEFHUy5zaGFkb3dEb21FbmNhcHN1bGF0aW9uICovKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyB0aGlzIGNvbXBvbmVudCBpcyB1c2luZyBzaGFkb3cgZG9tXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBhbmQgdGhpcyBicm93c2VyIHN1cHBvcnRzIHNoYWRvdyBkb21cbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIGFkZCB0aGUgcmVhZC1vbmx5IHByb3BlcnR5IFwic2hhZG93Um9vdFwiIHRvIHRoZSBob3N0IGVsZW1lbnRcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIGFkZGluZyB0aGUgc2hhZG93IHJvb3QgYnVpbGQgY29uZGl0aW9uYWxzIHRvIG1pbmltaXplIHJ1bnRpbWVcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChzdXBwb3J0c1NoYWRvdykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChCVUlMRC5zaGFkb3dEZWxlZ2F0ZXNGb2N1cykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZWxmLmF0dGFjaFNoYWRvdyh7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtb2RlOiAnb3BlbicsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkZWxlZ2F0ZXNGb2N1czogISEoY21wTWV0YS4kZmxhZ3MkICYgMTYgLyogQ01QX0ZMQUdTLnNoYWRvd0RlbGVnYXRlc0ZvY3VzICovKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZWxmLmF0dGFjaFNoYWRvdyh7IG1vZGU6ICdvcGVuJyB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBlbHNlIGlmICghQlVJTEQuaHlkcmF0ZVNlcnZlclNpZGUgJiYgISgnc2hhZG93Um9vdCcgaW4gc2VsZikpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZWxmLnNoYWRvd1Jvb3QgPSBzZWxmO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGNvbm5lY3RlZENhbGxiYWNrKCkge1xuICAgICAgICAgICAgICAgICAgICBpZiAoYXBwTG9hZEZhbGxiYWNrKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjbGVhclRpbWVvdXQoYXBwTG9hZEZhbGxiYWNrKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGFwcExvYWRGYWxsYmFjayA9IG51bGw7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgaWYgKGlzQm9vdHN0cmFwcGluZykge1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8gY29ubmVjdGVkQ2FsbGJhY2sgd2lsbCBiZSBwcm9jZXNzZWQgb25jZSBhbGwgY29tcG9uZW50cyBoYXZlIGJlZW4gcmVnaXN0ZXJlZFxuICAgICAgICAgICAgICAgICAgICAgICAgZGVmZXJyZWRDb25uZWN0ZWRDYWxsYmFja3MucHVzaCh0aGlzKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHBsdC5qbXAoKCkgPT4gY29ubmVjdGVkQ2FsbGJhY2sodGhpcykpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGRpc2Nvbm5lY3RlZENhbGxiYWNrKCkge1xuICAgICAgICAgICAgICAgICAgICBwbHQuam1wKCgpID0+IGRpc2Nvbm5lY3RlZENhbGxiYWNrKHRoaXMpKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgY29tcG9uZW50T25SZWFkeSgpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGdldEhvc3RSZWYodGhpcykuJG9uUmVhZHlQcm9taXNlJDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgLy8gVE9ETyhTVEVOQ0lMLTkxNCk6IHRoaXMgY2hlY2sgYW5kIGBlbHNlYCBibG9jayBjYW4gZ28gYXdheSBhbmQgYmUgcmVwbGFjZWQgYnkganVzdCBgQlVJTEQuc2NvcGVkYCBvbmNlIHdlXG4gICAgICAgICAgICAvLyBkZWZhdWx0IG91ciBwc2V1ZG8tc2xvdCBiZWhhdmlvclxuICAgICAgICAgICAgaWYgKEJVSUxELmV4cGVyaW1lbnRhbFNsb3RGaXhlcyAmJiBCVUlMRC5zY29wZWQpIHtcbiAgICAgICAgICAgICAgICBwYXRjaFBzZXVkb1NoYWRvd0RvbShIb3N0RWxlbWVudC5wcm90b3R5cGUsIGNtcE1ldGEpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgaWYgKEJVSUxELnNsb3RDaGlsZE5vZGVzRml4KSB7XG4gICAgICAgICAgICAgICAgICAgIHBhdGNoQ2hpbGRTbG90Tm9kZXMoSG9zdEVsZW1lbnQucHJvdG90eXBlLCBjbXBNZXRhKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKEJVSUxELmNsb25lTm9kZUZpeCkge1xuICAgICAgICAgICAgICAgICAgICBwYXRjaENsb25lTm9kZShIb3N0RWxlbWVudC5wcm90b3R5cGUpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAoQlVJTEQuYXBwZW5kQ2hpbGRTbG90Rml4KSB7XG4gICAgICAgICAgICAgICAgICAgIHBhdGNoU2xvdEFwcGVuZENoaWxkKEhvc3RFbGVtZW50LnByb3RvdHlwZSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmIChCVUlMRC5zY29wZWRTbG90VGV4dENvbnRlbnRGaXgpIHtcbiAgICAgICAgICAgICAgICAgICAgcGF0Y2hUZXh0Q29udGVudChIb3N0RWxlbWVudC5wcm90b3R5cGUsIGNtcE1ldGEpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC8vIGlmIHRoZSBjb21wb25lbnQgaXMgZm9ybUFzc29jaWF0ZWQgd2UgbmVlZCB0byBzZXQgdGhhdCBvbiB0aGUgaG9zdFxuICAgICAgICAgICAgLy8gZWxlbWVudCBzbyB0aGF0IGl0IHdpbGwgYmUgcmVhZHkgZm9yIGBhdHRhY2hJbnRlcm5hbHNgIHRvIGJlIGNhbGxlZCBvblxuICAgICAgICAgICAgLy8gaXQgbGF0ZXIgb25cbiAgICAgICAgICAgIGlmIChCVUlMRC5mb3JtQXNzb2NpYXRlZCAmJiBjbXBNZXRhLiRmbGFncyQgJiA2NCAvKiBDTVBfRkxBR1MuZm9ybUFzc29jaWF0ZWQgKi8pIHtcbiAgICAgICAgICAgICAgICBIb3N0RWxlbWVudC5mb3JtQXNzb2NpYXRlZCA9IHRydWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoQlVJTEQuaG90TW9kdWxlUmVwbGFjZW1lbnQpIHtcbiAgICAgICAgICAgICAgICAvLyBpZiB3ZSdyZSBpbiBhbiBITVIgZGV2IGJ1aWxkIHRoZW4gd2UgbmVlZCB0byBzZXQgdXAgdGhlIGNhbGxiYWNrXG4gICAgICAgICAgICAgICAgLy8gd2hpY2ggd2lsbCBjYXJyeSBvdXQgdGhlIHdvcmsgb2YgYWN0dWFsbHkgcmVwbGFjaW5nIHRoZSBtb2R1bGUgZm9yXG4gICAgICAgICAgICAgICAgLy8gdGhpcyBwYXJ0aWN1bGFyIGNvbXBvbmVudFxuICAgICAgICAgICAgICAgIEhvc3RFbGVtZW50LnByb3RvdHlwZVsncy1obXInXSA9IGZ1bmN0aW9uIChobXJWZXJzaW9uSWQpIHtcbiAgICAgICAgICAgICAgICAgICAgaG1yU3RhcnQodGhpcywgY21wTWV0YSwgaG1yVmVyc2lvbklkKTtcbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY21wTWV0YS4kbGF6eUJ1bmRsZUlkJCA9IGxhenlCdW5kbGVbMF07XG4gICAgICAgICAgICBpZiAoIWV4Y2x1ZGUuaW5jbHVkZXModGFnTmFtZSkgJiYgIWN1c3RvbUVsZW1lbnRzLmdldCh0YWdOYW1lKSkge1xuICAgICAgICAgICAgICAgIGNtcFRhZ3MucHVzaCh0YWdOYW1lKTtcbiAgICAgICAgICAgICAgICBjdXN0b21FbGVtZW50cy5kZWZpbmUodGFnTmFtZSwgcHJveHlDb21wb25lbnQoSG9zdEVsZW1lbnQsIGNtcE1ldGEsIDEgLyogUFJPWFlfRkxBR1MuaXNFbGVtZW50Q29uc3RydWN0b3IgKi8pKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfSk7XG4gICAgLy8gQWRkIHN0eWxlcyBmb3IgYHNsb3QtZmJgIGVsZW1lbnRzIGlmIGFueSBvZiBvdXIgY29tcG9uZW50cyBhcmUgdXNpbmcgc2xvdHMgb3V0c2lkZSB0aGUgU2hhZG93IERPTVxuICAgIGlmIChoYXNTbG90UmVsb2NhdGlvbikge1xuICAgICAgICBkYXRhU3R5bGVzLmlubmVySFRNTCArPSBTTE9UX0ZCX0NTUztcbiAgICB9XG4gICAgLy8gQWRkIGh5ZHJhdGlvbiBzdHlsZXNcbiAgICBpZiAoQlVJTEQuaW52aXNpYmxlUHJlaHlkcmF0aW9uICYmIChCVUlMRC5oeWRyYXRlZENsYXNzIHx8IEJVSUxELmh5ZHJhdGVkQXR0cmlidXRlKSkge1xuICAgICAgICBkYXRhU3R5bGVzLmlubmVySFRNTCArPSBjbXBUYWdzICsgSFlEUkFURURfQ1NTO1xuICAgIH1cbiAgICAvLyBJZiB3ZSBoYXZlIHN0eWxlcywgYWRkIHRoZW0gdG8gdGhlIERPTVxuICAgIGlmIChkYXRhU3R5bGVzLmlubmVySFRNTC5sZW5ndGgpIHtcbiAgICAgICAgZGF0YVN0eWxlcy5zZXRBdHRyaWJ1dGUoJ2RhdGEtc3R5bGVzJywgJycpO1xuICAgICAgICBoZWFkLmluc2VydEJlZm9yZShkYXRhU3R5bGVzLCBtZXRhQ2hhcnNldCA/IG1ldGFDaGFyc2V0Lm5leHRTaWJsaW5nIDogaGVhZC5maXJzdENoaWxkKTtcbiAgICAgICAgLy8gQXBwbHkgQ1NQIG5vbmNlIHRvIHRoZSBzdHlsZSB0YWcgaWYgaXQgZXhpc3RzXG4gICAgICAgIGNvbnN0IG5vbmNlID0gKF9hID0gcGx0LiRub25jZSQpICE9PSBudWxsICYmIF9hICE9PSB2b2lkIDAgPyBfYSA6IHF1ZXJ5Tm9uY2VNZXRhVGFnQ29udGVudChkb2MpO1xuICAgICAgICBpZiAobm9uY2UgIT0gbnVsbCkge1xuICAgICAgICAgICAgZGF0YVN0eWxlcy5zZXRBdHRyaWJ1dGUoJ25vbmNlJywgbm9uY2UpO1xuICAgICAgICB9XG4gICAgfVxuICAgIC8vIFByb2Nlc3MgZGVmZXJyZWQgY29ubmVjdGVkQ2FsbGJhY2tzIG5vdyBhbGwgY29tcG9uZW50cyBoYXZlIGJlZW4gcmVnaXN0ZXJlZFxuICAgIGlzQm9vdHN0cmFwcGluZyA9IGZhbHNlO1xuICAgIGlmIChkZWZlcnJlZENvbm5lY3RlZENhbGxiYWNrcy5sZW5ndGgpIHtcbiAgICAgICAgZGVmZXJyZWRDb25uZWN0ZWRDYWxsYmFja3MubWFwKChob3N0KSA9PiBob3N0LmNvbm5lY3RlZENhbGxiYWNrKCkpO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgaWYgKEJVSUxELnByb2ZpbGUpIHtcbiAgICAgICAgICAgIHBsdC5qbXAoKCkgPT4gKGFwcExvYWRGYWxsYmFjayA9IHNldFRpbWVvdXQoYXBwRGlkTG9hZCwgMzAsICd0aW1lb3V0JykpKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHBsdC5qbXAoKCkgPT4gKGFwcExvYWRGYWxsYmFjayA9IHNldFRpbWVvdXQoYXBwRGlkTG9hZCwgMzApKSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgLy8gRmFsbGJhY2sgYXBwTG9hZCBldmVudFxuICAgIGVuZEJvb3RzdHJhcCgpO1xufTtcbmNvbnN0IEZyYWdtZW50ID0gKF8sIGNoaWxkcmVuKSA9PiBjaGlsZHJlbjtcbmNvbnN0IGFkZEhvc3RFdmVudExpc3RlbmVycyA9IChlbG0sIGhvc3RSZWYsIGxpc3RlbmVycywgYXR0YWNoUGFyZW50TGlzdGVuZXJzKSA9PiB7XG4gICAgaWYgKEJVSUxELmhvc3RMaXN0ZW5lciAmJiBsaXN0ZW5lcnMpIHtcbiAgICAgICAgLy8gdGhpcyBpcyBjYWxsZWQgaW1tZWRpYXRlbHkgd2l0aGluIHRoZSBlbGVtZW50J3MgY29uc3RydWN0b3JcbiAgICAgICAgLy8gaW5pdGlhbGl6ZSBvdXIgZXZlbnQgbGlzdGVuZXJzIG9uIHRoZSBob3N0IGVsZW1lbnRcbiAgICAgICAgLy8gd2UgZG8gdGhpcyBub3cgc28gdGhhdCB3ZSBjYW4gbGlzdGVuIHRvIGV2ZW50cyB0aGF0IG1heVxuICAgICAgICAvLyBoYXZlIGZpcmVkIGV2ZW4gYmVmb3JlIHRoZSBpbnN0YW5jZSBpcyByZWFkeVxuICAgICAgICBpZiAoQlVJTEQuaG9zdExpc3RlbmVyVGFyZ2V0UGFyZW50KSB7XG4gICAgICAgICAgICAvLyB0aGlzIGNvbXBvbmVudCBtYXkgaGF2ZSBldmVudCBsaXN0ZW5lcnMgdGhhdCBzaG91bGQgYmUgYXR0YWNoZWQgdG8gdGhlIHBhcmVudFxuICAgICAgICAgICAgaWYgKGF0dGFjaFBhcmVudExpc3RlbmVycykge1xuICAgICAgICAgICAgICAgIC8vIHRoaXMgaXMgYmVpbmcgcmFuIGZyb20gd2l0aGluIHRoZSBjb25uZWN0ZWRDYWxsYmFja1xuICAgICAgICAgICAgICAgIC8vIHdoaWNoIGlzIGltcG9ydGFudCBzbyB0aGF0IHdlIGtub3cgdGhlIGhvc3QgZWxlbWVudCBhY3R1YWxseSBoYXMgYSBwYXJlbnQgZWxlbWVudFxuICAgICAgICAgICAgICAgIC8vIGZpbHRlciBvdXQgdGhlIGxpc3RlbmVycyB0byBvbmx5IGhhdmUgdGhlIG9uZXMgdGhhdCBBUkUgYmVpbmcgYXR0YWNoZWQgdG8gdGhlIHBhcmVudFxuICAgICAgICAgICAgICAgIGxpc3RlbmVycyA9IGxpc3RlbmVycy5maWx0ZXIoKFtmbGFnc10pID0+IGZsYWdzICYgMzIgLyogTElTVEVORVJfRkxBR1MuVGFyZ2V0UGFyZW50ICovKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIC8vIHRoaXMgaXMgYmVpbmcgcmFuIGZyb20gd2l0aGluIHRoZSBjb21wb25lbnQgY29uc3RydWN0b3JcbiAgICAgICAgICAgICAgICAvLyBldmVyeXRoaW5nIEJVVCB0aGUgcGFyZW50IGVsZW1lbnQgbGlzdGVuZXJzIHNob3VsZCBiZSBhdHRhY2hlZCBhdCB0aGlzIHRpbWVcbiAgICAgICAgICAgICAgICAvLyBmaWx0ZXIgb3V0IHRoZSBsaXN0ZW5lcnMgdGhhdCBhcmUgTk9UIGJlaW5nIGF0dGFjaGVkIHRvIHRoZSBwYXJlbnRcbiAgICAgICAgICAgICAgICBsaXN0ZW5lcnMgPSBsaXN0ZW5lcnMuZmlsdGVyKChbZmxhZ3NdKSA9PiAhKGZsYWdzICYgMzIgLyogTElTVEVORVJfRkxBR1MuVGFyZ2V0UGFyZW50ICovKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgbGlzdGVuZXJzLm1hcCgoW2ZsYWdzLCBuYW1lLCBtZXRob2RdKSA9PiB7XG4gICAgICAgICAgICBjb25zdCB0YXJnZXQgPSBCVUlMRC5ob3N0TGlzdGVuZXJUYXJnZXQgPyBnZXRIb3N0TGlzdGVuZXJUYXJnZXQoZWxtLCBmbGFncykgOiBlbG07XG4gICAgICAgICAgICBjb25zdCBoYW5kbGVyID0gaG9zdExpc3RlbmVyUHJveHkoaG9zdFJlZiwgbWV0aG9kKTtcbiAgICAgICAgICAgIGNvbnN0IG9wdHMgPSBob3N0TGlzdGVuZXJPcHRzKGZsYWdzKTtcbiAgICAgICAgICAgIHBsdC5hZWwodGFyZ2V0LCBuYW1lLCBoYW5kbGVyLCBvcHRzKTtcbiAgICAgICAgICAgIChob3N0UmVmLiRybUxpc3RlbmVycyQgPSBob3N0UmVmLiRybUxpc3RlbmVycyQgfHwgW10pLnB1c2goKCkgPT4gcGx0LnJlbCh0YXJnZXQsIG5hbWUsIGhhbmRsZXIsIG9wdHMpKTtcbiAgICAgICAgfSk7XG4gICAgfVxufTtcbmNvbnN0IGhvc3RMaXN0ZW5lclByb3h5ID0gKGhvc3RSZWYsIG1ldGhvZE5hbWUpID0+IChldikgPT4ge1xuICAgIHRyeSB7XG4gICAgICAgIGlmIChCVUlMRC5sYXp5TG9hZCkge1xuICAgICAgICAgICAgaWYgKGhvc3RSZWYuJGZsYWdzJCAmIDI1NiAvKiBIT1NUX0ZMQUdTLmlzTGlzdGVuUmVhZHkgKi8pIHtcbiAgICAgICAgICAgICAgICAvLyBpbnN0YW5jZSBpcyByZWFkeSwgbGV0J3MgY2FsbCBpdCdzIG1lbWJlciBtZXRob2QgZm9yIHRoaXMgZXZlbnRcbiAgICAgICAgICAgICAgICBob3N0UmVmLiRsYXp5SW5zdGFuY2UkW21ldGhvZE5hbWVdKGV2KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIChob3N0UmVmLiRxdWV1ZWRMaXN0ZW5lcnMkID0gaG9zdFJlZi4kcXVldWVkTGlzdGVuZXJzJCB8fCBbXSkucHVzaChbbWV0aG9kTmFtZSwgZXZdKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIGhvc3RSZWYuJGhvc3RFbGVtZW50JFttZXRob2ROYW1lXShldik7XG4gICAgICAgIH1cbiAgICB9XG4gICAgY2F0Y2ggKGUpIHtcbiAgICAgICAgY29uc29sZUVycm9yKGUpO1xuICAgIH1cbn07XG5jb25zdCBnZXRIb3N0TGlzdGVuZXJUYXJnZXQgPSAoZWxtLCBmbGFncykgPT4ge1xuICAgIGlmIChCVUlMRC5ob3N0TGlzdGVuZXJUYXJnZXREb2N1bWVudCAmJiBmbGFncyAmIDQgLyogTElTVEVORVJfRkxBR1MuVGFyZ2V0RG9jdW1lbnQgKi8pXG4gICAgICAgIHJldHVybiBkb2M7XG4gICAgaWYgKEJVSUxELmhvc3RMaXN0ZW5lclRhcmdldFdpbmRvdyAmJiBmbGFncyAmIDggLyogTElTVEVORVJfRkxBR1MuVGFyZ2V0V2luZG93ICovKVxuICAgICAgICByZXR1cm4gd2luO1xuICAgIGlmIChCVUlMRC5ob3N0TGlzdGVuZXJUYXJnZXRCb2R5ICYmIGZsYWdzICYgMTYgLyogTElTVEVORVJfRkxBR1MuVGFyZ2V0Qm9keSAqLylcbiAgICAgICAgcmV0dXJuIGRvYy5ib2R5O1xuICAgIGlmIChCVUlMRC5ob3N0TGlzdGVuZXJUYXJnZXRQYXJlbnQgJiYgZmxhZ3MgJiAzMiAvKiBMSVNURU5FUl9GTEFHUy5UYXJnZXRQYXJlbnQgKi8pXG4gICAgICAgIHJldHVybiBlbG0ucGFyZW50RWxlbWVudDtcbiAgICByZXR1cm4gZWxtO1xufTtcbi8vIHByZXR0aWVyLWlnbm9yZVxuY29uc3QgaG9zdExpc3RlbmVyT3B0cyA9IChmbGFncykgPT4gc3VwcG9ydHNMaXN0ZW5lck9wdGlvbnNcbiAgICA/ICh7XG4gICAgICAgIHBhc3NpdmU6IChmbGFncyAmIDEgLyogTElTVEVORVJfRkxBR1MuUGFzc2l2ZSAqLykgIT09IDAsXG4gICAgICAgIGNhcHR1cmU6IChmbGFncyAmIDIgLyogTElTVEVORVJfRkxBR1MuQ2FwdHVyZSAqLykgIT09IDAsXG4gICAgfSlcbiAgICA6IChmbGFncyAmIDIgLyogTElTVEVORVJfRkxBR1MuQ2FwdHVyZSAqLykgIT09IDA7XG4vKipcbiAqIEFzc2lnbnMgdGhlIGdpdmVuIHZhbHVlIHRvIHRoZSBub25jZSBwcm9wZXJ0eSBvbiB0aGUgcnVudGltZSBwbGF0Zm9ybSBvYmplY3QuXG4gKiBEdXJpbmcgcnVudGltZSwgdGhpcyB2YWx1ZSBpcyB1c2VkIHRvIHNldCB0aGUgbm9uY2UgYXR0cmlidXRlIG9uIGFsbCBkeW5hbWljYWxseSBjcmVhdGVkIHNjcmlwdCBhbmQgc3R5bGUgdGFncy5cbiAqIEBwYXJhbSBub25jZSBUaGUgdmFsdWUgdG8gYmUgYXNzaWduZWQgdG8gdGhlIHBsYXRmb3JtIG5vbmNlIHByb3BlcnR5LlxuICogQHJldHVybnMgdm9pZFxuICovXG5jb25zdCBzZXROb25jZSA9IChub25jZSkgPT4gKHBsdC4kbm9uY2UkID0gbm9uY2UpO1xuY29uc3Qgc2V0UGxhdGZvcm1PcHRpb25zID0gKG9wdHMpID0+IE9iamVjdC5hc3NpZ24ocGx0LCBvcHRzKTtcbmNvbnN0IGluc2VydFZkb21Bbm5vdGF0aW9ucyA9IChkb2MsIHN0YXRpY0NvbXBvbmVudHMpID0+IHtcbiAgICBpZiAoZG9jICE9IG51bGwpIHtcbiAgICAgICAgY29uc3QgZG9jRGF0YSA9IHtcbiAgICAgICAgICAgIGhvc3RJZHM6IDAsXG4gICAgICAgICAgICByb290TGV2ZWxJZHM6IDAsXG4gICAgICAgICAgICBzdGF0aWNDb21wb25lbnRzOiBuZXcgU2V0KHN0YXRpY0NvbXBvbmVudHMpLFxuICAgICAgICB9O1xuICAgICAgICBjb25zdCBvcmdMb2NhdGlvbk5vZGVzID0gW107XG4gICAgICAgIHBhcnNlVk5vZGVBbm5vdGF0aW9ucyhkb2MsIGRvYy5ib2R5LCBkb2NEYXRhLCBvcmdMb2NhdGlvbk5vZGVzKTtcbiAgICAgICAgb3JnTG9jYXRpb25Ob2Rlcy5mb3JFYWNoKChvcmdMb2NhdGlvbk5vZGUpID0+IHtcbiAgICAgICAgICAgIGlmIChvcmdMb2NhdGlvbk5vZGUgIT0gbnVsbCkge1xuICAgICAgICAgICAgICAgIGNvbnN0IG5vZGVSZWYgPSBvcmdMb2NhdGlvbk5vZGVbJ3MtbnInXTtcbiAgICAgICAgICAgICAgICBsZXQgaG9zdElkID0gbm9kZVJlZlsncy1ob3N0LWlkJ107XG4gICAgICAgICAgICAgICAgbGV0IG5vZGVJZCA9IG5vZGVSZWZbJ3Mtbm9kZS1pZCddO1xuICAgICAgICAgICAgICAgIGxldCBjaGlsZElkID0gYCR7aG9zdElkfS4ke25vZGVJZH1gO1xuICAgICAgICAgICAgICAgIGlmIChob3N0SWQgPT0gbnVsbCkge1xuICAgICAgICAgICAgICAgICAgICBob3N0SWQgPSAwO1xuICAgICAgICAgICAgICAgICAgICBkb2NEYXRhLnJvb3RMZXZlbElkcysrO1xuICAgICAgICAgICAgICAgICAgICBub2RlSWQgPSBkb2NEYXRhLnJvb3RMZXZlbElkcztcbiAgICAgICAgICAgICAgICAgICAgY2hpbGRJZCA9IGAke2hvc3RJZH0uJHtub2RlSWR9YDtcbiAgICAgICAgICAgICAgICAgICAgaWYgKG5vZGVSZWYubm9kZVR5cGUgPT09IDEgLyogTk9ERV9UWVBFLkVsZW1lbnROb2RlICovKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBub2RlUmVmLnNldEF0dHJpYnV0ZShIWURSQVRFX0NISUxEX0lELCBjaGlsZElkKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBlbHNlIGlmIChub2RlUmVmLm5vZGVUeXBlID09PSAzIC8qIE5PREVfVFlQRS5UZXh0Tm9kZSAqLykge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGhvc3RJZCA9PT0gMCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHRleHRDb250ZW50ID0gbm9kZVJlZi5ub2RlVmFsdWUudHJpbSgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0ZXh0Q29udGVudCA9PT0gJycpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gdXNlbGVzcyB3aGl0ZXNwYWNlIG5vZGUgYXQgdGhlIGRvY3VtZW50IHJvb3RcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb3JnTG9jYXRpb25Ob2RlLnJlbW92ZSgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgY29tbWVudEJlZm9yZVRleHROb2RlID0gZG9jLmNyZWF0ZUNvbW1lbnQoY2hpbGRJZCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb21tZW50QmVmb3JlVGV4dE5vZGUubm9kZVZhbHVlID0gYCR7VEVYVF9OT0RFX0lEfS4ke2NoaWxkSWR9YDtcbiAgICAgICAgICAgICAgICAgICAgICAgIG5vZGVSZWYucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUoY29tbWVudEJlZm9yZVRleHROb2RlLCBub2RlUmVmKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBsZXQgb3JnTG9jYXRpb25Ob2RlSWQgPSBgJHtPUkdfTE9DQVRJT05fSUR9LiR7Y2hpbGRJZH1gO1xuICAgICAgICAgICAgICAgIGNvbnN0IG9yZ0xvY2F0aW9uUGFyZW50Tm9kZSA9IG9yZ0xvY2F0aW9uTm9kZS5wYXJlbnRFbGVtZW50O1xuICAgICAgICAgICAgICAgIGlmIChvcmdMb2NhdGlvblBhcmVudE5vZGUpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKG9yZ0xvY2F0aW9uUGFyZW50Tm9kZVsncy1lbiddID09PSAnJykge1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8gZW5kaW5nIHdpdGggYSBcIi5cIiBtZWFucyB0aGF0IHRoZSBwYXJlbnQgZWxlbWVudFxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gb2YgdGhpcyBub2RlJ3Mgb3JpZ2luYWwgbG9jYXRpb24gaXMgYSBTSEFET1cgZG9tIGVsZW1lbnRcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIGFuZCB0aGlzIG5vZGUgaXMgYXBhcnQgb2YgdGhlIHJvb3QgbGV2ZWwgbGlnaHQgZG9tXG4gICAgICAgICAgICAgICAgICAgICAgICBvcmdMb2NhdGlvbk5vZGVJZCArPSBgLmA7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgZWxzZSBpZiAob3JnTG9jYXRpb25QYXJlbnROb2RlWydzLWVuJ10gPT09ICdjJykge1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8gZW5kaW5nIHdpdGggYSBcIi5jXCIgbWVhbnMgdGhhdCB0aGUgcGFyZW50IGVsZW1lbnRcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIG9mIHRoaXMgbm9kZSdzIG9yaWdpbmFsIGxvY2F0aW9uIGlzIGEgU0NPUEVEIGVsZW1lbnRcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIGFuZCB0aGlzIG5vZGUgaXMgYXBhcnQgb2YgdGhlIHJvb3QgbGV2ZWwgbGlnaHQgZG9tXG4gICAgICAgICAgICAgICAgICAgICAgICBvcmdMb2NhdGlvbk5vZGVJZCArPSBgLmNgO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIG9yZ0xvY2F0aW9uTm9kZS5ub2RlVmFsdWUgPSBvcmdMb2NhdGlvbk5vZGVJZDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfVxufTtcbmNvbnN0IHBhcnNlVk5vZGVBbm5vdGF0aW9ucyA9IChkb2MsIG5vZGUsIGRvY0RhdGEsIG9yZ0xvY2F0aW9uTm9kZXMpID0+IHtcbiAgICBpZiAobm9kZSA9PSBudWxsKSB7XG4gICAgICAgIHJldHVybjtcbiAgICB9XG4gICAgaWYgKG5vZGVbJ3MtbnInXSAhPSBudWxsKSB7XG4gICAgICAgIG9yZ0xvY2F0aW9uTm9kZXMucHVzaChub2RlKTtcbiAgICB9XG4gICAgaWYgKG5vZGUubm9kZVR5cGUgPT09IDEgLyogTk9ERV9UWVBFLkVsZW1lbnROb2RlICovKSB7XG4gICAgICAgIG5vZGUuY2hpbGROb2Rlcy5mb3JFYWNoKChjaGlsZE5vZGUpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IGhvc3RSZWYgPSBnZXRIb3N0UmVmKGNoaWxkTm9kZSk7XG4gICAgICAgICAgICBpZiAoaG9zdFJlZiAhPSBudWxsICYmICFkb2NEYXRhLnN0YXRpY0NvbXBvbmVudHMuaGFzKGNoaWxkTm9kZS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpKSkge1xuICAgICAgICAgICAgICAgIGNvbnN0IGNtcERhdGEgPSB7XG4gICAgICAgICAgICAgICAgICAgIG5vZGVJZHM6IDAsXG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICBpbnNlcnRWTm9kZUFubm90YXRpb25zKGRvYywgY2hpbGROb2RlLCBob3N0UmVmLiR2bm9kZSQsIGRvY0RhdGEsIGNtcERhdGEpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcGFyc2VWTm9kZUFubm90YXRpb25zKGRvYywgY2hpbGROb2RlLCBkb2NEYXRhLCBvcmdMb2NhdGlvbk5vZGVzKTtcbiAgICAgICAgfSk7XG4gICAgfVxufTtcbmNvbnN0IGluc2VydFZOb2RlQW5ub3RhdGlvbnMgPSAoZG9jLCBob3N0RWxtLCB2bm9kZSwgZG9jRGF0YSwgY21wRGF0YSkgPT4ge1xuICAgIGlmICh2bm9kZSAhPSBudWxsKSB7XG4gICAgICAgIGNvbnN0IGhvc3RJZCA9ICsrZG9jRGF0YS5ob3N0SWRzO1xuICAgICAgICBob3N0RWxtLnNldEF0dHJpYnV0ZShIWURSQVRFX0lELCBob3N0SWQpO1xuICAgICAgICBpZiAoaG9zdEVsbVsncy1jciddICE9IG51bGwpIHtcbiAgICAgICAgICAgIGhvc3RFbG1bJ3MtY3InXS5ub2RlVmFsdWUgPSBgJHtDT05URU5UX1JFRl9JRH0uJHtob3N0SWR9YDtcbiAgICAgICAgfVxuICAgICAgICBpZiAodm5vZGUuJGNoaWxkcmVuJCAhPSBudWxsKSB7XG4gICAgICAgICAgICBjb25zdCBkZXB0aCA9IDA7XG4gICAgICAgICAgICB2bm9kZS4kY2hpbGRyZW4kLmZvckVhY2goKHZub2RlQ2hpbGQsIGluZGV4KSA9PiB7XG4gICAgICAgICAgICAgICAgaW5zZXJ0Q2hpbGRWTm9kZUFubm90YXRpb25zKGRvYywgdm5vZGVDaGlsZCwgY21wRGF0YSwgaG9zdElkLCBkZXB0aCwgaW5kZXgpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGhvc3RFbG0gJiYgdm5vZGUgJiYgdm5vZGUuJGVsbSQgJiYgIWhvc3RFbG0uaGFzQXR0cmlidXRlKCdjLWlkJykpIHtcbiAgICAgICAgICAgIGNvbnN0IHBhcmVudCA9IGhvc3RFbG0ucGFyZW50RWxlbWVudDtcbiAgICAgICAgICAgIGlmIChwYXJlbnQgJiYgcGFyZW50LmNoaWxkTm9kZXMpIHtcbiAgICAgICAgICAgICAgICBjb25zdCBwYXJlbnRDaGlsZE5vZGVzID0gQXJyYXkuZnJvbShwYXJlbnQuY2hpbGROb2Rlcyk7XG4gICAgICAgICAgICAgICAgY29uc3QgY29tbWVudCA9IHBhcmVudENoaWxkTm9kZXMuZmluZCgobm9kZSkgPT4gbm9kZS5ub2RlVHlwZSA9PT0gOCAvKiBOT0RFX1RZUEUuQ29tbWVudE5vZGUgKi8gJiYgbm9kZVsncy1zciddKTtcbiAgICAgICAgICAgICAgICBpZiAoY29tbWVudCkge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBpbmRleCA9IHBhcmVudENoaWxkTm9kZXMuaW5kZXhPZihob3N0RWxtKSAtIDE7XG4gICAgICAgICAgICAgICAgICAgIHZub2RlLiRlbG0kLnNldEF0dHJpYnV0ZShIWURSQVRFX0NISUxEX0lELCBgJHtjb21tZW50WydzLWhvc3QtaWQnXX0uJHtjb21tZW50WydzLW5vZGUtaWQnXX0uMC4ke2luZGV4fWApO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbn07XG5jb25zdCBpbnNlcnRDaGlsZFZOb2RlQW5ub3RhdGlvbnMgPSAoZG9jLCB2bm9kZUNoaWxkLCBjbXBEYXRhLCBob3N0SWQsIGRlcHRoLCBpbmRleCkgPT4ge1xuICAgIGNvbnN0IGNoaWxkRWxtID0gdm5vZGVDaGlsZC4kZWxtJDtcbiAgICBpZiAoY2hpbGRFbG0gPT0gbnVsbCkge1xuICAgICAgICByZXR1cm47XG4gICAgfVxuICAgIGNvbnN0IG5vZGVJZCA9IGNtcERhdGEubm9kZUlkcysrO1xuICAgIGNvbnN0IGNoaWxkSWQgPSBgJHtob3N0SWR9LiR7bm9kZUlkfS4ke2RlcHRofS4ke2luZGV4fWA7XG4gICAgY2hpbGRFbG1bJ3MtaG9zdC1pZCddID0gaG9zdElkO1xuICAgIGNoaWxkRWxtWydzLW5vZGUtaWQnXSA9IG5vZGVJZDtcbiAgICBpZiAoY2hpbGRFbG0ubm9kZVR5cGUgPT09IDEgLyogTk9ERV9UWVBFLkVsZW1lbnROb2RlICovKSB7XG4gICAgICAgIGNoaWxkRWxtLnNldEF0dHJpYnV0ZShIWURSQVRFX0NISUxEX0lELCBjaGlsZElkKTtcbiAgICB9XG4gICAgZWxzZSBpZiAoY2hpbGRFbG0ubm9kZVR5cGUgPT09IDMgLyogTk9ERV9UWVBFLlRleHROb2RlICovKSB7XG4gICAgICAgIGNvbnN0IHBhcmVudE5vZGUgPSBjaGlsZEVsbS5wYXJlbnROb2RlO1xuICAgICAgICBjb25zdCBub2RlTmFtZSA9IHBhcmVudE5vZGUubm9kZU5hbWU7XG4gICAgICAgIGlmIChub2RlTmFtZSAhPT0gJ1NUWUxFJyAmJiBub2RlTmFtZSAhPT0gJ1NDUklQVCcpIHtcbiAgICAgICAgICAgIGNvbnN0IHRleHROb2RlSWQgPSBgJHtURVhUX05PREVfSUR9LiR7Y2hpbGRJZH1gO1xuICAgICAgICAgICAgY29uc3QgY29tbWVudEJlZm9yZVRleHROb2RlID0gZG9jLmNyZWF0ZUNvbW1lbnQodGV4dE5vZGVJZCk7XG4gICAgICAgICAgICBwYXJlbnROb2RlLmluc2VydEJlZm9yZShjb21tZW50QmVmb3JlVGV4dE5vZGUsIGNoaWxkRWxtKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBlbHNlIGlmIChjaGlsZEVsbS5ub2RlVHlwZSA9PT0gOCAvKiBOT0RFX1RZUEUuQ29tbWVudE5vZGUgKi8pIHtcbiAgICAgICAgaWYgKGNoaWxkRWxtWydzLXNyJ10pIHtcbiAgICAgICAgICAgIGNvbnN0IHNsb3ROYW1lID0gY2hpbGRFbG1bJ3Mtc24nXSB8fCAnJztcbiAgICAgICAgICAgIGNvbnN0IHNsb3ROb2RlSWQgPSBgJHtTTE9UX05PREVfSUR9LiR7Y2hpbGRJZH0uJHtzbG90TmFtZX1gO1xuICAgICAgICAgICAgY2hpbGRFbG0ubm9kZVZhbHVlID0gc2xvdE5vZGVJZDtcbiAgICAgICAgfVxuICAgIH1cbiAgICBpZiAodm5vZGVDaGlsZC4kY2hpbGRyZW4kICE9IG51bGwpIHtcbiAgICAgICAgY29uc3QgY2hpbGREZXB0aCA9IGRlcHRoICsgMTtcbiAgICAgICAgdm5vZGVDaGlsZC4kY2hpbGRyZW4kLmZvckVhY2goKHZub2RlLCBpbmRleCkgPT4ge1xuICAgICAgICAgICAgaW5zZXJ0Q2hpbGRWTm9kZUFubm90YXRpb25zKGRvYywgdm5vZGUsIGNtcERhdGEsIGhvc3RJZCwgY2hpbGREZXB0aCwgaW5kZXgpO1xuICAgICAgICB9KTtcbiAgICB9XG59O1xuLyoqXG4gKiBBIFdlYWtNYXAgbWFwcGluZyBydW50aW1lIGNvbXBvbmVudCByZWZlcmVuY2VzIHRvIHRoZWlyIGNvcnJlc3BvbmRpbmcgaG9zdCByZWZlcmVuY2VcbiAqIGluc3RhbmNlcy5cbiAqL1xuY29uc3QgaG9zdFJlZnMgPSAvKkBfX1BVUkVfXyovIG5ldyBXZWFrTWFwKCk7XG4vKipcbiAqIEdpdmVuIGEge0BsaW5rIGQuUnVudGltZVJlZn0gcmV0cmlldmUgdGhlIGNvcnJlc3BvbmRpbmcge0BsaW5rIGQuSG9zdFJlZn1cbiAqXG4gKiBAcGFyYW0gcmVmIHRoZSBydW50aW1lIHJlZiBvZiBpbnRlcmVzdFxuICogQHJldHVybnMgdGhlIEhvc3QgcmVmZXJlbmNlIChpZiBmb3VuZCkgb3IgdW5kZWZpbmVkXG4gKi9cbmNvbnN0IGdldEhvc3RSZWYgPSAocmVmKSA9PiBob3N0UmVmcy5nZXQocmVmKTtcbi8qKlxuICogUmVnaXN0ZXIgYSBsYXp5IGluc3RhbmNlIHdpdGggdGhlIHtAbGluayBob3N0UmVmc30gb2JqZWN0IHNvIGl0J3NcbiAqIGNvcnJlc3BvbmRpbmcge0BsaW5rIGQuSG9zdFJlZn0gY2FuIGJlIHJldHJpZXZlZCBsYXRlci5cbiAqXG4gKiBAcGFyYW0gbGF6eUluc3RhbmNlIHRoZSBsYXp5IGluc3RhbmNlIG9mIGludGVyZXN0XG4gKiBAcGFyYW0gaG9zdFJlZiB0aGF0IGluc3RhbmNlcyBgSG9zdFJlZmAgb2JqZWN0XG4gKiBAcmV0dXJucyBhIHJlZmVyZW5jZSB0byB0aGUgaG9zdCByZWYgV2Vha01hcFxuICovXG5jb25zdCByZWdpc3Rlckluc3RhbmNlID0gKGxhenlJbnN0YW5jZSwgaG9zdFJlZikgPT4gaG9zdFJlZnMuc2V0KChob3N0UmVmLiRsYXp5SW5zdGFuY2UkID0gbGF6eUluc3RhbmNlKSwgaG9zdFJlZik7XG4vKipcbiAqIFJlZ2lzdGVyIGEgaG9zdCBlbGVtZW50IGZvciBhIFN0ZW5jaWwgY29tcG9uZW50LCBzZXR0aW5nIHVwIHZhcmlvdXMgbWV0YWRhdGFcbiAqIGFuZCBjYWxsYmFja3MgYmFzZWQgb24ge0BsaW5rIEJVSUxEfSBmbGFncyBhcyB3ZWxsIGFzIHRoZSBjb21wb25lbnQncyBydW50aW1lXG4gKiBtZXRhZGF0YS5cbiAqXG4gKiBAcGFyYW0gaG9zdEVsZW1lbnQgdGhlIGhvc3QgZWxlbWVudCB0byByZWdpc3RlclxuICogQHBhcmFtIGNtcE1ldGEgcnVudGltZSBtZXRhZGF0YSBmb3IgdGhhdCBjb21wb25lbnRcbiAqIEByZXR1cm5zIGEgcmVmZXJlbmNlIHRvIHRoZSBob3N0IHJlZiBXZWFrTWFwXG4gKi9cbmNvbnN0IHJlZ2lzdGVySG9zdCA9IChob3N0RWxlbWVudCwgY21wTWV0YSkgPT4ge1xuICAgIGNvbnN0IGhvc3RSZWYgPSB7XG4gICAgICAgICRmbGFncyQ6IDAsXG4gICAgICAgICRob3N0RWxlbWVudCQ6IGhvc3RFbGVtZW50LFxuICAgICAgICAkY21wTWV0YSQ6IGNtcE1ldGEsXG4gICAgICAgICRpbnN0YW5jZVZhbHVlcyQ6IG5ldyBNYXAoKSxcbiAgICB9O1xuICAgIGlmIChCVUlMRC5pc0Rldikge1xuICAgICAgICBob3N0UmVmLiRyZW5kZXJDb3VudCQgPSAwO1xuICAgIH1cbiAgICBpZiAoQlVJTEQubWV0aG9kICYmIEJVSUxELmxhenlMb2FkKSB7XG4gICAgICAgIGhvc3RSZWYuJG9uSW5zdGFuY2VQcm9taXNlJCA9IG5ldyBQcm9taXNlKChyKSA9PiAoaG9zdFJlZi4kb25JbnN0YW5jZVJlc29sdmUkID0gcikpO1xuICAgIH1cbiAgICBpZiAoQlVJTEQuYXN5bmNMb2FkaW5nKSB7XG4gICAgICAgIGhvc3RSZWYuJG9uUmVhZHlQcm9taXNlJCA9IG5ldyBQcm9taXNlKChyKSA9PiAoaG9zdFJlZi4kb25SZWFkeVJlc29sdmUkID0gcikpO1xuICAgICAgICBob3N0RWxlbWVudFsncy1wJ10gPSBbXTtcbiAgICAgICAgaG9zdEVsZW1lbnRbJ3MtcmMnXSA9IFtdO1xuICAgIH1cbiAgICBhZGRIb3N0RXZlbnRMaXN0ZW5lcnMoaG9zdEVsZW1lbnQsIGhvc3RSZWYsIGNtcE1ldGEuJGxpc3RlbmVycyQsIGZhbHNlKTtcbiAgICByZXR1cm4gaG9zdFJlZnMuc2V0KGhvc3RFbGVtZW50LCBob3N0UmVmKTtcbn07XG5jb25zdCBpc01lbWJlckluRWxlbWVudCA9IChlbG0sIG1lbWJlck5hbWUpID0+IG1lbWJlck5hbWUgaW4gZWxtO1xuY29uc3QgY29uc29sZUVycm9yID0gKGUsIGVsKSA9PiAoY3VzdG9tRXJyb3IgfHwgY29uc29sZS5lcnJvcikoZSwgZWwpO1xuY29uc3QgU1RFTkNJTF9ERVZfTU9ERSA9IEJVSUxELmlzVGVzdGluZ1xuICAgID8gWydTVEVOQ0lMOiddIC8vIEUyRSB0ZXN0aW5nXG4gICAgOiBbXG4gICAgICAgICclY3N0ZW5jaWwnLFxuICAgICAgICAnY29sb3I6IHdoaXRlO2JhY2tncm91bmQ6IzRjNDdmZjtmb250LXdlaWdodDogYm9sZDsgZm9udC1zaXplOjEwcHg7IHBhZGRpbmc6MnB4IDZweDsgYm9yZGVyLXJhZGl1czogNXB4JyxcbiAgICBdO1xuY29uc3QgY29uc29sZURldkVycm9yID0gKC4uLm0pID0+IGNvbnNvbGUuZXJyb3IoLi4uU1RFTkNJTF9ERVZfTU9ERSwgLi4ubSk7XG5jb25zdCBjb25zb2xlRGV2V2FybiA9ICguLi5tKSA9PiBjb25zb2xlLndhcm4oLi4uU1RFTkNJTF9ERVZfTU9ERSwgLi4ubSk7XG5jb25zdCBjb25zb2xlRGV2SW5mbyA9ICguLi5tKSA9PiBjb25zb2xlLmluZm8oLi4uU1RFTkNJTF9ERVZfTU9ERSwgLi4ubSk7XG5jb25zdCBzZXRFcnJvckhhbmRsZXIgPSAoaGFuZGxlcikgPT4gKGN1c3RvbUVycm9yID0gaGFuZGxlcik7XG5jb25zdCBjbXBNb2R1bGVzID0gLypAX19QVVJFX18qLyBuZXcgTWFwKCk7XG5jb25zdCBsb2FkTW9kdWxlID0gKGNtcE1ldGEsIGhvc3RSZWYsIGhtclZlcnNpb25JZCkgPT4ge1xuICAgIC8vIGxvYWRNb2R1bGVJbXBvcnRcbiAgICBjb25zdCBleHBvcnROYW1lID0gY21wTWV0YS4kdGFnTmFtZSQucmVwbGFjZSgvLS9nLCAnXycpO1xuICAgIGNvbnN0IGJ1bmRsZUlkID0gY21wTWV0YS4kbGF6eUJ1bmRsZUlkJDtcbiAgICBpZiAoQlVJTEQuaXNEZXYgJiYgdHlwZW9mIGJ1bmRsZUlkICE9PSAnc3RyaW5nJykge1xuICAgICAgICBjb25zb2xlRGV2RXJyb3IoYFRyeWluZyB0byBsYXppbHkgbG9hZCBjb21wb25lbnQgPCR7Y21wTWV0YS4kdGFnTmFtZSR9PiB3aXRoIHN0eWxlIG1vZGUgXCIke2hvc3RSZWYuJG1vZGVOYW1lJH1cIiwgYnV0IGl0IGRvZXMgbm90IGV4aXN0LmApO1xuICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgIH1cbiAgICBjb25zdCBtb2R1bGUgPSAhQlVJTEQuaG90TW9kdWxlUmVwbGFjZW1lbnQgPyBjbXBNb2R1bGVzLmdldChidW5kbGVJZCkgOiBmYWxzZTtcbiAgICBpZiAobW9kdWxlKSB7XG4gICAgICAgIHJldHVybiBtb2R1bGVbZXhwb3J0TmFtZV07XG4gICAgfVxuICAgIC8qIV9fU1RFTkNJTF9TVEFUSUNfSU1QT1JUX1NXSVRDSF9fKi9cbiAgICByZXR1cm4gaW1wb3J0KFxuICAgIC8qIEB2aXRlLWlnbm9yZSAqL1xuICAgIC8qIHdlYnBhY2tJbmNsdWRlOiAvXFwuZW50cnlcXC5qcyQvICovXG4gICAgLyogd2VicGFja0V4Y2x1ZGU6IC9cXC5zeXN0ZW1cXC5lbnRyeVxcLmpzJC8gKi9cbiAgICAvKiB3ZWJwYWNrTW9kZTogXCJsYXp5XCIgKi9cbiAgICBgLi8ke2J1bmRsZUlkfS5lbnRyeS5qcyR7QlVJTEQuaG90TW9kdWxlUmVwbGFjZW1lbnQgJiYgaG1yVmVyc2lvbklkID8gJz9zLWhtcj0nICsgaG1yVmVyc2lvbklkIDogJyd9YCkudGhlbigoaW1wb3J0ZWRNb2R1bGUpID0+IHtcbiAgICAgICAgaWYgKCFCVUlMRC5ob3RNb2R1bGVSZXBsYWNlbWVudCkge1xuICAgICAgICAgICAgY21wTW9kdWxlcy5zZXQoYnVuZGxlSWQsIGltcG9ydGVkTW9kdWxlKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gaW1wb3J0ZWRNb2R1bGVbZXhwb3J0TmFtZV07XG4gICAgfSwgY29uc29sZUVycm9yKTtcbn07XG5jb25zdCBzdHlsZXMgPSAvKkBfX1BVUkVfXyovIG5ldyBNYXAoKTtcbmNvbnN0IG1vZGVSZXNvbHV0aW9uQ2hhaW4gPSBbXTtcbmNvbnN0IHdpbiA9IHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnID8gd2luZG93IDoge307XG5jb25zdCBkb2MgPSB3aW4uZG9jdW1lbnQgfHwgeyBoZWFkOiB7fSB9O1xuY29uc3QgSCA9ICh3aW4uSFRNTEVsZW1lbnQgfHwgY2xhc3Mge1xufSk7XG5jb25zdCBwbHQgPSB7XG4gICAgJGZsYWdzJDogMCxcbiAgICAkcmVzb3VyY2VzVXJsJDogJycsXG4gICAgam1wOiAoaCkgPT4gaCgpLFxuICAgIHJhZjogKGgpID0+IHJlcXVlc3RBbmltYXRpb25GcmFtZShoKSxcbiAgICBhZWw6IChlbCwgZXZlbnROYW1lLCBsaXN0ZW5lciwgb3B0cykgPT4gZWwuYWRkRXZlbnRMaXN0ZW5lcihldmVudE5hbWUsIGxpc3RlbmVyLCBvcHRzKSxcbiAgICByZWw6IChlbCwgZXZlbnROYW1lLCBsaXN0ZW5lciwgb3B0cykgPT4gZWwucmVtb3ZlRXZlbnRMaXN0ZW5lcihldmVudE5hbWUsIGxpc3RlbmVyLCBvcHRzKSxcbiAgICBjZTogKGV2ZW50TmFtZSwgb3B0cykgPT4gbmV3IEN1c3RvbUV2ZW50KGV2ZW50TmFtZSwgb3B0cyksXG59O1xuY29uc3Qgc2V0UGxhdGZvcm1IZWxwZXJzID0gKGhlbHBlcnMpID0+IHtcbiAgICBPYmplY3QuYXNzaWduKHBsdCwgaGVscGVycyk7XG59O1xuY29uc3Qgc3VwcG9ydHNTaGFkb3cgPSBcbi8vIFRPRE8oU1RFTkNJTC04NTQpOiBSZW1vdmUgY29kZSByZWxhdGVkIHRvIGxlZ2FjeSBzaGFkb3dEb21TaGltIGZpZWxkXG5CVUlMRC5zaGFkb3dEb21TaGltICYmIEJVSUxELnNoYWRvd0RvbVxuICAgID8gLypAX19QVVJFX18qLyAoKCkgPT4gKGRvYy5oZWFkLmF0dGFjaFNoYWRvdyArICcnKS5pbmRleE9mKCdbbmF0aXZlJykgPiAtMSkoKVxuICAgIDogdHJ1ZTtcbmNvbnN0IHN1cHBvcnRzTGlzdGVuZXJPcHRpb25zID0gLypAX19QVVJFX18qLyAoKCkgPT4ge1xuICAgIGxldCBzdXBwb3J0c0xpc3RlbmVyT3B0aW9ucyA9IGZhbHNlO1xuICAgIHRyeSB7XG4gICAgICAgIGRvYy5hZGRFdmVudExpc3RlbmVyKCdlJywgbnVsbCwgT2JqZWN0LmRlZmluZVByb3BlcnR5KHt9LCAncGFzc2l2ZScsIHtcbiAgICAgICAgICAgIGdldCgpIHtcbiAgICAgICAgICAgICAgICBzdXBwb3J0c0xpc3RlbmVyT3B0aW9ucyA9IHRydWU7XG4gICAgICAgICAgICB9LFxuICAgICAgICB9KSk7XG4gICAgfVxuICAgIGNhdGNoIChlKSB7IH1cbiAgICByZXR1cm4gc3VwcG9ydHNMaXN0ZW5lck9wdGlvbnM7XG59KSgpO1xuY29uc3QgcHJvbWlzZVJlc29sdmUgPSAodikgPT4gUHJvbWlzZS5yZXNvbHZlKHYpO1xuY29uc3Qgc3VwcG9ydHNDb25zdHJ1Y3RhYmxlU3R5bGVzaGVldHMgPSBCVUlMRC5jb25zdHJ1Y3RhYmxlQ1NTXG4gICAgPyAvKkBfX1BVUkVfXyovICgoKSA9PiB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBuZXcgQ1NTU3R5bGVTaGVldCgpO1xuICAgICAgICAgICAgcmV0dXJuIHR5cGVvZiBuZXcgQ1NTU3R5bGVTaGVldCgpLnJlcGxhY2VTeW5jID09PSAnZnVuY3Rpb24nO1xuICAgICAgICB9XG4gICAgICAgIGNhdGNoIChlKSB7IH1cbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH0pKClcbiAgICA6IGZhbHNlO1xuY29uc3QgcXVldWVEb21SZWFkcyA9IFtdO1xuY29uc3QgcXVldWVEb21Xcml0ZXMgPSBbXTtcbmNvbnN0IHF1ZXVlRG9tV3JpdGVzTG93ID0gW107XG5jb25zdCBxdWV1ZVRhc2sgPSAocXVldWUsIHdyaXRlKSA9PiAoY2IpID0+IHtcbiAgICBxdWV1ZS5wdXNoKGNiKTtcbiAgICBpZiAoIXF1ZXVlUGVuZGluZykge1xuICAgICAgICBxdWV1ZVBlbmRpbmcgPSB0cnVlO1xuICAgICAgICBpZiAod3JpdGUgJiYgcGx0LiRmbGFncyQgJiA0IC8qIFBMQVRGT1JNX0ZMQUdTLnF1ZXVlU3luYyAqLykge1xuICAgICAgICAgICAgbmV4dFRpY2soZmx1c2gpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgcGx0LnJhZihmbHVzaCk7XG4gICAgICAgIH1cbiAgICB9XG59O1xuY29uc3QgY29uc3VtZSA9IChxdWV1ZSkgPT4ge1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgcXVldWUubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIHF1ZXVlW2ldKHBlcmZvcm1hbmNlLm5vdygpKTtcbiAgICAgICAgfVxuICAgICAgICBjYXRjaCAoZSkge1xuICAgICAgICAgICAgY29uc29sZUVycm9yKGUpO1xuICAgICAgICB9XG4gICAgfVxuICAgIHF1ZXVlLmxlbmd0aCA9IDA7XG59O1xuY29uc3QgY29uc3VtZVRpbWVvdXQgPSAocXVldWUsIHRpbWVvdXQpID0+IHtcbiAgICBsZXQgaSA9IDA7XG4gICAgbGV0IHRzID0gMDtcbiAgICB3aGlsZSAoaSA8IHF1ZXVlLmxlbmd0aCAmJiAodHMgPSBwZXJmb3JtYW5jZS5ub3coKSkgPCB0aW1lb3V0KSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBxdWV1ZVtpKytdKHRzKTtcbiAgICAgICAgfVxuICAgICAgICBjYXRjaCAoZSkge1xuICAgICAgICAgICAgY29uc29sZUVycm9yKGUpO1xuICAgICAgICB9XG4gICAgfVxuICAgIGlmIChpID09PSBxdWV1ZS5sZW5ndGgpIHtcbiAgICAgICAgcXVldWUubGVuZ3RoID0gMDtcbiAgICB9XG4gICAgZWxzZSBpZiAoaSAhPT0gMCkge1xuICAgICAgICBxdWV1ZS5zcGxpY2UoMCwgaSk7XG4gICAgfVxufTtcbmNvbnN0IGZsdXNoID0gKCkgPT4ge1xuICAgIGlmIChCVUlMRC5hc3luY1F1ZXVlKSB7XG4gICAgICAgIHF1ZXVlQ29uZ2VzdGlvbisrO1xuICAgIH1cbiAgICAvLyBhbHdheXMgZm9yY2UgYSBidW5jaCBvZiBtZWRpdW0gY2FsbGJhY2tzIHRvIHJ1biwgYnV0IHN0aWxsIGhhdmVcbiAgICAvLyBhIHRocm90dGxlIG9uIGhvdyBtYW55IGNhbiBydW4gaW4gYSBjZXJ0YWluIHRpbWVcbiAgICAvLyBET00gUkVBRFMhISFcbiAgICBjb25zdW1lKHF1ZXVlRG9tUmVhZHMpO1xuICAgIC8vIERPTSBXUklURVMhISFcbiAgICBpZiAoQlVJTEQuYXN5bmNRdWV1ZSkge1xuICAgICAgICBjb25zdCB0aW1lb3V0ID0gKHBsdC4kZmxhZ3MkICYgNiAvKiBQTEFURk9STV9GTEFHUy5xdWV1ZU1hc2sgKi8pID09PSAyIC8qIFBMQVRGT1JNX0ZMQUdTLmFwcExvYWRlZCAqL1xuICAgICAgICAgICAgPyBwZXJmb3JtYW5jZS5ub3coKSArIDE0ICogTWF0aC5jZWlsKHF1ZXVlQ29uZ2VzdGlvbiAqICgxLjAgLyAxMC4wKSlcbiAgICAgICAgICAgIDogSW5maW5pdHk7XG4gICAgICAgIGNvbnN1bWVUaW1lb3V0KHF1ZXVlRG9tV3JpdGVzLCB0aW1lb3V0KTtcbiAgICAgICAgY29uc3VtZVRpbWVvdXQocXVldWVEb21Xcml0ZXNMb3csIHRpbWVvdXQpO1xuICAgICAgICBpZiAocXVldWVEb21Xcml0ZXMubGVuZ3RoID4gMCkge1xuICAgICAgICAgICAgcXVldWVEb21Xcml0ZXNMb3cucHVzaCguLi5xdWV1ZURvbVdyaXRlcyk7XG4gICAgICAgICAgICBxdWV1ZURvbVdyaXRlcy5sZW5ndGggPSAwO1xuICAgICAgICB9XG4gICAgICAgIGlmICgocXVldWVQZW5kaW5nID0gcXVldWVEb21SZWFkcy5sZW5ndGggKyBxdWV1ZURvbVdyaXRlcy5sZW5ndGggKyBxdWV1ZURvbVdyaXRlc0xvdy5sZW5ndGggPiAwKSkge1xuICAgICAgICAgICAgLy8gc3RpbGwgbW9yZSB0byBkbyB5ZXQsIGJ1dCB3ZSd2ZSBydW4gb3V0IG9mIHRpbWVcbiAgICAgICAgICAgIC8vIGxldCdzIGxldCB0aGlzIHRoaW5nIGNvb2wgb2ZmIGFuZCB0cnkgYWdhaW4gaW4gdGhlIG5leHQgdGlja1xuICAgICAgICAgICAgcGx0LnJhZihmbHVzaCk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBxdWV1ZUNvbmdlc3Rpb24gPSAwO1xuICAgICAgICB9XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICBjb25zdW1lKHF1ZXVlRG9tV3JpdGVzKTtcbiAgICAgICAgaWYgKChxdWV1ZVBlbmRpbmcgPSBxdWV1ZURvbVJlYWRzLmxlbmd0aCA+IDApKSB7XG4gICAgICAgICAgICAvLyBzdGlsbCBtb3JlIHRvIGRvIHlldCwgYnV0IHdlJ3ZlIHJ1biBvdXQgb2YgdGltZVxuICAgICAgICAgICAgLy8gbGV0J3MgbGV0IHRoaXMgdGhpbmcgY29vbCBvZmYgYW5kIHRyeSBhZ2FpbiBpbiB0aGUgbmV4dCB0aWNrXG4gICAgICAgICAgICBwbHQucmFmKGZsdXNoKTtcbiAgICAgICAgfVxuICAgIH1cbn07XG5jb25zdCBuZXh0VGljayA9IChjYikgPT4gcHJvbWlzZVJlc29sdmUoKS50aGVuKGNiKTtcbmNvbnN0IHJlYWRUYXNrID0gLypAX19QVVJFX18qLyBxdWV1ZVRhc2socXVldWVEb21SZWFkcywgZmFsc2UpO1xuY29uc3Qgd3JpdGVUYXNrID0gLypAX19QVVJFX18qLyBxdWV1ZVRhc2socXVldWVEb21Xcml0ZXMsIHRydWUpO1xuZXhwb3J0IHsgQlVJTEQsIEVudiwgTkFNRVNQQUNFIH0gZnJvbSAnQHN0ZW5jaWwvY29yZS9pbnRlcm5hbC9hcHAtZGF0YSc7XG5leHBvcnQgeyBCdWlsZCwgRnJhZ21lbnQsIEgsIEggYXMgSFRNTEVsZW1lbnQsIEhvc3QsIFNURU5DSUxfREVWX01PREUsIGFkZEhvc3RFdmVudExpc3RlbmVycywgYm9vdHN0cmFwTGF6eSwgY21wTW9kdWxlcywgY29ubmVjdGVkQ2FsbGJhY2ssIGNvbnNvbGVEZXZFcnJvciwgY29uc29sZURldkluZm8sIGNvbnNvbGVEZXZXYXJuLCBjb25zb2xlRXJyb3IsIGNyZWF0ZUV2ZW50LCBkZWZpbmVDdXN0b21FbGVtZW50LCBkaXNjb25uZWN0ZWRDYWxsYmFjaywgZG9jLCBmb3JjZU1vZGVVcGRhdGUsIGZvcmNlVXBkYXRlLCBnZXRBc3NldFBhdGgsIGdldEVsZW1lbnQsIGdldEhvc3RSZWYsIGdldE1vZGUsIGdldFJlbmRlcmluZ1JlZiwgZ2V0VmFsdWUsIGgsIGluc2VydFZkb21Bbm5vdGF0aW9ucywgaXNNZW1iZXJJbkVsZW1lbnQsIGxvYWRNb2R1bGUsIG1vZGVSZXNvbHV0aW9uQ2hhaW4sIG5leHRUaWNrLCBwYXJzZVByb3BlcnR5VmFsdWUsIHBsdCwgcG9zdFVwZGF0ZUNvbXBvbmVudCwgcHJvbWlzZVJlc29sdmUsIHByb3h5Q29tcG9uZW50LCBwcm94eUN1c3RvbUVsZW1lbnQsIHJlYWRUYXNrLCByZWdpc3Rlckhvc3QsIHJlZ2lzdGVySW5zdGFuY2UsIHJlbmRlclZkb20sIHNldEFzc2V0UGF0aCwgc2V0RXJyb3JIYW5kbGVyLCBzZXRNb2RlLCBzZXROb25jZSwgc2V0UGxhdGZvcm1IZWxwZXJzLCBzZXRQbGF0Zm9ybU9wdGlvbnMsIHNldFZhbHVlLCBzdHlsZXMsIHN1cHBvcnRzQ29uc3RydWN0YWJsZVN0eWxlc2hlZXRzLCBzdXBwb3J0c0xpc3RlbmVyT3B0aW9ucywgc3VwcG9ydHNTaGFkb3csIHdpbiwgd3JpdGVUYXNrIH07XG4iLCJmdW5jdGlvbiB3ZWJwYWNrRW1wdHlBc3luY0NvbnRleHQocmVxKSB7XG5cdC8vIEhlcmUgUHJvbWlzZS5yZXNvbHZlKCkudGhlbigpIGlzIHVzZWQgaW5zdGVhZCBvZiBuZXcgUHJvbWlzZSgpIHRvIHByZXZlbnRcblx0Ly8gdW5jYXVnaHQgZXhjZXB0aW9uIHBvcHBpbmcgdXAgaW4gZGV2dG9vbHNcblx0cmV0dXJuIFByb21pc2UucmVzb2x2ZSgpLnRoZW4oKCkgPT4ge1xuXHRcdHZhciBlID0gbmV3IEVycm9yKFwiQ2Fubm90IGZpbmQgbW9kdWxlICdcIiArIHJlcSArIFwiJ1wiKTtcblx0XHRlLmNvZGUgPSAnTU9EVUxFX05PVF9GT1VORCc7XG5cdFx0dGhyb3cgZTtcblx0fSk7XG59XG53ZWJwYWNrRW1wdHlBc3luY0NvbnRleHQua2V5cyA9ICgpID0+IChbXSk7XG53ZWJwYWNrRW1wdHlBc3luY0NvbnRleHQucmVzb2x2ZSA9IHdlYnBhY2tFbXB0eUFzeW5jQ29udGV4dDtcbndlYnBhY2tFbXB0eUFzeW5jQ29udGV4dC5pZCA9IFwiLi9ub2RlX21vZHVsZXMvQHN0ZW5jaWwvY29yZS9pbnRlcm5hbC9jbGllbnQgbGF6eSByZWN1cnNpdmUgXlxcXFwuXFxcXC8uKlxcXFwuZW50cnlcXFxcLmpzLiokIGluY2x1ZGU6IFxcXFwuZW50cnlcXFxcLmpzJCBleGNsdWRlOiBcXFxcLnN5c3RlbVxcXFwuZW50cnlcXFxcLmpzJFwiO1xubW9kdWxlLmV4cG9ydHMgPSB3ZWJwYWNrRW1wdHlBc3luY0NvbnRleHQ7IiwiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uLy4uL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uLy4uL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIGA6cm9vdCB7XG4gIC0tY2FsY2l0ZS16LWluZGV4LXRvb2x0aXA6OTAxO1xuICAtLWNhbGNpdGUtei1pbmRleC1wb3B1cDo5MDA7XG4gIC0tY2FsY2l0ZS16LWluZGV4LW1vZGFsOjgwMDtcbiAgLS1jYWxjaXRlLXotaW5kZXgtb3ZlcmxheTo3MDA7XG4gIC0tY2FsY2l0ZS16LWluZGV4LWRyb3Bkb3duOjYwMDtcbiAgLS1jYWxjaXRlLXotaW5kZXgtdG9hc3Q6NTAwO1xuICAtLWNhbGNpdGUtei1pbmRleC1oZWFkZXI6NDAwO1xuICAtLWNhbGNpdGUtei1pbmRleC1zdGlja3k6MzAwO1xuICAtLWNhbGNpdGUtei1pbmRleDoxO1xuICAtLWNhbGNpdGUtei1pbmRleC1kZWVwOi05OTk5OTk7XG4gIC0tY2FsY2l0ZS1zcGFjaW5nLXh4eGw6MzJweDtcbiAgLS1jYWxjaXRlLXNwYWNpbmcteHhsOjIwcHg7XG4gIC0tY2FsY2l0ZS1zcGFjaW5nLXhsOjE2cHg7XG4gIC0tY2FsY2l0ZS1zcGFjaW5nLWxnOjE0cHg7XG4gIC0tY2FsY2l0ZS1zcGFjaW5nLW1kOjEycHg7XG4gIC0tY2FsY2l0ZS1zcGFjaW5nLXNtOjhweDtcbiAgLS1jYWxjaXRlLXNwYWNpbmcteHM6NnB4O1xuICAtLWNhbGNpdGUtc3BhY2luZy14eHM6NHB4O1xuICAtLWNhbGNpdGUtc3BhY2luZy1iYXNlOjJweDtcbiAgLS1jYWxjaXRlLXNwYWNpbmctcHg6MXB4O1xuICAtLWNhbGNpdGUtc2l6ZS14eHhsOjMycHg7XG4gIC0tY2FsY2l0ZS1zaXplLXh4bDoyNHB4O1xuICAtLWNhbGNpdGUtc2l6ZS14bDoyMHB4O1xuICAtLWNhbGNpdGUtc2l6ZS1sZzoxNnB4O1xuICAtLWNhbGNpdGUtc2l6ZS1tZC1wbHVzOjE0cHg7XG4gIC0tY2FsY2l0ZS1zaXplLW1kOjEycHg7XG4gIC0tY2FsY2l0ZS1zaXplLXNtLXBsdXM6MTBweDtcbiAgLS1jYWxjaXRlLXNpemUtc206OHB4O1xuICAtLWNhbGNpdGUtc2l6ZS14czo2cHg7XG4gIC0tY2FsY2l0ZS1zaXplLXh4czo0cHg7XG4gIC0tY2FsY2l0ZS1zaXplLXh4eHM6MnB4O1xuICAtLWNhbGNpdGUtc2l6ZS1weDoxcHg7XG4gIC0tY2FsY2l0ZS1vcGFjaXR5LWRpc2FibGVkOjAuNTtcbiAgLS1jYWxjaXRlLW9wYWNpdHktZnVsbDoxO1xuICAtLWNhbGNpdGUtb3BhY2l0eS1kYXJrOjAuODU7XG4gIC0tY2FsY2l0ZS1vcGFjaXR5LWhhbGY6MC41O1xuICAtLWNhbGNpdGUtb3BhY2l0eS1saWdodDowLjQ7XG4gIC0tY2FsY2l0ZS1mb250LXRleHQtY2FzZS1jYXBpdGFsaXplOmNhcGl0YWxpemU7XG4gIC0tY2FsY2l0ZS1mb250LXRleHQtY2FzZS1sb3dlcmNhc2U6bG93ZXJjYXNlO1xuICAtLWNhbGNpdGUtZm9udC10ZXh0LWNhc2UtdXBwZXJjYXNlOnVwcGVyY2FzZTtcbiAgLS1jYWxjaXRlLWZvbnQtdGV4dC1jYXNlLW5vbmU6bm9uZTtcbiAgLS1jYWxjaXRlLWZvbnQtdGV4dC1kZWNvcmF0aW9uLXVuZGVybGluZTp1bmRlcmxpbmU7XG4gIC0tY2FsY2l0ZS1mb250LXRleHQtZGVjb3JhdGlvbi1ub25lOm5vbmU7XG4gIC0tY2FsY2l0ZS1mb250LXBhcmFncmFwaC1zcGFjaW5nLW5vcm1hbDo0cHg7XG4gIC0tY2FsY2l0ZS1mb250LWxldHRlci1zcGFjaW5nLXdpZGU6MC40O1xuICAtLWNhbGNpdGUtZm9udC1sZXR0ZXItc3BhY2luZy1ub3JtYWw6MDtcbiAgLS1jYWxjaXRlLWZvbnQtbGV0dGVyLXNwYWNpbmctdGlnaHQ6LTAuNDtcbiAgLS1jYWxjaXRlLWZvbnQtbGluZS1oZWlnaHQtcmVsYXRpdmUtbG9vc2U6MjtcbiAgLS1jYWxjaXRlLWZvbnQtbGluZS1oZWlnaHQtcmVsYXRpdmUtcmVsYXhlZDoxLjYyNTtcbiAgLS1jYWxjaXRlLWZvbnQtbGluZS1oZWlnaHQtcmVsYXRpdmUtbm9ybWFsOjEuNTtcbiAgLS1jYWxjaXRlLWZvbnQtbGluZS1oZWlnaHQtcmVsYXRpdmUtc251ZzoxLjM3NTtcbiAgLS1jYWxjaXRlLWZvbnQtbGluZS1oZWlnaHQtcmVsYXRpdmUtdGlnaHQ6MS4yNTtcbiAgLS1jYWxjaXRlLWZvbnQtbGluZS1oZWlnaHQtcmVsYXRpdmU6YXV0bztcbiAgLS1jYWxjaXRlLWZvbnQtbGluZS1oZWlnaHQtZml4ZWQteGw6MjRweDtcbiAgLS1jYWxjaXRlLWZvbnQtbGluZS1oZWlnaHQtZml4ZWQtbGc6MjBweDtcbiAgLS1jYWxjaXRlLWZvbnQtbGluZS1oZWlnaHQtZml4ZWQtYmFzZToxNnB4O1xuICAtLWNhbGNpdGUtZm9udC1saW5lLWhlaWdodC1maXhlZC1zbToxMnB4O1xuICAtLWNhbGNpdGUtZm9udC1zdHlsZS1lbXBoYXNpczppdGFsaWM7XG4gIC0tY2FsY2l0ZS1mb250LXNpemUteHhsOjI0cHg7XG4gIC0tY2FsY2l0ZS1mb250LXNpemUteGw6MjBweDtcbiAgLS1jYWxjaXRlLWZvbnQtc2l6ZS1sZzoxOHB4O1xuICAtLWNhbGNpdGUtZm9udC1zaXplLW1kOjE2cHg7XG4gIC0tY2FsY2l0ZS1mb250LXNpemU6MTRweDtcbiAgLS1jYWxjaXRlLWZvbnQtc2l6ZS1zbToxMnB4O1xuICAtLWNhbGNpdGUtZm9udC1zaXplLXhzOjEwcHg7XG4gIC0tY2FsY2l0ZS1mb250LXdlaWdodC1ib2xkOjcwMDtcbiAgLS1jYWxjaXRlLWZvbnQtd2VpZ2h0LXNlbWlib2xkOjYwMDtcbiAgLS1jYWxjaXRlLWZvbnQtd2VpZ2h0LW1lZGl1bTo1MDA7XG4gIC0tY2FsY2l0ZS1mb250LXdlaWdodC1yZWd1bGFyOjQwMDtcbiAgLS1jYWxjaXRlLWZvbnQtd2VpZ2h0LW5vcm1hbDo0MDA7XG4gIC0tY2FsY2l0ZS1mb250LXdlaWdodC1saWdodDozMDA7XG4gIC0tY2FsY2l0ZS1mb250LWZhbWlseS1jb2RlOk1vbmFjbztcbiAgLS1jYWxjaXRlLWZvbnQtZmFtaWx5OlwiQXZlbmlyIE5leHQgTFQgUHJvXCI7XG4gIC0tY2FsY2l0ZS1jb250YWluZXItc2l6ZS1jb250ZW50LWZpeGVkOjE0NDBweDtcbiAgLS1jYWxjaXRlLWNvbnRhaW5lci1zaXplLWNvbnRlbnQtZmx1aWQ6MTAwJTtcbiAgLS1jYWxjaXRlLWNvbnRhaW5lci1zaXplLWd1dHRlcjoxNnB4O1xuICAtLWNhbGNpdGUtY29udGFpbmVyLXNpemUtbWFyZ2luOjI0cHg7XG4gIC0tY2FsY2l0ZS1jb2xvci1iYWNrZ3JvdW5kLW5vbmU6cmdiYSgjZmZmZmZmLCAwKTtcbiAgLS1jYWxjaXRlLWNvcm5lci1yYWRpdXMtcGlsbDoxMDAlO1xuICAtLWNhbGNpdGUtY29ybmVyLXJhZGl1cy1yb3VuZDo0cHg7XG4gIC0tY2FsY2l0ZS1jb3JuZXItcmFkaXVzLXNoYXJwOjA7XG4gIC0tY2FsY2l0ZS1ib3JkZXItd2lkdGgtbGc6NHB4O1xuICAtLWNhbGNpdGUtYm9yZGVyLXdpZHRoLW1kOjJweDtcbiAgLS1jYWxjaXRlLWJvcmRlci13aWR0aC1zbToxcHg7XG4gIC0tY2FsY2l0ZS1ib3JkZXItd2lkdGgtbm9uZTowO1xuICAtLWNhbGNpdGUtc2hhZG93LW1kOjAgNHB4IDIwcHggMCByZ2JhKDAsIDAsIDAsIDAuMDgpLCAwIDEycHggMzBweCByZ2JhKDAsIDAsIDAsIDAuMSk7XG4gIC0tY2FsY2l0ZS1zaGFkb3ctc206MCAycHggOHB4IDAgcmdiYSgwLCAwLCAwLCAwLjA0KSwgMCA0cHggMTZweCAwIHJnYmEoMCwgMCwgMCwgMC4wOCk7XG4gIC0tY2FsY2l0ZS1zaGFkb3ctbm9uZTowIDAgMCAwIHJnYmEoMCwgMCwgMCwgMCk7XG4gIC0tY2FsY2l0ZS1jb3JuZXItcmFkaXVzOnZhcigtLWNhbGNpdGUtY29ybmVyLXJhZGl1cy1zaGFycCk7XG59XG5cbi5jYWxjaXRlLXR5cG9ncmFwaHktaGllcmFyY2h5LW92ZXJsaW5lIHtcbiAgbGluZS1oZWlnaHQ6IHZhcigtLWNhbGNpdGUtZm9udC1saW5lLWhlaWdodC1maXhlZC1zbSk7XG4gIHRleHQtY2FzZTogdmFyKC0tY2FsY2l0ZS1mb250LXRleHQtY2FzZS11cHBlcmNhc2UpO1xuICBmb250LXdlaWdodDogdmFyKC0tY2FsY2l0ZS1mb250LXdlaWdodC1ib2xkKTtcbn1cblxuLmNhbGNpdGUtdHlwb2dyYXBoeS13cmFwLWJvbGQtbWludXMtMSB7XG4gIGZvbnQtd2VpZ2h0OiB2YXIoLS1jYWxjaXRlLWZvbnQtd2VpZ2h0LXNlbWlib2xkKTtcbiAgbGluZS1oZWlnaHQ6IHZhcigtLWNhbGNpdGUtZm9udC1saW5lLWhlaWdodC1yZWxhdGl2ZS1zbnVnKTtcbn1cblxuLmNhbGNpdGUtdHlwb2dyYXBoeS13cmFwLWJvbGQtbWludXMtMiB7XG4gIGZvbnQtd2VpZ2h0OiB2YXIoLS1jYWxjaXRlLWZvbnQtd2VpZ2h0LXNlbWlib2xkKTtcbiAgbGluZS1oZWlnaHQ6IHZhcigtLWNhbGNpdGUtZm9udC1saW5lLWhlaWdodC1yZWxhdGl2ZS1zbnVnKTtcbiAgZm9udC1zaXplOiB2YXIoLS1jYWxjaXRlLWZvbnQtc2l6ZS1zbSk7XG59XG5cbi5jYWxjaXRlLXR5cG9ncmFwaHktd3JhcC1ib2xkLTMge1xuICBmb250LXdlaWdodDogdmFyKC0tY2FsY2l0ZS1mb250LXdlaWdodC1zZW1pYm9sZCk7XG4gIGxpbmUtaGVpZ2h0OiB2YXIoLS1jYWxjaXRlLWZvbnQtbGluZS1oZWlnaHQtcmVsYXRpdmUtc251Zyk7XG4gIGZvbnQtc2l6ZTogdmFyKC0tY2FsY2l0ZS1mb250LXNpemUteHhsKTtcbn1cblxuLmNhbGNpdGUtdHlwb2dyYXBoeS13cmFwLWJvbGQtMiB7XG4gIGZvbnQtd2VpZ2h0OiB2YXIoLS1jYWxjaXRlLWZvbnQtd2VpZ2h0LXNlbWlib2xkKTtcbiAgbGluZS1oZWlnaHQ6IHZhcigtLWNhbGNpdGUtZm9udC1saW5lLWhlaWdodC1yZWxhdGl2ZS1zbnVnKTtcbiAgZm9udC1zaXplOiB2YXIoLS1jYWxjaXRlLWZvbnQtc2l6ZS14bCk7XG59XG5cbi5jYWxjaXRlLXR5cG9ncmFwaHktd3JhcC1ib2xkLTEge1xuICBmb250LXdlaWdodDogdmFyKC0tY2FsY2l0ZS1mb250LXdlaWdodC1zZW1pYm9sZCk7XG4gIGxpbmUtaGVpZ2h0OiB2YXIoLS1jYWxjaXRlLWZvbnQtbGluZS1oZWlnaHQtcmVsYXRpdmUtc251Zyk7XG4gIGZvbnQtc2l6ZTogdmFyKC0tY2FsY2l0ZS1mb250LXNpemUtbGcpO1xufVxuXG4uY2FsY2l0ZS10eXBvZ3JhcGh5LXdyYXAtYm9sZC0wIHtcbiAgZm9udC13ZWlnaHQ6IHZhcigtLWNhbGNpdGUtZm9udC13ZWlnaHQtc2VtaWJvbGQpO1xuICBsaW5lLWhlaWdodDogdmFyKC0tY2FsY2l0ZS1mb250LWxpbmUtaGVpZ2h0LXJlbGF0aXZlLXNudWcpO1xuICBmb250LXNpemU6IHZhcigtLWNhbGNpdGUtZm9udC1zaXplLW1kKTtcbn1cblxuLmNhbGNpdGUtdHlwb2dyYXBoeS13cmFwLW1lZGl1bS1taW51cy0xIHtcbiAgZm9udC13ZWlnaHQ6IHZhcigtLWNhbGNpdGUtZm9udC13ZWlnaHQtbWVkaXVtKTtcbiAgbGluZS1oZWlnaHQ6IHZhcigtLWNhbGNpdGUtZm9udC1saW5lLWhlaWdodC1yZWxhdGl2ZS1zbnVnKTtcbn1cblxuLmNhbGNpdGUtdHlwb2dyYXBoeS13cmFwLW1lZGl1bS1taW51cy0yIHtcbiAgZm9udC13ZWlnaHQ6IHZhcigtLWNhbGNpdGUtZm9udC13ZWlnaHQtbWVkaXVtKTtcbiAgbGluZS1oZWlnaHQ6IHZhcigtLWNhbGNpdGUtZm9udC1saW5lLWhlaWdodC1yZWxhdGl2ZS1zbnVnKTtcbiAgZm9udC1zaXplOiB2YXIoLS1jYWxjaXRlLWZvbnQtc2l6ZS1zbSk7XG59XG5cbi5jYWxjaXRlLXR5cG9ncmFwaHktd3JhcC1tZWRpdW0tMyB7XG4gIGZvbnQtd2VpZ2h0OiB2YXIoLS1jYWxjaXRlLWZvbnQtd2VpZ2h0LW1lZGl1bSk7XG4gIGxpbmUtaGVpZ2h0OiB2YXIoLS1jYWxjaXRlLWZvbnQtbGluZS1oZWlnaHQtcmVsYXRpdmUtc251Zyk7XG4gIGZvbnQtc2l6ZTogdmFyKC0tY2FsY2l0ZS1mb250LXNpemUteHhsKTtcbn1cblxuLmNhbGNpdGUtdHlwb2dyYXBoeS13cmFwLW1lZGl1bS0yIHtcbiAgZm9udC13ZWlnaHQ6IHZhcigtLWNhbGNpdGUtZm9udC13ZWlnaHQtbWVkaXVtKTtcbiAgbGluZS1oZWlnaHQ6IHZhcigtLWNhbGNpdGUtZm9udC1saW5lLWhlaWdodC1yZWxhdGl2ZS1zbnVnKTtcbiAgZm9udC1zaXplOiB2YXIoLS1jYWxjaXRlLWZvbnQtc2l6ZS14bCk7XG59XG5cbi5jYWxjaXRlLXR5cG9ncmFwaHktd3JhcC1tZWRpdW0tMSB7XG4gIGZvbnQtd2VpZ2h0OiB2YXIoLS1jYWxjaXRlLWZvbnQtd2VpZ2h0LW1lZGl1bSk7XG4gIGxpbmUtaGVpZ2h0OiB2YXIoLS1jYWxjaXRlLWZvbnQtbGluZS1oZWlnaHQtcmVsYXRpdmUtc251Zyk7XG4gIGZvbnQtc2l6ZTogdmFyKC0tY2FsY2l0ZS1mb250LXNpemUtbGcpO1xufVxuXG4uY2FsY2l0ZS10eXBvZ3JhcGh5LXdyYXAtbWVkaXVtLTAge1xuICBmb250LXdlaWdodDogdmFyKC0tY2FsY2l0ZS1mb250LXdlaWdodC1tZWRpdW0pO1xuICBsaW5lLWhlaWdodDogdmFyKC0tY2FsY2l0ZS1mb250LWxpbmUtaGVpZ2h0LXJlbGF0aXZlLXNudWcpO1xuICBmb250LXNpemU6IHZhcigtLWNhbGNpdGUtZm9udC1zaXplLW1kKTtcbn1cblxuLmNhbGNpdGUtdHlwb2dyYXBoeS13cmFwLXJlZ3VsYXItbWludXMtMSB7XG4gIGxpbmUtaGVpZ2h0OiB2YXIoLS1jYWxjaXRlLWZvbnQtbGluZS1oZWlnaHQtcmVsYXRpdmUtc251Zyk7XG59XG5cbi5jYWxjaXRlLXR5cG9ncmFwaHktd3JhcC1yZWd1bGFyLW1pbnVzLTIge1xuICBsaW5lLWhlaWdodDogdmFyKC0tY2FsY2l0ZS1mb250LWxpbmUtaGVpZ2h0LXJlbGF0aXZlLXNudWcpO1xuICBmb250LXNpemU6IHZhcigtLWNhbGNpdGUtZm9udC1zaXplLXNtKTtcbn1cblxuLmNhbGNpdGUtdHlwb2dyYXBoeS13cmFwLXJlZ3VsYXItMyB7XG4gIGxpbmUtaGVpZ2h0OiB2YXIoLS1jYWxjaXRlLWZvbnQtbGluZS1oZWlnaHQtcmVsYXRpdmUtc251Zyk7XG4gIGZvbnQtc2l6ZTogdmFyKC0tY2FsY2l0ZS1mb250LXNpemUteHhsKTtcbn1cblxuLmNhbGNpdGUtdHlwb2dyYXBoeS13cmFwLXJlZ3VsYXItMiB7XG4gIGxpbmUtaGVpZ2h0OiB2YXIoLS1jYWxjaXRlLWZvbnQtbGluZS1oZWlnaHQtcmVsYXRpdmUtc251Zyk7XG4gIGZvbnQtc2l6ZTogdmFyKC0tY2FsY2l0ZS1mb250LXNpemUteGwpO1xufVxuXG4uY2FsY2l0ZS10eXBvZ3JhcGh5LXdyYXAtcmVndWxhci0xIHtcbiAgbGluZS1oZWlnaHQ6IHZhcigtLWNhbGNpdGUtZm9udC1saW5lLWhlaWdodC1yZWxhdGl2ZS1zbnVnKTtcbiAgZm9udC1zaXplOiB2YXIoLS1jYWxjaXRlLWZvbnQtc2l6ZS1sZyk7XG59XG5cbi5jYWxjaXRlLXR5cG9ncmFwaHktd3JhcC1yZWd1bGFyLTAge1xuICBsaW5lLWhlaWdodDogdmFyKC0tY2FsY2l0ZS1mb250LWxpbmUtaGVpZ2h0LXJlbGF0aXZlLXNudWcpO1xuICBmb250LXNpemU6IHZhcigtLWNhbGNpdGUtZm9udC1zaXplLW1kKTtcbn1cblxuLmNhbGNpdGUtdHlwb2dyYXBoeS13cmFwLWxpZ2h0LW1pbnVzLTEge1xuICBmb250LXdlaWdodDogdmFyKC0tY2FsY2l0ZS1mb250LXdlaWdodC1saWdodCk7XG4gIGxpbmUtaGVpZ2h0OiB2YXIoLS1jYWxjaXRlLWZvbnQtbGluZS1oZWlnaHQtcmVsYXRpdmUtc251Zyk7XG59XG5cbi5jYWxjaXRlLXR5cG9ncmFwaHktd3JhcC1saWdodC1taW51cy0yIHtcbiAgZm9udC13ZWlnaHQ6IHZhcigtLWNhbGNpdGUtZm9udC13ZWlnaHQtbGlnaHQpO1xuICBsaW5lLWhlaWdodDogdmFyKC0tY2FsY2l0ZS1mb250LWxpbmUtaGVpZ2h0LXJlbGF0aXZlLXNudWcpO1xuICBmb250LXNpemU6IHZhcigtLWNhbGNpdGUtZm9udC1zaXplLXNtKTtcbn1cblxuLmNhbGNpdGUtdHlwb2dyYXBoeS13cmFwLWxpZ2h0LTMge1xuICBmb250LXdlaWdodDogdmFyKC0tY2FsY2l0ZS1mb250LXdlaWdodC1saWdodCk7XG4gIGxpbmUtaGVpZ2h0OiB2YXIoLS1jYWxjaXRlLWZvbnQtbGluZS1oZWlnaHQtcmVsYXRpdmUtdGlnaHQpO1xuICBmb250LXNpemU6IHZhcigtLWNhbGNpdGUtZm9udC1zaXplLXh4bCk7XG59XG5cbi5jYWxjaXRlLXR5cG9ncmFwaHktd3JhcC1saWdodC0yIHtcbiAgZm9udC13ZWlnaHQ6IHZhcigtLWNhbGNpdGUtZm9udC13ZWlnaHQtbGlnaHQpO1xuICBsaW5lLWhlaWdodDogdmFyKC0tY2FsY2l0ZS1mb250LWxpbmUtaGVpZ2h0LXJlbGF0aXZlLXNudWcpO1xuICBmb250LXNpemU6IHZhcigtLWNhbGNpdGUtZm9udC1zaXplLXhsKTtcbn1cblxuLmNhbGNpdGUtdHlwb2dyYXBoeS13cmFwLWxpZ2h0LTEge1xuICBmb250LXdlaWdodDogdmFyKC0tY2FsY2l0ZS1mb250LXdlaWdodC1saWdodCk7XG4gIGxpbmUtaGVpZ2h0OiB2YXIoLS1jYWxjaXRlLWZvbnQtbGluZS1oZWlnaHQtcmVsYXRpdmUtc251Zyk7XG4gIGZvbnQtc2l6ZTogdmFyKC0tY2FsY2l0ZS1mb250LXNpemUtbGcpO1xufVxuXG4uY2FsY2l0ZS10eXBvZ3JhcGh5LXdyYXAtbGlnaHQtMCB7XG4gIGZvbnQtd2VpZ2h0OiB2YXIoLS1jYWxjaXRlLWZvbnQtd2VpZ2h0LWxpZ2h0KTtcbiAgbGluZS1oZWlnaHQ6IHZhcigtLWNhbGNpdGUtZm9udC1saW5lLWhlaWdodC1yZWxhdGl2ZS1zbnVnKTtcbiAgZm9udC1zaXplOiB2YXIoLS1jYWxjaXRlLWZvbnQtc2l6ZS1tZCk7XG59XG5cbi5jYWxjaXRlLXR5cG9ncmFwaHktYm9sZC0xaCB7XG4gIGZvbnQtd2VpZ2h0OiB2YXIoLS1jYWxjaXRlLWZvbnQtd2VpZ2h0LXNlbWlib2xkKTtcbiAgbGluZS1oZWlnaHQ6IHZhcigtLWNhbGNpdGUtZm9udC1saW5lLWhlaWdodC1maXhlZC14bCk7XG4gIGZvbnQtc2l6ZTogdmFyKC0tY2FsY2l0ZS1mb250LXNpemUtbGcpO1xufVxuXG4uY2FsY2l0ZS10eXBvZ3JhcGh5LWJvbGQtMGgge1xuICBmb250LXdlaWdodDogdmFyKC0tY2FsY2l0ZS1mb250LXdlaWdodC1zZW1pYm9sZCk7XG4gIGxpbmUtaGVpZ2h0OiB2YXIoLS1jYWxjaXRlLWZvbnQtbGluZS1oZWlnaHQtZml4ZWQtbGcpO1xuICBmb250LXNpemU6IHZhcigtLWNhbGNpdGUtZm9udC1zaXplLW1kKTtcbn1cblxuLmNhbGNpdGUtdHlwb2dyYXBoeS1ib2xkLW1pbnVzLTFoIHtcbiAgZm9udC13ZWlnaHQ6IHZhcigtLWNhbGNpdGUtZm9udC13ZWlnaHQtc2VtaWJvbGQpO1xufVxuXG4uY2FsY2l0ZS10eXBvZ3JhcGh5LWJvbGQtbWludXMtMmgge1xuICBmb250LXdlaWdodDogdmFyKC0tY2FsY2l0ZS1mb250LXdlaWdodC1zZW1pYm9sZCk7XG4gIGZvbnQtc2l6ZTogdmFyKC0tY2FsY2l0ZS1mb250LXNpemUtc20pO1xufVxuXG4uY2FsY2l0ZS10eXBvZ3JhcGh5LWJvbGQtbWludXMtM2gge1xuICBmb250LXdlaWdodDogdmFyKC0tY2FsY2l0ZS1mb250LXdlaWdodC1zZW1pYm9sZCk7XG4gIGxpbmUtaGVpZ2h0OiB2YXIoLS1jYWxjaXRlLWZvbnQtbGluZS1oZWlnaHQtZml4ZWQtc20pO1xuICBmb250LXNpemU6IHZhcigtLWNhbGNpdGUtZm9udC1zaXplLXhzKTtcbn1cblxuLmNhbGNpdGUtdHlwb2dyYXBoeS1tZWRpdW0tMWgge1xuICBmb250LXdlaWdodDogdmFyKC0tY2FsY2l0ZS1mb250LXdlaWdodC1tZWRpdW0pO1xuICBsaW5lLWhlaWdodDogdmFyKC0tY2FsY2l0ZS1mb250LWxpbmUtaGVpZ2h0LWZpeGVkLXhsKTtcbiAgZm9udC1zaXplOiB2YXIoLS1jYWxjaXRlLWZvbnQtc2l6ZS1sZyk7XG59XG5cbi5jYWxjaXRlLXR5cG9ncmFwaHktbWVkaXVtLTBoIHtcbiAgZm9udC13ZWlnaHQ6IHZhcigtLWNhbGNpdGUtZm9udC13ZWlnaHQtbWVkaXVtKTtcbiAgbGluZS1oZWlnaHQ6IHZhcigtLWNhbGNpdGUtZm9udC1saW5lLWhlaWdodC1maXhlZC1sZyk7XG4gIGZvbnQtc2l6ZTogdmFyKC0tY2FsY2l0ZS1mb250LXNpemUtbWQpO1xufVxuXG4uY2FsY2l0ZS10eXBvZ3JhcGh5LW1lZGl1bS1taW51cy0xaCB7XG4gIGZvbnQtd2VpZ2h0OiB2YXIoLS1jYWxjaXRlLWZvbnQtd2VpZ2h0LW1lZGl1bSk7XG59XG5cbi5jYWxjaXRlLXR5cG9ncmFwaHktbWVkaXVtLW1pbnVzLTJoIHtcbiAgZm9udC13ZWlnaHQ6IHZhcigtLWNhbGNpdGUtZm9udC13ZWlnaHQtbWVkaXVtKTtcbiAgZm9udC1zaXplOiB2YXIoLS1jYWxjaXRlLWZvbnQtc2l6ZS1zbSk7XG59XG5cbi5jYWxjaXRlLXR5cG9ncmFwaHktbWVkaXVtLW1pbnVzLTNoIHtcbiAgZm9udC13ZWlnaHQ6IHZhcigtLWNhbGNpdGUtZm9udC13ZWlnaHQtbWVkaXVtKTtcbiAgbGluZS1oZWlnaHQ6IHZhcigtLWNhbGNpdGUtZm9udC1saW5lLWhlaWdodC1maXhlZC1zbSk7XG4gIGZvbnQtc2l6ZTogdmFyKC0tY2FsY2l0ZS1mb250LXNpemUteHMpO1xufVxuXG4uY2FsY2l0ZS10eXBvZ3JhcGh5LXJlZ3VsYXItMWgge1xuICBsaW5lLWhlaWdodDogdmFyKC0tY2FsY2l0ZS1mb250LWxpbmUtaGVpZ2h0LWZpeGVkLXhsKTtcbiAgZm9udC1zaXplOiB2YXIoLS1jYWxjaXRlLWZvbnQtc2l6ZS1sZyk7XG59XG5cbi5jYWxjaXRlLXR5cG9ncmFwaHktcmVndWxhci0waCB7XG4gIGxpbmUtaGVpZ2h0OiB2YXIoLS1jYWxjaXRlLWZvbnQtbGluZS1oZWlnaHQtZml4ZWQtbGcpO1xuICBmb250LXNpemU6IHZhcigtLWNhbGNpdGUtZm9udC1zaXplLW1kKTtcbn1cblxuLmNhbGNpdGUtdHlwb2dyYXBoeS1yZWd1bGFyLW1pbnVzLTJoIHtcbiAgZm9udC1zaXplOiB2YXIoLS1jYWxjaXRlLWZvbnQtc2l6ZS1zbSk7XG59XG5cbi5jYWxjaXRlLXR5cG9ncmFwaHktcmVndWxhci1taW51cy0zaCB7XG4gIGxpbmUtaGVpZ2h0OiB2YXIoLS1jYWxjaXRlLWZvbnQtbGluZS1oZWlnaHQtZml4ZWQtc20pO1xuICBmb250LXNpemU6IHZhcigtLWNhbGNpdGUtZm9udC1zaXplLXhzKTtcbn1cblxuLmNhbGNpdGUtdHlwb2dyYXBoeS1saWdodC0xaCB7XG4gIGZvbnQtc2l6ZTogdmFyKC0tY2FsY2l0ZS1mb250LXNpemUtbGcpO1xuICBmb250LXdlaWdodDogdmFyKC0tY2FsY2l0ZS1mb250LXdlaWdodC1saWdodCk7XG4gIGxpbmUtaGVpZ2h0OiB2YXIoLS1jYWxjaXRlLWZvbnQtbGluZS1oZWlnaHQtZml4ZWQteGwpO1xufVxuXG4uY2FsY2l0ZS10eXBvZ3JhcGh5LWxpZ2h0LTBoIHtcbiAgZm9udC1zaXplOiB2YXIoLS1jYWxjaXRlLWZvbnQtc2l6ZS1tZCk7XG4gIGZvbnQtd2VpZ2h0OiB2YXIoLS1jYWxjaXRlLWZvbnQtd2VpZ2h0LWxpZ2h0KTtcbiAgbGluZS1oZWlnaHQ6IHZhcigtLWNhbGNpdGUtZm9udC1saW5lLWhlaWdodC1maXhlZC1sZyk7XG59XG5cbi5jYWxjaXRlLXR5cG9ncmFwaHktbGlnaHQtbWludXMtMWgge1xuICBmb250LXdlaWdodDogdmFyKC0tY2FsY2l0ZS1mb250LXdlaWdodC1saWdodCk7XG59XG5cbi5jYWxjaXRlLXR5cG9ncmFwaHktbGlnaHQtbWludXMtMmgge1xuICBmb250LXNpemU6IHZhcigtLWNhbGNpdGUtZm9udC1zaXplLXNtKTtcbiAgZm9udC13ZWlnaHQ6IHZhcigtLWNhbGNpdGUtZm9udC13ZWlnaHQtbGlnaHQpO1xufVxuXG4uY2FsY2l0ZS10eXBvZ3JhcGh5LWxpZ2h0LW1pbnVzLTNoIHtcbiAgZm9udC1zaXplOiB2YXIoLS1jYWxjaXRlLWZvbnQtc2l6ZS14cyk7XG4gIGZvbnQtd2VpZ2h0OiB2YXIoLS1jYWxjaXRlLWZvbnQtd2VpZ2h0LWxpZ2h0KTtcbiAgbGluZS1oZWlnaHQ6IHZhcigtLWNhbGNpdGUtZm9udC1saW5lLWhlaWdodC1maXhlZC1zbSk7XG59XG5cbi5jYWxjaXRlLXR5cG9ncmFwaHkge1xuICBmb250LWZhbWlseTogdmFyKC0tY2FsY2l0ZS1mb250LWZhbWlseSk7XG4gIGZvbnQtc2l6ZTogdmFyKC0tY2FsY2l0ZS1mb250LXNpemUpO1xuICBmb250LXdlaWdodDogdmFyKC0tY2FsY2l0ZS1mb250LXdlaWdodC1yZWd1bGFyKTtcbiAgbGV0dGVyLXNwYWNpbmc6IHZhcigtLWNhbGNpdGUtZm9udC1sZXR0ZXItc3BhY2luZy1ub3JtYWwpO1xuICBsaW5lLWhlaWdodDogdmFyKC0tY2FsY2l0ZS1mb250LWxpbmUtaGVpZ2h0LWZpeGVkLWJhc2UpO1xuICBwYXJhZ3JhcGgtc3BhY2luZzogdmFyKC0tY2FsY2l0ZS1mb250LXBhcmFncmFwaC1zcGFjaW5nLW5vcm1hbCk7XG4gIHRleHQtY2FzZTogdmFyKC0tY2FsY2l0ZS1mb250LXRleHQtY2FzZS1ub25lKTtcbiAgdGV4dC1kZWNvcmF0aW9uOiB2YXIoLS1jYWxjaXRlLWZvbnQtdGV4dC1kZWNvcmF0aW9uLW5vbmUpO1xufVxuXG4uY2FsY2l0ZS10eXBvZ3JhcGh5LWhpZXJhcmNoeS1jYXB0aW9uIHtcbiAgbGluZS1oZWlnaHQ6IDEuMzc1O1xuICBmb250LXNpemU6IDEycHg7XG59XG5cbi5jYWxjaXRlLXR5cG9ncmFwaHktaGllcmFyY2h5LWJvZHkge1xuICBmb250LWZhbWlseTogXCJBdmVuaXIgTmV4dCBMVCBQcm9cIjtcbiAgZm9udC1zaXplOiAxNHB4O1xuICBmb250LXdlaWdodDogNDAwO1xuICBsZXR0ZXItc3BhY2luZzogMDtcbiAgbGluZS1oZWlnaHQ6IDE2cHg7XG4gIHBhcmFncmFwaC1zcGFjaW5nOiA0cHg7XG4gIHRleHQtY2FzZTogbm9uZTtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xufVxuXG4uY2FsY2l0ZS10eXBvZ3JhcGh5LWhpZXJhcmNoeS1ib2R5LXNudWcge1xuICBsaW5lLWhlaWdodDogMS4zNzU7XG59XG5cbi5jYWxjaXRlLXR5cG9ncmFwaHktaGllcmFyY2h5LWhlYWRpbmctNSB7XG4gIGZvbnQtd2VpZ2h0OiA1MDA7XG4gIGxpbmUtaGVpZ2h0OiAxLjM3NTtcbn1cblxuLmNhbGNpdGUtdHlwb2dyYXBoeS1oaWVyYXJjaHktaGVhZGluZy00IHtcbiAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgbGluZS1oZWlnaHQ6IDEuMzc1O1xuICBmb250LXNpemU6IDE2cHg7XG59XG5cbi5jYWxjaXRlLXR5cG9ncmFwaHktaGllcmFyY2h5LWhlYWRpbmctMyB7XG4gIGZvbnQtd2VpZ2h0OiA1MDA7XG4gIGxpbmUtaGVpZ2h0OiAxLjM3NTtcbiAgZm9udC1zaXplOiAxOHB4O1xufVxuXG4uY2FsY2l0ZS10eXBvZ3JhcGh5LWhpZXJhcmNoeS1oZWFkaW5nLTIge1xuICBmb250LXdlaWdodDogNTAwO1xuICBsaW5lLWhlaWdodDogMS4zNzU7XG4gIGZvbnQtc2l6ZTogMjBweDtcbn1cblxuLmNhbGNpdGUtdHlwb2dyYXBoeS1oaWVyYXJjaHktaGVhZGluZy0xIHtcbiAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgbGluZS1oZWlnaHQ6IDEuMzc1O1xuICBmb250LXNpemU6IDI0cHg7XG59XG5cbi5jYWxjaXRlLXR5cG9ncmFwaHktaGllcmFyY2h5LWRpc3BsYXktMiB7XG4gIGZvbnQtd2VpZ2h0OiA2MDA7XG4gIGxpbmUtaGVpZ2h0OiAxLjM3NTtcbiAgZm9udC1zaXplOiAyMHB4O1xufVxuXG4uY2FsY2l0ZS10eXBvZ3JhcGh5LWhpZXJhcmNoeS1kaXNwbGF5LTEge1xuICBmb250LXdlaWdodDogNjAwO1xuICBsaW5lLWhlaWdodDogMS4zNzU7XG4gIGZvbnQtc2l6ZTogMjRweDtcbn1cblxuLmNhbGNpdGUtdHlwb2dyYXBoeS1yZWd1bGFyLW1pbnVzLTFoIHtcbiAgZm9udC1mYW1pbHk6IFwiQXZlbmlyIE5leHQgTFQgUHJvXCI7XG4gIGZvbnQtc2l6ZTogMTRweDtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgbGV0dGVyLXNwYWNpbmc6IDA7XG4gIGxpbmUtaGVpZ2h0OiAxNnB4O1xuICBwYXJhZ3JhcGgtc3BhY2luZzogNHB4O1xuICB0ZXh0LWNhc2U6IG5vbmU7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbn1cblxuQG1lZGlhIChwcmVmZXJzLWNvbG9yLXNjaGVtZTogbGlnaHQpIHtcbiAgOnJvb3Qge1xuICAgIC0tY2FsY2l0ZS1jb2xvci1ib3JkZXItd2hpdGU6I2ZmZmZmZjtcbiAgICAtLWNhbGNpdGUtY29sb3ItYm9yZGVyLWdob3N0OnJnYmEoMCwgMCwgMCwgMC4zKTtcbiAgICAtLWNhbGNpdGUtY29sb3ItYm9yZGVyLWlucHV0OiM5NDk0OTQ7XG4gICAgLS1jYWxjaXRlLWNvbG9yLWJvcmRlci0zOiNkZmRmZGY7XG4gICAgLS1jYWxjaXRlLWNvbG9yLWJvcmRlci0yOiNkNGQ0ZDQ7XG4gICAgLS1jYWxjaXRlLWNvbG9yLWJvcmRlci0xOiNjYWNhY2E7XG4gICAgLS1jYWxjaXRlLWNvbG9yLXRleHQtbGluazojMDA2MTliO1xuICAgIC0tY2FsY2l0ZS1jb2xvci10ZXh0LWludmVyc2U6I2ZmZmZmZjtcbiAgICAtLWNhbGNpdGUtY29sb3ItdGV4dC0zOiM2YTZhNmE7XG4gICAgLS1jYWxjaXRlLWNvbG9yLXRleHQtMjojNGE0YTRhO1xuICAgIC0tY2FsY2l0ZS1jb2xvci10ZXh0LTE6IzE1MTUxNTtcbiAgICAtLWNhbGNpdGUtY29sb3ItaW52ZXJzZS1wcmVzczojMjAyMDIwO1xuICAgIC0tY2FsY2l0ZS1jb2xvci1pbnZlcnNlLWhvdmVyOiMyYjJiMmI7XG4gICAgLS1jYWxjaXRlLWNvbG9yLWludmVyc2U6IzM1MzUzNTtcbiAgICAtLWNhbGNpdGUtY29sb3Itc3RhdHVzLWRhbmdlci1wcmVzczojN2MxZDEzO1xuICAgIC0tY2FsY2l0ZS1jb2xvci1zdGF0dXMtZGFuZ2VyLWhvdmVyOiNhODJiMWU7XG4gICAgLS1jYWxjaXRlLWNvbG9yLXN0YXR1cy1kYW5nZXI6I2Q4MzAyMDtcbiAgICAtLWNhbGNpdGUtY29sb3Itc3RhdHVzLXdhcm5pbmctcHJlc3M6I2JmYTIwMDtcbiAgICAtLWNhbGNpdGUtY29sb3Itc3RhdHVzLXdhcm5pbmctaG92ZXI6I2Q5YmMwMDtcbiAgICAtLWNhbGNpdGUtY29sb3Itc3RhdHVzLXdhcm5pbmc6I2VkZDMxNztcbiAgICAtLWNhbGNpdGUtY29sb3Itc3RhdHVzLXN1Y2Nlc3MtcHJlc3M6IzFhNjMyNDtcbiAgICAtLWNhbGNpdGUtY29sb3Itc3RhdHVzLXN1Y2Nlc3MtaG92ZXI6IzI4ODgzNTtcbiAgICAtLWNhbGNpdGUtY29sb3Itc3RhdHVzLXN1Y2Nlc3M6IzM1YWM0NjtcbiAgICAtLWNhbGNpdGUtY29sb3Itc3RhdHVzLWluZm8tcHJlc3M6IzAwMzA0ZDtcbiAgICAtLWNhbGNpdGUtY29sb3Itc3RhdHVzLWluZm8taG92ZXI6IzAwNDg3NDtcbiAgICAtLWNhbGNpdGUtY29sb3Itc3RhdHVzLWluZm86IzAwNjE5YjtcbiAgICAtLWNhbGNpdGUtY29sb3ItYnJhbmQtdW5kZXJsaW5lOnJnYmEoMCwgOTcsIDE1NSwgMC40KTtcbiAgICAtLWNhbGNpdGUtY29sb3ItYnJhbmQtcHJlc3M6IzAwNDg3NDtcbiAgICAtLWNhbGNpdGUtY29sb3ItYnJhbmQtaG92ZXI6IzAwNjE5YjtcbiAgICAtLWNhbGNpdGUtY29sb3ItYnJhbmQ6IzAwN2FjMjtcbiAgICAtLWNhbGNpdGUtY29sb3ItdHJhbnNwYXJlbnQtdGludDpyZ2JhKDI1NSwgMjU1LCAyNTUsIDAuOCk7XG4gICAgLS1jYWxjaXRlLWNvbG9yLXRyYW5zcGFyZW50LXNjcmltOnJnYmEoMjU1LCAyNTUsIDI1NSwgMC44NSk7XG4gICAgLS1jYWxjaXRlLWNvbG9yLXRyYW5zcGFyZW50LXByZXNzOnJnYmEoMCwgMCwgMCwgMC4wOCk7XG4gICAgLS1jYWxjaXRlLWNvbG9yLXRyYW5zcGFyZW50LWhvdmVyOnJnYmEoMCwgMCwgMCwgMC4wNCk7XG4gICAgLS1jYWxjaXRlLWNvbG9yLXRyYW5zcGFyZW50OnJnYmEoMCwgMCwgMCwgMCk7XG4gICAgLS1jYWxjaXRlLWNvbG9yLWZvcmVncm91bmQtY3VycmVudDojYzdlYWZmO1xuICAgIC0tY2FsY2l0ZS1jb2xvci1mb3JlZ3JvdW5kLTM6I2VhZWFlYTtcbiAgICAtLWNhbGNpdGUtY29sb3ItZm9yZWdyb3VuZC0yOiNmM2YzZjM7XG4gICAgLS1jYWxjaXRlLWNvbG9yLWZvcmVncm91bmQtMTojZmZmZmZmO1xuICAgIC0tY2FsY2l0ZS1jb2xvci1iYWNrZ3JvdW5kOiNmOGY4Zjg7XG4gIH1cbn1cbkBtZWRpYSAocHJlZmVycy1jb2xvci1zY2hlbWU6IGRhcmspIHtcbiAgOnJvb3Qge1xuICAgIC0tY2FsY2l0ZS1jb2xvci1ib3JkZXItd2hpdGU6I2Y4ZjhmODtcbiAgICAtLWNhbGNpdGUtY29sb3ItYm9yZGVyLWdob3N0OnJnYmEoMTE3LCAxMTcsIDExNywgMC4zKTtcbiAgICAtLWNhbGNpdGUtY29sb3ItYm9yZGVyLWlucHV0OiM3NTc1NzU7XG4gICAgLS1jYWxjaXRlLWNvbG9yLWJvcmRlci0zOiM0MDQwNDA7XG4gICAgLS1jYWxjaXRlLWNvbG9yLWJvcmRlci0yOiM0YTRhNGE7XG4gICAgLS1jYWxjaXRlLWNvbG9yLWJvcmRlci0xOiM1NTU1NTU7XG4gICAgLS1jYWxjaXRlLWNvbG9yLXRleHQtbGluazojMDBBMEZGO1xuICAgIC0tY2FsY2l0ZS1jb2xvci10ZXh0LWludmVyc2U6IzE1MTUxNTtcbiAgICAtLWNhbGNpdGUtY29sb3ItdGV4dC0zOiM5ZjlmOWY7XG4gICAgLS1jYWxjaXRlLWNvbG9yLXRleHQtMjojYmZiZmJmO1xuICAgIC0tY2FsY2l0ZS1jb2xvci10ZXh0LTE6I2ZmZmZmZjtcbiAgICAtLWNhbGNpdGUtY29sb3ItaW52ZXJzZS1wcmVzczojZjNmM2YzO1xuICAgIC0tY2FsY2l0ZS1jb2xvci1pbnZlcnNlLWhvdmVyOiNmZmZmZmY7XG4gICAgLS1jYWxjaXRlLWNvbG9yLWludmVyc2U6I2Y4ZjhmODtcbiAgICAtLWNhbGNpdGUtY29sb3Itc3RhdHVzLWRhbmdlci1wcmVzczojZDkwMDEyO1xuICAgIC0tY2FsY2l0ZS1jb2xvci1zdGF0dXMtZGFuZ2VyLWhvdmVyOiNmZjAwMTU7XG4gICAgLS1jYWxjaXRlLWNvbG9yLXN0YXR1cy1kYW5nZXI6I0ZFNTgzRTtcbiAgICAtLWNhbGNpdGUtY29sb3Itc3RhdHVzLXdhcm5pbmctcHJlc3M6I2Y1ZDAwMDtcbiAgICAtLWNhbGNpdGUtY29sb3Itc3RhdHVzLXdhcm5pbmctaG92ZXI6I2ZmZWUzMztcbiAgICAtLWNhbGNpdGUtY29sb3Itc3RhdHVzLXdhcm5pbmc6I0ZGQzkwMDtcbiAgICAtLWNhbGNpdGUtY29sb3Itc3RhdHVzLXN1Y2Nlc3MtcHJlc3M6IzAwYjgxYjtcbiAgICAtLWNhbGNpdGUtY29sb3Itc3RhdHVzLXN1Y2Nlc3MtaG92ZXI6IzNiZWQ1MjtcbiAgICAtLWNhbGNpdGUtY29sb3Itc3RhdHVzLXN1Y2Nlc3M6IzM2REE0MztcbiAgICAtLWNhbGNpdGUtY29sb3Itc3RhdHVzLWluZm8tcHJlc3M6IzAwOWFmMjtcbiAgICAtLWNhbGNpdGUtY29sb3Itc3RhdHVzLWluZm8taG92ZXI6IzNkYjhmZjtcbiAgICAtLWNhbGNpdGUtY29sb3Itc3RhdHVzLWluZm86IzAwQTBGRjtcbiAgICAtLWNhbGNpdGUtY29sb3ItYnJhbmQtdW5kZXJsaW5lOnJnYmEoMCwgMTYwLCAyNTUsIDAuNCk7XG4gICAgLS1jYWxjaXRlLWNvbG9yLWJyYW5kLXByZXNzOiMwMDYxOWI7XG4gICAgLS1jYWxjaXRlLWNvbG9yLWJyYW5kLWhvdmVyOiMwMDdhYzI7XG4gICAgLS1jYWxjaXRlLWNvbG9yLWJyYW5kOiMwMDlhZjI7XG4gICAgLS1jYWxjaXRlLWNvbG9yLXRyYW5zcGFyZW50LXRpbnQ6cmdiYSg0MywgNDMsIDQzLCAwLjgpO1xuICAgIC0tY2FsY2l0ZS1jb2xvci10cmFuc3BhcmVudC1zY3JpbTpyZ2JhKDAsIDAsIDAsIDAuODUpO1xuICAgIC0tY2FsY2l0ZS1jb2xvci10cmFuc3BhcmVudC1wcmVzczpyZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMDgpO1xuICAgIC0tY2FsY2l0ZS1jb2xvci10cmFuc3BhcmVudC1ob3ZlcjpyZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMDQpO1xuICAgIC0tY2FsY2l0ZS1jb2xvci10cmFuc3BhcmVudDpyZ2JhKDI1NSwgMjU1LCAyNTUsIDApO1xuICAgIC0tY2FsY2l0ZS1jb2xvci1mb3JlZ3JvdW5kLWN1cnJlbnQ6IzIxNDE1NTtcbiAgICAtLWNhbGNpdGUtY29sb3ItZm9yZWdyb3VuZC0zOiMxNTE1MTU7XG4gICAgLS1jYWxjaXRlLWNvbG9yLWZvcmVncm91bmQtMjojMjAyMDIwO1xuICAgIC0tY2FsY2l0ZS1jb2xvci1mb3JlZ3JvdW5kLTE6IzJiMmIyYjtcbiAgICAtLWNhbGNpdGUtY29sb3ItYmFja2dyb3VuZDojMzUzNTM1O1xuICB9XG59XG4uY2FsY2l0ZS1tb2RlLWxpZ2h0IHtcbiAgLS1jYWxjaXRlLWNvbG9yLWJvcmRlci13aGl0ZTojZmZmZmZmO1xuICAtLWNhbGNpdGUtY29sb3ItYm9yZGVyLWdob3N0OnJnYmEoMCwgMCwgMCwgMC4zKTtcbiAgLS1jYWxjaXRlLWNvbG9yLWJvcmRlci1pbnB1dDojOTQ5NDk0O1xuICAtLWNhbGNpdGUtY29sb3ItYm9yZGVyLTM6I2RmZGZkZjtcbiAgLS1jYWxjaXRlLWNvbG9yLWJvcmRlci0yOiNkNGQ0ZDQ7XG4gIC0tY2FsY2l0ZS1jb2xvci1ib3JkZXItMTojY2FjYWNhO1xuICAtLWNhbGNpdGUtY29sb3ItdGV4dC1saW5rOiMwMDYxOWI7XG4gIC0tY2FsY2l0ZS1jb2xvci10ZXh0LWludmVyc2U6I2ZmZmZmZjtcbiAgLS1jYWxjaXRlLWNvbG9yLXRleHQtMzojNmE2YTZhO1xuICAtLWNhbGNpdGUtY29sb3ItdGV4dC0yOiM0YTRhNGE7XG4gIC0tY2FsY2l0ZS1jb2xvci10ZXh0LTE6IzE1MTUxNTtcbiAgLS1jYWxjaXRlLWNvbG9yLWludmVyc2UtcHJlc3M6IzIwMjAyMDtcbiAgLS1jYWxjaXRlLWNvbG9yLWludmVyc2UtaG92ZXI6IzJiMmIyYjtcbiAgLS1jYWxjaXRlLWNvbG9yLWludmVyc2U6IzM1MzUzNTtcbiAgLS1jYWxjaXRlLWNvbG9yLXN0YXR1cy1kYW5nZXItcHJlc3M6IzdjMWQxMztcbiAgLS1jYWxjaXRlLWNvbG9yLXN0YXR1cy1kYW5nZXItaG92ZXI6I2E4MmIxZTtcbiAgLS1jYWxjaXRlLWNvbG9yLXN0YXR1cy1kYW5nZXI6I2Q4MzAyMDtcbiAgLS1jYWxjaXRlLWNvbG9yLXN0YXR1cy13YXJuaW5nLXByZXNzOiNiZmEyMDA7XG4gIC0tY2FsY2l0ZS1jb2xvci1zdGF0dXMtd2FybmluZy1ob3ZlcjojZDliYzAwO1xuICAtLWNhbGNpdGUtY29sb3Itc3RhdHVzLXdhcm5pbmc6I2VkZDMxNztcbiAgLS1jYWxjaXRlLWNvbG9yLXN0YXR1cy1zdWNjZXNzLXByZXNzOiMxYTYzMjQ7XG4gIC0tY2FsY2l0ZS1jb2xvci1zdGF0dXMtc3VjY2Vzcy1ob3ZlcjojMjg4ODM1O1xuICAtLWNhbGNpdGUtY29sb3Itc3RhdHVzLXN1Y2Nlc3M6IzM1YWM0NjtcbiAgLS1jYWxjaXRlLWNvbG9yLXN0YXR1cy1pbmZvLXByZXNzOiMwMDMwNGQ7XG4gIC0tY2FsY2l0ZS1jb2xvci1zdGF0dXMtaW5mby1ob3ZlcjojMDA0ODc0O1xuICAtLWNhbGNpdGUtY29sb3Itc3RhdHVzLWluZm86IzAwNjE5YjtcbiAgLS1jYWxjaXRlLWNvbG9yLWJyYW5kLXVuZGVybGluZTpyZ2JhKDAsIDk3LCAxNTUsIDAuNCk7XG4gIC0tY2FsY2l0ZS1jb2xvci1icmFuZC1wcmVzczojMDA0ODc0O1xuICAtLWNhbGNpdGUtY29sb3ItYnJhbmQtaG92ZXI6IzAwNjE5YjtcbiAgLS1jYWxjaXRlLWNvbG9yLWJyYW5kOiMwMDdhYzI7XG4gIC0tY2FsY2l0ZS1jb2xvci10cmFuc3BhcmVudC10aW50OnJnYmEoMjU1LCAyNTUsIDI1NSwgMC44KTtcbiAgLS1jYWxjaXRlLWNvbG9yLXRyYW5zcGFyZW50LXNjcmltOnJnYmEoMjU1LCAyNTUsIDI1NSwgMC44NSk7XG4gIC0tY2FsY2l0ZS1jb2xvci10cmFuc3BhcmVudC1wcmVzczpyZ2JhKDAsIDAsIDAsIDAuMDgpO1xuICAtLWNhbGNpdGUtY29sb3ItdHJhbnNwYXJlbnQtaG92ZXI6cmdiYSgwLCAwLCAwLCAwLjA0KTtcbiAgLS1jYWxjaXRlLWNvbG9yLXRyYW5zcGFyZW50OnJnYmEoMCwgMCwgMCwgMCk7XG4gIC0tY2FsY2l0ZS1jb2xvci1mb3JlZ3JvdW5kLWN1cnJlbnQ6I2M3ZWFmZjtcbiAgLS1jYWxjaXRlLWNvbG9yLWZvcmVncm91bmQtMzojZWFlYWVhO1xuICAtLWNhbGNpdGUtY29sb3ItZm9yZWdyb3VuZC0yOiNmM2YzZjM7XG4gIC0tY2FsY2l0ZS1jb2xvci1mb3JlZ3JvdW5kLTE6I2ZmZmZmZjtcbiAgLS1jYWxjaXRlLWNvbG9yLWJhY2tncm91bmQ6I2Y4ZjhmODtcbn1cblxuLmNhbGNpdGUtbW9kZS1kYXJrIHtcbiAgLS1jYWxjaXRlLWNvbG9yLWJvcmRlci13aGl0ZTojZjhmOGY4O1xuICAtLWNhbGNpdGUtY29sb3ItYm9yZGVyLWdob3N0OnJnYmEoMTE3LCAxMTcsIDExNywgMC4zKTtcbiAgLS1jYWxjaXRlLWNvbG9yLWJvcmRlci1pbnB1dDojNzU3NTc1O1xuICAtLWNhbGNpdGUtY29sb3ItYm9yZGVyLTM6IzQwNDA0MDtcbiAgLS1jYWxjaXRlLWNvbG9yLWJvcmRlci0yOiM0YTRhNGE7XG4gIC0tY2FsY2l0ZS1jb2xvci1ib3JkZXItMTojNTU1NTU1O1xuICAtLWNhbGNpdGUtY29sb3ItdGV4dC1saW5rOiMwMEEwRkY7XG4gIC0tY2FsY2l0ZS1jb2xvci10ZXh0LWludmVyc2U6IzE1MTUxNTtcbiAgLS1jYWxjaXRlLWNvbG9yLXRleHQtMzojOWY5ZjlmO1xuICAtLWNhbGNpdGUtY29sb3ItdGV4dC0yOiNiZmJmYmY7XG4gIC0tY2FsY2l0ZS1jb2xvci10ZXh0LTE6I2ZmZmZmZjtcbiAgLS1jYWxjaXRlLWNvbG9yLWludmVyc2UtcHJlc3M6I2YzZjNmMztcbiAgLS1jYWxjaXRlLWNvbG9yLWludmVyc2UtaG92ZXI6I2ZmZmZmZjtcbiAgLS1jYWxjaXRlLWNvbG9yLWludmVyc2U6I2Y4ZjhmODtcbiAgLS1jYWxjaXRlLWNvbG9yLXN0YXR1cy1kYW5nZXItcHJlc3M6I2Q5MDAxMjtcbiAgLS1jYWxjaXRlLWNvbG9yLXN0YXR1cy1kYW5nZXItaG92ZXI6I2ZmMDAxNTtcbiAgLS1jYWxjaXRlLWNvbG9yLXN0YXR1cy1kYW5nZXI6I0ZFNTgzRTtcbiAgLS1jYWxjaXRlLWNvbG9yLXN0YXR1cy13YXJuaW5nLXByZXNzOiNmNWQwMDA7XG4gIC0tY2FsY2l0ZS1jb2xvci1zdGF0dXMtd2FybmluZy1ob3ZlcjojZmZlZTMzO1xuICAtLWNhbGNpdGUtY29sb3Itc3RhdHVzLXdhcm5pbmc6I0ZGQzkwMDtcbiAgLS1jYWxjaXRlLWNvbG9yLXN0YXR1cy1zdWNjZXNzLXByZXNzOiMwMGI4MWI7XG4gIC0tY2FsY2l0ZS1jb2xvci1zdGF0dXMtc3VjY2Vzcy1ob3ZlcjojM2JlZDUyO1xuICAtLWNhbGNpdGUtY29sb3Itc3RhdHVzLXN1Y2Nlc3M6IzM2REE0MztcbiAgLS1jYWxjaXRlLWNvbG9yLXN0YXR1cy1pbmZvLXByZXNzOiMwMDlhZjI7XG4gIC0tY2FsY2l0ZS1jb2xvci1zdGF0dXMtaW5mby1ob3ZlcjojM2RiOGZmO1xuICAtLWNhbGNpdGUtY29sb3Itc3RhdHVzLWluZm86IzAwQTBGRjtcbiAgLS1jYWxjaXRlLWNvbG9yLWJyYW5kLXVuZGVybGluZTpyZ2JhKDAsIDE2MCwgMjU1LCAwLjQpO1xuICAtLWNhbGNpdGUtY29sb3ItYnJhbmQtcHJlc3M6IzAwNjE5YjtcbiAgLS1jYWxjaXRlLWNvbG9yLWJyYW5kLWhvdmVyOiMwMDdhYzI7XG4gIC0tY2FsY2l0ZS1jb2xvci1icmFuZDojMDA5YWYyO1xuICAtLWNhbGNpdGUtY29sb3ItdHJhbnNwYXJlbnQtdGludDpyZ2JhKDQzLCA0MywgNDMsIDAuOCk7XG4gIC0tY2FsY2l0ZS1jb2xvci10cmFuc3BhcmVudC1zY3JpbTpyZ2JhKDAsIDAsIDAsIDAuODUpO1xuICAtLWNhbGNpdGUtY29sb3ItdHJhbnNwYXJlbnQtcHJlc3M6cmdiYSgyNTUsIDI1NSwgMjU1LCAwLjA4KTtcbiAgLS1jYWxjaXRlLWNvbG9yLXRyYW5zcGFyZW50LWhvdmVyOnJnYmEoMjU1LCAyNTUsIDI1NSwgMC4wNCk7XG4gIC0tY2FsY2l0ZS1jb2xvci10cmFuc3BhcmVudDpyZ2JhKDI1NSwgMjU1LCAyNTUsIDApO1xuICAtLWNhbGNpdGUtY29sb3ItZm9yZWdyb3VuZC1jdXJyZW50OiMyMTQxNTU7XG4gIC0tY2FsY2l0ZS1jb2xvci1mb3JlZ3JvdW5kLTM6IzE1MTUxNTtcbiAgLS1jYWxjaXRlLWNvbG9yLWZvcmVncm91bmQtMjojMjAyMDIwO1xuICAtLWNhbGNpdGUtY29sb3ItZm9yZWdyb3VuZC0xOiMyYjJiMmI7XG4gIC0tY2FsY2l0ZS1jb2xvci1iYWNrZ3JvdW5kOiMzNTM1MzU7XG59XG5cbjpyb290IHtcbiAgLS1jYWxjaXRlLWNvZGUtZmFtaWx5OlwiQ29uc29sYXNcIiwgXCJBbmRhbGUgTW9ub1wiLCBcIkx1Y2lkYSBDb25zb2xlXCIsIFwiTW9uYWNvXCIsIG1vbm9zcGFjZTtcbiAgLS1jYWxjaXRlLXNhbnMtZmFtaWx5OlwiQXZlbmlyIE5leHRcIiwgXCJBdmVuaXJcIiwgXCJIZWx2ZXRpY2EgTmV1ZVwiLCBzYW5zLXNlcmlmO1xuICAtLWNhbGNpdGUtZm9udC1zaXplLS0zOjAuNjI1cmVtO1xuICAtLWNhbGNpdGUtZm9udC1zaXplLS0yOjAuNzVyZW07XG4gIC0tY2FsY2l0ZS1mb250LXNpemUtLTE6MC44NzVyZW07XG4gIC0tY2FsY2l0ZS1mb250LXNpemUtMDoxcmVtO1xuICAtLWNhbGNpdGUtZm9udC1zaXplLTE6MS4xMjVyZW07XG4gIC0tY2FsY2l0ZS1mb250LXNpemUtMjoxLjI1cmVtO1xuICAtLWNhbGNpdGUtZm9udC1zaXplLTM6MS42MjVyZW07XG4gIC0tY2FsY2l0ZS1mb250LXNpemUtNDoycmVtO1xuICAtLWNhbGNpdGUtZm9udC1zaXplLTU6Mi41cmVtO1xuICAtLWNhbGNpdGUtZm9udC1zaXplLTY6M3JlbTtcbiAgLS1jYWxjaXRlLWZvbnQtc2l6ZS03OjMuNXJlbTtcbiAgLS1jYWxjaXRlLWZvbnQtc2l6ZS04OjRyZW07XG4gIC0tY2FsY2l0ZS1mb250LXdlaWdodC1saWdodDozMDA7XG4gIC0tY2FsY2l0ZS1mb250LXdlaWdodC1ub3JtYWw6NDAwO1xuICAtLWNhbGNpdGUtZm9udC13ZWlnaHQtbWVkaXVtOjUwMDtcbiAgLS1jYWxjaXRlLWZvbnQtd2VpZ2h0LWJvbGQ6NjAwO1xuICAtLWNhbGNpdGUtZmxvYXRpbmctdWktdHJhbnNpdGlvbjp2YXIoLS1jYWxjaXRlLWFuaW1hdGlvbi10aW1pbmcpO1xuICAtLWNhbGNpdGUtZmxvYXRpbmctdWktei1pbmRleDp2YXIoLS1jYWxjaXRlLXotaW5kZXgtZHJvcGRvd24pO1xuICAtLWNhbGNpdGUtYW5pbWF0aW9uLXRpbWluZzpjYWxjKDE1MG1zICogdmFyKC0tY2FsY2l0ZS1pbnRlcm5hbC1kdXJhdGlvbi1mYWN0b3IpKTtcbiAgLS1jYWxjaXRlLWludGVybmFsLWR1cmF0aW9uLWZhY3Rvcjp2YXIoLS1jYWxjaXRlLWR1cmF0aW9uLWZhY3RvciwgMSk7XG4gIC0tY2FsY2l0ZS1pbnRlcm5hbC1hbmltYXRpb24tdGltaW5nLWZhc3Q6Y2FsYygxMDBtcyAqIHZhcigtLWNhbGNpdGUtaW50ZXJuYWwtZHVyYXRpb24tZmFjdG9yKSk7XG4gIC0tY2FsY2l0ZS1pbnRlcm5hbC1hbmltYXRpb24tdGltaW5nLW1lZGl1bTpjYWxjKDIwMG1zICogdmFyKC0tY2FsY2l0ZS1pbnRlcm5hbC1kdXJhdGlvbi1mYWN0b3IpKTtcbiAgLS1jYWxjaXRlLWludGVybmFsLWFuaW1hdGlvbi10aW1pbmctc2xvdzpjYWxjKDMwMG1zICogdmFyKC0tY2FsY2l0ZS1pbnRlcm5hbC1kdXJhdGlvbi1mYWN0b3IpKTtcbiAgdGV4dC1yZW5kZXJpbmc6IG9wdGltaXplTGVnaWJpbGl0eTtcbiAgLXdlYmtpdC1mb250LXNtb290aGluZzogYW50aWFsaWFzZWQ7XG4gIC1tb3otb3N4LWZvbnQtc21vb3RoaW5nOiBncmF5c2NhbGU7XG4gIC0tY2FsY2l0ZS1wb3BvdmVyLXotaW5kZXg6dmFyKC0tY2FsY2l0ZS16LWluZGV4LXBvcHVwKTtcbiAgLS1jYWxjaXRlLWJvcmRlci1yYWRpdXM6dmFyKC0tY2FsY2l0ZS1ib3JkZXItcmFkaXVzLXJvdW5kLCA0cHgpO1xuICAtLWNhbGNpdGUtYm9yZGVyLXJhZGl1cy1iYXNlOjA7XG4gIC0tY2FsY2l0ZS1vZmZzZXQtaW52ZXJ0LWZvY3VzOjA7XG4gIC0tY2FsY2l0ZS1wYW5lbC13aWR0aC1tdWx0aXBsaWVyOjE7XG4gIC0tY2FsY2l0ZS11aS1pY29uLWNvbG9yOmN1cnJlbnRDb2xvcjtcbiAgZm9udC1mYW1pbHk6IHZhcigtLWNhbGNpdGUtc2Fucy1mYW1pbHkpO1xufVxuXG5AbWVkaWEgKHByZWZlcnMtY29sb3Itc2NoZW1lOiBkYXJrKSB7XG4gIC5jYWxjaXRlLW1vZGUtYXV0byB7XG4gICAgLS1jYWxjaXRlLWNvbG9yLWJvcmRlci13aGl0ZTojZjhmOGY4O1xuICAgIC0tY2FsY2l0ZS1jb2xvci1ib3JkZXItZ2hvc3Q6cmdiYSgxMTcsIDExNywgMTE3LCAwLjMpO1xuICAgIC0tY2FsY2l0ZS1jb2xvci1ib3JkZXItaW5wdXQ6Izc1NzU3NTtcbiAgICAtLWNhbGNpdGUtY29sb3ItYm9yZGVyLTM6IzQwNDA0MDtcbiAgICAtLWNhbGNpdGUtY29sb3ItYm9yZGVyLTI6IzRhNGE0YTtcbiAgICAtLWNhbGNpdGUtY29sb3ItYm9yZGVyLTE6IzU1NTU1NTtcbiAgICAtLWNhbGNpdGUtY29sb3ItdGV4dC1saW5rOiMwMEEwRkY7XG4gICAgLS1jYWxjaXRlLWNvbG9yLXRleHQtaW52ZXJzZTojMTUxNTE1O1xuICAgIC0tY2FsY2l0ZS1jb2xvci10ZXh0LTM6IzlmOWY5ZjtcbiAgICAtLWNhbGNpdGUtY29sb3ItdGV4dC0yOiNiZmJmYmY7XG4gICAgLS1jYWxjaXRlLWNvbG9yLXRleHQtMTojZmZmZmZmO1xuICAgIC0tY2FsY2l0ZS1jb2xvci1pbnZlcnNlLXByZXNzOiNmM2YzZjM7XG4gICAgLS1jYWxjaXRlLWNvbG9yLWludmVyc2UtaG92ZXI6I2ZmZmZmZjtcbiAgICAtLWNhbGNpdGUtY29sb3ItaW52ZXJzZTojZjhmOGY4O1xuICAgIC0tY2FsY2l0ZS1jb2xvci1zdGF0dXMtZGFuZ2VyLXByZXNzOiNkOTAwMTI7XG4gICAgLS1jYWxjaXRlLWNvbG9yLXN0YXR1cy1kYW5nZXItaG92ZXI6I2ZmMDAxNTtcbiAgICAtLWNhbGNpdGUtY29sb3Itc3RhdHVzLWRhbmdlcjojRkU1ODNFO1xuICAgIC0tY2FsY2l0ZS1jb2xvci1zdGF0dXMtd2FybmluZy1wcmVzczojZjVkMDAwO1xuICAgIC0tY2FsY2l0ZS1jb2xvci1zdGF0dXMtd2FybmluZy1ob3ZlcjojZmZlZTMzO1xuICAgIC0tY2FsY2l0ZS1jb2xvci1zdGF0dXMtd2FybmluZzojRkZDOTAwO1xuICAgIC0tY2FsY2l0ZS1jb2xvci1zdGF0dXMtc3VjY2Vzcy1wcmVzczojMDBiODFiO1xuICAgIC0tY2FsY2l0ZS1jb2xvci1zdGF0dXMtc3VjY2Vzcy1ob3ZlcjojM2JlZDUyO1xuICAgIC0tY2FsY2l0ZS1jb2xvci1zdGF0dXMtc3VjY2VzczojMzZEQTQzO1xuICAgIC0tY2FsY2l0ZS1jb2xvci1zdGF0dXMtaW5mby1wcmVzczojMDA5YWYyO1xuICAgIC0tY2FsY2l0ZS1jb2xvci1zdGF0dXMtaW5mby1ob3ZlcjojM2RiOGZmO1xuICAgIC0tY2FsY2l0ZS1jb2xvci1zdGF0dXMtaW5mbzojMDBBMEZGO1xuICAgIC0tY2FsY2l0ZS1jb2xvci1icmFuZC11bmRlcmxpbmU6cmdiYSgwLCAxNjAsIDI1NSwgMC40KTtcbiAgICAtLWNhbGNpdGUtY29sb3ItYnJhbmQtcHJlc3M6IzAwNjE5YjtcbiAgICAtLWNhbGNpdGUtY29sb3ItYnJhbmQtaG92ZXI6IzAwN2FjMjtcbiAgICAtLWNhbGNpdGUtY29sb3ItYnJhbmQ6IzAwOWFmMjtcbiAgICAtLWNhbGNpdGUtY29sb3ItdHJhbnNwYXJlbnQtdGludDpyZ2JhKDQzLCA0MywgNDMsIDAuOCk7XG4gICAgLS1jYWxjaXRlLWNvbG9yLXRyYW5zcGFyZW50LXNjcmltOnJnYmEoMCwgMCwgMCwgMC44NSk7XG4gICAgLS1jYWxjaXRlLWNvbG9yLXRyYW5zcGFyZW50LXByZXNzOnJnYmEoMjU1LCAyNTUsIDI1NSwgMC4wOCk7XG4gICAgLS1jYWxjaXRlLWNvbG9yLXRyYW5zcGFyZW50LWhvdmVyOnJnYmEoMjU1LCAyNTUsIDI1NSwgMC4wNCk7XG4gICAgLS1jYWxjaXRlLWNvbG9yLXRyYW5zcGFyZW50OnJnYmEoMjU1LCAyNTUsIDI1NSwgMCk7XG4gICAgLS1jYWxjaXRlLWNvbG9yLWZvcmVncm91bmQtY3VycmVudDojMjE0MTU1O1xuICAgIC0tY2FsY2l0ZS1jb2xvci1mb3JlZ3JvdW5kLTM6IzE1MTUxNTtcbiAgICAtLWNhbGNpdGUtY29sb3ItZm9yZWdyb3VuZC0yOiMyMDIwMjA7XG4gICAgLS1jYWxjaXRlLWNvbG9yLWZvcmVncm91bmQtMTojMmIyYjJiO1xuICAgIC0tY2FsY2l0ZS1jb2xvci1iYWNrZ3JvdW5kOiMzNTM1MzU7XG4gIH1cbn1cbkBtZWRpYSAocHJlZmVycy1jb2xvci1zY2hlbWU6IGxpZ2h0KSB7XG4gIC5jYWxjaXRlLW1vZGUtYXV0byB7XG4gICAgLS1jYWxjaXRlLWNvbG9yLWJvcmRlci13aGl0ZTojZmZmZmZmO1xuICAgIC0tY2FsY2l0ZS1jb2xvci1ib3JkZXItZ2hvc3Q6cmdiYSgwLCAwLCAwLCAwLjMpO1xuICAgIC0tY2FsY2l0ZS1jb2xvci1ib3JkZXItaW5wdXQ6Izk0OTQ5NDtcbiAgICAtLWNhbGNpdGUtY29sb3ItYm9yZGVyLTM6I2RmZGZkZjtcbiAgICAtLWNhbGNpdGUtY29sb3ItYm9yZGVyLTI6I2Q0ZDRkNDtcbiAgICAtLWNhbGNpdGUtY29sb3ItYm9yZGVyLTE6I2NhY2FjYTtcbiAgICAtLWNhbGNpdGUtY29sb3ItdGV4dC1saW5rOiMwMDYxOWI7XG4gICAgLS1jYWxjaXRlLWNvbG9yLXRleHQtaW52ZXJzZTojZmZmZmZmO1xuICAgIC0tY2FsY2l0ZS1jb2xvci10ZXh0LTM6IzZhNmE2YTtcbiAgICAtLWNhbGNpdGUtY29sb3ItdGV4dC0yOiM0YTRhNGE7XG4gICAgLS1jYWxjaXRlLWNvbG9yLXRleHQtMTojMTUxNTE1O1xuICAgIC0tY2FsY2l0ZS1jb2xvci1pbnZlcnNlLXByZXNzOiMyMDIwMjA7XG4gICAgLS1jYWxjaXRlLWNvbG9yLWludmVyc2UtaG92ZXI6IzJiMmIyYjtcbiAgICAtLWNhbGNpdGUtY29sb3ItaW52ZXJzZTojMzUzNTM1O1xuICAgIC0tY2FsY2l0ZS1jb2xvci1zdGF0dXMtZGFuZ2VyLXByZXNzOiM3YzFkMTM7XG4gICAgLS1jYWxjaXRlLWNvbG9yLXN0YXR1cy1kYW5nZXItaG92ZXI6I2E4MmIxZTtcbiAgICAtLWNhbGNpdGUtY29sb3Itc3RhdHVzLWRhbmdlcjojZDgzMDIwO1xuICAgIC0tY2FsY2l0ZS1jb2xvci1zdGF0dXMtd2FybmluZy1wcmVzczojYmZhMjAwO1xuICAgIC0tY2FsY2l0ZS1jb2xvci1zdGF0dXMtd2FybmluZy1ob3ZlcjojZDliYzAwO1xuICAgIC0tY2FsY2l0ZS1jb2xvci1zdGF0dXMtd2FybmluZzojZWRkMzE3O1xuICAgIC0tY2FsY2l0ZS1jb2xvci1zdGF0dXMtc3VjY2Vzcy1wcmVzczojMWE2MzI0O1xuICAgIC0tY2FsY2l0ZS1jb2xvci1zdGF0dXMtc3VjY2Vzcy1ob3ZlcjojMjg4ODM1O1xuICAgIC0tY2FsY2l0ZS1jb2xvci1zdGF0dXMtc3VjY2VzczojMzVhYzQ2O1xuICAgIC0tY2FsY2l0ZS1jb2xvci1zdGF0dXMtaW5mby1wcmVzczojMDAzMDRkO1xuICAgIC0tY2FsY2l0ZS1jb2xvci1zdGF0dXMtaW5mby1ob3ZlcjojMDA0ODc0O1xuICAgIC0tY2FsY2l0ZS1jb2xvci1zdGF0dXMtaW5mbzojMDA2MTliO1xuICAgIC0tY2FsY2l0ZS1jb2xvci1icmFuZC11bmRlcmxpbmU6cmdiYSgwLCA5NywgMTU1LCAwLjQpO1xuICAgIC0tY2FsY2l0ZS1jb2xvci1icmFuZC1wcmVzczojMDA0ODc0O1xuICAgIC0tY2FsY2l0ZS1jb2xvci1icmFuZC1ob3ZlcjojMDA2MTliO1xuICAgIC0tY2FsY2l0ZS1jb2xvci1icmFuZDojMDA3YWMyO1xuICAgIC0tY2FsY2l0ZS1jb2xvci10cmFuc3BhcmVudC10aW50OnJnYmEoMjU1LCAyNTUsIDI1NSwgMC44KTtcbiAgICAtLWNhbGNpdGUtY29sb3ItdHJhbnNwYXJlbnQtc2NyaW06cmdiYSgyNTUsIDI1NSwgMjU1LCAwLjg1KTtcbiAgICAtLWNhbGNpdGUtY29sb3ItdHJhbnNwYXJlbnQtcHJlc3M6cmdiYSgwLCAwLCAwLCAwLjA4KTtcbiAgICAtLWNhbGNpdGUtY29sb3ItdHJhbnNwYXJlbnQtaG92ZXI6cmdiYSgwLCAwLCAwLCAwLjA0KTtcbiAgICAtLWNhbGNpdGUtY29sb3ItdHJhbnNwYXJlbnQ6cmdiYSgwLCAwLCAwLCAwKTtcbiAgICAtLWNhbGNpdGUtY29sb3ItZm9yZWdyb3VuZC1jdXJyZW50OiNjN2VhZmY7XG4gICAgLS1jYWxjaXRlLWNvbG9yLWZvcmVncm91bmQtMzojZWFlYWVhO1xuICAgIC0tY2FsY2l0ZS1jb2xvci1mb3JlZ3JvdW5kLTI6I2YzZjNmMztcbiAgICAtLWNhbGNpdGUtY29sb3ItZm9yZWdyb3VuZC0xOiNmZmZmZmY7XG4gICAgLS1jYWxjaXRlLWNvbG9yLWJhY2tncm91bmQ6I2Y4ZjhmODtcbiAgfVxufVxuQG1lZGlhIChwcmVmZXJzLXJlZHVjZWQtbW90aW9uOiByZWR1Y2UpIHtcbiAgOnJvb3Qge1xuICAgIC0tY2FsY2l0ZS1pbnRlcm5hbC1kdXJhdGlvbi1mYWN0b3I6MC4wMTtcbiAgfVxufVxuQGtleWZyYW1lcyBpbiB7XG4gIDAlIHtcbiAgICBvcGFjaXR5OiAwO1xuICB9XG4gIDEwMCUge1xuICAgIG9wYWNpdHk6IDE7XG4gIH1cbn1cbkBrZXlmcmFtZXMgaW4tZG93biB7XG4gIDAlIHtcbiAgICBvcGFjaXR5OiAwO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlM0QoMCwgLTVweCwgMCk7XG4gIH1cbiAgMTAwJSB7XG4gICAgb3BhY2l0eTogMTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZTNEKDAsIDAsIDApO1xuICB9XG59XG5Aa2V5ZnJhbWVzIGluLXVwIHtcbiAgMCUge1xuICAgIG9wYWNpdHk6IDA7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUzRCgwLCA1cHgsIDApO1xuICB9XG4gIDEwMCUge1xuICAgIG9wYWNpdHk6IDE7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUzRCgwLCAwLCAwKTtcbiAgfVxufVxuQGtleWZyYW1lcyBpbi1yaWdodCB7XG4gIDAlIHtcbiAgICBvcGFjaXR5OiAwO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlM0QoLTVweCwgMCwgMCk7XG4gIH1cbiAgMTAwJSB7XG4gICAgb3BhY2l0eTogMTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZTNEKDAsIDAsIDApO1xuICB9XG59XG5Aa2V5ZnJhbWVzIGluLWxlZnQge1xuICAwJSB7XG4gICAgb3BhY2l0eTogMDtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZTNEKDVweCwgMCwgMCk7XG4gIH1cbiAgMTAwJSB7XG4gICAgb3BhY2l0eTogMTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZTNEKDAsIDAsIDApO1xuICB9XG59XG5Aa2V5ZnJhbWVzIGluLXNjYWxlIHtcbiAgMCUge1xuICAgIG9wYWNpdHk6IDA7XG4gICAgdHJhbnNmb3JtOiBzY2FsZTNEKDAuOTUsIDAuOTUsIDEpO1xuICB9XG4gIDEwMCUge1xuICAgIG9wYWNpdHk6IDE7XG4gICAgdHJhbnNmb3JtOiBzY2FsZTNEKDEsIDEsIDEpO1xuICB9XG59XG4uY2FsY2l0ZS1hbmltYXRlIHtcbiAgb3BhY2l0eTogMDtcbiAgYW5pbWF0aW9uLWZpbGwtbW9kZTogYm90aDtcbiAgYW5pbWF0aW9uLWR1cmF0aW9uOiB2YXIoLS1jYWxjaXRlLWFuaW1hdGlvbi10aW1pbmcpO1xufVxuXG4uY2FsY2l0ZS1hbmltYXRlX19pbiB7XG4gIGFuaW1hdGlvbi1uYW1lOiBpbjtcbn1cblxuLmNhbGNpdGUtYW5pbWF0ZV9faW4tZG93biB7XG4gIGFuaW1hdGlvbi1uYW1lOiBpbi1kb3duO1xufVxuXG4uY2FsY2l0ZS1hbmltYXRlX19pbi11cCB7XG4gIGFuaW1hdGlvbi1uYW1lOiBpbi11cDtcbn1cblxuLmNhbGNpdGUtYW5pbWF0ZV9faW4tcmlnaHQge1xuICBhbmltYXRpb24tbmFtZTogaW4tcmlnaHQ7XG59XG5cbi5jYWxjaXRlLWFuaW1hdGVfX2luLWxlZnQge1xuICBhbmltYXRpb24tbmFtZTogaW4tbGVmdDtcbn1cblxuLmNhbGNpdGUtYW5pbWF0ZV9faW4tc2NhbGUge1xuICBhbmltYXRpb24tbmFtZTogaW4tc2NhbGU7XG59XG5cbi5jYWxjaXRlLXNvcnRhYmxlLS1naG9zdCwgLmNhbGNpdGUtc29ydGFibGUtLWRyYWcge1xuICBvdmVyZmxvdzogaGlkZGVuO1xufVxuXG4uY2FsY2l0ZS1zb3J0YWJsZS0tZ2hvc3Q6OmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXCI7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgaW5zZXQ6IDBweDtcbiAgei1pbmRleDogdmFyKC0tY2FsY2l0ZS16LWluZGV4KTtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgYm9yZGVyLXdpZHRoOiAxcHg7XG4gIGJvcmRlci1zdHlsZTogZGFzaGVkO1xuICBib3JkZXItY29sb3I6IHZhcigtLWNhbGNpdGUtY29sb3ItYnJhbmQpO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1jYWxjaXRlLWNvbG9yLWZvcmVncm91bmQtMik7XG59XG5cbi5jYWxjaXRlLXNvcnRhYmxlLS1kcmFnIHtcbiAgLS10dy1zaGFkb3c6MCA2cHggMjBweCAtNHB4IHJnYmEoMCwgMCwgMCwgMC4xKSwgMCA0cHggMTJweCAtMnB4IHJnYmEoMCwgMCwgMCwgMC4wOCk7XG4gIC0tdHctc2hhZG93LWNvbG9yZWQ6MCA2cHggMjBweCAtNHB4IHZhcigtLXR3LXNoYWRvdy1jb2xvciksIDAgNHB4IDEycHggLTJweCB2YXIoLS10dy1zaGFkb3ctY29sb3IpO1xuICBib3gtc2hhZG93OiB2YXIoLS10dy1yaW5nLW9mZnNldC1zaGFkb3csIDAgMCByZ2JhKDAsIDAsIDAsIDApKSwgdmFyKC0tdHctcmluZy1zaGFkb3csIDAgMCByZ2JhKDAsIDAsIDAsIDApKSwgdmFyKC0tdHctc2hhZG93KTtcbn1gLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL25vZGVfbW9kdWxlcy9AZXNyaS9jYWxjaXRlLWNvbXBvbmVudHMvZGlzdC9jYWxjaXRlL2NhbGNpdGUuY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUFBO0VBQU0sNkJBQUE7RUFBOEIsMkJBQUE7RUFBNEIsMkJBQUE7RUFBNEIsNkJBQUE7RUFBOEIsOEJBQUE7RUFBK0IsMkJBQUE7RUFBNEIsNEJBQUE7RUFBNkIsNEJBQUE7RUFBNkIsbUJBQUE7RUFBb0IsOEJBQUE7RUFBK0IsMkJBQUE7RUFBNEIsMEJBQUE7RUFBMkIseUJBQUE7RUFBMEIseUJBQUE7RUFBMEIseUJBQUE7RUFBMEIsd0JBQUE7RUFBeUIsd0JBQUE7RUFBeUIseUJBQUE7RUFBMEIsMEJBQUE7RUFBMkIsd0JBQUE7RUFBeUIsd0JBQUE7RUFBeUIsdUJBQUE7RUFBd0Isc0JBQUE7RUFBdUIsc0JBQUE7RUFBdUIsMkJBQUE7RUFBNEIsc0JBQUE7RUFBdUIsMkJBQUE7RUFBNEIscUJBQUE7RUFBc0IscUJBQUE7RUFBc0Isc0JBQUE7RUFBdUIsdUJBQUE7RUFB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QTtJQUFVLGlDQUFBO0VBc3VCamd0QjtFQXR1QmtpdEI7SUFBSyxVQUFBO0lBQVUsK0JBQUE7RUEwdUJqanRCO0FBQ0Y7QUEzdUJtbHRCO0VBQW9CO0lBQUcsVUFBQTtJQUFVLGtDQUFBO0VBZ3ZCbG50QjtFQWh2Qm9wdEI7SUFBSyxVQUFBO0lBQVUsK0JBQUE7RUFvdkJucXRCO0FBQ0Y7QUFydkJxc3RCO0VBQW1CO0lBQUcsVUFBQTtJQUFVLGlDQUFBO0VBMHZCbnV0QjtFQTF2Qm93dEI7SUFBSyxVQUFBO0lBQVUsK0JBQUE7RUE4dkJueHRCO0FBQ0Y7QUEvdkJxenRCO0VBQW9CO0lBQUcsVUFBQTtJQUFVLGlDQUFBO0VBb3dCcDF0QjtFQXB3QnEzdEI7SUFBSyxVQUFBO0lBQVUsMkJBQUE7RUF3d0JwNHRCO0FBQ0Y7QUF6d0JrNnRCO0VBQWlCLFVBQUE7RUFBVSx5QkFBQTtFQUF5QixtREFBQTtBQTh3QnQ5dEI7O0FBOXdCeWd1QjtFQUFxQixrQkFBQTtBQWt4QjlodUI7O0FBbHhCZ2p1QjtFQUEwQix1QkFBQTtBQXN4QjFrdUI7O0FBdHhCaW11QjtFQUF3QixxQkFBQTtBQTB4QnpudUI7O0FBMXhCOG91QjtFQUEyQix3QkFBQTtBQTh4QnpxdUI7O0FBOXhCaXN1QjtFQUEwQix1QkFBQTtBQWt5QjN0dUI7O0FBbHlCa3Z1QjtFQUEyQix3QkFBQTtBQXN5Qjd3dUI7O0FBdHlCcXl1QjtFQUFpRCxnQkFBQTtBQTB5QnQxdUI7O0FBMXlCczJ1QjtFQUFpQyxXQUFBO0VBQVcsa0JBQUE7RUFBa0IsVUFBQTtFQUFVLCtCQUFBO0VBQStCLHNCQUFBO0VBQXNCLGlCQUFBO0VBQWlCLG9CQUFBO0VBQW9CLHdDQUFBO0VBQXdDLG1EQUFBO0FBc3pCaGp2Qjs7QUF0ekJtbXZCO0VBQXdCLG1GQUFBO0VBQW9GLGtHQUFBO0VBQW1HLDZIQUFBO0FBNHpCbHp2QlwiLFwic291cmNlc0NvbnRlbnRcIjpbXCI6cm9vdHstLWNhbGNpdGUtei1pbmRleC10b29sdGlwOjkwMTstLWNhbGNpdGUtei1pbmRleC1wb3B1cDo5MDA7LS1jYWxjaXRlLXotaW5kZXgtbW9kYWw6ODAwOy0tY2FsY2l0ZS16LWluZGV4LW92ZXJsYXk6NzAwOy0tY2FsY2l0ZS16LWluZGV4LWRyb3Bkb3duOjYwMDstLWNhbGNpdGUtei1pbmRleC10b2FzdDo1MDA7LS1jYWxjaXRlLXotaW5kZXgtaGVhZGVyOjQwMDstLWNhbGNpdGUtei1pbmRleC1zdGlja3k6MzAwOy0tY2FsY2l0ZS16LWluZGV4OjE7LS1jYWxjaXRlLXotaW5kZXgtZGVlcDotOTk5OTk5Oy0tY2FsY2l0ZS1zcGFjaW5nLXh4eGw6MzJweDstLWNhbGNpdGUtc3BhY2luZy14eGw6MjBweDstLWNhbGNpdGUtc3BhY2luZy14bDoxNnB4Oy0tY2FsY2l0ZS1zcGFjaW5nLWxnOjE0cHg7LS1jYWxjaXRlLXNwYWNpbmctbWQ6MTJweDstLWNhbGNpdGUtc3BhY2luZy1zbTo4cHg7LS1jYWxjaXRlLXNwYWNpbmcteHM6NnB4Oy0tY2FsY2l0ZS1zcGFjaW5nLXh4czo0cHg7LS1jYWxjaXRlLXNwYWNpbmctYmFzZToycHg7LS1jYWxjaXRlLXNwYWNpbmctcHg6MXB4Oy0tY2FsY2l0ZS1zaXplLXh4eGw6MzJweDstLWNhbGNpdGUtc2l6ZS14eGw6MjRweDstLWNhbGNpdGUtc2l6ZS14bDoyMHB4Oy0tY2FsY2l0ZS1zaXplLWxnOjE2cHg7LS1jYWxjaXRlLXNpemUtbWQtcGx1czoxNHB4Oy0tY2FsY2l0ZS1zaXplLW1kOjEycHg7LS1jYWxjaXRlLXNpemUtc20tcGx1czoxMHB4Oy0tY2FsY2l0ZS1zaXplLXNtOjhweDstLWNhbGNpdGUtc2l6ZS14czo2cHg7LS1jYWxjaXRlLXNpemUteHhzOjRweDstLWNhbGNpdGUtc2l6ZS14eHhzOjJweDstLWNhbGNpdGUtc2l6ZS1weDoxcHg7LS1jYWxjaXRlLW9wYWNpdHktZGlzYWJsZWQ6MC41Oy0tY2FsY2l0ZS1vcGFjaXR5LWZ1bGw6MTstLWNhbGNpdGUtb3BhY2l0eS1kYXJrOjAuODU7LS1jYWxjaXRlLW9wYWNpdHktaGFsZjowLjU7LS1jYWxjaXRlLW9wYWNpdHktbGlnaHQ6MC40Oy0tY2FsY2l0ZS1mb250LXRleHQtY2FzZS1jYXBpdGFsaXplOmNhcGl0YWxpemU7LS1jYWxjaXRlLWZvbnQtdGV4dC1jYXNlLWxvd2VyY2FzZTpsb3dlcmNhc2U7LS1jYWxjaXRlLWZvbnQtdGV4dC1jYXNlLXVwcGVyY2FzZTp1cHBlcmNhc2U7LS1jYWxjaXRlLWZvbnQtdGV4dC1jYXNlLW5vbmU6bm9uZTstLWNhbGNpdGUtZm9udC10ZXh0LWRlY29yYXRpb24tdW5kZXJsaW5lOnVuZGVybGluZTstLWNhbGNpdGUtZm9udC10ZXh0LWRlY29yYXRpb24tbm9uZTpub25lOy0tY2FsY2l0ZS1mb250LXBhcmFncmFwaC1zcGFjaW5nLW5vcm1hbDo0cHg7LS1jYWxjaXRlLWZvbnQtbGV0dGVyLXNwYWNpbmctd2lkZTowLjQ7LS1jYWxjaXRlLWZvbnQtbGV0dGVyLXNwYWNpbmctbm9ybWFsOjA7LS1jYWxjaXRlLWZvbnQtbGV0dGVyLXNwYWNpbmctdGlnaHQ6LTAuNDstLWNhbGNpdGUtZm9udC1saW5lLWhlaWdodC1yZWxhdGl2ZS1sb29zZToyOy0tY2FsY2l0ZS1mb250LWxpbmUtaGVpZ2h0LXJlbGF0aXZlLXJlbGF4ZWQ6MS42MjU7LS1jYWxjaXRlLWZvbnQtbGluZS1oZWlnaHQtcmVsYXRpdmUtbm9ybWFsOjEuNTstLWNhbGNpdGUtZm9udC1saW5lLWhlaWdodC1yZWxhdGl2ZS1zbnVnOjEuMzc1Oy0tY2FsY2l0ZS1mb250LWxpbmUtaGVpZ2h0LXJlbGF0aXZlLXRpZ2h0OjEuMjU7LS1jYWxjaXRlLWZvbnQtbGluZS1oZWlnaHQtcmVsYXRpdmU6YXV0bzstLWNhbGNpdGUtZm9udC1saW5lLWhlaWdodC1maXhlZC14bDoyNHB4Oy0tY2FsY2l0ZS1mb250LWxpbmUtaGVpZ2h0LWZpeGVkLWxnOjIwcHg7LS1jYWxjaXRlLWZvbnQtbGluZS1oZWlnaHQtZml4ZWQtYmFzZToxNnB4Oy0tY2FsY2l0ZS1mb250LWxpbmUtaGVpZ2h0LWZpeGVkLXNtOjEycHg7LS1jYWxjaXRlLWZvbnQtc3R5bGUtZW1waGFzaXM6aXRhbGljOy0tY2FsY2l0ZS1mb250LXNpemUteHhsOjI0cHg7LS1jYWxjaXRlLWZvbnQtc2l6ZS14bDoyMHB4Oy0tY2FsY2l0ZS1mb250LXNpemUtbGc6MThweDstLWNhbGNpdGUtZm9udC1zaXplLW1kOjE2cHg7LS1jYWxjaXRlLWZvbnQtc2l6ZToxNHB4Oy0tY2FsY2l0ZS1mb250LXNpemUtc206MTJweDstLWNhbGNpdGUtZm9udC1zaXplLXhzOjEwcHg7LS1jYWxjaXRlLWZvbnQtd2VpZ2h0LWJvbGQ6NzAwOy0tY2FsY2l0ZS1mb250LXdlaWdodC1zZW1pYm9sZDo2MDA7LS1jYWxjaXRlLWZvbnQtd2VpZ2h0LW1lZGl1bTo1MDA7LS1jYWxjaXRlLWZvbnQtd2VpZ2h0LXJlZ3VsYXI6NDAwOy0tY2FsY2l0ZS1mb250LXdlaWdodC1ub3JtYWw6NDAwOy0tY2FsY2l0ZS1mb250LXdlaWdodC1saWdodDozMDA7LS1jYWxjaXRlLWZvbnQtZmFtaWx5LWNvZGU6TW9uYWNvOy0tY2FsY2l0ZS1mb250LWZhbWlseTpcXFwiQXZlbmlyIE5leHQgTFQgUHJvXFxcIjstLWNhbGNpdGUtY29udGFpbmVyLXNpemUtY29udGVudC1maXhlZDoxNDQwcHg7LS1jYWxjaXRlLWNvbnRhaW5lci1zaXplLWNvbnRlbnQtZmx1aWQ6MTAwJTstLWNhbGNpdGUtY29udGFpbmVyLXNpemUtZ3V0dGVyOjE2cHg7LS1jYWxjaXRlLWNvbnRhaW5lci1zaXplLW1hcmdpbjoyNHB4Oy0tY2FsY2l0ZS1jb2xvci1iYWNrZ3JvdW5kLW5vbmU6cmdiYSgjZmZmZmZmLCAwKTstLWNhbGNpdGUtY29ybmVyLXJhZGl1cy1waWxsOjEwMCU7LS1jYWxjaXRlLWNvcm5lci1yYWRpdXMtcm91bmQ6NHB4Oy0tY2FsY2l0ZS1jb3JuZXItcmFkaXVzLXNoYXJwOjA7LS1jYWxjaXRlLWJvcmRlci13aWR0aC1sZzo0cHg7LS1jYWxjaXRlLWJvcmRlci13aWR0aC1tZDoycHg7LS1jYWxjaXRlLWJvcmRlci13aWR0aC1zbToxcHg7LS1jYWxjaXRlLWJvcmRlci13aWR0aC1ub25lOjA7LS1jYWxjaXRlLXNoYWRvdy1tZDowIDRweCAyMHB4IDAgcmdiYSgwLCAwLCAwLCAwLjA4KSwgMCAxMnB4IDMwcHggcmdiYSgwLCAwLCAwLCAwLjEpOy0tY2FsY2l0ZS1zaGFkb3ctc206MCAycHggOHB4IDAgcmdiYSgwLCAwLCAwLCAwLjA0KSwgMCA0cHggMTZweCAwIHJnYmEoMCwgMCwgMCwgMC4wOCk7LS1jYWxjaXRlLXNoYWRvdy1ub25lOjAgMCAwIDAgcmdiYSgwLCAwLCAwLCAwKTstLWNhbGNpdGUtY29ybmVyLXJhZGl1czp2YXIoLS1jYWxjaXRlLWNvcm5lci1yYWRpdXMtc2hhcnApfS5jYWxjaXRlLXR5cG9ncmFwaHktaGllcmFyY2h5LW92ZXJsaW5le2xpbmUtaGVpZ2h0OnZhcigtLWNhbGNpdGUtZm9udC1saW5lLWhlaWdodC1maXhlZC1zbSk7dGV4dC1jYXNlOnZhcigtLWNhbGNpdGUtZm9udC10ZXh0LWNhc2UtdXBwZXJjYXNlKTtmb250LXdlaWdodDp2YXIoLS1jYWxjaXRlLWZvbnQtd2VpZ2h0LWJvbGQpfS5jYWxjaXRlLXR5cG9ncmFwaHktd3JhcC1ib2xkLW1pbnVzLTF7Zm9udC13ZWlnaHQ6dmFyKC0tY2FsY2l0ZS1mb250LXdlaWdodC1zZW1pYm9sZCk7bGluZS1oZWlnaHQ6dmFyKC0tY2FsY2l0ZS1mb250LWxpbmUtaGVpZ2h0LXJlbGF0aXZlLXNudWcpfS5jYWxjaXRlLXR5cG9ncmFwaHktd3JhcC1ib2xkLW1pbnVzLTJ7Zm9udC13ZWlnaHQ6dmFyKC0tY2FsY2l0ZS1mb250LXdlaWdodC1zZW1pYm9sZCk7bGluZS1oZWlnaHQ6dmFyKC0tY2FsY2l0ZS1mb250LWxpbmUtaGVpZ2h0LXJlbGF0aXZlLXNudWcpO2ZvbnQtc2l6ZTp2YXIoLS1jYWxjaXRlLWZvbnQtc2l6ZS1zbSl9LmNhbGNpdGUtdHlwb2dyYXBoeS13cmFwLWJvbGQtM3tmb250LXdlaWdodDp2YXIoLS1jYWxjaXRlLWZvbnQtd2VpZ2h0LXNlbWlib2xkKTtsaW5lLWhlaWdodDp2YXIoLS1jYWxjaXRlLWZvbnQtbGluZS1oZWlnaHQtcmVsYXRpdmUtc251Zyk7Zm9udC1zaXplOnZhcigtLWNhbGNpdGUtZm9udC1zaXplLXh4bCl9LmNhbGNpdGUtdHlwb2dyYXBoeS13cmFwLWJvbGQtMntmb250LXdlaWdodDp2YXIoLS1jYWxjaXRlLWZvbnQtd2VpZ2h0LXNlbWlib2xkKTtsaW5lLWhlaWdodDp2YXIoLS1jYWxjaXRlLWZvbnQtbGluZS1oZWlnaHQtcmVsYXRpdmUtc251Zyk7Zm9udC1zaXplOnZhcigtLWNhbGNpdGUtZm9udC1zaXplLXhsKX0uY2FsY2l0ZS10eXBvZ3JhcGh5LXdyYXAtYm9sZC0xe2ZvbnQtd2VpZ2h0OnZhcigtLWNhbGNpdGUtZm9udC13ZWlnaHQtc2VtaWJvbGQpO2xpbmUtaGVpZ2h0OnZhcigtLWNhbGNpdGUtZm9udC1saW5lLWhlaWdodC1yZWxhdGl2ZS1zbnVnKTtmb250LXNpemU6dmFyKC0tY2FsY2l0ZS1mb250LXNpemUtbGcpfS5jYWxjaXRlLXR5cG9ncmFwaHktd3JhcC1ib2xkLTB7Zm9udC13ZWlnaHQ6dmFyKC0tY2FsY2l0ZS1mb250LXdlaWdodC1zZW1pYm9sZCk7bGluZS1oZWlnaHQ6dmFyKC0tY2FsY2l0ZS1mb250LWxpbmUtaGVpZ2h0LXJlbGF0aXZlLXNudWcpO2ZvbnQtc2l6ZTp2YXIoLS1jYWxjaXRlLWZvbnQtc2l6ZS1tZCl9LmNhbGNpdGUtdHlwb2dyYXBoeS13cmFwLW1lZGl1bS1taW51cy0xe2ZvbnQtd2VpZ2h0OnZhcigtLWNhbGNpdGUtZm9udC13ZWlnaHQtbWVkaXVtKTtsaW5lLWhlaWdodDp2YXIoLS1jYWxjaXRlLWZvbnQtbGluZS1oZWlnaHQtcmVsYXRpdmUtc251Zyl9LmNhbGNpdGUtdHlwb2dyYXBoeS13cmFwLW1lZGl1bS1taW51cy0ye2ZvbnQtd2VpZ2h0OnZhcigtLWNhbGNpdGUtZm9udC13ZWlnaHQtbWVkaXVtKTtsaW5lLWhlaWdodDp2YXIoLS1jYWxjaXRlLWZvbnQtbGluZS1oZWlnaHQtcmVsYXRpdmUtc251Zyk7Zm9udC1zaXplOnZhcigtLWNhbGNpdGUtZm9udC1zaXplLXNtKX0uY2FsY2l0ZS10eXBvZ3JhcGh5LXdyYXAtbWVkaXVtLTN7Zm9udC13ZWlnaHQ6dmFyKC0tY2FsY2l0ZS1mb250LXdlaWdodC1tZWRpdW0pO2xpbmUtaGVpZ2h0OnZhcigtLWNhbGNpdGUtZm9udC1saW5lLWhlaWdodC1yZWxhdGl2ZS1zbnVnKTtmb250LXNpemU6dmFyKC0tY2FsY2l0ZS1mb250LXNpemUteHhsKX0uY2FsY2l0ZS10eXBvZ3JhcGh5LXdyYXAtbWVkaXVtLTJ7Zm9udC13ZWlnaHQ6dmFyKC0tY2FsY2l0ZS1mb250LXdlaWdodC1tZWRpdW0pO2xpbmUtaGVpZ2h0OnZhcigtLWNhbGNpdGUtZm9udC1saW5lLWhlaWdodC1yZWxhdGl2ZS1zbnVnKTtmb250LXNpemU6dmFyKC0tY2FsY2l0ZS1mb250LXNpemUteGwpfS5jYWxjaXRlLXR5cG9ncmFwaHktd3JhcC1tZWRpdW0tMXtmb250LXdlaWdodDp2YXIoLS1jYWxjaXRlLWZvbnQtd2VpZ2h0LW1lZGl1bSk7bGluZS1oZWlnaHQ6dmFyKC0tY2FsY2l0ZS1mb250LWxpbmUtaGVpZ2h0LXJlbGF0aXZlLXNudWcpO2ZvbnQtc2l6ZTp2YXIoLS1jYWxjaXRlLWZvbnQtc2l6ZS1sZyl9LmNhbGNpdGUtdHlwb2dyYXBoeS13cmFwLW1lZGl1bS0we2ZvbnQtd2VpZ2h0OnZhcigtLWNhbGNpdGUtZm9udC13ZWlnaHQtbWVkaXVtKTtsaW5lLWhlaWdodDp2YXIoLS1jYWxjaXRlLWZvbnQtbGluZS1oZWlnaHQtcmVsYXRpdmUtc251Zyk7Zm9udC1zaXplOnZhcigtLWNhbGNpdGUtZm9udC1zaXplLW1kKX0uY2FsY2l0ZS10eXBvZ3JhcGh5LXdyYXAtcmVndWxhci1taW51cy0xe2xpbmUtaGVpZ2h0OnZhcigtLWNhbGNpdGUtZm9udC1saW5lLWhlaWdodC1yZWxhdGl2ZS1zbnVnKX0uY2FsY2l0ZS10eXBvZ3JhcGh5LXdyYXAtcmVndWxhci1taW51cy0ye2xpbmUtaGVpZ2h0OnZhcigtLWNhbGNpdGUtZm9udC1saW5lLWhlaWdodC1yZWxhdGl2ZS1zbnVnKTtmb250LXNpemU6dmFyKC0tY2FsY2l0ZS1mb250LXNpemUtc20pfS5jYWxjaXRlLXR5cG9ncmFwaHktd3JhcC1yZWd1bGFyLTN7bGluZS1oZWlnaHQ6dmFyKC0tY2FsY2l0ZS1mb250LWxpbmUtaGVpZ2h0LXJlbGF0aXZlLXNudWcpO2ZvbnQtc2l6ZTp2YXIoLS1jYWxjaXRlLWZvbnQtc2l6ZS14eGwpfS5jYWxjaXRlLXR5cG9ncmFwaHktd3JhcC1yZWd1bGFyLTJ7bGluZS1oZWlnaHQ6dmFyKC0tY2FsY2l0ZS1mb250LWxpbmUtaGVpZ2h0LXJlbGF0aXZlLXNudWcpO2ZvbnQtc2l6ZTp2YXIoLS1jYWxjaXRlLWZvbnQtc2l6ZS14bCl9LmNhbGNpdGUtdHlwb2dyYXBoeS13cmFwLXJlZ3VsYXItMXtsaW5lLWhlaWdodDp2YXIoLS1jYWxjaXRlLWZvbnQtbGluZS1oZWlnaHQtcmVsYXRpdmUtc251Zyk7Zm9udC1zaXplOnZhcigtLWNhbGNpdGUtZm9udC1zaXplLWxnKX0uY2FsY2l0ZS10eXBvZ3JhcGh5LXdyYXAtcmVndWxhci0we2xpbmUtaGVpZ2h0OnZhcigtLWNhbGNpdGUtZm9udC1saW5lLWhlaWdodC1yZWxhdGl2ZS1zbnVnKTtmb250LXNpemU6dmFyKC0tY2FsY2l0ZS1mb250LXNpemUtbWQpfS5jYWxjaXRlLXR5cG9ncmFwaHktd3JhcC1saWdodC1taW51cy0xe2ZvbnQtd2VpZ2h0OnZhcigtLWNhbGNpdGUtZm9udC13ZWlnaHQtbGlnaHQpO2xpbmUtaGVpZ2h0OnZhcigtLWNhbGNpdGUtZm9udC1saW5lLWhlaWdodC1yZWxhdGl2ZS1zbnVnKX0uY2FsY2l0ZS10eXBvZ3JhcGh5LXdyYXAtbGlnaHQtbWludXMtMntmb250LXdlaWdodDp2YXIoLS1jYWxjaXRlLWZvbnQtd2VpZ2h0LWxpZ2h0KTtsaW5lLWhlaWdodDp2YXIoLS1jYWxjaXRlLWZvbnQtbGluZS1oZWlnaHQtcmVsYXRpdmUtc251Zyk7Zm9udC1zaXplOnZhcigtLWNhbGNpdGUtZm9udC1zaXplLXNtKX0uY2FsY2l0ZS10eXBvZ3JhcGh5LXdyYXAtbGlnaHQtM3tmb250LXdlaWdodDp2YXIoLS1jYWxjaXRlLWZvbnQtd2VpZ2h0LWxpZ2h0KTtsaW5lLWhlaWdodDp2YXIoLS1jYWxjaXRlLWZvbnQtbGluZS1oZWlnaHQtcmVsYXRpdmUtdGlnaHQpO2ZvbnQtc2l6ZTp2YXIoLS1jYWxjaXRlLWZvbnQtc2l6ZS14eGwpfS5jYWxjaXRlLXR5cG9ncmFwaHktd3JhcC1saWdodC0ye2ZvbnQtd2VpZ2h0OnZhcigtLWNhbGNpdGUtZm9udC13ZWlnaHQtbGlnaHQpO2xpbmUtaGVpZ2h0OnZhcigtLWNhbGNpdGUtZm9udC1saW5lLWhlaWdodC1yZWxhdGl2ZS1zbnVnKTtmb250LXNpemU6dmFyKC0tY2FsY2l0ZS1mb250LXNpemUteGwpfS5jYWxjaXRlLXR5cG9ncmFwaHktd3JhcC1saWdodC0xe2ZvbnQtd2VpZ2h0OnZhcigtLWNhbGNpdGUtZm9udC13ZWlnaHQtbGlnaHQpO2xpbmUtaGVpZ2h0OnZhcigtLWNhbGNpdGUtZm9udC1saW5lLWhlaWdodC1yZWxhdGl2ZS1zbnVnKTtmb250LXNpemU6dmFyKC0tY2FsY2l0ZS1mb250LXNpemUtbGcpfS5jYWxjaXRlLXR5cG9ncmFwaHktd3JhcC1saWdodC0we2ZvbnQtd2VpZ2h0OnZhcigtLWNhbGNpdGUtZm9udC13ZWlnaHQtbGlnaHQpO2xpbmUtaGVpZ2h0OnZhcigtLWNhbGNpdGUtZm9udC1saW5lLWhlaWdodC1yZWxhdGl2ZS1zbnVnKTtmb250LXNpemU6dmFyKC0tY2FsY2l0ZS1mb250LXNpemUtbWQpfS5jYWxjaXRlLXR5cG9ncmFwaHktYm9sZC0xaHtmb250LXdlaWdodDp2YXIoLS1jYWxjaXRlLWZvbnQtd2VpZ2h0LXNlbWlib2xkKTtsaW5lLWhlaWdodDp2YXIoLS1jYWxjaXRlLWZvbnQtbGluZS1oZWlnaHQtZml4ZWQteGwpO2ZvbnQtc2l6ZTp2YXIoLS1jYWxjaXRlLWZvbnQtc2l6ZS1sZyl9LmNhbGNpdGUtdHlwb2dyYXBoeS1ib2xkLTBoe2ZvbnQtd2VpZ2h0OnZhcigtLWNhbGNpdGUtZm9udC13ZWlnaHQtc2VtaWJvbGQpO2xpbmUtaGVpZ2h0OnZhcigtLWNhbGNpdGUtZm9udC1saW5lLWhlaWdodC1maXhlZC1sZyk7Zm9udC1zaXplOnZhcigtLWNhbGNpdGUtZm9udC1zaXplLW1kKX0uY2FsY2l0ZS10eXBvZ3JhcGh5LWJvbGQtbWludXMtMWh7Zm9udC13ZWlnaHQ6dmFyKC0tY2FsY2l0ZS1mb250LXdlaWdodC1zZW1pYm9sZCl9LmNhbGNpdGUtdHlwb2dyYXBoeS1ib2xkLW1pbnVzLTJoe2ZvbnQtd2VpZ2h0OnZhcigtLWNhbGNpdGUtZm9udC13ZWlnaHQtc2VtaWJvbGQpO2ZvbnQtc2l6ZTp2YXIoLS1jYWxjaXRlLWZvbnQtc2l6ZS1zbSl9LmNhbGNpdGUtdHlwb2dyYXBoeS1ib2xkLW1pbnVzLTNoe2ZvbnQtd2VpZ2h0OnZhcigtLWNhbGNpdGUtZm9udC13ZWlnaHQtc2VtaWJvbGQpO2xpbmUtaGVpZ2h0OnZhcigtLWNhbGNpdGUtZm9udC1saW5lLWhlaWdodC1maXhlZC1zbSk7Zm9udC1zaXplOnZhcigtLWNhbGNpdGUtZm9udC1zaXplLXhzKX0uY2FsY2l0ZS10eXBvZ3JhcGh5LW1lZGl1bS0xaHtmb250LXdlaWdodDp2YXIoLS1jYWxjaXRlLWZvbnQtd2VpZ2h0LW1lZGl1bSk7bGluZS1oZWlnaHQ6dmFyKC0tY2FsY2l0ZS1mb250LWxpbmUtaGVpZ2h0LWZpeGVkLXhsKTtmb250LXNpemU6dmFyKC0tY2FsY2l0ZS1mb250LXNpemUtbGcpfS5jYWxjaXRlLXR5cG9ncmFwaHktbWVkaXVtLTBoe2ZvbnQtd2VpZ2h0OnZhcigtLWNhbGNpdGUtZm9udC13ZWlnaHQtbWVkaXVtKTtsaW5lLWhlaWdodDp2YXIoLS1jYWxjaXRlLWZvbnQtbGluZS1oZWlnaHQtZml4ZWQtbGcpO2ZvbnQtc2l6ZTp2YXIoLS1jYWxjaXRlLWZvbnQtc2l6ZS1tZCl9LmNhbGNpdGUtdHlwb2dyYXBoeS1tZWRpdW0tbWludXMtMWh7Zm9udC13ZWlnaHQ6dmFyKC0tY2FsY2l0ZS1mb250LXdlaWdodC1tZWRpdW0pfS5jYWxjaXRlLXR5cG9ncmFwaHktbWVkaXVtLW1pbnVzLTJoe2ZvbnQtd2VpZ2h0OnZhcigtLWNhbGNpdGUtZm9udC13ZWlnaHQtbWVkaXVtKTtmb250LXNpemU6dmFyKC0tY2FsY2l0ZS1mb250LXNpemUtc20pfS5jYWxjaXRlLXR5cG9ncmFwaHktbWVkaXVtLW1pbnVzLTNoe2ZvbnQtd2VpZ2h0OnZhcigtLWNhbGNpdGUtZm9udC13ZWlnaHQtbWVkaXVtKTtsaW5lLWhlaWdodDp2YXIoLS1jYWxjaXRlLWZvbnQtbGluZS1oZWlnaHQtZml4ZWQtc20pO2ZvbnQtc2l6ZTp2YXIoLS1jYWxjaXRlLWZvbnQtc2l6ZS14cyl9LmNhbGNpdGUtdHlwb2dyYXBoeS1yZWd1bGFyLTFoe2xpbmUtaGVpZ2h0OnZhcigtLWNhbGNpdGUtZm9udC1saW5lLWhlaWdodC1maXhlZC14bCk7Zm9udC1zaXplOnZhcigtLWNhbGNpdGUtZm9udC1zaXplLWxnKX0uY2FsY2l0ZS10eXBvZ3JhcGh5LXJlZ3VsYXItMGh7bGluZS1oZWlnaHQ6dmFyKC0tY2FsY2l0ZS1mb250LWxpbmUtaGVpZ2h0LWZpeGVkLWxnKTtmb250LXNpemU6dmFyKC0tY2FsY2l0ZS1mb250LXNpemUtbWQpfS5jYWxjaXRlLXR5cG9ncmFwaHktcmVndWxhci1taW51cy0yaHtmb250LXNpemU6dmFyKC0tY2FsY2l0ZS1mb250LXNpemUtc20pfS5jYWxjaXRlLXR5cG9ncmFwaHktcmVndWxhci1taW51cy0zaHtsaW5lLWhlaWdodDp2YXIoLS1jYWxjaXRlLWZvbnQtbGluZS1oZWlnaHQtZml4ZWQtc20pO2ZvbnQtc2l6ZTp2YXIoLS1jYWxjaXRlLWZvbnQtc2l6ZS14cyl9LmNhbGNpdGUtdHlwb2dyYXBoeS1saWdodC0xaHtmb250LXNpemU6dmFyKC0tY2FsY2l0ZS1mb250LXNpemUtbGcpO2ZvbnQtd2VpZ2h0OnZhcigtLWNhbGNpdGUtZm9udC13ZWlnaHQtbGlnaHQpO2xpbmUtaGVpZ2h0OnZhcigtLWNhbGNpdGUtZm9udC1saW5lLWhlaWdodC1maXhlZC14bCl9LmNhbGNpdGUtdHlwb2dyYXBoeS1saWdodC0waHtmb250LXNpemU6dmFyKC0tY2FsY2l0ZS1mb250LXNpemUtbWQpO2ZvbnQtd2VpZ2h0OnZhcigtLWNhbGNpdGUtZm9udC13ZWlnaHQtbGlnaHQpO2xpbmUtaGVpZ2h0OnZhcigtLWNhbGNpdGUtZm9udC1saW5lLWhlaWdodC1maXhlZC1sZyl9LmNhbGNpdGUtdHlwb2dyYXBoeS1saWdodC1taW51cy0xaHtmb250LXdlaWdodDp2YXIoLS1jYWxjaXRlLWZvbnQtd2VpZ2h0LWxpZ2h0KX0uY2FsY2l0ZS10eXBvZ3JhcGh5LWxpZ2h0LW1pbnVzLTJoe2ZvbnQtc2l6ZTp2YXIoLS1jYWxjaXRlLWZvbnQtc2l6ZS1zbSk7Zm9udC13ZWlnaHQ6dmFyKC0tY2FsY2l0ZS1mb250LXdlaWdodC1saWdodCl9LmNhbGNpdGUtdHlwb2dyYXBoeS1saWdodC1taW51cy0zaHtmb250LXNpemU6dmFyKC0tY2FsY2l0ZS1mb250LXNpemUteHMpO2ZvbnQtd2VpZ2h0OnZhcigtLWNhbGNpdGUtZm9udC13ZWlnaHQtbGlnaHQpO2xpbmUtaGVpZ2h0OnZhcigtLWNhbGNpdGUtZm9udC1saW5lLWhlaWdodC1maXhlZC1zbSl9LmNhbGNpdGUtdHlwb2dyYXBoeXtmb250LWZhbWlseTp2YXIoLS1jYWxjaXRlLWZvbnQtZmFtaWx5KTtmb250LXNpemU6dmFyKC0tY2FsY2l0ZS1mb250LXNpemUpO2ZvbnQtd2VpZ2h0OnZhcigtLWNhbGNpdGUtZm9udC13ZWlnaHQtcmVndWxhcik7bGV0dGVyLXNwYWNpbmc6dmFyKC0tY2FsY2l0ZS1mb250LWxldHRlci1zcGFjaW5nLW5vcm1hbCk7bGluZS1oZWlnaHQ6dmFyKC0tY2FsY2l0ZS1mb250LWxpbmUtaGVpZ2h0LWZpeGVkLWJhc2UpO3BhcmFncmFwaC1zcGFjaW5nOnZhcigtLWNhbGNpdGUtZm9udC1wYXJhZ3JhcGgtc3BhY2luZy1ub3JtYWwpO3RleHQtY2FzZTp2YXIoLS1jYWxjaXRlLWZvbnQtdGV4dC1jYXNlLW5vbmUpO3RleHQtZGVjb3JhdGlvbjp2YXIoLS1jYWxjaXRlLWZvbnQtdGV4dC1kZWNvcmF0aW9uLW5vbmUpfS5jYWxjaXRlLXR5cG9ncmFwaHktaGllcmFyY2h5LWNhcHRpb257bGluZS1oZWlnaHQ6MS4zNzU7Zm9udC1zaXplOjEycHh9LmNhbGNpdGUtdHlwb2dyYXBoeS1oaWVyYXJjaHktYm9keXtmb250LWZhbWlseTpcXFwiQXZlbmlyIE5leHQgTFQgUHJvXFxcIjtmb250LXNpemU6MTRweDtmb250LXdlaWdodDo0MDA7bGV0dGVyLXNwYWNpbmc6MDtsaW5lLWhlaWdodDoxNnB4O3BhcmFncmFwaC1zcGFjaW5nOjRweDt0ZXh0LWNhc2U6bm9uZTt0ZXh0LWRlY29yYXRpb246bm9uZX0uY2FsY2l0ZS10eXBvZ3JhcGh5LWhpZXJhcmNoeS1ib2R5LXNudWd7bGluZS1oZWlnaHQ6MS4zNzV9LmNhbGNpdGUtdHlwb2dyYXBoeS1oaWVyYXJjaHktaGVhZGluZy01e2ZvbnQtd2VpZ2h0OjUwMDtsaW5lLWhlaWdodDoxLjM3NX0uY2FsY2l0ZS10eXBvZ3JhcGh5LWhpZXJhcmNoeS1oZWFkaW5nLTR7Zm9udC13ZWlnaHQ6NTAwO2xpbmUtaGVpZ2h0OjEuMzc1O2ZvbnQtc2l6ZToxNnB4fS5jYWxjaXRlLXR5cG9ncmFwaHktaGllcmFyY2h5LWhlYWRpbmctM3tmb250LXdlaWdodDo1MDA7bGluZS1oZWlnaHQ6MS4zNzU7Zm9udC1zaXplOjE4cHh9LmNhbGNpdGUtdHlwb2dyYXBoeS1oaWVyYXJjaHktaGVhZGluZy0ye2ZvbnQtd2VpZ2h0OjUwMDtsaW5lLWhlaWdodDoxLjM3NTtmb250LXNpemU6MjBweH0uY2FsY2l0ZS10eXBvZ3JhcGh5LWhpZXJhcmNoeS1oZWFkaW5nLTF7Zm9udC13ZWlnaHQ6NTAwO2xpbmUtaGVpZ2h0OjEuMzc1O2ZvbnQtc2l6ZToyNHB4fS5jYWxjaXRlLXR5cG9ncmFwaHktaGllcmFyY2h5LWRpc3BsYXktMntmb250LXdlaWdodDo2MDA7bGluZS1oZWlnaHQ6MS4zNzU7Zm9udC1zaXplOjIwcHh9LmNhbGNpdGUtdHlwb2dyYXBoeS1oaWVyYXJjaHktZGlzcGxheS0xe2ZvbnQtd2VpZ2h0OjYwMDtsaW5lLWhlaWdodDoxLjM3NTtmb250LXNpemU6MjRweH0uY2FsY2l0ZS10eXBvZ3JhcGh5LXJlZ3VsYXItbWludXMtMWh7Zm9udC1mYW1pbHk6XFxcIkF2ZW5pciBOZXh0IExUIFByb1xcXCI7Zm9udC1zaXplOjE0cHg7Zm9udC13ZWlnaHQ6NDAwO2xldHRlci1zcGFjaW5nOjA7bGluZS1oZWlnaHQ6MTZweDtwYXJhZ3JhcGgtc3BhY2luZzo0cHg7dGV4dC1jYXNlOm5vbmU7dGV4dC1kZWNvcmF0aW9uOm5vbmV9QG1lZGlhIChwcmVmZXJzLWNvbG9yLXNjaGVtZTogbGlnaHQpezpyb290ey0tY2FsY2l0ZS1jb2xvci1ib3JkZXItd2hpdGU6I2ZmZmZmZjstLWNhbGNpdGUtY29sb3ItYm9yZGVyLWdob3N0OnJnYmEoMCwgMCwgMCwgMC4zKTstLWNhbGNpdGUtY29sb3ItYm9yZGVyLWlucHV0OiM5NDk0OTQ7LS1jYWxjaXRlLWNvbG9yLWJvcmRlci0zOiNkZmRmZGY7LS1jYWxjaXRlLWNvbG9yLWJvcmRlci0yOiNkNGQ0ZDQ7LS1jYWxjaXRlLWNvbG9yLWJvcmRlci0xOiNjYWNhY2E7LS1jYWxjaXRlLWNvbG9yLXRleHQtbGluazojMDA2MTliOy0tY2FsY2l0ZS1jb2xvci10ZXh0LWludmVyc2U6I2ZmZmZmZjstLWNhbGNpdGUtY29sb3ItdGV4dC0zOiM2YTZhNmE7LS1jYWxjaXRlLWNvbG9yLXRleHQtMjojNGE0YTRhOy0tY2FsY2l0ZS1jb2xvci10ZXh0LTE6IzE1MTUxNTstLWNhbGNpdGUtY29sb3ItaW52ZXJzZS1wcmVzczojMjAyMDIwOy0tY2FsY2l0ZS1jb2xvci1pbnZlcnNlLWhvdmVyOiMyYjJiMmI7LS1jYWxjaXRlLWNvbG9yLWludmVyc2U6IzM1MzUzNTstLWNhbGNpdGUtY29sb3Itc3RhdHVzLWRhbmdlci1wcmVzczojN2MxZDEzOy0tY2FsY2l0ZS1jb2xvci1zdGF0dXMtZGFuZ2VyLWhvdmVyOiNhODJiMWU7LS1jYWxjaXRlLWNvbG9yLXN0YXR1cy1kYW5nZXI6I2Q4MzAyMDstLWNhbGNpdGUtY29sb3Itc3RhdHVzLXdhcm5pbmctcHJlc3M6I2JmYTIwMDstLWNhbGNpdGUtY29sb3Itc3RhdHVzLXdhcm5pbmctaG92ZXI6I2Q5YmMwMDstLWNhbGNpdGUtY29sb3Itc3RhdHVzLXdhcm5pbmc6I2VkZDMxNzstLWNhbGNpdGUtY29sb3Itc3RhdHVzLXN1Y2Nlc3MtcHJlc3M6IzFhNjMyNDstLWNhbGNpdGUtY29sb3Itc3RhdHVzLXN1Y2Nlc3MtaG92ZXI6IzI4ODgzNTstLWNhbGNpdGUtY29sb3Itc3RhdHVzLXN1Y2Nlc3M6IzM1YWM0NjstLWNhbGNpdGUtY29sb3Itc3RhdHVzLWluZm8tcHJlc3M6IzAwMzA0ZDstLWNhbGNpdGUtY29sb3Itc3RhdHVzLWluZm8taG92ZXI6IzAwNDg3NDstLWNhbGNpdGUtY29sb3Itc3RhdHVzLWluZm86IzAwNjE5YjstLWNhbGNpdGUtY29sb3ItYnJhbmQtdW5kZXJsaW5lOnJnYmEoMCwgOTcsIDE1NSwgMC40KTstLWNhbGNpdGUtY29sb3ItYnJhbmQtcHJlc3M6IzAwNDg3NDstLWNhbGNpdGUtY29sb3ItYnJhbmQtaG92ZXI6IzAwNjE5YjstLWNhbGNpdGUtY29sb3ItYnJhbmQ6IzAwN2FjMjstLWNhbGNpdGUtY29sb3ItdHJhbnNwYXJlbnQtdGludDpyZ2JhKDI1NSwgMjU1LCAyNTUsIDAuOCk7LS1jYWxjaXRlLWNvbG9yLXRyYW5zcGFyZW50LXNjcmltOnJnYmEoMjU1LCAyNTUsIDI1NSwgMC44NSk7LS1jYWxjaXRlLWNvbG9yLXRyYW5zcGFyZW50LXByZXNzOnJnYmEoMCwgMCwgMCwgMC4wOCk7LS1jYWxjaXRlLWNvbG9yLXRyYW5zcGFyZW50LWhvdmVyOnJnYmEoMCwgMCwgMCwgMC4wNCk7LS1jYWxjaXRlLWNvbG9yLXRyYW5zcGFyZW50OnJnYmEoMCwgMCwgMCwgMCk7LS1jYWxjaXRlLWNvbG9yLWZvcmVncm91bmQtY3VycmVudDojYzdlYWZmOy0tY2FsY2l0ZS1jb2xvci1mb3JlZ3JvdW5kLTM6I2VhZWFlYTstLWNhbGNpdGUtY29sb3ItZm9yZWdyb3VuZC0yOiNmM2YzZjM7LS1jYWxjaXRlLWNvbG9yLWZvcmVncm91bmQtMTojZmZmZmZmOy0tY2FsY2l0ZS1jb2xvci1iYWNrZ3JvdW5kOiNmOGY4Zjh9fUBtZWRpYSAocHJlZmVycy1jb2xvci1zY2hlbWU6IGRhcmspezpyb290ey0tY2FsY2l0ZS1jb2xvci1ib3JkZXItd2hpdGU6I2Y4ZjhmODstLWNhbGNpdGUtY29sb3ItYm9yZGVyLWdob3N0OnJnYmEoMTE3LCAxMTcsIDExNywgMC4zKTstLWNhbGNpdGUtY29sb3ItYm9yZGVyLWlucHV0OiM3NTc1NzU7LS1jYWxjaXRlLWNvbG9yLWJvcmRlci0zOiM0MDQwNDA7LS1jYWxjaXRlLWNvbG9yLWJvcmRlci0yOiM0YTRhNGE7LS1jYWxjaXRlLWNvbG9yLWJvcmRlci0xOiM1NTU1NTU7LS1jYWxjaXRlLWNvbG9yLXRleHQtbGluazojMDBBMEZGOy0tY2FsY2l0ZS1jb2xvci10ZXh0LWludmVyc2U6IzE1MTUxNTstLWNhbGNpdGUtY29sb3ItdGV4dC0zOiM5ZjlmOWY7LS1jYWxjaXRlLWNvbG9yLXRleHQtMjojYmZiZmJmOy0tY2FsY2l0ZS1jb2xvci10ZXh0LTE6I2ZmZmZmZjstLWNhbGNpdGUtY29sb3ItaW52ZXJzZS1wcmVzczojZjNmM2YzOy0tY2FsY2l0ZS1jb2xvci1pbnZlcnNlLWhvdmVyOiNmZmZmZmY7LS1jYWxjaXRlLWNvbG9yLWludmVyc2U6I2Y4ZjhmODstLWNhbGNpdGUtY29sb3Itc3RhdHVzLWRhbmdlci1wcmVzczojZDkwMDEyOy0tY2FsY2l0ZS1jb2xvci1zdGF0dXMtZGFuZ2VyLWhvdmVyOiNmZjAwMTU7LS1jYWxjaXRlLWNvbG9yLXN0YXR1cy1kYW5nZXI6I0ZFNTgzRTstLWNhbGNpdGUtY29sb3Itc3RhdHVzLXdhcm5pbmctcHJlc3M6I2Y1ZDAwMDstLWNhbGNpdGUtY29sb3Itc3RhdHVzLXdhcm5pbmctaG92ZXI6I2ZmZWUzMzstLWNhbGNpdGUtY29sb3Itc3RhdHVzLXdhcm5pbmc6I0ZGQzkwMDstLWNhbGNpdGUtY29sb3Itc3RhdHVzLXN1Y2Nlc3MtcHJlc3M6IzAwYjgxYjstLWNhbGNpdGUtY29sb3Itc3RhdHVzLXN1Y2Nlc3MtaG92ZXI6IzNiZWQ1MjstLWNhbGNpdGUtY29sb3Itc3RhdHVzLXN1Y2Nlc3M6IzM2REE0MzstLWNhbGNpdGUtY29sb3Itc3RhdHVzLWluZm8tcHJlc3M6IzAwOWFmMjstLWNhbGNpdGUtY29sb3Itc3RhdHVzLWluZm8taG92ZXI6IzNkYjhmZjstLWNhbGNpdGUtY29sb3Itc3RhdHVzLWluZm86IzAwQTBGRjstLWNhbGNpdGUtY29sb3ItYnJhbmQtdW5kZXJsaW5lOnJnYmEoMCwgMTYwLCAyNTUsIDAuNCk7LS1jYWxjaXRlLWNvbG9yLWJyYW5kLXByZXNzOiMwMDYxOWI7LS1jYWxjaXRlLWNvbG9yLWJyYW5kLWhvdmVyOiMwMDdhYzI7LS1jYWxjaXRlLWNvbG9yLWJyYW5kOiMwMDlhZjI7LS1jYWxjaXRlLWNvbG9yLXRyYW5zcGFyZW50LXRpbnQ6cmdiYSg0MywgNDMsIDQzLCAwLjgpOy0tY2FsY2l0ZS1jb2xvci10cmFuc3BhcmVudC1zY3JpbTpyZ2JhKDAsIDAsIDAsIDAuODUpOy0tY2FsY2l0ZS1jb2xvci10cmFuc3BhcmVudC1wcmVzczpyZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMDgpOy0tY2FsY2l0ZS1jb2xvci10cmFuc3BhcmVudC1ob3ZlcjpyZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMDQpOy0tY2FsY2l0ZS1jb2xvci10cmFuc3BhcmVudDpyZ2JhKDI1NSwgMjU1LCAyNTUsIDApOy0tY2FsY2l0ZS1jb2xvci1mb3JlZ3JvdW5kLWN1cnJlbnQ6IzIxNDE1NTstLWNhbGNpdGUtY29sb3ItZm9yZWdyb3VuZC0zOiMxNTE1MTU7LS1jYWxjaXRlLWNvbG9yLWZvcmVncm91bmQtMjojMjAyMDIwOy0tY2FsY2l0ZS1jb2xvci1mb3JlZ3JvdW5kLTE6IzJiMmIyYjstLWNhbGNpdGUtY29sb3ItYmFja2dyb3VuZDojMzUzNTM1fX0uY2FsY2l0ZS1tb2RlLWxpZ2h0ey0tY2FsY2l0ZS1jb2xvci1ib3JkZXItd2hpdGU6I2ZmZmZmZjstLWNhbGNpdGUtY29sb3ItYm9yZGVyLWdob3N0OnJnYmEoMCwgMCwgMCwgMC4zKTstLWNhbGNpdGUtY29sb3ItYm9yZGVyLWlucHV0OiM5NDk0OTQ7LS1jYWxjaXRlLWNvbG9yLWJvcmRlci0zOiNkZmRmZGY7LS1jYWxjaXRlLWNvbG9yLWJvcmRlci0yOiNkNGQ0ZDQ7LS1jYWxjaXRlLWNvbG9yLWJvcmRlci0xOiNjYWNhY2E7LS1jYWxjaXRlLWNvbG9yLXRleHQtbGluazojMDA2MTliOy0tY2FsY2l0ZS1jb2xvci10ZXh0LWludmVyc2U6I2ZmZmZmZjstLWNhbGNpdGUtY29sb3ItdGV4dC0zOiM2YTZhNmE7LS1jYWxjaXRlLWNvbG9yLXRleHQtMjojNGE0YTRhOy0tY2FsY2l0ZS1jb2xvci10ZXh0LTE6IzE1MTUxNTstLWNhbGNpdGUtY29sb3ItaW52ZXJzZS1wcmVzczojMjAyMDIwOy0tY2FsY2l0ZS1jb2xvci1pbnZlcnNlLWhvdmVyOiMyYjJiMmI7LS1jYWxjaXRlLWNvbG9yLWludmVyc2U6IzM1MzUzNTstLWNhbGNpdGUtY29sb3Itc3RhdHVzLWRhbmdlci1wcmVzczojN2MxZDEzOy0tY2FsY2l0ZS1jb2xvci1zdGF0dXMtZGFuZ2VyLWhvdmVyOiNhODJiMWU7LS1jYWxjaXRlLWNvbG9yLXN0YXR1cy1kYW5nZXI6I2Q4MzAyMDstLWNhbGNpdGUtY29sb3Itc3RhdHVzLXdhcm5pbmctcHJlc3M6I2JmYTIwMDstLWNhbGNpdGUtY29sb3Itc3RhdHVzLXdhcm5pbmctaG92ZXI6I2Q5YmMwMDstLWNhbGNpdGUtY29sb3Itc3RhdHVzLXdhcm5pbmc6I2VkZDMxNzstLWNhbGNpdGUtY29sb3Itc3RhdHVzLXN1Y2Nlc3MtcHJlc3M6IzFhNjMyNDstLWNhbGNpdGUtY29sb3Itc3RhdHVzLXN1Y2Nlc3MtaG92ZXI6IzI4ODgzNTstLWNhbGNpdGUtY29sb3Itc3RhdHVzLXN1Y2Nlc3M6IzM1YWM0NjstLWNhbGNpdGUtY29sb3Itc3RhdHVzLWluZm8tcHJlc3M6IzAwMzA0ZDstLWNhbGNpdGUtY29sb3Itc3RhdHVzLWluZm8taG92ZXI6IzAwNDg3NDstLWNhbGNpdGUtY29sb3Itc3RhdHVzLWluZm86IzAwNjE5YjstLWNhbGNpdGUtY29sb3ItYnJhbmQtdW5kZXJsaW5lOnJnYmEoMCwgOTcsIDE1NSwgMC40KTstLWNhbGNpdGUtY29sb3ItYnJhbmQtcHJlc3M6IzAwNDg3NDstLWNhbGNpdGUtY29sb3ItYnJhbmQtaG92ZXI6IzAwNjE5YjstLWNhbGNpdGUtY29sb3ItYnJhbmQ6IzAwN2FjMjstLWNhbGNpdGUtY29sb3ItdHJhbnNwYXJlbnQtdGludDpyZ2JhKDI1NSwgMjU1LCAyNTUsIDAuOCk7LS1jYWxjaXRlLWNvbG9yLXRyYW5zcGFyZW50LXNjcmltOnJnYmEoMjU1LCAyNTUsIDI1NSwgMC44NSk7LS1jYWxjaXRlLWNvbG9yLXRyYW5zcGFyZW50LXByZXNzOnJnYmEoMCwgMCwgMCwgMC4wOCk7LS1jYWxjaXRlLWNvbG9yLXRyYW5zcGFyZW50LWhvdmVyOnJnYmEoMCwgMCwgMCwgMC4wNCk7LS1jYWxjaXRlLWNvbG9yLXRyYW5zcGFyZW50OnJnYmEoMCwgMCwgMCwgMCk7LS1jYWxjaXRlLWNvbG9yLWZvcmVncm91bmQtY3VycmVudDojYzdlYWZmOy0tY2FsY2l0ZS1jb2xvci1mb3JlZ3JvdW5kLTM6I2VhZWFlYTstLWNhbGNpdGUtY29sb3ItZm9yZWdyb3VuZC0yOiNmM2YzZjM7LS1jYWxjaXRlLWNvbG9yLWZvcmVncm91bmQtMTojZmZmZmZmOy0tY2FsY2l0ZS1jb2xvci1iYWNrZ3JvdW5kOiNmOGY4Zjh9LmNhbGNpdGUtbW9kZS1kYXJrey0tY2FsY2l0ZS1jb2xvci1ib3JkZXItd2hpdGU6I2Y4ZjhmODstLWNhbGNpdGUtY29sb3ItYm9yZGVyLWdob3N0OnJnYmEoMTE3LCAxMTcsIDExNywgMC4zKTstLWNhbGNpdGUtY29sb3ItYm9yZGVyLWlucHV0OiM3NTc1NzU7LS1jYWxjaXRlLWNvbG9yLWJvcmRlci0zOiM0MDQwNDA7LS1jYWxjaXRlLWNvbG9yLWJvcmRlci0yOiM0YTRhNGE7LS1jYWxjaXRlLWNvbG9yLWJvcmRlci0xOiM1NTU1NTU7LS1jYWxjaXRlLWNvbG9yLXRleHQtbGluazojMDBBMEZGOy0tY2FsY2l0ZS1jb2xvci10ZXh0LWludmVyc2U6IzE1MTUxNTstLWNhbGNpdGUtY29sb3ItdGV4dC0zOiM5ZjlmOWY7LS1jYWxjaXRlLWNvbG9yLXRleHQtMjojYmZiZmJmOy0tY2FsY2l0ZS1jb2xvci10ZXh0LTE6I2ZmZmZmZjstLWNhbGNpdGUtY29sb3ItaW52ZXJzZS1wcmVzczojZjNmM2YzOy0tY2FsY2l0ZS1jb2xvci1pbnZlcnNlLWhvdmVyOiNmZmZmZmY7LS1jYWxjaXRlLWNvbG9yLWludmVyc2U6I2Y4ZjhmODstLWNhbGNpdGUtY29sb3Itc3RhdHVzLWRhbmdlci1wcmVzczojZDkwMDEyOy0tY2FsY2l0ZS1jb2xvci1zdGF0dXMtZGFuZ2VyLWhvdmVyOiNmZjAwMTU7LS1jYWxjaXRlLWNvbG9yLXN0YXR1cy1kYW5nZXI6I0ZFNTgzRTstLWNhbGNpdGUtY29sb3Itc3RhdHVzLXdhcm5pbmctcHJlc3M6I2Y1ZDAwMDstLWNhbGNpdGUtY29sb3Itc3RhdHVzLXdhcm5pbmctaG92ZXI6I2ZmZWUzMzstLWNhbGNpdGUtY29sb3Itc3RhdHVzLXdhcm5pbmc6I0ZGQzkwMDstLWNhbGNpdGUtY29sb3Itc3RhdHVzLXN1Y2Nlc3MtcHJlc3M6IzAwYjgxYjstLWNhbGNpdGUtY29sb3Itc3RhdHVzLXN1Y2Nlc3MtaG92ZXI6IzNiZWQ1MjstLWNhbGNpdGUtY29sb3Itc3RhdHVzLXN1Y2Nlc3M6IzM2REE0MzstLWNhbGNpdGUtY29sb3Itc3RhdHVzLWluZm8tcHJlc3M6IzAwOWFmMjstLWNhbGNpdGUtY29sb3Itc3RhdHVzLWluZm8taG92ZXI6IzNkYjhmZjstLWNhbGNpdGUtY29sb3Itc3RhdHVzLWluZm86IzAwQTBGRjstLWNhbGNpdGUtY29sb3ItYnJhbmQtdW5kZXJsaW5lOnJnYmEoMCwgMTYwLCAyNTUsIDAuNCk7LS1jYWxjaXRlLWNvbG9yLWJyYW5kLXByZXNzOiMwMDYxOWI7LS1jYWxjaXRlLWNvbG9yLWJyYW5kLWhvdmVyOiMwMDdhYzI7LS1jYWxjaXRlLWNvbG9yLWJyYW5kOiMwMDlhZjI7LS1jYWxjaXRlLWNvbG9yLXRyYW5zcGFyZW50LXRpbnQ6cmdiYSg0MywgNDMsIDQzLCAwLjgpOy0tY2FsY2l0ZS1jb2xvci10cmFuc3BhcmVudC1zY3JpbTpyZ2JhKDAsIDAsIDAsIDAuODUpOy0tY2FsY2l0ZS1jb2xvci10cmFuc3BhcmVudC1wcmVzczpyZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMDgpOy0tY2FsY2l0ZS1jb2xvci10cmFuc3BhcmVudC1ob3ZlcjpyZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMDQpOy0tY2FsY2l0ZS1jb2xvci10cmFuc3BhcmVudDpyZ2JhKDI1NSwgMjU1LCAyNTUsIDApOy0tY2FsY2l0ZS1jb2xvci1mb3JlZ3JvdW5kLWN1cnJlbnQ6IzIxNDE1NTstLWNhbGNpdGUtY29sb3ItZm9yZWdyb3VuZC0zOiMxNTE1MTU7LS1jYWxjaXRlLWNvbG9yLWZvcmVncm91bmQtMjojMjAyMDIwOy0tY2FsY2l0ZS1jb2xvci1mb3JlZ3JvdW5kLTE6IzJiMmIyYjstLWNhbGNpdGUtY29sb3ItYmFja2dyb3VuZDojMzUzNTM1fTpyb290ey0tY2FsY2l0ZS1jb2RlLWZhbWlseTpcXFwiQ29uc29sYXNcXFwiLCBcXFwiQW5kYWxlIE1vbm9cXFwiLCBcXFwiTHVjaWRhIENvbnNvbGVcXFwiLCBcXFwiTW9uYWNvXFxcIiwgbW9ub3NwYWNlOy0tY2FsY2l0ZS1zYW5zLWZhbWlseTpcXFwiQXZlbmlyIE5leHRcXFwiLCBcXFwiQXZlbmlyXFxcIiwgXFxcIkhlbHZldGljYSBOZXVlXFxcIiwgc2Fucy1zZXJpZjstLWNhbGNpdGUtZm9udC1zaXplLS0zOjAuNjI1cmVtOy0tY2FsY2l0ZS1mb250LXNpemUtLTI6MC43NXJlbTstLWNhbGNpdGUtZm9udC1zaXplLS0xOjAuODc1cmVtOy0tY2FsY2l0ZS1mb250LXNpemUtMDoxcmVtOy0tY2FsY2l0ZS1mb250LXNpemUtMToxLjEyNXJlbTstLWNhbGNpdGUtZm9udC1zaXplLTI6MS4yNXJlbTstLWNhbGNpdGUtZm9udC1zaXplLTM6MS42MjVyZW07LS1jYWxjaXRlLWZvbnQtc2l6ZS00OjJyZW07LS1jYWxjaXRlLWZvbnQtc2l6ZS01OjIuNXJlbTstLWNhbGNpdGUtZm9udC1zaXplLTY6M3JlbTstLWNhbGNpdGUtZm9udC1zaXplLTc6My41cmVtOy0tY2FsY2l0ZS1mb250LXNpemUtODo0cmVtOy0tY2FsY2l0ZS1mb250LXdlaWdodC1saWdodDozMDA7LS1jYWxjaXRlLWZvbnQtd2VpZ2h0LW5vcm1hbDo0MDA7LS1jYWxjaXRlLWZvbnQtd2VpZ2h0LW1lZGl1bTo1MDA7LS1jYWxjaXRlLWZvbnQtd2VpZ2h0LWJvbGQ6NjAwOy0tY2FsY2l0ZS1mbG9hdGluZy11aS10cmFuc2l0aW9uOnZhcigtLWNhbGNpdGUtYW5pbWF0aW9uLXRpbWluZyk7LS1jYWxjaXRlLWZsb2F0aW5nLXVpLXotaW5kZXg6dmFyKC0tY2FsY2l0ZS16LWluZGV4LWRyb3Bkb3duKTstLWNhbGNpdGUtYW5pbWF0aW9uLXRpbWluZzpjYWxjKDE1MG1zICogdmFyKC0tY2FsY2l0ZS1pbnRlcm5hbC1kdXJhdGlvbi1mYWN0b3IpKTstLWNhbGNpdGUtaW50ZXJuYWwtZHVyYXRpb24tZmFjdG9yOnZhcigtLWNhbGNpdGUtZHVyYXRpb24tZmFjdG9yLCAxKTstLWNhbGNpdGUtaW50ZXJuYWwtYW5pbWF0aW9uLXRpbWluZy1mYXN0OmNhbGMoMTAwbXMgKiB2YXIoLS1jYWxjaXRlLWludGVybmFsLWR1cmF0aW9uLWZhY3RvcikpOy0tY2FsY2l0ZS1pbnRlcm5hbC1hbmltYXRpb24tdGltaW5nLW1lZGl1bTpjYWxjKDIwMG1zICogdmFyKC0tY2FsY2l0ZS1pbnRlcm5hbC1kdXJhdGlvbi1mYWN0b3IpKTstLWNhbGNpdGUtaW50ZXJuYWwtYW5pbWF0aW9uLXRpbWluZy1zbG93OmNhbGMoMzAwbXMgKiB2YXIoLS1jYWxjaXRlLWludGVybmFsLWR1cmF0aW9uLWZhY3RvcikpO3RleHQtcmVuZGVyaW5nOm9wdGltaXplTGVnaWJpbGl0eTstd2Via2l0LWZvbnQtc21vb3RoaW5nOmFudGlhbGlhc2VkOy1tb3otb3N4LWZvbnQtc21vb3RoaW5nOmdyYXlzY2FsZTstLWNhbGNpdGUtcG9wb3Zlci16LWluZGV4OnZhcigtLWNhbGNpdGUtei1pbmRleC1wb3B1cCk7LS1jYWxjaXRlLWJvcmRlci1yYWRpdXM6dmFyKC0tY2FsY2l0ZS1ib3JkZXItcmFkaXVzLXJvdW5kLCA0cHgpOy0tY2FsY2l0ZS1ib3JkZXItcmFkaXVzLWJhc2U6MDstLWNhbGNpdGUtb2Zmc2V0LWludmVydC1mb2N1czowOy0tY2FsY2l0ZS1wYW5lbC13aWR0aC1tdWx0aXBsaWVyOjE7LS1jYWxjaXRlLXVpLWljb24tY29sb3I6Y3VycmVudENvbG9yO2ZvbnQtZmFtaWx5OnZhcigtLWNhbGNpdGUtc2Fucy1mYW1pbHkpfUBtZWRpYSAocHJlZmVycy1jb2xvci1zY2hlbWU6IGRhcmspey5jYWxjaXRlLW1vZGUtYXV0b3stLWNhbGNpdGUtY29sb3ItYm9yZGVyLXdoaXRlOiNmOGY4Zjg7LS1jYWxjaXRlLWNvbG9yLWJvcmRlci1naG9zdDpyZ2JhKDExNywgMTE3LCAxMTcsIDAuMyk7LS1jYWxjaXRlLWNvbG9yLWJvcmRlci1pbnB1dDojNzU3NTc1Oy0tY2FsY2l0ZS1jb2xvci1ib3JkZXItMzojNDA0MDQwOy0tY2FsY2l0ZS1jb2xvci1ib3JkZXItMjojNGE0YTRhOy0tY2FsY2l0ZS1jb2xvci1ib3JkZXItMTojNTU1NTU1Oy0tY2FsY2l0ZS1jb2xvci10ZXh0LWxpbms6IzAwQTBGRjstLWNhbGNpdGUtY29sb3ItdGV4dC1pbnZlcnNlOiMxNTE1MTU7LS1jYWxjaXRlLWNvbG9yLXRleHQtMzojOWY5ZjlmOy0tY2FsY2l0ZS1jb2xvci10ZXh0LTI6I2JmYmZiZjstLWNhbGNpdGUtY29sb3ItdGV4dC0xOiNmZmZmZmY7LS1jYWxjaXRlLWNvbG9yLWludmVyc2UtcHJlc3M6I2YzZjNmMzstLWNhbGNpdGUtY29sb3ItaW52ZXJzZS1ob3ZlcjojZmZmZmZmOy0tY2FsY2l0ZS1jb2xvci1pbnZlcnNlOiNmOGY4Zjg7LS1jYWxjaXRlLWNvbG9yLXN0YXR1cy1kYW5nZXItcHJlc3M6I2Q5MDAxMjstLWNhbGNpdGUtY29sb3Itc3RhdHVzLWRhbmdlci1ob3ZlcjojZmYwMDE1Oy0tY2FsY2l0ZS1jb2xvci1zdGF0dXMtZGFuZ2VyOiNGRTU4M0U7LS1jYWxjaXRlLWNvbG9yLXN0YXR1cy13YXJuaW5nLXByZXNzOiNmNWQwMDA7LS1jYWxjaXRlLWNvbG9yLXN0YXR1cy13YXJuaW5nLWhvdmVyOiNmZmVlMzM7LS1jYWxjaXRlLWNvbG9yLXN0YXR1cy13YXJuaW5nOiNGRkM5MDA7LS1jYWxjaXRlLWNvbG9yLXN0YXR1cy1zdWNjZXNzLXByZXNzOiMwMGI4MWI7LS1jYWxjaXRlLWNvbG9yLXN0YXR1cy1zdWNjZXNzLWhvdmVyOiMzYmVkNTI7LS1jYWxjaXRlLWNvbG9yLXN0YXR1cy1zdWNjZXNzOiMzNkRBNDM7LS1jYWxjaXRlLWNvbG9yLXN0YXR1cy1pbmZvLXByZXNzOiMwMDlhZjI7LS1jYWxjaXRlLWNvbG9yLXN0YXR1cy1pbmZvLWhvdmVyOiMzZGI4ZmY7LS1jYWxjaXRlLWNvbG9yLXN0YXR1cy1pbmZvOiMwMEEwRkY7LS1jYWxjaXRlLWNvbG9yLWJyYW5kLXVuZGVybGluZTpyZ2JhKDAsIDE2MCwgMjU1LCAwLjQpOy0tY2FsY2l0ZS1jb2xvci1icmFuZC1wcmVzczojMDA2MTliOy0tY2FsY2l0ZS1jb2xvci1icmFuZC1ob3ZlcjojMDA3YWMyOy0tY2FsY2l0ZS1jb2xvci1icmFuZDojMDA5YWYyOy0tY2FsY2l0ZS1jb2xvci10cmFuc3BhcmVudC10aW50OnJnYmEoNDMsIDQzLCA0MywgMC44KTstLWNhbGNpdGUtY29sb3ItdHJhbnNwYXJlbnQtc2NyaW06cmdiYSgwLCAwLCAwLCAwLjg1KTstLWNhbGNpdGUtY29sb3ItdHJhbnNwYXJlbnQtcHJlc3M6cmdiYSgyNTUsIDI1NSwgMjU1LCAwLjA4KTstLWNhbGNpdGUtY29sb3ItdHJhbnNwYXJlbnQtaG92ZXI6cmdiYSgyNTUsIDI1NSwgMjU1LCAwLjA0KTstLWNhbGNpdGUtY29sb3ItdHJhbnNwYXJlbnQ6cmdiYSgyNTUsIDI1NSwgMjU1LCAwKTstLWNhbGNpdGUtY29sb3ItZm9yZWdyb3VuZC1jdXJyZW50OiMyMTQxNTU7LS1jYWxjaXRlLWNvbG9yLWZvcmVncm91bmQtMzojMTUxNTE1Oy0tY2FsY2l0ZS1jb2xvci1mb3JlZ3JvdW5kLTI6IzIwMjAyMDstLWNhbGNpdGUtY29sb3ItZm9yZWdyb3VuZC0xOiMyYjJiMmI7LS1jYWxjaXRlLWNvbG9yLWJhY2tncm91bmQ6IzM1MzUzNX19QG1lZGlhIChwcmVmZXJzLWNvbG9yLXNjaGVtZTogbGlnaHQpey5jYWxjaXRlLW1vZGUtYXV0b3stLWNhbGNpdGUtY29sb3ItYm9yZGVyLXdoaXRlOiNmZmZmZmY7LS1jYWxjaXRlLWNvbG9yLWJvcmRlci1naG9zdDpyZ2JhKDAsIDAsIDAsIDAuMyk7LS1jYWxjaXRlLWNvbG9yLWJvcmRlci1pbnB1dDojOTQ5NDk0Oy0tY2FsY2l0ZS1jb2xvci1ib3JkZXItMzojZGZkZmRmOy0tY2FsY2l0ZS1jb2xvci1ib3JkZXItMjojZDRkNGQ0Oy0tY2FsY2l0ZS1jb2xvci1ib3JkZXItMTojY2FjYWNhOy0tY2FsY2l0ZS1jb2xvci10ZXh0LWxpbms6IzAwNjE5YjstLWNhbGNpdGUtY29sb3ItdGV4dC1pbnZlcnNlOiNmZmZmZmY7LS1jYWxjaXRlLWNvbG9yLXRleHQtMzojNmE2YTZhOy0tY2FsY2l0ZS1jb2xvci10ZXh0LTI6IzRhNGE0YTstLWNhbGNpdGUtY29sb3ItdGV4dC0xOiMxNTE1MTU7LS1jYWxjaXRlLWNvbG9yLWludmVyc2UtcHJlc3M6IzIwMjAyMDstLWNhbGNpdGUtY29sb3ItaW52ZXJzZS1ob3ZlcjojMmIyYjJiOy0tY2FsY2l0ZS1jb2xvci1pbnZlcnNlOiMzNTM1MzU7LS1jYWxjaXRlLWNvbG9yLXN0YXR1cy1kYW5nZXItcHJlc3M6IzdjMWQxMzstLWNhbGNpdGUtY29sb3Itc3RhdHVzLWRhbmdlci1ob3ZlcjojYTgyYjFlOy0tY2FsY2l0ZS1jb2xvci1zdGF0dXMtZGFuZ2VyOiNkODMwMjA7LS1jYWxjaXRlLWNvbG9yLXN0YXR1cy13YXJuaW5nLXByZXNzOiNiZmEyMDA7LS1jYWxjaXRlLWNvbG9yLXN0YXR1cy13YXJuaW5nLWhvdmVyOiNkOWJjMDA7LS1jYWxjaXRlLWNvbG9yLXN0YXR1cy13YXJuaW5nOiNlZGQzMTc7LS1jYWxjaXRlLWNvbG9yLXN0YXR1cy1zdWNjZXNzLXByZXNzOiMxYTYzMjQ7LS1jYWxjaXRlLWNvbG9yLXN0YXR1cy1zdWNjZXNzLWhvdmVyOiMyODg4MzU7LS1jYWxjaXRlLWNvbG9yLXN0YXR1cy1zdWNjZXNzOiMzNWFjNDY7LS1jYWxjaXRlLWNvbG9yLXN0YXR1cy1pbmZvLXByZXNzOiMwMDMwNGQ7LS1jYWxjaXRlLWNvbG9yLXN0YXR1cy1pbmZvLWhvdmVyOiMwMDQ4NzQ7LS1jYWxjaXRlLWNvbG9yLXN0YXR1cy1pbmZvOiMwMDYxOWI7LS1jYWxjaXRlLWNvbG9yLWJyYW5kLXVuZGVybGluZTpyZ2JhKDAsIDk3LCAxNTUsIDAuNCk7LS1jYWxjaXRlLWNvbG9yLWJyYW5kLXByZXNzOiMwMDQ4NzQ7LS1jYWxjaXRlLWNvbG9yLWJyYW5kLWhvdmVyOiMwMDYxOWI7LS1jYWxjaXRlLWNvbG9yLWJyYW5kOiMwMDdhYzI7LS1jYWxjaXRlLWNvbG9yLXRyYW5zcGFyZW50LXRpbnQ6cmdiYSgyNTUsIDI1NSwgMjU1LCAwLjgpOy0tY2FsY2l0ZS1jb2xvci10cmFuc3BhcmVudC1zY3JpbTpyZ2JhKDI1NSwgMjU1LCAyNTUsIDAuODUpOy0tY2FsY2l0ZS1jb2xvci10cmFuc3BhcmVudC1wcmVzczpyZ2JhKDAsIDAsIDAsIDAuMDgpOy0tY2FsY2l0ZS1jb2xvci10cmFuc3BhcmVudC1ob3ZlcjpyZ2JhKDAsIDAsIDAsIDAuMDQpOy0tY2FsY2l0ZS1jb2xvci10cmFuc3BhcmVudDpyZ2JhKDAsIDAsIDAsIDApOy0tY2FsY2l0ZS1jb2xvci1mb3JlZ3JvdW5kLWN1cnJlbnQ6I2M3ZWFmZjstLWNhbGNpdGUtY29sb3ItZm9yZWdyb3VuZC0zOiNlYWVhZWE7LS1jYWxjaXRlLWNvbG9yLWZvcmVncm91bmQtMjojZjNmM2YzOy0tY2FsY2l0ZS1jb2xvci1mb3JlZ3JvdW5kLTE6I2ZmZmZmZjstLWNhbGNpdGUtY29sb3ItYmFja2dyb3VuZDojZjhmOGY4fX1AbWVkaWEgKHByZWZlcnMtcmVkdWNlZC1tb3Rpb246IHJlZHVjZSl7OnJvb3R7LS1jYWxjaXRlLWludGVybmFsLWR1cmF0aW9uLWZhY3RvcjowLjAxfX1Aa2V5ZnJhbWVzIGluezAle29wYWNpdHk6MH0xMDAle29wYWNpdHk6MX19QGtleWZyYW1lcyBpbi1kb3duezAle29wYWNpdHk6MDt0cmFuc2Zvcm06dHJhbnNsYXRlM0QoMCwgLTVweCwgMCl9MTAwJXtvcGFjaXR5OjE7dHJhbnNmb3JtOnRyYW5zbGF0ZTNEKDAsIDAsIDApfX1Aa2V5ZnJhbWVzIGluLXVwezAle29wYWNpdHk6MDt0cmFuc2Zvcm06dHJhbnNsYXRlM0QoMCwgNXB4LCAwKX0xMDAle29wYWNpdHk6MTt0cmFuc2Zvcm06dHJhbnNsYXRlM0QoMCwgMCwgMCl9fUBrZXlmcmFtZXMgaW4tcmlnaHR7MCV7b3BhY2l0eTowO3RyYW5zZm9ybTp0cmFuc2xhdGUzRCgtNXB4LCAwLCAwKX0xMDAle29wYWNpdHk6MTt0cmFuc2Zvcm06dHJhbnNsYXRlM0QoMCwgMCwgMCl9fUBrZXlmcmFtZXMgaW4tbGVmdHswJXtvcGFjaXR5OjA7dHJhbnNmb3JtOnRyYW5zbGF0ZTNEKDVweCwgMCwgMCl9MTAwJXtvcGFjaXR5OjE7dHJhbnNmb3JtOnRyYW5zbGF0ZTNEKDAsIDAsIDApfX1Aa2V5ZnJhbWVzIGluLXNjYWxlezAle29wYWNpdHk6MDt0cmFuc2Zvcm06c2NhbGUzRCgwLjk1LCAwLjk1LCAxKX0xMDAle29wYWNpdHk6MTt0cmFuc2Zvcm06c2NhbGUzRCgxLCAxLCAxKX19LmNhbGNpdGUtYW5pbWF0ZXtvcGFjaXR5OjA7YW5pbWF0aW9uLWZpbGwtbW9kZTpib3RoO2FuaW1hdGlvbi1kdXJhdGlvbjp2YXIoLS1jYWxjaXRlLWFuaW1hdGlvbi10aW1pbmcpfS5jYWxjaXRlLWFuaW1hdGVfX2lue2FuaW1hdGlvbi1uYW1lOmlufS5jYWxjaXRlLWFuaW1hdGVfX2luLWRvd257YW5pbWF0aW9uLW5hbWU6aW4tZG93bn0uY2FsY2l0ZS1hbmltYXRlX19pbi11cHthbmltYXRpb24tbmFtZTppbi11cH0uY2FsY2l0ZS1hbmltYXRlX19pbi1yaWdodHthbmltYXRpb24tbmFtZTppbi1yaWdodH0uY2FsY2l0ZS1hbmltYXRlX19pbi1sZWZ0e2FuaW1hdGlvbi1uYW1lOmluLWxlZnR9LmNhbGNpdGUtYW5pbWF0ZV9faW4tc2NhbGV7YW5pbWF0aW9uLW5hbWU6aW4tc2NhbGV9LmNhbGNpdGUtc29ydGFibGUtLWdob3N0LC5jYWxjaXRlLXNvcnRhYmxlLS1kcmFne292ZXJmbG93OmhpZGRlbn0uY2FsY2l0ZS1zb3J0YWJsZS0tZ2hvc3Q6OmJlZm9yZXtjb250ZW50OlxcXCJcXFwiO3Bvc2l0aW9uOmFic29sdXRlO2luc2V0OjBweDt6LWluZGV4OnZhcigtLWNhbGNpdGUtei1pbmRleCk7Ym94LXNpemluZzpib3JkZXItYm94O2JvcmRlci13aWR0aDoxcHg7Ym9yZGVyLXN0eWxlOmRhc2hlZDtib3JkZXItY29sb3I6dmFyKC0tY2FsY2l0ZS1jb2xvci1icmFuZCk7YmFja2dyb3VuZC1jb2xvcjp2YXIoLS1jYWxjaXRlLWNvbG9yLWZvcmVncm91bmQtMil9LmNhbGNpdGUtc29ydGFibGUtLWRyYWd7LS10dy1zaGFkb3c6MCA2cHggMjBweCAtNHB4IHJnYmEoMCwgMCwgMCwgMC4xKSwgMCA0cHggMTJweCAtMnB4IHJnYmEoMCwgMCwgMCwgMC4wOCk7LS10dy1zaGFkb3ctY29sb3JlZDowIDZweCAyMHB4IC00cHggdmFyKC0tdHctc2hhZG93LWNvbG9yKSwgMCA0cHggMTJweCAtMnB4IHZhcigtLXR3LXNoYWRvdy1jb2xvcik7Ym94LXNoYWRvdzp2YXIoLS10dy1yaW5nLW9mZnNldC1zaGFkb3csIDAgMCAjMDAwMCksIHZhcigtLXR3LXJpbmctc2hhZG93LCAwIDAgIzAwMDApLCB2YXIoLS10dy1zaGFkb3cpfVwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iLCJcInVzZSBzdHJpY3RcIjtcblxuLypcbiAgTUlUIExpY2Vuc2UgaHR0cDovL3d3dy5vcGVuc291cmNlLm9yZy9saWNlbnNlcy9taXQtbGljZW5zZS5waHBcbiAgQXV0aG9yIFRvYmlhcyBLb3BwZXJzIEBzb2tyYVxuKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcpIHtcbiAgdmFyIGxpc3QgPSBbXTtcblxuICAvLyByZXR1cm4gdGhlIGxpc3Qgb2YgbW9kdWxlcyBhcyBjc3Mgc3RyaW5nXG4gIGxpc3QudG9TdHJpbmcgPSBmdW5jdGlvbiB0b1N0cmluZygpIHtcbiAgICByZXR1cm4gdGhpcy5tYXAoZnVuY3Rpb24gKGl0ZW0pIHtcbiAgICAgIHZhciBjb250ZW50ID0gXCJcIjtcbiAgICAgIHZhciBuZWVkTGF5ZXIgPSB0eXBlb2YgaXRlbVs1XSAhPT0gXCJ1bmRlZmluZWRcIjtcbiAgICAgIGlmIChpdGVtWzRdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChpdGVtWzRdLCBcIikge1wiKTtcbiAgICAgIH1cbiAgICAgIGlmIChpdGVtWzJdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAbWVkaWEgXCIuY29uY2F0KGl0ZW1bMl0sIFwiIHtcIik7XG4gICAgICB9XG4gICAgICBpZiAobmVlZExheWVyKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAbGF5ZXJcIi5jb25jYXQoaXRlbVs1XS5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KGl0ZW1bNV0pIDogXCJcIiwgXCIge1wiKTtcbiAgICAgIH1cbiAgICAgIGNvbnRlbnQgKz0gY3NzV2l0aE1hcHBpbmdUb1N0cmluZyhpdGVtKTtcbiAgICAgIGlmIChuZWVkTGF5ZXIpIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cbiAgICAgIGlmIChpdGVtWzJdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG4gICAgICBpZiAoaXRlbVs0XSkge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuICAgICAgcmV0dXJuIGNvbnRlbnQ7XG4gICAgfSkuam9pbihcIlwiKTtcbiAgfTtcblxuICAvLyBpbXBvcnQgYSBsaXN0IG9mIG1vZHVsZXMgaW50byB0aGUgbGlzdFxuICBsaXN0LmkgPSBmdW5jdGlvbiBpKG1vZHVsZXMsIG1lZGlhLCBkZWR1cGUsIHN1cHBvcnRzLCBsYXllcikge1xuICAgIGlmICh0eXBlb2YgbW9kdWxlcyA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgbW9kdWxlcyA9IFtbbnVsbCwgbW9kdWxlcywgdW5kZWZpbmVkXV07XG4gICAgfVxuICAgIHZhciBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzID0ge307XG4gICAgaWYgKGRlZHVwZSkge1xuICAgICAgZm9yICh2YXIgayA9IDA7IGsgPCB0aGlzLmxlbmd0aDsgaysrKSB7XG4gICAgICAgIHZhciBpZCA9IHRoaXNba11bMF07XG4gICAgICAgIGlmIChpZCAhPSBudWxsKSB7XG4gICAgICAgICAgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpZF0gPSB0cnVlO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICAgIGZvciAodmFyIF9rID0gMDsgX2sgPCBtb2R1bGVzLmxlbmd0aDsgX2srKykge1xuICAgICAgdmFyIGl0ZW0gPSBbXS5jb25jYXQobW9kdWxlc1tfa10pO1xuICAgICAgaWYgKGRlZHVwZSAmJiBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2l0ZW1bMF1dKSB7XG4gICAgICAgIGNvbnRpbnVlO1xuICAgICAgfVxuICAgICAgaWYgKHR5cGVvZiBsYXllciAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICBpZiAodHlwZW9mIGl0ZW1bNV0gPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgICBpdGVtWzVdID0gbGF5ZXI7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQGxheWVyXCIuY29uY2F0KGl0ZW1bNV0ubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChpdGVtWzVdKSA6IFwiXCIsIFwiIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzVdID0gbGF5ZXI7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGlmIChtZWRpYSkge1xuICAgICAgICBpZiAoIWl0ZW1bMl0pIHtcbiAgICAgICAgICBpdGVtWzJdID0gbWVkaWE7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQG1lZGlhIFwiLmNvbmNhdChpdGVtWzJdLCBcIiB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVsyXSA9IG1lZGlhO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBpZiAoc3VwcG9ydHMpIHtcbiAgICAgICAgaWYgKCFpdGVtWzRdKSB7XG4gICAgICAgICAgaXRlbVs0XSA9IFwiXCIuY29uY2F0KHN1cHBvcnRzKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChpdGVtWzRdLCBcIikge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bNF0gPSBzdXBwb3J0cztcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgbGlzdC5wdXNoKGl0ZW0pO1xuICAgIH1cbiAgfTtcbiAgcmV0dXJuIGxpc3Q7XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdGVtKSB7XG4gIHZhciBjb250ZW50ID0gaXRlbVsxXTtcbiAgdmFyIGNzc01hcHBpbmcgPSBpdGVtWzNdO1xuICBpZiAoIWNzc01hcHBpbmcpIHtcbiAgICByZXR1cm4gY29udGVudDtcbiAgfVxuICBpZiAodHlwZW9mIGJ0b2EgPT09IFwiZnVuY3Rpb25cIikge1xuICAgIHZhciBiYXNlNjQgPSBidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShjc3NNYXBwaW5nKSkpKTtcbiAgICB2YXIgZGF0YSA9IFwic291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsXCIuY29uY2F0KGJhc2U2NCk7XG4gICAgdmFyIHNvdXJjZU1hcHBpbmcgPSBcIi8qIyBcIi5jb25jYXQoZGF0YSwgXCIgKi9cIik7XG4gICAgcmV0dXJuIFtjb250ZW50XS5jb25jYXQoW3NvdXJjZU1hcHBpbmddKS5qb2luKFwiXFxuXCIpO1xuICB9XG4gIHJldHVybiBbY29udGVudF0uam9pbihcIlxcblwiKTtcbn07IiwiXG4gICAgICBpbXBvcnQgQVBJIGZyb20gXCIhLi4vLi4vLi4vLi4vc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIjtcbiAgICAgIGltcG9ydCBkb21BUEkgZnJvbSBcIiEuLi8uLi8uLi8uLi9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0Rm4gZnJvbSBcIiEuLi8uLi8uLi8uLi9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanNcIjtcbiAgICAgIGltcG9ydCBzZXRBdHRyaWJ1dGVzIGZyb20gXCIhLi4vLi4vLi4vLi4vc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRTdHlsZUVsZW1lbnQgZnJvbSBcIiEuLi8uLi8uLi8uLi9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qc1wiO1xuICAgICAgaW1wb3J0IHN0eWxlVGFnVHJhbnNmb3JtRm4gZnJvbSBcIiEuLi8uLi8uLi8uLi9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzXCI7XG4gICAgICBpbXBvcnQgY29udGVudCwgKiBhcyBuYW1lZEV4cG9ydCBmcm9tIFwiISEuLi8uLi8uLi8uLi9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzNdLnVzZVsxXSEuLi8uLi8uLi8uLi9yZXNvbHZlLXVybC1sb2FkZXIvaW5kZXguanM/P3J1bGVTZXRbMV0ucnVsZXNbM10udXNlWzJdIS4uLy4uLy4uLy4uL3Nhc3MtbG9hZGVyL2Rpc3QvY2pzLmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzNdLnVzZVszXSEuL2NhbGNpdGUuY3NzXCI7XG4gICAgICBcbiAgICAgIFxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtID0gc3R5bGVUYWdUcmFuc2Zvcm1Gbjtcbm9wdGlvbnMuc2V0QXR0cmlidXRlcyA9IHNldEF0dHJpYnV0ZXM7XG5cbiAgICAgIG9wdGlvbnMuaW5zZXJ0ID0gaW5zZXJ0Rm4uYmluZChudWxsLCBcImhlYWRcIik7XG4gICAgXG5vcHRpb25zLmRvbUFQSSA9IGRvbUFQSTtcbm9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50ID0gaW5zZXJ0U3R5bGVFbGVtZW50O1xuXG52YXIgdXBkYXRlID0gQVBJKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxuZXhwb3J0ICogZnJvbSBcIiEhLi4vLi4vLi4vLi4vY3NzLWxvYWRlci9kaXN0L2Nqcy5qcz8/cnVsZVNldFsxXS5ydWxlc1szXS51c2VbMV0hLi4vLi4vLi4vLi4vcmVzb2x2ZS11cmwtbG9hZGVyL2luZGV4LmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzNdLnVzZVsyXSEuLi8uLi8uLi8uLi9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcz8/cnVsZVNldFsxXS5ydWxlc1szXS51c2VbM10hLi9jYWxjaXRlLmNzc1wiO1xuICAgICAgIGV4cG9ydCBkZWZhdWx0IGNvbnRlbnQgJiYgY29udGVudC5sb2NhbHMgPyBjb250ZW50LmxvY2FscyA6IHVuZGVmaW5lZDtcbiIsIlwidXNlIHN0cmljdFwiO1xuXG52YXIgc3R5bGVzSW5ET00gPSBbXTtcbmZ1bmN0aW9uIGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpIHtcbiAgdmFyIHJlc3VsdCA9IC0xO1xuICBmb3IgKHZhciBpID0gMDsgaSA8IHN0eWxlc0luRE9NLmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKHN0eWxlc0luRE9NW2ldLmlkZW50aWZpZXIgPT09IGlkZW50aWZpZXIpIHtcbiAgICAgIHJlc3VsdCA9IGk7XG4gICAgICBicmVhaztcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHJlc3VsdDtcbn1cbmZ1bmN0aW9uIG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKSB7XG4gIHZhciBpZENvdW50TWFwID0ge307XG4gIHZhciBpZGVudGlmaWVycyA9IFtdO1xuICBmb3IgKHZhciBpID0gMDsgaSA8IGxpc3QubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgaXRlbSA9IGxpc3RbaV07XG4gICAgdmFyIGlkID0gb3B0aW9ucy5iYXNlID8gaXRlbVswXSArIG9wdGlvbnMuYmFzZSA6IGl0ZW1bMF07XG4gICAgdmFyIGNvdW50ID0gaWRDb3VudE1hcFtpZF0gfHwgMDtcbiAgICB2YXIgaWRlbnRpZmllciA9IFwiXCIuY29uY2F0KGlkLCBcIiBcIikuY29uY2F0KGNvdW50KTtcbiAgICBpZENvdW50TWFwW2lkXSA9IGNvdW50ICsgMTtcbiAgICB2YXIgaW5kZXhCeUlkZW50aWZpZXIgPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICB2YXIgb2JqID0ge1xuICAgICAgY3NzOiBpdGVtWzFdLFxuICAgICAgbWVkaWE6IGl0ZW1bMl0sXG4gICAgICBzb3VyY2VNYXA6IGl0ZW1bM10sXG4gICAgICBzdXBwb3J0czogaXRlbVs0XSxcbiAgICAgIGxheWVyOiBpdGVtWzVdXG4gICAgfTtcbiAgICBpZiAoaW5kZXhCeUlkZW50aWZpZXIgIT09IC0xKSB7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleEJ5SWRlbnRpZmllcl0ucmVmZXJlbmNlcysrO1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhCeUlkZW50aWZpZXJdLnVwZGF0ZXIob2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIHVwZGF0ZXIgPSBhZGRFbGVtZW50U3R5bGUob2JqLCBvcHRpb25zKTtcbiAgICAgIG9wdGlvbnMuYnlJbmRleCA9IGk7XG4gICAgICBzdHlsZXNJbkRPTS5zcGxpY2UoaSwgMCwge1xuICAgICAgICBpZGVudGlmaWVyOiBpZGVudGlmaWVyLFxuICAgICAgICB1cGRhdGVyOiB1cGRhdGVyLFxuICAgICAgICByZWZlcmVuY2VzOiAxXG4gICAgICB9KTtcbiAgICB9XG4gICAgaWRlbnRpZmllcnMucHVzaChpZGVudGlmaWVyKTtcbiAgfVxuICByZXR1cm4gaWRlbnRpZmllcnM7XG59XG5mdW5jdGlvbiBhZGRFbGVtZW50U3R5bGUob2JqLCBvcHRpb25zKSB7XG4gIHZhciBhcGkgPSBvcHRpb25zLmRvbUFQSShvcHRpb25zKTtcbiAgYXBpLnVwZGF0ZShvYmopO1xuICB2YXIgdXBkYXRlciA9IGZ1bmN0aW9uIHVwZGF0ZXIobmV3T2JqKSB7XG4gICAgaWYgKG5ld09iaikge1xuICAgICAgaWYgKG5ld09iai5jc3MgPT09IG9iai5jc3MgJiYgbmV3T2JqLm1lZGlhID09PSBvYmoubWVkaWEgJiYgbmV3T2JqLnNvdXJjZU1hcCA9PT0gb2JqLnNvdXJjZU1hcCAmJiBuZXdPYmouc3VwcG9ydHMgPT09IG9iai5zdXBwb3J0cyAmJiBuZXdPYmoubGF5ZXIgPT09IG9iai5sYXllcikge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBhcGkudXBkYXRlKG9iaiA9IG5ld09iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIGFwaS5yZW1vdmUoKTtcbiAgICB9XG4gIH07XG4gIHJldHVybiB1cGRhdGVyO1xufVxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAobGlzdCwgb3B0aW9ucykge1xuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcbiAgbGlzdCA9IGxpc3QgfHwgW107XG4gIHZhciBsYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obGlzdCwgb3B0aW9ucyk7XG4gIHJldHVybiBmdW5jdGlvbiB1cGRhdGUobmV3TGlzdCkge1xuICAgIG5ld0xpc3QgPSBuZXdMaXN0IHx8IFtdO1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgaWRlbnRpZmllciA9IGxhc3RJZGVudGlmaWVyc1tpXTtcbiAgICAgIHZhciBpbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpO1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhdLnJlZmVyZW5jZXMtLTtcbiAgICB9XG4gICAgdmFyIG5ld0xhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShuZXdMaXN0LCBvcHRpb25zKTtcbiAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgX2krKykge1xuICAgICAgdmFyIF9pZGVudGlmaWVyID0gbGFzdElkZW50aWZpZXJzW19pXTtcbiAgICAgIHZhciBfaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihfaWRlbnRpZmllcik7XG4gICAgICBpZiAoc3R5bGVzSW5ET01bX2luZGV4XS5yZWZlcmVuY2VzID09PSAwKSB7XG4gICAgICAgIHN0eWxlc0luRE9NW19pbmRleF0udXBkYXRlcigpO1xuICAgICAgICBzdHlsZXNJbkRPTS5zcGxpY2UoX2luZGV4LCAxKTtcbiAgICAgIH1cbiAgICB9XG4gICAgbGFzdElkZW50aWZpZXJzID0gbmV3TGFzdElkZW50aWZpZXJzO1xuICB9O1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxudmFyIG1lbW8gPSB7fTtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBnZXRUYXJnZXQodGFyZ2V0KSB7XG4gIGlmICh0eXBlb2YgbWVtb1t0YXJnZXRdID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgdmFyIHN0eWxlVGFyZ2V0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0YXJnZXQpO1xuXG4gICAgLy8gU3BlY2lhbCBjYXNlIHRvIHJldHVybiBoZWFkIG9mIGlmcmFtZSBpbnN0ZWFkIG9mIGlmcmFtZSBpdHNlbGZcbiAgICBpZiAod2luZG93LkhUTUxJRnJhbWVFbGVtZW50ICYmIHN0eWxlVGFyZ2V0IGluc3RhbmNlb2Ygd2luZG93LkhUTUxJRnJhbWVFbGVtZW50KSB7XG4gICAgICB0cnkge1xuICAgICAgICAvLyBUaGlzIHdpbGwgdGhyb3cgYW4gZXhjZXB0aW9uIGlmIGFjY2VzcyB0byBpZnJhbWUgaXMgYmxvY2tlZFxuICAgICAgICAvLyBkdWUgdG8gY3Jvc3Mtb3JpZ2luIHJlc3RyaWN0aW9uc1xuICAgICAgICBzdHlsZVRhcmdldCA9IHN0eWxlVGFyZ2V0LmNvbnRlbnREb2N1bWVudC5oZWFkO1xuICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAvLyBpc3RhbmJ1bCBpZ25vcmUgbmV4dFxuICAgICAgICBzdHlsZVRhcmdldCA9IG51bGw7XG4gICAgICB9XG4gICAgfVxuICAgIG1lbW9bdGFyZ2V0XSA9IHN0eWxlVGFyZ2V0O1xuICB9XG4gIHJldHVybiBtZW1vW3RhcmdldF07XG59XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gaW5zZXJ0QnlTZWxlY3RvcihpbnNlcnQsIHN0eWxlKSB7XG4gIHZhciB0YXJnZXQgPSBnZXRUYXJnZXQoaW5zZXJ0KTtcbiAgaWYgKCF0YXJnZXQpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJDb3VsZG4ndCBmaW5kIGEgc3R5bGUgdGFyZ2V0LiBUaGlzIHByb2JhYmx5IG1lYW5zIHRoYXQgdGhlIHZhbHVlIGZvciB0aGUgJ2luc2VydCcgcGFyYW1ldGVyIGlzIGludmFsaWQuXCIpO1xuICB9XG4gIHRhcmdldC5hcHBlbmRDaGlsZChzdHlsZSk7XG59XG5tb2R1bGUuZXhwb3J0cyA9IGluc2VydEJ5U2VsZWN0b3I7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gaW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMpIHtcbiAgdmFyIGVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3R5bGVcIik7XG4gIG9wdGlvbnMuc2V0QXR0cmlidXRlcyhlbGVtZW50LCBvcHRpb25zLmF0dHJpYnV0ZXMpO1xuICBvcHRpb25zLmluc2VydChlbGVtZW50LCBvcHRpb25zLm9wdGlvbnMpO1xuICByZXR1cm4gZWxlbWVudDtcbn1cbm1vZHVsZS5leHBvcnRzID0gaW5zZXJ0U3R5bGVFbGVtZW50OyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIHNldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcyhzdHlsZUVsZW1lbnQpIHtcbiAgdmFyIG5vbmNlID0gdHlwZW9mIF9fd2VicGFja19ub25jZV9fICE9PSBcInVuZGVmaW5lZFwiID8gX193ZWJwYWNrX25vbmNlX18gOiBudWxsO1xuICBpZiAobm9uY2UpIHtcbiAgICBzdHlsZUVsZW1lbnQuc2V0QXR0cmlidXRlKFwibm9uY2VcIiwgbm9uY2UpO1xuICB9XG59XG5tb2R1bGUuZXhwb3J0cyA9IHNldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlczsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBhcHBseShzdHlsZUVsZW1lbnQsIG9wdGlvbnMsIG9iaikge1xuICB2YXIgY3NzID0gXCJcIjtcbiAgaWYgKG9iai5zdXBwb3J0cykge1xuICAgIGNzcyArPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KG9iai5zdXBwb3J0cywgXCIpIHtcIik7XG4gIH1cbiAgaWYgKG9iai5tZWRpYSkge1xuICAgIGNzcyArPSBcIkBtZWRpYSBcIi5jb25jYXQob2JqLm1lZGlhLCBcIiB7XCIpO1xuICB9XG4gIHZhciBuZWVkTGF5ZXIgPSB0eXBlb2Ygb2JqLmxheWVyICE9PSBcInVuZGVmaW5lZFwiO1xuICBpZiAobmVlZExheWVyKSB7XG4gICAgY3NzICs9IFwiQGxheWVyXCIuY29uY2F0KG9iai5sYXllci5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KG9iai5sYXllcikgOiBcIlwiLCBcIiB7XCIpO1xuICB9XG4gIGNzcyArPSBvYmouY3NzO1xuICBpZiAobmVlZExheWVyKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG4gIGlmIChvYmoubWVkaWEpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cbiAgaWYgKG9iai5zdXBwb3J0cykge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuICB2YXIgc291cmNlTWFwID0gb2JqLnNvdXJjZU1hcDtcbiAgaWYgKHNvdXJjZU1hcCAmJiB0eXBlb2YgYnRvYSAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgIGNzcyArPSBcIlxcbi8qIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsXCIuY29uY2F0KGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KHNvdXJjZU1hcCkpKSksIFwiICovXCIpO1xuICB9XG5cbiAgLy8gRm9yIG9sZCBJRVxuICAvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgICovXG4gIG9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0oY3NzLCBzdHlsZUVsZW1lbnQsIG9wdGlvbnMub3B0aW9ucyk7XG59XG5mdW5jdGlvbiByZW1vdmVTdHlsZUVsZW1lbnQoc3R5bGVFbGVtZW50KSB7XG4gIC8vIGlzdGFuYnVsIGlnbm9yZSBpZlxuICBpZiAoc3R5bGVFbGVtZW50LnBhcmVudE5vZGUgPT09IG51bGwpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbiAgc3R5bGVFbGVtZW50LnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoc3R5bGVFbGVtZW50KTtcbn1cblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBkb21BUEkob3B0aW9ucykge1xuICBpZiAodHlwZW9mIGRvY3VtZW50ID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHVwZGF0ZTogZnVuY3Rpb24gdXBkYXRlKCkge30sXG4gICAgICByZW1vdmU6IGZ1bmN0aW9uIHJlbW92ZSgpIHt9XG4gICAgfTtcbiAgfVxuICB2YXIgc3R5bGVFbGVtZW50ID0gb3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucyk7XG4gIHJldHVybiB7XG4gICAgdXBkYXRlOiBmdW5jdGlvbiB1cGRhdGUob2JqKSB7XG4gICAgICBhcHBseShzdHlsZUVsZW1lbnQsIG9wdGlvbnMsIG9iaik7XG4gICAgfSxcbiAgICByZW1vdmU6IGZ1bmN0aW9uIHJlbW92ZSgpIHtcbiAgICAgIHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZUVsZW1lbnQpO1xuICAgIH1cbiAgfTtcbn1cbm1vZHVsZS5leHBvcnRzID0gZG9tQVBJOyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIHN0eWxlVGFnVHJhbnNmb3JtKGNzcywgc3R5bGVFbGVtZW50KSB7XG4gIGlmIChzdHlsZUVsZW1lbnQuc3R5bGVTaGVldCkge1xuICAgIHN0eWxlRWxlbWVudC5zdHlsZVNoZWV0LmNzc1RleHQgPSBjc3M7XG4gIH0gZWxzZSB7XG4gICAgd2hpbGUgKHN0eWxlRWxlbWVudC5maXJzdENoaWxkKSB7XG4gICAgICBzdHlsZUVsZW1lbnQucmVtb3ZlQ2hpbGQoc3R5bGVFbGVtZW50LmZpcnN0Q2hpbGQpO1xuICAgIH1cbiAgICBzdHlsZUVsZW1lbnQuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzKSk7XG4gIH1cbn1cbm1vZHVsZS5leHBvcnRzID0gc3R5bGVUYWdUcmFuc2Zvcm07IiwibW9kdWxlLmV4cG9ydHMgPSBfX1dFQlBBQ0tfRVhURVJOQUxfTU9EVUxFX2VzcmlfZ2VvbWV0cnlfcHJvamVjdGlvbl9fOyIsIm1vZHVsZS5leHBvcnRzID0gX19XRUJQQUNLX0VYVEVSTkFMX01PRFVMRV9qaW11X2NvcmVfXzsiLCJtb2R1bGUuZXhwb3J0cyA9IF9fV0VCUEFDS19FWFRFUk5BTF9NT0RVTEVfcmVhY3RfXzsiLCIvKiFcbiAqIEFsbCBtYXRlcmlhbCBjb3B5cmlnaHQgRVNSSSwgQWxsIFJpZ2h0cyBSZXNlcnZlZCwgdW5sZXNzIG90aGVyd2lzZSBzcGVjaWZpZWQuXG4gKiBTZWUgaHR0cHM6Ly9naXRodWIuY29tL0VzcmkvY2FsY2l0ZS1kZXNpZ24tc3lzdGVtL2Jsb2IvbWFpbi9MSUNFTlNFLm1kIGZvciBkZXRhaWxzLlxuICogdjIuMC4wXG4gKi9cbmltcG9ydCB7IGQgYXMgZGFya01vZGUsIGEgYXMgYXV0b01vZGUgfSBmcm9tICcuL3Jlc291cmNlcy5qcyc7XG5leHBvcnQgeyBnZXRBc3NldFBhdGgsIHNldEFzc2V0UGF0aCwgc2V0Tm9uY2UsIHNldFBsYXRmb3JtT3B0aW9ucyB9IGZyb20gJ0BzdGVuY2lsL2NvcmUvaW50ZXJuYWwvY2xpZW50L2luZGV4LmpzJztcblxuLyoqXG4gKiBFbWl0cyB3aGVuIHRoZSBtb2RlIGlzIGR5bmFtaWNhbGx5IHRvZ2dsZWQgYmV0d2VlbiBsaWdodCBhbmQgZGFyayBvbiA8Ym9keT4gb3IgaW4gT1MgcHJlZmVyZW5jZXMuXG4gKi9cbmZ1bmN0aW9uIGluaXRNb2RlQ2hhbmdlRXZlbnQoKSB7XG4gIGNvbnN0IHsgY2xhc3NMaXN0IH0gPSBkb2N1bWVudC5ib2R5O1xuICBjb25zdCBwcmVmZXJzRGFyayA9IHdpbmRvdy5tYXRjaE1lZGlhKFwiKHByZWZlcnMtY29sb3Itc2NoZW1lOiBkYXJrKVwiKS5tYXRjaGVzO1xuICBjb25zdCBnZXRNb2RlID0gKCkgPT4gY2xhc3NMaXN0LmNvbnRhaW5zKGRhcmtNb2RlKSB8fCAoY2xhc3NMaXN0LmNvbnRhaW5zKGF1dG9Nb2RlKSAmJiBwcmVmZXJzRGFyaykgPyBcImRhcmtcIiA6IFwibGlnaHRcIjtcbiAgY29uc3QgZW1pdE1vZGVDaGFuZ2UgPSAobW9kZSkgPT4gZG9jdW1lbnQuYm9keS5kaXNwYXRjaEV2ZW50KG5ldyBDdXN0b21FdmVudChcImNhbGNpdGVNb2RlQ2hhbmdlXCIsIHsgYnViYmxlczogdHJ1ZSwgZGV0YWlsOiB7IG1vZGUgfSB9KSk7XG4gIGNvbnN0IG1vZGVDaGFuZ2VIYW5kbGVyID0gKG5ld01vZGUpID0+IHtcbiAgICBjdXJyZW50TW9kZSAhPT0gbmV3TW9kZSAmJiBlbWl0TW9kZUNoYW5nZShuZXdNb2RlKTtcbiAgICBjdXJyZW50TW9kZSA9IG5ld01vZGU7XG4gIH07XG4gIGxldCBjdXJyZW50TW9kZSA9IGdldE1vZGUoKTtcbiAgLy8gZW1pdHMgZXZlbnQgb24gcGFnZSBsb2FkXG4gIGVtaXRNb2RlQ2hhbmdlKGN1cnJlbnRNb2RlKTtcbiAgLy8gZW1pdHMgZXZlbnQgd2hlbiBjaGFuZ2luZyBPUyBtb2RlIHByZWZlcmVuY2VzXG4gIHdpbmRvd1xuICAgIC5tYXRjaE1lZGlhKFwiKHByZWZlcnMtY29sb3Itc2NoZW1lOiBkYXJrKVwiKVxuICAgIC5hZGRFdmVudExpc3RlbmVyKFwiY2hhbmdlXCIsIChldmVudCkgPT4gbW9kZUNoYW5nZUhhbmRsZXIoZXZlbnQubWF0Y2hlcyA/IFwiZGFya1wiIDogXCJsaWdodFwiKSk7XG4gIC8vIGVtaXRzIGV2ZW50IHdoZW4gdG9nZ2xpbmcgYmV0d2VlbiBtb2RlIGNsYXNzZXMgb24gPGJvZHk+XG4gIG5ldyBNdXRhdGlvbk9ic2VydmVyKCgpID0+IG1vZGVDaGFuZ2VIYW5kbGVyKGdldE1vZGUoKSkpLm9ic2VydmUoZG9jdW1lbnQuYm9keSwge1xuICAgIGF0dHJpYnV0ZXM6IHRydWUsXG4gICAgYXR0cmlidXRlRmlsdGVyOiBbXCJjbGFzc1wiXSxcbiAgfSk7XG59XG5cbi8qKlxuICogVGhpcyBmaWxlIGlzIGltcG9ydGVkIGluIFN0ZW5jaWwncyBgZ2xvYmFsU2NyaXB0YCBjb25maWcgb3B0aW9uLlxuICpcbiAqIEBzZWUge0BsaW5rIGh0dHBzOi8vc3RlbmNpbGpzLmNvbS9kb2NzL2NvbmZpZyNnbG9iYWxzY3JpcHR9XG4gKi9cbmZ1bmN0aW9uIGFwcEdsb2JhbFNjcmlwdCAoKSB7XG4gIGNvbnN0IGlzQnJvd3NlciA9IHR5cGVvZiB3aW5kb3cgIT09IFwidW5kZWZpbmVkXCIgJiZcbiAgICB0eXBlb2YgbG9jYXRpb24gIT09IFwidW5kZWZpbmVkXCIgJiZcbiAgICB0eXBlb2YgZG9jdW1lbnQgIT09IFwidW5kZWZpbmVkXCIgJiZcbiAgICB3aW5kb3cubG9jYXRpb24gPT09IGxvY2F0aW9uICYmXG4gICAgd2luZG93LmRvY3VtZW50ID09PSBkb2N1bWVudDtcbiAgaWYgKGlzQnJvd3Nlcikge1xuICAgIGlmIChkb2N1bWVudC5yZWFkeVN0YXRlID09PSBcImludGVyYWN0aXZlXCIpIHtcbiAgICAgIGluaXRNb2RlQ2hhbmdlRXZlbnQoKTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwiRE9NQ29udGVudExvYWRlZFwiLCAoKSA9PiBpbml0TW9kZUNoYW5nZUV2ZW50KCksIHsgb25jZTogdHJ1ZSB9KTtcbiAgICB9XG4gIH1cbn1cblxuY29uc3QgZ2xvYmFsU2NyaXB0cyA9IGFwcEdsb2JhbFNjcmlwdDtcblxuZ2xvYmFsU2NyaXB0cygpO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiLCIvKiFcbiAqIEFsbCBtYXRlcmlhbCBjb3B5cmlnaHQgRVNSSSwgQWxsIFJpZ2h0cyBSZXNlcnZlZCwgdW5sZXNzIG90aGVyd2lzZSBzcGVjaWZpZWQuXG4gKiBTZWUgaHR0cHM6Ly9naXRodWIuY29tL0VzcmkvY2FsY2l0ZS1kZXNpZ24tc3lzdGVtL2Jsb2IvbWFpbi9MSUNFTlNFLm1kIGZvciBkZXRhaWxzLlxuICogdjIuMC4wXG4gKi9cbmNvbnN0IGF1dG9Nb2RlID0gXCJjYWxjaXRlLW1vZGUtYXV0b1wiO1xuY29uc3QgZGFya01vZGUgPSBcImNhbGNpdGUtbW9kZS1kYXJrXCI7XG5jb25zdCBsaWdodE1vZGUgPSBcImNhbGNpdGUtbW9kZS1saWdodFwiO1xuY29uc3QgQ1NTX1VUSUxJVFkgPSB7XG4gIGF1dG9Nb2RlLFxuICBkYXJrTW9kZSxcbiAgbGlnaHRNb2RlLFxuICBydGw6IFwiY2FsY2l0ZS0tcnRsXCIsXG4gIGNhbGNpdGVBbmltYXRlOiBcImNhbGNpdGUtYW5pbWF0ZVwiLFxuICBjYWxjaXRlQW5pbWF0ZUluOiBcImNhbGNpdGUtYW5pbWF0ZV9faW5cIixcbiAgY2FsY2l0ZUFuaW1hdGVJblVwOiBcImNhbGNpdGUtYW5pbWF0ZV9faW4tdXBcIixcbiAgY2FsY2l0ZUFuaW1hdGVJbkRvd246IFwiY2FsY2l0ZS1hbmltYXRlX19pbi1kb3duXCIsXG4gIGNhbGNpdGVBbmltYXRlSW5SaWdodDogXCJjYWxjaXRlLWFuaW1hdGVfX2luLXJpZ2h0XCIsXG4gIGNhbGNpdGVBbmltYXRlSW5MZWZ0OiBcImNhbGNpdGUtYW5pbWF0ZV9faW4tbGVmdFwiLFxuICBjYWxjaXRlQW5pbWF0ZUluU2NhbGU6IFwiY2FsY2l0ZS1hbmltYXRlX19pbi1zY2FsZVwiLFxufTtcblxuZXhwb3J0IHsgQ1NTX1VUSUxJVFkgYXMgQywgYXV0b01vZGUgYXMgYSwgZGFya01vZGUgYXMgZCB9O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1yZXNvdXJjZXMuanMubWFwIiwiLyoqXG4gKiBBIGNvbGxlY3Rpb24gb2YgZGVmYXVsdCBidWlsZCBmbGFncyBmb3IgYSBTdGVuY2lsIHByb2plY3QuXG4gKlxuICogVGhpcyBjb2xsZWN0aW9uIGNhbiBiZSBmb3VuZCB0aHJvdWdob3V0IHRoZSBTdGVuY2lsIGNvZGViYXNlLCBvZnRlbiBpbXBvcnRlZCBmcm9tIHRoZSBgQGFwcC1kYXRhYCBtb2R1bGUgbGlrZSBzbzpcbiAqIGBgYHRzXG4gKiBpbXBvcnQgeyBCVUlMRCB9IGZyb20gJ0BhcHAtZGF0YSc7XG4gKiBgYGBcbiAqIGFuZCBpcyB1c2VkIHRvIGRldGVybWluZSBpZiBhIHBvcnRpb24gb2YgdGhlIG91dHB1dCBvZiBhIFN0ZW5jaWwgX3Byb2plY3RfJ3MgY29tcGlsYXRpb24gc3RlcCBjYW4gYmUgZWxpbWluYXRlZC5cbiAqXG4gKiBlLmcuIFdoZW4gYEJVSUxELmFsbFJlbmRlckZuYCBldmFsdWF0ZXMgdG8gYGZhbHNlYCwgdGhlIGNvbXBpbGVyIHdpbGwgZWxpbWluYXRlIGNvbmRpdGlvbmFsIHN0YXRlbWVudHMgbGlrZTpcbiAqIGBgYHRzXG4gKiBpZiAoQlVJTEQuYWxsUmVuZGVyRm4pIHtcbiAqICAgLy8gc29tZSBjb2RlIHRoYXQgd2lsbCBiZSBlbGltaW5hdGVkIGlmIEJVSUxELmFsbFJlbmRlckZuIGlzIGZhbHNlXG4gKiB9XG4gKiBgYGBcbiAqXG4gKiBgQGFwcC1kYXRhYCwgdGhlIG1vZHVsZSB0aGF0IGBCVUlMRGAgaXMgaW1wb3J0ZWQgZnJvbSwgaXMgYW4gYWxpYXMgZm9yIHRoZSBgQHN0ZW5jaWwvY29yZS9pbnRlcm5hbC9hcHAtZGF0YWAsIGFuZCBpc1xuICogcGFydGlhbGx5IHJlZmVyZW5jZWQgYnkge0BsaW5rIFNURU5DSUxfQVBQX0RBVEFfSUR9LiBUaGUgYHNyYy9jb21waWxlci9idW5kbGUvYXBwLWRhdGEtcGx1Z2luLnRzYCByZWZlcmVuY2VzXG4gKiBgU1RFTkNJTF9BUFBfREFUQV9JRGAgdXNlcyBpdCB0byByZXBsYWNlIHRoZXNlIGRlZmF1bHRzIHdpdGgge0BsaW5rIEJ1aWxkQ29uZGl0aW9uYWxzfSB0aGF0IGFyZSBkZXJpdmVkIGZyb20gYVxuICogU3RlbmNpbCBwcm9qZWN0J3MgY29udGVudHMgKGkuZS4gbWV0YWRhdGEgZnJvbSB0aGUgY29tcG9uZW50cykuIFRoaXMgcmVwbGFjZW1lbnQgaGFwcGVucyBhdCBhIFN0ZW5jaWwgcHJvamVjdCdzXG4gKiBjb21waWxlIHRpbWUuIFN1Y2ggY29kZSBjYW4gYmUgZm91bmQgYXQgYHNyYy9jb21waWxlci9hcHAtY29yZS9hcHAtZGF0YS50c2AuXG4gKi9cbmNvbnN0IEJVSUxEID0ge1xuICAgIGFsbFJlbmRlckZuOiBmYWxzZSxcbiAgICBjbXBEaWRMb2FkOiB0cnVlLFxuICAgIGNtcERpZFVubG9hZDogZmFsc2UsXG4gICAgY21wRGlkVXBkYXRlOiB0cnVlLFxuICAgIGNtcERpZFJlbmRlcjogdHJ1ZSxcbiAgICBjbXBXaWxsTG9hZDogdHJ1ZSxcbiAgICBjbXBXaWxsVXBkYXRlOiB0cnVlLFxuICAgIGNtcFdpbGxSZW5kZXI6IHRydWUsXG4gICAgY29ubmVjdGVkQ2FsbGJhY2s6IHRydWUsXG4gICAgZGlzY29ubmVjdGVkQ2FsbGJhY2s6IHRydWUsXG4gICAgZWxlbWVudDogdHJ1ZSxcbiAgICBldmVudDogdHJ1ZSxcbiAgICBoYXNSZW5kZXJGbjogdHJ1ZSxcbiAgICBsaWZlY3ljbGU6IHRydWUsXG4gICAgaG9zdExpc3RlbmVyOiB0cnVlLFxuICAgIGhvc3RMaXN0ZW5lclRhcmdldFdpbmRvdzogdHJ1ZSxcbiAgICBob3N0TGlzdGVuZXJUYXJnZXREb2N1bWVudDogdHJ1ZSxcbiAgICBob3N0TGlzdGVuZXJUYXJnZXRCb2R5OiB0cnVlLFxuICAgIGhvc3RMaXN0ZW5lclRhcmdldFBhcmVudDogZmFsc2UsXG4gICAgaG9zdExpc3RlbmVyVGFyZ2V0OiB0cnVlLFxuICAgIG1lbWJlcjogdHJ1ZSxcbiAgICBtZXRob2Q6IHRydWUsXG4gICAgbW9kZTogdHJ1ZSxcbiAgICBvYnNlcnZlQXR0cmlidXRlOiB0cnVlLFxuICAgIHByb3A6IHRydWUsXG4gICAgcHJvcE11dGFibGU6IHRydWUsXG4gICAgcmVmbGVjdDogdHJ1ZSxcbiAgICBzY29wZWQ6IHRydWUsXG4gICAgc2hhZG93RG9tOiB0cnVlLFxuICAgIHNsb3Q6IHRydWUsXG4gICAgY3NzQW5ub3RhdGlvbnM6IHRydWUsXG4gICAgc3RhdGU6IHRydWUsXG4gICAgc3R5bGU6IHRydWUsXG4gICAgZm9ybUFzc29jaWF0ZWQ6IGZhbHNlLFxuICAgIHN2ZzogdHJ1ZSxcbiAgICB1cGRhdGFibGU6IHRydWUsXG4gICAgdmRvbUF0dHJpYnV0ZTogdHJ1ZSxcbiAgICB2ZG9tWGxpbms6IHRydWUsXG4gICAgdmRvbUNsYXNzOiB0cnVlLFxuICAgIHZkb21GdW5jdGlvbmFsOiB0cnVlLFxuICAgIHZkb21LZXk6IHRydWUsXG4gICAgdmRvbUxpc3RlbmVyOiB0cnVlLFxuICAgIHZkb21SZWY6IHRydWUsXG4gICAgdmRvbVByb3BPckF0dHI6IHRydWUsXG4gICAgdmRvbVJlbmRlcjogdHJ1ZSxcbiAgICB2ZG9tU3R5bGU6IHRydWUsXG4gICAgdmRvbVRleHQ6IHRydWUsXG4gICAgd2F0Y2hDYWxsYmFjazogdHJ1ZSxcbiAgICB0YXNrUXVldWU6IHRydWUsXG4gICAgaG90TW9kdWxlUmVwbGFjZW1lbnQ6IGZhbHNlLFxuICAgIGlzRGVidWc6IGZhbHNlLFxuICAgIGlzRGV2OiBmYWxzZSxcbiAgICBpc1Rlc3Rpbmc6IGZhbHNlLFxuICAgIGh5ZHJhdGVTZXJ2ZXJTaWRlOiBmYWxzZSxcbiAgICBoeWRyYXRlQ2xpZW50U2lkZTogZmFsc2UsXG4gICAgbGlmZWN5Y2xlRE9NRXZlbnRzOiBmYWxzZSxcbiAgICBsYXp5TG9hZDogZmFsc2UsXG4gICAgcHJvZmlsZTogZmFsc2UsXG4gICAgc2xvdFJlbG9jYXRpb246IHRydWUsXG4gICAgLy8gVE9ETyhTVEVOQ0lMLTkxNCk6IHJlbW92ZSB0aGlzIG9wdGlvbiB3aGVuIGBleHBlcmltZW50YWxTbG90Rml4ZXNgIGlzIHRoZSBkZWZhdWx0IGJlaGF2aW9yXG4gICAgYXBwZW5kQ2hpbGRTbG90Rml4OiBmYWxzZSxcbiAgICAvLyBUT0RPKFNURU5DSUwtOTE0KTogcmVtb3ZlIHRoaXMgb3B0aW9uIHdoZW4gYGV4cGVyaW1lbnRhbFNsb3RGaXhlc2AgaXMgdGhlIGRlZmF1bHQgYmVoYXZpb3JcbiAgICBjbG9uZU5vZGVGaXg6IGZhbHNlLFxuICAgIGh5ZHJhdGVkQXR0cmlidXRlOiBmYWxzZSxcbiAgICBoeWRyYXRlZENsYXNzOiB0cnVlLFxuICAgIHNjcmlwdERhdGFPcHRzOiBmYWxzZSxcbiAgICAvLyBUT0RPKFNURU5DSUwtOTE0KTogcmVtb3ZlIHRoaXMgb3B0aW9uIHdoZW4gYGV4cGVyaW1lbnRhbFNsb3RGaXhlc2AgaXMgdGhlIGRlZmF1bHQgYmVoYXZpb3JcbiAgICBzY29wZWRTbG90VGV4dENvbnRlbnRGaXg6IGZhbHNlLFxuICAgIC8vIFRPRE8oU1RFTkNJTC04NTQpOiBSZW1vdmUgY29kZSByZWxhdGVkIHRvIGxlZ2FjeSBzaGFkb3dEb21TaGltIGZpZWxkXG4gICAgc2hhZG93RG9tU2hpbTogZmFsc2UsXG4gICAgLy8gVE9ETyhTVEVOQ0lMLTkxNCk6IHJlbW92ZSB0aGlzIG9wdGlvbiB3aGVuIGBleHBlcmltZW50YWxTbG90Rml4ZXNgIGlzIHRoZSBkZWZhdWx0IGJlaGF2aW9yXG4gICAgc2xvdENoaWxkTm9kZXNGaXg6IGZhbHNlLFxuICAgIGludmlzaWJsZVByZWh5ZHJhdGlvbjogdHJ1ZSxcbiAgICBwcm9wQm9vbGVhbjogdHJ1ZSxcbiAgICBwcm9wTnVtYmVyOiB0cnVlLFxuICAgIHByb3BTdHJpbmc6IHRydWUsXG4gICAgY29uc3RydWN0YWJsZUNTUzogdHJ1ZSxcbiAgICBjbXBTaG91bGRVcGRhdGU6IHRydWUsXG4gICAgZGV2VG9vbHM6IGZhbHNlLFxuICAgIHNoYWRvd0RlbGVnYXRlc0ZvY3VzOiB0cnVlLFxuICAgIGluaXRpYWxpemVOZXh0VGljazogZmFsc2UsXG4gICAgYXN5bmNMb2FkaW5nOiBmYWxzZSxcbiAgICBhc3luY1F1ZXVlOiBmYWxzZSxcbiAgICB0cmFuc2Zvcm1UYWdOYW1lOiBmYWxzZSxcbiAgICBhdHRhY2hTdHlsZXM6IHRydWUsXG4gICAgLy8gVE9ETyhTVEVOQ0lMLTkxNCk6IHJlbW92ZSB0aGlzIG9wdGlvbiB3aGVuIGBleHBlcmltZW50YWxTbG90Rml4ZXNgIGlzIHRoZSBkZWZhdWx0IGJlaGF2aW9yXG4gICAgZXhwZXJpbWVudGFsU2xvdEZpeGVzOiBmYWxzZSxcbn07XG5jb25zdCBFbnYgPSB7fTtcbmNvbnN0IE5BTUVTUEFDRSA9IC8qIGRlZmF1bHQgKi8gJ2FwcCc7XG5cbmV4cG9ydCB7IEJVSUxELCBFbnYsIE5BTUVTUEFDRSB9O1xuIiwiLy8gVGhlIG1vZHVsZSBjYWNoZVxudmFyIF9fd2VicGFja19tb2R1bGVfY2FjaGVfXyA9IHt9O1xuXG4vLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcblx0dmFyIGNhY2hlZE1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF07XG5cdGlmIChjYWNoZWRNb2R1bGUgIT09IHVuZGVmaW5lZCkge1xuXHRcdHJldHVybiBjYWNoZWRNb2R1bGUuZXhwb3J0cztcblx0fVxuXHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuXHR2YXIgbW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXSA9IHtcblx0XHRpZDogbW9kdWxlSWQsXG5cdFx0Ly8gbm8gbW9kdWxlLmxvYWRlZCBuZWVkZWRcblx0XHRleHBvcnRzOiB7fVxuXHR9O1xuXG5cdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuXHRfX3dlYnBhY2tfbW9kdWxlc19fW21vZHVsZUlkXShtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuXHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuXHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG59XG5cbi8vIGV4cG9zZSB0aGUgbW9kdWxlcyBvYmplY3QgKF9fd2VicGFja19tb2R1bGVzX18pXG5fX3dlYnBhY2tfcmVxdWlyZV9fLm0gPSBfX3dlYnBhY2tfbW9kdWxlc19fO1xuXG4iLCIvLyBnZXREZWZhdWx0RXhwb3J0IGZ1bmN0aW9uIGZvciBjb21wYXRpYmlsaXR5IHdpdGggbm9uLWhhcm1vbnkgbW9kdWxlc1xuX193ZWJwYWNrX3JlcXVpcmVfXy5uID0gKG1vZHVsZSkgPT4ge1xuXHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cblx0XHQoKSA9PiAobW9kdWxlWydkZWZhdWx0J10pIDpcblx0XHQoKSA9PiAobW9kdWxlKTtcblx0X193ZWJwYWNrX3JlcXVpcmVfXy5kKGdldHRlciwgeyBhOiBnZXR0ZXIgfSk7XG5cdHJldHVybiBnZXR0ZXI7XG59OyIsIi8vIGRlZmluZSBnZXR0ZXIgZnVuY3Rpb25zIGZvciBoYXJtb255IGV4cG9ydHNcbl9fd2VicGFja19yZXF1aXJlX18uZCA9IChleHBvcnRzLCBkZWZpbml0aW9uKSA9PiB7XG5cdGZvcih2YXIga2V5IGluIGRlZmluaXRpb24pIHtcblx0XHRpZihfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZGVmaW5pdGlvbiwga2V5KSAmJiAhX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIGtleSkpIHtcblx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBrZXksIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBkZWZpbml0aW9uW2tleV0gfSk7XG5cdFx0fVxuXHR9XG59OyIsIl9fd2VicGFja19yZXF1aXJlX18uZiA9IHt9O1xuLy8gVGhpcyBmaWxlIGNvbnRhaW5zIG9ubHkgdGhlIGVudHJ5IGNodW5rLlxuLy8gVGhlIGNodW5rIGxvYWRpbmcgZnVuY3Rpb24gZm9yIGFkZGl0aW9uYWwgY2h1bmtzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLmUgPSAoY2h1bmtJZCkgPT4ge1xuXHRyZXR1cm4gUHJvbWlzZS5hbGwoT2JqZWN0LmtleXMoX193ZWJwYWNrX3JlcXVpcmVfXy5mKS5yZWR1Y2UoKHByb21pc2VzLCBrZXkpID0+IHtcblx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLmZba2V5XShjaHVua0lkLCBwcm9taXNlcyk7XG5cdFx0cmV0dXJuIHByb21pc2VzO1xuXHR9LCBbXSkpO1xufTsiLCIvLyBUaGlzIGZ1bmN0aW9uIGFsbG93IHRvIHJlZmVyZW5jZSBhc3luYyBjaHVua3Ncbl9fd2VicGFja19yZXF1aXJlX18udSA9IChjaHVua0lkKSA9PiB7XG5cdC8vIHJldHVybiB1cmwgZm9yIGZpbGVuYW1lcyBub3QgYmFzZWQgb24gdGVtcGxhdGVcblx0aWYgKGNodW5rSWQgPT09IFwidmVuZG9ycy1ub2RlX21vZHVsZXNfc3RlbmNpbF9jb3JlX2ludGVybmFsX2NsaWVudF9zaGFkb3ctY3NzX2pzXCIpIHJldHVybiBcIndpZGdldHMvY2h1bmtzL3ZlbmRvcnMtbm9kZV9tb2R1bGVzX3N0ZW5jaWxfY29yZV9pbnRlcm5hbF9jbGllbnRfc2hhZG93LWNzc19qcy5qc1wiO1xuXHRpZiAoY2h1bmtJZCA9PT0gXCJ2ZW5kb3JzLW5vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfc3RlbmNpbF9jb3JlX2ludGVybmFsX2NsaWVudF8tZTZmN2U5XCIpIHJldHVybiBcIndpZGdldHMvY2h1bmtzL3ZlbmRvcnMtbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19zdGVuY2lsX2NvcmVfaW50ZXJuYWxfY2xpZW50Xy1lNmY3ZTkuanNcIjtcblx0aWYgKGNodW5rSWQgPT09IFwibm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19zdGVuY2lsX2NvcmVfaW50ZXJuYWxfY2xpZW50X2xhenlfcmVjLTIyNDM1ZlwiKSByZXR1cm4gXCJ3aWRnZXRzL2NodW5rcy9ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX3N0ZW5jaWxfY29yZV9pbnRlcm5hbF9jbGllbnRfbGF6eV9yZWMtMjI0MzVmLmpzXCI7XG5cdGlmIChjaHVua0lkID09PSBcInZlbmRvcnMtbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50c19kaXN0Xy1mOWMxZTRcIikgcmV0dXJuIFwid2lkZ2V0cy9jaHVua3MvdmVuZG9ycy1ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzX2Rpc3RfLWY5YzFlNC5qc1wiO1xuXHRpZiAoY2h1bmtJZCA9PT0gXCJ2ZW5kb3JzLW5vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHNfZGlzdF8tNjEyY2IwXCIpIHJldHVybiBcIndpZGdldHMvY2h1bmtzL3ZlbmRvcnMtbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50c19kaXN0Xy02MTJjYjAuanNcIjtcblx0aWYgKGNodW5rSWQgPT09IFwibm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19zdGVuY2lsX2NvcmVfaW50ZXJuYWxfY2xpZW50X2xhenlfcmVjLWY5YjY1MTBcIikgcmV0dXJuIFwid2lkZ2V0cy9jaHVua3Mvbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19zdGVuY2lsX2NvcmVfaW50ZXJuYWxfY2xpZW50X2xhenlfcmVjLWY5YjY1MTAuanNcIjtcblx0aWYgKGNodW5rSWQgPT09IFwidmVuZG9ycy1ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzX2Rpc3RfLTZjZDU4MFwiKSByZXR1cm4gXCJ3aWRnZXRzL2NodW5rcy92ZW5kb3JzLW5vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHNfZGlzdF8tNmNkNTgwLmpzXCI7XG5cdGlmIChjaHVua0lkID09PSBcInZlbmRvcnMtbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50c19kaXN0Xy1jYWZiZjFcIikgcmV0dXJuIFwid2lkZ2V0cy9jaHVua3MvdmVuZG9ycy1ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzX2Rpc3RfLWNhZmJmMS5qc1wiO1xuXHRpZiAoY2h1bmtJZCA9PT0gXCJub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX3N0ZW5jaWxfY29yZV9pbnRlcm5hbF9jbGllbnRfbGF6eV9yZWMtNDlkMmZiXCIpIHJldHVybiBcIndpZGdldHMvY2h1bmtzL25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfc3RlbmNpbF9jb3JlX2ludGVybmFsX2NsaWVudF9sYXp5X3JlYy00OWQyZmIuanNcIjtcblx0aWYgKGNodW5rSWQgPT09IFwidmVuZG9ycy1ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzX2Rpc3RfLTA4ODQ1YlwiKSByZXR1cm4gXCJ3aWRnZXRzL2NodW5rcy92ZW5kb3JzLW5vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHNfZGlzdF8tMDg4NDViLmpzXCI7XG5cdGlmIChjaHVua0lkID09PSBcInZlbmRvcnMtbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50c19kaXN0Xy1hZmNkYTFcIikgcmV0dXJuIFwid2lkZ2V0cy9jaHVua3MvdmVuZG9ycy1ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzX2Rpc3RfLWFmY2RhMS5qc1wiO1xuXHRpZiAoY2h1bmtJZCA9PT0gXCJ2ZW5kb3JzLW5vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHNfZGlzdF8tZDdlNTAyXCIpIHJldHVybiBcIndpZGdldHMvY2h1bmtzL3ZlbmRvcnMtbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50c19kaXN0Xy1kN2U1MDIuanNcIjtcblx0aWYgKGNodW5rSWQgPT09IFwidmVuZG9ycy1ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzX2Rpc3RfLWJiY2M4YVwiKSByZXR1cm4gXCJ3aWRnZXRzL2NodW5rcy92ZW5kb3JzLW5vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHNfZGlzdF8tYmJjYzhhLmpzXCI7XG5cdGlmIChjaHVua0lkID09PSBcInZlbmRvcnMtbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50c19kaXN0Xy01ZWY0ZDNcIikgcmV0dXJuIFwid2lkZ2V0cy9jaHVua3MvdmVuZG9ycy1ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzX2Rpc3RfLTVlZjRkMy5qc1wiO1xuXHRpZiAoY2h1bmtJZCA9PT0gXCJ2ZW5kb3JzLW5vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHNfZGlzdF8tOTk4MzZjXCIpIHJldHVybiBcIndpZGdldHMvY2h1bmtzL3ZlbmRvcnMtbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50c19kaXN0Xy05OTgzNmMuanNcIjtcblx0aWYgKGNodW5rSWQgPT09IFwidmVuZG9ycy1ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzX2Rpc3RfLTVjZWUzZlwiKSByZXR1cm4gXCJ3aWRnZXRzL2NodW5rcy92ZW5kb3JzLW5vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHNfZGlzdF8tNWNlZTNmLmpzXCI7XG5cdGlmIChjaHVua0lkID09PSBcIm5vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfc3RlbmNpbF9jb3JlX2ludGVybmFsX2NsaWVudF9sYXp5X3JlYy1mOWI2NTExXCIpIHJldHVybiBcIndpZGdldHMvY2h1bmtzL25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfc3RlbmNpbF9jb3JlX2ludGVybmFsX2NsaWVudF9sYXp5X3JlYy1mOWI2NTExLmpzXCI7XG5cdGlmIChjaHVua0lkID09PSBcIm5vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfc3RlbmNpbF9jb3JlX2ludGVybmFsX2NsaWVudF9sYXp5X3JlYy1mZWI0NDVcIikgcmV0dXJuIFwid2lkZ2V0cy9jaHVua3Mvbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19zdGVuY2lsX2NvcmVfaW50ZXJuYWxfY2xpZW50X2xhenlfcmVjLWZlYjQ0NS5qc1wiO1xuXHRpZiAoY2h1bmtJZCA9PT0gXCJub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX3N0ZW5jaWxfY29yZV9pbnRlcm5hbF9jbGllbnRfbGF6eV9yZWMtNzBmNWM2XCIpIHJldHVybiBcIndpZGdldHMvY2h1bmtzL25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfc3RlbmNpbF9jb3JlX2ludGVybmFsX2NsaWVudF9sYXp5X3JlYy03MGY1YzYuanNcIjtcblx0aWYgKGNodW5rSWQgPT09IFwibm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19zdGVuY2lsX2NvcmVfaW50ZXJuYWxfY2xpZW50X2xhenlfcmVjLTZkYzllOFwiKSByZXR1cm4gXCJ3aWRnZXRzL2NodW5rcy9ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX3N0ZW5jaWxfY29yZV9pbnRlcm5hbF9jbGllbnRfbGF6eV9yZWMtNmRjOWU4LmpzXCI7XG5cdGlmIChjaHVua0lkID09PSBcInZlbmRvcnMtbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50c19kaXN0Xy00OTkzM2JcIikgcmV0dXJuIFwid2lkZ2V0cy9jaHVua3MvdmVuZG9ycy1ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzX2Rpc3RfLTQ5OTMzYi5qc1wiO1xuXHRpZiAoY2h1bmtJZCA9PT0gXCJ2ZW5kb3JzLW5vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHNfZGlzdF8tNDIwMjdhXCIpIHJldHVybiBcIndpZGdldHMvY2h1bmtzL3ZlbmRvcnMtbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50c19kaXN0Xy00MjAyN2EuanNcIjtcblx0aWYgKGNodW5rSWQgPT09IFwidmVuZG9ycy1ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzX2Rpc3RfLTlmY2EyMlwiKSByZXR1cm4gXCJ3aWRnZXRzL2NodW5rcy92ZW5kb3JzLW5vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHNfZGlzdF8tOWZjYTIyLmpzXCI7XG5cdGlmIChjaHVua0lkID09PSBcIm5vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfc3RlbmNpbF9jb3JlX2ludGVybmFsX2NsaWVudF9sYXp5X3JlYy1mOWI2NTEyXCIpIHJldHVybiBcIndpZGdldHMvY2h1bmtzL25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfc3RlbmNpbF9jb3JlX2ludGVybmFsX2NsaWVudF9sYXp5X3JlYy1mOWI2NTEyLmpzXCI7XG5cdGlmIChjaHVua0lkID09PSBcInZlbmRvcnMtbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50c19kaXN0Xy1hZmZiODZcIikgcmV0dXJuIFwid2lkZ2V0cy9jaHVua3MvdmVuZG9ycy1ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzX2Rpc3RfLWFmZmI4Ni5qc1wiO1xuXHRpZiAoY2h1bmtJZCA9PT0gXCJub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX3N0ZW5jaWxfY29yZV9pbnRlcm5hbF9jbGllbnRfbGF6eV9yZWMtMTg1YzVlXCIpIHJldHVybiBcIndpZGdldHMvY2h1bmtzL25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfc3RlbmNpbF9jb3JlX2ludGVybmFsX2NsaWVudF9sYXp5X3JlYy0xODVjNWUuanNcIjtcblx0aWYgKGNodW5rSWQgPT09IFwidmVuZG9ycy1ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzX2Rpc3RfLWZkYTVmYlwiKSByZXR1cm4gXCJ3aWRnZXRzL2NodW5rcy92ZW5kb3JzLW5vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHNfZGlzdF8tZmRhNWZiLmpzXCI7XG5cdGlmIChjaHVua0lkID09PSBcIm5vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfc3RlbmNpbF9jb3JlX2ludGVybmFsX2NsaWVudF9sYXp5X3JlYy1mOWI2NTEzXCIpIHJldHVybiBcIndpZGdldHMvY2h1bmtzL25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfc3RlbmNpbF9jb3JlX2ludGVybmFsX2NsaWVudF9sYXp5X3JlYy1mOWI2NTEzLmpzXCI7XG5cdGlmIChjaHVua0lkID09PSBcInZlbmRvcnMtbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50c19kaXN0Xy01ODBhMzVcIikgcmV0dXJuIFwid2lkZ2V0cy9jaHVua3MvdmVuZG9ycy1ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzX2Rpc3RfLTU4MGEzNS5qc1wiO1xuXHRpZiAoY2h1bmtJZCA9PT0gXCJ2ZW5kb3JzLW5vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHNfZGlzdF8tOGRjOGQ3XCIpIHJldHVybiBcIndpZGdldHMvY2h1bmtzL3ZlbmRvcnMtbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50c19kaXN0Xy04ZGM4ZDcuanNcIjtcblx0aWYgKGNodW5rSWQgPT09IFwidmVuZG9ycy1ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzX2Rpc3RfLTE1ZGNlZlwiKSByZXR1cm4gXCJ3aWRnZXRzL2NodW5rcy92ZW5kb3JzLW5vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHNfZGlzdF8tMTVkY2VmLmpzXCI7XG5cdGlmIChjaHVua0lkID09PSBcIm5vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfc3RlbmNpbF9jb3JlX2ludGVybmFsX2NsaWVudF9sYXp5X3JlYy1mOWI2NTE0XCIpIHJldHVybiBcIndpZGdldHMvY2h1bmtzL25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfc3RlbmNpbF9jb3JlX2ludGVybmFsX2NsaWVudF9sYXp5X3JlYy1mOWI2NTE0LmpzXCI7XG5cdGlmIChjaHVua0lkID09PSBcInZlbmRvcnMtbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50c19kaXN0Xy1lODg1NGJcIikgcmV0dXJuIFwid2lkZ2V0cy9jaHVua3MvdmVuZG9ycy1ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzX2Rpc3RfLWU4ODU0Yi5qc1wiO1xuXHRpZiAoY2h1bmtJZCA9PT0gXCJub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX3N0ZW5jaWxfY29yZV9pbnRlcm5hbF9jbGllbnRfbGF6eV9yZWMtMWU2MDZmXCIpIHJldHVybiBcIndpZGdldHMvY2h1bmtzL25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfc3RlbmNpbF9jb3JlX2ludGVybmFsX2NsaWVudF9sYXp5X3JlYy0xZTYwNmYuanNcIjtcblx0aWYgKGNodW5rSWQgPT09IFwidmVuZG9ycy1ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzX2Rpc3RfLWVjNDIyYlwiKSByZXR1cm4gXCJ3aWRnZXRzL2NodW5rcy92ZW5kb3JzLW5vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHNfZGlzdF8tZWM0MjJiLmpzXCI7XG5cdGlmIChjaHVua0lkID09PSBcInZlbmRvcnMtbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50c19kaXN0Xy0wYTZhNjZcIikgcmV0dXJuIFwid2lkZ2V0cy9jaHVua3MvdmVuZG9ycy1ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzX2Rpc3RfLTBhNmE2Ni5qc1wiO1xuXHRpZiAoY2h1bmtJZCA9PT0gXCJub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX3N0ZW5jaWxfY29yZV9pbnRlcm5hbF9jbGllbnRfbGF6eV9yZWMtZjliNjUxNVwiKSByZXR1cm4gXCJ3aWRnZXRzL2NodW5rcy9ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX3N0ZW5jaWxfY29yZV9pbnRlcm5hbF9jbGllbnRfbGF6eV9yZWMtZjliNjUxNS5qc1wiO1xuXHRpZiAoY2h1bmtJZCA9PT0gXCJub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX3N0ZW5jaWxfY29yZV9pbnRlcm5hbF9jbGllbnRfbGF6eV9yZWMtMTBkYjIxXCIpIHJldHVybiBcIndpZGdldHMvY2h1bmtzL25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfc3RlbmNpbF9jb3JlX2ludGVybmFsX2NsaWVudF9sYXp5X3JlYy0xMGRiMjEuanNcIjtcblx0aWYgKGNodW5rSWQgPT09IFwidmVuZG9ycy1ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzX2Rpc3RfLTNiYWQ0MlwiKSByZXR1cm4gXCJ3aWRnZXRzL2NodW5rcy92ZW5kb3JzLW5vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHNfZGlzdF8tM2JhZDQyLmpzXCI7XG5cdGlmIChjaHVua0lkID09PSBcIm5vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfc3RlbmNpbF9jb3JlX2ludGVybmFsX2NsaWVudF9sYXp5X3JlYy1mOWI2NTE2XCIpIHJldHVybiBcIndpZGdldHMvY2h1bmtzL25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfc3RlbmNpbF9jb3JlX2ludGVybmFsX2NsaWVudF9sYXp5X3JlYy1mOWI2NTE2LmpzXCI7XG5cdGlmIChjaHVua0lkID09PSBcInZlbmRvcnMtbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50c19kaXN0Xy00NTBmZDhcIikgcmV0dXJuIFwid2lkZ2V0cy9jaHVua3MvdmVuZG9ycy1ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzX2Rpc3RfLTQ1MGZkOC5qc1wiO1xuXHRpZiAoY2h1bmtJZCA9PT0gXCJub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX3N0ZW5jaWxfY29yZV9pbnRlcm5hbF9jbGllbnRfbGF6eV9yZWMtZjliNjUxN1wiKSByZXR1cm4gXCJ3aWRnZXRzL2NodW5rcy9ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX3N0ZW5jaWxfY29yZV9pbnRlcm5hbF9jbGllbnRfbGF6eV9yZWMtZjliNjUxNy5qc1wiO1xuXHRpZiAoY2h1bmtJZCA9PT0gXCJ2ZW5kb3JzLW5vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHNfZGlzdF8tOThjZGMxXCIpIHJldHVybiBcIndpZGdldHMvY2h1bmtzL3ZlbmRvcnMtbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50c19kaXN0Xy05OGNkYzEuanNcIjtcblx0aWYgKGNodW5rSWQgPT09IFwidmVuZG9ycy1ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzX2Rpc3RfLWE3MzIyMVwiKSByZXR1cm4gXCJ3aWRnZXRzL2NodW5rcy92ZW5kb3JzLW5vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHNfZGlzdF8tYTczMjIxLmpzXCI7XG5cdGlmIChjaHVua0lkID09PSBcInZlbmRvcnMtbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50c19kaXN0Xy0yYTY5MDRcIikgcmV0dXJuIFwid2lkZ2V0cy9jaHVua3MvdmVuZG9ycy1ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzX2Rpc3RfLTJhNjkwNC5qc1wiO1xuXHRpZiAoY2h1bmtJZCA9PT0gXCJ2ZW5kb3JzLW5vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHNfZGlzdF8tYTI5MmVhXCIpIHJldHVybiBcIndpZGdldHMvY2h1bmtzL3ZlbmRvcnMtbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50c19kaXN0Xy1hMjkyZWEuanNcIjtcblx0aWYgKGNodW5rSWQgPT09IFwidmVuZG9ycy1ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzX2Rpc3RfLTVhYmZiOVwiKSByZXR1cm4gXCJ3aWRnZXRzL2NodW5rcy92ZW5kb3JzLW5vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHNfZGlzdF8tNWFiZmI5LmpzXCI7XG5cdGlmIChjaHVua0lkID09PSBcInZlbmRvcnMtbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50c19kaXN0Xy0zMzUzNjRcIikgcmV0dXJuIFwid2lkZ2V0cy9jaHVua3MvdmVuZG9ycy1ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzX2Rpc3RfLTMzNTM2NC5qc1wiO1xuXHRpZiAoY2h1bmtJZCA9PT0gXCJ2ZW5kb3JzLW5vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHNfZGlzdF8tNTY4YWQ3XCIpIHJldHVybiBcIndpZGdldHMvY2h1bmtzL3ZlbmRvcnMtbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50c19kaXN0Xy01NjhhZDcuanNcIjtcblx0aWYgKGNodW5rSWQgPT09IFwibm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19zdGVuY2lsX2NvcmVfaW50ZXJuYWxfY2xpZW50X2xhenlfcmVjLWY5YjY1MThcIikgcmV0dXJuIFwid2lkZ2V0cy9jaHVua3Mvbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19zdGVuY2lsX2NvcmVfaW50ZXJuYWxfY2xpZW50X2xhenlfcmVjLWY5YjY1MTguanNcIjtcblx0aWYgKGNodW5rSWQgPT09IFwidmVuZG9ycy1ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzX2Rpc3RfLTM3MWE5OVwiKSByZXR1cm4gXCJ3aWRnZXRzL2NodW5rcy92ZW5kb3JzLW5vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHNfZGlzdF8tMzcxYTk5LmpzXCI7XG5cdGlmIChjaHVua0lkID09PSBcIm5vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfc3RlbmNpbF9jb3JlX2ludGVybmFsX2NsaWVudF9sYXp5X3JlYy1mOWI2NTE5XCIpIHJldHVybiBcIndpZGdldHMvY2h1bmtzL25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfc3RlbmNpbF9jb3JlX2ludGVybmFsX2NsaWVudF9sYXp5X3JlYy1mOWI2NTE5LmpzXCI7XG5cdGlmIChjaHVua0lkID09PSBcIm5vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfc3RlbmNpbF9jb3JlX2ludGVybmFsX2NsaWVudF9sYXp5X3JlYy05YjEyYWVcIikgcmV0dXJuIFwid2lkZ2V0cy9jaHVua3Mvbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19zdGVuY2lsX2NvcmVfaW50ZXJuYWxfY2xpZW50X2xhenlfcmVjLTliMTJhZS5qc1wiO1xuXHRpZiAoY2h1bmtJZCA9PT0gXCJ2ZW5kb3JzLW5vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHNfZGlzdF8tYmMwYzIwXCIpIHJldHVybiBcIndpZGdldHMvY2h1bmtzL3ZlbmRvcnMtbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50c19kaXN0Xy1iYzBjMjAuanNcIjtcblx0aWYgKGNodW5rSWQgPT09IFwidmVuZG9ycy1ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzX2Rpc3RfLTY1ZDgxYVwiKSByZXR1cm4gXCJ3aWRnZXRzL2NodW5rcy92ZW5kb3JzLW5vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHNfZGlzdF8tNjVkODFhLmpzXCI7XG5cdGlmIChjaHVua0lkID09PSBcIm5vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfc3RlbmNpbF9jb3JlX2ludGVybmFsX2NsaWVudF9sYXp5X3JlYy04MTY3ZmRcIikgcmV0dXJuIFwid2lkZ2V0cy9jaHVua3Mvbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19zdGVuY2lsX2NvcmVfaW50ZXJuYWxfY2xpZW50X2xhenlfcmVjLTgxNjdmZC5qc1wiO1xuXHRpZiAoY2h1bmtJZCA9PT0gXCJ2ZW5kb3JzLW5vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHNfZGlzdF8tOGE5Njg0XCIpIHJldHVybiBcIndpZGdldHMvY2h1bmtzL3ZlbmRvcnMtbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50c19kaXN0Xy04YTk2ODQuanNcIjtcblx0aWYgKGNodW5rSWQgPT09IFwibm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19zdGVuY2lsX2NvcmVfaW50ZXJuYWxfY2xpZW50X2xhenlfcmVjLWY5YjY1MTEwXCIpIHJldHVybiBcIndpZGdldHMvY2h1bmtzL25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfc3RlbmNpbF9jb3JlX2ludGVybmFsX2NsaWVudF9sYXp5X3JlYy1mOWI2NTExMC5qc1wiO1xuXHRpZiAoY2h1bmtJZCA9PT0gXCJub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX3N0ZW5jaWxfY29yZV9pbnRlcm5hbF9jbGllbnRfbGF6eV9yZWMtMmU0N2VlXCIpIHJldHVybiBcIndpZGdldHMvY2h1bmtzL25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfc3RlbmNpbF9jb3JlX2ludGVybmFsX2NsaWVudF9sYXp5X3JlYy0yZTQ3ZWUuanNcIjtcblx0aWYgKGNodW5rSWQgPT09IFwidmVuZG9ycy1ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzX2Rpc3RfLTZlOWY0MFwiKSByZXR1cm4gXCJ3aWRnZXRzL2NodW5rcy92ZW5kb3JzLW5vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHNfZGlzdF8tNmU5ZjQwLmpzXCI7XG5cdGlmIChjaHVua0lkID09PSBcInZlbmRvcnMtbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50c19kaXN0Xy04NTNiOThcIikgcmV0dXJuIFwid2lkZ2V0cy9jaHVua3MvdmVuZG9ycy1ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzX2Rpc3RfLTg1M2I5OC5qc1wiO1xuXHRpZiAoY2h1bmtJZCA9PT0gXCJ2ZW5kb3JzLW5vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHNfZGlzdF8tYjU5ZTQxXCIpIHJldHVybiBcIndpZGdldHMvY2h1bmtzL3ZlbmRvcnMtbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50c19kaXN0Xy1iNTllNDEuanNcIjtcblx0aWYgKGNodW5rSWQgPT09IFwidmVuZG9ycy1ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzX2Rpc3RfLWNlZDAxZFwiKSByZXR1cm4gXCJ3aWRnZXRzL2NodW5rcy92ZW5kb3JzLW5vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHNfZGlzdF8tY2VkMDFkLmpzXCI7XG5cdGlmIChjaHVua0lkID09PSBcIm5vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfc3RlbmNpbF9jb3JlX2ludGVybmFsX2NsaWVudF9sYXp5X3JlYy0xZWI1NTJcIikgcmV0dXJuIFwid2lkZ2V0cy9jaHVua3Mvbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19zdGVuY2lsX2NvcmVfaW50ZXJuYWxfY2xpZW50X2xhenlfcmVjLTFlYjU1Mi5qc1wiO1xuXHRpZiAoY2h1bmtJZCA9PT0gXCJub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX3N0ZW5jaWxfY29yZV9pbnRlcm5hbF9jbGllbnRfbGF6eV9yZWMtMzZmYjdlXCIpIHJldHVybiBcIndpZGdldHMvY2h1bmtzL25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfc3RlbmNpbF9jb3JlX2ludGVybmFsX2NsaWVudF9sYXp5X3JlYy0zNmZiN2UuanNcIjtcblx0aWYgKGNodW5rSWQgPT09IFwibm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19zdGVuY2lsX2NvcmVfaW50ZXJuYWxfY2xpZW50X2xhenlfcmVjLWQ4MGQxYVwiKSByZXR1cm4gXCJ3aWRnZXRzL2NodW5rcy9ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX3N0ZW5jaWxfY29yZV9pbnRlcm5hbF9jbGllbnRfbGF6eV9yZWMtZDgwZDFhLmpzXCI7XG5cdGlmIChjaHVua0lkID09PSBcIm5vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfc3RlbmNpbF9jb3JlX2ludGVybmFsX2NsaWVudF9sYXp5X3JlYy0wZDA3NGJcIikgcmV0dXJuIFwid2lkZ2V0cy9jaHVua3Mvbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19zdGVuY2lsX2NvcmVfaW50ZXJuYWxfY2xpZW50X2xhenlfcmVjLTBkMDc0Yi5qc1wiO1xuXHRpZiAoY2h1bmtJZCA9PT0gXCJ2ZW5kb3JzLW5vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHNfZGlzdF8tYjFkN2ZjXCIpIHJldHVybiBcIndpZGdldHMvY2h1bmtzL3ZlbmRvcnMtbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50c19kaXN0Xy1iMWQ3ZmMuanNcIjtcblx0aWYgKGNodW5rSWQgPT09IFwidmVuZG9ycy1ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzX2Rpc3RfLTg0YzkzOVwiKSByZXR1cm4gXCJ3aWRnZXRzL2NodW5rcy92ZW5kb3JzLW5vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHNfZGlzdF8tODRjOTM5LmpzXCI7XG5cdGlmIChjaHVua0lkID09PSBcIm5vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfc3RlbmNpbF9jb3JlX2ludGVybmFsX2NsaWVudF9sYXp5X3JlYy1mOWI2NTExMVwiKSByZXR1cm4gXCJ3aWRnZXRzL2NodW5rcy9ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX3N0ZW5jaWxfY29yZV9pbnRlcm5hbF9jbGllbnRfbGF6eV9yZWMtZjliNjUxMTEuanNcIjtcblx0aWYgKGNodW5rSWQgPT09IFwibm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19zdGVuY2lsX2NvcmVfaW50ZXJuYWxfY2xpZW50X2xhenlfcmVjLTMyODY5NlwiKSByZXR1cm4gXCJ3aWRnZXRzL2NodW5rcy9ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX3N0ZW5jaWxfY29yZV9pbnRlcm5hbF9jbGllbnRfbGF6eV9yZWMtMzI4Njk2LmpzXCI7XG5cdGlmIChjaHVua0lkID09PSBcInZlbmRvcnMtbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50c19kaXN0Xy1lNDU4NTFcIikgcmV0dXJuIFwid2lkZ2V0cy9jaHVua3MvdmVuZG9ycy1ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzX2Rpc3RfLWU0NTg1MS5qc1wiO1xuXHRpZiAoY2h1bmtJZCA9PT0gXCJub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX3N0ZW5jaWxfY29yZV9pbnRlcm5hbF9jbGllbnRfbGF6eV9yZWMtZjliNjUxMTJcIikgcmV0dXJuIFwid2lkZ2V0cy9jaHVua3Mvbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19zdGVuY2lsX2NvcmVfaW50ZXJuYWxfY2xpZW50X2xhenlfcmVjLWY5YjY1MTEyLmpzXCI7XG5cdGlmIChjaHVua0lkID09PSBcIm5vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfc3RlbmNpbF9jb3JlX2ludGVybmFsX2NsaWVudF9sYXp5X3JlYy1lMTk2YTdcIikgcmV0dXJuIFwid2lkZ2V0cy9jaHVua3Mvbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19zdGVuY2lsX2NvcmVfaW50ZXJuYWxfY2xpZW50X2xhenlfcmVjLWUxOTZhNy5qc1wiO1xuXHRpZiAoY2h1bmtJZCA9PT0gXCJ2ZW5kb3JzLW5vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHNfZGlzdF8tMzQwODY4XCIpIHJldHVybiBcIndpZGdldHMvY2h1bmtzL3ZlbmRvcnMtbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50c19kaXN0Xy0zNDA4NjguanNcIjtcblx0aWYgKGNodW5rSWQgPT09IFwibm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19zdGVuY2lsX2NvcmVfaW50ZXJuYWxfY2xpZW50X2xhenlfcmVjLTY1ZjlkOVwiKSByZXR1cm4gXCJ3aWRnZXRzL2NodW5rcy9ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX3N0ZW5jaWxfY29yZV9pbnRlcm5hbF9jbGllbnRfbGF6eV9yZWMtNjVmOWQ5LmpzXCI7XG5cdGlmIChjaHVua0lkID09PSBcInZlbmRvcnMtbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50c19kaXN0Xy02NTgwMzhcIikgcmV0dXJuIFwid2lkZ2V0cy9jaHVua3MvdmVuZG9ycy1ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzX2Rpc3RfLTY1ODAzOC5qc1wiO1xuXHRpZiAoY2h1bmtJZCA9PT0gXCJub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX3N0ZW5jaWxfY29yZV9pbnRlcm5hbF9jbGllbnRfbGF6eV9yZWMtZjliNjUxMTNcIikgcmV0dXJuIFwid2lkZ2V0cy9jaHVua3Mvbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19zdGVuY2lsX2NvcmVfaW50ZXJuYWxfY2xpZW50X2xhenlfcmVjLWY5YjY1MTEzLmpzXCI7XG5cdGlmIChjaHVua0lkID09PSBcInZlbmRvcnMtbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50c19kaXN0Xy1mNzNhMDNcIikgcmV0dXJuIFwid2lkZ2V0cy9jaHVua3MvdmVuZG9ycy1ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzX2Rpc3RfLWY3M2EwMy5qc1wiO1xuXHRpZiAoY2h1bmtJZCA9PT0gXCJ2ZW5kb3JzLW5vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHNfZGlzdF8tMzFlMzA1XCIpIHJldHVybiBcIndpZGdldHMvY2h1bmtzL3ZlbmRvcnMtbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50c19kaXN0Xy0zMWUzMDUuanNcIjtcblx0aWYgKGNodW5rSWQgPT09IFwibm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19zdGVuY2lsX2NvcmVfaW50ZXJuYWxfY2xpZW50X2xhenlfcmVjLWY5YjY1MTE0XCIpIHJldHVybiBcIndpZGdldHMvY2h1bmtzL25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfc3RlbmNpbF9jb3JlX2ludGVybmFsX2NsaWVudF9sYXp5X3JlYy1mOWI2NTExNC5qc1wiO1xuXHRpZiAoY2h1bmtJZCA9PT0gXCJ2ZW5kb3JzLW5vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHNfZGlzdF8tNDk5NTllXCIpIHJldHVybiBcIndpZGdldHMvY2h1bmtzL3ZlbmRvcnMtbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50c19kaXN0Xy00OTk1OWUuanNcIjtcblx0aWYgKGNodW5rSWQgPT09IFwibm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19zdGVuY2lsX2NvcmVfaW50ZXJuYWxfY2xpZW50X2xhenlfcmVjLWY5YjY1MTE1XCIpIHJldHVybiBcIndpZGdldHMvY2h1bmtzL25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfc3RlbmNpbF9jb3JlX2ludGVybmFsX2NsaWVudF9sYXp5X3JlYy1mOWI2NTExNS5qc1wiO1xuXHRpZiAoY2h1bmtJZCA9PT0gXCJ2ZW5kb3JzLW5vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHNfZGlzdF8tZjY3NDZkXCIpIHJldHVybiBcIndpZGdldHMvY2h1bmtzL3ZlbmRvcnMtbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50c19kaXN0Xy1mNjc0NmQuanNcIjtcblx0aWYgKGNodW5rSWQgPT09IFwibm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19zdGVuY2lsX2NvcmVfaW50ZXJuYWxfY2xpZW50X2xhenlfcmVjLWY5YjY1MTE2XCIpIHJldHVybiBcIndpZGdldHMvY2h1bmtzL25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfc3RlbmNpbF9jb3JlX2ludGVybmFsX2NsaWVudF9sYXp5X3JlYy1mOWI2NTExNi5qc1wiO1xuXHRpZiAoY2h1bmtJZCA9PT0gXCJub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX3N0ZW5jaWxfY29yZV9pbnRlcm5hbF9jbGllbnRfbGF6eV9yZWMtZGVjZTBiXCIpIHJldHVybiBcIndpZGdldHMvY2h1bmtzL25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfc3RlbmNpbF9jb3JlX2ludGVybmFsX2NsaWVudF9sYXp5X3JlYy1kZWNlMGIuanNcIjtcblx0aWYgKGNodW5rSWQgPT09IFwidmVuZG9ycy1ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzX2Rpc3RfLTFiYWRkNlwiKSByZXR1cm4gXCJ3aWRnZXRzL2NodW5rcy92ZW5kb3JzLW5vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHNfZGlzdF8tMWJhZGQ2LmpzXCI7XG5cdGlmIChjaHVua0lkID09PSBcIm5vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfc3RlbmNpbF9jb3JlX2ludGVybmFsX2NsaWVudF9sYXp5X3JlYy1mOWI2NTExN1wiKSByZXR1cm4gXCJ3aWRnZXRzL2NodW5rcy9ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX3N0ZW5jaWxfY29yZV9pbnRlcm5hbF9jbGllbnRfbGF6eV9yZWMtZjliNjUxMTcuanNcIjtcblx0aWYgKGNodW5rSWQgPT09IFwidmVuZG9ycy1ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzX2Rpc3RfLTJmYmMzM1wiKSByZXR1cm4gXCJ3aWRnZXRzL2NodW5rcy92ZW5kb3JzLW5vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHNfZGlzdF8tMmZiYzMzLmpzXCI7XG5cdGlmIChjaHVua0lkID09PSBcIm5vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfc3RlbmNpbF9jb3JlX2ludGVybmFsX2NsaWVudF9sYXp5X3JlYy1mOWI2NTExOFwiKSByZXR1cm4gXCJ3aWRnZXRzL2NodW5rcy9ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX3N0ZW5jaWxfY29yZV9pbnRlcm5hbF9jbGllbnRfbGF6eV9yZWMtZjliNjUxMTguanNcIjtcblx0aWYgKGNodW5rSWQgPT09IFwidmVuZG9ycy1ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzX2Rpc3RfLWY2MjA0Y1wiKSByZXR1cm4gXCJ3aWRnZXRzL2NodW5rcy92ZW5kb3JzLW5vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHNfZGlzdF8tZjYyMDRjLmpzXCI7XG5cdGlmIChjaHVua0lkID09PSBcIm5vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfc3RlbmNpbF9jb3JlX2ludGVybmFsX2NsaWVudF9sYXp5X3JlYy1mOWI2NTExOVwiKSByZXR1cm4gXCJ3aWRnZXRzL2NodW5rcy9ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX3N0ZW5jaWxfY29yZV9pbnRlcm5hbF9jbGllbnRfbGF6eV9yZWMtZjliNjUxMTkuanNcIjtcblx0aWYgKGNodW5rSWQgPT09IFwidmVuZG9ycy1ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzX2Rpc3RfLTAwODVjMlwiKSByZXR1cm4gXCJ3aWRnZXRzL2NodW5rcy92ZW5kb3JzLW5vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHNfZGlzdF8tMDA4NWMyLmpzXCI7XG5cdGlmIChjaHVua0lkID09PSBcIm5vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfc3RlbmNpbF9jb3JlX2ludGVybmFsX2NsaWVudF9sYXp5X3JlYy1mOWI2NTEyMFwiKSByZXR1cm4gXCJ3aWRnZXRzL2NodW5rcy9ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX3N0ZW5jaWxfY29yZV9pbnRlcm5hbF9jbGllbnRfbGF6eV9yZWMtZjliNjUxMjAuanNcIjtcblx0aWYgKGNodW5rSWQgPT09IFwidmVuZG9ycy1ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzX2Rpc3RfLWVkYzkzNlwiKSByZXR1cm4gXCJ3aWRnZXRzL2NodW5rcy92ZW5kb3JzLW5vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHNfZGlzdF8tZWRjOTM2LmpzXCI7XG5cdGlmIChjaHVua0lkID09PSBcIm5vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfc3RlbmNpbF9jb3JlX2ludGVybmFsX2NsaWVudF9sYXp5X3JlYy1mOWI2NTEyMVwiKSByZXR1cm4gXCJ3aWRnZXRzL2NodW5rcy9ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX3N0ZW5jaWxfY29yZV9pbnRlcm5hbF9jbGllbnRfbGF6eV9yZWMtZjliNjUxMjEuanNcIjtcblx0aWYgKGNodW5rSWQgPT09IFwidmVuZG9ycy1ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzX2Rpc3RfLTU2ZjRhM1wiKSByZXR1cm4gXCJ3aWRnZXRzL2NodW5rcy92ZW5kb3JzLW5vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHNfZGlzdF8tNTZmNGEzLmpzXCI7XG5cdGlmIChjaHVua0lkID09PSBcIm5vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfc3RlbmNpbF9jb3JlX2ludGVybmFsX2NsaWVudF9sYXp5X3JlYy1mOWI2NTEyMlwiKSByZXR1cm4gXCJ3aWRnZXRzL2NodW5rcy9ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX3N0ZW5jaWxfY29yZV9pbnRlcm5hbF9jbGllbnRfbGF6eV9yZWMtZjliNjUxMjIuanNcIjtcblx0aWYgKGNodW5rSWQgPT09IFwidmVuZG9ycy1ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzX2Rpc3RfLTQyMjIyYlwiKSByZXR1cm4gXCJ3aWRnZXRzL2NodW5rcy92ZW5kb3JzLW5vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHNfZGlzdF8tNDIyMjJiLmpzXCI7XG5cdGlmIChjaHVua0lkID09PSBcInZlbmRvcnMtbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50c19kaXN0Xy1iZmYxMjhcIikgcmV0dXJuIFwid2lkZ2V0cy9jaHVua3MvdmVuZG9ycy1ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzX2Rpc3RfLWJmZjEyOC5qc1wiO1xuXHRpZiAoY2h1bmtJZCA9PT0gXCJub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX3N0ZW5jaWxfY29yZV9pbnRlcm5hbF9jbGllbnRfbGF6eV9yZWMtZjliNjUxMjNcIikgcmV0dXJuIFwid2lkZ2V0cy9jaHVua3Mvbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19zdGVuY2lsX2NvcmVfaW50ZXJuYWxfY2xpZW50X2xhenlfcmVjLWY5YjY1MTIzLmpzXCI7XG5cdGlmIChjaHVua0lkID09PSBcInZlbmRvcnMtbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50c19kaXN0Xy0wYTY1N2VcIikgcmV0dXJuIFwid2lkZ2V0cy9jaHVua3MvdmVuZG9ycy1ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzX2Rpc3RfLTBhNjU3ZS5qc1wiO1xuXHRpZiAoY2h1bmtJZCA9PT0gXCJub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX3N0ZW5jaWxfY29yZV9pbnRlcm5hbF9jbGllbnRfbGF6eV9yZWMtZjliNjUxMjRcIikgcmV0dXJuIFwid2lkZ2V0cy9jaHVua3Mvbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19zdGVuY2lsX2NvcmVfaW50ZXJuYWxfY2xpZW50X2xhenlfcmVjLWY5YjY1MTI0LmpzXCI7XG5cdGlmIChjaHVua0lkID09PSBcInZlbmRvcnMtbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50c19kaXN0Xy05YjBhOWJcIikgcmV0dXJuIFwid2lkZ2V0cy9jaHVua3MvdmVuZG9ycy1ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzX2Rpc3RfLTliMGE5Yi5qc1wiO1xuXHRpZiAoY2h1bmtJZCA9PT0gXCJub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX3N0ZW5jaWxfY29yZV9pbnRlcm5hbF9jbGllbnRfbGF6eV9yZWMtZjliNjUxMjVcIikgcmV0dXJuIFwid2lkZ2V0cy9jaHVua3Mvbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19zdGVuY2lsX2NvcmVfaW50ZXJuYWxfY2xpZW50X2xhenlfcmVjLWY5YjY1MTI1LmpzXCI7XG5cdGlmIChjaHVua0lkID09PSBcInZlbmRvcnMtbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50c19kaXN0Xy1mYzVlYmZcIikgcmV0dXJuIFwid2lkZ2V0cy9jaHVua3MvdmVuZG9ycy1ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzX2Rpc3RfLWZjNWViZi5qc1wiO1xuXHRpZiAoY2h1bmtJZCA9PT0gXCJub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX3N0ZW5jaWxfY29yZV9pbnRlcm5hbF9jbGllbnRfbGF6eV9yZWMtNzdiN2RkXCIpIHJldHVybiBcIndpZGdldHMvY2h1bmtzL25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfc3RlbmNpbF9jb3JlX2ludGVybmFsX2NsaWVudF9sYXp5X3JlYy03N2I3ZGQuanNcIjtcblx0aWYgKGNodW5rSWQgPT09IFwidmVuZG9ycy1ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzX2Rpc3RfLWJkMzJiOFwiKSByZXR1cm4gXCJ3aWRnZXRzL2NodW5rcy92ZW5kb3JzLW5vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHNfZGlzdF8tYmQzMmI4LmpzXCI7XG5cdGlmIChjaHVua0lkID09PSBcInZlbmRvcnMtbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50c19kaXN0Xy0yYmRlZGZcIikgcmV0dXJuIFwid2lkZ2V0cy9jaHVua3MvdmVuZG9ycy1ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzX2Rpc3RfLTJiZGVkZi5qc1wiO1xuXHRpZiAoY2h1bmtJZCA9PT0gXCJub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX3N0ZW5jaWxfY29yZV9pbnRlcm5hbF9jbGllbnRfbGF6eV9yZWMtZjliNjUxMjZcIikgcmV0dXJuIFwid2lkZ2V0cy9jaHVua3Mvbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19zdGVuY2lsX2NvcmVfaW50ZXJuYWxfY2xpZW50X2xhenlfcmVjLWY5YjY1MTI2LmpzXCI7XG5cdGlmIChjaHVua0lkID09PSBcInZlbmRvcnMtbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50c19kaXN0Xy0xNjZlN2ZcIikgcmV0dXJuIFwid2lkZ2V0cy9jaHVua3MvdmVuZG9ycy1ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzX2Rpc3RfLTE2NmU3Zi5qc1wiO1xuXHRpZiAoY2h1bmtJZCA9PT0gXCJub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX3N0ZW5jaWxfY29yZV9pbnRlcm5hbF9jbGllbnRfbGF6eV9yZWMtZjliNjUxMjdcIikgcmV0dXJuIFwid2lkZ2V0cy9jaHVua3Mvbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19zdGVuY2lsX2NvcmVfaW50ZXJuYWxfY2xpZW50X2xhenlfcmVjLWY5YjY1MTI3LmpzXCI7XG5cdGlmIChjaHVua0lkID09PSBcInZlbmRvcnMtbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50c19kaXN0Xy1jNzdiOGRcIikgcmV0dXJuIFwid2lkZ2V0cy9jaHVua3MvdmVuZG9ycy1ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzX2Rpc3RfLWM3N2I4ZC5qc1wiO1xuXHRpZiAoY2h1bmtJZCA9PT0gXCJub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX3N0ZW5jaWxfY29yZV9pbnRlcm5hbF9jbGllbnRfbGF6eV9yZWMtZjliNjUxMjhcIikgcmV0dXJuIFwid2lkZ2V0cy9jaHVua3Mvbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19zdGVuY2lsX2NvcmVfaW50ZXJuYWxfY2xpZW50X2xhenlfcmVjLWY5YjY1MTI4LmpzXCI7XG5cdGlmIChjaHVua0lkID09PSBcInZlbmRvcnMtbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50c19kaXN0Xy04N2M5Y2RcIikgcmV0dXJuIFwid2lkZ2V0cy9jaHVua3MvdmVuZG9ycy1ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzX2Rpc3RfLTg3YzljZC5qc1wiO1xuXHRpZiAoY2h1bmtJZCA9PT0gXCJub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX3N0ZW5jaWxfY29yZV9pbnRlcm5hbF9jbGllbnRfbGF6eV9yZWMtZjliNjUxMjlcIikgcmV0dXJuIFwid2lkZ2V0cy9jaHVua3Mvbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19zdGVuY2lsX2NvcmVfaW50ZXJuYWxfY2xpZW50X2xhenlfcmVjLWY5YjY1MTI5LmpzXCI7XG5cdGlmIChjaHVua0lkID09PSBcInZlbmRvcnMtbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50c19kaXN0Xy0zMjY4OGRcIikgcmV0dXJuIFwid2lkZ2V0cy9jaHVua3MvdmVuZG9ycy1ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzX2Rpc3RfLTMyNjg4ZC5qc1wiO1xuXHRpZiAoY2h1bmtJZCA9PT0gXCJub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX3N0ZW5jaWxfY29yZV9pbnRlcm5hbF9jbGllbnRfbGF6eV9yZWMtOGJlZjM4XCIpIHJldHVybiBcIndpZGdldHMvY2h1bmtzL25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfc3RlbmNpbF9jb3JlX2ludGVybmFsX2NsaWVudF9sYXp5X3JlYy04YmVmMzguanNcIjtcblx0aWYgKGNodW5rSWQgPT09IFwidmVuZG9ycy1ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzX2Rpc3RfLTBhOTc1YVwiKSByZXR1cm4gXCJ3aWRnZXRzL2NodW5rcy92ZW5kb3JzLW5vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHNfZGlzdF8tMGE5NzVhLmpzXCI7XG5cdGlmIChjaHVua0lkID09PSBcIm5vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfc3RlbmNpbF9jb3JlX2ludGVybmFsX2NsaWVudF9sYXp5X3JlYy1mOWI2NTEzMFwiKSByZXR1cm4gXCJ3aWRnZXRzL2NodW5rcy9ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX3N0ZW5jaWxfY29yZV9pbnRlcm5hbF9jbGllbnRfbGF6eV9yZWMtZjliNjUxMzAuanNcIjtcblx0aWYgKGNodW5rSWQgPT09IFwidmVuZG9ycy1ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzX2Rpc3RfLTQ5ZTEwN1wiKSByZXR1cm4gXCJ3aWRnZXRzL2NodW5rcy92ZW5kb3JzLW5vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHNfZGlzdF8tNDllMTA3LmpzXCI7XG5cdGlmIChjaHVua0lkID09PSBcIm5vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfc3RlbmNpbF9jb3JlX2ludGVybmFsX2NsaWVudF9sYXp5X3JlYy1mOWI2NTEzMVwiKSByZXR1cm4gXCJ3aWRnZXRzL2NodW5rcy9ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX3N0ZW5jaWxfY29yZV9pbnRlcm5hbF9jbGllbnRfbGF6eV9yZWMtZjliNjUxMzEuanNcIjtcblx0aWYgKGNodW5rSWQgPT09IFwidmVuZG9ycy1ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzX2Rpc3RfLTg1Nzg0MVwiKSByZXR1cm4gXCJ3aWRnZXRzL2NodW5rcy92ZW5kb3JzLW5vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHNfZGlzdF8tODU3ODQxLmpzXCI7XG5cdGlmIChjaHVua0lkID09PSBcIm5vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfc3RlbmNpbF9jb3JlX2ludGVybmFsX2NsaWVudF9sYXp5X3JlYy1mOWI2NTEzMlwiKSByZXR1cm4gXCJ3aWRnZXRzL2NodW5rcy9ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX3N0ZW5jaWxfY29yZV9pbnRlcm5hbF9jbGllbnRfbGF6eV9yZWMtZjliNjUxMzIuanNcIjtcblx0aWYgKGNodW5rSWQgPT09IFwidmVuZG9ycy1ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzX2Rpc3RfLWRhNWE0Y1wiKSByZXR1cm4gXCJ3aWRnZXRzL2NodW5rcy92ZW5kb3JzLW5vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHNfZGlzdF8tZGE1YTRjLmpzXCI7XG5cdGlmIChjaHVua0lkID09PSBcIm5vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfc3RlbmNpbF9jb3JlX2ludGVybmFsX2NsaWVudF9sYXp5X3JlYy1mOWI2NTEzM1wiKSByZXR1cm4gXCJ3aWRnZXRzL2NodW5rcy9ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX3N0ZW5jaWxfY29yZV9pbnRlcm5hbF9jbGllbnRfbGF6eV9yZWMtZjliNjUxMzMuanNcIjtcblx0aWYgKGNodW5rSWQgPT09IFwidmVuZG9ycy1ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzX2Rpc3RfLTc4MzU5NVwiKSByZXR1cm4gXCJ3aWRnZXRzL2NodW5rcy92ZW5kb3JzLW5vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHNfZGlzdF8tNzgzNTk1LmpzXCI7XG5cdGlmIChjaHVua0lkID09PSBcIm5vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfc3RlbmNpbF9jb3JlX2ludGVybmFsX2NsaWVudF9sYXp5X3JlYy1mOWI2NTEzNFwiKSByZXR1cm4gXCJ3aWRnZXRzL2NodW5rcy9ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX3N0ZW5jaWxfY29yZV9pbnRlcm5hbF9jbGllbnRfbGF6eV9yZWMtZjliNjUxMzQuanNcIjtcblx0aWYgKGNodW5rSWQgPT09IFwibm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19zdGVuY2lsX2NvcmVfaW50ZXJuYWxfY2xpZW50X2xhenlfcmVjLWQ0MjUxZlwiKSByZXR1cm4gXCJ3aWRnZXRzL2NodW5rcy9ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX3N0ZW5jaWxfY29yZV9pbnRlcm5hbF9jbGllbnRfbGF6eV9yZWMtZDQyNTFmLmpzXCI7XG5cdGlmIChjaHVua0lkID09PSBcInZlbmRvcnMtbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50c19kaXN0Xy1jYTJiMDBcIikgcmV0dXJuIFwid2lkZ2V0cy9jaHVua3MvdmVuZG9ycy1ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzX2Rpc3RfLWNhMmIwMC5qc1wiO1xuXHRpZiAoY2h1bmtJZCA9PT0gXCJub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX3N0ZW5jaWxfY29yZV9pbnRlcm5hbF9jbGllbnRfbGF6eV9yZWMtZjliNjUxMzVcIikgcmV0dXJuIFwid2lkZ2V0cy9jaHVua3Mvbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19zdGVuY2lsX2NvcmVfaW50ZXJuYWxfY2xpZW50X2xhenlfcmVjLWY5YjY1MTM1LmpzXCI7XG5cdGlmIChjaHVua0lkID09PSBcIm5vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfc3RlbmNpbF9jb3JlX2ludGVybmFsX2NsaWVudF9sYXp5X3JlYy1lNjQyYjVcIikgcmV0dXJuIFwid2lkZ2V0cy9jaHVua3Mvbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19zdGVuY2lsX2NvcmVfaW50ZXJuYWxfY2xpZW50X2xhenlfcmVjLWU2NDJiNS5qc1wiO1xuXHRpZiAoY2h1bmtJZCA9PT0gXCJub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX3N0ZW5jaWxfY29yZV9pbnRlcm5hbF9jbGllbnRfbGF6eV9yZWMtOGRjOTRkXCIpIHJldHVybiBcIndpZGdldHMvY2h1bmtzL25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfc3RlbmNpbF9jb3JlX2ludGVybmFsX2NsaWVudF9sYXp5X3JlYy04ZGM5NGQuanNcIjtcblx0aWYgKGNodW5rSWQgPT09IFwidmVuZG9ycy1ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzX2Rpc3RfLWNmMTVmMVwiKSByZXR1cm4gXCJ3aWRnZXRzL2NodW5rcy92ZW5kb3JzLW5vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHNfZGlzdF8tY2YxNWYxLmpzXCI7XG5cdGlmIChjaHVua0lkID09PSBcInZlbmRvcnMtbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50c19kaXN0Xy0zNTA1YTNcIikgcmV0dXJuIFwid2lkZ2V0cy9jaHVua3MvdmVuZG9ycy1ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzX2Rpc3RfLTM1MDVhMy5qc1wiO1xuXHRpZiAoY2h1bmtJZCA9PT0gXCJub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX3N0ZW5jaWxfY29yZV9pbnRlcm5hbF9jbGllbnRfbGF6eV9yZWMtZjliNjUxMzZcIikgcmV0dXJuIFwid2lkZ2V0cy9jaHVua3Mvbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19zdGVuY2lsX2NvcmVfaW50ZXJuYWxfY2xpZW50X2xhenlfcmVjLWY5YjY1MTM2LmpzXCI7XG5cdGlmIChjaHVua0lkID09PSBcIm5vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfc3RlbmNpbF9jb3JlX2ludGVybmFsX2NsaWVudF9sYXp5X3JlYy1iYzBhMzdcIikgcmV0dXJuIFwid2lkZ2V0cy9jaHVua3Mvbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19zdGVuY2lsX2NvcmVfaW50ZXJuYWxfY2xpZW50X2xhenlfcmVjLWJjMGEzNy5qc1wiO1xuXHRpZiAoY2h1bmtJZCA9PT0gXCJ2ZW5kb3JzLW5vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHNfZGlzdF8tZGI0NGJiXCIpIHJldHVybiBcIndpZGdldHMvY2h1bmtzL3ZlbmRvcnMtbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50c19kaXN0Xy1kYjQ0YmIuanNcIjtcblx0aWYgKGNodW5rSWQgPT09IFwibm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19zdGVuY2lsX2NvcmVfaW50ZXJuYWxfY2xpZW50X2xhenlfcmVjLWEyNzExMlwiKSByZXR1cm4gXCJ3aWRnZXRzL2NodW5rcy9ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX3N0ZW5jaWxfY29yZV9pbnRlcm5hbF9jbGllbnRfbGF6eV9yZWMtYTI3MTEyLmpzXCI7XG5cdGlmIChjaHVua0lkID09PSBcIm5vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfc3RlbmNpbF9jb3JlX2ludGVybmFsX2NsaWVudF9sYXp5X3JlYy0yNGRhOTZcIikgcmV0dXJuIFwid2lkZ2V0cy9jaHVua3Mvbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19zdGVuY2lsX2NvcmVfaW50ZXJuYWxfY2xpZW50X2xhenlfcmVjLTI0ZGE5Ni5qc1wiO1xuXHRpZiAoY2h1bmtJZCA9PT0gXCJ2ZW5kb3JzLW5vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHNfZGlzdF8tY2IxNjdiXCIpIHJldHVybiBcIndpZGdldHMvY2h1bmtzL3ZlbmRvcnMtbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50c19kaXN0Xy1jYjE2N2IuanNcIjtcblx0aWYgKGNodW5rSWQgPT09IFwibm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19zdGVuY2lsX2NvcmVfaW50ZXJuYWxfY2xpZW50X2xhenlfcmVjLWRjMjk3MVwiKSByZXR1cm4gXCJ3aWRnZXRzL2NodW5rcy9ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX3N0ZW5jaWxfY29yZV9pbnRlcm5hbF9jbGllbnRfbGF6eV9yZWMtZGMyOTcxLmpzXCI7XG5cdGlmIChjaHVua0lkID09PSBcIm5vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfc3RlbmNpbF9jb3JlX2ludGVybmFsX2NsaWVudF9sYXp5X3JlYy0yZjA5ZDhcIikgcmV0dXJuIFwid2lkZ2V0cy9jaHVua3Mvbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19zdGVuY2lsX2NvcmVfaW50ZXJuYWxfY2xpZW50X2xhenlfcmVjLTJmMDlkOC5qc1wiO1xuXHRpZiAoY2h1bmtJZCA9PT0gXCJub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX3N0ZW5jaWxfY29yZV9pbnRlcm5hbF9jbGllbnRfbGF6eV9yZWMtZmZjOTk0XCIpIHJldHVybiBcIndpZGdldHMvY2h1bmtzL25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfc3RlbmNpbF9jb3JlX2ludGVybmFsX2NsaWVudF9sYXp5X3JlYy1mZmM5OTQuanNcIjtcblx0aWYgKGNodW5rSWQgPT09IFwidmVuZG9ycy1ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzX2Rpc3RfLTdiMzU5OVwiKSByZXR1cm4gXCJ3aWRnZXRzL2NodW5rcy92ZW5kb3JzLW5vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHNfZGlzdF8tN2IzNTk5LmpzXCI7XG5cdGlmIChjaHVua0lkID09PSBcIm5vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfc3RlbmNpbF9jb3JlX2ludGVybmFsX2NsaWVudF9sYXp5X3JlYy1mOWI2NTEzN1wiKSByZXR1cm4gXCJ3aWRnZXRzL2NodW5rcy9ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX3N0ZW5jaWxfY29yZV9pbnRlcm5hbF9jbGllbnRfbGF6eV9yZWMtZjliNjUxMzcuanNcIjtcblx0aWYgKGNodW5rSWQgPT09IFwibm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19zdGVuY2lsX2NvcmVfaW50ZXJuYWxfY2xpZW50X2xhenlfcmVjLTM5OTBmYlwiKSByZXR1cm4gXCJ3aWRnZXRzL2NodW5rcy9ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX3N0ZW5jaWxfY29yZV9pbnRlcm5hbF9jbGllbnRfbGF6eV9yZWMtMzk5MGZiLmpzXCI7XG5cdGlmIChjaHVua0lkID09PSBcInZlbmRvcnMtbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50c19kaXN0Xy1mNDM2YWZcIikgcmV0dXJuIFwid2lkZ2V0cy9jaHVua3MvdmVuZG9ycy1ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzX2Rpc3RfLWY0MzZhZi5qc1wiO1xuXHRpZiAoY2h1bmtJZCA9PT0gXCJub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX3N0ZW5jaWxfY29yZV9pbnRlcm5hbF9jbGllbnRfbGF6eV9yZWMtZjliNjUxMzhcIikgcmV0dXJuIFwid2lkZ2V0cy9jaHVua3Mvbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19zdGVuY2lsX2NvcmVfaW50ZXJuYWxfY2xpZW50X2xhenlfcmVjLWY5YjY1MTM4LmpzXCI7XG5cdGlmIChjaHVua0lkID09PSBcInZlbmRvcnMtbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50c19kaXN0Xy04ZjA1NzVcIikgcmV0dXJuIFwid2lkZ2V0cy9jaHVua3MvdmVuZG9ycy1ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzX2Rpc3RfLThmMDU3NS5qc1wiO1xuXHRpZiAoY2h1bmtJZCA9PT0gXCJub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX3N0ZW5jaWxfY29yZV9pbnRlcm5hbF9jbGllbnRfbGF6eV9yZWMtZjliNjUxMzlcIikgcmV0dXJuIFwid2lkZ2V0cy9jaHVua3Mvbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19zdGVuY2lsX2NvcmVfaW50ZXJuYWxfY2xpZW50X2xhenlfcmVjLWY5YjY1MTM5LmpzXCI7XG5cdGlmIChjaHVua0lkID09PSBcInZlbmRvcnMtbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50c19kaXN0Xy0yOGY4YjhcIikgcmV0dXJuIFwid2lkZ2V0cy9jaHVua3MvdmVuZG9ycy1ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzX2Rpc3RfLTI4ZjhiOC5qc1wiO1xuXHRpZiAoY2h1bmtJZCA9PT0gXCJub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX3N0ZW5jaWxfY29yZV9pbnRlcm5hbF9jbGllbnRfbGF6eV9yZWMtZjliNjUxNDBcIikgcmV0dXJuIFwid2lkZ2V0cy9jaHVua3Mvbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19zdGVuY2lsX2NvcmVfaW50ZXJuYWxfY2xpZW50X2xhenlfcmVjLWY5YjY1MTQwLmpzXCI7XG5cdGlmIChjaHVua0lkID09PSBcInZlbmRvcnMtbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50c19kaXN0Xy00NTdhZmRcIikgcmV0dXJuIFwid2lkZ2V0cy9jaHVua3MvdmVuZG9ycy1ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzX2Rpc3RfLTQ1N2FmZC5qc1wiO1xuXHRpZiAoY2h1bmtJZCA9PT0gXCJub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX3N0ZW5jaWxfY29yZV9pbnRlcm5hbF9jbGllbnRfbGF6eV9yZWMtZjliNjUxNDFcIikgcmV0dXJuIFwid2lkZ2V0cy9jaHVua3Mvbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19zdGVuY2lsX2NvcmVfaW50ZXJuYWxfY2xpZW50X2xhenlfcmVjLWY5YjY1MTQxLmpzXCI7XG5cdGlmIChjaHVua0lkID09PSBcInZlbmRvcnMtbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50c19kaXN0Xy0zYzQ2YmRcIikgcmV0dXJuIFwid2lkZ2V0cy9jaHVua3MvdmVuZG9ycy1ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzX2Rpc3RfLTNjNDZiZC5qc1wiO1xuXHRpZiAoY2h1bmtJZCA9PT0gXCJub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX3N0ZW5jaWxfY29yZV9pbnRlcm5hbF9jbGllbnRfbGF6eV9yZWMtZjliNjUxNDJcIikgcmV0dXJuIFwid2lkZ2V0cy9jaHVua3Mvbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19zdGVuY2lsX2NvcmVfaW50ZXJuYWxfY2xpZW50X2xhenlfcmVjLWY5YjY1MTQyLmpzXCI7XG5cdGlmIChjaHVua0lkID09PSBcInZlbmRvcnMtbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50c19kaXN0Xy01MDY5MDFcIikgcmV0dXJuIFwid2lkZ2V0cy9jaHVua3MvdmVuZG9ycy1ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzX2Rpc3RfLTUwNjkwMS5qc1wiO1xuXHRpZiAoY2h1bmtJZCA9PT0gXCJub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX3N0ZW5jaWxfY29yZV9pbnRlcm5hbF9jbGllbnRfbGF6eV9yZWMtZjliNjUxNDNcIikgcmV0dXJuIFwid2lkZ2V0cy9jaHVua3Mvbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19zdGVuY2lsX2NvcmVfaW50ZXJuYWxfY2xpZW50X2xhenlfcmVjLWY5YjY1MTQzLmpzXCI7XG5cdGlmIChjaHVua0lkID09PSBcInZlbmRvcnMtbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50c19kaXN0Xy01Yzk5ZGZcIikgcmV0dXJuIFwid2lkZ2V0cy9jaHVua3MvdmVuZG9ycy1ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzX2Rpc3RfLTVjOTlkZi5qc1wiO1xuXHRpZiAoY2h1bmtJZCA9PT0gXCJub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX3N0ZW5jaWxfY29yZV9pbnRlcm5hbF9jbGllbnRfbGF6eV9yZWMtZjliNjUxNDRcIikgcmV0dXJuIFwid2lkZ2V0cy9jaHVua3Mvbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19zdGVuY2lsX2NvcmVfaW50ZXJuYWxfY2xpZW50X2xhenlfcmVjLWY5YjY1MTQ0LmpzXCI7XG5cdGlmIChjaHVua0lkID09PSBcIm5vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfc3RlbmNpbF9jb3JlX2ludGVybmFsX2NsaWVudF9sYXp5X3JlYy0zOTY0OTFcIikgcmV0dXJuIFwid2lkZ2V0cy9jaHVua3Mvbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19zdGVuY2lsX2NvcmVfaW50ZXJuYWxfY2xpZW50X2xhenlfcmVjLTM5NjQ5MS5qc1wiO1xuXHRpZiAoY2h1bmtJZCA9PT0gXCJ2ZW5kb3JzLW5vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHNfZGlzdF8tMmI4ZWQ4XCIpIHJldHVybiBcIndpZGdldHMvY2h1bmtzL3ZlbmRvcnMtbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50c19kaXN0Xy0yYjhlZDguanNcIjtcblx0aWYgKGNodW5rSWQgPT09IFwibm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19zdGVuY2lsX2NvcmVfaW50ZXJuYWxfY2xpZW50X2xhenlfcmVjLWY5YjY1MTQ1XCIpIHJldHVybiBcIndpZGdldHMvY2h1bmtzL25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfc3RlbmNpbF9jb3JlX2ludGVybmFsX2NsaWVudF9sYXp5X3JlYy1mOWI2NTE0NS5qc1wiO1xuXHRpZiAoY2h1bmtJZCA9PT0gXCJ2ZW5kb3JzLW5vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHNfZGlzdF8tNTg2ZmNjXCIpIHJldHVybiBcIndpZGdldHMvY2h1bmtzL3ZlbmRvcnMtbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50c19kaXN0Xy01ODZmY2MuanNcIjtcblx0aWYgKGNodW5rSWQgPT09IFwibm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19zdGVuY2lsX2NvcmVfaW50ZXJuYWxfY2xpZW50X2xhenlfcmVjLWY5YjY1MTQ2XCIpIHJldHVybiBcIndpZGdldHMvY2h1bmtzL25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfc3RlbmNpbF9jb3JlX2ludGVybmFsX2NsaWVudF9sYXp5X3JlYy1mOWI2NTE0Ni5qc1wiO1xuXHRpZiAoY2h1bmtJZCA9PT0gXCJ2ZW5kb3JzLW5vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHNfZGlzdF8tYmIwOTQxXCIpIHJldHVybiBcIndpZGdldHMvY2h1bmtzL3ZlbmRvcnMtbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50c19kaXN0Xy1iYjA5NDEuanNcIjtcblx0aWYgKGNodW5rSWQgPT09IFwibm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19zdGVuY2lsX2NvcmVfaW50ZXJuYWxfY2xpZW50X2xhenlfcmVjLWY5YjY1MTQ3XCIpIHJldHVybiBcIndpZGdldHMvY2h1bmtzL25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfc3RlbmNpbF9jb3JlX2ludGVybmFsX2NsaWVudF9sYXp5X3JlYy1mOWI2NTE0Ny5qc1wiO1xuXHRpZiAoY2h1bmtJZCA9PT0gXCJ2ZW5kb3JzLW5vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHNfZGlzdF8tNDcyOWY4XCIpIHJldHVybiBcIndpZGdldHMvY2h1bmtzL3ZlbmRvcnMtbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50c19kaXN0Xy00NzI5ZjguanNcIjtcblx0aWYgKGNodW5rSWQgPT09IFwibm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19zdGVuY2lsX2NvcmVfaW50ZXJuYWxfY2xpZW50X2xhenlfcmVjLWY5YjY1MTQ4XCIpIHJldHVybiBcIndpZGdldHMvY2h1bmtzL25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfc3RlbmNpbF9jb3JlX2ludGVybmFsX2NsaWVudF9sYXp5X3JlYy1mOWI2NTE0OC5qc1wiO1xuXHRpZiAoY2h1bmtJZCA9PT0gXCJub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX3N0ZW5jaWxfY29yZV9pbnRlcm5hbF9jbGllbnRfbGF6eV9yZWMtZWRhNmM1XCIpIHJldHVybiBcIndpZGdldHMvY2h1bmtzL25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfc3RlbmNpbF9jb3JlX2ludGVybmFsX2NsaWVudF9sYXp5X3JlYy1lZGE2YzUuanNcIjtcblx0aWYgKGNodW5rSWQgPT09IFwidmVuZG9ycy1ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzX2Rpc3RfLTFjMTY3MVwiKSByZXR1cm4gXCJ3aWRnZXRzL2NodW5rcy92ZW5kb3JzLW5vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHNfZGlzdF8tMWMxNjcxLmpzXCI7XG5cdGlmIChjaHVua0lkID09PSBcIm5vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfc3RlbmNpbF9jb3JlX2ludGVybmFsX2NsaWVudF9sYXp5X3JlYy1mOWI2NTE0OVwiKSByZXR1cm4gXCJ3aWRnZXRzL2NodW5rcy9ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX3N0ZW5jaWxfY29yZV9pbnRlcm5hbF9jbGllbnRfbGF6eV9yZWMtZjliNjUxNDkuanNcIjtcblx0aWYgKGNodW5rSWQgPT09IFwidmVuZG9ycy1ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzX2Rpc3RfLTc0MzMyZlwiKSByZXR1cm4gXCJ3aWRnZXRzL2NodW5rcy92ZW5kb3JzLW5vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHNfZGlzdF8tNzQzMzJmLmpzXCI7XG5cdGlmIChjaHVua0lkID09PSBcIm5vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfc3RlbmNpbF9jb3JlX2ludGVybmFsX2NsaWVudF9sYXp5X3JlYy1mOWI2NTE1MFwiKSByZXR1cm4gXCJ3aWRnZXRzL2NodW5rcy9ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX3N0ZW5jaWxfY29yZV9pbnRlcm5hbF9jbGllbnRfbGF6eV9yZWMtZjliNjUxNTAuanNcIjtcblx0aWYgKGNodW5rSWQgPT09IFwibm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19zdGVuY2lsX2NvcmVfaW50ZXJuYWxfY2xpZW50X2xhenlfcmVjLTJiMzg5N1wiKSByZXR1cm4gXCJ3aWRnZXRzL2NodW5rcy9ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX3N0ZW5jaWxfY29yZV9pbnRlcm5hbF9jbGllbnRfbGF6eV9yZWMtMmIzODk3LmpzXCI7XG5cdGlmIChjaHVua0lkID09PSBcIm5vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfc3RlbmNpbF9jb3JlX2ludGVybmFsX2NsaWVudF9sYXp5X3JlYy1iMmM1OWNcIikgcmV0dXJuIFwid2lkZ2V0cy9jaHVua3Mvbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19zdGVuY2lsX2NvcmVfaW50ZXJuYWxfY2xpZW50X2xhenlfcmVjLWIyYzU5Yy5qc1wiO1xuXHRpZiAoY2h1bmtJZCA9PT0gXCJub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX3N0ZW5jaWxfY29yZV9pbnRlcm5hbF9jbGllbnRfbGF6eV9yZWMtYTE5OWU3XCIpIHJldHVybiBcIndpZGdldHMvY2h1bmtzL25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfc3RlbmNpbF9jb3JlX2ludGVybmFsX2NsaWVudF9sYXp5X3JlYy1hMTk5ZTcuanNcIjtcblx0aWYgKGNodW5rSWQgPT09IFwidmVuZG9ycy1ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzX2Rpc3RfLTg4MzdhOFwiKSByZXR1cm4gXCJ3aWRnZXRzL2NodW5rcy92ZW5kb3JzLW5vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHNfZGlzdF8tODgzN2E4LmpzXCI7XG5cdGlmIChjaHVua0lkID09PSBcIm5vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfc3RlbmNpbF9jb3JlX2ludGVybmFsX2NsaWVudF9sYXp5X3JlYy1mOWI2NTE1MVwiKSByZXR1cm4gXCJ3aWRnZXRzL2NodW5rcy9ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX3N0ZW5jaWxfY29yZV9pbnRlcm5hbF9jbGllbnRfbGF6eV9yZWMtZjliNjUxNTEuanNcIjtcblx0aWYgKGNodW5rSWQgPT09IFwidmVuZG9ycy1ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzX2Rpc3RfLTMxZDQyN1wiKSByZXR1cm4gXCJ3aWRnZXRzL2NodW5rcy92ZW5kb3JzLW5vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHNfZGlzdF8tMzFkNDI3LmpzXCI7XG5cdGlmIChjaHVua0lkID09PSBcIm5vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfc3RlbmNpbF9jb3JlX2ludGVybmFsX2NsaWVudF9sYXp5X3JlYy1mOWI2NTE1MlwiKSByZXR1cm4gXCJ3aWRnZXRzL2NodW5rcy9ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX3N0ZW5jaWxfY29yZV9pbnRlcm5hbF9jbGllbnRfbGF6eV9yZWMtZjliNjUxNTIuanNcIjtcblx0aWYgKGNodW5rSWQgPT09IFwidmVuZG9ycy1ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzX2Rpc3RfLTk3ZDU1MFwiKSByZXR1cm4gXCJ3aWRnZXRzL2NodW5rcy92ZW5kb3JzLW5vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHNfZGlzdF8tOTdkNTUwLmpzXCI7XG5cdGlmIChjaHVua0lkID09PSBcIm5vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfc3RlbmNpbF9jb3JlX2ludGVybmFsX2NsaWVudF9sYXp5X3JlYy1jODY0MzhcIikgcmV0dXJuIFwid2lkZ2V0cy9jaHVua3Mvbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19zdGVuY2lsX2NvcmVfaW50ZXJuYWxfY2xpZW50X2xhenlfcmVjLWM4NjQzOC5qc1wiO1xuXHRpZiAoY2h1bmtJZCA9PT0gXCJ2ZW5kb3JzLW5vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHNfZGlzdF8tNDUyNmYyXCIpIHJldHVybiBcIndpZGdldHMvY2h1bmtzL3ZlbmRvcnMtbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50c19kaXN0Xy00NTI2ZjIuanNcIjtcblx0aWYgKGNodW5rSWQgPT09IFwibm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19zdGVuY2lsX2NvcmVfaW50ZXJuYWxfY2xpZW50X2xhenlfcmVjLTlkMDkxY1wiKSByZXR1cm4gXCJ3aWRnZXRzL2NodW5rcy9ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX3N0ZW5jaWxfY29yZV9pbnRlcm5hbF9jbGllbnRfbGF6eV9yZWMtOWQwOTFjLmpzXCI7XG5cdGlmIChjaHVua0lkID09PSBcInZlbmRvcnMtbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50c19kaXN0Xy1kNzBjODNcIikgcmV0dXJuIFwid2lkZ2V0cy9jaHVua3MvdmVuZG9ycy1ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzX2Rpc3RfLWQ3MGM4My5qc1wiO1xuXHRpZiAoY2h1bmtJZCA9PT0gXCJub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX3N0ZW5jaWxfY29yZV9pbnRlcm5hbF9jbGllbnRfbGF6eV9yZWMtZjliNjUxNTNcIikgcmV0dXJuIFwid2lkZ2V0cy9jaHVua3Mvbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19zdGVuY2lsX2NvcmVfaW50ZXJuYWxfY2xpZW50X2xhenlfcmVjLWY5YjY1MTUzLmpzXCI7XG5cdGlmIChjaHVua0lkID09PSBcIm5vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfc3RlbmNpbF9jb3JlX2ludGVybmFsX2NsaWVudF9sYXp5X3JlYy1hMWU4MWVcIikgcmV0dXJuIFwid2lkZ2V0cy9jaHVua3Mvbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19zdGVuY2lsX2NvcmVfaW50ZXJuYWxfY2xpZW50X2xhenlfcmVjLWExZTgxZS5qc1wiO1xuXHRpZiAoY2h1bmtJZCA9PT0gXCJ2ZW5kb3JzLW5vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHNfZGlzdF8tZWJjMGExXCIpIHJldHVybiBcIndpZGdldHMvY2h1bmtzL3ZlbmRvcnMtbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50c19kaXN0Xy1lYmMwYTEuanNcIjtcblx0aWYgKGNodW5rSWQgPT09IFwibm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19zdGVuY2lsX2NvcmVfaW50ZXJuYWxfY2xpZW50X2xhenlfcmVjLWY5YjY1MTU0XCIpIHJldHVybiBcIndpZGdldHMvY2h1bmtzL25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfc3RlbmNpbF9jb3JlX2ludGVybmFsX2NsaWVudF9sYXp5X3JlYy1mOWI2NTE1NC5qc1wiO1xuXHRpZiAoY2h1bmtJZCA9PT0gXCJub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX3N0ZW5jaWxfY29yZV9pbnRlcm5hbF9jbGllbnRfbGF6eV9yZWMtYTY4Nzk1XCIpIHJldHVybiBcIndpZGdldHMvY2h1bmtzL25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfc3RlbmNpbF9jb3JlX2ludGVybmFsX2NsaWVudF9sYXp5X3JlYy1hNjg3OTUuanNcIjtcblx0aWYgKGNodW5rSWQgPT09IFwidmVuZG9ycy1ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzX2Rpc3RfLTFhN2M4ZFwiKSByZXR1cm4gXCJ3aWRnZXRzL2NodW5rcy92ZW5kb3JzLW5vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHNfZGlzdF8tMWE3YzhkLmpzXCI7XG5cdGlmIChjaHVua0lkID09PSBcIm5vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfc3RlbmNpbF9jb3JlX2ludGVybmFsX2NsaWVudF9sYXp5X3JlYy1mOWI2NTE1NVwiKSByZXR1cm4gXCJ3aWRnZXRzL2NodW5rcy9ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX3N0ZW5jaWxfY29yZV9pbnRlcm5hbF9jbGllbnRfbGF6eV9yZWMtZjliNjUxNTUuanNcIjtcblx0aWYgKGNodW5rSWQgPT09IFwibm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19zdGVuY2lsX2NvcmVfaW50ZXJuYWxfY2xpZW50X2xhenlfcmVjLTJjNDUwZVwiKSByZXR1cm4gXCJ3aWRnZXRzL2NodW5rcy9ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX3N0ZW5jaWxfY29yZV9pbnRlcm5hbF9jbGllbnRfbGF6eV9yZWMtMmM0NTBlLmpzXCI7XG5cdGlmIChjaHVua0lkID09PSBcInZlbmRvcnMtbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50c19kaXN0Xy05YTExNWRcIikgcmV0dXJuIFwid2lkZ2V0cy9jaHVua3MvdmVuZG9ycy1ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzX2Rpc3RfLTlhMTE1ZC5qc1wiO1xuXHRpZiAoY2h1bmtJZCA9PT0gXCJub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX3N0ZW5jaWxfY29yZV9pbnRlcm5hbF9jbGllbnRfbGF6eV9yZWMtZjliNjUxNTZcIikgcmV0dXJuIFwid2lkZ2V0cy9jaHVua3Mvbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19zdGVuY2lsX2NvcmVfaW50ZXJuYWxfY2xpZW50X2xhenlfcmVjLWY5YjY1MTU2LmpzXCI7XG5cdGlmIChjaHVua0lkID09PSBcInZlbmRvcnMtbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50c19kaXN0Xy1kZGYyODVcIikgcmV0dXJuIFwid2lkZ2V0cy9jaHVua3MvdmVuZG9ycy1ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzX2Rpc3RfLWRkZjI4NS5qc1wiO1xuXHRpZiAoY2h1bmtJZCA9PT0gXCJub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX3N0ZW5jaWxfY29yZV9pbnRlcm5hbF9jbGllbnRfbGF6eV9yZWMtZjliNjUxNTdcIikgcmV0dXJuIFwid2lkZ2V0cy9jaHVua3Mvbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19zdGVuY2lsX2NvcmVfaW50ZXJuYWxfY2xpZW50X2xhenlfcmVjLWY5YjY1MTU3LmpzXCI7XG5cdGlmIChjaHVua0lkID09PSBcIm5vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfc3RlbmNpbF9jb3JlX2ludGVybmFsX2NsaWVudF9sYXp5X3JlYy1jZjUxMzFcIikgcmV0dXJuIFwid2lkZ2V0cy9jaHVua3Mvbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19zdGVuY2lsX2NvcmVfaW50ZXJuYWxfY2xpZW50X2xhenlfcmVjLWNmNTEzMS5qc1wiO1xuXHRpZiAoY2h1bmtJZCA9PT0gXCJ2ZW5kb3JzLW5vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHNfZGlzdF8tNDIyMmFmXCIpIHJldHVybiBcIndpZGdldHMvY2h1bmtzL3ZlbmRvcnMtbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50c19kaXN0Xy00MjIyYWYuanNcIjtcblx0aWYgKGNodW5rSWQgPT09IFwibm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19zdGVuY2lsX2NvcmVfaW50ZXJuYWxfY2xpZW50X2xhenlfcmVjLWY5YjY1MTU4XCIpIHJldHVybiBcIndpZGdldHMvY2h1bmtzL25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfc3RlbmNpbF9jb3JlX2ludGVybmFsX2NsaWVudF9sYXp5X3JlYy1mOWI2NTE1OC5qc1wiO1xuXHRpZiAoY2h1bmtJZCA9PT0gXCJ2ZW5kb3JzLW5vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHNfZGlzdF8tMTYwYmMwXCIpIHJldHVybiBcIndpZGdldHMvY2h1bmtzL3ZlbmRvcnMtbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50c19kaXN0Xy0xNjBiYzAuanNcIjtcblx0aWYgKGNodW5rSWQgPT09IFwibm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19zdGVuY2lsX2NvcmVfaW50ZXJuYWxfY2xpZW50X2xhenlfcmVjLWY5YjY1MTU5XCIpIHJldHVybiBcIndpZGdldHMvY2h1bmtzL25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfc3RlbmNpbF9jb3JlX2ludGVybmFsX2NsaWVudF9sYXp5X3JlYy1mOWI2NTE1OS5qc1wiO1xuXHRpZiAoY2h1bmtJZCA9PT0gXCJ2ZW5kb3JzLW5vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHNfZGlzdF8tNzM0MGZmXCIpIHJldHVybiBcIndpZGdldHMvY2h1bmtzL3ZlbmRvcnMtbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50c19kaXN0Xy03MzQwZmYuanNcIjtcblx0aWYgKGNodW5rSWQgPT09IFwibm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19zdGVuY2lsX2NvcmVfaW50ZXJuYWxfY2xpZW50X2xhenlfcmVjLWY5YjY1MTYwXCIpIHJldHVybiBcIndpZGdldHMvY2h1bmtzL25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfc3RlbmNpbF9jb3JlX2ludGVybmFsX2NsaWVudF9sYXp5X3JlYy1mOWI2NTE2MC5qc1wiO1xuXHRpZiAoY2h1bmtJZCA9PT0gXCJ2ZW5kb3JzLW5vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHNfZGlzdF8tODAxZTkzXCIpIHJldHVybiBcIndpZGdldHMvY2h1bmtzL3ZlbmRvcnMtbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50c19kaXN0Xy04MDFlOTMuanNcIjtcblx0aWYgKGNodW5rSWQgPT09IFwibm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19zdGVuY2lsX2NvcmVfaW50ZXJuYWxfY2xpZW50X2xhenlfcmVjLWY5YjY1MTYxXCIpIHJldHVybiBcIndpZGdldHMvY2h1bmtzL25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfc3RlbmNpbF9jb3JlX2ludGVybmFsX2NsaWVudF9sYXp5X3JlYy1mOWI2NTE2MS5qc1wiO1xuXHRpZiAoY2h1bmtJZCA9PT0gXCJ2ZW5kb3JzLW5vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHNfZGlzdF8tMWJlOTIxXCIpIHJldHVybiBcIndpZGdldHMvY2h1bmtzL3ZlbmRvcnMtbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50c19kaXN0Xy0xYmU5MjEuanNcIjtcblx0aWYgKGNodW5rSWQgPT09IFwibm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19zdGVuY2lsX2NvcmVfaW50ZXJuYWxfY2xpZW50X2xhenlfcmVjLWY5YjY1MTYyXCIpIHJldHVybiBcIndpZGdldHMvY2h1bmtzL25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfc3RlbmNpbF9jb3JlX2ludGVybmFsX2NsaWVudF9sYXp5X3JlYy1mOWI2NTE2Mi5qc1wiO1xuXHRpZiAoY2h1bmtJZCA9PT0gXCJub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX3N0ZW5jaWxfY29yZV9pbnRlcm5hbF9jbGllbnRfbGF6eV9yZWMtNWZmZWQzXCIpIHJldHVybiBcIndpZGdldHMvY2h1bmtzL25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfc3RlbmNpbF9jb3JlX2ludGVybmFsX2NsaWVudF9sYXp5X3JlYy01ZmZlZDMuanNcIjtcblx0aWYgKGNodW5rSWQgPT09IFwidmVuZG9ycy1ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX3N0ZW5jaWxfY29yZV9pbnRlcm5hbF9jbGllbnRfLTE4ZTc2M1wiKSByZXR1cm4gXCJ3aWRnZXRzL2NodW5rcy92ZW5kb3JzLW5vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfc3RlbmNpbF9jb3JlX2ludGVybmFsX2NsaWVudF8tMThlNzYzLmpzXCI7XG5cdGlmIChjaHVua0lkID09PSBcIm5vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHNfZGlzdF9jb21wb25lbi0yZjc5YjFcIikgcmV0dXJuIFwid2lkZ2V0cy9jaHVua3Mvbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50c19kaXN0X2NvbXBvbmVuLTJmNzliMS5qc1wiO1xuXHRpZiAoY2h1bmtJZCA9PT0gXCJub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzX2Rpc3RfY29tcG9uZW4tNmYwOWJlXCIpIHJldHVybiBcIndpZGdldHMvY2h1bmtzL25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHNfZGlzdF9jb21wb25lbi02ZjA5YmUuanNcIjtcblx0aWYgKGNodW5rSWQgPT09IFwibm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50c19kaXN0X2NvbXBvbmVuLTUzZDFiMVwiKSByZXR1cm4gXCJ3aWRnZXRzL2NodW5rcy9ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzX2Rpc3RfY29tcG9uZW4tNTNkMWIxLmpzXCI7XG5cdGlmIChjaHVua0lkID09PSBcIm5vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHNfZGlzdF9jb21wb25lbi0xMGZhNGNcIikgcmV0dXJuIFwid2lkZ2V0cy9jaHVua3Mvbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50c19kaXN0X2NvbXBvbmVuLTEwZmE0Yy5qc1wiO1xuXHRpZiAoY2h1bmtJZCA9PT0gXCJub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzX2Rpc3RfY29tcG9uZW4tZWIzOWUxXCIpIHJldHVybiBcIndpZGdldHMvY2h1bmtzL25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHNfZGlzdF9jb21wb25lbi1lYjM5ZTEuanNcIjtcblx0aWYgKGNodW5rSWQgPT09IFwibm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50c19kaXN0X2NvbXBvbmVuLWIxNmYwZFwiKSByZXR1cm4gXCJ3aWRnZXRzL2NodW5rcy9ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzX2Rpc3RfY29tcG9uZW4tYjE2ZjBkLmpzXCI7XG5cdGlmIChjaHVua0lkID09PSBcIm5vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHNfZGlzdF9jb21wb25lbi1lNDZjMWJcIikgcmV0dXJuIFwid2lkZ2V0cy9jaHVua3Mvbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50c19kaXN0X2NvbXBvbmVuLWU0NmMxYi5qc1wiO1xuXHRpZiAoY2h1bmtJZCA9PT0gXCJub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzX2Rpc3RfY29tcG9uZW4tYjA1ODAxXCIpIHJldHVybiBcIndpZGdldHMvY2h1bmtzL25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHNfZGlzdF9jb21wb25lbi1iMDU4MDEuanNcIjtcblx0aWYgKGNodW5rSWQgPT09IFwibm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50c19kaXN0X2NvbXBvbmVuLTgzNjQ3NlwiKSByZXR1cm4gXCJ3aWRnZXRzL2NodW5rcy9ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzX2Rpc3RfY29tcG9uZW4tODM2NDc2LmpzXCI7XG5cdGlmIChjaHVua0lkID09PSBcIm5vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHNfZGlzdF9jb21wb25lbi04OWU4OTBcIikgcmV0dXJuIFwid2lkZ2V0cy9jaHVua3Mvbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50c19kaXN0X2NvbXBvbmVuLTg5ZTg5MC5qc1wiO1xuXHRpZiAoY2h1bmtJZCA9PT0gXCJub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzX2Rpc3RfY29tcG9uZW4tNzRmYjA2XCIpIHJldHVybiBcIndpZGdldHMvY2h1bmtzL25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHNfZGlzdF9jb21wb25lbi03NGZiMDYuanNcIjtcblx0aWYgKGNodW5rSWQgPT09IFwibm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50c19kaXN0X2NvbXBvbmVuLWE1OGQ5YVwiKSByZXR1cm4gXCJ3aWRnZXRzL2NodW5rcy9ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzX2Rpc3RfY29tcG9uZW4tYTU4ZDlhLmpzXCI7XG5cdGlmIChjaHVua0lkID09PSBcIm5vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHNfZGlzdF9jb21wb25lbi1iZmM2YWNcIikgcmV0dXJuIFwid2lkZ2V0cy9jaHVua3Mvbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50c19kaXN0X2NvbXBvbmVuLWJmYzZhYy5qc1wiO1xuXHRpZiAoY2h1bmtJZCA9PT0gXCJub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzX2Rpc3RfY29tcG9uZW4tZmJhOWNmXCIpIHJldHVybiBcIndpZGdldHMvY2h1bmtzL25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHNfZGlzdF9jb21wb25lbi1mYmE5Y2YuanNcIjtcblx0aWYgKGNodW5rSWQgPT09IFwibm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50c19kaXN0X2NvbXBvbmVuLTJjZTEyYlwiKSByZXR1cm4gXCJ3aWRnZXRzL2NodW5rcy9ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzX2Rpc3RfY29tcG9uZW4tMmNlMTJiLmpzXCI7XG5cdGlmIChjaHVua0lkID09PSBcIm5vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHNfZGlzdF9jb21wb25lbi03OGNhMzFcIikgcmV0dXJuIFwid2lkZ2V0cy9jaHVua3Mvbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50c19kaXN0X2NvbXBvbmVuLTc4Y2EzMS5qc1wiO1xuXHRpZiAoY2h1bmtJZCA9PT0gXCJub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzX2Rpc3RfY29tcG9uZW4tMDVkYjVhXCIpIHJldHVybiBcIndpZGdldHMvY2h1bmtzL25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHNfZGlzdF9jb21wb25lbi0wNWRiNWEuanNcIjtcblx0aWYgKGNodW5rSWQgPT09IFwibm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50c19kaXN0X2NvbXBvbmVuLWNjODlmYlwiKSByZXR1cm4gXCJ3aWRnZXRzL2NodW5rcy9ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzX2Rpc3RfY29tcG9uZW4tY2M4OWZiLmpzXCI7XG5cdGlmIChjaHVua0lkID09PSBcIm5vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHNfZGlzdF9jb21wb25lbi1hYzliMGZcIikgcmV0dXJuIFwid2lkZ2V0cy9jaHVua3Mvbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50c19kaXN0X2NvbXBvbmVuLWFjOWIwZi5qc1wiO1xuXHRpZiAoY2h1bmtJZCA9PT0gXCJub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzX2Rpc3RfY29tcG9uZW4tM2ZkMWEwXCIpIHJldHVybiBcIndpZGdldHMvY2h1bmtzL25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHNfZGlzdF9jb21wb25lbi0zZmQxYTAuanNcIjtcblx0aWYgKGNodW5rSWQgPT09IFwibm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50c19kaXN0X2NvbXBvbmVuLWVkY2IwMFwiKSByZXR1cm4gXCJ3aWRnZXRzL2NodW5rcy9ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzX2Rpc3RfY29tcG9uZW4tZWRjYjAwLmpzXCI7XG5cdGlmIChjaHVua0lkID09PSBcIm5vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHNfZGlzdF9jb21wb25lbi1mMjVlZDNcIikgcmV0dXJuIFwid2lkZ2V0cy9jaHVua3Mvbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50c19kaXN0X2NvbXBvbmVuLWYyNWVkMy5qc1wiO1xuXHRpZiAoY2h1bmtJZCA9PT0gXCJub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzX2Rpc3RfY29tcG9uZW4tNTc5YWMxXCIpIHJldHVybiBcIndpZGdldHMvY2h1bmtzL25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHNfZGlzdF9jb21wb25lbi01NzlhYzEuanNcIjtcblx0aWYgKGNodW5rSWQgPT09IFwibm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50c19kaXN0X2NvbXBvbmVuLTI1OTAxZlwiKSByZXR1cm4gXCJ3aWRnZXRzL2NodW5rcy9ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzX2Rpc3RfY29tcG9uZW4tMjU5MDFmLmpzXCI7XG5cdGlmIChjaHVua0lkID09PSBcIm5vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHNfZGlzdF9jb21wb25lbi1iNWMyMThcIikgcmV0dXJuIFwid2lkZ2V0cy9jaHVua3Mvbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50c19kaXN0X2NvbXBvbmVuLWI1YzIxOC5qc1wiO1xuXHRpZiAoY2h1bmtJZCA9PT0gXCJub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzX2Rpc3RfY29tcG9uZW4tYThmN2FmXCIpIHJldHVybiBcIndpZGdldHMvY2h1bmtzL25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHNfZGlzdF9jb21wb25lbi1hOGY3YWYuanNcIjtcblx0aWYgKGNodW5rSWQgPT09IFwibm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50c19kaXN0X2NvbXBvbmVuLTEwZDVmM1wiKSByZXR1cm4gXCJ3aWRnZXRzL2NodW5rcy9ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzX2Rpc3RfY29tcG9uZW4tMTBkNWYzLmpzXCI7XG5cdGlmIChjaHVua0lkID09PSBcIm5vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHNfZGlzdF9jb21wb25lbi1jMjQwYmZcIikgcmV0dXJuIFwid2lkZ2V0cy9jaHVua3Mvbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50c19kaXN0X2NvbXBvbmVuLWMyNDBiZi5qc1wiO1xuXHRpZiAoY2h1bmtJZCA9PT0gXCJub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzX2Rpc3RfY29tcG9uZW4tNTFlNDM1XCIpIHJldHVybiBcIndpZGdldHMvY2h1bmtzL25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHNfZGlzdF9jb21wb25lbi01MWU0MzUuanNcIjtcblx0aWYgKGNodW5rSWQgPT09IFwibm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50c19kaXN0X2NvbXBvbmVuLTc1YjBiMVwiKSByZXR1cm4gXCJ3aWRnZXRzL2NodW5rcy9ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzX2Rpc3RfY29tcG9uZW4tNzViMGIxLmpzXCI7XG5cdGlmIChjaHVua0lkID09PSBcIm5vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHNfZGlzdF9jb21wb25lbi0wMjdjMTJcIikgcmV0dXJuIFwid2lkZ2V0cy9jaHVua3Mvbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50c19kaXN0X2NvbXBvbmVuLTAyN2MxMi5qc1wiO1xuXHRpZiAoY2h1bmtJZCA9PT0gXCJub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzX2Rpc3RfY29tcG9uZW4tZWUyOTg4XCIpIHJldHVybiBcIndpZGdldHMvY2h1bmtzL25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHNfZGlzdF9jb21wb25lbi1lZTI5ODguanNcIjtcblx0aWYgKGNodW5rSWQgPT09IFwibm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50c19kaXN0X2NvbXBvbmVuLWEyMjYyZFwiKSByZXR1cm4gXCJ3aWRnZXRzL2NodW5rcy9ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzX2Rpc3RfY29tcG9uZW4tYTIyNjJkLmpzXCI7XG5cdGlmIChjaHVua0lkID09PSBcIm5vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHNfZGlzdF9jb21wb25lbi01YWY5MWRcIikgcmV0dXJuIFwid2lkZ2V0cy9jaHVua3Mvbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50c19kaXN0X2NvbXBvbmVuLTVhZjkxZC5qc1wiO1xuXHRpZiAoY2h1bmtJZCA9PT0gXCJub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzX2Rpc3RfY29tcG9uZW4tYmMxYmQzXCIpIHJldHVybiBcIndpZGdldHMvY2h1bmtzL25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHNfZGlzdF9jb21wb25lbi1iYzFiZDMuanNcIjtcblx0aWYgKGNodW5rSWQgPT09IFwibm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50c19kaXN0X2NvbXBvbmVuLTQwZDA4NVwiKSByZXR1cm4gXCJ3aWRnZXRzL2NodW5rcy9ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzX2Rpc3RfY29tcG9uZW4tNDBkMDg1LmpzXCI7XG5cdGlmIChjaHVua0lkID09PSBcIm5vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHNfZGlzdF9jb21wb25lbi05YTU3MGZcIikgcmV0dXJuIFwid2lkZ2V0cy9jaHVua3Mvbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50c19kaXN0X2NvbXBvbmVuLTlhNTcwZi5qc1wiO1xuXHRpZiAoY2h1bmtJZCA9PT0gXCJub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzX2Rpc3RfY29tcG9uZW4tNjVhNGM2XCIpIHJldHVybiBcIndpZGdldHMvY2h1bmtzL25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHNfZGlzdF9jb21wb25lbi02NWE0YzYuanNcIjtcblx0aWYgKGNodW5rSWQgPT09IFwibm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50c19kaXN0X2NvbXBvbmVuLWEzZTk2MlwiKSByZXR1cm4gXCJ3aWRnZXRzL2NodW5rcy9ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzX2Rpc3RfY29tcG9uZW4tYTNlOTYyLmpzXCI7XG5cdGlmIChjaHVua0lkID09PSBcIm5vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHNfZGlzdF9jb21wb25lbi0yZmUxN2RcIikgcmV0dXJuIFwid2lkZ2V0cy9jaHVua3Mvbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50c19kaXN0X2NvbXBvbmVuLTJmZTE3ZC5qc1wiO1xuXHRpZiAoY2h1bmtJZCA9PT0gXCJub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzX2Rpc3RfY29tcG9uZW4tMGVmNzAxXCIpIHJldHVybiBcIndpZGdldHMvY2h1bmtzL25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHNfZGlzdF9jb21wb25lbi0wZWY3MDEuanNcIjtcblx0aWYgKGNodW5rSWQgPT09IFwibm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50c19kaXN0X2NvbXBvbmVuLTFkZDBjZFwiKSByZXR1cm4gXCJ3aWRnZXRzL2NodW5rcy9ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzX2Rpc3RfY29tcG9uZW4tMWRkMGNkLmpzXCI7XG5cdGlmIChjaHVua0lkID09PSBcIm5vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHNfZGlzdF9jb21wb25lbi02YzJkOTRcIikgcmV0dXJuIFwid2lkZ2V0cy9jaHVua3Mvbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50c19kaXN0X2NvbXBvbmVuLTZjMmQ5NC5qc1wiO1xuXHRpZiAoY2h1bmtJZCA9PT0gXCJub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzX2Rpc3RfY29tcG9uZW4tYTgzZGFjXCIpIHJldHVybiBcIndpZGdldHMvY2h1bmtzL25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHNfZGlzdF9jb21wb25lbi1hODNkYWMuanNcIjtcblx0aWYgKGNodW5rSWQgPT09IFwibm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50c19kaXN0X2NvbXBvbmVuLWY0ZjMxN1wiKSByZXR1cm4gXCJ3aWRnZXRzL2NodW5rcy9ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzX2Rpc3RfY29tcG9uZW4tZjRmMzE3LmpzXCI7XG5cdGlmIChjaHVua0lkID09PSBcIm5vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHNfZGlzdF9jb21wb25lbi02ZTFmNTlcIikgcmV0dXJuIFwid2lkZ2V0cy9jaHVua3Mvbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50c19kaXN0X2NvbXBvbmVuLTZlMWY1OS5qc1wiO1xuXHRpZiAoY2h1bmtJZCA9PT0gXCJub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzX2Rpc3RfY29tcG9uZW4tZjYwOGJjXCIpIHJldHVybiBcIndpZGdldHMvY2h1bmtzL25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHNfZGlzdF9jb21wb25lbi1mNjA4YmMuanNcIjtcblx0aWYgKGNodW5rSWQgPT09IFwibm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50c19kaXN0X2NvbXBvbmVuLTNlNTc1MFwiKSByZXR1cm4gXCJ3aWRnZXRzL2NodW5rcy9ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzX2Rpc3RfY29tcG9uZW4tM2U1NzUwLmpzXCI7XG5cdGlmIChjaHVua0lkID09PSBcIm5vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHNfZGlzdF9jb21wb25lbi0yMjI2MGRcIikgcmV0dXJuIFwid2lkZ2V0cy9jaHVua3Mvbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50c19kaXN0X2NvbXBvbmVuLTIyMjYwZC5qc1wiO1xuXHRpZiAoY2h1bmtJZCA9PT0gXCJub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzX2Rpc3RfY29tcG9uZW4tZGFiMGU0XCIpIHJldHVybiBcIndpZGdldHMvY2h1bmtzL25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdF9ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHNfZGlzdF9jb21wb25lbi1kYWIwZTQuanNcIjtcblx0aWYgKGNodW5rSWQgPT09IFwibm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0X25vZGVfbW9kdWxlc19lc3JpX2NhbGNpdGUtY29tcG9uZW50c19kaXN0X2NvbXBvbmVuLTJkYzBlY1wiKSByZXR1cm4gXCJ3aWRnZXRzL2NodW5rcy9ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzX2Rpc3RfY29tcG9uZW4tMmRjMGVjLmpzXCI7XG5cdC8vIHJldHVybiB1cmwgZm9yIGZpbGVuYW1lcyBiYXNlZCBvbiB0ZW1wbGF0ZVxuXHRyZXR1cm4gdW5kZWZpbmVkO1xufTsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSAob2JqLCBwcm9wKSA9PiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwgcHJvcCkpIiwidmFyIGluUHJvZ3Jlc3MgPSB7fTtcbnZhciBkYXRhV2VicGFja1ByZWZpeCA9IFwiZXhiLWNsaWVudDpcIjtcbi8vIGxvYWRTY3JpcHQgZnVuY3Rpb24gdG8gbG9hZCBhIHNjcmlwdCB2aWEgc2NyaXB0IHRhZ1xuX193ZWJwYWNrX3JlcXVpcmVfXy5sID0gKHVybCwgZG9uZSwga2V5LCBjaHVua0lkKSA9PiB7XG5cdGlmKGluUHJvZ3Jlc3NbdXJsXSkgeyBpblByb2dyZXNzW3VybF0ucHVzaChkb25lKTsgcmV0dXJuOyB9XG5cdHZhciBzY3JpcHQsIG5lZWRBdHRhY2g7XG5cdGlmKGtleSAhPT0gdW5kZWZpbmVkKSB7XG5cdFx0dmFyIHNjcmlwdHMgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZShcInNjcmlwdFwiKTtcblx0XHRmb3IodmFyIGkgPSAwOyBpIDwgc2NyaXB0cy5sZW5ndGg7IGkrKykge1xuXHRcdFx0dmFyIHMgPSBzY3JpcHRzW2ldO1xuXHRcdFx0aWYocy5nZXRBdHRyaWJ1dGUoXCJzcmNcIikgPT0gdXJsIHx8IHMuZ2V0QXR0cmlidXRlKFwiZGF0YS13ZWJwYWNrXCIpID09IGRhdGFXZWJwYWNrUHJlZml4ICsga2V5KSB7IHNjcmlwdCA9IHM7IGJyZWFrOyB9XG5cdFx0fVxuXHR9XG5cdGlmKCFzY3JpcHQpIHtcblx0XHRuZWVkQXR0YWNoID0gdHJ1ZTtcblx0XHRzY3JpcHQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzY3JpcHQnKTtcblxuXHRcdHNjcmlwdC5jaGFyc2V0ID0gJ3V0Zi04Jztcblx0XHRzY3JpcHQudGltZW91dCA9IDEyMDtcblx0XHRpZiAoX193ZWJwYWNrX3JlcXVpcmVfXy5uYykge1xuXHRcdFx0c2NyaXB0LnNldEF0dHJpYnV0ZShcIm5vbmNlXCIsIF9fd2VicGFja19yZXF1aXJlX18ubmMpO1xuXHRcdH1cblx0XHRzY3JpcHQuc2V0QXR0cmlidXRlKFwiZGF0YS13ZWJwYWNrXCIsIGRhdGFXZWJwYWNrUHJlZml4ICsga2V5KTtcblxuXHRcdHNjcmlwdC5zcmMgPSB1cmw7XG5cdH1cblx0aW5Qcm9ncmVzc1t1cmxdID0gW2RvbmVdO1xuXHR2YXIgb25TY3JpcHRDb21wbGV0ZSA9IChwcmV2LCBldmVudCkgPT4ge1xuXHRcdC8vIGF2b2lkIG1lbSBsZWFrcyBpbiBJRS5cblx0XHRzY3JpcHQub25lcnJvciA9IHNjcmlwdC5vbmxvYWQgPSBudWxsO1xuXHRcdGNsZWFyVGltZW91dCh0aW1lb3V0KTtcblx0XHR2YXIgZG9uZUZucyA9IGluUHJvZ3Jlc3NbdXJsXTtcblx0XHRkZWxldGUgaW5Qcm9ncmVzc1t1cmxdO1xuXHRcdHNjcmlwdC5wYXJlbnROb2RlICYmIHNjcmlwdC5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHNjcmlwdCk7XG5cdFx0ZG9uZUZucyAmJiBkb25lRm5zLmZvckVhY2goKGZuKSA9PiAoZm4oZXZlbnQpKSk7XG5cdFx0aWYocHJldikgcmV0dXJuIHByZXYoZXZlbnQpO1xuXHR9XG5cdHZhciB0aW1lb3V0ID0gc2V0VGltZW91dChvblNjcmlwdENvbXBsZXRlLmJpbmQobnVsbCwgdW5kZWZpbmVkLCB7IHR5cGU6ICd0aW1lb3V0JywgdGFyZ2V0OiBzY3JpcHQgfSksIDEyMDAwMCk7XG5cdHNjcmlwdC5vbmVycm9yID0gb25TY3JpcHRDb21wbGV0ZS5iaW5kKG51bGwsIHNjcmlwdC5vbmVycm9yKTtcblx0c2NyaXB0Lm9ubG9hZCA9IG9uU2NyaXB0Q29tcGxldGUuYmluZChudWxsLCBzY3JpcHQub25sb2FkKTtcblx0bmVlZEF0dGFjaCAmJiBkb2N1bWVudC5oZWFkLmFwcGVuZENoaWxkKHNjcmlwdCk7XG59OyIsIi8vIGRlZmluZSBfX2VzTW9kdWxlIG9uIGV4cG9ydHNcbl9fd2VicGFja19yZXF1aXJlX18uciA9IChleHBvcnRzKSA9PiB7XG5cdGlmKHR5cGVvZiBTeW1ib2wgIT09ICd1bmRlZmluZWQnICYmIFN5bWJvbC50b1N0cmluZ1RhZykge1xuXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBTeW1ib2wudG9TdHJpbmdUYWcsIHsgdmFsdWU6ICdNb2R1bGUnIH0pO1xuXHR9XG5cdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG59OyIsIl9fd2VicGFja19yZXF1aXJlX18ucCA9IFwiXCI7IiwiLy8gbm8gYmFzZVVSSVxuXG4vLyBvYmplY3QgdG8gc3RvcmUgbG9hZGVkIGFuZCBsb2FkaW5nIGNodW5rc1xuLy8gdW5kZWZpbmVkID0gY2h1bmsgbm90IGxvYWRlZCwgbnVsbCA9IGNodW5rIHByZWxvYWRlZC9wcmVmZXRjaGVkXG4vLyBbcmVzb2x2ZSwgcmVqZWN0LCBQcm9taXNlXSA9IGNodW5rIGxvYWRpbmcsIDAgPSBjaHVuayBsb2FkZWRcbnZhciBpbnN0YWxsZWRDaHVua3MgPSB7XG5cdFwid2lkZ2V0cy9zaW1wbGUvZGlzdC9ydW50aW1lL3dpZGdldFwiOiAwXG59O1xuXG5fX3dlYnBhY2tfcmVxdWlyZV9fLmYuaiA9IChjaHVua0lkLCBwcm9taXNlcykgPT4ge1xuXHRcdC8vIEpTT05QIGNodW5rIGxvYWRpbmcgZm9yIGphdmFzY3JpcHRcblx0XHR2YXIgaW5zdGFsbGVkQ2h1bmtEYXRhID0gX193ZWJwYWNrX3JlcXVpcmVfXy5vKGluc3RhbGxlZENodW5rcywgY2h1bmtJZCkgPyBpbnN0YWxsZWRDaHVua3NbY2h1bmtJZF0gOiB1bmRlZmluZWQ7XG5cdFx0aWYoaW5zdGFsbGVkQ2h1bmtEYXRhICE9PSAwKSB7IC8vIDAgbWVhbnMgXCJhbHJlYWR5IGluc3RhbGxlZFwiLlxuXG5cdFx0XHQvLyBhIFByb21pc2UgbWVhbnMgXCJjdXJyZW50bHkgbG9hZGluZ1wiLlxuXHRcdFx0aWYoaW5zdGFsbGVkQ2h1bmtEYXRhKSB7XG5cdFx0XHRcdHByb21pc2VzLnB1c2goaW5zdGFsbGVkQ2h1bmtEYXRhWzJdKTtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdGlmKHRydWUpIHsgLy8gYWxsIGNodW5rcyBoYXZlIEpTXG5cdFx0XHRcdFx0Ly8gc2V0dXAgUHJvbWlzZSBpbiBjaHVuayBjYWNoZVxuXHRcdFx0XHRcdHZhciBwcm9taXNlID0gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4gKGluc3RhbGxlZENodW5rRGF0YSA9IGluc3RhbGxlZENodW5rc1tjaHVua0lkXSA9IFtyZXNvbHZlLCByZWplY3RdKSk7XG5cdFx0XHRcdFx0cHJvbWlzZXMucHVzaChpbnN0YWxsZWRDaHVua0RhdGFbMl0gPSBwcm9taXNlKTtcblxuXHRcdFx0XHRcdC8vIHN0YXJ0IGNodW5rIGxvYWRpbmdcblx0XHRcdFx0XHR2YXIgdXJsID0gX193ZWJwYWNrX3JlcXVpcmVfXy5wICsgX193ZWJwYWNrX3JlcXVpcmVfXy51KGNodW5rSWQpO1xuXHRcdFx0XHRcdC8vIGNyZWF0ZSBlcnJvciBiZWZvcmUgc3RhY2sgdW53b3VuZCB0byBnZXQgdXNlZnVsIHN0YWNrdHJhY2UgbGF0ZXJcblx0XHRcdFx0XHR2YXIgZXJyb3IgPSBuZXcgRXJyb3IoKTtcblx0XHRcdFx0XHR2YXIgbG9hZGluZ0VuZGVkID0gKGV2ZW50KSA9PiB7XG5cdFx0XHRcdFx0XHRpZihfX3dlYnBhY2tfcmVxdWlyZV9fLm8oaW5zdGFsbGVkQ2h1bmtzLCBjaHVua0lkKSkge1xuXHRcdFx0XHRcdFx0XHRpbnN0YWxsZWRDaHVua0RhdGEgPSBpbnN0YWxsZWRDaHVua3NbY2h1bmtJZF07XG5cdFx0XHRcdFx0XHRcdGlmKGluc3RhbGxlZENodW5rRGF0YSAhPT0gMCkgaW5zdGFsbGVkQ2h1bmtzW2NodW5rSWRdID0gdW5kZWZpbmVkO1xuXHRcdFx0XHRcdFx0XHRpZihpbnN0YWxsZWRDaHVua0RhdGEpIHtcblx0XHRcdFx0XHRcdFx0XHR2YXIgZXJyb3JUeXBlID0gZXZlbnQgJiYgKGV2ZW50LnR5cGUgPT09ICdsb2FkJyA/ICdtaXNzaW5nJyA6IGV2ZW50LnR5cGUpO1xuXHRcdFx0XHRcdFx0XHRcdHZhciByZWFsU3JjID0gZXZlbnQgJiYgZXZlbnQudGFyZ2V0ICYmIGV2ZW50LnRhcmdldC5zcmM7XG5cdFx0XHRcdFx0XHRcdFx0ZXJyb3IubWVzc2FnZSA9ICdMb2FkaW5nIGNodW5rICcgKyBjaHVua0lkICsgJyBmYWlsZWQuXFxuKCcgKyBlcnJvclR5cGUgKyAnOiAnICsgcmVhbFNyYyArICcpJztcblx0XHRcdFx0XHRcdFx0XHRlcnJvci5uYW1lID0gJ0NodW5rTG9hZEVycm9yJztcblx0XHRcdFx0XHRcdFx0XHRlcnJvci50eXBlID0gZXJyb3JUeXBlO1xuXHRcdFx0XHRcdFx0XHRcdGVycm9yLnJlcXVlc3QgPSByZWFsU3JjO1xuXHRcdFx0XHRcdFx0XHRcdGluc3RhbGxlZENodW5rRGF0YVsxXShlcnJvcik7XG5cdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9O1xuXHRcdFx0XHRcdF9fd2VicGFja19yZXF1aXJlX18ubCh1cmwsIGxvYWRpbmdFbmRlZCwgXCJjaHVuay1cIiArIGNodW5rSWQsIGNodW5rSWQpO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxufTtcblxuLy8gbm8gcHJlZmV0Y2hpbmdcblxuLy8gbm8gcHJlbG9hZGVkXG5cbi8vIG5vIEhNUlxuXG4vLyBubyBITVIgbWFuaWZlc3RcblxuLy8gbm8gb24gY2h1bmtzIGxvYWRlZFxuXG4vLyBpbnN0YWxsIGEgSlNPTlAgY2FsbGJhY2sgZm9yIGNodW5rIGxvYWRpbmdcbnZhciB3ZWJwYWNrSnNvbnBDYWxsYmFjayA9IChwYXJlbnRDaHVua0xvYWRpbmdGdW5jdGlvbiwgZGF0YSkgPT4ge1xuXHR2YXIgW2NodW5rSWRzLCBtb3JlTW9kdWxlcywgcnVudGltZV0gPSBkYXRhO1xuXHQvLyBhZGQgXCJtb3JlTW9kdWxlc1wiIHRvIHRoZSBtb2R1bGVzIG9iamVjdCxcblx0Ly8gdGhlbiBmbGFnIGFsbCBcImNodW5rSWRzXCIgYXMgbG9hZGVkIGFuZCBmaXJlIGNhbGxiYWNrXG5cdHZhciBtb2R1bGVJZCwgY2h1bmtJZCwgaSA9IDA7XG5cdGlmKGNodW5rSWRzLnNvbWUoKGlkKSA9PiAoaW5zdGFsbGVkQ2h1bmtzW2lkXSAhPT0gMCkpKSB7XG5cdFx0Zm9yKG1vZHVsZUlkIGluIG1vcmVNb2R1bGVzKSB7XG5cdFx0XHRpZihfX3dlYnBhY2tfcmVxdWlyZV9fLm8obW9yZU1vZHVsZXMsIG1vZHVsZUlkKSkge1xuXHRcdFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLm1bbW9kdWxlSWRdID0gbW9yZU1vZHVsZXNbbW9kdWxlSWRdO1xuXHRcdFx0fVxuXHRcdH1cblx0XHRpZihydW50aW1lKSB2YXIgcmVzdWx0ID0gcnVudGltZShfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblx0fVxuXHRpZihwYXJlbnRDaHVua0xvYWRpbmdGdW5jdGlvbikgcGFyZW50Q2h1bmtMb2FkaW5nRnVuY3Rpb24oZGF0YSk7XG5cdGZvcig7aSA8IGNodW5rSWRzLmxlbmd0aDsgaSsrKSB7XG5cdFx0Y2h1bmtJZCA9IGNodW5rSWRzW2ldO1xuXHRcdGlmKF9fd2VicGFja19yZXF1aXJlX18ubyhpbnN0YWxsZWRDaHVua3MsIGNodW5rSWQpICYmIGluc3RhbGxlZENodW5rc1tjaHVua0lkXSkge1xuXHRcdFx0aW5zdGFsbGVkQ2h1bmtzW2NodW5rSWRdWzBdKCk7XG5cdFx0fVxuXHRcdGluc3RhbGxlZENodW5rc1tjaHVua0lkXSA9IDA7XG5cdH1cblxufVxuXG52YXIgY2h1bmtMb2FkaW5nR2xvYmFsID0gc2VsZltcIndlYnBhY2tDaHVua2V4Yl9jbGllbnRcIl0gPSBzZWxmW1wid2VicGFja0NodW5rZXhiX2NsaWVudFwiXSB8fCBbXTtcbmNodW5rTG9hZGluZ0dsb2JhbC5mb3JFYWNoKHdlYnBhY2tKc29ucENhbGxiYWNrLmJpbmQobnVsbCwgMCkpO1xuY2h1bmtMb2FkaW5nR2xvYmFsLnB1c2ggPSB3ZWJwYWNrSnNvbnBDYWxsYmFjay5iaW5kKG51bGwsIGNodW5rTG9hZGluZ0dsb2JhbC5wdXNoLmJpbmQoY2h1bmtMb2FkaW5nR2xvYmFsKSk7IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5uYyA9IHVuZGVmaW5lZDsiLCIvKipcclxuICogV2VicGFjayB3aWxsIHJlcGxhY2UgX193ZWJwYWNrX3B1YmxpY19wYXRoX18gd2l0aCBfX3dlYnBhY2tfcmVxdWlyZV9fLnAgdG8gc2V0IHRoZSBwdWJsaWMgcGF0aCBkeW5hbWljYWxseS5cclxuICogVGhlIHJlYXNvbiB3aHkgd2UgY2FuJ3Qgc2V0IHRoZSBwdWJsaWNQYXRoIGluIHdlYnBhY2sgY29uZmlnIGlzOiB3ZSBjaGFuZ2UgdGhlIHB1YmxpY1BhdGggd2hlbiBkb3dubG9hZC5cclxuICogKi9cclxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lXHJcbi8vIEB0cy1pZ25vcmVcclxuX193ZWJwYWNrX3B1YmxpY19wYXRoX18gPSB3aW5kb3cuamltdUNvbmZpZy5iYXNlVXJsXHJcbiIsImltcG9ydCB7IFJlYWN0LCB0eXBlIEFsbFdpZGdldFByb3BzIH0gZnJvbSAnamltdS1jb3JlJ1xyXG5pbXBvcnQgeyB0eXBlIElNQ29uZmlnIH0gZnJvbSAnLi4vY29uZmlnJ1xyXG5pbXBvcnQgcHJvamVjdGlvbiBmcm9tICdAYXJjZ2lzL2NvcmUvZ2VvbWV0cnkvcHJvamVjdGlvbidcclxuaW1wb3J0IHsgdXNlRWZmZWN0LCB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0J1xyXG5pbXBvcnQgeyBzZXRBc3NldFBhdGggfSBmcm9tICdAZXNyaS9jYWxjaXRlLWNvbXBvbmVudHMvZGlzdC9jb21wb25lbnRzJ1xyXG5pbXBvcnQgeyBDYWxjaXRlQnV0dG9uIH0gZnJvbSAnQGVzcmkvY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0J1xyXG5pbXBvcnQgJ0Blc3JpL2NhbGNpdGUtY29tcG9uZW50cy9kaXN0L2NhbGNpdGUvY2FsY2l0ZS5jc3MnXHJcblxyXG5jb25zdCBXaWRnZXQgPSAocHJvcHM6IEFsbFdpZGdldFByb3BzPElNQ29uZmlnPikgPT4ge1xyXG4gIGNvbnN0IFtpc0xvYWRlZCwgc2V0SXNMb2FkZWRdID0gdXNlU3RhdGUoZmFsc2UpXHJcblxyXG4gIHVzZUVmZmVjdCgoKSA9PiB7XHJcbiAgICBpZiAoIWlzTG9hZGVkKSB7XHJcbiAgICAgIHNldElzTG9hZGVkKHRydWUpXHJcbiAgICAgIHNldEFzc2V0UGF0aChgJHtwcm9wcy5jb250ZXh0LmZvbGRlclVybH1kaXN0L3J1bnRpbWUvYXNzZXRzYClcclxuXHJcbiAgICAgIC8vIGlzTG9hZGVkIGlzIG5vdCByZWNvZ25pemVkIGFzIGEgZnVuY3Rpb24gd2hlbiB1c2luZyBpbXBvcnQgKiBhcyBwcm9qZWN0aW9uIGZyb20gJ0BhcmNnaXMvY29yZS9nZW9tZXRyeS9wcm9qZWN0aW9uJ1xyXG4gICAgICAvLyB3aGVuIHVzaW5nIGltcG9ydCBwcm9qZWN0aW9uIGZyb20gJ0BhcmNnaXMvY29yZS9nZW9tZXRyeS9wcm9qZWN0aW9uJyBpdCB3b3JrcywgYnV0IHRoaXMgbGVhZHMgdG8gaXNzdWVzIHdoZW5cclxuICAgICAgLy8gdXNpbmcgdGhlIHdpZGdldCBpbiB0aGUgRGV2ZWxvcGVyIEVkaXRpb25cclxuICAgICAgaWYgKHByb2plY3Rpb24uaXNMb2FkZWQoKSkge1xyXG4gICAgICAgIGNvbnNvbGUubG9nKCdwcm9qZWN0aW9uIGlzIGxvYWRlZCcpXHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9LCBbaXNMb2FkZWRdKVxyXG5cclxuICByZXR1cm4gKFxyXG4gICAgPGRpdiBjbGFzc05hbWU9XCJ3aWRnZXQtZGVtbyBqaW11LXdpZGdldCBtLTJcIj5cclxuICAgICAgPHA+U2ltcGxlIFdpZGdldDwvcD5cclxuICAgICAgPHA+ZXhhbXBsZUNvbmZpZ1Byb3BlcnR5OiB7cHJvcHMuY29uZmlnLmV4YW1wbGVDb25maWdQcm9wZXJ0eX08L3A+XHJcbiAgICAgIDxDYWxjaXRlQnV0dG9uPkEgYnV0dG9uPC9DYWxjaXRlQnV0dG9uPlxyXG4gICAgPC9kaXY+XHJcbiAgKVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBXaWRnZXRcclxuXG4gZXhwb3J0IGZ1bmN0aW9uIF9fc2V0X3dlYnBhY2tfcHVibGljX3BhdGhfXyh1cmwpIHsgX193ZWJwYWNrX3B1YmxpY19wYXRoX18gPSB1cmwgfSJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==