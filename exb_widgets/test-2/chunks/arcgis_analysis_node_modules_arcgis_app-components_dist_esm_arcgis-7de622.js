"use strict";
(self["webpackChunkexb_client"] = self["webpackChunkexb_client"] || []).push([["vendors-extensions_widgets_arcgis_analysis_node_modules_arcgis_app-components_dist_esm_arcgis-7de622"],{

/***/ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/add-item-97d577a9.js":
/*!**************************************************************************************************************!*\
  !*** ./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/add-item-97d577a9.js ***!
  \**************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   a: () => (/* binding */ addItemState),
/* harmony export */   b: () => (/* binding */ addItemUrlState),
/* harmony export */   c: () => (/* binding */ addItemRequestState),
/* harmony export */   d: () => (/* binding */ addItemStore)
/* harmony export */ });
/* harmony import */ var _index_81d548b7_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index-81d548b7.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/index-81d548b7.js");
/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * v3.0.99
 */


const addItemStore = (0,_index_81d548b7_js__WEBPACK_IMPORTED_MODULE_0__.c)({
  typeKeywords: [],
  customParameters: [],
  analyzedLocationTypes: [],
  allowStoredAuth: true,
  isSecured: null,
  checkAuth: false
});
// Entire add item state object
const addItemState = addItemStore.state;
// Subsets of add item state
const addItemRequestState = addItemStore.state;
const addItemUrlState = addItemStore.state;




/***/ }),

/***/ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/arcgis-notebook-runtime-select.entry.js":
/*!*********************************************************************************************************************************!*\
  !*** ./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/arcgis-notebook-runtime-select.entry.js ***!
  \*********************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   arcgis_notebook_runtime_select: () => (/* binding */ ArcgisNotebookRuntimeSelect)
/* harmony export */ });
/* harmony import */ var _index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index-92ebb396.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/index-92ebb396.js");
/* harmony import */ var _locale_13e00a75_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./locale-13e00a75.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/locale-13e00a75.js");
/* harmony import */ var _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./add-item-97d577a9.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/add-item-97d577a9.js");
/* harmony import */ var _config_eb5f7dc2_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./config-eb5f7dc2.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/config-eb5f7dc2.js");
/* harmony import */ var _loadModules_aaf30bd6_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./loadModules-aaf30bd6.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/loadModules-aaf30bd6.js");
/* harmony import */ var _portal_79caaeff_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./portal-79caaeff.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/portal-79caaeff.js");
/* harmony import */ var _privileges_35590eb4_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./privileges-35590eb4.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/privileges-35590eb4.js");
/* harmony import */ var _dom_13f5b00c_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./dom-13f5b00c.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/dom-13f5b00c.js");
/* harmony import */ var _languageUtil_22258c90_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./languageUtil-22258c90.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/languageUtil-22258c90.js");
/* harmony import */ var _index_81d548b7_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./index-81d548b7.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/index-81d548b7.js");
/* harmony import */ var _privileges_ccd5f37d_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./privileges-ccd5f37d.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/privileges-ccd5f37d.js");
/* harmony import */ var _functional_c82f5ab9_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./functional-c82f5ab9.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/functional-c82f5ab9.js");
/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * v3.0.99
 */













async function getNotebookServer() {
  const { config, portal } = _config_eb5f7dc2_js__WEBPACK_IMPORTED_MODULE_3__.c;
  return new Promise(async (resolve, reject) => {
    var _a, _b;
    if (!portal.isPortal) {
      const result = await (0,_portal_79caaeff_js__WEBPACK_IMPORTED_MODULE_5__.r)(`${config.restBaseUrl}/portals/self/urls`);
      const url = (_b = (_a = result === null || result === void 0 ? void 0 : result.urls) === null || _a === void 0 ? void 0 : _a.notebooks) === null || _b === void 0 ? void 0 : _b.https;
      if (url) {
        return resolve({ url: `https://${url}`, adminContext: "" });
      }
    }
    else {
      if (config.userInfo) {
        portal.getFederatedServers().then((result) => {
          var _a;
          if ((_a = result === null || result === void 0 ? void 0 : result.servers) === null || _a === void 0 ? void 0 : _a.length) {
            const serversFilterResult = result.servers.filter(({ serverType, serverFunction }) => serverType === "ARCGIS_NOTEBOOK_SERVER" && serverFunction === "NotebookServer");
            if (serversFilterResult.length) {
              const notebookServer = serversFilterResult[0];
              notebookServer.adminContext = "/admin";
              return resolve(notebookServer);
            }
          }
        }, (error) => {
          reject(error);
        });
      }
      else
        reject();
    }
  });
}
function getNotebookRuntimesBase(url) {
  const options = {
    useJsonFormatParam: true,
    useCredentials: true
  };
  return notebookRequest(`${url}/admin/notebooks/runtimes`, "GET", null, options);
}
async function getCurrentRuntimeVersion(url) {
  const options = {
    useJsonFormatParam: true,
    useCredentials: true
  };
  const info = await notebookRequest(`${url}/rest/info`, "GET", null, options);
  return info.currentRuntimeVersion;
}
function formatNotebookRuntimeVersion(version) {
  const versionMap = {
    "10.7": "1.0",
    "10.7.0": "1.0",
    "10.7.1": "2.0",
    "10.8": "3.0",
    "10.8.0": "3.0",
    "10.8.1": "4.0"
  };
  return versionMap[version] || version;
}
function processRuntimes(runtimes = [], currentRuntimeVersion) {
  const { user } = _config_eb5f7dc2_js__WEBPACK_IMPORTED_MODULE_3__.c;
  const canCreateAdvanced = (0,_privileges_35590eb4_js__WEBPACK_IMPORTED_MODULE_6__.s)(user);
  return (runtimes
    // list esri provided runtimes first
    .sort((a, b) => (a.esriProvidedRuntime === b.esriProvidedRuntime ? 0 : a.esriProvidedRuntime ? -1 : 1))
    .filter((runtime) => {
    // filter our advanced notebooks for those that can't use them
    if (!canCreateAdvanced && runtime.requiresAdvancedPrivileges) {
      return false;
    }
    // only show current version or custom runtimes
    const currentVersion = formatNotebookRuntimeVersion(currentRuntimeVersion) === formatNotebookRuntimeVersion(runtime.version);
    return currentVersion || !runtime.esriProvidedRuntime;
  }));
}
async function getNotebookRuntimes() {
  var _a;
  const { url } = await getNotebookServer();
  const currentRuntimeVersion = await getCurrentRuntimeVersion(url);
  const runtimeInfo = await getNotebookRuntimesBase(url);
  if ((_a = runtimeInfo === null || runtimeInfo === void 0 ? void 0 : runtimeInfo.runtimes) === null || _a === void 0 ? void 0 : _a.length) {
    return processRuntimes(runtimeInfo.runtimes, currentRuntimeVersion);
  }
  return null;
}
function notebookServerConfigured() {
  var _a;
  const { config, portal } = _config_eb5f7dc2_js__WEBPACK_IMPORTED_MODULE_3__.c;
  if (portal.isPortal) {
    // On-Prem
    return config.notebookServerEnabled && portal.supportsHostedNotebooks ? true : false;
  }
  else {
    // AGOL
    const blacklistedOrgTypes = ["Trial Developer", "Trial", "Trial Press", "Developer Subscription"];
    const hasBlacklistedOrgType = blacklistedOrgTypes.indexOf((_a = portal.subscriptionInfo) === null || _a === void 0 ? void 0 : _a.type) !== -1;
    return (config.notebookServerEnabled &&
      (!hasBlacklistedOrgType || ((portal === null || portal === void 0 ? void 0 : portal.allowedBetaFeatures) || []).indexOf("notebooks") !== -1));
  }
}
function canShowNotebookSelection() {
  const { user } = _config_eb5f7dc2_js__WEBPACK_IMPORTED_MODULE_3__.c;
  return notebookServerConfigured() && (0,_privileges_35590eb4_js__WEBPACK_IMPORTED_MODULE_6__.r)(user);
}
async function notebookRequest(url, method, data, options) {
  const [_request] = await (0,_loadModules_aaf30bd6_js__WEBPACK_IMPORTED_MODULE_4__.l)(["dojo/request"]);
  const { config } = _config_eb5f7dc2_js__WEBPACK_IMPORTED_MODULE_3__.c;
  options = options || {};
  let query = {};
  const headers = { "X-Requested-With": null };
  const token = config.userInfo ? config.userInfo.token : null;
  // This is needed because notebook server expects an f parameter
  // otherwise we get 'method not allowed'
  if (options.useJsonFormatParam) {
    query.f = "json";
  }
  if (method === "GET") {
    query = Object.assign(Object.assign({}, query), data);
  }
  if (!options.bypassCustomHeaders) {
    headers["X-Esri-Authorization"] = "Bearer " + token;
    if (options.useJsonBody) {
      headers["Content-Type"] = "application/json";
    }
  }
  if (options.contentType) {
    headers["Content-Type"] = options.contentType;
  }
  const requestOptions = {
    data: options.useJsonBody ? (data ? JSON.stringify(data) : null) : data,
    method: method,
    handleAs: "json",
    headers: Object.keys(headers).length ? headers : null,
    query: Object.keys(query).length ? query : null,
    preventCache: options.preventCache === false ? false : true,
    withCredentials: !options.bypassCustomHeaders ? true : false
  };
  return _request(url, requestOptions);
}

const arcgisNotebookRuntimeSelectCss = ":host{--arcgis-label-font-weight:400}.label{margin-top:0;margin-bottom:0;font-weight:var(--arcgis-label-font-weight)}.label--bold{--arcgis-label-font-weight:500}.loader{color:var(--calcite-ui-brand)}.leader-text{font-size:0.875rem;color:var(--calcite-ui-text-1)}";

const ArcgisNotebookRuntimeSelect = class {
  constructor(hostRef) {
    (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.r)(this, hostRef);
    this.handleRuntimeChange = (e) => {
      const value = e.currentTarget.selectedOption.value;
      const i = parseInt(value, 10) || 0;
      this.selectedRuntimeIndex = i;
      this.updateProperties(this.runtimes[i]);
    };
    this.i18n = undefined;
    this.runtimes = undefined;
    this.loading = true;
    this.error = false;
    this.selectedRuntimeIndex = 0;
  }
  async componentWillLoad() {
    const locale = await (0,_locale_13e00a75_js__WEBPACK_IMPORTED_MODULE_1__.g)(this.el);
    this.i18n = locale[0];
  }
  async componentDidLoad() {
    try {
      if (!canShowNotebookSelection())
        return;
      const runtimes = await getNotebookRuntimes();
      this.runtimes = runtimes;
      if (!runtimes || !runtimes.length) {
        throw new Error();
      }
      this.updateProperties(runtimes[0]);
    }
    catch (error) {
      this.error = true;
    }
    this.loading = false;
  }
  updateProperties(runtime) {
    _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_2__.a.properties = {
      notebookRuntimeName: runtime.name,
      notebookRuntimeVersion: formatNotebookRuntimeVersion(runtime.version)
    };
  }
  render() {
    const { i18n, selectedRuntimeIndex } = this;
    if (!canShowNotebookSelection())
      return null;
    return ((0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-label", null, (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("span", { class: "label" }, i18n.selectRuntime), (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-notice", { icon: true, open: this.error, scale: "s", kind: "danger" }, (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { slot: "title" }, i18n.error.title), (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { slot: "message" }, i18n.error.runtimes)), this.loading ? ((0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("span", null, (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-loader", { class: "loader", inline: true, label: i18n.loadingRuntimes }), " ", i18n.loadingRuntimes)) : (!this.error && ((0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-select", { label: i18n.selectRuntime, onCalciteSelectChange: this.handleRuntimeChange }, this.runtimes.map((runtime, i) => ((0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-option", { value: i, selected: selectedRuntimeIndex === i }, runtime.name, " - ", runtime.version))))))));
  }
  get el() { return (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.d)(this); }
};
ArcgisNotebookRuntimeSelect.style = arcgisNotebookRuntimeSelectCss;




/***/ }),

/***/ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/languageUtil-22258c90.js":
/*!******************************************************************************************************************!*\
  !*** ./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/languageUtil-22258c90.js ***!
  \******************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   C: () => (/* binding */ CSS_UTILITY),
/* harmony export */   a: () => (/* binding */ formatDate),
/* harmony export */   f: () => (/* binding */ formatNumber),
/* harmony export */   g: () => (/* binding */ getElementDir),
/* harmony export */   l: () => (/* binding */ languageMap)
/* harmony export */ });
/* harmony import */ var _loadModules_aaf30bd6_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./loadModules-aaf30bd6.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/loadModules-aaf30bd6.js");
/* harmony import */ var _dom_13f5b00c_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dom-13f5b00c.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/dom-13f5b00c.js");
/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * v3.0.99
 */



const languageMap = new Map([
  ["ar", "ar"],
  ["bg", "bg"],
  ["bs", "bs"],
  ["ca", "ca"],
  ["cs", "cs"],
  ["da", "da"],
  ["de", "de"],
  ["el", "el"],
  ["en", "en"],
  ["es", "es"],
  ["et", "et"],
  ["fi", "fi"],
  ["fr", "fr"],
  ["he", "he"],
  ["hr", "hr"],
  ["hu", "hu"],
  ["id", "id"],
  ["it", "it"],
  ["ja", "ja"],
  ["ko", "ko"],
  ["lt", "lt"],
  ["lv", "lv"],
  ["nb", "nb"],
  ["nl", "nl"],
  ["pl", "pl"],
  ["pt-br", "pt-BR"],
  ["pt-pt", "pt-PT"],
  ["ro", "ro"],
  ["ru", "ru"],
  ["sk", "sk"],
  ["sl", "sl"],
  ["sr", "sr"],
  ["sv", "sv"],
  ["th", "th"],
  ["tr", "tr"],
  ["uk", "uk"],
  ["vi", "vi"],
  ["zh-cn", "zh-CN"],
  ["zh-hk", "zh-HK"],
  ["zh-tw", "zh-TW"]
]);
// rtl
function getElementDir(el) {
  return getElementProp(el, "dir", "ltr");
}
function getElementProp(el, prop, value) {
  const closestWithProp = (0,_dom_13f5b00c_js__WEBPACK_IMPORTED_MODULE_1__.c)(el, `[${prop}]`);
  return closestWithProp ? closestWithProp.getAttribute(prop) : value;
}
// css
const CSS_UTILITY = {
  rtl: "arcgis--rtl"
};
async function formatNumber(number, options) {
  const { api, type, places } = options || {};
  if (api === 4) {
    const [intl] = await (0,_loadModules_aaf30bd6_js__WEBPACK_IMPORTED_MODULE_0__.l)(["esri/intl"]);
    const numberFormatIntlOptions = intl.convertNumberFormatToIntlOptions({
      places,
      style: type,
      digitSeparator: true
    });
    return intl.formatNumber(number, Object.assign(Object.assign({}, numberFormatIntlOptions), { style: type }));
  }
  const [dojoNumber] = await (0,_loadModules_aaf30bd6_js__WEBPACK_IMPORTED_MODULE_0__.l)(["dojo/number"]);
  return dojoNumber.format(number, {
    type,
    places,
    pattern: options === null || options === void 0 ? void 0 : options.pattern
  });
}
const cache = {};
function formatDate(date) {
  const lang = document.documentElement.lang;
  const dayShortMonthYear = {
    year: "numeric",
    month: "short",
    day: "numeric"
  };
  if (!cache[lang]) {
    cache[lang] = new Intl.DateTimeFormat(document.documentElement.lang, dayShortMonthYear);
  }
  return cache[lang].format(date);
}




/***/ }),

/***/ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/locale-13e00a75.js":
/*!************************************************************************************************************!*\
  !*** ./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/locale-13e00a75.js ***!
  \************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   a: () => (/* binding */ getComponentClosestLanguage),
/* harmony export */   g: () => (/* binding */ getLocaleComponentStrings)
/* harmony export */ });
/* harmony import */ var _dom_13f5b00c_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dom-13f5b00c.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/dom-13f5b00c.js");
/* harmony import */ var _languageUtil_22258c90_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./languageUtil-22258c90.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/languageUtil-22258c90.js");
/* harmony import */ var _index_92ebb396_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./index-92ebb396.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/index-92ebb396.js");
/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * v3.0.99
 */




// https://medium.com/stencil-tricks/implementing-internationalisation-i18n-with-stencil-5e6559554117
function getComponentClosestLanguage(element) {
  var _a, _b, _c;
  const closestElement = (_a = (0,_dom_13f5b00c_js__WEBPACK_IMPORTED_MODULE_0__.c)(element, "[lang]")) !== null && _a !== void 0 ? _a : (_c = (_b = element.shadowRoot) === null || _b === void 0 ? void 0 : _b.ownerDocument) === null || _c === void 0 ? void 0 : _c.documentElement;
  // language set by the calling application or browser. defaults to english.
  const lang = ((closestElement === null || closestElement === void 0 ? void 0 : closestElement.lang) || (navigator === null || navigator === void 0 ? void 0 : navigator.language) || "en").toLowerCase();
  if (_languageUtil_22258c90_js__WEBPACK_IMPORTED_MODULE_1__.l.has(lang)) {
    return _languageUtil_22258c90_js__WEBPACK_IMPORTED_MODULE_1__.l.get(lang);
  }
  else {
    // "ru-RU" maps to "ru" use case
    if (_languageUtil_22258c90_js__WEBPACK_IMPORTED_MODULE_1__.l.has(lang.slice(0, 2))) {
      return _languageUtil_22258c90_js__WEBPACK_IMPORTED_MODULE_1__.l.get(lang.slice(0, 2));
    }
    else {
      return "en";
    }
  }
}
function getComponentClosestLanguageIntl(element) {
  var _a, _b, _c;
  // it's OK if we don't have the 4 letter language file for it
  // 4 letter language code needed for formatting numbers
  const closestElement = (_a = (0,_dom_13f5b00c_js__WEBPACK_IMPORTED_MODULE_0__.c)(element, "[lang]")) !== null && _a !== void 0 ? _a : (_c = (_b = element.shadowRoot) === null || _b === void 0 ? void 0 : _b.ownerDocument) === null || _c === void 0 ? void 0 : _c.documentElement;
  // language set by the calling application or browser. defaults to english.
  const lang = ((closestElement === null || closestElement === void 0 ? void 0 : closestElement.lang) || (navigator === null || navigator === void 0 ? void 0 : navigator.language) || "en").toLowerCase();
  if (_languageUtil_22258c90_js__WEBPACK_IMPORTED_MODULE_1__.l.has(lang)) {
    return _languageUtil_22258c90_js__WEBPACK_IMPORTED_MODULE_1__.l.get(lang);
  }
  else {
    if (_languageUtil_22258c90_js__WEBPACK_IMPORTED_MODULE_1__.l.has(lang.slice(0, 2))) {
      // we support the 2 letter coded language
      // e.g. it-CH vs it
      return lang;
    }
    else {
      return "en";
    }
  }
}
function fetchLocaleStringsForComponent(componentName, locale) {
  return new Promise((resolve, reject) => {
    fetch((0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_2__.a)(`../arcgis-app-assets/i18n/${componentName}.i18n.${locale}.json`)).then((result) => {
      if (result.ok)
        resolve(result.json());
      else
        reject();
    }, () => reject());
  });
}
const stringCache = {};
function fetchLocaleStringsFromCache(componentName, locale) {
  const id = `${componentName}${locale}`;
  if (!stringCache[id]) {
    stringCache[id] = fetchLocaleStringsForComponent(componentName, locale);
  }
  return stringCache[id];
}
/**
 * Get strings and language codes.
 * This method returns 2 language codes.
 * The first one returns a code that's also supported as a language file.
 * The second one returns a code where there is support for the first 2 letters of the code as part of a language file,
 * but will return the original 4 letter code from the page.
 * E.g. For "it-ch" it will return "it" as the first language code and "it-ch" as the second.
 * The second one is required for esri.intl.setLocale() to get the correct formatting.
 *
 * If a tagName is provided it will overwite the element's tagName
 *
 *  @return [ strings, first language code, second language code]
 */
async function getLocaleComponentStrings(element, tagName) {
  const componentName = tagName || element.tagName.toLowerCase();
  const componentLanguage = getComponentClosestLanguage(element);
  const componentLanguageIntl = getComponentClosestLanguageIntl(element);
  let strings;
  try {
    strings = await fetchLocaleStringsFromCache(componentName, componentLanguage);
  }
  catch (e) {
    console.warn(`no locale for ${componentName} (${componentLanguage}) loading default locale en.`);
    strings = await fetchLocaleStringsFromCache(componentName, "en");
  }
  return [strings, componentLanguage, componentLanguageIntl];
}




/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,