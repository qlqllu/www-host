"use strict";
(self["webpackChunkexb_client"] = self["webpackChunkexb_client"] || []).push([["vendors-extensions_widgets_arcgis_analysis_node_modules_arcgis_geoenrichment-components_dist_-884124"],{

/***/ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/geoenrichment-components/dist/esm/basis_transcoder-4d6347c9.js":
/*!********************************************************************************************************************************!*\
  !*** ./extensions/widgets/arcgis/analysis/node_modules/@arcgis/geoenrichment-components/dist/esm/basis_transcoder-4d6347c9.js ***!
  \********************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

var __filename = "/index.js";
var __dirname = "/";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   b: () => (/* binding */ r)
/* harmony export */ });
/* harmony import */ var _commonjsHelpers_9577ff78_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_commonjsHelpers-9577ff78.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/geoenrichment-components/dist/esm/_commonjsHelpers-9577ff78.js");


/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
var t=(0,_commonjsHelpers_9577ff78_js__WEBPACK_IMPORTED_MODULE_0__.o)((function(n,t){var r,e=(r="undefined"!=typeof document&&document.currentScript?document.currentScript.src:void 0, true&&(r=r||__filename),function(n){var t,e=void 0!==(n=n||{})?n:{},i={};for(t in e)e.hasOwnProperty(t)&&(i[t]=e[t]);var o=!1,a=!1,u=!1,s=!1;o="object"==typeof window,a="function"==typeof importScripts,u="object"==typeof process&&"object"==typeof process.versions&&"string"==typeof process.versions.node,s=!o&&!u&&!a;var c,l,f,p,d="";function y(n){return e.locateFile?e.locateFile(n,d):d+n}u?(d=a?(__webpack_require__(/*! path */ "?cdd9").dirname)(d)+"/":__dirname+"/",c=function(n,t){return f||(f=__webpack_require__(/*! fs */ "?ff47")),p||(p=__webpack_require__(/*! path */ "?cdd9")),n=p.normalize(n),f.readFileSync(n,t?null:"utf8")},l=function(n){var t=c(n,!0);return t.buffer||(t=new Uint8Array(t)),C(t.buffer),t},process.argv.length>1&&process.argv[1].replace(/\\/g,"/"),process.argv.slice(2),process.on("uncaughtException",(function(n){if(!(n instanceof qr))throw n})),process.on("unhandledRejection",yn),e.inspect=function(){return "[Emscripten Module object]"}):s?("undefined"!=typeof read&&(c=function(n){return read(n)}),l=function(n){var t;return "function"==typeof readbuffer?new Uint8Array(readbuffer(n)):(C("object"==typeof(t=read(n,"binary"))),t)},"undefined"!=typeof scriptArgs&&scriptArgs,"undefined"!=typeof print&&("undefined"==typeof console&&(console={}),console.log=print,console.warn=console.error="undefined"!=typeof printErr?printErr:print)):(o||a)&&(a?d=self.location.href:document.currentScript&&(d=document.currentScript.src),r&&(d=r),d=0!==d.indexOf("blob:")?d.substr(0,d.lastIndexOf("/")+1):"",c=function(n){var t=new XMLHttpRequest;return t.open("GET",n,!1),t.send(null),t.responseText},a&&(l=function(n){var t=new XMLHttpRequest;return t.open("GET",n,!1),t.responseType="arraybuffer",t.send(null),new Uint8Array(t.response)}));var h,v,m=e.print||console.log.bind(console),g=e.printErr||console.warn.bind(console);for(t in i)i.hasOwnProperty(t)&&(e[t]=i[t]);i=null,e.wasmBinary&&(h=e.wasmBinary),"object"!=typeof WebAssembly&&g("no native wasm support detected");var w=new WebAssembly.Table({initial:59,maximum:59,element:"anyfunc"}),b=!1;function C(n,t){n||yn("Assertion failed: "+t);}var T="undefined"!=typeof TextDecoder?new TextDecoder("utf8"):void 0;function $(n,t,r){for(var e=t+r,i=t;n[i]&&!(i>=e);)++i;if(i-t>16&&n.subarray&&T)return T.decode(n.subarray(t,i));for(var o="";t<i;){var a=n[t++];if(128&a){var u=63&n[t++];if(192!=(224&a)){var s=63&n[t++];if((a=224==(240&a)?(15&a)<<12|u<<6|s:(7&a)<<18|u<<12|s<<6|63&n[t++])<65536)o+=String.fromCharCode(a);else {var c=a-65536;o+=String.fromCharCode(55296|c>>10,56320|1023&c);}}else o+=String.fromCharCode((31&a)<<6|u);}else o+=String.fromCharCode(a);}return o}function _(n,t){return n?$(x,n,t):""}function P(n,t,r,e){if(!(e>0))return 0;for(var i=r,o=r+e-1,a=0;a<n.length;++a){var u=n.charCodeAt(a);if(u>=55296&&u<=57343&&(u=65536+((1023&u)<<10)|1023&n.charCodeAt(++a)),u<=127){if(r>=o)break;t[r++]=u;}else if(u<=2047){if(r+1>=o)break;t[r++]=192|u>>6,t[r++]=128|63&u;}else if(u<=65535){if(r+2>=o)break;t[r++]=224|u>>12,t[r++]=128|u>>6&63,t[r++]=128|63&u;}else {if(r+3>=o)break;t[r++]=240|u>>18,t[r++]=128|u>>12&63,t[r++]=128|u>>6&63,t[r++]=128|63&u;}}return t[r]=0,r-i}function A(n,t,r){return P(n,x,t,r)}function E(n){for(var t=0,r=0;r<n.length;++r){var e=n.charCodeAt(r);e>=55296&&e<=57343&&(e=65536+((1023&e)<<10)|1023&n.charCodeAt(++r)),e<=127?++t:t+=e<=2047?2:e<=65535?3:4;}return t}var W="undefined"!=typeof TextDecoder?new TextDecoder("utf-16le"):void 0;function S(n){for(var t=n,r=t>>1;U[r];)++r;if((t=r<<1)-n>32&&W)return W.decode(x.subarray(n,t));for(var e=0,i="";;){var o=U[n+2*e>>1];if(0==o)return i;++e,i+=String.fromCharCode(o);}}function F(n,t,r){if(void 0===r&&(r=2147483647),r<2)return 0;for(var e=t,i=(r-=2)<2*n.length?r/2:n.length,o=0;o<i;++o){var a=n.charCodeAt(o);U[t>>1]=a,t+=2;}return U[t>>1]=0,t-e}function O(n){return 2*n.length}function j(n){for(var t=0,r="";;){var e=V[n+4*t>>2];if(0==e)return r;if(++t,e>=65536){var i=e-65536;r+=String.fromCharCode(55296|i>>10,56320|1023&i);}else r+=String.fromCharCode(e);}}function k(n,t,r){if(void 0===r&&(r=2147483647),r<4)return 0;for(var e=t,i=e+r-4,o=0;o<n.length;++o){var a=n.charCodeAt(o);if(a>=55296&&a<=57343&&(a=65536+((1023&a)<<10)|1023&n.charCodeAt(++o)),V[t>>2]=a,(t+=4)+4>i)break}return V[t>>2]=0,t-e}function R(n){for(var t=0,r=0;r<n.length;++r){var e=n.charCodeAt(r);e>=55296&&e<=57343&&++r,t+=4;}return t}var I,D,x,U,M,V,H,z,q,B=65536;function G(n,t){return n%t>0&&(n+=t-n%t),n}function L(n){I=n,e.HEAP8=D=new Int8Array(n),e.HEAP16=U=new Int16Array(n),e.HEAP32=V=new Int32Array(n),e.HEAPU8=x=new Uint8Array(n),e.HEAPU16=M=new Uint16Array(n),e.HEAPU32=H=new Uint32Array(n),e.HEAPF32=z=new Float32Array(n),e.HEAPF64=q=new Float64Array(n);}var N=5561216,X=318176,J=e.INITIAL_MEMORY||16777216;function Y(n){for(;n.length>0;){var t=n.shift();if("function"!=typeof t){var r=t.func;"number"==typeof r?void 0===t.arg?e.dynCall_v(r):e.dynCall_vi(r,t.arg):r(void 0===t.arg?null:t.arg);}else t();}}(v=e.wasmMemory?e.wasmMemory:new WebAssembly.Memory({initial:J/B}))&&(I=v.buffer),J=I.byteLength,L(I),V[X>>2]=N;var Z=[],K=[],Q=[],nn=[];function tn(){if(e.preRun)for("function"==typeof e.preRun&&(e.preRun=[e.preRun]);e.preRun.length;)an(e.preRun.shift());Y(Z);}function rn(){Y(K);}function en(){Y(Q);}function on(){if(e.postRun)for("function"==typeof e.postRun&&(e.postRun=[e.postRun]);e.postRun.length;)un(e.postRun.shift());Y(nn);}function an(n){Z.unshift(n);}function un(n){nn.unshift(n);}var sn=Math.ceil,cn=Math.floor,ln=0,fn=null;function pn(n){ln++,e.monitorRunDependencies&&e.monitorRunDependencies(ln);}function dn(n){if(ln--,e.monitorRunDependencies&&e.monitorRunDependencies(ln),0==ln&&fn){var t=fn;fn=null,t();}}function yn(n){throw e.onAbort&&e.onAbort(n),m(n+=""),g(n),b=!0,n="abort("+n+"). Build with -s ASSERTIONS=1 for more info.",new WebAssembly.RuntimeError(n)}e.preloadedImages={},e.preloadedAudios={};var hn="data:application/octet-stream;base64,";function vn(n){return String.prototype.startsWith?n.startsWith(hn):0===n.indexOf(hn)}var mn="basis_transcoder.wasm";function gn(){try{if(h)return new Uint8Array(h);if(l)return l(mn);throw "both async and sync fetching of the wasm failed"}catch(g){yn(g);}}function wn(){return h||!o&&!a||"function"!=typeof fetch?new Promise((function(n,t){n(gn());})):fetch(mn,{credentials:"same-origin"}).then((function(n){if(!n.ok)throw "failed to load wasm binary file at '"+mn+"'";return n.arrayBuffer()})).catch((function(){return gn()}))}function bn(){var n={a:Dr};function t(n,t){var r=n.exports;e.asm=r,dn();}function r(n){t(n.instance);}function i(t){return wn().then((function(t){return WebAssembly.instantiate(t,n)})).then(t,(function(n){g("failed to asynchronously prepare wasm: "+n),yn(n);}))}function o(){if(h||"function"!=typeof WebAssembly.instantiateStreaming||vn(mn)||"function"!=typeof fetch)return i(r);fetch(mn,{credentials:"same-origin"}).then((function(t){return WebAssembly.instantiateStreaming(t,n).then(r,(function(n){g("wasm streaming compile failed: "+n),g("falling back to ArrayBuffer instantiation"),i(r);}))}));}if(pn(),e.instantiateWasm)try{return e.instantiateWasm(n,t)}catch(a){return g("Module.instantiateWasm callback failed with error: "+a),!1}return o(),{}}function Cn(n){return Vr(n)}function Tn(n,t,r){throw n}function $n(n){switch(n){case 1:return 0;case 2:return 1;case 4:return 2;case 8:return 3;default:throw new TypeError("Unknown type size: "+n)}}function _n(){for(var n=new Array(256),t=0;t<256;++t)n[t]=String.fromCharCode(t);Pn=n;}vn(mn)||(mn=y(mn)),K.push({func:function(){Mr();}});var Pn=void 0;function An(n){for(var t="",r=n;x[r];)t+=Pn[x[r++]];return t}var En={},Wn={},Sn={},Fn=48,On=57;function jn(n){if(void 0===n)return "_unknown";var t=(n=n.replace(/[^a-zA-Z0-9_]/g,"$")).charCodeAt(0);return t>=Fn&&t<=On?"_"+n:n}function kn(n,t){return n=jn(n),new Function("body","return function "+n+'() {\n    "use strict";    return body.apply(this, arguments);\n};\n')(t)}function Rn(n,t){var r=kn(t,(function(n){this.name=t,this.message=n;var r=new Error(n).stack;void 0!==r&&(this.stack=this.toString()+"\n"+r.replace(/^Error(:[^\n]*)?\n/,""));}));return r.prototype=Object.create(n.prototype),r.prototype.constructor=r,r.prototype.toString=function(){return void 0===this.message?this.name:this.name+": "+this.message},r}var In=void 0;function Dn(n){throw new In(n)}var xn=void 0;function Un(n){throw new xn(n)}function Mn(n,t,r){function e(t){var e=r(t);e.length!==n.length&&Un("Mismatched type converter count");for(var i=0;i<n.length;++i)Vn(n[i],e[i]);}n.forEach((function(n){Sn[n]=t;}));var i=new Array(t.length),o=[],a=0;t.forEach((function(n,t){Wn.hasOwnProperty(n)?i[t]=Wn[n]:(o.push(n),En.hasOwnProperty(n)||(En[n]=[]),En[n].push((function(){i[t]=Wn[n],++a===o.length&&e(i);})));})),0===o.length&&e(i);}function Vn(n,t,r){if(r=r||{},!("argPackAdvance"in t))throw new TypeError("registerType registeredInstance requires argPackAdvance");var e=t.name;if(n||Dn('type "'+e+'" must have a positive integer typeid pointer'),Wn.hasOwnProperty(n)){if(r.ignoreDuplicateRegistrations)return;Dn("Cannot register type '"+e+"' twice");}if(Wn[n]=t,delete Sn[n],En.hasOwnProperty(n)){var i=En[n];delete En[n],i.forEach((function(n){n();}));}}function Hn(n,t,r,e,i){var o=$n(r);Vn(n,{name:t=An(t),fromWireType:function(n){return !!n},toWireType:function(n,t){return t?e:i},argPackAdvance:8,readValueFromPointer:function(n){var e;if(1===r)e=D;else if(2===r)e=U;else {if(4!==r)throw new TypeError("Unknown boolean type size: "+t);e=V;}return this.fromWireType(e[n>>o])},destructorFunction:null});}function zn(n){if(!(this instanceof it))return !1;if(!(n instanceof it))return !1;for(var t=this.$$.ptrType.registeredClass,r=this.$$.ptr,e=n.$$.ptrType.registeredClass,i=n.$$.ptr;t.baseClass;)r=t.upcast(r),t=t.baseClass;for(;e.baseClass;)i=e.upcast(i),e=e.baseClass;return t===e&&r===i}function qn(n){return {count:n.count,deleteScheduled:n.deleteScheduled,preservePointerOnDelete:n.preservePointerOnDelete,ptr:n.ptr,ptrType:n.ptrType,smartPtr:n.smartPtr,smartPtrType:n.smartPtrType}}function Bn(n){function t(n){return n.$$.ptrType.registeredClass.name}Dn(t(n)+" instance already deleted");}var Gn=!1;function Ln(n){}function Nn(n){n.smartPtr?n.smartPtrType.rawDestructor(n.smartPtr):n.ptrType.registeredClass.rawDestructor(n.ptr);}function Xn(n){n.count.value-=1,0===n.count.value&&Nn(n);}function Jn(n){return "undefined"==typeof FinalizationGroup?(Jn=function(n){return n},n):(Gn=new FinalizationGroup((function(n){for(var t=n.next();!t.done;t=n.next()){var r=t.value;r.ptr?Xn(r):console.warn("object already deleted: "+r.ptr);}})),Ln=function(n){Gn.unregister(n.$$);},(Jn=function(n){return Gn.register(n,n.$$,n.$$),n})(n))}function Yn(){if(this.$$.ptr||Bn(this),this.$$.preservePointerOnDelete)return this.$$.count.value+=1,this;var n=Jn(Object.create(Object.getPrototypeOf(this),{$$:{value:qn(this.$$)}}));return n.$$.count.value+=1,n.$$.deleteScheduled=!1,n}function Zn(){this.$$.ptr||Bn(this),this.$$.deleteScheduled&&!this.$$.preservePointerOnDelete&&Dn("Object already scheduled for deletion"),Ln(this),Xn(this.$$),this.$$.preservePointerOnDelete||(this.$$.smartPtr=void 0,this.$$.ptr=void 0);}function Kn(){return !this.$$.ptr}var Qn=void 0,nt=[];function tt(){for(;nt.length;){var n=nt.pop();n.$$.deleteScheduled=!1,n.delete();}}function rt(){return this.$$.ptr||Bn(this),this.$$.deleteScheduled&&!this.$$.preservePointerOnDelete&&Dn("Object already scheduled for deletion"),nt.push(this),1===nt.length&&Qn&&Qn(tt),this.$$.deleteScheduled=!0,this}function et(){it.prototype.isAliasOf=zn,it.prototype.clone=Yn,it.prototype.delete=Zn,it.prototype.isDeleted=Kn,it.prototype.deleteLater=rt;}function it(){}var ot={};function at(n,t,r){if(void 0===n[t].overloadTable){var e=n[t];n[t]=function(){return n[t].overloadTable.hasOwnProperty(arguments.length)||Dn("Function '"+r+"' called with an invalid number of arguments ("+arguments.length+") - expects one of ("+n[t].overloadTable+")!"),n[t].overloadTable[arguments.length].apply(this,arguments)},n[t].overloadTable=[],n[t].overloadTable[e.argCount]=e;}}function ut(n,t,r){e.hasOwnProperty(n)?((void 0===r||void 0!==e[n].overloadTable&&void 0!==e[n].overloadTable[r])&&Dn("Cannot register public name '"+n+"' twice"),at(e,n,n),e.hasOwnProperty(r)&&Dn("Cannot register multiple overloads of a function with the same number of arguments ("+r+")!"),e[n].overloadTable[r]=t):(e[n]=t,void 0!==r&&(e[n].numArguments=r));}function st(n,t,r,e,i,o,a,u){this.name=n,this.constructor=t,this.instancePrototype=r,this.rawDestructor=e,this.baseClass=i,this.getActualType=o,this.upcast=a,this.downcast=u,this.pureVirtualFunctions=[];}function ct(n,t,r){for(;t!==r;)t.upcast||Dn("Expected null or instance of "+r.name+", got an instance of "+t.name),n=t.upcast(n),t=t.baseClass;return n}function lt(n,t){if(null===t)return this.isReference&&Dn("null is not a valid "+this.name),0;t.$$||Dn('Cannot pass "'+Jt(t)+'" as a '+this.name),t.$$.ptr||Dn("Cannot pass deleted object as a pointer of type "+this.name);var r=t.$$.ptrType.registeredClass;return ct(t.$$.ptr,r,this.registeredClass)}function ft(n,t){var r;if(null===t)return this.isReference&&Dn("null is not a valid "+this.name),this.isSmartPointer?(r=this.rawConstructor(),null!==n&&n.push(this.rawDestructor,r),r):0;t.$$||Dn('Cannot pass "'+Jt(t)+'" as a '+this.name),t.$$.ptr||Dn("Cannot pass deleted object as a pointer of type "+this.name),!this.isConst&&t.$$.ptrType.isConst&&Dn("Cannot convert argument of type "+(t.$$.smartPtrType?t.$$.smartPtrType.name:t.$$.ptrType.name)+" to parameter type "+this.name);var e=t.$$.ptrType.registeredClass;if(r=ct(t.$$.ptr,e,this.registeredClass),this.isSmartPointer)switch(void 0===t.$$.smartPtr&&Dn("Passing raw pointer to smart pointer is illegal"),this.sharingPolicy){case 0:t.$$.smartPtrType===this?r=t.$$.smartPtr:Dn("Cannot convert argument of type "+(t.$$.smartPtrType?t.$$.smartPtrType.name:t.$$.ptrType.name)+" to parameter type "+this.name);break;case 1:r=t.$$.smartPtr;break;case 2:if(t.$$.smartPtrType===this)r=t.$$.smartPtr;else {var i=t.clone();r=this.rawShare(r,Nt((function(){i.delete();}))),null!==n&&n.push(this.rawDestructor,r);}break;default:Dn("Unsupporting sharing policy");}return r}function pt(n,t){if(null===t)return this.isReference&&Dn("null is not a valid "+this.name),0;t.$$||Dn('Cannot pass "'+Jt(t)+'" as a '+this.name),t.$$.ptr||Dn("Cannot pass deleted object as a pointer of type "+this.name),t.$$.ptrType.isConst&&Dn("Cannot convert argument of type "+t.$$.ptrType.name+" to parameter type "+this.name);var r=t.$$.ptrType.registeredClass;return ct(t.$$.ptr,r,this.registeredClass)}function dt(n){return this.fromWireType(H[n>>2])}function yt(n){return this.rawGetPointee&&(n=this.rawGetPointee(n)),n}function ht(n){this.rawDestructor&&this.rawDestructor(n);}function vt(n){null!==n&&n.delete();}function mt(n,t,r){if(t===r)return n;if(void 0===r.baseClass)return null;var e=mt(n,t,r.baseClass);return null===e?null:r.downcast(e)}function gt(){return Object.keys(Tt).length}function wt(){var n=[];for(var t in Tt)Tt.hasOwnProperty(t)&&n.push(Tt[t]);return n}function bt(n){Qn=n,nt.length&&Qn&&Qn(tt);}function Ct(){e.getInheritedInstanceCount=gt,e.getLiveInheritedInstances=wt,e.flushPendingDeletes=tt,e.setDelayFunction=bt;}var Tt={};function $t(n,t){for(void 0===t&&Dn("ptr should not be undefined");n.baseClass;)t=n.upcast(t),n=n.baseClass;return t}function _t(n,t){return t=$t(n,t),Tt[t]}function Pt(n,t){return t.ptrType&&t.ptr||Un("makeClassHandle requires ptr and ptrType"),!!t.smartPtrType!=!!t.smartPtr&&Un("Both smartPtrType and smartPtr must be specified"),t.count={value:1},Jn(Object.create(n,{$$:{value:t}}))}function At(n){var t=this.getPointee(n);if(!t)return this.destructor(n),null;var r=_t(this.registeredClass,t);if(void 0!==r){if(0===r.$$.count.value)return r.$$.ptr=t,r.$$.smartPtr=n,r.clone();var e=r.clone();return this.destructor(n),e}function i(){return this.isSmartPointer?Pt(this.registeredClass.instancePrototype,{ptrType:this.pointeeType,ptr:t,smartPtrType:this,smartPtr:n}):Pt(this.registeredClass.instancePrototype,{ptrType:this,ptr:n})}var o,a=this.registeredClass.getActualType(t),u=ot[a];if(!u)return i.call(this);o=this.isConst?u.constPointerType:u.pointerType;var s=mt(t,this.registeredClass,o.registeredClass);return null===s?i.call(this):this.isSmartPointer?Pt(o.registeredClass.instancePrototype,{ptrType:o,ptr:s,smartPtrType:this,smartPtr:n}):Pt(o.registeredClass.instancePrototype,{ptrType:o,ptr:s})}function Et(){Wt.prototype.getPointee=yt,Wt.prototype.destructor=ht,Wt.prototype.argPackAdvance=8,Wt.prototype.readValueFromPointer=dt,Wt.prototype.deleteObject=vt,Wt.prototype.fromWireType=At;}function Wt(n,t,r,e,i,o,a,u,s,c,l){this.name=n,this.registeredClass=t,this.isReference=r,this.isConst=e,this.isSmartPointer=i,this.pointeeType=o,this.sharingPolicy=a,this.rawGetPointee=u,this.rawConstructor=s,this.rawShare=c,this.rawDestructor=l,i||void 0!==t.baseClass?this.toWireType=ft:e?(this.toWireType=lt,this.destructorFunction=null):(this.toWireType=pt,this.destructorFunction=null);}function St(n,t,r){e.hasOwnProperty(n)||Un("Replacing nonexistant public symbol"),void 0!==e[n].overloadTable&&void 0!==r?e[n].overloadTable[r]=t:(e[n]=t,e[n].argCount=r);}function Ft(n,t){function r(r){for(var e=[],i=1;i<n.length;++i)e.push("a"+i);var o="return function dynCall_"+n+"_"+t+"("+e.join(", ")+") {\n";return o+="    return dynCall(rawFunction"+(e.length?", ":"")+e.join(", ")+");\n",o+="};\n",new Function("dynCall","rawFunction",o)(r,t)}n=An(n);var i=r(e["dynCall_"+n]);return "function"!=typeof i&&Dn("unknown function pointer with signature "+n+": "+t),i}var Ot=void 0;function jt(n){var t=zr(n),r=An(t);return Hr(t),r}function kt(n,t){var r=[],e={};function i(n){e[n]||Wn[n]||(Sn[n]?Sn[n].forEach(i):(r.push(n),e[n]=!0));}throw t.forEach(i),new Ot(n+": "+r.map(jt).join([", "]))}function Rt(n,t,r,e,i,o,a,u,s,c,l,f,p){l=An(l),o=Ft(i,o),u&&(u=Ft(a,u)),c&&(c=Ft(s,c)),p=Ft(f,p);var d=jn(l);ut(d,(function(){kt("Cannot construct "+l+" due to unbound types",[e]);})),Mn([n,t,r],e?[e]:[],(function(t){var r,i;t=t[0],i=e?(r=t.registeredClass).instancePrototype:it.prototype;var a=kn(d,(function(){if(Object.getPrototypeOf(this)!==s)throw new In("Use 'new' to construct "+l);if(void 0===f.constructor_body)throw new In(l+" has no accessible constructor");var n=f.constructor_body[arguments.length];if(void 0===n)throw new In("Tried to invoke ctor of "+l+" with invalid number of parameters ("+arguments.length+") - expected ("+Object.keys(f.constructor_body).toString()+") parameters instead!");return n.apply(this,arguments)})),s=Object.create(i,{constructor:{value:a}});a.prototype=s;var f=new st(l,a,s,p,r,o,u,c),y=new Wt(l,f,!0,!1,!1),h=new Wt(l+"*",f,!1,!1,!1),v=new Wt(l+" const*",f,!1,!0,!1);return ot[n]={pointerType:h,constPointerType:v},St(d,a),[y,h,v]}));}function It(n,t){for(var r=[],e=0;e<n;e++)r.push(V[(t>>2)+e]);return r}function Dt(n){for(;n.length;){var t=n.pop();n.pop()(t);}}function xt(n,t,r,e,i,o){C(t>0);var a=It(t,r);i=Ft(e,i);var u=[o],s=[];Mn([],[n],(function(n){var r="constructor "+(n=n[0]).name;if(void 0===n.registeredClass.constructor_body&&(n.registeredClass.constructor_body=[]),void 0!==n.registeredClass.constructor_body[t-1])throw new In("Cannot register multiple constructors with identical number of parameters ("+(t-1)+") for class '"+n.name+"'! Overload resolution is currently only performed using the parameter count, not actual type info!");return n.registeredClass.constructor_body[t-1]=function(){kt("Cannot construct "+n.name+" due to unbound types",a);},Mn([],a,(function(e){return n.registeredClass.constructor_body[t-1]=function(){arguments.length!==t-1&&Dn(r+" called with "+arguments.length+" arguments, expected "+(t-1)),s.length=0,u.length=t;for(var n=1;n<t;++n)u[n]=e[n].toWireType(s,arguments[n-1]);var o=i.apply(null,u);return Dt(s),e[0].fromWireType(o)},[]})),[]}));}function Ut(n,t){if(!(n instanceof Function))throw new TypeError("new_ called with constructor type "+typeof n+" which is not a function");var r=kn(n.name||"unknownFunctionName",(function(){}));r.prototype=n.prototype;var e=new r,i=n.apply(e,t);return i instanceof Object?i:e}function Mt(n,t,r,e,i){var o=t.length;o<2&&Dn("argTypes array size mismatch! Must at least get return value and 'this' types!");for(var a=null!==t[1]&&null!==r,u=!1,s=1;s<t.length;++s)if(null!==t[s]&&void 0===t[s].destructorFunction){u=!0;break}var c="void"!==t[0].name,l="",f="";for(s=0;s<o-2;++s)l+=(0!==s?", ":"")+"arg"+s,f+=(0!==s?", ":"")+"arg"+s+"Wired";var p="return function "+jn(n)+"("+l+") {\nif (arguments.length !== "+(o-2)+") {\nthrowBindingError('function "+n+" called with ' + arguments.length + ' arguments, expected "+(o-2)+" args!');\n}\n";u&&(p+="var destructors = [];\n");var d=u?"destructors":"null",y=["throwBindingError","invoker","fn","runDestructors","retType","classParam"],h=[Dn,e,i,Dt,t[0],t[1]];for(a&&(p+="var thisWired = classParam.toWireType("+d+", this);\n"),s=0;s<o-2;++s)p+="var arg"+s+"Wired = argType"+s+".toWireType("+d+", arg"+s+"); // "+t[s+2].name+"\n",y.push("argType"+s),h.push(t[s+2]);if(a&&(f="thisWired"+(f.length>0?", ":"")+f),p+=(c?"var rv = ":"")+"invoker(fn"+(f.length>0?", ":"")+f+");\n",u)p+="runDestructors(destructors);\n";else for(s=a?1:2;s<t.length;++s){var v=1===s?"thisWired":"arg"+(s-2)+"Wired";null!==t[s].destructorFunction&&(p+=v+"_dtor("+v+"); // "+t[s].name+"\n",y.push(v+"_dtor"),h.push(t[s].destructorFunction));}return c&&(p+="var ret = retType.fromWireType(rv);\nreturn ret;\n"),p+="}\n",y.push(p),Ut(Function,y).apply(null,h)}function Vt(n,t,r,e,i,o,a,u){var s=It(r,e);t=An(t),o=Ft(i,o),Mn([],[n],(function(n){var e=(n=n[0]).name+"."+t;function i(){kt("Cannot call "+e+" due to unbound types",s);}u&&n.registeredClass.pureVirtualFunctions.push(t);var c=n.registeredClass.instancePrototype,l=c[t];return void 0===l||void 0===l.overloadTable&&l.className!==n.name&&l.argCount===r-2?(i.argCount=r-2,i.className=n.name,c[t]=i):(at(c,t,e),c[t].overloadTable[r-2]=i),Mn([],s,(function(i){var u=Mt(e,i,n,o,a);return void 0===c[t].overloadTable?(u.argCount=r-2,c[t]=u):c[t].overloadTable[r-2]=u,[]})),[]}));}var Ht=[],zt=[{},{value:void 0},{value:null},{value:!0},{value:!1}];function qt(n){n>4&&0==--zt[n].refcount&&(zt[n]=void 0,Ht.push(n));}function Bt(){for(var n=0,t=5;t<zt.length;++t)void 0!==zt[t]&&++n;return n}function Gt(){for(var n=5;n<zt.length;++n)if(void 0!==zt[n])return zt[n];return null}function Lt(){e.count_emval_handles=Bt,e.get_first_emval=Gt;}function Nt(n){switch(n){case void 0:return 1;case null:return 2;case!0:return 3;case!1:return 4;default:var t=Ht.length?Ht.pop():zt.length;return zt[t]={refcount:1,value:n},t}}function Xt(n,t){Vn(n,{name:t=An(t),fromWireType:function(n){var t=zt[n].value;return qt(n),t},toWireType:function(n,t){return Nt(t)},argPackAdvance:8,readValueFromPointer:dt,destructorFunction:null});}function Jt(n){if(null===n)return "null";var t=typeof n;return "object"===t||"array"===t||"function"===t?n.toString():""+n}function Yt(n,t){switch(t){case 2:return function(n){return this.fromWireType(z[n>>2])};case 3:return function(n){return this.fromWireType(q[n>>3])};default:throw new TypeError("Unknown float type: "+n)}}function Zt(n,t,r){var e=$n(r);Vn(n,{name:t=An(t),fromWireType:function(n){return n},toWireType:function(n,t){if("number"!=typeof t&&"boolean"!=typeof t)throw new TypeError('Cannot convert "'+Jt(t)+'" to '+this.name);return t},argPackAdvance:8,readValueFromPointer:Yt(t,e),destructorFunction:null});}function Kt(n,t,r,e,i,o){var a=It(t,r);n=An(n),i=Ft(e,i),ut(n,(function(){kt("Cannot call "+n+" due to unbound types",a);}),t-1),Mn([],a,(function(r){var e=[r[0],null].concat(r.slice(1));return St(n,Mt(n,e,null,i,o),t-1),[]}));}function Qt(n,t,r){switch(t){case 0:return r?function(n){return D[n]}:function(n){return x[n]};case 1:return r?function(n){return U[n>>1]}:function(n){return M[n>>1]};case 2:return r?function(n){return V[n>>2]}:function(n){return H[n>>2]};default:throw new TypeError("Unknown integer type: "+n)}}function nr(n,t,r,e,i){t=An(t),-1===i&&(i=4294967295);var o=$n(r),a=function(n){return n};if(0===e){var u=32-8*r;a=function(n){return n<<u>>>u};}var s=-1!=t.indexOf("unsigned");Vn(n,{name:t,fromWireType:a,toWireType:function(n,r){if("number"!=typeof r&&"boolean"!=typeof r)throw new TypeError('Cannot convert "'+Jt(r)+'" to '+this.name);if(r<e||r>i)throw new TypeError('Passing a number "'+Jt(r)+'" from JS side to C/C++ side to an argument of type "'+t+'", which is outside the valid range ['+e+", "+i+"]!");return s?r>>>0:0|r},argPackAdvance:8,readValueFromPointer:Qt(t,o,0!==e),destructorFunction:null});}function tr(n,t,r){var e=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array][t];function i(n){var t=H,r=t[n>>=2],i=t[n+1];return new e(I,i,r)}Vn(n,{name:r=An(r),fromWireType:i,argPackAdvance:8,readValueFromPointer:i},{ignoreDuplicateRegistrations:!0});}function rr(n,t){var r="std::string"===(t=An(t));Vn(n,{name:t,fromWireType:function(n){var t,e=H[n>>2];if(r){var i=x[n+4+e],o=0;0!=i&&(o=i,x[n+4+e]=0);for(var a=n+4,u=0;u<=e;++u){var s=n+4+u;if(0==x[s]){var c=_(a);void 0===t?t=c:(t+=String.fromCharCode(0),t+=c),a=s+1;}}0!=o&&(x[n+4+e]=o);}else {var l=new Array(e);for(u=0;u<e;++u)l[u]=String.fromCharCode(x[n+4+u]);t=l.join("");}return Hr(n),t},toWireType:function(n,t){t instanceof ArrayBuffer&&(t=new Uint8Array(t));var e="string"==typeof t;e||t instanceof Uint8Array||t instanceof Uint8ClampedArray||t instanceof Int8Array||Dn("Cannot pass non-string to std::string");var i=(r&&e?function(){return E(t)}:function(){return t.length})(),o=Vr(4+i+1);if(H[o>>2]=i,r&&e)A(t,o+4,i+1);else if(e)for(var a=0;a<i;++a){var u=t.charCodeAt(a);u>255&&(Hr(o),Dn("String has UTF-16 code units that do not fit in 8 bits")),x[o+4+a]=u;}else for(a=0;a<i;++a)x[o+4+a]=t[a];return null!==n&&n.push(Hr,o),o},argPackAdvance:8,readValueFromPointer:dt,destructorFunction:function(n){Hr(n);}});}function er(n,t,r){var e,i,o,a,u;r=An(r),2===t?(e=S,i=F,a=O,o=function(){return M},u=1):4===t&&(e=j,i=k,a=R,o=function(){return H},u=2),Vn(n,{name:r,fromWireType:function(n){var r,i=H[n>>2],a=o(),s=a[n+4+i*t>>u],c=0;0!=s&&(c=s,a[n+4+i*t>>u]=0);for(var l=n+4,f=0;f<=i;++f){var p=n+4+f*t;if(0==a[p>>u]){var d=e(l);void 0===r?r=d:(r+=String.fromCharCode(0),r+=d),l=p+t;}}return 0!=c&&(a[n+4+i*t>>u]=c),Hr(n),r},toWireType:function(n,e){"string"!=typeof e&&Dn("Cannot pass non-string to C++ string type "+r);var o=a(e),s=Vr(4+o+t);return H[s>>2]=o>>u,i(e,s+4,o+t),null!==n&&n.push(Hr,s),s},argPackAdvance:8,readValueFromPointer:dt,destructorFunction:function(n){Hr(n);}});}function ir(n,t){Vn(n,{isVoid:!0,name:t=An(t),argPackAdvance:0,fromWireType:function(){},toWireType:function(n,t){}});}function or(n){return n||Dn("Cannot use deleted val. handle = "+n),zt[n].value}function ar(n,t){var r=Wn[n];return void 0===r&&Dn(t+" has unknown type "+jt(n)),r}function ur(n,t,r){n=or(n),t=ar(t,"emval::as");var e=[],i=Nt(e);return V[r>>2]=i,t.toWireType(e,n)}var sr={};function cr(n){var t=sr[n];return void 0===t?An(n):t}var lr=[];function fr(n,t,r,e){(n=lr[n])(t=or(t),r=cr(r),null,e);}function pr(){return "object"==typeof globalThis?globalThis:Function("return this")()}function dr(n){return 0===n?Nt(pr()):(n=cr(n),Nt(pr()[n]))}function yr(n){var t=lr.length;return lr.push(n),t}function hr(n,t){for(var r=new Array(n),e=0;e<n;++e)r[e]=ar(V[(t>>2)+e],"parameter "+e);return r}function vr(n,t){for(var r=hr(n,t),e=r[0],i=e.name+"_$"+r.slice(1).map((function(n){return n.name})).join("_")+"$",o=["retType"],a=[e],u="",s=0;s<n-1;++s)u+=(0!==s?", ":"")+"arg"+s,o.push("argType"+s),a.push(r[1+s]);var c="return function "+jn("methodCaller_"+i)+"(handle, name, destructors, args) {\n",l=0;for(s=0;s<n-1;++s)c+="    var arg"+s+" = argType"+s+".readValueFromPointer(args"+(l?"+"+l:"")+");\n",l+=r[s+1].argPackAdvance;for(c+="    var rv = handle[name]("+u+");\n",s=0;s<n-1;++s)r[s+1].deleteObject&&(c+="    argType"+s+".deleteObject(arg"+s+");\n");return e.isVoid||(c+="    return retType.toWireType(destructors, rv);\n"),c+="};\n",o.push(c),yr(Ut(Function,o).apply(null,a))}function mr(n){return n=cr(n),Nt(e[n])}function gr(n,t){return Nt((n=or(n))[t=or(t)])}function wr(n){n>4&&(zt[n].refcount+=1);}function br(n){for(var t="",r=0;r<n;++r)t+=(0!==r?", ":"")+"arg"+r;var i="return function emval_allocator_"+n+"(constructor, argTypes, args) {\n";for(r=0;r<n;++r)i+="var argType"+r+" = requireRegisteredType(Module['HEAP32'][(argTypes >> 2) + "+r+'], "parameter '+r+'");\nvar arg'+r+" = argType"+r+".readValueFromPointer(args);\nargs += argType"+r+"['argPackAdvance'];\n";return i+="var obj = new constructor("+t+");\nreturn __emval_register(obj);\n}\n",new Function("requireRegisteredType","Module","__emval_register",i)(ar,e,Nt)}var Cr={};function Tr(n,t,r,e){n=or(n);var i=Cr[t];return i||(i=br(t),Cr[t]=i),i(n,r,e)}function $r(n){return Nt(cr(n))}function _r(n){Dt(zt[n].value),qt(n);}function Pr(){yn();}function Ar(){return x.length}function Er(n,t,r){x.copyWithin(n,t,t+r);}function Wr(n){try{return v.grow(n-I.byteLength+65535>>16),L(v.buffer),1}catch(t){}}function Sr(n){var t=Ar(),r=65536,e=2147483648-r;if(n>e)return !1;for(var i=16777216,o=1;o<=4;o*=2){var a=t*(1+.2/o);if(a=Math.min(a,n+100663296),Wr(Math.min(e,G(Math.max(i,n,a),r))))return !0}return !1}var Fr={mappings:{},buffers:[null,[],[]],printChar:function(n,t){var r=Fr.buffers[n];0===t||10===t?((1===n?m:g)($(r,0)),r.length=0):r.push(t);},varargs:void 0,get:function(){return Fr.varargs+=4,V[Fr.varargs-4>>2]},getStr:function(n){return _(n)},get64:function(n,t){return n}};function Or(n){return 0}function jr(n,t,r,e,i){}function kr(n,t,r,e){for(var i=0,o=0;o<r;o++){for(var a=V[t+8*o>>2],u=V[t+(8*o+4)>>2],s=0;s<u;s++)Fr.printChar(n,x[a+s]);i+=u;}return V[e>>2]=i,0}function Rr(n){return (n=+n)>=0?+cn(n+.5):+sn(n-.5)}function Ir(n){}_n(),In=e.BindingError=Rn(Error,"BindingError"),xn=e.InternalError=Rn(Error,"InternalError"),et(),Et(),Ct(),Ot=e.UnboundTypeError=Rn(Error,"UnboundTypeError"),Lt();var Dr={G:Cn,D:Tn,A:Hn,t:Rt,s:xt,c:Vt,z:Xt,j:Zt,x:Kt,d:nr,b:tr,k:rr,i:er,B:ir,r:ur,m:fr,a:qt,F:dr,n:vr,p:mr,f:gr,h:wr,o:Tr,g:$r,q:_r,E:Pr,w:Er,y:Sr,C:Or,u:jr,l:kr,memory:v,e:Rr,v:Ir,table:w},xr=bn();e.asm=xr;var Ur,Mr=e.___wasm_call_ctors=function(){return (Mr=e.___wasm_call_ctors=e.asm.H).apply(null,arguments)},Vr=e._malloc=function(){return (Vr=e._malloc=e.asm.I).apply(null,arguments)},Hr=e._free=function(){return (Hr=e._free=e.asm.J).apply(null,arguments)},zr=e.___getTypeName=function(){return (zr=e.___getTypeName=e.asm.K).apply(null,arguments)};function qr(n){this.name="ExitStatus",this.message="Program terminated with exit("+n+")",this.status=n;}function Br(n){function t(){Ur||(Ur=!0,e.calledRun=!0,b||(rn(),en(),e.onRuntimeInitialized&&e.onRuntimeInitialized(),on()));}ln>0||(tn(),ln>0||(e.setStatus?(e.setStatus("Running..."),setTimeout((function(){setTimeout((function(){e.setStatus("");}),1),t();}),1)):t()));}if(e.___embind_register_native_and_builtin_types=function(){return (e.___embind_register_native_and_builtin_types=e.asm.L).apply(null,arguments)},e.dynCall_viii=function(){return (e.dynCall_viii=e.asm.M).apply(null,arguments)},e.dynCall_ii=function(){return (e.dynCall_ii=e.asm.N).apply(null,arguments)},e.dynCall_vi=function(){return (e.dynCall_vi=e.asm.O).apply(null,arguments)},e.dynCall_v=function(){return (e.dynCall_v=e.asm.P).apply(null,arguments)},e.dynCall_iii=function(){return (e.dynCall_iii=e.asm.Q).apply(null,arguments)},e.dynCall_vii=function(){return (e.dynCall_vii=e.asm.R).apply(null,arguments)},e.dynCall_iiii=function(){return (e.dynCall_iiii=e.asm.S).apply(null,arguments)},e.dynCall_iiiii=function(){return (e.dynCall_iiiii=e.asm.T).apply(null,arguments)},e.dynCall_iiiiii=function(){return (e.dynCall_iiiiii=e.asm.U).apply(null,arguments)},e.dynCall_iiiiiiii=function(){return (e.dynCall_iiiiiiii=e.asm.V).apply(null,arguments)},e.dynCall_iiiiiiiii=function(){return (e.dynCall_iiiiiiiii=e.asm.W).apply(null,arguments)},e.dynCall_iidiiii=function(){return (e.dynCall_iidiiii=e.asm.X).apply(null,arguments)},e.dynCall_jiji=function(){return (e.dynCall_jiji=e.asm.Y).apply(null,arguments)},e.dynCall_viiiiii=function(){return (e.dynCall_viiiiii=e.asm.Z).apply(null,arguments)},e.dynCall_viiiii=function(){return (e.dynCall_viiiii=e.asm._).apply(null,arguments)},e.dynCall_viiii=function(){return (e.dynCall_viiii=e.asm.$).apply(null,arguments)},e.asm=xr,e.then=function(n){if(Ur)n(e);else {var t=e.onRuntimeInitialized;e.onRuntimeInitialized=function(){t&&t(),n(e);};}return e},fn=function n(){Ur||Br(),Ur||(fn=n);},e.run=Br,e.preInit)for("function"==typeof e.preInit&&(e.preInit=[e.preInit]);e.preInit.length>0;)e.preInit.pop()();return Br(),n});n.exports=e;})),r=Object.freeze(Object.assign(Object.create(null),t,{default:t}));



//# sourceMappingURL=basis_transcoder-4d6347c9.js.map

/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,