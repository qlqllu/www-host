"use strict";
(self["webpackChunkexb_client"] = self["webpackChunkexb_client"] || []).push([["vendors-extensions_widgets_arcgis_analysis_node_modules_arcgis_app-components_dist_esm_arcgis-c0311a"],{

/***/ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/arcgis-new-item-pages-feature-layer-from-scratch.entry.js":
/*!***************************************************************************************************************************************************!*\
  !*** ./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/arcgis-new-item-pages-feature-layer-from-scratch.entry.js ***!
  \***************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   arcgis_new_item_pages_feature_layer_from_scratch: () => (/* binding */ ArcgisNewItemPagesFeatureLayerFromScratch)
/* harmony export */ });
/* harmony import */ var _index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index-92ebb396.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/index-92ebb396.js");
/* harmony import */ var _config_eb5f7dc2_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./config-eb5f7dc2.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/config-eb5f7dc2.js");
/* harmony import */ var _functional_c82f5ab9_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./functional-c82f5ab9.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/functional-c82f5ab9.js");
/* harmony import */ var _guid_4f4176ba_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./guid-4f4176ba.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/guid-4f4176ba.js");
/* harmony import */ var _item_properties_e6412a9a_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./item-properties-e6412a9a.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/item-properties-e6412a9a.js");
/* harmony import */ var _ui_ecf86bba_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./ui-ecf86bba.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/ui-ecf86bba.js");
/* harmony import */ var _feature_layer_69305a85_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./feature-layer-69305a85.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/feature-layer-69305a85.js");
/* harmony import */ var _feature_layer_d33ea114_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./feature-layer-d33ea114.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/feature-layer-d33ea114.js");
/* harmony import */ var _feature_layer_d0f64b81_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./feature-layer-d0f64b81.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/feature-layer-d0f64b81.js");
/* harmony import */ var _type_to_icon_5b71edbc_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./type-to-icon-5b71edbc.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/type-to-icon-5b71edbc.js");
/* harmony import */ var _index_81d548b7_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./index-81d548b7.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/index-81d548b7.js");
/* harmony import */ var _privileges_ccd5f37d_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./privileges-ccd5f37d.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/privileges-ccd5f37d.js");
/* harmony import */ var _thumbnail_0b7adfcd_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./thumbnail-0b7adfcd.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/thumbnail-0b7adfcd.js");
/* harmony import */ var _portal_79caaeff_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./portal-79caaeff.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/portal-79caaeff.js");
/* harmony import */ var _loadModules_aaf30bd6_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./loadModules-aaf30bd6.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/loadModules-aaf30bd6.js");
/* harmony import */ var _query_4f7b7e4d_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./query-4f7b7e4d.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/query-4f7b7e4d.js");
/* harmony import */ var _user_e3dedc4a_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./user-e3dedc4a.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/user-e3dedc4a.js");
/* harmony import */ var _api_f7934cd7_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./api-f7934cd7.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/api-f7934cd7.js");
/* harmony import */ var _server_item_f12153e6_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./server-item-f12153e6.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/server-item-f12153e6.js");
/* harmony import */ var _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./add-item-97d577a9.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/add-item-97d577a9.js");
/* harmony import */ var _functional_9f648bee_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./functional-9f648bee.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/functional-9f648bee.js");
/* harmony import */ var _item_types_b4fe86ad_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./item-types-b4fe86ad.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/item-types-b4fe86ad.js");
/* harmony import */ var _item_d9d70416_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./item-d9d70416.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/item-d9d70416.js");
/* harmony import */ var _dom_13f5b00c_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./dom-13f5b00c.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/dom-13f5b00c.js");
/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * v3.0.99
 */

























const arcgisNewItemPagesFeatureLayerFromScratchCss = "p{margin-top:0;margin-bottom:0}button{cursor:pointer;transition-duration:200ms;border:none;box-shadow:none;background:transparent;line-height:16px}label{margin-bottom:0}.add-new-container{padding:1.5rem;padding-bottom:2.5rem;margin-top:1rem;margin-bottom:1.5rem;background-color:var(--calcite-ui-background)}.add-layer{margin-top:1rem;width:-moz-fit-content;width:fit-content}.info-card{--calcite-font-size--2:0.875rem;display:flex;align-items:center;flex-grow:1;border-style:solid;border-width:1px;background-color:var(--calcite-ui-foreground-1);border-color:var(--calcite-ui-border-1);padding:1rem}.info-card:not(:last-of-type){border-bottom-width:0}.info-card:first-child{border-top-left-radius:var(--calcite-border-radius);border-top-right-radius:var(--calcite-border-radius)}.info-card:last-child{border-bottom-right-radius:var(--calcite-border-radius);border-bottom-left-radius:var(--calcite-border-radius)}.layer-icon{-webkit-margin-end:1rem;margin-inline-end:1rem}.layer-name-input,.layer-type{flex-grow:1;flex-basis:100%;-webkit-margin-end:1rem;margin-inline-end:1rem}.layer-type:last-child{-webkit-margin-end:0;margin-inline-end:0}";

const ArcgisNewItemPagesFeatureLayerFromScratch = class {
  constructor(hostRef) {
    (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.r)(this, hostRef);
    this.newItemUpdatePage = (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "newItemUpdatePage", 7);
    /** Used to focus on the correct input when name is missing */
    this.layerNameInputRefs = {};
    /**
     * Used to determine if a layer/table's name field has been changed by the user or not
     *
     * `Record<layer's id, boolean>`
     * */
    this.nameFieldChangedByUser = {};
    this.getDuplicateLayerNameId = () => {
      const { layerInfos } = this;
      const lookupMap = {};
      for (let index = 0; index < layerInfos.length; index++) {
        const { name, id } = layerInfos[index];
        if (lookupMap[name]) {
          return id;
        }
        lookupMap[name] = true;
      }
      return null;
    };
    this.getDefaultName = (prefix) => {
      const { layerInfos } = this;
      const getLayerNameFromIndex = (index) => `${prefix}_${index}`;
      const getIndexFromLayerName = (layerName) => parseInt(layerName.split("_")[1]);
      const latestLayerIndex = layerInfos.reduce((acc, curr) => {
        const index = getIndexFromLayerName(curr.name);
        if (!curr.name.startsWith(prefix) || isNaN(index)) {
          return acc;
        }
        if (acc <= index) {
          return index + 1;
        }
        return acc;
      }, 1);
      return getLayerNameFromIndex(latestLayerIndex);
    };
    this.addLayer = () => {
      const { i18n, layerInfos, getDefaultName, layerNameInputRefs } = this;
      const layerPrefix = i18n.layer;
      const id = (0,_guid_4f4176ba_js__WEBPACK_IMPORTED_MODULE_3__.g)();
      const name = getDefaultName(layerPrefix);
      this.layerInfos = [...layerInfos, { id, type: "point", name }];
      (0,_functional_c82f5ab9_js__WEBPACK_IMPORTED_MODULE_2__.t)(100).then(() => {
        var _a;
        (_a = layerNameInputRefs[id]) === null || _a === void 0 ? void 0 : _a.setFocus();
      });
    };
    this.deleteLayer = (id, index) => {
      const { layerNameInputRefs, layerInfos, nameFieldChangedByUser } = this;
      if (layerInfos.length === 1) {
        return;
      }
      function removeItemFromList(itemList, index) {
        const newArr = [...itemList];
        newArr.splice(index, 1);
        return newArr;
      }
      this.layerInfos = removeItemFromList(layerInfos, index);
      delete layerNameInputRefs[id];
      delete nameFieldChangedByUser[id];
    };
    this.changeLayerName = (index, newName) => {
      const { layerInfos, nameFieldChangedByUser } = this;
      const layer = layerInfos[index];
      layer.name = newName;
      nameFieldChangedByUser[layer.id] = true;
    };
    this.changeLayerType = (index, oldType, newType) => {
      const { layerInfos, nameFieldChangedByUser, i18n, getDefaultName } = this;
      const layer = Object.assign({}, layerInfos[index]);
      // --- Change layer name to another default name if the user has NOT changed the name field
      if (!nameFieldChangedByUser[layer.id]) {
        // https://devtopia.esri.com/WebGIS/arcgis-portal-app/issues/37189
        if (oldType === "table" && newType !== "table") {
          // Switching from table to point/polygon/polyline
          layer.name = getDefaultName(i18n.layer);
        }
        else if (oldType !== "table" && newType === "table") {
          // Switching from point/polygon/polyline to table
          layer.name = getDefaultName(i18n.table);
        }
      }
      layer.type = newType;
      this.layerInfos = [...layerInfos.slice(0, index), layer, ...layerInfos.slice(index + 1)];
    };
    this.setAlertMessage = (type) => {
      this.alertInfo = this.i18n.error[type];
    };
    this.alertInfo = undefined;
    this.layerInfos = [];
    this.layerPreference = {
      captureGPS: false,
      enableZDefaults: false,
      enableMDefaults: false
    };
  }
  async componentWillLoad() {
    this.addCreateI18n = _ui_ecf86bba_js__WEBPACK_IMPORTED_MODULE_5__.u.i18n;
    this.i18n = this.addCreateI18n.featureLayerFromScratch;
    const { layerPreference, newLayerInfos } = (0,_feature_layer_d33ea114_js__WEBPACK_IMPORTED_MODULE_7__.a)();
    this.layerPreference = layerPreference;
    if (newLayerInfos.length <= 0) {
      this.addLayer();
    }
    else {
      this.layerInfos = [...newLayerInfos];
    }
  }
  async handleNext() {
    var _a, _b, _c;
    const { layerInfos, layerNameInputRefs, setAlertMessage, getDuplicateLayerNameId, newItemUpdatePage, layerPreference } = this;
    const { portal } = _config_eb5f7dc2_js__WEBPACK_IMPORTED_MODULE_1__.c;
    const missingNameId = (_a = layerInfos.find((info) => !info.name.trim())) === null || _a === void 0 ? void 0 : _a.id;
    if (missingNameId) {
      (0,_feature_layer_d0f64b81_js__WEBPACK_IMPORTED_MODULE_8__.f)("Missing layer name");
      (_b = layerNameInputRefs[missingNameId]) === null || _b === void 0 ? void 0 : _b.setFocus();
      setAlertMessage("emptyName");
      return;
    }
    const duplicateId = getDuplicateLayerNameId();
    if (duplicateId) {
      (0,_feature_layer_d0f64b81_js__WEBPACK_IMPORTED_MODULE_8__.f)("Layer names must be unique");
      (_c = layerNameInputRefs[duplicateId]) === null || _c === void 0 ? void 0 : _c.setFocus();
      setAlertMessage("duplicateTitle");
      return;
    }
    // https://devtopia.esri.com/WebGIS/arcgis-portal-app/issues/37048
    if (this.layerInfos.length === 1) {
      _item_properties_e6412a9a_js__WEBPACK_IMPORTED_MODULE_4__.i.title = this.layerInfos[0].name;
    }
    (0,_feature_layer_d33ea114_js__WEBPACK_IMPORTED_MODULE_7__.b)(this.layerInfos, layerPreference, portal);
    newItemUpdatePage.emit("itemProperties");
  }
  render() {
    const { i18n, alertInfo, addCreateI18n, addLayer, layerInfos, layerNameInputRefs, deleteLayer, layerPreference, changeLayerName, changeLayerType } = this;
    return ((0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)(_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.H, null, (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("arcgis-new-item-description", { header: i18n.header }), (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: "add-new-container" }, (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: "layer-container" }, layerInfos.map(({ id, name, type: layerType }, index) => {
      const curLayer = layerInfos[index];
      return ((0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("li", { class: "info-card", key: id, value: id }, (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-input", { value: name, class: "layer-name-input", placeholder: addCreateI18n.featureLayer.placeholders[layerType], onCalciteInputInput: (event) => {
          const node = event.target;
          changeLayerName(index, node.value);
        }, ref: (ele) => (layerNameInputRefs[id] = ele) }), (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-combobox", { label: addCreateI18n.featureLayer.type[curLayer.type], class: "layer-type", selectionMode: "single", clearDisabled: true, onCalciteComboboxChange: (event) => {
          const node = event.target;
          changeLayerType(index, curLayer.type, node.selectedItems[0].value);
        } }, _feature_layer_69305a85_js__WEBPACK_IMPORTED_MODULE_6__.f
        .filter((type) => type !== "multipatch")
        .map((type) => ((0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-combobox-item", { textLabel: addCreateI18n.featureLayer.type[type], icon: _type_to_icon_5b71edbc_js__WEBPACK_IMPORTED_MODULE_9__.a[type], selected: curLayer.type === type, value: type })))), layerInfos.length > 1 && ((0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-button", { appearance: "transparent", kind: "danger", scale: "m", href: "", "icon-start": "trash", onClick: () => deleteLayer(id, index) }))));
    })), (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-button", { appearance: "transparent", scale: "m", "icon-start": "plus", class: "add-layer", onClick: addLayer }, i18n.add)), (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("arcgis-new-item-layer-preference", { i18n: i18n, defaultPreference: layerPreference, onLayerPreferenceChange: (event) => {
        const { layerPreference } = this;
        const detail = event.detail;
        if (!layerPreference.captureGPS && detail.captureGPS) {
          (0,_feature_layer_d0f64b81_js__WEBPACK_IMPORTED_MODULE_8__.e)("captureGPS");
        }
        if (!layerPreference.enableZDefaults && detail.enableZDefaults) {
          (0,_feature_layer_d0f64b81_js__WEBPACK_IMPORTED_MODULE_8__.e)("enableZDefaults");
        }
        if (!layerPreference.enableMDefaults && detail.enableMDefaults) {
          (0,_feature_layer_d0f64b81_js__WEBPACK_IMPORTED_MODULE_8__.e)("enableMDefaults");
        }
        this.layerPreference = event.detail;
      } }), (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("arcgis-new-item-alert", { heading: alertInfo === null || alertInfo === void 0 ? void 0 : alertInfo.title, description: alertInfo === null || alertInfo === void 0 ? void 0 : alertInfo.description, active: !!alertInfo, onAlertDismiss: () => (this.alertInfo = null) })));
  }
  get el() { return (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.d)(this); }
};
ArcgisNewItemPagesFeatureLayerFromScratch.style = arcgisNewItemPagesFeatureLayerFromScratchCss;




/***/ }),

/***/ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/feature-layer-d0f64b81.js":
/*!*******************************************************************************************************************!*\
  !*** ./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/feature-layer-d0f64b81.js ***!
  \*******************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   a: () => (/* binding */ featureServiceEndTelemetry),
/* harmony export */   b: () => (/* binding */ filterChangeTelemetry),
/* harmony export */   c: () => (/* binding */ featureLayerTypeTelemetry),
/* harmony export */   e: () => (/* binding */ enableLayerPreferenceTelemetry),
/* harmony export */   f: () => (/* binding */ featureLayerErrorTelemetry),
/* harmony export */   i: () => (/* binding */ itemExpandedTelemetry)
/* harmony export */ });
/* harmony import */ var _config_eb5f7dc2_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./config-eb5f7dc2.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/config-eb5f7dc2.js");
/* harmony import */ var _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./add-item-97d577a9.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/add-item-97d577a9.js");
/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * v3.0.99
 */



const TELEMETRY_ID = "create feature layer";
const TELEMETRY_PAGE_NAME = "my content";
const addFeatureLayerTypeToTelemetry = (type) => {
  switch (type) {
    case "build":
      return "blank";
    case "existing":
      return "fs";
    case "template":
      return "template";
    case "link":
      return "url";
  }
};
const enableLayerPreferenceTelemetry = (type) => {
  const telemetry = _config_eb5f7dc2_js__WEBPACK_IMPORTED_MODULE_0__.c.telemetry;
  telemetry === null || telemetry === void 0 ? void 0 : telemetry.stepWorkflow(TELEMETRY_ID, `enable ${type === "captureGPS" ? "gps" : type === "enableZDefaults" ? "z" : "m"}`, {
    category: TELEMETRY_ID,
    attribute: addFeatureLayerTypeToTelemetry(_add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_1__.a.addFeatureLayerType),
    pageName: TELEMETRY_PAGE_NAME
  });
};
const itemExpandedTelemetry = (type) => {
  const telemetry = _config_eb5f7dc2_js__WEBPACK_IMPORTED_MODULE_0__.c.telemetry;
  telemetry === null || telemetry === void 0 ? void 0 : telemetry.stepWorkflow(TELEMETRY_ID, `expand ${type} details`, {
    category: TELEMETRY_ID,
    attribute: addFeatureLayerTypeToTelemetry(_add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_1__.a.addFeatureLayerType),
    pageName: TELEMETRY_PAGE_NAME
  });
};
const filterChangeTelemetry = () => {
  const telemetry = _config_eb5f7dc2_js__WEBPACK_IMPORTED_MODULE_0__.c.telemetry;
  telemetry === null || telemetry === void 0 ? void 0 : telemetry.stepWorkflow(TELEMETRY_ID, "filter", {
    category: TELEMETRY_ID,
    attribute: addFeatureLayerTypeToTelemetry(_add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_1__.a.addFeatureLayerType),
    pageName: TELEMETRY_PAGE_NAME
  });
};
const featureLayerTypeTelemetry = (type) => {
  const telemetryType = addFeatureLayerTypeToTelemetry(type);
  const telemetry = _config_eb5f7dc2_js__WEBPACK_IMPORTED_MODULE_0__.c.telemetry;
  telemetry === null || telemetry === void 0 ? void 0 : telemetry.stepWorkflow(TELEMETRY_ID, "from option", {
    category: TELEMETRY_ID,
    attribute: telemetryType,
    pageName: TELEMETRY_PAGE_NAME
  });
};
const featureServiceEndTelemetry = () => {
  const { addFeatureLayerType, serviceInfo } = _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_1__.a;
  const featureLayerServiceInfo = serviceInfo;
  const telemetry = _config_eb5f7dc2_js__WEBPACK_IMPORTED_MODULE_0__.c.telemetry;
  telemetry === null || telemetry === void 0 ? void 0 : telemetry.endWorkflow(TELEMETRY_ID, {
    category: TELEMETRY_ID,
    attribute: addFeatureLayerTypeToTelemetry(addFeatureLayerType),
    pageName: TELEMETRY_PAGE_NAME,
    count: featureLayerServiceInfo.layers.length,
    number: featureLayerServiceInfo.tables.length
  });
};
const featureLayerErrorTelemetry = (errString) => {
  var _a;
  (_a = _config_eb5f7dc2_js__WEBPACK_IMPORTED_MODULE_0__.c.telemetry) === null || _a === void 0 ? void 0 : _a.logError({
    category: TELEMETRY_ID,
    error: errString
  });
};




/***/ }),

/***/ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/type-to-icon-5b71edbc.js":
/*!******************************************************************************************************************!*\
  !*** ./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/type-to-icon-5b71edbc.js ***!
  \******************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   a: () => (/* binding */ featureLayerIconInfo),
/* harmony export */   e: () => (/* binding */ esriGeometryIcons),
/* harmony export */   f: () => (/* binding */ fieldTypeIcons)
/* harmony export */ });
/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * v3.0.99
 */
const featureLayerIconInfo = {
  point: "point",
  line: "line",
  polygon: "polygon",
  multipatch: "cube",
  table: "table",
  multipoint: "layer-points"
};
const esriGeometryIcons = {
  esriGeometryPoint: "point",
  esriGeometryPolyline: "line",
  esriGeometryPolygon: "polygon",
  esriGeometryMultiPatch: "cube",
  esriGeometryMultipoint: "point",
  none: "table"
};
const fieldTypeIcons = {
  esriFieldTypeOID: "key",
  esriFieldTypeBoolean: "boolean",
  esriFieldTypeString: "string",
  esriFieldTypeSingle: "number",
  esriFieldTypeDouble: "number",
  esriFieldTypeInteger: "integer",
  esriFieldTypeSmallInteger: "integer",
  esriFieldTypeGlobalID: "key",
  esriFieldTypeDate: "date-time",
  esriFieldTypeBigInteger: "integer",
  esriFieldTypeDateOnly: "calendar",
  esriFieldTypeTimeOnly: "clock",
  esriFieldTypeTimestampOffset: "time-zone"
};




/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,