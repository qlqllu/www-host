"use strict";
(self["webpackChunkexb_client"] = self["webpackChunkexb_client"] || []).push([["vendors-extensions_widgets_ba-infographic_node_modules_arcgis_business-analyst-components_dis-8a7a2a"],{

/***/ "./extensions/widgets/ba-infographic/node_modules/@arcgis/business-analyst-components/dist/stencil-components/dist/esm/Heading-0c24303c.js":
/*!*************************************************************************************************************************************************!*\
  !*** ./extensions/widgets/ba-infographic/node_modules/@arcgis/business-analyst-components/dist/stencil-components/dist/esm/Heading-0c24303c.js ***!
  \*************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   H: () => (/* binding */ Heading),
/* harmony export */   c: () => (/* binding */ constrainHeadingLevel)
/* harmony export */ });
/* harmony import */ var _index_4e647411_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index-4e647411.js */ "./extensions/widgets/ba-infographic/node_modules/@arcgis/business-analyst-components/dist/stencil-components/dist/esm/index-4e647411.js");


/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.
 * v1.0.5
 */
function constrainHeadingLevel(level) {
  return Math.min(Math.max(Math.ceil(level), 1), 6);
}
const Heading = (props, children) => {
  const HeadingTag = props.level ? `h${props.level}` : "div";
  delete props.level;
  return (0,_index_4e647411_js__WEBPACK_IMPORTED_MODULE_0__.h)(HeadingTag, { ...props }, children);
};



//# sourceMappingURL=Heading-0c24303c.js.map

/***/ }),

/***/ "./extensions/widgets/ba-infographic/node_modules/@arcgis/business-analyst-components/dist/stencil-components/dist/esm/calcite-date-picker-day_3.entry.js":
/*!****************************************************************************************************************************************************************!*\
  !*** ./extensions/widgets/ba-infographic/node_modules/@arcgis/business-analyst-components/dist/stencil-components/dist/esm/calcite-date-picker-day_3.entry.js ***!
  \****************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   calcite_date_picker_day: () => (/* binding */ DatePickerDay),
/* harmony export */   calcite_date_picker_month: () => (/* binding */ DatePickerMonth),
/* harmony export */   calcite_date_picker_month_header: () => (/* binding */ DatePickerMonthHeader)
/* harmony export */ });
/* harmony import */ var _index_4e647411_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index-4e647411.js */ "./extensions/widgets/ba-infographic/node_modules/@arcgis/business-analyst-components/dist/stencil-components/dist/esm/index-4e647411.js");
/* harmony import */ var _date_d7fbf7fd_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./date-d7fbf7fd.js */ "./extensions/widgets/ba-infographic/node_modules/@arcgis/business-analyst-components/dist/stencil-components/dist/esm/date-d7fbf7fd.js");
/* harmony import */ var _dom_f1ee4d04_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dom-f1ee4d04.js */ "./extensions/widgets/ba-infographic/node_modules/@arcgis/business-analyst-components/dist/stencil-components/dist/esm/dom-f1ee4d04.js");
/* harmony import */ var _interactive_29995522_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./interactive-29995522.js */ "./extensions/widgets/ba-infographic/node_modules/@arcgis/business-analyst-components/dist/stencil-components/dist/esm/interactive-29995522.js");
/* harmony import */ var _key_b75491c4_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./key-b75491c4.js */ "./extensions/widgets/ba-infographic/node_modules/@arcgis/business-analyst-components/dist/stencil-components/dist/esm/key-b75491c4.js");
/* harmony import */ var _locale_f7b2fbb0_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./locale-f7b2fbb0.js */ "./extensions/widgets/ba-infographic/node_modules/@arcgis/business-analyst-components/dist/stencil-components/dist/esm/locale-f7b2fbb0.js");
/* harmony import */ var _resources_48436eea_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./resources-48436eea.js */ "./extensions/widgets/ba-infographic/node_modules/@arcgis/business-analyst-components/dist/stencil-components/dist/esm/resources-48436eea.js");
/* harmony import */ var _Heading_0c24303c_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./Heading-0c24303c.js */ "./extensions/widgets/ba-infographic/node_modules/@arcgis/business-analyst-components/dist/stencil-components/dist/esm/Heading-0c24303c.js");












const datePickerDayCss = "@keyframes in{0%{opacity:0}100%{opacity:1}}@keyframes in-down{0%{opacity:0;transform:translate3D(0, -5px, 0)}100%{opacity:1;transform:translate3D(0, 0, 0)}}@keyframes in-up{0%{opacity:0;transform:translate3D(0, 5px, 0)}100%{opacity:1;transform:translate3D(0, 0, 0)}}@keyframes in-scale{0%{opacity:0;transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;transform:scale3D(1, 1, 1)}}:root{--calcite-animation-timing:calc(150ms * var(--calcite-internal-duration-factor));--calcite-internal-duration-factor:var(--calcite-duration-factor, 1);--calcite-internal-animation-timing-fast:calc(100ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-medium:calc(200ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-slow:calc(300ms * var(--calcite-internal-duration-factor))}.calcite-animate{opacity:0;animation-fill-mode:both;animation-duration:var(--calcite-animation-timing)}.calcite-animate__in{animation-name:in}.calcite-animate__in-down{animation-name:in-down}.calcite-animate__in-up{animation-name:in-up}.calcite-animate__in-scale{animation-name:in-scale}@media (prefers-reduced-motion: reduce){:root{--calcite-internal-duration-factor:0}}:root{--calcite-floating-ui-transition:var(--calcite-animation-timing);--calcite-floating-ui-z-index:600}:host([hidden]){display:none}:host([disabled]){pointer-events:none;cursor:default;-webkit-user-select:none;user-select:none;opacity:var(--calcite-ui-opacity-disabled)}:host{display:flex;min-inline-size:0px;cursor:pointer;justify-content:center;color:var(--calcite-ui-text-3);inline-size:14.2857142857%}:host([disabled]) ::slotted([calcite-hydrated][disabled]),:host([disabled]) [calcite-hydrated][disabled]{opacity:1}.day-v-wrapper{flex:1 1 auto}.day-wrapper{display:flex;flex-direction:column;align-items:center}.day{display:flex;align-items:center;justify-content:center;border-radius:9999px;font-size:var(--calcite-font-size--2);line-height:1rem;line-height:1;color:var(--calcite-ui-text-3);opacity:var(--calcite-ui-opacity-disabled);outline-color:transparent;transition:all var(--calcite-animation-timing) ease-in-out 0s, outline 0s, outline-offset 0s;background:none;box-shadow:0 0 0 2px transparent}.text{margin-block:1px 0px;margin-inline-start:0px}:host([scale=s]) .day-v-wrapper{padding-block:0.125rem}:host([scale=s]) .day-wrapper{padding:0px}:host([scale=s]) .day{block-size:27px;inline-size:27px;font-size:var(--calcite-font-size--2)}:host([scale=m]) .day-v-wrapper{padding-block:0.25rem}:host([scale=m]) .day-wrapper{padding-inline:0.25rem}:host([scale=m]) .day{block-size:33px;inline-size:33px;font-size:var(--calcite-font-size--1)}:host([scale=l]) .day-v-wrapper{padding-block:0.25rem}:host([scale=l]) .day-wrapper{padding-inline:0.25rem}:host([scale=l]) .day{block-size:43px;inline-size:43px;font-size:var(--calcite-font-size-0)}:host([current-month]) .day{opacity:1}:host(:hover:not([disabled])) .day,:host([active]:not([range])) .day{background-color:var(--calcite-ui-foreground-2);color:var(--calcite-ui-text-1)}:host(:focus),:host([active]){outline:2px solid transparent;outline-offset:2px}:host(:focus:not([disabled])) .day{outline:2px solid var(--calcite-ui-brand);outline-offset:2px;box-shadow:0 0 0 2px var(--calcite-ui-foreground-1)}:host([selected]) .day{font-weight:var(--calcite-font-weight-medium);background-color:var(--calcite-ui-brand) !important;color:var(--calcite-ui-foreground-1) !important}:host([range][selected]) .day-wrapper{background-color:var(--calcite-ui-foreground-current)}:host([start-of-range]) .day-wrapper{border-start-start-radius:40%;border-end-start-radius:40%}:host([end-of-range]) .day-wrapper{border-start-end-radius:40%;border-end-end-radius:40%}:host([start-of-range]) :not(.calcite--rtl) .day-wrapper{box-shadow:inset 4px 0 var(--calcite-ui-foreground-1)}:host([start-of-range]) .calcite--rtl .day-wrapper{box-shadow:inset -4px 0 var(--calcite-ui-foreground-1)}:host([start-of-range]) .day{opacity:1}:host([end-of-range]) :not(.calcite--rtl) .day-wrapper{box-shadow:inset -4px 0 var(--calcite-ui-foreground-1)}:host([end-of-range]) .calcite--rtl .day-wrapper{box-shadow:inset 4px 0 var(--calcite-ui-foreground-1)}:host([end-of-range]) .day{opacity:1}:host([start-of-range]:not(:focus)) :not(.calcite--rtl) .day,:host([end-of-range]:not(:focus)) :not(.calcite--rtl) .day{box-shadow:0 0 0 2px var(--calcite-ui-foreground-1)}:host([start-of-range]:not(:focus)) .calcite--rtl .day,:host([end-of-range]:not(:focus)) .calcite--rtl .day{box-shadow:0 0 0 2px var(--calcite-ui-foreground-1)}:host([start-of-range][scale=l]) :not(.calcite--rtl) .day-wrapper{box-shadow:inset 8px 0 var(--calcite-ui-foreground-1)}:host([start-of-range][scale=l]) .calcite--rtl .day-wrapper{box-shadow:inset -8px 0 var(--calcite-ui-foreground-1)}:host([end-of-range][scale=l]) :not(.calcite--rtl) .day-wrapper{box-shadow:inset -8px 0 var(--calcite-ui-foreground-1)}:host([end-of-range][scale=l]) .calcite--rtl .day-wrapper{box-shadow:inset 8px 0 var(--calcite-ui-foreground-1)}:host([highlighted]) .day-wrapper{background-color:var(--calcite-ui-foreground-current)}:host([highlighted]) .day-wrapper .day{color:var(--calcite-ui-text-1)}:host([highlighted]:not([active]:focus)) .day{color:var(--calcite-ui-text-1)}:host([range-hover]:not([selected])) .day-wrapper{background-color:var(--calcite-ui-foreground-2)}:host([range-hover]:not([selected])) .day{border-radius:0px}:host([start-of-range][range-hover]) :not(.calcite--rtl) .day-wrapper{background-image:linear-gradient(to left, var(--calcite-ui-foreground-current), var(--calcite-ui-foreground-current), var(--calcite-ui-foreground-2), var(--calcite-ui-foreground-2));border-radius:0px;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}:host([start-of-range][range-hover]) .calcite--rtl .day-wrapper{background-image:linear-gradient(to right, var(--calcite-ui-foreground-current), var(--calcite-ui-foreground-current), var(--calcite-ui-foreground-2), var(--calcite-ui-foreground-2));border-radius:0px;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}:host([end-of-range][range-hover]) :not(.calcite--rtl) .day-wrapper{background-image:linear-gradient(to right, var(--calcite-ui-foreground-current), var(--calcite-ui-foreground-current), var(--calcite-ui-foreground-2), var(--calcite-ui-foreground-2));border-radius:0px;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}:host([end-of-range][range-hover]) .calcite--rtl .day-wrapper{background-image:linear-gradient(to left, var(--calcite-ui-foreground-current), var(--calcite-ui-foreground-current), var(--calcite-ui-foreground-2), var(--calcite-ui-foreground-2));border-radius:0px;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}:host(:hover[end-of-range][range-hover]) :not(.calcite--rtl) .day-wrapper,:host(:hover[start-of-range][range-hover]) .calcite--rtl .day-wrapper{background-image:linear-gradient(to right, var(--calcite-ui-foreground-current), var(--calcite-ui-foreground-current), var(--calcite-ui-foreground-1), var(--calcite-ui-foreground-1));border-radius:0px;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}:host(:hover[start-of-range][range-hover]) :not(.calcite--rtl) .day-wrapper,:host(:hover[end-of-range][range-hover]) .calcite--rtl .day-wrapper{background-image:linear-gradient(to left, var(--calcite-ui-foreground-current), var(--calcite-ui-foreground-current), var(--calcite-ui-foreground-1), var(--calcite-ui-foreground-1));border-radius:0px;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}:host(:hover[range-hover]:not([selected]).focused--start) :not(.calcite--rtl) .day-wrapper{background-image:linear-gradient(to right, var(--calcite-ui-foreground-current), var(--calcite-ui-foreground-current), var(--calcite-ui-foreground-2), var(--calcite-ui-foreground-2))}:host(:hover[range-hover]:not([selected]).focused--start) .calcite--rtl .day-wrapper{background-image:linear-gradient(to right, var(--calcite-ui-foreground-2), var(--calcite-ui-foreground-2), var(--calcite-ui-foreground-current), var(--calcite-ui-foreground-current))}:host(:hover[range-hover]:not([selected]).focused--start) .day{border-radius:9999px;opacity:1;box-shadow:0 0 0 2px var(--calcite-ui-foreground-1)}:host(:hover[range-hover]:not([selected]).focused--end) :not(.calcite--rtl) .day-wrapper{background-image:linear-gradient(to right, var(--calcite-ui-foreground-2), var(--calcite-ui-foreground-2), var(--calcite-ui-foreground-current), var(--calcite-ui-foreground-current))}:host(:hover[range-hover]:not([selected]).focused--end) .calcite--rtl .day-wrapper{background-image:linear-gradient(to right, var(--calcite-ui-foreground-current), var(--calcite-ui-foreground-current), var(--calcite-ui-foreground-2), var(--calcite-ui-foreground-2))}:host(:hover[range-hover]:not([selected]).focused--end) .day{border-radius:9999px;opacity:1;box-shadow:0 0 0 2px var(--calcite-ui-foreground-1)}:host(:hover[range-hover]:not([selected]).focused--start.hover--outside-range) :not(.calcite--rtl) .day-wrapper,:host(:hover[range-hover]:not([selected]).focused--end.hover--outside-range) .calcite--rtl .day-wrapper{background-image:linear-gradient(to right, var(--calcite-ui-foreground-1), var(--calcite-ui-foreground-1), var(--calcite-ui-foreground-2), var(--calcite-ui-foreground-2))}:host(:hover[range-hover]:not([selected]).focused--start.hover--outside-range) :not(.calcite--rtl) .day,:host(:hover[range-hover]:not([selected]).focused--end.hover--outside-range) .calcite--rtl .day{border-radius:9999px;opacity:1;box-shadow:0 0 0 2px var(--calcite-ui-foreground-1)}:host(:hover[range-hover]:not([selected]).focused--end.hover--outside-range) :not(.calcite--rtl) .day-wrapper,:host(:hover[range-hover]:not([selected]).focused--start.hover--outside-range) .calcite--rtl .day-wrapper{background-image:linear-gradient(to right, var(--calcite-ui-foreground-2), var(--calcite-ui-foreground-2), var(--calcite-ui-foreground-1), var(--calcite-ui-foreground-1))}:host(:hover[range-hover]:not([selected]).focused--end.hover--outside-range) :not(.calcite--rtl) .day,:host(:hover[range-hover]:not([selected]).focused--start.hover--outside-range) .calcite--rtl .day{border-radius:9999px;opacity:1;box-shadow:0 0 0 2px var(--calcite-ui-foreground-1)}:host(:hover[start-of-range].hover--inside-range.focused--end) .day-wrapper,:host(:hover[end-of-range].hover--inside-range.focused--start) .day-wrapper{background-image:none}:host([start-of-range].hover--inside-range.focused--end) .day-wrapper,:host([end-of-range].hover--inside-range.focused--start) .day-wrapper{background-color:var(--calcite-ui-foreground-2)}:host([highlighted]:last-child) :not(.calcite--rtl) .day-wrapper,:host([range-hover]:last-child) :not(.calcite--rtl) .day-wrapper,:host([highlighted]:first-child) .calcite--rtl .day-wrapper,:host([range-hover]:first-child) .calcite--rtl .day-wrapper{box-shadow:inset -4px 0px 0px 0px var(--calcite-ui-foreground-1)}:host([highlighted]:first-child) :not(.calcite--rtl) .day-wrapper,:host([range-hover]:first-child) :not(.calcite--rtl) .day-wrapper,:host([highlighted]:last-child) .calcite--rtl .day-wrapper,:host([range-hover]:last-child) .calcite--rtl .day-wrapper{box-shadow:inset 4px 0px 0px 0px var(--calcite-ui-foreground-1)}:host([scale=s][highlighted]:last-child) :not(.calcite--rtl) .day-wrapper,:host([scale=s][range-hover]:last-child) :not(.calcite--rtl) .day-wrapper,:host([scale=s][highlighted]:first-child) .calcite--rtl .day-wrapper,:host([scale=s][range-hover]:first-child) .calcite--rtl .day-wrapper{box-shadow:inset -1px 0px 0px 0px var(--calcite-ui-foreground-1)}:host([scale=s][highlighted]:first-child) :not(.calcite--rtl) .day-wrapper,:host([scale=s][range-hover]:first-child) :not(.calcite--rtl) .day-wrapper,:host([scale=s][highlighted]:last-child) .calcite--rtl .day-wrapper,:host([scale=s][range-hover]:last-child) .calcite--rtl .day-wrapper{box-shadow:inset 1px 0px 0px 0px var(--calcite-ui-foreground-1)}:host([scale=l][highlighted]:first-child) :not(.calcite--rtl) .day-wrapper,:host([scale=l][range-hover]:first-child) :not(.calcite--rtl) .day-wrapper,:host([scale=l][highlighted]:last-child) .calcite--rtl .day-wrapper,:host([scale=l][range-hover]:last-child) .calcite--rtl .day-wrapper{box-shadow:inset 6px 0px 0px 0px var(--calcite-ui-foreground-1)}:host([highlighted]:first-child) .day-wrapper,:host([range-hover]:first-child) .day-wrapper{border-start-start-radius:45%;border-end-start-radius:45%}:host([highlighted]:last-child) .day-wrapper,:host([range-hover]:last-child) .day-wrapper{border-start-end-radius:45%;border-end-end-radius:45%}:host([scale=l][highlighted]:last-child) :not(.calcite--rtl) .day-wrapper,:host([scale=l][range-hover]:last-child) :not(.calcite--rtl) .day-wrapper,:host([scale=l][highlighted]:first-child) .calcite--rtl .day-wrapper,:host([scale=l][range-hover]:first-child) .calcite--rtl .day-wrapper{box-shadow:inset -6px 0px 0px 0px var(--calcite-ui-foreground-1)}@media (forced-colors: active){:host(:hover:not([disabled])) .day,:host([active]:not([range])) .day{border-radius:0px}:host([selected]){outline:2px solid canvasText}:host([selected]) .day{border-radius:0px;background-color:highlight}:host([range][selected]) .day-wrapper,:host([highlighted]) .day-wrapper,:host([range-hover]:not([selected])) .day-wrapper{background-color:highlight}:host([range][selected][start-of-range]) .day-wrapper,:host([range][selected][end-of-range]) .day-wrapper{background-color:canvas}}";

const DatePickerDay = class {
  constructor(hostRef) {
    (0,_index_4e647411_js__WEBPACK_IMPORTED_MODULE_0__.r)(this, hostRef);
    this.calciteDaySelect = (0,_index_4e647411_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "calciteDaySelect", 6);
    this.calciteInternalDayHover = (0,_index_4e647411_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "calciteInternalDayHover", 6);
    //--------------------------------------------------------------------------
    //
    //  Event Listeners
    //
    //--------------------------------------------------------------------------
    this.onClick = () => {
      !this.disabled && this.calciteDaySelect.emit();
    };
    this.keyDownHandler = (event) => {
      if ((0,_key_b75491c4_js__WEBPACK_IMPORTED_MODULE_1__.i)(event.key)) {
        !this.disabled && this.calciteDaySelect.emit();
        event.preventDefault();
      }
    };
    this.day = undefined;
    this.disabled = false;
    this.currentMonth = false;
    this.selected = false;
    this.highlighted = false;
    this.range = false;
    this.startOfRange = false;
    this.endOfRange = false;
    this.rangeHover = false;
    this.active = false;
    this.scale = undefined;
    this.value = undefined;
  }
  mouseoverHandler() {
    this.calciteInternalDayHover.emit();
  }
  //--------------------------------------------------------------------------
  //
  //  Lifecycle
  //
  //--------------------------------------------------------------------------
  componentWillLoad() {
    this.parentDatePickerEl = (0,_dom_f1ee4d04_js__WEBPACK_IMPORTED_MODULE_2__.c)(this.el, "calcite-date-picker");
  }
  render() {
    const dayId = (0,_date_d7fbf7fd_js__WEBPACK_IMPORTED_MODULE_3__.b)(this.value).replaceAll("-", "");
    if (this.parentDatePickerEl) {
      const { numberingSystem, lang: locale } = this.parentDatePickerEl;
      _locale_f7b2fbb0_js__WEBPACK_IMPORTED_MODULE_4__.n.numberFormatOptions = {
        useGrouping: false,
        ...(numberingSystem && { numberingSystem }),
        ...(locale && { locale })
      };
    }
    const formattedDay = _locale_f7b2fbb0_js__WEBPACK_IMPORTED_MODULE_4__.n.localize(String(this.day));
    const dir = (0,_dom_f1ee4d04_js__WEBPACK_IMPORTED_MODULE_2__.b)(this.el);
    return ((0,_index_4e647411_js__WEBPACK_IMPORTED_MODULE_0__.h)(_index_4e647411_js__WEBPACK_IMPORTED_MODULE_0__.H, { id: dayId, onClick: this.onClick, onKeyDown: this.keyDownHandler, role: "gridcell" }, (0,_index_4e647411_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: { "day-v-wrapper": true, [_resources_48436eea_js__WEBPACK_IMPORTED_MODULE_5__.C.rtl]: dir === "rtl" } }, (0,_index_4e647411_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: "day-wrapper" }, (0,_index_4e647411_js__WEBPACK_IMPORTED_MODULE_0__.h)("span", { class: "day" }, (0,_index_4e647411_js__WEBPACK_IMPORTED_MODULE_0__.h)("span", { class: "text" }, formattedDay))))));
  }
  componentDidRender() {
    (0,_interactive_29995522_js__WEBPACK_IMPORTED_MODULE_6__.u)(this, this.isTabbable);
  }
  isTabbable() {
    return this.active;
  }
  get el() { return (0,_index_4e647411_js__WEBPACK_IMPORTED_MODULE_0__.g)(this); }
};
DatePickerDay.style = datePickerDayCss;

const datePickerMonthCss = "@keyframes in{0%{opacity:0}100%{opacity:1}}@keyframes in-down{0%{opacity:0;transform:translate3D(0, -5px, 0)}100%{opacity:1;transform:translate3D(0, 0, 0)}}@keyframes in-up{0%{opacity:0;transform:translate3D(0, 5px, 0)}100%{opacity:1;transform:translate3D(0, 0, 0)}}@keyframes in-scale{0%{opacity:0;transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;transform:scale3D(1, 1, 1)}}:root{--calcite-animation-timing:calc(150ms * var(--calcite-internal-duration-factor));--calcite-internal-duration-factor:var(--calcite-duration-factor, 1);--calcite-internal-animation-timing-fast:calc(100ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-medium:calc(200ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-slow:calc(300ms * var(--calcite-internal-duration-factor))}.calcite-animate{opacity:0;animation-fill-mode:both;animation-duration:var(--calcite-animation-timing)}.calcite-animate__in{animation-name:in}.calcite-animate__in-down{animation-name:in-down}.calcite-animate__in-up{animation-name:in-up}.calcite-animate__in-scale{animation-name:in-scale}@media (prefers-reduced-motion: reduce){:root{--calcite-internal-duration-factor:0}}:root{--calcite-floating-ui-transition:var(--calcite-animation-timing);--calcite-floating-ui-z-index:600}:host([hidden]){display:none}.calender{margin-block-end:0.25rem}.week-headers{display:flex;border-width:0px;border-block-start-width:1px;border-style:solid;border-color:var(--calcite-ui-border-3);padding-block:0px;padding-inline:0.25rem}.week-header{text-align:center;font-weight:var(--calcite-font-weight-bold);color:var(--calcite-ui-text-3);inline-size:14.2857142857%}:host([scale=s]) .week-header{padding-inline:0px;padding-block:0.5rem 0.75rem;font-size:var(--calcite-font-size--2);line-height:1rem}:host([scale=m]) .week-header{padding-inline:0px;padding-block:0.75rem 1rem;font-size:var(--calcite-font-size--2);line-height:1rem}:host([scale=l]) .week-header{padding-inline:0px;padding-block:1rem 1.25rem;font-size:var(--calcite-font-size--1);line-height:1rem}.week-days{display:flex;flex-direction:row;padding-block:0px;padding-inline:6px}.week-days:focus{outline:2px solid transparent;outline-offset:2px}";

const DAYS_PER_WEEK = 7;
const DAYS_MAXIMUM_INDEX = 6;
const DatePickerMonth = class {
  constructor(hostRef) {
    (0,_index_4e647411_js__WEBPACK_IMPORTED_MODULE_0__.r)(this, hostRef);
    this.calciteInternalDatePickerSelect = (0,_index_4e647411_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "calciteInternalDatePickerSelect", 6);
    this.calciteInternalDatePickerHover = (0,_index_4e647411_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "calciteInternalDatePickerHover", 6);
    this.calciteInternalDatePickerActiveDateChange = (0,_index_4e647411_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "calciteInternalDatePickerActiveDateChange", 6);
    this.calciteInternalDatePickerMouseOut = (0,_index_4e647411_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "calciteInternalDatePickerMouseOut", 6);
    //--------------------------------------------------------------------------
    //
    //  Event Listeners
    //
    //--------------------------------------------------------------------------
    this.keyDownHandler = (event) => {
      if (event.defaultPrevented) {
        return;
      }
      const isRTL = this.el.dir === "rtl";
      switch (event.key) {
        case "ArrowUp":
          event.preventDefault();
          this.addDays(-7);
          break;
        case "ArrowRight":
          event.preventDefault();
          this.addDays(isRTL ? -1 : 1);
          break;
        case "ArrowDown":
          event.preventDefault();
          this.addDays(7);
          break;
        case "ArrowLeft":
          event.preventDefault();
          this.addDays(isRTL ? 1 : -1);
          break;
        case "PageUp":
          event.preventDefault();
          this.addMonths(-1);
          break;
        case "PageDown":
          event.preventDefault();
          this.addMonths(1);
          break;
        case "Home":
          event.preventDefault();
          this.activeDate.setDate(1);
          this.addDays();
          break;
        case "End":
          event.preventDefault();
          this.activeDate.setDate(new Date(this.activeDate.getFullYear(), this.activeDate.getMonth() + 1, 0).getDate());
          this.addDays();
          break;
        case "Enter":
        case " ":
          event.preventDefault();
          break;
        case "Tab":
          this.activeFocus = false;
      }
    };
    /**
     * Once user is not interacting via keyboard,
     * disable auto focusing of active date
     */
    this.disableActiveFocus = () => {
      this.activeFocus = false;
    };
    this.dayHover = (event) => {
      const target = event.target;
      if (target.disabled) {
        this.calciteInternalDatePickerMouseOut.emit();
      }
      else {
        this.calciteInternalDatePickerHover.emit(target.value);
      }
      event.stopPropagation();
    };
    this.daySelect = (event) => {
      const target = event.target;
      this.calciteInternalDatePickerSelect.emit(target.value);
    };
    this.selectedDate = undefined;
    this.activeDate = new Date();
    this.startDate = undefined;
    this.endDate = undefined;
    this.min = undefined;
    this.max = undefined;
    this.scale = undefined;
    this.localeData = undefined;
    this.hoverRange = undefined;
  }
  mouseoutHandler() {
    this.calciteInternalDatePickerMouseOut.emit();
  }
  //--------------------------------------------------------------------------
  //
  //  Lifecycle
  //
  //--------------------------------------------------------------------------
  render() {
    const month = this.activeDate.getMonth();
    const year = this.activeDate.getFullYear();
    const startOfWeek = this.localeData.weekStart % 7;
    const { abbreviated, short, narrow } = this.localeData.days;
    const weekDays = this.scale === "s" ? narrow || short || abbreviated : short || abbreviated || narrow;
    const adjustedWeekDays = [...weekDays.slice(startOfWeek, 7), ...weekDays.slice(0, startOfWeek)];
    const curMonDays = this.getCurrentMonthDays(month, year);
    const prevMonDays = this.getPreviousMonthDays(month, year, startOfWeek);
    const nextMonDays = this.getNextMonthDays(month, year, startOfWeek);
    const days = [
      ...prevMonDays.map((day) => {
        const date = new Date(year, month - 1, day);
        return this.renderDateDay(false, day, date);
      }),
      ...curMonDays.map((day) => {
        const date = new Date(year, month, day);
        const active = (0,_date_d7fbf7fd_js__WEBPACK_IMPORTED_MODULE_3__.f)(date, this.activeDate);
        return this.renderDateDay(active, day, date, true, true);
      }),
      ...nextMonDays.map((day) => {
        const date = new Date(year, month + 1, day);
        return this.renderDateDay(false, day, date);
      })
    ];
    const weeks = [];
    for (let i = 0; i < days.length; i += 7) {
      weeks.push(days.slice(i, i + 7));
    }
    return ((0,_index_4e647411_js__WEBPACK_IMPORTED_MODULE_0__.h)(_index_4e647411_js__WEBPACK_IMPORTED_MODULE_0__.H, { onFocusOut: this.disableActiveFocus, onKeyDown: this.keyDownHandler }, (0,_index_4e647411_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: "calender", role: "grid" }, (0,_index_4e647411_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: "week-headers", role: "row" }, adjustedWeekDays.map((weekday) => ((0,_index_4e647411_js__WEBPACK_IMPORTED_MODULE_0__.h)("span", { class: "week-header", role: "columnheader" }, weekday)))), weeks.map((days) => ((0,_index_4e647411_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: "week-days", role: "row" }, days))))));
  }
  //--------------------------------------------------------------------------
  //
  //  Private Methods
  //
  //--------------------------------------------------------------------------
  /**
   * Add n months to the current month
   *
   * @param step
   */
  addMonths(step) {
    const nextDate = new Date(this.activeDate);
    nextDate.setMonth(this.activeDate.getMonth() + step);
    this.calciteInternalDatePickerActiveDateChange.emit((0,_date_d7fbf7fd_js__WEBPACK_IMPORTED_MODULE_3__.e)(nextDate, this.min, this.max));
    this.activeFocus = true;
  }
  /**
   * Add n days to the current date
   *
   * @param step
   */
  addDays(step = 0) {
    const nextDate = new Date(this.activeDate);
    nextDate.setDate(this.activeDate.getDate() + step);
    this.calciteInternalDatePickerActiveDateChange.emit((0,_date_d7fbf7fd_js__WEBPACK_IMPORTED_MODULE_3__.e)(nextDate, this.min, this.max));
    this.activeFocus = true;
  }
  /**
   * Get dates for last days of the previous month
   *
   * @param month
   * @param year
   * @param startOfWeek
   */
  getPreviousMonthDays(month, year, startOfWeek) {
    const lastDate = new Date(year, month, 0);
    const date = lastDate.getDate();
    const startDay = lastDate.getDay();
    const days = [];
    if (startDay === (startOfWeek + DAYS_MAXIMUM_INDEX) % DAYS_PER_WEEK) {
      return days;
    }
    if (startDay === startOfWeek) {
      return [date];
    }
    for (let i = (DAYS_PER_WEEK + startDay - startOfWeek) % DAYS_PER_WEEK; i >= 0; i--) {
      days.push(date - i);
    }
    return days;
  }
  /**
   * Get dates for the current month
   *
   * @param month
   * @param year
   */
  getCurrentMonthDays(month, year) {
    const num = new Date(year, month + 1, 0).getDate();
    const days = [];
    for (let i = 0; i < num; i++) {
      days.push(i + 1);
    }
    return days;
  }
  /**
   * Get dates for first days of the next month
   *
   * @param month
   * @param year
   * @param startOfWeek
   */
  getNextMonthDays(month, year, startOfWeek) {
    const endDay = new Date(year, month + 1, 0).getDay();
    const days = [];
    if (endDay === (startOfWeek + DAYS_MAXIMUM_INDEX) % DAYS_PER_WEEK) {
      return days;
    }
    for (let i = 0; i < (DAYS_MAXIMUM_INDEX - (endDay - startOfWeek)) % DAYS_PER_WEEK; i++) {
      days.push(i + 1);
    }
    return days;
  }
  /**
   * Determine if the date is in between the start and end dates
   *
   * @param date
   */
  betweenSelectedRange(date) {
    return !!(this.startDate &&
      this.endDate &&
      date > this.startDate &&
      date < this.endDate &&
      !this.isRangeHover(date));
  }
  /**
   * Determine if the date should be in selected state
   *
   * @param date
   */
  isSelected(date) {
    return !!((0,_date_d7fbf7fd_js__WEBPACK_IMPORTED_MODULE_3__.f)(date, this.selectedDate) ||
      (this.startDate && (0,_date_d7fbf7fd_js__WEBPACK_IMPORTED_MODULE_3__.f)(date, this.startDate)) ||
      (this.endDate && (0,_date_d7fbf7fd_js__WEBPACK_IMPORTED_MODULE_3__.f)(date, this.endDate)));
  }
  /**
   * Determine if the date is the start of the date range
   *
   * @param date
   */
  isStartOfRange(date) {
    return !!(this.startDate &&
      !(0,_date_d7fbf7fd_js__WEBPACK_IMPORTED_MODULE_3__.f)(this.startDate, this.endDate) &&
      (0,_date_d7fbf7fd_js__WEBPACK_IMPORTED_MODULE_3__.f)(this.startDate, date) &&
      !this.isEndOfRange(date));
  }
  isEndOfRange(date) {
    return !!((this.endDate && !(0,_date_d7fbf7fd_js__WEBPACK_IMPORTED_MODULE_3__.f)(this.startDate, this.endDate) && (0,_date_d7fbf7fd_js__WEBPACK_IMPORTED_MODULE_3__.f)(this.endDate, date)) ||
      (!this.endDate &&
        this.hoverRange &&
        (0,_date_d7fbf7fd_js__WEBPACK_IMPORTED_MODULE_3__.f)(this.startDate, this.hoverRange.end) &&
        (0,_date_d7fbf7fd_js__WEBPACK_IMPORTED_MODULE_3__.f)(date, this.hoverRange.end)));
  }
  /**
   * Render calcite-date-picker-day
   *
   * @param active
   * @param day
   * @param date
   * @param currentMonth
   * @param ref
   */
  renderDateDay(active, day, date, currentMonth, ref) {
    const isFocusedOnStart = this.isFocusedOnStart();
    const isHoverInRange = this.isHoverInRange() ||
      (!this.endDate && this.hoverRange && (0,_date_d7fbf7fd_js__WEBPACK_IMPORTED_MODULE_3__.f)(this.hoverRange?.end, this.startDate));
    return ((0,_index_4e647411_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-date-picker-day", { active: active, class: {
        "hover--inside-range": this.startDate && isHoverInRange,
        "hover--outside-range": this.startDate && !isHoverInRange,
        "focused--start": isFocusedOnStart,
        "focused--end": !isFocusedOnStart
      }, currentMonth: currentMonth, day: day, disabled: !(0,_date_d7fbf7fd_js__WEBPACK_IMPORTED_MODULE_3__.i)(date, this.min, this.max), endOfRange: this.isEndOfRange(date), highlighted: this.betweenSelectedRange(date), key: date.toDateString(), onCalciteDaySelect: this.daySelect, onCalciteInternalDayHover: this.dayHover, range: !!this.startDate && !!this.endDate && !(0,_date_d7fbf7fd_js__WEBPACK_IMPORTED_MODULE_3__.f)(this.startDate, this.endDate), rangeHover: this.isRangeHover(date), ref: (el) => {
        // when moving via keyboard, focus must be updated on active date
        if (ref && active && this.activeFocus) {
          el?.focus();
        }
      }, scale: this.scale, selected: this.isSelected(date), startOfRange: this.isStartOfRange(date), value: date }));
  }
  isFocusedOnStart() {
    return this.hoverRange?.focused === "start";
  }
  isHoverInRange() {
    if (!this.hoverRange) {
      return false;
    }
    const { start, end } = this.hoverRange;
    return !!((!this.isFocusedOnStart() && this.startDate && (!this.endDate || end < this.endDate)) ||
      (this.isFocusedOnStart() && this.startDate && start > this.startDate));
  }
  isRangeHover(date) {
    if (!this.hoverRange) {
      return false;
    }
    const { start, end } = this.hoverRange;
    const isStart = this.isFocusedOnStart();
    const insideRange = this.isHoverInRange();
    const cond1 = insideRange &&
      ((!isStart && date > this.startDate && (date < end || (0,_date_d7fbf7fd_js__WEBPACK_IMPORTED_MODULE_3__.f)(date, end))) ||
        (isStart && date < this.endDate && (date > start || (0,_date_d7fbf7fd_js__WEBPACK_IMPORTED_MODULE_3__.f)(date, start))));
    const cond2 = !insideRange &&
      ((!isStart && date >= this.endDate && (date < end || (0,_date_d7fbf7fd_js__WEBPACK_IMPORTED_MODULE_3__.f)(date, end))) ||
        (isStart &&
          ((this.startDate && date < this.startDate) ||
            (this.endDate && (0,_date_d7fbf7fd_js__WEBPACK_IMPORTED_MODULE_3__.f)(date, this.startDate))) &&
          ((start && date > start) || (0,_date_d7fbf7fd_js__WEBPACK_IMPORTED_MODULE_3__.f)(date, start))));
    return cond1 || cond2;
  }
  get el() { return (0,_index_4e647411_js__WEBPACK_IMPORTED_MODULE_0__.g)(this); }
};
DatePickerMonth.style = datePickerMonthCss;

/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.
 * v1.0.5
 */
const BUDDHIST_CALENDAR_YEAR_OFFSET = 543;
const CSS = {
  header: "header",
  month: "month",
  chevron: "chevron",
  suffix: "suffix",
  yearSuffix: "year--suffix",
  yearWrap: "year-wrap",
  textReverse: "text--reverse"
};
const ICON = {
  chevronLeft: "chevron-left",
  chevronRight: "chevron-right"
};

const datePickerMonthHeaderCss = "@keyframes in{0%{opacity:0}100%{opacity:1}}@keyframes in-down{0%{opacity:0;transform:translate3D(0, -5px, 0)}100%{opacity:1;transform:translate3D(0, 0, 0)}}@keyframes in-up{0%{opacity:0;transform:translate3D(0, 5px, 0)}100%{opacity:1;transform:translate3D(0, 0, 0)}}@keyframes in-scale{0%{opacity:0;transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;transform:scale3D(1, 1, 1)}}:root{--calcite-animation-timing:calc(150ms * var(--calcite-internal-duration-factor));--calcite-internal-duration-factor:var(--calcite-duration-factor, 1);--calcite-internal-animation-timing-fast:calc(100ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-medium:calc(200ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-slow:calc(300ms * var(--calcite-internal-duration-factor))}.calcite-animate{opacity:0;animation-fill-mode:both;animation-duration:var(--calcite-animation-timing)}.calcite-animate__in{animation-name:in}.calcite-animate__in-down{animation-name:in-down}.calcite-animate__in-up{animation-name:in-up}.calcite-animate__in-scale{animation-name:in-scale}@media (prefers-reduced-motion: reduce){:root{--calcite-internal-duration-factor:0}}:root{--calcite-floating-ui-transition:var(--calcite-animation-timing);--calcite-floating-ui-z-index:600}:host([hidden]){display:none}:host{display:block}.header{display:flex;justify-content:space-between;padding-block:0px;padding-inline:0.25rem}:host([scale=s]) .text{margin-block:0.5rem;font-size:var(--calcite-font-size--1);line-height:1rem}:host([scale=s]) .chevron{block-size:2.25rem}:host([scale=m]) .text{margin-block:0.75rem;font-size:var(--calcite-font-size-0);line-height:1.25rem}:host([scale=m]) .chevron{block-size:3rem}:host([scale=l]) .text{margin-block:1rem;font-size:var(--calcite-font-size-1);line-height:1.5rem}:host([scale=l]) .chevron{block-size:3.5rem}.chevron{margin-inline:-0.25rem;box-sizing:content-box;display:flex;flex-grow:0;cursor:pointer;align-items:center;justify-content:center;border-style:none;background-color:var(--calcite-ui-foreground-1);padding-inline:0.25rem;color:var(--calcite-ui-text-3);outline:2px solid transparent;outline-offset:2px;outline-color:transparent;transition:all var(--calcite-animation-timing) ease-in-out 0s, outline 0s, outline-offset 0s;inline-size:14.2857142857%}.chevron:focus{outline:2px solid var(--calcite-ui-brand);outline-offset:-2px}.chevron:hover,.chevron:focus{background-color:var(--calcite-ui-foreground-2);fill:var(--calcite-ui-text-1);color:var(--calcite-ui-text-1)}.chevron:active{background-color:var(--calcite-ui-foreground-3)}.chevron[aria-disabled=true]{pointer-events:none;opacity:0}.text{margin-block:auto;display:flex;inline-size:100%;flex:1 1 auto;align-items:center;justify-content:center;text-align:center;line-height:1}.text--reverse{flex-direction:row-reverse}.month,.year,.suffix{margin-inline:0.25rem;margin-block:auto;display:inline-block;background-color:var(--calcite-ui-foreground-1);font-weight:var(--calcite-font-weight-medium);line-height:1.25;color:var(--calcite-ui-text-1);font-size:inherit}.year{position:relative;inline-size:2.5rem;border-style:none;background-color:transparent;text-align:center;font-family:inherit;outline-color:transparent}.year:hover{transition-duration:100ms;transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1);transition-property:outline-color;outline:2px solid var(--calcite-ui-border-2);outline-offset:2px}.year:focus{outline:2px solid var(--calcite-ui-brand);outline-offset:2px}.year--suffix{text-align:start}.year-wrap{position:relative}.suffix{inset-block-start:0px;white-space:nowrap;text-align:start;inset-inline-start:0}";

const DatePickerMonthHeader = class {
  constructor(hostRef) {
    (0,_index_4e647411_js__WEBPACK_IMPORTED_MODULE_0__.r)(this, hostRef);
    this.calciteInternalDatePickerSelect = (0,_index_4e647411_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "calciteInternalDatePickerSelect", 6);
    //--------------------------------------------------------------------------
    //
    //  Private Methods
    //
    //--------------------------------------------------------------------------
    /**
     * Increment year on UP/DOWN keys
     *
     * @param event
     */
    this.onYearKey = (event) => {
      const localizedYear = this.parseCalendarYear(event.target.value);
      switch (event.key) {
        case "ArrowDown":
          event.preventDefault();
          this.setYear({ localizedYear, offset: -1 });
          break;
        case "ArrowUp":
          event.preventDefault();
          this.setYear({ localizedYear, offset: 1 });
          break;
      }
    };
    this.onYearChange = (event) => {
      this.setYear({
        localizedYear: this.parseCalendarYear(event.target.value)
      });
    };
    this.onYearInput = (event) => {
      this.setYear({
        localizedYear: this.parseCalendarYear(event.target.value),
        commit: false
      });
    };
    this.prevMonthClick = (event) => {
      this.handleArrowClick(event, this.prevMonthDate);
    };
    this.prevMonthKeydown = (event) => {
      if ((0,_key_b75491c4_js__WEBPACK_IMPORTED_MODULE_1__.i)(event.key)) {
        this.prevMonthClick(event);
      }
    };
    this.nextMonthClick = (event) => {
      this.handleArrowClick(event, this.nextMonthDate);
    };
    this.nextMonthKeydown = (event) => {
      if ((0,_key_b75491c4_js__WEBPACK_IMPORTED_MODULE_1__.i)(event.key)) {
        this.nextMonthClick(event);
      }
    };
    /*
     * Update active month on clicks of left/right arrows
     */
    this.handleArrowClick = (event, date) => {
      event.preventDefault();
      this.calciteInternalDatePickerSelect.emit(date);
    };
    this.selectedDate = undefined;
    this.activeDate = undefined;
    this.headingLevel = undefined;
    this.min = undefined;
    this.max = undefined;
    this.scale = undefined;
    this.localeData = undefined;
    this.messages = undefined;
    this.globalAttributes = {};
    this.nextMonthDate = undefined;
    this.prevMonthDate = undefined;
  }
  //--------------------------------------------------------------------------
  //
  //  Lifecycle
  //
  //--------------------------------------------------------------------------
  componentWillLoad() {
    this.parentDatePickerEl = (0,_dom_f1ee4d04_js__WEBPACK_IMPORTED_MODULE_2__.c)(this.el, "calcite-date-picker");
  }
  connectedCallback() {
    this.setNextPrevMonthDates();
  }
  render() {
    return (0,_index_4e647411_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: CSS.header }, this.renderContent());
  }
  renderContent() {
    const { messages, localeData, activeDate } = this;
    if (!activeDate || !localeData) {
      return null;
    }
    if (this.parentDatePickerEl) {
      const { numberingSystem, lang: locale } = this.parentDatePickerEl;
      _locale_f7b2fbb0_js__WEBPACK_IMPORTED_MODULE_4__.n.numberFormatOptions = {
        useGrouping: false,
        ...(numberingSystem && { numberingSystem }),
        ...(locale && { locale })
      };
    }
    const activeMonth = activeDate.getMonth();
    const { months, unitOrder } = localeData;
    const localizedMonth = (months.wide || months.narrow || months.abbreviated)[activeMonth];
    const localizedYear = this.formatCalendarYear(activeDate.getFullYear());
    const iconScale = this.scale === "l" ? "m" : "s";
    const order = (0,_date_d7fbf7fd_js__WEBPACK_IMPORTED_MODULE_3__.h)(unitOrder);
    const reverse = order.indexOf("y") < order.indexOf("m");
    const suffix = localeData.year?.suffix;
    return ((0,_index_4e647411_js__WEBPACK_IMPORTED_MODULE_0__.h)(_index_4e647411_js__WEBPACK_IMPORTED_MODULE_0__.F, null, (0,_index_4e647411_js__WEBPACK_IMPORTED_MODULE_0__.h)("a", { "aria-disabled": `${this.prevMonthDate.getMonth() === activeMonth}`, "aria-label": messages.prevMonth, class: CSS.chevron, href: "#", onClick: this.prevMonthClick, onKeyDown: this.prevMonthKeydown, role: "button", tabindex: this.prevMonthDate.getMonth() === activeMonth ? -1 : 0 }, (0,_index_4e647411_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-icon", { "flip-rtl": true, icon: ICON.chevronLeft, scale: iconScale })), (0,_index_4e647411_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: { text: true, [CSS.textReverse]: reverse } }, (0,_index_4e647411_js__WEBPACK_IMPORTED_MODULE_0__.h)(_Heading_0c24303c_js__WEBPACK_IMPORTED_MODULE_7__.H, { class: CSS.month, level: this.headingLevel }, localizedMonth), (0,_index_4e647411_js__WEBPACK_IMPORTED_MODULE_0__.h)("span", { class: CSS.yearWrap }, (0,_index_4e647411_js__WEBPACK_IMPORTED_MODULE_0__.h)("input", { "aria-label": messages.year, class: {
        year: true,
        [CSS.yearSuffix]: !!suffix
      }, inputmode: "numeric", maxlength: "4", minlength: "1", onChange: this.onYearChange, onInput: this.onYearInput, onKeyDown: this.onYearKey, pattern: "\\d*", ref: (el) => (this.yearInput = el), type: "text", value: localizedYear }), suffix && (0,_index_4e647411_js__WEBPACK_IMPORTED_MODULE_0__.h)("span", { class: CSS.suffix }, suffix))), (0,_index_4e647411_js__WEBPACK_IMPORTED_MODULE_0__.h)("a", { "aria-disabled": `${this.nextMonthDate.getMonth() === activeMonth}`, "aria-label": messages.nextMonth, class: CSS.chevron, href: "#", onClick: this.nextMonthClick, onKeyDown: this.nextMonthKeydown, role: "button", tabindex: this.nextMonthDate.getMonth() === activeMonth ? -1 : 0 }, (0,_index_4e647411_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-icon", { "flip-rtl": true, icon: ICON.chevronRight, scale: iconScale }))));
  }
  setNextPrevMonthDates() {
    if (!this.activeDate) {
      return;
    }
    this.nextMonthDate = (0,_date_d7fbf7fd_js__WEBPACK_IMPORTED_MODULE_3__.e)((0,_date_d7fbf7fd_js__WEBPACK_IMPORTED_MODULE_3__.n)(this.activeDate), this.min, this.max);
    this.prevMonthDate = (0,_date_d7fbf7fd_js__WEBPACK_IMPORTED_MODULE_3__.e)((0,_date_d7fbf7fd_js__WEBPACK_IMPORTED_MODULE_3__.p)(this.activeDate), this.min, this.max);
  }
  formatCalendarYear(year) {
    const { localeData } = this;
    const buddhistCalendar = localeData["default-calendar"] === "buddhist";
    const yearOffset = buddhistCalendar ? BUDDHIST_CALENDAR_YEAR_OFFSET : 0;
    return _locale_f7b2fbb0_js__WEBPACK_IMPORTED_MODULE_4__.n.localize(`${year + yearOffset}`);
  }
  parseCalendarYear(year) {
    const { localeData } = this;
    const buddhistCalendar = localeData["default-calendar"] === "buddhist";
    const yearOffset = buddhistCalendar ? BUDDHIST_CALENDAR_YEAR_OFFSET : 0;
    const parsedYear = Number(_locale_f7b2fbb0_js__WEBPACK_IMPORTED_MODULE_4__.n.delocalize(year)) - yearOffset;
    return _locale_f7b2fbb0_js__WEBPACK_IMPORTED_MODULE_4__.n.localize(`${parsedYear}`);
  }
  getInRangeDate({ localizedYear, offset = 0 }) {
    const { min, max, activeDate } = this;
    const parsedYear = Number(_locale_f7b2fbb0_js__WEBPACK_IMPORTED_MODULE_4__.n.delocalize(localizedYear));
    const length = parsedYear.toString().length;
    const year = isNaN(parsedYear) ? false : parsedYear + offset;
    const inRange = year && (!min || min.getFullYear() <= year) && (!max || max.getFullYear() >= year);
    // if you've supplied a year and it's in range
    if (year && inRange && length === localizedYear.length) {
      const nextDate = new Date(activeDate);
      nextDate.setFullYear(year);
      return (0,_date_d7fbf7fd_js__WEBPACK_IMPORTED_MODULE_3__.e)(nextDate, min, max);
    }
  }
  /**
   * Parse localized year string from input,
   * set to active if in range
   *
   * @param root0
   * @param root0.localizedYear
   * @param root0.commit
   * @param root0.offset
   */
  setYear({ localizedYear, commit = true, offset = 0 }) {
    const { yearInput, activeDate } = this;
    const inRangeDate = this.getInRangeDate({ localizedYear, offset });
    // if you've supplied a year and it's in range, update active date
    if (inRangeDate) {
      this.calciteInternalDatePickerSelect.emit(inRangeDate);
    }
    if (commit) {
      yearInput.value = this.formatCalendarYear((inRangeDate || activeDate).getFullYear());
    }
  }
  get el() { return (0,_index_4e647411_js__WEBPACK_IMPORTED_MODULE_0__.g)(this); }
  static get watchers() { return {
    "min": ["setNextPrevMonthDates"],
    "max": ["setNextPrevMonthDates"],
    "activeDate": ["setNextPrevMonthDates"]
  }; }
};
DatePickerMonthHeader.style = datePickerMonthHeaderCss;



//# sourceMappingURL=calcite-date-picker-day_3.entry.js.map

/***/ }),

/***/ "./extensions/widgets/ba-infographic/node_modules/@arcgis/business-analyst-components/dist/stencil-components/dist/esm/date-d7fbf7fd.js":
/*!**********************************************************************************************************************************************!*\
  !*** ./extensions/widgets/ba-infographic/node_modules/@arcgis/business-analyst-components/dist/stencil-components/dist/esm/date-d7fbf7fd.js ***!
  \**********************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   a: () => (/* binding */ dateFromLocalizedString),
/* harmony export */   b: () => (/* binding */ dateToISO),
/* harmony export */   c: () => (/* binding */ dateFromISO),
/* harmony export */   d: () => (/* binding */ datePartsFromLocalizedString),
/* harmony export */   e: () => (/* binding */ dateFromRange),
/* harmony export */   f: () => (/* binding */ sameDate),
/* harmony export */   g: () => (/* binding */ getDaysDiff),
/* harmony export */   h: () => (/* binding */ getOrder),
/* harmony export */   i: () => (/* binding */ inRange),
/* harmony export */   n: () => (/* binding */ nextMonth),
/* harmony export */   p: () => (/* binding */ prevMonth),
/* harmony export */   s: () => (/* binding */ setEndOfDay)
/* harmony export */ });
/* harmony import */ var _locale_f7b2fbb0_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./locale-f7b2fbb0.js */ "./extensions/widgets/ba-infographic/node_modules/@arcgis/business-analyst-components/dist/stencil-components/dist/esm/locale-f7b2fbb0.js");


/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.
 * v1.0.5
 */
/**
 * Check if date is within a min and max
 *
 * @param date
 * @param min
 * @param max
 */
function inRange(date, min, max) {
  if (!date) {
    return;
  }
  const time = date.getTime();
  const afterMin = !(min instanceof Date) || time >= min.getTime();
  const beforeMax = !(max instanceof Date) || time <= max.getTime();
  return afterMin && beforeMax;
}
/**
 * Ensures date is within range,
 * returns min or max if out of bounds
 *
 * @param date
 * @param min
 * @param max
 */
function dateFromRange(date, min, max) {
  if (!(date instanceof Date)) {
    return null;
  }
  const time = date.getTime();
  const beforeMin = min instanceof Date && time < min.getTime();
  const afterMax = max instanceof Date && time > max.getTime();
  if (beforeMin) {
    return min;
  }
  if (afterMax) {
    return max;
  }
  return date;
}
/**
 * Parse an iso8601 string (YYYY-mm-dd) into a valid date.
 * TODO: handle time when time of day UI is added
 *
 * @param iso8601
 * @param isEndDate
 */
function dateFromISO(iso8601, isEndDate = false) {
  if (iso8601 instanceof Date) {
    return iso8601;
  }
  if (!iso8601 || typeof iso8601 !== "string") {
    return null;
  }
  const d = iso8601.split(/[: T-]/).map(parseFloat);
  const date = new Date(d[0], (d[1] || 1) - 1, d[2] || 1);
  date.setFullYear(d[0]);
  if (isNaN(date.getTime())) {
    throw new Error(`Invalid ISO 8601 date: "${iso8601}"`);
  }
  if (isEndDate) {
    return setEndOfDay(date);
  }
  return date;
}
/**
 * Parse a localized date string into a valid Date.
 * return false if date is invalid, or out of range
 *
 * @param value
 * @param localeData
 */
function dateFromLocalizedString(value, localeData) {
  if (!localeData) {
    return null;
  }
  const { separator } = localeData;
  const { day, month, year } = parseDateString(value, localeData);
  const date = new Date(year, month, day);
  date.setFullYear(year);
  const validDay = day > 0;
  const validMonth = month > -1;
  const validDate = !isNaN(date.getTime());
  const validLength = value.split(separator).filter((c) => c).length > 2;
  const validYear = year.toString().length > 0;
  if (validDay && validMonth && validDate && validLength && validYear) {
    return date;
  }
  return null;
}
/**
 * Retrieve day, month, and year strings from a localized string
 *
 * @param string
 * @param localeData
 */
function datePartsFromLocalizedString(string, localeData) {
  const { separator, unitOrder } = localeData;
  const order = getOrder(unitOrder);
  const values = string.split(separator).map((part) => _locale_f7b2fbb0_js__WEBPACK_IMPORTED_MODULE_0__.n.delocalize(part));
  const day = values[order.indexOf("d")];
  const month = values[order.indexOf("m")];
  const year = values[order.indexOf("y")];
  return { day, month, year };
}
/**
 * Return first portion of ISO string (YYYY-mm-dd)
 *
 * @param date
 */
function dateToISO(date) {
  if (date instanceof Date) {
    return new Date(date.getTime() - date.getTimezoneOffset() * 60000).toISOString().split("T")[0];
  }
  return "";
}
/**
 * Check if two dates are the same day, month, year
 *
 * @param d1
 * @param d2
 */
function sameDate(d1, d2) {
  return (d1 instanceof Date &&
    d2 instanceof Date &&
    d1.getDate() === d2.getDate() &&
    d1.getMonth() === d2.getMonth() &&
    d1.getFullYear() === d2.getFullYear());
}
/**
 * Get a date one month in the past
 *
 * @param date
 */
function prevMonth(date) {
  const month = date.getMonth();
  const nextDate = new Date(date);
  nextDate.setMonth(month - 1);
  // date doesn't exist in new month, use last day
  if (month === nextDate.getMonth()) {
    return new Date(date.getFullYear(), month, 0);
  }
  return nextDate;
}
/**
 * Get a date one month in the future
 *
 * @param date
 */
function nextMonth(date) {
  const month = date.getMonth();
  const nextDate = new Date(date);
  nextDate.setMonth(month + 1);
  // date doesn't exist in new month, use last day
  if ((month + 2) % 7 === nextDate.getMonth() % 7) {
    return new Date(date.getFullYear(), month + 2, 0);
  }
  return nextDate;
}
/**
 * Parse numeric units for day, month, and year from a localized string
 * month starts at 0 (can pass to date constructor)
 * can return values as number or string
 *
 * @param string
 * @param localeData
 */
function parseDateString(string, localeData) {
  const { day, month, year } = datePartsFromLocalizedString(string, localeData);
  return {
    day: parseInt(day),
    month: parseInt(month) - 1,
    year: parseInt(year)
  };
}
/**
 * Based on the unitOrder string, find order of month, day, and year for locale
 *
 * @param unitOrder
 */
function getOrder(unitOrder) {
  const signifiers = ["d", "m", "y"];
  const order = unitOrder.toLowerCase();
  return signifiers.sort((a, b) => order.indexOf(a) - order.indexOf(b));
}
/**
 * Get number of days between two dates
 *
 * @param date1
 * @param date2
 */
function getDaysDiff(date1, date2) {
  const ts1 = date1.getTime();
  const ts2 = date2.getTime();
  return (ts1 - ts2) / (1000 * 3600 * 24);
}
/**
 * Set time of the day to the end.
 *
 * @param {Date} date Date.
 * @returns {Date} Date with time set to end of day .
 */
function setEndOfDay(date) {
  date.setHours(23, 59, 59, 999);
  return date;
}



//# sourceMappingURL=date-d7fbf7fd.js.map

/***/ }),

/***/ "./extensions/widgets/ba-infographic/node_modules/@arcgis/business-analyst-components/dist/stencil-components/dist/esm/interactive-29995522.js":
/*!*****************************************************************************************************************************************************!*\
  !*** ./extensions/widgets/ba-infographic/node_modules/@arcgis/business-analyst-components/dist/stencil-components/dist/esm/interactive-29995522.js ***!
  \*****************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   u: () => (/* binding */ updateHostInteraction)
/* harmony export */ });
/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.
 * v1.0.5
 */
function noopClick() {
  /** noop */
}
/**
 * This helper updates the host element to prevent keyboard interaction on its subtree and sets the appropriate aria attribute for accessibility.
 *
 * This should be used in the `componentDidRender` lifecycle hook.
 *
 * **Notes**
 *
 * this util is not needed for simple components whose root element or elements are an interactive component (custom element or native control). For those cases, set the `disabled` props on the root components instead.
 * technically, users can override `tabindex` and restore keyboard navigation, but this will be considered user error
 *
 * @param component
 * @param hostIsTabbable
 */
function updateHostInteraction(component, hostIsTabbable = false) {
  if (component.disabled) {
    component.el.setAttribute("tabindex", "-1");
    component.el.setAttribute("aria-disabled", "true");
    if (component.el.contains(document.activeElement)) {
      document.activeElement.blur();
    }
    component.el.click = noopClick;
    return;
  }
  component.el.click = HTMLElement.prototype.click;
  if (typeof hostIsTabbable === "function") {
    component.el.setAttribute("tabindex", hostIsTabbable.call(component) ? "0" : "-1");
  }
  else if (hostIsTabbable === true) {
    component.el.setAttribute("tabindex", "0");
  }
  else if (hostIsTabbable === false) {
    component.el.removeAttribute("tabindex");
  }
  else ;
  component.el.removeAttribute("aria-disabled");
}



//# sourceMappingURL=interactive-29995522.js.map

/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2lkZ2V0cy9jaHVua3MvYmEtaW5mb2dyYXBoaWNfbm9kZV9tb2R1bGVzX2FyY2dpc19idXNpbmVzcy1hbmFseXN0LWNvbXBvbmVudHNfZGlzLThhN2EyYS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7QUFBd0M7O0FBRXhDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVDQUF1QyxZQUFZO0FBQ25EO0FBQ0EsU0FBUyxxREFBQyxlQUFlLFVBQVU7QUFDbkM7O0FBRW9EOztBQUVwRDs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FDbEI0SDtBQUN3QjtBQUNyRDtBQUN4QjtBQUNkO0FBQ1M7QUFDUDtBQUNOO0FBQ3BCO0FBQ0w7QUFDSzs7QUFFakMsd0NBQXdDLEdBQUcsVUFBVSxLQUFLLFdBQVcsbUJBQW1CLEdBQUcsVUFBVSxrQ0FBa0MsS0FBSyxVQUFVLGdDQUFnQyxpQkFBaUIsR0FBRyxVQUFVLGlDQUFpQyxLQUFLLFVBQVUsZ0NBQWdDLG9CQUFvQixHQUFHLFVBQVUsaUNBQWlDLEtBQUssVUFBVSw0QkFBNEIsTUFBTSxpRkFBaUYscUVBQXFFLCtGQUErRixpR0FBaUcsK0ZBQStGLGlCQUFpQixVQUFVLHlCQUF5QixtREFBbUQscUJBQXFCLGtCQUFrQiwwQkFBMEIsdUJBQXVCLHdCQUF3QixxQkFBcUIsMkJBQTJCLHdCQUF3Qix3Q0FBd0MsTUFBTSxzQ0FBc0MsTUFBTSxpRUFBaUUsa0NBQWtDLGdCQUFnQixhQUFhLGtCQUFrQixvQkFBb0IsZUFBZSx5QkFBeUIsaUJBQWlCLDJDQUEyQyxNQUFNLGFBQWEsb0JBQW9CLGVBQWUsdUJBQXVCLCtCQUErQiwyQkFBMkIseUdBQXlHLFVBQVUsZUFBZSxjQUFjLGFBQWEsYUFBYSxzQkFBc0IsbUJBQW1CLEtBQUssYUFBYSxtQkFBbUIsdUJBQXVCLHFCQUFxQixzQ0FBc0MsaUJBQWlCLGNBQWMsK0JBQStCLDJDQUEyQywwQkFBMEIsNkZBQTZGLGdCQUFnQixpQ0FBaUMsTUFB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QTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVLG1CQUFtQjtBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLE1BQU07QUFDakIsYUFBYSxNQUFNO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRWlQOztBQUVqUDs7Ozs7Ozs7Ozs7Ozs7QUN2TkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFc0M7O0FBRXRDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZXhiLWNsaWVudC8uL2V4dGVuc2lvbnMvd2lkZ2V0cy9iYS1pbmZvZ3JhcGhpYy9ub2RlX21vZHVsZXMvQGFyY2dpcy9idXNpbmVzcy1hbmFseXN0LWNvbXBvbmVudHMvZGlzdC9zdGVuY2lsLWNvbXBvbmVudHMvZGlzdC9lc20vSGVhZGluZy0wYzI0MzAzYy5qcyIsIndlYnBhY2s6Ly9leGItY2xpZW50Ly4vZXh0ZW5zaW9ucy93aWRnZXRzL2JhLWluZm9ncmFwaGljL25vZGVfbW9kdWxlcy9AYXJjZ2lzL2J1c2luZXNzLWFuYWx5c3QtY29tcG9uZW50cy9kaXN0L3N0ZW5jaWwtY29tcG9uZW50cy9kaXN0L2VzbS9jYWxjaXRlLWRhdGUtcGlja2VyLWRheV8zLmVudHJ5LmpzIiwid2VicGFjazovL2V4Yi1jbGllbnQvLi9leHRlbnNpb25zL3dpZGdldHMvYmEtaW5mb2dyYXBoaWMvbm9kZV9tb2R1bGVzL0BhcmNnaXMvYnVzaW5lc3MtYW5hbHlzdC1jb21wb25lbnRzL2Rpc3Qvc3RlbmNpbC1jb21wb25lbnRzL2Rpc3QvZXNtL2RhdGUtZDdmYmY3ZmQuanMiLCJ3ZWJwYWNrOi8vZXhiLWNsaWVudC8uL2V4dGVuc2lvbnMvd2lkZ2V0cy9iYS1pbmZvZ3JhcGhpYy9ub2RlX21vZHVsZXMvQGFyY2dpcy9idXNpbmVzcy1hbmFseXN0LWNvbXBvbmVudHMvZGlzdC9zdGVuY2lsLWNvbXBvbmVudHMvZGlzdC9lc20vaW50ZXJhY3RpdmUtMjk5OTU1MjIuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaCB9IGZyb20gJy4vaW5kZXgtNGU2NDc0MTEuanMnO1xuXG4vKiFcbiAqIEFsbCBtYXRlcmlhbCBjb3B5cmlnaHQgRVNSSSwgQWxsIFJpZ2h0cyBSZXNlcnZlZCwgdW5sZXNzIG90aGVyd2lzZSBzcGVjaWZpZWQuXG4gKiBTZWUgaHR0cHM6Ly9naXRodWIuY29tL0VzcmkvY2FsY2l0ZS1jb21wb25lbnRzL2Jsb2IvbWFzdGVyL0xJQ0VOU0UubWQgZm9yIGRldGFpbHMuXG4gKiB2MS4wLjVcbiAqL1xuZnVuY3Rpb24gY29uc3RyYWluSGVhZGluZ0xldmVsKGxldmVsKSB7XG4gIHJldHVybiBNYXRoLm1pbihNYXRoLm1heChNYXRoLmNlaWwobGV2ZWwpLCAxKSwgNik7XG59XG5jb25zdCBIZWFkaW5nID0gKHByb3BzLCBjaGlsZHJlbikgPT4ge1xuICBjb25zdCBIZWFkaW5nVGFnID0gcHJvcHMubGV2ZWwgPyBgaCR7cHJvcHMubGV2ZWx9YCA6IFwiZGl2XCI7XG4gIGRlbGV0ZSBwcm9wcy5sZXZlbDtcbiAgcmV0dXJuIGgoSGVhZGluZ1RhZywgeyAuLi5wcm9wcyB9LCBjaGlsZHJlbik7XG59O1xuXG5leHBvcnQgeyBIZWFkaW5nIGFzIEgsIGNvbnN0cmFpbkhlYWRpbmdMZXZlbCBhcyBjIH07XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUhlYWRpbmctMGMyNDMwM2MuanMubWFwIiwiaW1wb3J0IHsgciBhcyByZWdpc3Rlckluc3RhbmNlLCBjIGFzIGNyZWF0ZUV2ZW50LCBoLCBIIGFzIEhvc3QsIGcgYXMgZ2V0RWxlbWVudCwgRiBhcyBGcmFnbWVudCB9IGZyb20gJy4vaW5kZXgtNGU2NDc0MTEuanMnO1xuaW1wb3J0IHsgYiBhcyBkYXRlVG9JU08sIGYgYXMgc2FtZURhdGUsIGUgYXMgZGF0ZUZyb21SYW5nZSwgaSBhcyBpblJhbmdlLCBoIGFzIGdldE9yZGVyLCBuIGFzIG5leHRNb250aCwgcCBhcyBwcmV2TW9udGggfSBmcm9tICcuL2RhdGUtZDdmYmY3ZmQuanMnO1xuaW1wb3J0IHsgYyBhcyBjbG9zZXN0RWxlbWVudENyb3NzU2hhZG93Qm91bmRhcnksIGIgYXMgZ2V0RWxlbWVudERpciB9IGZyb20gJy4vZG9tLWYxZWU0ZDA0LmpzJztcbmltcG9ydCB7IHUgYXMgdXBkYXRlSG9zdEludGVyYWN0aW9uIH0gZnJvbSAnLi9pbnRlcmFjdGl2ZS0yOTk5NTUyMi5qcyc7XG5pbXBvcnQgeyBpIGFzIGlzQWN0aXZhdGlvbktleSB9IGZyb20gJy4va2V5LWI3NTQ5MWM0LmpzJztcbmltcG9ydCB7IG4gYXMgbnVtYmVyU3RyaW5nRm9ybWF0dGVyIH0gZnJvbSAnLi9sb2NhbGUtZjdiMmZiYjAuanMnO1xuaW1wb3J0IHsgQyBhcyBDU1NfVVRJTElUWSB9IGZyb20gJy4vcmVzb3VyY2VzLTQ4NDM2ZWVhLmpzJztcbmltcG9ydCB7IEggYXMgSGVhZGluZyB9IGZyb20gJy4vSGVhZGluZy0wYzI0MzAzYy5qcyc7XG5pbXBvcnQgJy4vaW5kZXguZXNtLTFjNjVkOGM3LmpzJztcbmltcG9ydCAnLi9ndWlkLTg4YTM3MjlmLmpzJztcbmltcG9ydCAnLi9vYnNlcnZlcnMtNTY3NDBlOTkuanMnO1xuXG5jb25zdCBkYXRlUGlja2VyRGF5Q3NzID0gXCJAa2V5ZnJhbWVzIGluezAle29wYWNpdHk6MH0xMDAle29wYWNpdHk6MX19QGtleWZyYW1lcyBpbi1kb3duezAle29wYWNpdHk6MDt0cmFuc2Zvcm06dHJhbnNsYXRlM0QoMCwgLTVweCwgMCl9MTAwJXtvcGFjaXR5OjE7dHJhbnNmb3JtOnRyYW5zbGF0ZTNEKDAsIDAsIDApfX1Aa2V5ZnJhbWVzIGluLXVwezAle29wYWNpdHk6MDt0cmFuc2Zvcm06dHJhbnNsYXRlM0QoMCwgNXB4LCAwKX0xMDAle29wYWNpdHk6MTt0cmFuc2Zvcm06dHJhbnNsYXRlM0QoMCwgMCwgMCl9fUBrZXlmcmFtZXMgaW4tc2NhbGV7MCV7b3BhY2l0eTowO3RyYW5zZm9ybTpzY2FsZTNEKDAuOTUsIDAuOTUsIDEpfTEwMCV7b3BhY2l0eToxO3RyYW5zZm9ybTpzY2FsZTNEKDEsIDEsIDEpfX06cm9vdHstLWNhbGNpdGUtYW5pbWF0aW9uLXRpbWluZzpjYWxjKDE1MG1zICogdmFyKC0tY2FsY2l0ZS1pbnRlcm5hbC1kdXJhdGlvbi1mYWN0b3IpKTstLWNhbGNpdGUtaW50ZXJuYWwtZHVyYXRpb24tZmFjdG9yOnZhcigtLWNhbGNpdGUtZHVyYXRpb24tZmFjdG9yLCAxKTstLWNhbGNpdGUtaW50ZXJuYWwtYW5pbWF0aW9uLXRpbWluZy1mYXN0OmNhbGMoMTAwbXMgKiB2YXIoLS1jYWxjaXRlLWludGVybmFsLWR1cmF0aW9uLWZhY3RvcikpOy0tY2FsY2l0ZS1pbnRlcm5hbC1hbmltYXRpb24tdGltaW5nLW1lZGl1bTpjYWxjKDIwMG1zICogdmFyKC0tY2FsY2l0ZS1pbnRlcm5hbC1kdXJhdGlvbi1mYWN0b3IpKTstLWNhbGNpdGUtaW50ZXJuYWwtYW5pbWF0aW9uLXRpbWluZy1zbG93OmNhbGMoMzAwbXMgKiB2YXIoLS1jYWxjaXRlLWludGVybmFsLWR1cmF0aW9uLWZhY3RvcikpfS5jYWxjaXRlLWFuaW1hdGV7b3BhY2l0eTowO2FuaW1hdGlvbi1maWxsLW1vZGU6Ym90aDthbmltYXRpb24tZHVyYXRpb246dmFyKC0tY2FsY2l0ZS1hbmltYXRpb24tdGltaW5nKX0uY2FsY2l0ZS1hbmltYXRlX19pbnthbmltYXRpb24tbmFtZTppbn0uY2FsY2l0ZS1hbmltYXRlX19pbi1kb3due2FuaW1hdGlvbi1uYW1lOmluLWRvd259LmNhbGNpdGUtYW5pbWF0ZV9faW4tdXB7YW5pbWF0aW9uLW5hbWU6aW4tdXB9LmNhbGNpdGUtYW5pbWF0ZV9faW4tc2NhbGV7YW5pbWF0aW9uLW5hbWU6aW4tc2NhbGV9QG1lZGlhIChwcmVmZXJzLXJlZHVjZWQtbW90aW9uOiByZWR1Y2Upezpyb290ey0tY2FsY2l0ZS1pbnRlcm5hbC1kdXJhdGlvbi1mYWN0b3I6MH19OnJvb3R7LS1jYWxjaXRlLWZsb2F0aW5nLXVpLXRyYW5zaXRpb246dmFyKC0tY2FsY2l0ZS1hbmltYXRpb24tdGltaW5nKTstLWNhbGNpdGUtZmxvYXRpbmctdWktei1pbmRleDo2MDB9Omhvc3QoW2hpZGRlbl0pe2Rpc3BsYXk6bm9uZX06aG9zdChbZGlzYWJsZWRdKXtwb2ludGVyLWV2ZW50czpub25lO2N1cnNvcjpkZWZhdWx0Oy13ZWJraXQtdXNlci1zZWxlY3Q6bm9uZTt1c2VyLXNlbGVjdDpub25lO29wYWNpdHk6dmFyKC0tY2FsY2l0ZS11aS1vcGFjaXR5LWRpc2FibGVkKX06aG9zdHtkaXNwbGF5OmZsZXg7bWluLWlubGluZS1zaXplOjBweDtjdXJzb3I6cG9pbnRlcjtqdXN0aWZ5LWNvbnRlbnQ6Y2VudGVyO2NvbG9yOnZhcigtLWNhbGNpdGUtdWktdGV4dC0zKTtpbmxpbmUtc2l6ZToxNC4yODU3MTQyODU3JX06aG9zdChbZGlzYWJsZWRdKSA6OnNsb3R0ZWQoW2NhbGNpdGUtaHlkcmF0ZWRdW2Rpc2FibGVkXSksOmhvc3QoW2Rpc2FibGVkXSkgW2NhbGNpdGUtaHlkcmF0ZWRdW2Rpc2FibGVkXXtvcGFjaXR5OjF9LmRheS12LXdyYXBwZXJ7ZmxleDoxIDEgYXV0b30uZGF5LXdyYXBwZXJ7ZGlzcGxheTpmbGV4O2ZsZXgtZGlyZWN0aW9uOmNvbHVtbjthbGlnbi1pdGVtczpjZW50ZXJ9LmRheXtkaXNwbGF5OmZsZXg7YWxpZ24taXRlbXM6Y2VudGVyO2p1c3RpZnktY29udGVudDpjZW50ZXI7Ym9yZGVyLXJhZGl1czo5OTk5cHg7Zm9udC1zaXplOnZhcigtLWNhbGNpdGUtZm9udC1zaXplLS0yKTtsaW5lLWhlaWdodDoxcmVtO2xpbmUtaGVpZ2h0OjE7Y29sb3I6dmFyKC0tY2FsY2l0ZS11aS10ZXh0LTMpO29wYWNpdHk6dmFyKC0tY2FsY2l0ZS11aS1vcGFjaXR5LWRpc2FibGVkKTtvdXRsaW5lLWNvbG9yOnRyYW5zcGFyZW50O3RyYW5zaXRpb246YWxsIHZhcigtLWNhbGNpdGUtYW5pbWF0aW9uLXRpbWluZykgZWFzZS1pbi1vdXQgMHMsIG91dGxpbmUgMHMsIG91dGxpbmUtb2Zmc2V0IDBzO2JhY2tncm91bmQ6bm9uZTtib3gtc2hhZG93OjAgMCAwIDJweCB0cmFuc3BhcmVudH0udGV4dHttYXJnaW4tYmxvY2s6MXB4IDBweDttYXJnaW4taW5saW5lLXN0YXJ0OjBweH06aG9zdChbc2NhbGU9c10pIC5kYXktdi13cmFwcGVye3BhZGRpbmctYmxvY2s6MC4xMjVyZW19Omhvc3QoW3NjYWxlPXNdKSAuZGF5LXdyYXBwZXJ7cGFkZGluZzowcHh9Omhvc3QoW3NjYWxlPXNdKSAuZGF5e2Jsb2NrLXNpemU6MjdweDtpbmxpbmUtc2l6ZToyN3B4O2ZvbnQtc2l6ZTp2YXIoLS1jYWxjaXRlLWZvbnQtc2l6ZS0tMil9Omhvc3QoW3NjYWxlPW1dKSAuZGF5LXYtd3JhcHBlcntwYWRkaW5nLWJsb2NrOjAuMjVyZW19Omhvc3QoW3NjYWxlPW1dKSAuZGF5LXdyYXBwZXJ7cGFkZGluZy1pbmxpbmU6MC4yNXJlbX06aG9zdChbc2NhbGU9bV0pIC5kYXl7YmxvY2stc2l6ZTozM3B4O2lubGluZS1zaXplOjMzcHg7Zm9udC1zaXplOnZhcigtLWNhbGNpdGUtZm9udC1zaXplLS0xKX06aG9zdChbc2NhbGU9bF0pIC5kYXktdi13cmFwcGVye3BhZGRpbmctYmxvY2s6MC4yNXJlbX06aG9zdChbc2NhbGU9bF0pIC5kYXktd3JhcHBlcntwYWRkaW5nLWlubGluZTowLjI1cmVtfTpob3N0KFtzY2FsZT1sXSkgLmRheXtibG9jay1zaXplOjQzcHg7aW5saW5lLXNpemU6NDNweDtmb250LXNpemU6dmFyKC0tY2FsY2l0ZS1mb250LXNpemUtMCl9Omhvc3QoW2N1cnJlbnQtbW9udGhdKSAuZGF5e29wYWNpdHk6MX06aG9zdCg6aG92ZXI6bm90KFtkaXNhYmxlZF0pKSAuZGF5LDpob3N0KFthY3RpdmVdOm5vdChbcmFuZ2VdKSkgLmRheXtiYWNrZ3JvdW5kLWNvbG9yOnZhcigtLWNhbGNpdGUtdWktZm9yZWdyb3VuZC0yKTtjb2xvcjp2YXIoLS1jYWxjaXRlLXVpLXRleHQtMSl9Omhvc3QoOmZvY3VzKSw6aG9zdChbYWN0aXZlXSl7b3V0bGluZToycHggc29saWQgdHJhbnNwYXJlbnQ7b3V0bGluZS1vZmZzZXQ6MnB4fTpob3N0KDpmb2N1czpub3QoW2Rpc2FibGVkXSkpIC5kYXl7b3V0bGluZToycHggc29saWQgdmFyKC0tY2FsY2l0ZS11aS1icmFuZCk7b3V0bGluZS1vZmZzZXQ6MnB4O2JveC1zaGFkb3c6MCAwIDAgMnB4IHZhcigtLWNhbGNpdGUtdWktZm9yZWdyb3VuZC0xKX06aG9zdChbc2VsZWN0ZWRdKSAuZGF5e2ZvbnQtd2VpZ2h0OnZhcigtLWNhbGNpdGUtZm9udC13ZWlnaHQtbWVkaXVtKTtiYWNrZ3JvdW5kLWNvbG9yOnZhcigtLWNhbGNpdGUtdWktYnJhbmQpICFpbXBvcnRhbnQ7Y29sb3I6dmFyKC0tY2FsY2l0ZS11aS1mb3JlZ3JvdW5kLTEpICFpbXBvcnRhbnR9Omhvc3QoW3JhbmdlXVtzZWxlY3RlZF0pIC5kYXktd3JhcHBlcntiYWNrZ3JvdW5kLWNvbG9yOnZhcigtLWNhbGNpdGUtdWktZm9yZWdyb3VuZC1jdXJyZW50KX06aG9zdChbc3RhcnQtb2YtcmFuZ2VdKSAuZGF5LXdyYXBwZXJ7Ym9yZGVyLXN0YXJ0LXN0YXJ0LXJhZGl1czo0MCU7Ym9yZGVyLWVuZC1zdGFydC1yYWRpdXM6NDAlfTpob3N0KFtlbmQtb2YtcmFuZ2VdKSAuZGF5LXdyYXBwZXJ7Ym9yZGVyLXN0YXJ0LWVuZC1yYWRpdXM6NDAlO2JvcmRlci1lbmQtZW5kLXJhZGl1czo0MCV9Omhvc3QoW3N0YXJ0LW9mLXJhbmdlXSkgOm5vdCguY2FsY2l0ZS0tcnRsKSAuZGF5LXdyYXBwZXJ7Ym94LXNoYWRvdzppbnNldCA0cHggMCB2YXIoLS1jYWxjaXRlLXVpLWZvcmVncm91bmQtMSl9Omhvc3QoW3N0YXJ0LW9mLXJhbmdlXSkgLmNhbGNpdGUtLXJ0bCAuZGF5LXdyYXBwZXJ7Ym94LXNoYWRvdzppbnNldCAtNHB4IDAgdmFyKC0tY2FsY2l0ZS11aS1mb3JlZ3JvdW5kLTEpfTpob3N0KFtzdGFydC1vZi1yYW5nZV0pIC5kYXl7b3BhY2l0eToxfTpob3N0KFtlbmQtb2YtcmFuZ2VdKSA6bm90KC5jYWxjaXRlLS1ydGwpIC5kYXktd3JhcHBlcntib3gtc2hhZG93Omluc2V0IC00cHggMCB2YXIoLS1jYWxjaXRlLXVpLWZvcmVncm91bmQtMSl9Omhvc3QoW2VuZC1vZi1yYW5nZV0pIC5jYWxjaXRlLS1ydGwgLmRheS13cmFwcGVye2JveC1zaGFkb3c6aW5zZXQgNHB4IDAgdmFyKC0tY2FsY2l0ZS11aS1mb3JlZ3JvdW5kLTEpfTpob3N0KFtlbmQtb2YtcmFuZ2VdKSAuZGF5e29wYWNpdHk6MX06aG9zdChbc3RhcnQtb2YtcmFuZ2VdOm5vdCg6Zm9jdXMpKSA6bm90KC5jYWxjaXRlLS1ydGwpIC5kYXksOmhvc3QoW2VuZC1vZi1yYW5nZV06bm90KDpmb2N1cykpIDpub3QoLmNhbGNpdGUtLXJ0bCkgLmRheXtib3gtc2hhZG93OjAgMCAwIDJweCB2YXIoLS1jYWxjaXRlLXVpLWZvcmVncm91bmQtMSl9Omhvc3QoW3N0YXJ0LW9mLXJhbmdlXTpub3QoOmZvY3VzKSkgLmNhbGNpdGUtLXJ0bCAuZGF5LDpob3N0KFtlbmQtb2YtcmFuZ2VdOm5vdCg6Zm9jdXMpKSAuY2FsY2l0ZS0tcnRsIC5kYXl7Ym94LXNoYWRvdzowIDAgMCAycHggdmFyKC0tY2FsY2l0ZS11aS1mb3JlZ3JvdW5kLTEpfTpob3N0KFtzdGFydC1vZi1yYW5nZV1bc2NhbGU9bF0pIDpub3QoLmNhbGNpdGUtLXJ0bCkgLmRheS13cmFwcGVye2JveC1zaGFkb3c6aW5zZXQgOHB4IDAgdmFyKC0tY2FsY2l0ZS11aS1mb3JlZ3JvdW5kLTEpfTpob3N0KFtzdGFydC1vZi1yYW5nZV1bc2NhbGU9bF0pIC5jYWxjaXRlLS1ydGwgLmRheS13cmFwcGVye2JveC1zaGFkb3c6aW5zZXQgLThweCAwIHZhcigtLWNhbGNpdGUtdWktZm9yZWdyb3VuZC0xKX06aG9zdChbZW5kLW9mLXJhbmdlXVtzY2FsZT1sXSkgOm5vdCguY2FsY2l0ZS0tcnRsKSAuZGF5LXdyYXBwZXJ7Ym94LXNoYWRvdzppbnNldCAtOHB4IDAgdmFyKC0tY2FsY2l0ZS11aS1mb3JlZ3JvdW5kLTEpfTpob3N0KFtlbmQtb2YtcmFuZ2VdW3NjYWxlPWxdKSAuY2FsY2l0ZS0tcnRsIC5kYXktd3JhcHBlcntib3gtc2hhZG93Omluc2V0IDhweCAwIHZhcigtLWNhbGNpdGUtdWktZm9yZWdyb3VuZC0xKX06aG9zdChbaGlnaGxpZ2h0ZWRdKSAuZGF5LXdyYXBwZXJ7YmFja2dyb3VuZC1jb2xvcjp2YXIoLS1jYWxjaXRlLXVpLWZvcmVncm91bmQtY3VycmVudCl9Omhvc3QoW2hpZ2hsaWdodGVkXSkgLmRheS13cmFwcGVyIC5kYXl7Y29sb3I6dmFyKC0tY2FsY2l0ZS11aS10ZXh0LTEpfTpob3N0KFtoaWdobGlnaHRlZF06bm90KFthY3RpdmVdOmZvY3VzKSkgLmRheXtjb2xvcjp2YXIoLS1jYWxjaXRlLXVpLXRleHQtMSl9Omhvc3QoW3JhbmdlLWhvdmVyXTpub3QoW3NlbGVjdGVkXSkpIC5kYXktd3JhcHBlcntiYWNrZ3JvdW5kLWNvbG9yOnZhcigtLWNhbGNpdGUtdWktZm9yZWdyb3VuZC0yKX06aG9zdChbcmFuZ2UtaG92ZXJdOm5vdChbc2VsZWN0ZWRdKSkgLmRheXtib3JkZXItcmFkaXVzOjBweH06aG9zdChbc3RhcnQtb2YtcmFuZ2VdW3JhbmdlLWhvdmVyXSkgOm5vdCguY2FsY2l0ZS0tcnRsKSAuZGF5LXdyYXBwZXJ7YmFja2dyb3VuZC1pbWFnZTpsaW5lYXItZ3JhZGllbnQodG8gbGVmdCwgdmFyKC0tY2FsY2l0ZS11aS1mb3JlZ3JvdW5kLWN1cnJlbnQpLCB2YXIoLS1jYWxjaXRlLXVpLWZvcmVncm91bmQtY3VycmVudCksIHZhcigtLWNhbGNpdGUtdWktZm9yZWdyb3VuZC0yKSwgdmFyKC0tY2FsY2l0ZS11aS1mb3JlZ3JvdW5kLTIpKTtib3JkZXItcmFkaXVzOjBweDstLXR3LXNoYWRvdzowIDAgIzAwMDA7LS10dy1zaGFkb3ctY29sb3JlZDowIDAgIzAwMDA7Ym94LXNoYWRvdzp2YXIoLS10dy1yaW5nLW9mZnNldC1zaGFkb3csIDAgMCAjMDAwMCksIHZhcigtLXR3LXJpbmctc2hhZG93LCAwIDAgIzAwMDApLCB2YXIoLS10dy1zaGFkb3cpfTpob3N0KFtzdGFydC1vZi1yYW5nZV1bcmFuZ2UtaG92ZXJdKSAuY2FsY2l0ZS0tcnRsIC5kYXktd3JhcHBlcntiYWNrZ3JvdW5kLWltYWdlOmxpbmVhci1ncmFkaWVudCh0byByaWdodCwgdmFyKC0tY2FsY2l0ZS11aS1mb3JlZ3JvdW5kLWN1cnJlbnQpLCB2YXIoLS1jYWxjaXRlLXVpLWZvcmVncm91bmQtY3VycmVudCksIHZhcigtLWNhbGNpdGUtdWktZm9yZWdyb3VuZC0yKSwgdmFyKC0tY2FsY2l0ZS11aS1mb3JlZ3JvdW5kLTIpKTtib3JkZXItcmFkaXVzOjBweDstLXR3LXNoYWRvdzowIDAgIzAwMDA7LS10dy1zaGFkb3ctY29sb3JlZDowIDAgIzAwMDA7Ym94LXNoYWRvdzp2YXIoLS10dy1yaW5nLW9mZnNldC1zaGFkb3csIDAgMCAjMDAwMCksIHZhcigtLXR3LXJpbmctc2hhZG93LCAwIDAgIzAwMDApLCB2YXIoLS10dy1zaGFkb3cpfTpob3N0KFtlbmQtb2YtcmFuZ2VdW3JhbmdlLWhvdmVyXSkgOm5vdCguY2FsY2l0ZS0tcnRsKSAuZGF5LXdyYXBwZXJ7YmFja2dyb3VuZC1pbWFnZTpsaW5lYXItZ3JhZGllbnQodG8gcmlnaHQsIHZhcigtLWNhbGNpdGUtdWktZm9yZWdyb3VuZC1jdXJyZW50KSwgdmFyKC0tY2FsY2l0ZS11aS1mb3JlZ3JvdW5kLWN1cnJlbnQpLCB2YXIoLS1jYWxjaXRlLXVpLWZvcmVncm91bmQtMiksIHZhcigtLWNhbGNpdGUtdWktZm9yZWdyb3VuZC0yKSk7Ym9yZGVyLXJhZGl1czowcHg7LS10dy1zaGFkb3c6MCAwICMwMDAwOy0tdHctc2hhZG93LWNvbG9yZWQ6MCAwICMwMDAwO2JveC1zaGFkb3c6dmFyKC0tdHctcmluZy1vZmZzZXQtc2hhZG93LCAwIDAgIzAwMDApLCB2YXIoLS10dy1yaW5nLXNoYWRvdywgMCAwICMwMDAwKSwgdmFyKC0tdHctc2hhZG93KX06aG9zdChbZW5kLW9mLXJhbmdlXVtyYW5nZS1ob3Zlcl0pIC5jYWxjaXRlLS1ydGwgLmRheS13cmFwcGVye2JhY2tncm91bmQtaW1hZ2U6bGluZWFyLWdyYWRpZW50KHRvIGxlZnQsIHZhcigtLWNhbGNpdGUtdWktZm9yZWdyb3VuZC1jdXJyZW50KSwgdmFyKC0tY2FsY2l0ZS11aS1mb3JlZ3JvdW5kLWN1cnJlbnQpLCB2YXIoLS1jYWxjaXRlLXVpLWZvcmVncm91bmQtMiksIHZhcigtLWNhbGNpdGUtdWktZm9yZWdyb3VuZC0yKSk7Ym9yZGVyLXJhZGl1czowcHg7LS10dy1zaGFkb3c6MCAwICMwMDAwOy0tdHctc2hhZG93LWNvbG9yZWQ6MCAwICMwMDAwO2JveC1zaGFkb3c6dmFyKC0tdHctcmluZy1vZmZzZXQtc2hhZG93LCAwIDAgIzAwMDApLCB2YXIoLS10dy1yaW5nLXNoYWRvdywgMCAwICMwMDAwKSwgdmFyKC0tdHctc2hhZG93KX06aG9zdCg6aG92ZXJbZW5kLW9mLXJhbmdlXVtyYW5nZS1ob3Zlcl0pIDpub3QoLmNhbGNpdGUtLXJ0bCkgLmRheS13cmFwcGVyLDpob3N0KDpob3ZlcltzdGFydC1vZi1yYW5nZV1bcmFuZ2UtaG92ZXJdKSAuY2FsY2l0ZS0tcnRsIC5kYXktd3JhcHBlcntiYWNrZ3JvdW5kLWltYWdlOmxpbmVhci1ncmFkaWVudCh0byByaWdodCwgdmFyKC0tY2FsY2l0ZS11aS1mb3JlZ3JvdW5kLWN1cnJlbnQpLCB2YXIoLS1jYWxjaXRlLXVpLWZvcmVncm91bmQtY3VycmVudCksIHZhcigtLWNhbGNpdGUtdWktZm9yZWdyb3VuZC0xKSwgdmFyKC0tY2FsY2l0ZS11aS1mb3JlZ3JvdW5kLTEpKTtib3JkZXItcmFkaXVzOjBweDstLXR3LXNoYWRvdzowIDAgIzAwMDA7LS10dy1zaGFkb3ctY29sb3JlZDowIDAgIzAwMDA7Ym94LXNoYWRvdzp2YXIoLS10dy1yaW5nLW9mZnNldC1zaGFkb3csIDAgMCAjMDAwMCksIHZhcigtLXR3LXJpbmctc2hhZG93LCAwIDAgIzAwMDApLCB2YXIoLS10dy1zaGFkb3cpfTpob3N0KDpob3ZlcltzdGFydC1vZi1yYW5nZV1bcmFuZ2UtaG92ZXJdKSA6bm90KC5jYWxjaXRlLS1ydGwpIC5kYXktd3JhcHBlciw6aG9zdCg6aG92ZXJbZW5kLW9mLXJhbmdlXVtyYW5nZS1ob3Zlcl0pIC5jYWxjaXRlLS1ydGwgLmRheS13cmFwcGVye2JhY2tncm91bmQtaW1hZ2U6bGluZWFyLWdyYWRpZW50KHRvIGxlZnQsIHZhcigtLWNhbGNpdGUtdWktZm9yZWdyb3VuZC1jdXJyZW50KSwgdmFyKC0tY2FsY2l0ZS11aS1mb3JlZ3JvdW5kLWN1cnJlbnQpLCB2YXIoLS1jYWxjaXRlLXVpLWZvcmVncm91bmQtMSksIHZhcigtLWNhbGNpdGUtdWktZm9yZWdyb3VuZC0xKSk7Ym9yZGVyLXJhZGl1czowcHg7LS10dy1zaGFkb3c6MCAwICMwMDAwOy0tdHctc2hhZG93LWNvbG9yZWQ6MCAwICMwMDAwO2JveC1zaGFkb3c6dmFyKC0tdHctcmluZy1vZmZzZXQtc2hhZG93LCAwIDAgIzAwMDApLCB2YXIoLS10dy1yaW5nLXNoYWRvdywgMCAwICMwMDAwKSwgdmFyKC0tdHctc2hhZG93KX06aG9zdCg6aG92ZXJbcmFuZ2UtaG92ZXJdOm5vdChbc2VsZWN0ZWRdKS5mb2N1c2VkLS1zdGFydCkgOm5vdCguY2FsY2l0ZS0tcnRsKSAuZGF5LXdyYXBwZXJ7YmFja2dyb3VuZC1pbWFnZTpsaW5lYXItZ3JhZGllbnQodG8gcmlnaHQsIHZhcigtLWNhbGNpdGUtdWktZm9yZWdyb3VuZC1jdXJyZW50KSwgdmFyKC0tY2FsY2l0ZS11aS1mb3JlZ3JvdW5kLWN1cnJlbnQpLCB2YXIoLS1jYWxjaXRlLXVpLWZvcmVncm91bmQtMiksIHZhcigtLWNhbGNpdGUtdWktZm9yZWdyb3VuZC0yKSl9Omhvc3QoOmhvdmVyW3JhbmdlLWhvdmVyXTpub3QoW3NlbGVjdGVkXSkuZm9jdXNlZC0tc3RhcnQpIC5jYWxjaXRlLS1ydGwgLmRheS13cmFwcGVye2JhY2tncm91bmQtaW1hZ2U6bGluZWFyLWdyYWRpZW50KHRvIHJpZ2h0LCB2YXIoLS1jYWxjaXRlLXVpLWZvcmVncm91bmQtMiksIHZhcigtLWNhbGNpdGUtdWktZm9yZWdyb3VuZC0yKSwgdmFyKC0tY2FsY2l0ZS11aS1mb3JlZ3JvdW5kLWN1cnJlbnQpLCB2YXIoLS1jYWxjaXRlLXVpLWZvcmVncm91bmQtY3VycmVudCkpfTpob3N0KDpob3ZlcltyYW5nZS1ob3Zlcl06bm90KFtzZWxlY3RlZF0pLmZvY3VzZWQtLXN0YXJ0KSAuZGF5e2JvcmRlci1yYWRpdXM6OTk5OXB4O29wYWNpdHk6MTtib3gtc2hhZG93OjAgMCAwIDJweCB2YXIoLS1jYWxjaXRlLXVpLWZvcmVncm91bmQtMSl9Omhvc3QoOmhvdmVyW3JhbmdlLWhvdmVyXTpub3QoW3NlbGVjdGVkXSkuZm9jdXNlZC0tZW5kKSA6bm90KC5jYWxjaXRlLS1ydGwpIC5kYXktd3JhcHBlcntiYWNrZ3JvdW5kLWltYWdlOmxpbmVhci1ncmFkaWVudCh0byByaWdodCwgdmFyKC0tY2FsY2l0ZS11aS1mb3JlZ3JvdW5kLTIpLCB2YXIoLS1jYWxjaXRlLXVpLWZvcmVncm91bmQtMiksIHZhcigtLWNhbGNpdGUtdWktZm9yZWdyb3VuZC1jdXJyZW50KSwgdmFyKC0tY2FsY2l0ZS11aS1mb3JlZ3JvdW5kLWN1cnJlbnQpKX06aG9zdCg6aG92ZXJbcmFuZ2UtaG92ZXJdOm5vdChbc2VsZWN0ZWRdKS5mb2N1c2VkLS1lbmQpIC5jYWxjaXRlLS1ydGwgLmRheS13cmFwcGVye2JhY2tncm91bmQtaW1hZ2U6bGluZWFyLWdyYWRpZW50KHRvIHJpZ2h0LCB2YXIoLS1jYWxjaXRlLXVpLWZvcmVncm91bmQtY3VycmVudCksIHZhcigtLWNhbGNpdGUtdWktZm9yZWdyb3VuZC1jdXJyZW50KSwgdmFyKC0tY2FsY2l0ZS11aS1mb3JlZ3JvdW5kLTIpLCB2YXIoLS1jYWxjaXRlLXVpLWZvcmVncm91bmQtMikpfTpob3N0KDpob3ZlcltyYW5nZS1ob3Zlcl06bm90KFtzZWxlY3RlZF0pLmZvY3VzZWQtLWVuZCkgLmRheXtib3JkZXItcmFkaXVzOjk5OTlweDtvcGFjaXR5OjE7Ym94LXNoYWRvdzowIDAgMCAycHggdmFyKC0tY2FsY2l0ZS11aS1mb3JlZ3JvdW5kLTEpfTpob3N0KDpob3ZlcltyYW5nZS1ob3Zlcl06bm90KFtzZWxlY3RlZF0pLmZvY3VzZWQtLXN0YXJ0LmhvdmVyLS1vdXRzaWRlLXJhbmdlKSA6bm90KC5jYWxjaXRlLS1ydGwpIC5kYXktd3JhcHBlciw6aG9zdCg6aG92ZXJbcmFuZ2UtaG92ZXJdOm5vdChbc2VsZWN0ZWRdKS5mb2N1c2VkLS1lbmQuaG92ZXItLW91dHNpZGUtcmFuZ2UpIC5jYWxjaXRlLS1ydGwgLmRheS13cmFwcGVye2JhY2tncm91bmQtaW1hZ2U6bGluZWFyLWdyYWRpZW50KHRvIHJpZ2h0LCB2YXIoLS1jYWxjaXRlLXVpLWZvcmVncm91bmQtMSksIHZhcigtLWNhbGNpdGUtdWktZm9yZWdyb3VuZC0xKSwgdmFyKC0tY2FsY2l0ZS11aS1mb3JlZ3JvdW5kLTIpLCB2YXIoLS1jYWxjaXRlLXVpLWZvcmVncm91bmQtMikpfTpob3N0KDpob3ZlcltyYW5nZS1ob3Zlcl06bm90KFtzZWxlY3RlZF0pLmZvY3VzZWQtLXN0YXJ0LmhvdmVyLS1vdXRzaWRlLXJhbmdlKSA6bm90KC5jYWxjaXRlLS1ydGwpIC5kYXksOmhvc3QoOmhvdmVyW3JhbmdlLWhvdmVyXTpub3QoW3NlbGVjdGVkXSkuZm9jdXNlZC0tZW5kLmhvdmVyLS1vdXRzaWRlLXJhbmdlKSAuY2FsY2l0ZS0tcnRsIC5kYXl7Ym9yZGVyLXJhZGl1czo5OTk5cHg7b3BhY2l0eToxO2JveC1zaGFkb3c6MCAwIDAgMnB4IHZhcigtLWNhbGNpdGUtdWktZm9yZWdyb3VuZC0xKX06aG9zdCg6aG92ZXJbcmFuZ2UtaG92ZXJdOm5vdChbc2VsZWN0ZWRdKS5mb2N1c2VkLS1lbmQuaG92ZXItLW91dHNpZGUtcmFuZ2UpIDpub3QoLmNhbGNpdGUtLXJ0bCkgLmRheS13cmFwcGVyLDpob3N0KDpob3ZlcltyYW5nZS1ob3Zlcl06bm90KFtzZWxlY3RlZF0pLmZvY3VzZWQtLXN0YXJ0LmhvdmVyLS1vdXRzaWRlLXJhbmdlKSAuY2FsY2l0ZS0tcnRsIC5kYXktd3JhcHBlcntiYWNrZ3JvdW5kLWltYWdlOmxpbmVhci1ncmFkaWVudCh0byByaWdodCwgdmFyKC0tY2FsY2l0ZS11aS1mb3JlZ3JvdW5kLTIpLCB2YXIoLS1jYWxjaXRlLXVpLWZvcmVncm91bmQtMiksIHZhcigtLWNhbGNpdGUtdWktZm9yZWdyb3VuZC0xKSwgdmFyKC0tY2FsY2l0ZS11aS1mb3JlZ3JvdW5kLTEpKX06aG9zdCg6aG92ZXJbcmFuZ2UtaG92ZXJdOm5vdChbc2VsZWN0ZWRdKS5mb2N1c2VkLS1lbmQuaG92ZXItLW91dHNpZGUtcmFuZ2UpIDpub3QoLmNhbGNpdGUtLXJ0bCkgLmRheSw6aG9zdCg6aG92ZXJbcmFuZ2UtaG92ZXJdOm5vdChbc2VsZWN0ZWRdKS5mb2N1c2VkLS1zdGFydC5ob3Zlci0tb3V0c2lkZS1yYW5nZSkgLmNhbGNpdGUtLXJ0bCAuZGF5e2JvcmRlci1yYWRpdXM6OTk5OXB4O29wYWNpdHk6MTtib3gtc2hhZG93OjAgMCAwIDJweCB2YXIoLS1jYWxjaXRlLXVpLWZvcmVncm91bmQtMSl9Omhvc3QoOmhvdmVyW3N0YXJ0LW9mLXJhbmdlXS5ob3Zlci0taW5zaWRlLXJhbmdlLmZvY3VzZWQtLWVuZCkgLmRheS13cmFwcGVyLDpob3N0KDpob3ZlcltlbmQtb2YtcmFuZ2VdLmhvdmVyLS1pbnNpZGUtcmFuZ2UuZm9jdXNlZC0tc3RhcnQpIC5kYXktd3JhcHBlcntiYWNrZ3JvdW5kLWltYWdlOm5vbmV9Omhvc3QoW3N0YXJ0LW9mLXJhbmdlXS5ob3Zlci0taW5zaWRlLXJhbmdlLmZvY3VzZWQtLWVuZCkgLmRheS13cmFwcGVyLDpob3N0KFtlbmQtb2YtcmFuZ2VdLmhvdmVyLS1pbnNpZGUtcmFuZ2UuZm9jdXNlZC0tc3RhcnQpIC5kYXktd3JhcHBlcntiYWNrZ3JvdW5kLWNvbG9yOnZhcigtLWNhbGNpdGUtdWktZm9yZWdyb3VuZC0yKX06aG9zdChbaGlnaGxpZ2h0ZWRdOmxhc3QtY2hpbGQpIDpub3QoLmNhbGNpdGUtLXJ0bCkgLmRheS13cmFwcGVyLDpob3N0KFtyYW5nZS1ob3Zlcl06bGFzdC1jaGlsZCkgOm5vdCguY2FsY2l0ZS0tcnRsKSAuZGF5LXdyYXBwZXIsOmhvc3QoW2hpZ2hsaWdodGVkXTpmaXJzdC1jaGlsZCkgLmNhbGNpdGUtLXJ0bCAuZGF5LXdyYXBwZXIsOmhvc3QoW3JhbmdlLWhvdmVyXTpmaXJzdC1jaGlsZCkgLmNhbGNpdGUtLXJ0bCAuZGF5LXdyYXBwZXJ7Ym94LXNoYWRvdzppbnNldCAtNHB4IDBweCAwcHggMHB4IHZhcigtLWNhbGNpdGUtdWktZm9yZWdyb3VuZC0xKX06aG9zdChbaGlnaGxpZ2h0ZWRdOmZpcnN0LWNoaWxkKSA6bm90KC5jYWxjaXRlLS1ydGwpIC5kYXktd3JhcHBlciw6aG9zdChbcmFuZ2UtaG92ZXJdOmZpcnN0LWNoaWxkKSA6bm90KC5jYWxjaXRlLS1ydGwpIC5kYXktd3JhcHBlciw6aG9zdChbaGlnaGxpZ2h0ZWRdOmxhc3QtY2hpbGQpIC5jYWxjaXRlLS1ydGwgLmRheS13cmFwcGVyLDpob3N0KFtyYW5nZS1ob3Zlcl06bGFzdC1jaGlsZCkgLmNhbGNpdGUtLXJ0bCAuZGF5LXdyYXBwZXJ7Ym94LXNoYWRvdzppbnNldCA0cHggMHB4IDBweCAwcHggdmFyKC0tY2FsY2l0ZS11aS1mb3JlZ3JvdW5kLTEpfTpob3N0KFtzY2FsZT1zXVtoaWdobGlnaHRlZF06bGFzdC1jaGlsZCkgOm5vdCguY2FsY2l0ZS0tcnRsKSAuZGF5LXdyYXBwZXIsOmhvc3QoW3NjYWxlPXNdW3JhbmdlLWhvdmVyXTpsYXN0LWNoaWxkKSA6bm90KC5jYWxjaXRlLS1ydGwpIC5kYXktd3JhcHBlciw6aG9zdChbc2NhbGU9c11baGlnaGxpZ2h0ZWRdOmZpcnN0LWNoaWxkKSAuY2FsY2l0ZS0tcnRsIC5kYXktd3JhcHBlciw6aG9zdChbc2NhbGU9c11bcmFuZ2UtaG92ZXJdOmZpcnN0LWNoaWxkKSAuY2FsY2l0ZS0tcnRsIC5kYXktd3JhcHBlcntib3gtc2hhZG93Omluc2V0IC0xcHggMHB4IDBweCAwcHggdmFyKC0tY2FsY2l0ZS11aS1mb3JlZ3JvdW5kLTEpfTpob3N0KFtzY2FsZT1zXVtoaWdobGlnaHRlZF06Zmlyc3QtY2hpbGQpIDpub3QoLmNhbGNpdGUtLXJ0bCkgLmRheS13cmFwcGVyLDpob3N0KFtzY2FsZT1zXVtyYW5nZS1ob3Zlcl06Zmlyc3QtY2hpbGQpIDpub3QoLmNhbGNpdGUtLXJ0bCkgLmRheS13cmFwcGVyLDpob3N0KFtzY2FsZT1zXVtoaWdobGlnaHRlZF06bGFzdC1jaGlsZCkgLmNhbGNpdGUtLXJ0bCAuZGF5LXdyYXBwZXIsOmhvc3QoW3NjYWxlPXNdW3JhbmdlLWhvdmVyXTpsYXN0LWNoaWxkKSAuY2FsY2l0ZS0tcnRsIC5kYXktd3JhcHBlcntib3gtc2hhZG93Omluc2V0IDFweCAwcHggMHB4IDBweCB2YXIoLS1jYWxjaXRlLXVpLWZvcmVncm91bmQtMSl9Omhvc3QoW3NjYWxlPWxdW2hpZ2hsaWdodGVkXTpmaXJzdC1jaGlsZCkgOm5vdCguY2FsY2l0ZS0tcnRsKSAuZGF5LXdyYXBwZXIsOmhvc3QoW3NjYWxlPWxdW3JhbmdlLWhvdmVyXTpmaXJzdC1jaGlsZCkgOm5vdCguY2FsY2l0ZS0tcnRsKSAuZGF5LXdyYXBwZXIsOmhvc3QoW3NjYWxlPWxdW2hpZ2hsaWdodGVkXTpsYXN0LWNoaWxkKSAuY2FsY2l0ZS0tcnRsIC5kYXktd3JhcHBlciw6aG9zdChbc2NhbGU9bF1bcmFuZ2UtaG92ZXJdOmxhc3QtY2hpbGQpIC5jYWxjaXRlLS1ydGwgLmRheS13cmFwcGVye2JveC1zaGFkb3c6aW5zZXQgNnB4IDBweCAwcHggMHB4IHZhcigtLWNhbGNpdGUtdWktZm9yZWdyb3VuZC0xKX06aG9zdChbaGlnaGxpZ2h0ZWRdOmZpcnN0LWNoaWxkKSAuZGF5LXdyYXBwZXIsOmhvc3QoW3JhbmdlLWhvdmVyXTpmaXJzdC1jaGlsZCkgLmRheS13cmFwcGVye2JvcmRlci1zdGFydC1zdGFydC1yYWRpdXM6NDUlO2JvcmRlci1lbmQtc3RhcnQtcmFkaXVzOjQ1JX06aG9zdChbaGlnaGxpZ2h0ZWRdOmxhc3QtY2hpbGQpIC5kYXktd3JhcHBlciw6aG9zdChbcmFuZ2UtaG92ZXJdOmxhc3QtY2hpbGQpIC5kYXktd3JhcHBlcntib3JkZXItc3RhcnQtZW5kLXJhZGl1czo0NSU7Ym9yZGVyLWVuZC1lbmQtcmFkaXVzOjQ1JX06aG9zdChbc2NhbGU9bF1baGlnaGxpZ2h0ZWRdOmxhc3QtY2hpbGQpIDpub3QoLmNhbGNpdGUtLXJ0bCkgLmRheS13cmFwcGVyLDpob3N0KFtzY2FsZT1sXVtyYW5nZS1ob3Zlcl06bGFzdC1jaGlsZCkgOm5vdCguY2FsY2l0ZS0tcnRsKSAuZGF5LXdyYXBwZXIsOmhvc3QoW3NjYWxlPWxdW2hpZ2hsaWdodGVkXTpmaXJzdC1jaGlsZCkgLmNhbGNpdGUtLXJ0bCAuZGF5LXdyYXBwZXIsOmhvc3QoW3NjYWxlPWxdW3JhbmdlLWhvdmVyXTpmaXJzdC1jaGlsZCkgLmNhbGNpdGUtLXJ0bCAuZGF5LXdyYXBwZXJ7Ym94LXNoYWRvdzppbnNldCAtNnB4IDBweCAwcHggMHB4IHZhcigtLWNhbGNpdGUtdWktZm9yZWdyb3VuZC0xKX1AbWVkaWEgKGZvcmNlZC1jb2xvcnM6IGFjdGl2ZSl7Omhvc3QoOmhvdmVyOm5vdChbZGlzYWJsZWRdKSkgLmRheSw6aG9zdChbYWN0aXZlXTpub3QoW3JhbmdlXSkpIC5kYXl7Ym9yZGVyLXJhZGl1czowcHh9Omhvc3QoW3NlbGVjdGVkXSl7b3V0bGluZToycHggc29saWQgY2FudmFzVGV4dH06aG9zdChbc2VsZWN0ZWRdKSAuZGF5e2JvcmRlci1yYWRpdXM6MHB4O2JhY2tncm91bmQtY29sb3I6aGlnaGxpZ2h0fTpob3N0KFtyYW5nZV1bc2VsZWN0ZWRdKSAuZGF5LXdyYXBwZXIsOmhvc3QoW2hpZ2hsaWdodGVkXSkgLmRheS13cmFwcGVyLDpob3N0KFtyYW5nZS1ob3Zlcl06bm90KFtzZWxlY3RlZF0pKSAuZGF5LXdyYXBwZXJ7YmFja2dyb3VuZC1jb2xvcjpoaWdobGlnaHR9Omhvc3QoW3JhbmdlXVtzZWxlY3RlZF1bc3RhcnQtb2YtcmFuZ2VdKSAuZGF5LXdyYXBwZXIsOmhvc3QoW3JhbmdlXVtzZWxlY3RlZF1bZW5kLW9mLXJhbmdlXSkgLmRheS13cmFwcGVye2JhY2tncm91bmQtY29sb3I6Y2FudmFzfX1cIjtcblxuY29uc3QgRGF0ZVBpY2tlckRheSA9IGNsYXNzIHtcclxuICBjb25zdHJ1Y3Rvcihob3N0UmVmKSB7XHJcbiAgICByZWdpc3Rlckluc3RhbmNlKHRoaXMsIGhvc3RSZWYpO1xyXG4gICAgdGhpcy5jYWxjaXRlRGF5U2VsZWN0ID0gY3JlYXRlRXZlbnQodGhpcywgXCJjYWxjaXRlRGF5U2VsZWN0XCIsIDYpO1xyXG4gICAgdGhpcy5jYWxjaXRlSW50ZXJuYWxEYXlIb3ZlciA9IGNyZWF0ZUV2ZW50KHRoaXMsIFwiY2FsY2l0ZUludGVybmFsRGF5SG92ZXJcIiwgNik7XHJcbiAgICAvLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbiAgICAvL1xyXG4gICAgLy8gIEV2ZW50IExpc3RlbmVyc1xyXG4gICAgLy9cclxuICAgIC8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICAgIHRoaXMub25DbGljayA9ICgpID0+IHtcclxuICAgICAgIXRoaXMuZGlzYWJsZWQgJiYgdGhpcy5jYWxjaXRlRGF5U2VsZWN0LmVtaXQoKTtcclxuICAgIH07XHJcbiAgICB0aGlzLmtleURvd25IYW5kbGVyID0gKGV2ZW50KSA9PiB7XHJcbiAgICAgIGlmIChpc0FjdGl2YXRpb25LZXkoZXZlbnQua2V5KSkge1xyXG4gICAgICAgICF0aGlzLmRpc2FibGVkICYmIHRoaXMuY2FsY2l0ZURheVNlbGVjdC5lbWl0KCk7XHJcbiAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgfVxyXG4gICAgfTtcclxuICAgIHRoaXMuZGF5ID0gdW5kZWZpbmVkO1xyXG4gICAgdGhpcy5kaXNhYmxlZCA9IGZhbHNlO1xyXG4gICAgdGhpcy5jdXJyZW50TW9udGggPSBmYWxzZTtcclxuICAgIHRoaXMuc2VsZWN0ZWQgPSBmYWxzZTtcclxuICAgIHRoaXMuaGlnaGxpZ2h0ZWQgPSBmYWxzZTtcclxuICAgIHRoaXMucmFuZ2UgPSBmYWxzZTtcclxuICAgIHRoaXMuc3RhcnRPZlJhbmdlID0gZmFsc2U7XHJcbiAgICB0aGlzLmVuZE9mUmFuZ2UgPSBmYWxzZTtcclxuICAgIHRoaXMucmFuZ2VIb3ZlciA9IGZhbHNlO1xyXG4gICAgdGhpcy5hY3RpdmUgPSBmYWxzZTtcclxuICAgIHRoaXMuc2NhbGUgPSB1bmRlZmluZWQ7XHJcbiAgICB0aGlzLnZhbHVlID0gdW5kZWZpbmVkO1xyXG4gIH1cclxuICBtb3VzZW92ZXJIYW5kbGVyKCkge1xyXG4gICAgdGhpcy5jYWxjaXRlSW50ZXJuYWxEYXlIb3Zlci5lbWl0KCk7XHJcbiAgfVxyXG4gIC8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICAvL1xyXG4gIC8vICBMaWZlY3ljbGVcclxuICAvL1xyXG4gIC8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICBjb21wb25lbnRXaWxsTG9hZCgpIHtcclxuICAgIHRoaXMucGFyZW50RGF0ZVBpY2tlckVsID0gY2xvc2VzdEVsZW1lbnRDcm9zc1NoYWRvd0JvdW5kYXJ5KHRoaXMuZWwsIFwiY2FsY2l0ZS1kYXRlLXBpY2tlclwiKTtcclxuICB9XHJcbiAgcmVuZGVyKCkge1xyXG4gICAgY29uc3QgZGF5SWQgPSBkYXRlVG9JU08odGhpcy52YWx1ZSkucmVwbGFjZUFsbChcIi1cIiwgXCJcIik7XHJcbiAgICBpZiAodGhpcy5wYXJlbnREYXRlUGlja2VyRWwpIHtcclxuICAgICAgY29uc3QgeyBudW1iZXJpbmdTeXN0ZW0sIGxhbmc6IGxvY2FsZSB9ID0gdGhpcy5wYXJlbnREYXRlUGlja2VyRWw7XHJcbiAgICAgIG51bWJlclN0cmluZ0Zvcm1hdHRlci5udW1iZXJGb3JtYXRPcHRpb25zID0ge1xyXG4gICAgICAgIHVzZUdyb3VwaW5nOiBmYWxzZSxcclxuICAgICAgICAuLi4obnVtYmVyaW5nU3lzdGVtICYmIHsgbnVtYmVyaW5nU3lzdGVtIH0pLFxyXG4gICAgICAgIC4uLihsb2NhbGUgJiYgeyBsb2NhbGUgfSlcclxuICAgICAgfTtcclxuICAgIH1cclxuICAgIGNvbnN0IGZvcm1hdHRlZERheSA9IG51bWJlclN0cmluZ0Zvcm1hdHRlci5sb2NhbGl6ZShTdHJpbmcodGhpcy5kYXkpKTtcclxuICAgIGNvbnN0IGRpciA9IGdldEVsZW1lbnREaXIodGhpcy5lbCk7XHJcbiAgICByZXR1cm4gKGgoSG9zdCwgeyBpZDogZGF5SWQsIG9uQ2xpY2s6IHRoaXMub25DbGljaywgb25LZXlEb3duOiB0aGlzLmtleURvd25IYW5kbGVyLCByb2xlOiBcImdyaWRjZWxsXCIgfSwgaChcImRpdlwiLCB7IGNsYXNzOiB7IFwiZGF5LXYtd3JhcHBlclwiOiB0cnVlLCBbQ1NTX1VUSUxJVFkucnRsXTogZGlyID09PSBcInJ0bFwiIH0gfSwgaChcImRpdlwiLCB7IGNsYXNzOiBcImRheS13cmFwcGVyXCIgfSwgaChcInNwYW5cIiwgeyBjbGFzczogXCJkYXlcIiB9LCBoKFwic3BhblwiLCB7IGNsYXNzOiBcInRleHRcIiB9LCBmb3JtYXR0ZWREYXkpKSkpKSk7XHJcbiAgfVxyXG4gIGNvbXBvbmVudERpZFJlbmRlcigpIHtcclxuICAgIHVwZGF0ZUhvc3RJbnRlcmFjdGlvbih0aGlzLCB0aGlzLmlzVGFiYmFibGUpO1xyXG4gIH1cclxuICBpc1RhYmJhYmxlKCkge1xyXG4gICAgcmV0dXJuIHRoaXMuYWN0aXZlO1xyXG4gIH1cclxuICBnZXQgZWwoKSB7IHJldHVybiBnZXRFbGVtZW50KHRoaXMpOyB9XHJcbn07XHJcbkRhdGVQaWNrZXJEYXkuc3R5bGUgPSBkYXRlUGlja2VyRGF5Q3NzO1xuXG5jb25zdCBkYXRlUGlja2VyTW9udGhDc3MgPSBcIkBrZXlmcmFtZXMgaW57MCV7b3BhY2l0eTowfTEwMCV7b3BhY2l0eToxfX1Aa2V5ZnJhbWVzIGluLWRvd257MCV7b3BhY2l0eTowO3RyYW5zZm9ybTp0cmFuc2xhdGUzRCgwLCAtNXB4LCAwKX0xMDAle29wYWNpdHk6MTt0cmFuc2Zvcm06dHJhbnNsYXRlM0QoMCwgMCwgMCl9fUBrZXlmcmFtZXMgaW4tdXB7MCV7b3BhY2l0eTowO3RyYW5zZm9ybTp0cmFuc2xhdGUzRCgwLCA1cHgsIDApfTEwMCV7b3BhY2l0eToxO3RyYW5zZm9ybTp0cmFuc2xhdGUzRCgwLCAwLCAwKX19QGtleWZyYW1lcyBpbi1zY2FsZXswJXtvcGFjaXR5OjA7dHJhbnNmb3JtOnNjYWxlM0QoMC45NSwgMC45NSwgMSl9MTAwJXtvcGFjaXR5OjE7dHJhbnNmb3JtOnNjYWxlM0QoMSwgMSwgMSl9fTpyb290ey0tY2FsY2l0ZS1hbmltYXRpb24tdGltaW5nOmNhbGMoMTUwbXMgKiB2YXIoLS1jYWxjaXRlLWludGVybmFsLWR1cmF0aW9uLWZhY3RvcikpOy0tY2FsY2l0ZS1pbnRlcm5hbC1kdXJhdGlvbi1mYWN0b3I6dmFyKC0tY2FsY2l0ZS1kdXJhdGlvbi1mYWN0b3IsIDEpOy0tY2FsY2l0ZS1pbnRlcm5hbC1hbmltYXRpb24tdGltaW5nLWZhc3Q6Y2FsYygxMDBtcyAqIHZhcigtLWNhbGNpdGUtaW50ZXJuYWwtZHVyYXRpb24tZmFjdG9yKSk7LS1jYWxjaXRlLWludGVybmFsLWFuaW1hdGlvbi10aW1pbmctbWVkaXVtOmNhbGMoMjAwbXMgKiB2YXIoLS1jYWxjaXRlLWludGVybmFsLWR1cmF0aW9uLWZhY3RvcikpOy0tY2FsY2l0ZS1pbnRlcm5hbC1hbmltYXRpb24tdGltaW5nLXNsb3c6Y2FsYygzMDBtcyAqIHZhcigtLWNhbGNpdGUtaW50ZXJuYWwtZHVyYXRpb24tZmFjdG9yKSl9LmNhbGNpdGUtYW5pbWF0ZXtvcGFjaXR5OjA7YW5pbWF0aW9uLWZpbGwtbW9kZTpib3RoO2FuaW1hdGlvbi1kdXJhdGlvbjp2YXIoLS1jYWxjaXRlLWFuaW1hdGlvbi10aW1pbmcpfS5jYWxjaXRlLWFuaW1hdGVfX2lue2FuaW1hdGlvbi1uYW1lOmlufS5jYWxjaXRlLWFuaW1hdGVfX2luLWRvd257YW5pbWF0aW9uLW5hbWU6aW4tZG93bn0uY2FsY2l0ZS1hbmltYXRlX19pbi11cHthbmltYXRpb24tbmFtZTppbi11cH0uY2FsY2l0ZS1hbmltYXRlX19pbi1zY2FsZXthbmltYXRpb24tbmFtZTppbi1zY2FsZX1AbWVkaWEgKHByZWZlcnMtcmVkdWNlZC1tb3Rpb246IHJlZHVjZSl7OnJvb3R7LS1jYWxjaXRlLWludGVybmFsLWR1cmF0aW9uLWZhY3RvcjowfX06cm9vdHstLWNhbGNpdGUtZmxvYXRpbmctdWktdHJhbnNpdGlvbjp2YXIoLS1jYWxjaXRlLWFuaW1hdGlvbi10aW1pbmcpOy0tY2FsY2l0ZS1mbG9hdGluZy11aS16LWluZGV4OjYwMH06aG9zdChbaGlkZGVuXSl7ZGlzcGxheTpub25lfS5jYWxlbmRlcnttYXJnaW4tYmxvY2stZW5kOjAuMjVyZW19LndlZWstaGVhZGVyc3tkaXNwbGF5OmZsZXg7Ym9yZGVyLXdpZHRoOjBweDtib3JkZXItYmxvY2stc3RhcnQtd2lkdGg6MXB4O2JvcmRlci1zdHlsZTpzb2xpZDtib3JkZXItY29sb3I6dmFyKC0tY2FsY2l0ZS11aS1ib3JkZXItMyk7cGFkZGluZy1ibG9jazowcHg7cGFkZGluZy1pbmxpbmU6MC4yNXJlbX0ud2Vlay1oZWFkZXJ7dGV4dC1hbGlnbjpjZW50ZXI7Zm9udC13ZWlnaHQ6dmFyKC0tY2FsY2l0ZS1mb250LXdlaWdodC1ib2xkKTtjb2xvcjp2YXIoLS1jYWxjaXRlLXVpLXRleHQtMyk7aW5saW5lLXNpemU6MTQuMjg1NzE0Mjg1NyV9Omhvc3QoW3NjYWxlPXNdKSAud2Vlay1oZWFkZXJ7cGFkZGluZy1pbmxpbmU6MHB4O3BhZGRpbmctYmxvY2s6MC41cmVtIDAuNzVyZW07Zm9udC1zaXplOnZhcigtLWNhbGNpdGUtZm9udC1zaXplLS0yKTtsaW5lLWhlaWdodDoxcmVtfTpob3N0KFtzY2FsZT1tXSkgLndlZWstaGVhZGVye3BhZGRpbmctaW5saW5lOjBweDtwYWRkaW5nLWJsb2NrOjAuNzVyZW0gMXJlbTtmb250LXNpemU6dmFyKC0tY2FsY2l0ZS1mb250LXNpemUtLTIpO2xpbmUtaGVpZ2h0OjFyZW19Omhvc3QoW3NjYWxlPWxdKSAud2Vlay1oZWFkZXJ7cGFkZGluZy1pbmxpbmU6MHB4O3BhZGRpbmctYmxvY2s6MXJlbSAxLjI1cmVtO2ZvbnQtc2l6ZTp2YXIoLS1jYWxjaXRlLWZvbnQtc2l6ZS0tMSk7bGluZS1oZWlnaHQ6MXJlbX0ud2Vlay1kYXlze2Rpc3BsYXk6ZmxleDtmbGV4LWRpcmVjdGlvbjpyb3c7cGFkZGluZy1ibG9jazowcHg7cGFkZGluZy1pbmxpbmU6NnB4fS53ZWVrLWRheXM6Zm9jdXN7b3V0bGluZToycHggc29saWQgdHJhbnNwYXJlbnQ7b3V0bGluZS1vZmZzZXQ6MnB4fVwiO1xuXG5jb25zdCBEQVlTX1BFUl9XRUVLID0gNztcclxuY29uc3QgREFZU19NQVhJTVVNX0lOREVYID0gNjtcclxuY29uc3QgRGF0ZVBpY2tlck1vbnRoID0gY2xhc3Mge1xyXG4gIGNvbnN0cnVjdG9yKGhvc3RSZWYpIHtcclxuICAgIHJlZ2lzdGVySW5zdGFuY2UodGhpcywgaG9zdFJlZik7XHJcbiAgICB0aGlzLmNhbGNpdGVJbnRlcm5hbERhdGVQaWNrZXJTZWxlY3QgPSBjcmVhdGVFdmVudCh0aGlzLCBcImNhbGNpdGVJbnRlcm5hbERhdGVQaWNrZXJTZWxlY3RcIiwgNik7XHJcbiAgICB0aGlzLmNhbGNpdGVJbnRlcm5hbERhdGVQaWNrZXJIb3ZlciA9IGNyZWF0ZUV2ZW50KHRoaXMsIFwiY2FsY2l0ZUludGVybmFsRGF0ZVBpY2tlckhvdmVyXCIsIDYpO1xyXG4gICAgdGhpcy5jYWxjaXRlSW50ZXJuYWxEYXRlUGlja2VyQWN0aXZlRGF0ZUNoYW5nZSA9IGNyZWF0ZUV2ZW50KHRoaXMsIFwiY2FsY2l0ZUludGVybmFsRGF0ZVBpY2tlckFjdGl2ZURhdGVDaGFuZ2VcIiwgNik7XHJcbiAgICB0aGlzLmNhbGNpdGVJbnRlcm5hbERhdGVQaWNrZXJNb3VzZU91dCA9IGNyZWF0ZUV2ZW50KHRoaXMsIFwiY2FsY2l0ZUludGVybmFsRGF0ZVBpY2tlck1vdXNlT3V0XCIsIDYpO1xyXG4gICAgLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gICAgLy9cclxuICAgIC8vICBFdmVudCBMaXN0ZW5lcnNcclxuICAgIC8vXHJcbiAgICAvLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbiAgICB0aGlzLmtleURvd25IYW5kbGVyID0gKGV2ZW50KSA9PiB7XHJcbiAgICAgIGlmIChldmVudC5kZWZhdWx0UHJldmVudGVkKSB7XHJcbiAgICAgICAgcmV0dXJuO1xyXG4gICAgICB9XHJcbiAgICAgIGNvbnN0IGlzUlRMID0gdGhpcy5lbC5kaXIgPT09IFwicnRsXCI7XHJcbiAgICAgIHN3aXRjaCAoZXZlbnQua2V5KSB7XHJcbiAgICAgICAgY2FzZSBcIkFycm93VXBcIjpcclxuICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgICAgICB0aGlzLmFkZERheXMoLTcpO1xyXG4gICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgY2FzZSBcIkFycm93UmlnaHRcIjpcclxuICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgICAgICB0aGlzLmFkZERheXMoaXNSVEwgPyAtMSA6IDEpO1xyXG4gICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgY2FzZSBcIkFycm93RG93blwiOlxyXG4gICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgICAgIHRoaXMuYWRkRGF5cyg3KTtcclxuICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgIGNhc2UgXCJBcnJvd0xlZnRcIjpcclxuICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgICAgICB0aGlzLmFkZERheXMoaXNSVEwgPyAxIDogLTEpO1xyXG4gICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgY2FzZSBcIlBhZ2VVcFwiOlxyXG4gICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgICAgIHRoaXMuYWRkTW9udGhzKC0xKTtcclxuICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgIGNhc2UgXCJQYWdlRG93blwiOlxyXG4gICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgICAgIHRoaXMuYWRkTW9udGhzKDEpO1xyXG4gICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgY2FzZSBcIkhvbWVcIjpcclxuICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgICAgICB0aGlzLmFjdGl2ZURhdGUuc2V0RGF0ZSgxKTtcclxuICAgICAgICAgIHRoaXMuYWRkRGF5cygpO1xyXG4gICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgY2FzZSBcIkVuZFwiOlxyXG4gICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgICAgIHRoaXMuYWN0aXZlRGF0ZS5zZXREYXRlKG5ldyBEYXRlKHRoaXMuYWN0aXZlRGF0ZS5nZXRGdWxsWWVhcigpLCB0aGlzLmFjdGl2ZURhdGUuZ2V0TW9udGgoKSArIDEsIDApLmdldERhdGUoKSk7XHJcbiAgICAgICAgICB0aGlzLmFkZERheXMoKTtcclxuICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgIGNhc2UgXCJFbnRlclwiOlxyXG4gICAgICAgIGNhc2UgXCIgXCI6XHJcbiAgICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgY2FzZSBcIlRhYlwiOlxyXG4gICAgICAgICAgdGhpcy5hY3RpdmVGb2N1cyA9IGZhbHNlO1xyXG4gICAgICB9XHJcbiAgICB9O1xyXG4gICAgLyoqXHJcbiAgICAgKiBPbmNlIHVzZXIgaXMgbm90IGludGVyYWN0aW5nIHZpYSBrZXlib2FyZCxcclxuICAgICAqIGRpc2FibGUgYXV0byBmb2N1c2luZyBvZiBhY3RpdmUgZGF0ZVxyXG4gICAgICovXHJcbiAgICB0aGlzLmRpc2FibGVBY3RpdmVGb2N1cyA9ICgpID0+IHtcclxuICAgICAgdGhpcy5hY3RpdmVGb2N1cyA9IGZhbHNlO1xyXG4gICAgfTtcclxuICAgIHRoaXMuZGF5SG92ZXIgPSAoZXZlbnQpID0+IHtcclxuICAgICAgY29uc3QgdGFyZ2V0ID0gZXZlbnQudGFyZ2V0O1xyXG4gICAgICBpZiAodGFyZ2V0LmRpc2FibGVkKSB7XHJcbiAgICAgICAgdGhpcy5jYWxjaXRlSW50ZXJuYWxEYXRlUGlja2VyTW91c2VPdXQuZW1pdCgpO1xyXG4gICAgICB9XHJcbiAgICAgIGVsc2Uge1xyXG4gICAgICAgIHRoaXMuY2FsY2l0ZUludGVybmFsRGF0ZVBpY2tlckhvdmVyLmVtaXQodGFyZ2V0LnZhbHVlKTtcclxuICAgICAgfVxyXG4gICAgICBldmVudC5zdG9wUHJvcGFnYXRpb24oKTtcclxuICAgIH07XHJcbiAgICB0aGlzLmRheVNlbGVjdCA9IChldmVudCkgPT4ge1xyXG4gICAgICBjb25zdCB0YXJnZXQgPSBldmVudC50YXJnZXQ7XHJcbiAgICAgIHRoaXMuY2FsY2l0ZUludGVybmFsRGF0ZVBpY2tlclNlbGVjdC5lbWl0KHRhcmdldC52YWx1ZSk7XHJcbiAgICB9O1xyXG4gICAgdGhpcy5zZWxlY3RlZERhdGUgPSB1bmRlZmluZWQ7XHJcbiAgICB0aGlzLmFjdGl2ZURhdGUgPSBuZXcgRGF0ZSgpO1xyXG4gICAgdGhpcy5zdGFydERhdGUgPSB1bmRlZmluZWQ7XHJcbiAgICB0aGlzLmVuZERhdGUgPSB1bmRlZmluZWQ7XHJcbiAgICB0aGlzLm1pbiA9IHVuZGVmaW5lZDtcclxuICAgIHRoaXMubWF4ID0gdW5kZWZpbmVkO1xyXG4gICAgdGhpcy5zY2FsZSA9IHVuZGVmaW5lZDtcclxuICAgIHRoaXMubG9jYWxlRGF0YSA9IHVuZGVmaW5lZDtcclxuICAgIHRoaXMuaG92ZXJSYW5nZSA9IHVuZGVmaW5lZDtcclxuICB9XHJcbiAgbW91c2VvdXRIYW5kbGVyKCkge1xyXG4gICAgdGhpcy5jYWxjaXRlSW50ZXJuYWxEYXRlUGlja2VyTW91c2VPdXQuZW1pdCgpO1xyXG4gIH1cclxuICAvLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbiAgLy9cclxuICAvLyAgTGlmZWN5Y2xlXHJcbiAgLy9cclxuICAvLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbiAgcmVuZGVyKCkge1xyXG4gICAgY29uc3QgbW9udGggPSB0aGlzLmFjdGl2ZURhdGUuZ2V0TW9udGgoKTtcclxuICAgIGNvbnN0IHllYXIgPSB0aGlzLmFjdGl2ZURhdGUuZ2V0RnVsbFllYXIoKTtcclxuICAgIGNvbnN0IHN0YXJ0T2ZXZWVrID0gdGhpcy5sb2NhbGVEYXRhLndlZWtTdGFydCAlIDc7XHJcbiAgICBjb25zdCB7IGFiYnJldmlhdGVkLCBzaG9ydCwgbmFycm93IH0gPSB0aGlzLmxvY2FsZURhdGEuZGF5cztcclxuICAgIGNvbnN0IHdlZWtEYXlzID0gdGhpcy5zY2FsZSA9PT0gXCJzXCIgPyBuYXJyb3cgfHwgc2hvcnQgfHwgYWJicmV2aWF0ZWQgOiBzaG9ydCB8fCBhYmJyZXZpYXRlZCB8fCBuYXJyb3c7XHJcbiAgICBjb25zdCBhZGp1c3RlZFdlZWtEYXlzID0gWy4uLndlZWtEYXlzLnNsaWNlKHN0YXJ0T2ZXZWVrLCA3KSwgLi4ud2Vla0RheXMuc2xpY2UoMCwgc3RhcnRPZldlZWspXTtcclxuICAgIGNvbnN0IGN1ck1vbkRheXMgPSB0aGlzLmdldEN1cnJlbnRNb250aERheXMobW9udGgsIHllYXIpO1xyXG4gICAgY29uc3QgcHJldk1vbkRheXMgPSB0aGlzLmdldFByZXZpb3VzTW9udGhEYXlzKG1vbnRoLCB5ZWFyLCBzdGFydE9mV2Vlayk7XHJcbiAgICBjb25zdCBuZXh0TW9uRGF5cyA9IHRoaXMuZ2V0TmV4dE1vbnRoRGF5cyhtb250aCwgeWVhciwgc3RhcnRPZldlZWspO1xyXG4gICAgY29uc3QgZGF5cyA9IFtcclxuICAgICAgLi4ucHJldk1vbkRheXMubWFwKChkYXkpID0+IHtcclxuICAgICAgICBjb25zdCBkYXRlID0gbmV3IERhdGUoeWVhciwgbW9udGggLSAxLCBkYXkpO1xyXG4gICAgICAgIHJldHVybiB0aGlzLnJlbmRlckRhdGVEYXkoZmFsc2UsIGRheSwgZGF0ZSk7XHJcbiAgICAgIH0pLFxyXG4gICAgICAuLi5jdXJNb25EYXlzLm1hcCgoZGF5KSA9PiB7XHJcbiAgICAgICAgY29uc3QgZGF0ZSA9IG5ldyBEYXRlKHllYXIsIG1vbnRoLCBkYXkpO1xyXG4gICAgICAgIGNvbnN0IGFjdGl2ZSA9IHNhbWVEYXRlKGRhdGUsIHRoaXMuYWN0aXZlRGF0ZSk7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMucmVuZGVyRGF0ZURheShhY3RpdmUsIGRheSwgZGF0ZSwgdHJ1ZSwgdHJ1ZSk7XHJcbiAgICAgIH0pLFxyXG4gICAgICAuLi5uZXh0TW9uRGF5cy5tYXAoKGRheSkgPT4ge1xyXG4gICAgICAgIGNvbnN0IGRhdGUgPSBuZXcgRGF0ZSh5ZWFyLCBtb250aCArIDEsIGRheSk7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMucmVuZGVyRGF0ZURheShmYWxzZSwgZGF5LCBkYXRlKTtcclxuICAgICAgfSlcclxuICAgIF07XHJcbiAgICBjb25zdCB3ZWVrcyA9IFtdO1xyXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBkYXlzLmxlbmd0aDsgaSArPSA3KSB7XHJcbiAgICAgIHdlZWtzLnB1c2goZGF5cy5zbGljZShpLCBpICsgNykpO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIChoKEhvc3QsIHsgb25Gb2N1c091dDogdGhpcy5kaXNhYmxlQWN0aXZlRm9jdXMsIG9uS2V5RG93bjogdGhpcy5rZXlEb3duSGFuZGxlciB9LCBoKFwiZGl2XCIsIHsgY2xhc3M6IFwiY2FsZW5kZXJcIiwgcm9sZTogXCJncmlkXCIgfSwgaChcImRpdlwiLCB7IGNsYXNzOiBcIndlZWstaGVhZGVyc1wiLCByb2xlOiBcInJvd1wiIH0sIGFkanVzdGVkV2Vla0RheXMubWFwKCh3ZWVrZGF5KSA9PiAoaChcInNwYW5cIiwgeyBjbGFzczogXCJ3ZWVrLWhlYWRlclwiLCByb2xlOiBcImNvbHVtbmhlYWRlclwiIH0sIHdlZWtkYXkpKSkpLCB3ZWVrcy5tYXAoKGRheXMpID0+IChoKFwiZGl2XCIsIHsgY2xhc3M6IFwid2Vlay1kYXlzXCIsIHJvbGU6IFwicm93XCIgfSwgZGF5cykpKSkpKTtcclxuICB9XHJcbiAgLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gIC8vXHJcbiAgLy8gIFByaXZhdGUgTWV0aG9kc1xyXG4gIC8vXHJcbiAgLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gIC8qKlxyXG4gICAqIEFkZCBuIG1vbnRocyB0byB0aGUgY3VycmVudCBtb250aFxyXG4gICAqXHJcbiAgICogQHBhcmFtIHN0ZXBcclxuICAgKi9cclxuICBhZGRNb250aHMoc3RlcCkge1xyXG4gICAgY29uc3QgbmV4dERhdGUgPSBuZXcgRGF0ZSh0aGlzLmFjdGl2ZURhdGUpO1xyXG4gICAgbmV4dERhdGUuc2V0TW9udGgodGhpcy5hY3RpdmVEYXRlLmdldE1vbnRoKCkgKyBzdGVwKTtcclxuICAgIHRoaXMuY2FsY2l0ZUludGVybmFsRGF0ZVBpY2tlckFjdGl2ZURhdGVDaGFuZ2UuZW1pdChkYXRlRnJvbVJhbmdlKG5leHREYXRlLCB0aGlzLm1pbiwgdGhpcy5tYXgpKTtcclxuICAgIHRoaXMuYWN0aXZlRm9jdXMgPSB0cnVlO1xyXG4gIH1cclxuICAvKipcclxuICAgKiBBZGQgbiBkYXlzIHRvIHRoZSBjdXJyZW50IGRhdGVcclxuICAgKlxyXG4gICAqIEBwYXJhbSBzdGVwXHJcbiAgICovXHJcbiAgYWRkRGF5cyhzdGVwID0gMCkge1xyXG4gICAgY29uc3QgbmV4dERhdGUgPSBuZXcgRGF0ZSh0aGlzLmFjdGl2ZURhdGUpO1xyXG4gICAgbmV4dERhdGUuc2V0RGF0ZSh0aGlzLmFjdGl2ZURhdGUuZ2V0RGF0ZSgpICsgc3RlcCk7XHJcbiAgICB0aGlzLmNhbGNpdGVJbnRlcm5hbERhdGVQaWNrZXJBY3RpdmVEYXRlQ2hhbmdlLmVtaXQoZGF0ZUZyb21SYW5nZShuZXh0RGF0ZSwgdGhpcy5taW4sIHRoaXMubWF4KSk7XHJcbiAgICB0aGlzLmFjdGl2ZUZvY3VzID0gdHJ1ZTtcclxuICB9XHJcbiAgLyoqXHJcbiAgICogR2V0IGRhdGVzIGZvciBsYXN0IGRheXMgb2YgdGhlIHByZXZpb3VzIG1vbnRoXHJcbiAgICpcclxuICAgKiBAcGFyYW0gbW9udGhcclxuICAgKiBAcGFyYW0geWVhclxyXG4gICAqIEBwYXJhbSBzdGFydE9mV2Vla1xyXG4gICAqL1xyXG4gIGdldFByZXZpb3VzTW9udGhEYXlzKG1vbnRoLCB5ZWFyLCBzdGFydE9mV2Vlaykge1xyXG4gICAgY29uc3QgbGFzdERhdGUgPSBuZXcgRGF0ZSh5ZWFyLCBtb250aCwgMCk7XHJcbiAgICBjb25zdCBkYXRlID0gbGFzdERhdGUuZ2V0RGF0ZSgpO1xyXG4gICAgY29uc3Qgc3RhcnREYXkgPSBsYXN0RGF0ZS5nZXREYXkoKTtcclxuICAgIGNvbnN0IGRheXMgPSBbXTtcclxuICAgIGlmIChzdGFydERheSA9PT0gKHN0YXJ0T2ZXZWVrICsgREFZU19NQVhJTVVNX0lOREVYKSAlIERBWVNfUEVSX1dFRUspIHtcclxuICAgICAgcmV0dXJuIGRheXM7XHJcbiAgICB9XHJcbiAgICBpZiAoc3RhcnREYXkgPT09IHN0YXJ0T2ZXZWVrKSB7XHJcbiAgICAgIHJldHVybiBbZGF0ZV07XHJcbiAgICB9XHJcbiAgICBmb3IgKGxldCBpID0gKERBWVNfUEVSX1dFRUsgKyBzdGFydERheSAtIHN0YXJ0T2ZXZWVrKSAlIERBWVNfUEVSX1dFRUs7IGkgPj0gMDsgaS0tKSB7XHJcbiAgICAgIGRheXMucHVzaChkYXRlIC0gaSk7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gZGF5cztcclxuICB9XHJcbiAgLyoqXHJcbiAgICogR2V0IGRhdGVzIGZvciB0aGUgY3VycmVudCBtb250aFxyXG4gICAqXHJcbiAgICogQHBhcmFtIG1vbnRoXHJcbiAgICogQHBhcmFtIHllYXJcclxuICAgKi9cclxuICBnZXRDdXJyZW50TW9udGhEYXlzKG1vbnRoLCB5ZWFyKSB7XHJcbiAgICBjb25zdCBudW0gPSBuZXcgRGF0ZSh5ZWFyLCBtb250aCArIDEsIDApLmdldERhdGUoKTtcclxuICAgIGNvbnN0IGRheXMgPSBbXTtcclxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgbnVtOyBpKyspIHtcclxuICAgICAgZGF5cy5wdXNoKGkgKyAxKTtcclxuICAgIH1cclxuICAgIHJldHVybiBkYXlzO1xyXG4gIH1cclxuICAvKipcclxuICAgKiBHZXQgZGF0ZXMgZm9yIGZpcnN0IGRheXMgb2YgdGhlIG5leHQgbW9udGhcclxuICAgKlxyXG4gICAqIEBwYXJhbSBtb250aFxyXG4gICAqIEBwYXJhbSB5ZWFyXHJcbiAgICogQHBhcmFtIHN0YXJ0T2ZXZWVrXHJcbiAgICovXHJcbiAgZ2V0TmV4dE1vbnRoRGF5cyhtb250aCwgeWVhciwgc3RhcnRPZldlZWspIHtcclxuICAgIGNvbnN0IGVuZERheSA9IG5ldyBEYXRlKHllYXIsIG1vbnRoICsgMSwgMCkuZ2V0RGF5KCk7XHJcbiAgICBjb25zdCBkYXlzID0gW107XHJcbiAgICBpZiAoZW5kRGF5ID09PSAoc3RhcnRPZldlZWsgKyBEQVlTX01BWElNVU1fSU5ERVgpICUgREFZU19QRVJfV0VFSykge1xyXG4gICAgICByZXR1cm4gZGF5cztcclxuICAgIH1cclxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgKERBWVNfTUFYSU1VTV9JTkRFWCAtIChlbmREYXkgLSBzdGFydE9mV2VlaykpICUgREFZU19QRVJfV0VFSzsgaSsrKSB7XHJcbiAgICAgIGRheXMucHVzaChpICsgMSk7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gZGF5cztcclxuICB9XHJcbiAgLyoqXHJcbiAgICogRGV0ZXJtaW5lIGlmIHRoZSBkYXRlIGlzIGluIGJldHdlZW4gdGhlIHN0YXJ0IGFuZCBlbmQgZGF0ZXNcclxuICAgKlxyXG4gICAqIEBwYXJhbSBkYXRlXHJcbiAgICovXHJcbiAgYmV0d2VlblNlbGVjdGVkUmFuZ2UoZGF0ZSkge1xyXG4gICAgcmV0dXJuICEhKHRoaXMuc3RhcnREYXRlICYmXHJcbiAgICAgIHRoaXMuZW5kRGF0ZSAmJlxyXG4gICAgICBkYXRlID4gdGhpcy5zdGFydERhdGUgJiZcclxuICAgICAgZGF0ZSA8IHRoaXMuZW5kRGF0ZSAmJlxyXG4gICAgICAhdGhpcy5pc1JhbmdlSG92ZXIoZGF0ZSkpO1xyXG4gIH1cclxuICAvKipcclxuICAgKiBEZXRlcm1pbmUgaWYgdGhlIGRhdGUgc2hvdWxkIGJlIGluIHNlbGVjdGVkIHN0YXRlXHJcbiAgICpcclxuICAgKiBAcGFyYW0gZGF0ZVxyXG4gICAqL1xyXG4gIGlzU2VsZWN0ZWQoZGF0ZSkge1xyXG4gICAgcmV0dXJuICEhKHNhbWVEYXRlKGRhdGUsIHRoaXMuc2VsZWN0ZWREYXRlKSB8fFxyXG4gICAgICAodGhpcy5zdGFydERhdGUgJiYgc2FtZURhdGUoZGF0ZSwgdGhpcy5zdGFydERhdGUpKSB8fFxyXG4gICAgICAodGhpcy5lbmREYXRlICYmIHNhbWVEYXRlKGRhdGUsIHRoaXMuZW5kRGF0ZSkpKTtcclxuICB9XHJcbiAgLyoqXHJcbiAgICogRGV0ZXJtaW5lIGlmIHRoZSBkYXRlIGlzIHRoZSBzdGFydCBvZiB0aGUgZGF0ZSByYW5nZVxyXG4gICAqXHJcbiAgICogQHBhcmFtIGRhdGVcclxuICAgKi9cclxuICBpc1N0YXJ0T2ZSYW5nZShkYXRlKSB7XHJcbiAgICByZXR1cm4gISEodGhpcy5zdGFydERhdGUgJiZcclxuICAgICAgIXNhbWVEYXRlKHRoaXMuc3RhcnREYXRlLCB0aGlzLmVuZERhdGUpICYmXHJcbiAgICAgIHNhbWVEYXRlKHRoaXMuc3RhcnREYXRlLCBkYXRlKSAmJlxyXG4gICAgICAhdGhpcy5pc0VuZE9mUmFuZ2UoZGF0ZSkpO1xyXG4gIH1cclxuICBpc0VuZE9mUmFuZ2UoZGF0ZSkge1xyXG4gICAgcmV0dXJuICEhKCh0aGlzLmVuZERhdGUgJiYgIXNhbWVEYXRlKHRoaXMuc3RhcnREYXRlLCB0aGlzLmVuZERhdGUpICYmIHNhbWVEYXRlKHRoaXMuZW5kRGF0ZSwgZGF0ZSkpIHx8XHJcbiAgICAgICghdGhpcy5lbmREYXRlICYmXHJcbiAgICAgICAgdGhpcy5ob3ZlclJhbmdlICYmXHJcbiAgICAgICAgc2FtZURhdGUodGhpcy5zdGFydERhdGUsIHRoaXMuaG92ZXJSYW5nZS5lbmQpICYmXHJcbiAgICAgICAgc2FtZURhdGUoZGF0ZSwgdGhpcy5ob3ZlclJhbmdlLmVuZCkpKTtcclxuICB9XHJcbiAgLyoqXHJcbiAgICogUmVuZGVyIGNhbGNpdGUtZGF0ZS1waWNrZXItZGF5XHJcbiAgICpcclxuICAgKiBAcGFyYW0gYWN0aXZlXHJcbiAgICogQHBhcmFtIGRheVxyXG4gICAqIEBwYXJhbSBkYXRlXHJcbiAgICogQHBhcmFtIGN1cnJlbnRNb250aFxyXG4gICAqIEBwYXJhbSByZWZcclxuICAgKi9cclxuICByZW5kZXJEYXRlRGF5KGFjdGl2ZSwgZGF5LCBkYXRlLCBjdXJyZW50TW9udGgsIHJlZikge1xyXG4gICAgY29uc3QgaXNGb2N1c2VkT25TdGFydCA9IHRoaXMuaXNGb2N1c2VkT25TdGFydCgpO1xyXG4gICAgY29uc3QgaXNIb3ZlckluUmFuZ2UgPSB0aGlzLmlzSG92ZXJJblJhbmdlKCkgfHxcclxuICAgICAgKCF0aGlzLmVuZERhdGUgJiYgdGhpcy5ob3ZlclJhbmdlICYmIHNhbWVEYXRlKHRoaXMuaG92ZXJSYW5nZT8uZW5kLCB0aGlzLnN0YXJ0RGF0ZSkpO1xyXG4gICAgcmV0dXJuIChoKFwiY2FsY2l0ZS1kYXRlLXBpY2tlci1kYXlcIiwgeyBhY3RpdmU6IGFjdGl2ZSwgY2xhc3M6IHtcclxuICAgICAgICBcImhvdmVyLS1pbnNpZGUtcmFuZ2VcIjogdGhpcy5zdGFydERhdGUgJiYgaXNIb3ZlckluUmFuZ2UsXHJcbiAgICAgICAgXCJob3Zlci0tb3V0c2lkZS1yYW5nZVwiOiB0aGlzLnN0YXJ0RGF0ZSAmJiAhaXNIb3ZlckluUmFuZ2UsXHJcbiAgICAgICAgXCJmb2N1c2VkLS1zdGFydFwiOiBpc0ZvY3VzZWRPblN0YXJ0LFxyXG4gICAgICAgIFwiZm9jdXNlZC0tZW5kXCI6ICFpc0ZvY3VzZWRPblN0YXJ0XHJcbiAgICAgIH0sIGN1cnJlbnRNb250aDogY3VycmVudE1vbnRoLCBkYXk6IGRheSwgZGlzYWJsZWQ6ICFpblJhbmdlKGRhdGUsIHRoaXMubWluLCB0aGlzLm1heCksIGVuZE9mUmFuZ2U6IHRoaXMuaXNFbmRPZlJhbmdlKGRhdGUpLCBoaWdobGlnaHRlZDogdGhpcy5iZXR3ZWVuU2VsZWN0ZWRSYW5nZShkYXRlKSwga2V5OiBkYXRlLnRvRGF0ZVN0cmluZygpLCBvbkNhbGNpdGVEYXlTZWxlY3Q6IHRoaXMuZGF5U2VsZWN0LCBvbkNhbGNpdGVJbnRlcm5hbERheUhvdmVyOiB0aGlzLmRheUhvdmVyLCByYW5nZTogISF0aGlzLnN0YXJ0RGF0ZSAmJiAhIXRoaXMuZW5kRGF0ZSAmJiAhc2FtZURhdGUodGhpcy5zdGFydERhdGUsIHRoaXMuZW5kRGF0ZSksIHJhbmdlSG92ZXI6IHRoaXMuaXNSYW5nZUhvdmVyKGRhdGUpLCByZWY6IChlbCkgPT4ge1xyXG4gICAgICAgIC8vIHdoZW4gbW92aW5nIHZpYSBrZXlib2FyZCwgZm9jdXMgbXVzdCBiZSB1cGRhdGVkIG9uIGFjdGl2ZSBkYXRlXHJcbiAgICAgICAgaWYgKHJlZiAmJiBhY3RpdmUgJiYgdGhpcy5hY3RpdmVGb2N1cykge1xyXG4gICAgICAgICAgZWw/LmZvY3VzKCk7XHJcbiAgICAgICAgfVxyXG4gICAgICB9LCBzY2FsZTogdGhpcy5zY2FsZSwgc2VsZWN0ZWQ6IHRoaXMuaXNTZWxlY3RlZChkYXRlKSwgc3RhcnRPZlJhbmdlOiB0aGlzLmlzU3RhcnRPZlJhbmdlKGRhdGUpLCB2YWx1ZTogZGF0ZSB9KSk7XHJcbiAgfVxyXG4gIGlzRm9jdXNlZE9uU3RhcnQoKSB7XHJcbiAgICByZXR1cm4gdGhpcy5ob3ZlclJhbmdlPy5mb2N1c2VkID09PSBcInN0YXJ0XCI7XHJcbiAgfVxyXG4gIGlzSG92ZXJJblJhbmdlKCkge1xyXG4gICAgaWYgKCF0aGlzLmhvdmVyUmFuZ2UpIHtcclxuICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgfVxyXG4gICAgY29uc3QgeyBzdGFydCwgZW5kIH0gPSB0aGlzLmhvdmVyUmFuZ2U7XHJcbiAgICByZXR1cm4gISEoKCF0aGlzLmlzRm9jdXNlZE9uU3RhcnQoKSAmJiB0aGlzLnN0YXJ0RGF0ZSAmJiAoIXRoaXMuZW5kRGF0ZSB8fCBlbmQgPCB0aGlzLmVuZERhdGUpKSB8fFxyXG4gICAgICAodGhpcy5pc0ZvY3VzZWRPblN0YXJ0KCkgJiYgdGhpcy5zdGFydERhdGUgJiYgc3RhcnQgPiB0aGlzLnN0YXJ0RGF0ZSkpO1xyXG4gIH1cclxuICBpc1JhbmdlSG92ZXIoZGF0ZSkge1xyXG4gICAgaWYgKCF0aGlzLmhvdmVyUmFuZ2UpIHtcclxuICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgfVxyXG4gICAgY29uc3QgeyBzdGFydCwgZW5kIH0gPSB0aGlzLmhvdmVyUmFuZ2U7XHJcbiAgICBjb25zdCBpc1N0YXJ0ID0gdGhpcy5pc0ZvY3VzZWRPblN0YXJ0KCk7XHJcbiAgICBjb25zdCBpbnNpZGVSYW5nZSA9IHRoaXMuaXNIb3ZlckluUmFuZ2UoKTtcclxuICAgIGNvbnN0IGNvbmQxID0gaW5zaWRlUmFuZ2UgJiZcclxuICAgICAgKCghaXNTdGFydCAmJiBkYXRlID4gdGhpcy5zdGFydERhdGUgJiYgKGRhdGUgPCBlbmQgfHwgc2FtZURhdGUoZGF0ZSwgZW5kKSkpIHx8XHJcbiAgICAgICAgKGlzU3RhcnQgJiYgZGF0ZSA8IHRoaXMuZW5kRGF0ZSAmJiAoZGF0ZSA+IHN0YXJ0IHx8IHNhbWVEYXRlKGRhdGUsIHN0YXJ0KSkpKTtcclxuICAgIGNvbnN0IGNvbmQyID0gIWluc2lkZVJhbmdlICYmXHJcbiAgICAgICgoIWlzU3RhcnQgJiYgZGF0ZSA+PSB0aGlzLmVuZERhdGUgJiYgKGRhdGUgPCBlbmQgfHwgc2FtZURhdGUoZGF0ZSwgZW5kKSkpIHx8XHJcbiAgICAgICAgKGlzU3RhcnQgJiZcclxuICAgICAgICAgICgodGhpcy5zdGFydERhdGUgJiYgZGF0ZSA8IHRoaXMuc3RhcnREYXRlKSB8fFxyXG4gICAgICAgICAgICAodGhpcy5lbmREYXRlICYmIHNhbWVEYXRlKGRhdGUsIHRoaXMuc3RhcnREYXRlKSkpICYmXHJcbiAgICAgICAgICAoKHN0YXJ0ICYmIGRhdGUgPiBzdGFydCkgfHwgc2FtZURhdGUoZGF0ZSwgc3RhcnQpKSkpO1xyXG4gICAgcmV0dXJuIGNvbmQxIHx8IGNvbmQyO1xyXG4gIH1cclxuICBnZXQgZWwoKSB7IHJldHVybiBnZXRFbGVtZW50KHRoaXMpOyB9XHJcbn07XHJcbkRhdGVQaWNrZXJNb250aC5zdHlsZSA9IGRhdGVQaWNrZXJNb250aENzcztcblxuLyohXG4gKiBBbGwgbWF0ZXJpYWwgY29weXJpZ2h0IEVTUkksIEFsbCBSaWdodHMgUmVzZXJ2ZWQsIHVubGVzcyBvdGhlcndpc2Ugc3BlY2lmaWVkLlxuICogU2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9Fc3JpL2NhbGNpdGUtY29tcG9uZW50cy9ibG9iL21hc3Rlci9MSUNFTlNFLm1kIGZvciBkZXRhaWxzLlxuICogdjEuMC41XG4gKi9cbmNvbnN0IEJVRERISVNUX0NBTEVOREFSX1lFQVJfT0ZGU0VUID0gNTQzO1xuY29uc3QgQ1NTID0ge1xuICBoZWFkZXI6IFwiaGVhZGVyXCIsXG4gIG1vbnRoOiBcIm1vbnRoXCIsXG4gIGNoZXZyb246IFwiY2hldnJvblwiLFxuICBzdWZmaXg6IFwic3VmZml4XCIsXG4gIHllYXJTdWZmaXg6IFwieWVhci0tc3VmZml4XCIsXG4gIHllYXJXcmFwOiBcInllYXItd3JhcFwiLFxuICB0ZXh0UmV2ZXJzZTogXCJ0ZXh0LS1yZXZlcnNlXCJcbn07XG5jb25zdCBJQ09OID0ge1xuICBjaGV2cm9uTGVmdDogXCJjaGV2cm9uLWxlZnRcIixcbiAgY2hldnJvblJpZ2h0OiBcImNoZXZyb24tcmlnaHRcIlxufTtcblxuY29uc3QgZGF0ZVBpY2tlck1vbnRoSGVhZGVyQ3NzID0gXCJAa2V5ZnJhbWVzIGluezAle29wYWNpdHk6MH0xMDAle29wYWNpdHk6MX19QGtleWZyYW1lcyBpbi1kb3duezAle29wYWNpdHk6MDt0cmFuc2Zvcm06dHJhbnNsYXRlM0QoMCwgLTVweCwgMCl9MTAwJXtvcGFjaXR5OjE7dHJhbnNmb3JtOnRyYW5zbGF0ZTNEKDAsIDAsIDApfX1Aa2V5ZnJhbWVzIGluLXVwezAle29wYWNpdHk6MDt0cmFuc2Zvcm06dHJhbnNsYXRlM0QoMCwgNXB4LCAwKX0xMDAle29wYWNpdHk6MTt0cmFuc2Zvcm06dHJhbnNsYXRlM0QoMCwgMCwgMCl9fUBrZXlmcmFtZXMgaW4tc2NhbGV7MCV7b3BhY2l0eTowO3RyYW5zZm9ybTpzY2FsZTNEKDAuOTUsIDAuOTUsIDEpfTEwMCV7b3BhY2l0eToxO3RyYW5zZm9ybTpzY2FsZTNEKDEsIDEsIDEpfX06cm9vdHstLWNhbGNpdGUtYW5pbWF0aW9uLXRpbWluZzpjYWxjKDE1MG1zICogdmFyKC0tY2FsY2l0ZS1pbnRlcm5hbC1kdXJhdGlvbi1mYWN0b3IpKTstLWNhbGNpdGUtaW50ZXJuYWwtZHVyYXRpb24tZmFjdG9yOnZhcigtLWNhbGNpdGUtZHVyYXRpb24tZmFjdG9yLCAxKTstLWNhbGNpdGUtaW50ZXJuYWwtYW5pbWF0aW9uLXRpbWluZy1mYXN0OmNhbGMoMTAwbXMgKiB2YXIoLS1jYWxjaXRlLWludGVybmFsLWR1cmF0aW9uLWZhY3RvcikpOy0tY2FsY2l0ZS1pbnRlcm5hbC1hbmltYXRpb24tdGltaW5nLW1lZGl1bTpjYWxjKDIwMG1zICogdmFyKC0tY2FsY2l0ZS1pbnRlcm5hbC1kdXJhdGlvbi1mYWN0b3IpKTstLWNhbGNpdGUtaW50ZXJuYWwtYW5pbWF0aW9uLXRpbWluZy1zbG93OmNhbGMoMzAwbXMgKiB2YXIoLS1jYWxjaXRlLWludGVybmFsLWR1cmF0aW9uLWZhY3RvcikpfS5jYWxjaXRlLWFuaW1hdGV7b3BhY2l0eTowO2FuaW1hdGlvbi1maWxsLW1vZGU6Ym90aDthbmltYXRpb24tZHVyYXRpb246dmFyKC0tY2FsY2l0ZS1hbmltYXRpb24tdGltaW5nKX0uY2FsY2l0ZS1hbmltYXRlX19pbnthbmltYXRpb24tbmFtZTppbn0uY2FsY2l0ZS1hbmltYXRlX19pbi1kb3due2FuaW1hdGlvbi1uYW1lOmluLWRvd259LmNhbGNpdGUtYW5pbWF0ZV9faW4tdXB7YW5pbWF0aW9uLW5hbWU6aW4tdXB9LmNhbGNpdGUtYW5pbWF0ZV9faW4tc2NhbGV7YW5pbWF0aW9uLW5hbWU6aW4tc2NhbGV9QG1lZGlhIChwcmVmZXJzLXJlZHVjZWQtbW90aW9uOiByZWR1Y2Upezpyb290ey0tY2FsY2l0ZS1pbnRlcm5hbC1kdXJhdGlvbi1mYWN0b3I6MH19OnJvb3R7LS1jYWxjaXRlLWZsb2F0aW5nLXVpLXRyYW5zaXRpb246dmFyKC0tY2FsY2l0ZS1hbmltYXRpb24tdGltaW5nKTstLWNhbGNpdGUtZmxvYXRpbmctdWktei1pbmRleDo2MDB9Omhvc3QoW2hpZGRlbl0pe2Rpc3BsYXk6bm9uZX06aG9zdHtkaXNwbGF5OmJsb2NrfS5oZWFkZXJ7ZGlzcGxheTpmbGV4O2p1c3RpZnktY29udGVudDpzcGFjZS1iZXR3ZWVuO3BhZGRpbmctYmxvY2s6MHB4O3BhZGRpbmctaW5saW5lOjAuMjVyZW19Omhvc3QoW3NjYWxlPXNdKSAudGV4dHttYXJnaW4tYmxvY2s6MC41cmVtO2ZvbnQtc2l6ZTp2YXIoLS1jYWxjaXRlLWZvbnQtc2l6ZS0tMSk7bGluZS1oZWlnaHQ6MXJlbX06aG9zdChbc2NhbGU9c10pIC5jaGV2cm9ue2Jsb2NrLXNpemU6Mi4yNXJlbX06aG9zdChbc2NhbGU9bV0pIC50ZXh0e21hcmdpbi1ibG9jazowLjc1cmVtO2ZvbnQtc2l6ZTp2YXIoLS1jYWxjaXRlLWZvbnQtc2l6ZS0wKTtsaW5lLWhlaWdodDoxLjI1cmVtfTpob3N0KFtzY2FsZT1tXSkgLmNoZXZyb257YmxvY2stc2l6ZTozcmVtfTpob3N0KFtzY2FsZT1sXSkgLnRleHR7bWFyZ2luLWJsb2NrOjFyZW07Zm9udC1zaXplOnZhcigtLWNhbGNpdGUtZm9udC1zaXplLTEpO2xpbmUtaGVpZ2h0OjEuNXJlbX06aG9zdChbc2NhbGU9bF0pIC5jaGV2cm9ue2Jsb2NrLXNpemU6My41cmVtfS5jaGV2cm9ue21hcmdpbi1pbmxpbmU6LTAuMjVyZW07Ym94LXNpemluZzpjb250ZW50LWJveDtkaXNwbGF5OmZsZXg7ZmxleC1ncm93OjA7Y3Vyc29yOnBvaW50ZXI7YWxpZ24taXRlbXM6Y2VudGVyO2p1c3RpZnktY29udGVudDpjZW50ZXI7Ym9yZGVyLXN0eWxlOm5vbmU7YmFja2dyb3VuZC1jb2xvcjp2YXIoLS1jYWxjaXRlLXVpLWZvcmVncm91bmQtMSk7cGFkZGluZy1pbmxpbmU6MC4yNXJlbTtjb2xvcjp2YXIoLS1jYWxjaXRlLXVpLXRleHQtMyk7b3V0bGluZToycHggc29saWQgdHJhbnNwYXJlbnQ7b3V0bGluZS1vZmZzZXQ6MnB4O291dGxpbmUtY29sb3I6dHJhbnNwYXJlbnQ7dHJhbnNpdGlvbjphbGwgdmFyKC0tY2FsY2l0ZS1hbmltYXRpb24tdGltaW5nKSBlYXNlLWluLW91dCAwcywgb3V0bGluZSAwcywgb3V0bGluZS1vZmZzZXQgMHM7aW5saW5lLXNpemU6MTQuMjg1NzE0Mjg1NyV9LmNoZXZyb246Zm9jdXN7b3V0bGluZToycHggc29saWQgdmFyKC0tY2FsY2l0ZS11aS1icmFuZCk7b3V0bGluZS1vZmZzZXQ6LTJweH0uY2hldnJvbjpob3ZlciwuY2hldnJvbjpmb2N1c3tiYWNrZ3JvdW5kLWNvbG9yOnZhcigtLWNhbGNpdGUtdWktZm9yZWdyb3VuZC0yKTtmaWxsOnZhcigtLWNhbGNpdGUtdWktdGV4dC0xKTtjb2xvcjp2YXIoLS1jYWxjaXRlLXVpLXRleHQtMSl9LmNoZXZyb246YWN0aXZle2JhY2tncm91bmQtY29sb3I6dmFyKC0tY2FsY2l0ZS11aS1mb3JlZ3JvdW5kLTMpfS5jaGV2cm9uW2FyaWEtZGlzYWJsZWQ9dHJ1ZV17cG9pbnRlci1ldmVudHM6bm9uZTtvcGFjaXR5OjB9LnRleHR7bWFyZ2luLWJsb2NrOmF1dG87ZGlzcGxheTpmbGV4O2lubGluZS1zaXplOjEwMCU7ZmxleDoxIDEgYXV0bzthbGlnbi1pdGVtczpjZW50ZXI7anVzdGlmeS1jb250ZW50OmNlbnRlcjt0ZXh0LWFsaWduOmNlbnRlcjtsaW5lLWhlaWdodDoxfS50ZXh0LS1yZXZlcnNle2ZsZXgtZGlyZWN0aW9uOnJvdy1yZXZlcnNlfS5tb250aCwueWVhciwuc3VmZml4e21hcmdpbi1pbmxpbmU6MC4yNXJlbTttYXJnaW4tYmxvY2s6YXV0bztkaXNwbGF5OmlubGluZS1ibG9jaztiYWNrZ3JvdW5kLWNvbG9yOnZhcigtLWNhbGNpdGUtdWktZm9yZWdyb3VuZC0xKTtmb250LXdlaWdodDp2YXIoLS1jYWxjaXRlLWZvbnQtd2VpZ2h0LW1lZGl1bSk7bGluZS1oZWlnaHQ6MS4yNTtjb2xvcjp2YXIoLS1jYWxjaXRlLXVpLXRleHQtMSk7Zm9udC1zaXplOmluaGVyaXR9LnllYXJ7cG9zaXRpb246cmVsYXRpdmU7aW5saW5lLXNpemU6Mi41cmVtO2JvcmRlci1zdHlsZTpub25lO2JhY2tncm91bmQtY29sb3I6dHJhbnNwYXJlbnQ7dGV4dC1hbGlnbjpjZW50ZXI7Zm9udC1mYW1pbHk6aW5oZXJpdDtvdXRsaW5lLWNvbG9yOnRyYW5zcGFyZW50fS55ZWFyOmhvdmVye3RyYW5zaXRpb24tZHVyYXRpb246MTAwbXM7dHJhbnNpdGlvbi10aW1pbmctZnVuY3Rpb246Y3ViaWMtYmV6aWVyKDAuNCwgMCwgMC4yLCAxKTt0cmFuc2l0aW9uLXByb3BlcnR5Om91dGxpbmUtY29sb3I7b3V0bGluZToycHggc29saWQgdmFyKC0tY2FsY2l0ZS11aS1ib3JkZXItMik7b3V0bGluZS1vZmZzZXQ6MnB4fS55ZWFyOmZvY3Vze291dGxpbmU6MnB4IHNvbGlkIHZhcigtLWNhbGNpdGUtdWktYnJhbmQpO291dGxpbmUtb2Zmc2V0OjJweH0ueWVhci0tc3VmZml4e3RleHQtYWxpZ246c3RhcnR9LnllYXItd3JhcHtwb3NpdGlvbjpyZWxhdGl2ZX0uc3VmZml4e2luc2V0LWJsb2NrLXN0YXJ0OjBweDt3aGl0ZS1zcGFjZTpub3dyYXA7dGV4dC1hbGlnbjpzdGFydDtpbnNldC1pbmxpbmUtc3RhcnQ6MH1cIjtcblxuY29uc3QgRGF0ZVBpY2tlck1vbnRoSGVhZGVyID0gY2xhc3Mge1xyXG4gIGNvbnN0cnVjdG9yKGhvc3RSZWYpIHtcclxuICAgIHJlZ2lzdGVySW5zdGFuY2UodGhpcywgaG9zdFJlZik7XHJcbiAgICB0aGlzLmNhbGNpdGVJbnRlcm5hbERhdGVQaWNrZXJTZWxlY3QgPSBjcmVhdGVFdmVudCh0aGlzLCBcImNhbGNpdGVJbnRlcm5hbERhdGVQaWNrZXJTZWxlY3RcIiwgNik7XHJcbiAgICAvLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbiAgICAvL1xyXG4gICAgLy8gIFByaXZhdGUgTWV0aG9kc1xyXG4gICAgLy9cclxuICAgIC8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICAgIC8qKlxyXG4gICAgICogSW5jcmVtZW50IHllYXIgb24gVVAvRE9XTiBrZXlzXHJcbiAgICAgKlxyXG4gICAgICogQHBhcmFtIGV2ZW50XHJcbiAgICAgKi9cclxuICAgIHRoaXMub25ZZWFyS2V5ID0gKGV2ZW50KSA9PiB7XHJcbiAgICAgIGNvbnN0IGxvY2FsaXplZFllYXIgPSB0aGlzLnBhcnNlQ2FsZW5kYXJZZWFyKGV2ZW50LnRhcmdldC52YWx1ZSk7XHJcbiAgICAgIHN3aXRjaCAoZXZlbnQua2V5KSB7XHJcbiAgICAgICAgY2FzZSBcIkFycm93RG93blwiOlxyXG4gICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgICAgIHRoaXMuc2V0WWVhcih7IGxvY2FsaXplZFllYXIsIG9mZnNldDogLTEgfSk7XHJcbiAgICAgICAgICBicmVhaztcclxuICAgICAgICBjYXNlIFwiQXJyb3dVcFwiOlxyXG4gICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgICAgIHRoaXMuc2V0WWVhcih7IGxvY2FsaXplZFllYXIsIG9mZnNldDogMSB9KTtcclxuICAgICAgICAgIGJyZWFrO1xyXG4gICAgICB9XHJcbiAgICB9O1xyXG4gICAgdGhpcy5vblllYXJDaGFuZ2UgPSAoZXZlbnQpID0+IHtcclxuICAgICAgdGhpcy5zZXRZZWFyKHtcclxuICAgICAgICBsb2NhbGl6ZWRZZWFyOiB0aGlzLnBhcnNlQ2FsZW5kYXJZZWFyKGV2ZW50LnRhcmdldC52YWx1ZSlcclxuICAgICAgfSk7XHJcbiAgICB9O1xyXG4gICAgdGhpcy5vblllYXJJbnB1dCA9IChldmVudCkgPT4ge1xyXG4gICAgICB0aGlzLnNldFllYXIoe1xyXG4gICAgICAgIGxvY2FsaXplZFllYXI6IHRoaXMucGFyc2VDYWxlbmRhclllYXIoZXZlbnQudGFyZ2V0LnZhbHVlKSxcclxuICAgICAgICBjb21taXQ6IGZhbHNlXHJcbiAgICAgIH0pO1xyXG4gICAgfTtcclxuICAgIHRoaXMucHJldk1vbnRoQ2xpY2sgPSAoZXZlbnQpID0+IHtcclxuICAgICAgdGhpcy5oYW5kbGVBcnJvd0NsaWNrKGV2ZW50LCB0aGlzLnByZXZNb250aERhdGUpO1xyXG4gICAgfTtcclxuICAgIHRoaXMucHJldk1vbnRoS2V5ZG93biA9IChldmVudCkgPT4ge1xyXG4gICAgICBpZiAoaXNBY3RpdmF0aW9uS2V5KGV2ZW50LmtleSkpIHtcclxuICAgICAgICB0aGlzLnByZXZNb250aENsaWNrKGV2ZW50KTtcclxuICAgICAgfVxyXG4gICAgfTtcclxuICAgIHRoaXMubmV4dE1vbnRoQ2xpY2sgPSAoZXZlbnQpID0+IHtcclxuICAgICAgdGhpcy5oYW5kbGVBcnJvd0NsaWNrKGV2ZW50LCB0aGlzLm5leHRNb250aERhdGUpO1xyXG4gICAgfTtcclxuICAgIHRoaXMubmV4dE1vbnRoS2V5ZG93biA9IChldmVudCkgPT4ge1xyXG4gICAgICBpZiAoaXNBY3RpdmF0aW9uS2V5KGV2ZW50LmtleSkpIHtcclxuICAgICAgICB0aGlzLm5leHRNb250aENsaWNrKGV2ZW50KTtcclxuICAgICAgfVxyXG4gICAgfTtcclxuICAgIC8qXHJcbiAgICAgKiBVcGRhdGUgYWN0aXZlIG1vbnRoIG9uIGNsaWNrcyBvZiBsZWZ0L3JpZ2h0IGFycm93c1xyXG4gICAgICovXHJcbiAgICB0aGlzLmhhbmRsZUFycm93Q2xpY2sgPSAoZXZlbnQsIGRhdGUpID0+IHtcclxuICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgdGhpcy5jYWxjaXRlSW50ZXJuYWxEYXRlUGlja2VyU2VsZWN0LmVtaXQoZGF0ZSk7XHJcbiAgICB9O1xyXG4gICAgdGhpcy5zZWxlY3RlZERhdGUgPSB1bmRlZmluZWQ7XHJcbiAgICB0aGlzLmFjdGl2ZURhdGUgPSB1bmRlZmluZWQ7XHJcbiAgICB0aGlzLmhlYWRpbmdMZXZlbCA9IHVuZGVmaW5lZDtcclxuICAgIHRoaXMubWluID0gdW5kZWZpbmVkO1xyXG4gICAgdGhpcy5tYXggPSB1bmRlZmluZWQ7XHJcbiAgICB0aGlzLnNjYWxlID0gdW5kZWZpbmVkO1xyXG4gICAgdGhpcy5sb2NhbGVEYXRhID0gdW5kZWZpbmVkO1xyXG4gICAgdGhpcy5tZXNzYWdlcyA9IHVuZGVmaW5lZDtcclxuICAgIHRoaXMuZ2xvYmFsQXR0cmlidXRlcyA9IHt9O1xyXG4gICAgdGhpcy5uZXh0TW9udGhEYXRlID0gdW5kZWZpbmVkO1xyXG4gICAgdGhpcy5wcmV2TW9udGhEYXRlID0gdW5kZWZpbmVkO1xyXG4gIH1cclxuICAvLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbiAgLy9cclxuICAvLyAgTGlmZWN5Y2xlXHJcbiAgLy9cclxuICAvLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbiAgY29tcG9uZW50V2lsbExvYWQoKSB7XHJcbiAgICB0aGlzLnBhcmVudERhdGVQaWNrZXJFbCA9IGNsb3Nlc3RFbGVtZW50Q3Jvc3NTaGFkb3dCb3VuZGFyeSh0aGlzLmVsLCBcImNhbGNpdGUtZGF0ZS1waWNrZXJcIik7XHJcbiAgfVxyXG4gIGNvbm5lY3RlZENhbGxiYWNrKCkge1xyXG4gICAgdGhpcy5zZXROZXh0UHJldk1vbnRoRGF0ZXMoKTtcclxuICB9XHJcbiAgcmVuZGVyKCkge1xyXG4gICAgcmV0dXJuIGgoXCJkaXZcIiwgeyBjbGFzczogQ1NTLmhlYWRlciB9LCB0aGlzLnJlbmRlckNvbnRlbnQoKSk7XHJcbiAgfVxyXG4gIHJlbmRlckNvbnRlbnQoKSB7XHJcbiAgICBjb25zdCB7IG1lc3NhZ2VzLCBsb2NhbGVEYXRhLCBhY3RpdmVEYXRlIH0gPSB0aGlzO1xyXG4gICAgaWYgKCFhY3RpdmVEYXRlIHx8ICFsb2NhbGVEYXRhKSB7XHJcbiAgICAgIHJldHVybiBudWxsO1xyXG4gICAgfVxyXG4gICAgaWYgKHRoaXMucGFyZW50RGF0ZVBpY2tlckVsKSB7XHJcbiAgICAgIGNvbnN0IHsgbnVtYmVyaW5nU3lzdGVtLCBsYW5nOiBsb2NhbGUgfSA9IHRoaXMucGFyZW50RGF0ZVBpY2tlckVsO1xyXG4gICAgICBudW1iZXJTdHJpbmdGb3JtYXR0ZXIubnVtYmVyRm9ybWF0T3B0aW9ucyA9IHtcclxuICAgICAgICB1c2VHcm91cGluZzogZmFsc2UsXHJcbiAgICAgICAgLi4uKG51bWJlcmluZ1N5c3RlbSAmJiB7IG51bWJlcmluZ1N5c3RlbSB9KSxcclxuICAgICAgICAuLi4obG9jYWxlICYmIHsgbG9jYWxlIH0pXHJcbiAgICAgIH07XHJcbiAgICB9XHJcbiAgICBjb25zdCBhY3RpdmVNb250aCA9IGFjdGl2ZURhdGUuZ2V0TW9udGgoKTtcclxuICAgIGNvbnN0IHsgbW9udGhzLCB1bml0T3JkZXIgfSA9IGxvY2FsZURhdGE7XHJcbiAgICBjb25zdCBsb2NhbGl6ZWRNb250aCA9IChtb250aHMud2lkZSB8fCBtb250aHMubmFycm93IHx8IG1vbnRocy5hYmJyZXZpYXRlZClbYWN0aXZlTW9udGhdO1xyXG4gICAgY29uc3QgbG9jYWxpemVkWWVhciA9IHRoaXMuZm9ybWF0Q2FsZW5kYXJZZWFyKGFjdGl2ZURhdGUuZ2V0RnVsbFllYXIoKSk7XHJcbiAgICBjb25zdCBpY29uU2NhbGUgPSB0aGlzLnNjYWxlID09PSBcImxcIiA/IFwibVwiIDogXCJzXCI7XHJcbiAgICBjb25zdCBvcmRlciA9IGdldE9yZGVyKHVuaXRPcmRlcik7XHJcbiAgICBjb25zdCByZXZlcnNlID0gb3JkZXIuaW5kZXhPZihcInlcIikgPCBvcmRlci5pbmRleE9mKFwibVwiKTtcclxuICAgIGNvbnN0IHN1ZmZpeCA9IGxvY2FsZURhdGEueWVhcj8uc3VmZml4O1xyXG4gICAgcmV0dXJuIChoKEZyYWdtZW50LCBudWxsLCBoKFwiYVwiLCB7IFwiYXJpYS1kaXNhYmxlZFwiOiBgJHt0aGlzLnByZXZNb250aERhdGUuZ2V0TW9udGgoKSA9PT0gYWN0aXZlTW9udGh9YCwgXCJhcmlhLWxhYmVsXCI6IG1lc3NhZ2VzLnByZXZNb250aCwgY2xhc3M6IENTUy5jaGV2cm9uLCBocmVmOiBcIiNcIiwgb25DbGljazogdGhpcy5wcmV2TW9udGhDbGljaywgb25LZXlEb3duOiB0aGlzLnByZXZNb250aEtleWRvd24sIHJvbGU6IFwiYnV0dG9uXCIsIHRhYmluZGV4OiB0aGlzLnByZXZNb250aERhdGUuZ2V0TW9udGgoKSA9PT0gYWN0aXZlTW9udGggPyAtMSA6IDAgfSwgaChcImNhbGNpdGUtaWNvblwiLCB7IFwiZmxpcC1ydGxcIjogdHJ1ZSwgaWNvbjogSUNPTi5jaGV2cm9uTGVmdCwgc2NhbGU6IGljb25TY2FsZSB9KSksIGgoXCJkaXZcIiwgeyBjbGFzczogeyB0ZXh0OiB0cnVlLCBbQ1NTLnRleHRSZXZlcnNlXTogcmV2ZXJzZSB9IH0sIGgoSGVhZGluZywgeyBjbGFzczogQ1NTLm1vbnRoLCBsZXZlbDogdGhpcy5oZWFkaW5nTGV2ZWwgfSwgbG9jYWxpemVkTW9udGgpLCBoKFwic3BhblwiLCB7IGNsYXNzOiBDU1MueWVhcldyYXAgfSwgaChcImlucHV0XCIsIHsgXCJhcmlhLWxhYmVsXCI6IG1lc3NhZ2VzLnllYXIsIGNsYXNzOiB7XHJcbiAgICAgICAgeWVhcjogdHJ1ZSxcclxuICAgICAgICBbQ1NTLnllYXJTdWZmaXhdOiAhIXN1ZmZpeFxyXG4gICAgICB9LCBpbnB1dG1vZGU6IFwibnVtZXJpY1wiLCBtYXhsZW5ndGg6IFwiNFwiLCBtaW5sZW5ndGg6IFwiMVwiLCBvbkNoYW5nZTogdGhpcy5vblllYXJDaGFuZ2UsIG9uSW5wdXQ6IHRoaXMub25ZZWFySW5wdXQsIG9uS2V5RG93bjogdGhpcy5vblllYXJLZXksIHBhdHRlcm46IFwiXFxcXGQqXCIsIHJlZjogKGVsKSA9PiAodGhpcy55ZWFySW5wdXQgPSBlbCksIHR5cGU6IFwidGV4dFwiLCB2YWx1ZTogbG9jYWxpemVkWWVhciB9KSwgc3VmZml4ICYmIGgoXCJzcGFuXCIsIHsgY2xhc3M6IENTUy5zdWZmaXggfSwgc3VmZml4KSkpLCBoKFwiYVwiLCB7IFwiYXJpYS1kaXNhYmxlZFwiOiBgJHt0aGlzLm5leHRNb250aERhdGUuZ2V0TW9udGgoKSA9PT0gYWN0aXZlTW9udGh9YCwgXCJhcmlhLWxhYmVsXCI6IG1lc3NhZ2VzLm5leHRNb250aCwgY2xhc3M6IENTUy5jaGV2cm9uLCBocmVmOiBcIiNcIiwgb25DbGljazogdGhpcy5uZXh0TW9udGhDbGljaywgb25LZXlEb3duOiB0aGlzLm5leHRNb250aEtleWRvd24sIHJvbGU6IFwiYnV0dG9uXCIsIHRhYmluZGV4OiB0aGlzLm5leHRNb250aERhdGUuZ2V0TW9udGgoKSA9PT0gYWN0aXZlTW9udGggPyAtMSA6IDAgfSwgaChcImNhbGNpdGUtaWNvblwiLCB7IFwiZmxpcC1ydGxcIjogdHJ1ZSwgaWNvbjogSUNPTi5jaGV2cm9uUmlnaHQsIHNjYWxlOiBpY29uU2NhbGUgfSkpKSk7XHJcbiAgfVxyXG4gIHNldE5leHRQcmV2TW9udGhEYXRlcygpIHtcclxuICAgIGlmICghdGhpcy5hY3RpdmVEYXRlKSB7XHJcbiAgICAgIHJldHVybjtcclxuICAgIH1cclxuICAgIHRoaXMubmV4dE1vbnRoRGF0ZSA9IGRhdGVGcm9tUmFuZ2UobmV4dE1vbnRoKHRoaXMuYWN0aXZlRGF0ZSksIHRoaXMubWluLCB0aGlzLm1heCk7XHJcbiAgICB0aGlzLnByZXZNb250aERhdGUgPSBkYXRlRnJvbVJhbmdlKHByZXZNb250aCh0aGlzLmFjdGl2ZURhdGUpLCB0aGlzLm1pbiwgdGhpcy5tYXgpO1xyXG4gIH1cclxuICBmb3JtYXRDYWxlbmRhclllYXIoeWVhcikge1xyXG4gICAgY29uc3QgeyBsb2NhbGVEYXRhIH0gPSB0aGlzO1xyXG4gICAgY29uc3QgYnVkZGhpc3RDYWxlbmRhciA9IGxvY2FsZURhdGFbXCJkZWZhdWx0LWNhbGVuZGFyXCJdID09PSBcImJ1ZGRoaXN0XCI7XHJcbiAgICBjb25zdCB5ZWFyT2Zmc2V0ID0gYnVkZGhpc3RDYWxlbmRhciA/IEJVRERISVNUX0NBTEVOREFSX1lFQVJfT0ZGU0VUIDogMDtcclxuICAgIHJldHVybiBudW1iZXJTdHJpbmdGb3JtYXR0ZXIubG9jYWxpemUoYCR7eWVhciArIHllYXJPZmZzZXR9YCk7XHJcbiAgfVxyXG4gIHBhcnNlQ2FsZW5kYXJZZWFyKHllYXIpIHtcclxuICAgIGNvbnN0IHsgbG9jYWxlRGF0YSB9ID0gdGhpcztcclxuICAgIGNvbnN0IGJ1ZGRoaXN0Q2FsZW5kYXIgPSBsb2NhbGVEYXRhW1wiZGVmYXVsdC1jYWxlbmRhclwiXSA9PT0gXCJidWRkaGlzdFwiO1xyXG4gICAgY29uc3QgeWVhck9mZnNldCA9IGJ1ZGRoaXN0Q2FsZW5kYXIgPyBCVURESElTVF9DQUxFTkRBUl9ZRUFSX09GRlNFVCA6IDA7XHJcbiAgICBjb25zdCBwYXJzZWRZZWFyID0gTnVtYmVyKG51bWJlclN0cmluZ0Zvcm1hdHRlci5kZWxvY2FsaXplKHllYXIpKSAtIHllYXJPZmZzZXQ7XHJcbiAgICByZXR1cm4gbnVtYmVyU3RyaW5nRm9ybWF0dGVyLmxvY2FsaXplKGAke3BhcnNlZFllYXJ9YCk7XHJcbiAgfVxyXG4gIGdldEluUmFuZ2VEYXRlKHsgbG9jYWxpemVkWWVhciwgb2Zmc2V0ID0gMCB9KSB7XHJcbiAgICBjb25zdCB7IG1pbiwgbWF4LCBhY3RpdmVEYXRlIH0gPSB0aGlzO1xyXG4gICAgY29uc3QgcGFyc2VkWWVhciA9IE51bWJlcihudW1iZXJTdHJpbmdGb3JtYXR0ZXIuZGVsb2NhbGl6ZShsb2NhbGl6ZWRZZWFyKSk7XHJcbiAgICBjb25zdCBsZW5ndGggPSBwYXJzZWRZZWFyLnRvU3RyaW5nKCkubGVuZ3RoO1xyXG4gICAgY29uc3QgeWVhciA9IGlzTmFOKHBhcnNlZFllYXIpID8gZmFsc2UgOiBwYXJzZWRZZWFyICsgb2Zmc2V0O1xyXG4gICAgY29uc3QgaW5SYW5nZSA9IHllYXIgJiYgKCFtaW4gfHwgbWluLmdldEZ1bGxZZWFyKCkgPD0geWVhcikgJiYgKCFtYXggfHwgbWF4LmdldEZ1bGxZZWFyKCkgPj0geWVhcik7XHJcbiAgICAvLyBpZiB5b3UndmUgc3VwcGxpZWQgYSB5ZWFyIGFuZCBpdCdzIGluIHJhbmdlXHJcbiAgICBpZiAoeWVhciAmJiBpblJhbmdlICYmIGxlbmd0aCA9PT0gbG9jYWxpemVkWWVhci5sZW5ndGgpIHtcclxuICAgICAgY29uc3QgbmV4dERhdGUgPSBuZXcgRGF0ZShhY3RpdmVEYXRlKTtcclxuICAgICAgbmV4dERhdGUuc2V0RnVsbFllYXIoeWVhcik7XHJcbiAgICAgIHJldHVybiBkYXRlRnJvbVJhbmdlKG5leHREYXRlLCBtaW4sIG1heCk7XHJcbiAgICB9XHJcbiAgfVxyXG4gIC8qKlxyXG4gICAqIFBhcnNlIGxvY2FsaXplZCB5ZWFyIHN0cmluZyBmcm9tIGlucHV0LFxyXG4gICAqIHNldCB0byBhY3RpdmUgaWYgaW4gcmFuZ2VcclxuICAgKlxyXG4gICAqIEBwYXJhbSByb290MFxyXG4gICAqIEBwYXJhbSByb290MC5sb2NhbGl6ZWRZZWFyXHJcbiAgICogQHBhcmFtIHJvb3QwLmNvbW1pdFxyXG4gICAqIEBwYXJhbSByb290MC5vZmZzZXRcclxuICAgKi9cclxuICBzZXRZZWFyKHsgbG9jYWxpemVkWWVhciwgY29tbWl0ID0gdHJ1ZSwgb2Zmc2V0ID0gMCB9KSB7XHJcbiAgICBjb25zdCB7IHllYXJJbnB1dCwgYWN0aXZlRGF0ZSB9ID0gdGhpcztcclxuICAgIGNvbnN0IGluUmFuZ2VEYXRlID0gdGhpcy5nZXRJblJhbmdlRGF0ZSh7IGxvY2FsaXplZFllYXIsIG9mZnNldCB9KTtcclxuICAgIC8vIGlmIHlvdSd2ZSBzdXBwbGllZCBhIHllYXIgYW5kIGl0J3MgaW4gcmFuZ2UsIHVwZGF0ZSBhY3RpdmUgZGF0ZVxyXG4gICAgaWYgKGluUmFuZ2VEYXRlKSB7XHJcbiAgICAgIHRoaXMuY2FsY2l0ZUludGVybmFsRGF0ZVBpY2tlclNlbGVjdC5lbWl0KGluUmFuZ2VEYXRlKTtcclxuICAgIH1cclxuICAgIGlmIChjb21taXQpIHtcclxuICAgICAgeWVhcklucHV0LnZhbHVlID0gdGhpcy5mb3JtYXRDYWxlbmRhclllYXIoKGluUmFuZ2VEYXRlIHx8IGFjdGl2ZURhdGUpLmdldEZ1bGxZZWFyKCkpO1xyXG4gICAgfVxyXG4gIH1cclxuICBnZXQgZWwoKSB7IHJldHVybiBnZXRFbGVtZW50KHRoaXMpOyB9XHJcbiAgc3RhdGljIGdldCB3YXRjaGVycygpIHsgcmV0dXJuIHtcclxuICAgIFwibWluXCI6IFtcInNldE5leHRQcmV2TW9udGhEYXRlc1wiXSxcclxuICAgIFwibWF4XCI6IFtcInNldE5leHRQcmV2TW9udGhEYXRlc1wiXSxcclxuICAgIFwiYWN0aXZlRGF0ZVwiOiBbXCJzZXROZXh0UHJldk1vbnRoRGF0ZXNcIl1cclxuICB9OyB9XHJcbn07XHJcbkRhdGVQaWNrZXJNb250aEhlYWRlci5zdHlsZSA9IGRhdGVQaWNrZXJNb250aEhlYWRlckNzcztcblxuZXhwb3J0IHsgRGF0ZVBpY2tlckRheSBhcyBjYWxjaXRlX2RhdGVfcGlja2VyX2RheSwgRGF0ZVBpY2tlck1vbnRoIGFzIGNhbGNpdGVfZGF0ZV9waWNrZXJfbW9udGgsIERhdGVQaWNrZXJNb250aEhlYWRlciBhcyBjYWxjaXRlX2RhdGVfcGlja2VyX21vbnRoX2hlYWRlciB9O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1jYWxjaXRlLWRhdGUtcGlja2VyLWRheV8zLmVudHJ5LmpzLm1hcCIsImltcG9ydCB7IG4gYXMgbnVtYmVyU3RyaW5nRm9ybWF0dGVyIH0gZnJvbSAnLi9sb2NhbGUtZjdiMmZiYjAuanMnO1xuXG4vKiFcbiAqIEFsbCBtYXRlcmlhbCBjb3B5cmlnaHQgRVNSSSwgQWxsIFJpZ2h0cyBSZXNlcnZlZCwgdW5sZXNzIG90aGVyd2lzZSBzcGVjaWZpZWQuXG4gKiBTZWUgaHR0cHM6Ly9naXRodWIuY29tL0VzcmkvY2FsY2l0ZS1jb21wb25lbnRzL2Jsb2IvbWFzdGVyL0xJQ0VOU0UubWQgZm9yIGRldGFpbHMuXG4gKiB2MS4wLjVcbiAqL1xuLyoqXG4gKiBDaGVjayBpZiBkYXRlIGlzIHdpdGhpbiBhIG1pbiBhbmQgbWF4XG4gKlxuICogQHBhcmFtIGRhdGVcbiAqIEBwYXJhbSBtaW5cbiAqIEBwYXJhbSBtYXhcbiAqL1xuZnVuY3Rpb24gaW5SYW5nZShkYXRlLCBtaW4sIG1heCkge1xuICBpZiAoIWRhdGUpIHtcbiAgICByZXR1cm47XG4gIH1cbiAgY29uc3QgdGltZSA9IGRhdGUuZ2V0VGltZSgpO1xuICBjb25zdCBhZnRlck1pbiA9ICEobWluIGluc3RhbmNlb2YgRGF0ZSkgfHwgdGltZSA+PSBtaW4uZ2V0VGltZSgpO1xuICBjb25zdCBiZWZvcmVNYXggPSAhKG1heCBpbnN0YW5jZW9mIERhdGUpIHx8IHRpbWUgPD0gbWF4LmdldFRpbWUoKTtcbiAgcmV0dXJuIGFmdGVyTWluICYmIGJlZm9yZU1heDtcbn1cbi8qKlxuICogRW5zdXJlcyBkYXRlIGlzIHdpdGhpbiByYW5nZSxcbiAqIHJldHVybnMgbWluIG9yIG1heCBpZiBvdXQgb2YgYm91bmRzXG4gKlxuICogQHBhcmFtIGRhdGVcbiAqIEBwYXJhbSBtaW5cbiAqIEBwYXJhbSBtYXhcbiAqL1xuZnVuY3Rpb24gZGF0ZUZyb21SYW5nZShkYXRlLCBtaW4sIG1heCkge1xuICBpZiAoIShkYXRlIGluc3RhbmNlb2YgRGF0ZSkpIHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuICBjb25zdCB0aW1lID0gZGF0ZS5nZXRUaW1lKCk7XG4gIGNvbnN0IGJlZm9yZU1pbiA9IG1pbiBpbnN0YW5jZW9mIERhdGUgJiYgdGltZSA8IG1pbi5nZXRUaW1lKCk7XG4gIGNvbnN0IGFmdGVyTWF4ID0gbWF4IGluc3RhbmNlb2YgRGF0ZSAmJiB0aW1lID4gbWF4LmdldFRpbWUoKTtcbiAgaWYgKGJlZm9yZU1pbikge1xuICAgIHJldHVybiBtaW47XG4gIH1cbiAgaWYgKGFmdGVyTWF4KSB7XG4gICAgcmV0dXJuIG1heDtcbiAgfVxuICByZXR1cm4gZGF0ZTtcbn1cbi8qKlxuICogUGFyc2UgYW4gaXNvODYwMSBzdHJpbmcgKFlZWVktbW0tZGQpIGludG8gYSB2YWxpZCBkYXRlLlxuICogVE9ETzogaGFuZGxlIHRpbWUgd2hlbiB0aW1lIG9mIGRheSBVSSBpcyBhZGRlZFxuICpcbiAqIEBwYXJhbSBpc284NjAxXG4gKiBAcGFyYW0gaXNFbmREYXRlXG4gKi9cbmZ1bmN0aW9uIGRhdGVGcm9tSVNPKGlzbzg2MDEsIGlzRW5kRGF0ZSA9IGZhbHNlKSB7XG4gIGlmIChpc284NjAxIGluc3RhbmNlb2YgRGF0ZSkge1xuICAgIHJldHVybiBpc284NjAxO1xuICB9XG4gIGlmICghaXNvODYwMSB8fCB0eXBlb2YgaXNvODYwMSAhPT0gXCJzdHJpbmdcIikge1xuICAgIHJldHVybiBudWxsO1xuICB9XG4gIGNvbnN0IGQgPSBpc284NjAxLnNwbGl0KC9bOiBULV0vKS5tYXAocGFyc2VGbG9hdCk7XG4gIGNvbnN0IGRhdGUgPSBuZXcgRGF0ZShkWzBdLCAoZFsxXSB8fCAxKSAtIDEsIGRbMl0gfHwgMSk7XG4gIGRhdGUuc2V0RnVsbFllYXIoZFswXSk7XG4gIGlmIChpc05hTihkYXRlLmdldFRpbWUoKSkpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoYEludmFsaWQgSVNPIDg2MDEgZGF0ZTogXCIke2lzbzg2MDF9XCJgKTtcbiAgfVxuICBpZiAoaXNFbmREYXRlKSB7XG4gICAgcmV0dXJuIHNldEVuZE9mRGF5KGRhdGUpO1xuICB9XG4gIHJldHVybiBkYXRlO1xufVxuLyoqXG4gKiBQYXJzZSBhIGxvY2FsaXplZCBkYXRlIHN0cmluZyBpbnRvIGEgdmFsaWQgRGF0ZS5cbiAqIHJldHVybiBmYWxzZSBpZiBkYXRlIGlzIGludmFsaWQsIG9yIG91dCBvZiByYW5nZVxuICpcbiAqIEBwYXJhbSB2YWx1ZVxuICogQHBhcmFtIGxvY2FsZURhdGFcbiAqL1xuZnVuY3Rpb24gZGF0ZUZyb21Mb2NhbGl6ZWRTdHJpbmcodmFsdWUsIGxvY2FsZURhdGEpIHtcbiAgaWYgKCFsb2NhbGVEYXRhKSB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cbiAgY29uc3QgeyBzZXBhcmF0b3IgfSA9IGxvY2FsZURhdGE7XG4gIGNvbnN0IHsgZGF5LCBtb250aCwgeWVhciB9ID0gcGFyc2VEYXRlU3RyaW5nKHZhbHVlLCBsb2NhbGVEYXRhKTtcbiAgY29uc3QgZGF0ZSA9IG5ldyBEYXRlKHllYXIsIG1vbnRoLCBkYXkpO1xuICBkYXRlLnNldEZ1bGxZZWFyKHllYXIpO1xuICBjb25zdCB2YWxpZERheSA9IGRheSA+IDA7XG4gIGNvbnN0IHZhbGlkTW9udGggPSBtb250aCA+IC0xO1xuICBjb25zdCB2YWxpZERhdGUgPSAhaXNOYU4oZGF0ZS5nZXRUaW1lKCkpO1xuICBjb25zdCB2YWxpZExlbmd0aCA9IHZhbHVlLnNwbGl0KHNlcGFyYXRvcikuZmlsdGVyKChjKSA9PiBjKS5sZW5ndGggPiAyO1xuICBjb25zdCB2YWxpZFllYXIgPSB5ZWFyLnRvU3RyaW5nKCkubGVuZ3RoID4gMDtcbiAgaWYgKHZhbGlkRGF5ICYmIHZhbGlkTW9udGggJiYgdmFsaWREYXRlICYmIHZhbGlkTGVuZ3RoICYmIHZhbGlkWWVhcikge1xuICAgIHJldHVybiBkYXRlO1xuICB9XG4gIHJldHVybiBudWxsO1xufVxuLyoqXG4gKiBSZXRyaWV2ZSBkYXksIG1vbnRoLCBhbmQgeWVhciBzdHJpbmdzIGZyb20gYSBsb2NhbGl6ZWQgc3RyaW5nXG4gKlxuICogQHBhcmFtIHN0cmluZ1xuICogQHBhcmFtIGxvY2FsZURhdGFcbiAqL1xuZnVuY3Rpb24gZGF0ZVBhcnRzRnJvbUxvY2FsaXplZFN0cmluZyhzdHJpbmcsIGxvY2FsZURhdGEpIHtcbiAgY29uc3QgeyBzZXBhcmF0b3IsIHVuaXRPcmRlciB9ID0gbG9jYWxlRGF0YTtcbiAgY29uc3Qgb3JkZXIgPSBnZXRPcmRlcih1bml0T3JkZXIpO1xuICBjb25zdCB2YWx1ZXMgPSBzdHJpbmcuc3BsaXQoc2VwYXJhdG9yKS5tYXAoKHBhcnQpID0+IG51bWJlclN0cmluZ0Zvcm1hdHRlci5kZWxvY2FsaXplKHBhcnQpKTtcbiAgY29uc3QgZGF5ID0gdmFsdWVzW29yZGVyLmluZGV4T2YoXCJkXCIpXTtcbiAgY29uc3QgbW9udGggPSB2YWx1ZXNbb3JkZXIuaW5kZXhPZihcIm1cIildO1xuICBjb25zdCB5ZWFyID0gdmFsdWVzW29yZGVyLmluZGV4T2YoXCJ5XCIpXTtcbiAgcmV0dXJuIHsgZGF5LCBtb250aCwgeWVhciB9O1xufVxuLyoqXG4gKiBSZXR1cm4gZmlyc3QgcG9ydGlvbiBvZiBJU08gc3RyaW5nIChZWVlZLW1tLWRkKVxuICpcbiAqIEBwYXJhbSBkYXRlXG4gKi9cbmZ1bmN0aW9uIGRhdGVUb0lTTyhkYXRlKSB7XG4gIGlmIChkYXRlIGluc3RhbmNlb2YgRGF0ZSkge1xuICAgIHJldHVybiBuZXcgRGF0ZShkYXRlLmdldFRpbWUoKSAtIGRhdGUuZ2V0VGltZXpvbmVPZmZzZXQoKSAqIDYwMDAwKS50b0lTT1N0cmluZygpLnNwbGl0KFwiVFwiKVswXTtcbiAgfVxuICByZXR1cm4gXCJcIjtcbn1cbi8qKlxuICogQ2hlY2sgaWYgdHdvIGRhdGVzIGFyZSB0aGUgc2FtZSBkYXksIG1vbnRoLCB5ZWFyXG4gKlxuICogQHBhcmFtIGQxXG4gKiBAcGFyYW0gZDJcbiAqL1xuZnVuY3Rpb24gc2FtZURhdGUoZDEsIGQyKSB7XG4gIHJldHVybiAoZDEgaW5zdGFuY2VvZiBEYXRlICYmXG4gICAgZDIgaW5zdGFuY2VvZiBEYXRlICYmXG4gICAgZDEuZ2V0RGF0ZSgpID09PSBkMi5nZXREYXRlKCkgJiZcbiAgICBkMS5nZXRNb250aCgpID09PSBkMi5nZXRNb250aCgpICYmXG4gICAgZDEuZ2V0RnVsbFllYXIoKSA9PT0gZDIuZ2V0RnVsbFllYXIoKSk7XG59XG4vKipcbiAqIEdldCBhIGRhdGUgb25lIG1vbnRoIGluIHRoZSBwYXN0XG4gKlxuICogQHBhcmFtIGRhdGVcbiAqL1xuZnVuY3Rpb24gcHJldk1vbnRoKGRhdGUpIHtcbiAgY29uc3QgbW9udGggPSBkYXRlLmdldE1vbnRoKCk7XG4gIGNvbnN0IG5leHREYXRlID0gbmV3IERhdGUoZGF0ZSk7XG4gIG5leHREYXRlLnNldE1vbnRoKG1vbnRoIC0gMSk7XG4gIC8vIGRhdGUgZG9lc24ndCBleGlzdCBpbiBuZXcgbW9udGgsIHVzZSBsYXN0IGRheVxuICBpZiAobW9udGggPT09IG5leHREYXRlLmdldE1vbnRoKCkpIHtcbiAgICByZXR1cm4gbmV3IERhdGUoZGF0ZS5nZXRGdWxsWWVhcigpLCBtb250aCwgMCk7XG4gIH1cbiAgcmV0dXJuIG5leHREYXRlO1xufVxuLyoqXG4gKiBHZXQgYSBkYXRlIG9uZSBtb250aCBpbiB0aGUgZnV0dXJlXG4gKlxuICogQHBhcmFtIGRhdGVcbiAqL1xuZnVuY3Rpb24gbmV4dE1vbnRoKGRhdGUpIHtcbiAgY29uc3QgbW9udGggPSBkYXRlLmdldE1vbnRoKCk7XG4gIGNvbnN0IG5leHREYXRlID0gbmV3IERhdGUoZGF0ZSk7XG4gIG5leHREYXRlLnNldE1vbnRoKG1vbnRoICsgMSk7XG4gIC8vIGRhdGUgZG9lc24ndCBleGlzdCBpbiBuZXcgbW9udGgsIHVzZSBsYXN0IGRheVxuICBpZiAoKG1vbnRoICsgMikgJSA3ID09PSBuZXh0RGF0ZS5nZXRNb250aCgpICUgNykge1xuICAgIHJldHVybiBuZXcgRGF0ZShkYXRlLmdldEZ1bGxZZWFyKCksIG1vbnRoICsgMiwgMCk7XG4gIH1cbiAgcmV0dXJuIG5leHREYXRlO1xufVxuLyoqXG4gKiBQYXJzZSBudW1lcmljIHVuaXRzIGZvciBkYXksIG1vbnRoLCBhbmQgeWVhciBmcm9tIGEgbG9jYWxpemVkIHN0cmluZ1xuICogbW9udGggc3RhcnRzIGF0IDAgKGNhbiBwYXNzIHRvIGRhdGUgY29uc3RydWN0b3IpXG4gKiBjYW4gcmV0dXJuIHZhbHVlcyBhcyBudW1iZXIgb3Igc3RyaW5nXG4gKlxuICogQHBhcmFtIHN0cmluZ1xuICogQHBhcmFtIGxvY2FsZURhdGFcbiAqL1xuZnVuY3Rpb24gcGFyc2VEYXRlU3RyaW5nKHN0cmluZywgbG9jYWxlRGF0YSkge1xuICBjb25zdCB7IGRheSwgbW9udGgsIHllYXIgfSA9IGRhdGVQYXJ0c0Zyb21Mb2NhbGl6ZWRTdHJpbmcoc3RyaW5nLCBsb2NhbGVEYXRhKTtcbiAgcmV0dXJuIHtcbiAgICBkYXk6IHBhcnNlSW50KGRheSksXG4gICAgbW9udGg6IHBhcnNlSW50KG1vbnRoKSAtIDEsXG4gICAgeWVhcjogcGFyc2VJbnQoeWVhcilcbiAgfTtcbn1cbi8qKlxuICogQmFzZWQgb24gdGhlIHVuaXRPcmRlciBzdHJpbmcsIGZpbmQgb3JkZXIgb2YgbW9udGgsIGRheSwgYW5kIHllYXIgZm9yIGxvY2FsZVxuICpcbiAqIEBwYXJhbSB1bml0T3JkZXJcbiAqL1xuZnVuY3Rpb24gZ2V0T3JkZXIodW5pdE9yZGVyKSB7XG4gIGNvbnN0IHNpZ25pZmllcnMgPSBbXCJkXCIsIFwibVwiLCBcInlcIl07XG4gIGNvbnN0IG9yZGVyID0gdW5pdE9yZGVyLnRvTG93ZXJDYXNlKCk7XG4gIHJldHVybiBzaWduaWZpZXJzLnNvcnQoKGEsIGIpID0+IG9yZGVyLmluZGV4T2YoYSkgLSBvcmRlci5pbmRleE9mKGIpKTtcbn1cbi8qKlxuICogR2V0IG51bWJlciBvZiBkYXlzIGJldHdlZW4gdHdvIGRhdGVzXG4gKlxuICogQHBhcmFtIGRhdGUxXG4gKiBAcGFyYW0gZGF0ZTJcbiAqL1xuZnVuY3Rpb24gZ2V0RGF5c0RpZmYoZGF0ZTEsIGRhdGUyKSB7XG4gIGNvbnN0IHRzMSA9IGRhdGUxLmdldFRpbWUoKTtcbiAgY29uc3QgdHMyID0gZGF0ZTIuZ2V0VGltZSgpO1xuICByZXR1cm4gKHRzMSAtIHRzMikgLyAoMTAwMCAqIDM2MDAgKiAyNCk7XG59XG4vKipcbiAqIFNldCB0aW1lIG9mIHRoZSBkYXkgdG8gdGhlIGVuZC5cbiAqXG4gKiBAcGFyYW0ge0RhdGV9IGRhdGUgRGF0ZS5cbiAqIEByZXR1cm5zIHtEYXRlfSBEYXRlIHdpdGggdGltZSBzZXQgdG8gZW5kIG9mIGRheSAuXG4gKi9cbmZ1bmN0aW9uIHNldEVuZE9mRGF5KGRhdGUpIHtcbiAgZGF0ZS5zZXRIb3VycygyMywgNTksIDU5LCA5OTkpO1xuICByZXR1cm4gZGF0ZTtcbn1cblxuZXhwb3J0IHsgZGF0ZUZyb21Mb2NhbGl6ZWRTdHJpbmcgYXMgYSwgZGF0ZVRvSVNPIGFzIGIsIGRhdGVGcm9tSVNPIGFzIGMsIGRhdGVQYXJ0c0Zyb21Mb2NhbGl6ZWRTdHJpbmcgYXMgZCwgZGF0ZUZyb21SYW5nZSBhcyBlLCBzYW1lRGF0ZSBhcyBmLCBnZXREYXlzRGlmZiBhcyBnLCBnZXRPcmRlciBhcyBoLCBpblJhbmdlIGFzIGksIG5leHRNb250aCBhcyBuLCBwcmV2TW9udGggYXMgcCwgc2V0RW5kT2ZEYXkgYXMgcyB9O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRlLWQ3ZmJmN2ZkLmpzLm1hcCIsIi8qIVxuICogQWxsIG1hdGVyaWFsIGNvcHlyaWdodCBFU1JJLCBBbGwgUmlnaHRzIFJlc2VydmVkLCB1bmxlc3Mgb3RoZXJ3aXNlIHNwZWNpZmllZC5cbiAqIFNlZSBodHRwczovL2dpdGh1Yi5jb20vRXNyaS9jYWxjaXRlLWNvbXBvbmVudHMvYmxvYi9tYXN0ZXIvTElDRU5TRS5tZCBmb3IgZGV0YWlscy5cbiAqIHYxLjAuNVxuICovXG5mdW5jdGlvbiBub29wQ2xpY2soKSB7XG4gIC8qKiBub29wICovXG59XG4vKipcbiAqIFRoaXMgaGVscGVyIHVwZGF0ZXMgdGhlIGhvc3QgZWxlbWVudCB0byBwcmV2ZW50IGtleWJvYXJkIGludGVyYWN0aW9uIG9uIGl0cyBzdWJ0cmVlIGFuZCBzZXRzIHRoZSBhcHByb3ByaWF0ZSBhcmlhIGF0dHJpYnV0ZSBmb3IgYWNjZXNzaWJpbGl0eS5cbiAqXG4gKiBUaGlzIHNob3VsZCBiZSB1c2VkIGluIHRoZSBgY29tcG9uZW50RGlkUmVuZGVyYCBsaWZlY3ljbGUgaG9vay5cbiAqXG4gKiAqKk5vdGVzKipcbiAqXG4gKiB0aGlzIHV0aWwgaXMgbm90IG5lZWRlZCBmb3Igc2ltcGxlIGNvbXBvbmVudHMgd2hvc2Ugcm9vdCBlbGVtZW50IG9yIGVsZW1lbnRzIGFyZSBhbiBpbnRlcmFjdGl2ZSBjb21wb25lbnQgKGN1c3RvbSBlbGVtZW50IG9yIG5hdGl2ZSBjb250cm9sKS4gRm9yIHRob3NlIGNhc2VzLCBzZXQgdGhlIGBkaXNhYmxlZGAgcHJvcHMgb24gdGhlIHJvb3QgY29tcG9uZW50cyBpbnN0ZWFkLlxuICogdGVjaG5pY2FsbHksIHVzZXJzIGNhbiBvdmVycmlkZSBgdGFiaW5kZXhgIGFuZCByZXN0b3JlIGtleWJvYXJkIG5hdmlnYXRpb24sIGJ1dCB0aGlzIHdpbGwgYmUgY29uc2lkZXJlZCB1c2VyIGVycm9yXG4gKlxuICogQHBhcmFtIGNvbXBvbmVudFxuICogQHBhcmFtIGhvc3RJc1RhYmJhYmxlXG4gKi9cbmZ1bmN0aW9uIHVwZGF0ZUhvc3RJbnRlcmFjdGlvbihjb21wb25lbnQsIGhvc3RJc1RhYmJhYmxlID0gZmFsc2UpIHtcbiAgaWYgKGNvbXBvbmVudC5kaXNhYmxlZCkge1xuICAgIGNvbXBvbmVudC5lbC5zZXRBdHRyaWJ1dGUoXCJ0YWJpbmRleFwiLCBcIi0xXCIpO1xuICAgIGNvbXBvbmVudC5lbC5zZXRBdHRyaWJ1dGUoXCJhcmlhLWRpc2FibGVkXCIsIFwidHJ1ZVwiKTtcbiAgICBpZiAoY29tcG9uZW50LmVsLmNvbnRhaW5zKGRvY3VtZW50LmFjdGl2ZUVsZW1lbnQpKSB7XG4gICAgICBkb2N1bWVudC5hY3RpdmVFbGVtZW50LmJsdXIoKTtcbiAgICB9XG4gICAgY29tcG9uZW50LmVsLmNsaWNrID0gbm9vcENsaWNrO1xuICAgIHJldHVybjtcbiAgfVxuICBjb21wb25lbnQuZWwuY2xpY2sgPSBIVE1MRWxlbWVudC5wcm90b3R5cGUuY2xpY2s7XG4gIGlmICh0eXBlb2YgaG9zdElzVGFiYmFibGUgPT09IFwiZnVuY3Rpb25cIikge1xuICAgIGNvbXBvbmVudC5lbC5zZXRBdHRyaWJ1dGUoXCJ0YWJpbmRleFwiLCBob3N0SXNUYWJiYWJsZS5jYWxsKGNvbXBvbmVudCkgPyBcIjBcIiA6IFwiLTFcIik7XG4gIH1cbiAgZWxzZSBpZiAoaG9zdElzVGFiYmFibGUgPT09IHRydWUpIHtcbiAgICBjb21wb25lbnQuZWwuc2V0QXR0cmlidXRlKFwidGFiaW5kZXhcIiwgXCIwXCIpO1xuICB9XG4gIGVsc2UgaWYgKGhvc3RJc1RhYmJhYmxlID09PSBmYWxzZSkge1xuICAgIGNvbXBvbmVudC5lbC5yZW1vdmVBdHRyaWJ1dGUoXCJ0YWJpbmRleFwiKTtcbiAgfVxuICBlbHNlIDtcbiAgY29tcG9uZW50LmVsLnJlbW92ZUF0dHJpYnV0ZShcImFyaWEtZGlzYWJsZWRcIik7XG59XG5cbmV4cG9ydCB7IHVwZGF0ZUhvc3RJbnRlcmFjdGlvbiBhcyB1IH07XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWludGVyYWN0aXZlLTI5OTk1NTIyLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==