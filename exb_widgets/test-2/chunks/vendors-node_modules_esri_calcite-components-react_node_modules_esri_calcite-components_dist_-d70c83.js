"use strict";
(self["webpackChunkexb_client"] = self["webpackChunkexb_client"] || []).push([["vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-d70c83"],{

/***/ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-table-row.js":
/*!********************************************************************************************************************************!*\
  !*** ./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-table-row.js ***!
  \********************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   CalciteTableRow: () => (/* binding */ CalciteTableRow),
/* harmony export */   defineCustomElement: () => (/* binding */ defineCustomElement)
/* harmony export */ });
/* harmony import */ var _stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @stencil/core/internal/client/index.js */ "./node_modules/@esri/calcite-components-react/node_modules/@stencil/core/internal/client/index.js");
/* harmony import */ var _dom_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dom.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/dom.js");
/* harmony import */ var _key_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./key.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/key.js");
/* harmony import */ var _interactive_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./interactive.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/interactive.js");
/* harmony import */ var _component_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./component.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/component.js");
/* harmony import */ var _icon_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./icon.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/icon.js");
/* harmony import */ var _table_cell_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./table-cell.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/table-cell.js");
/* harmony import */ var _table_header_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./table-header.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/table-header.js");
/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-design-system/blob/main/LICENSE.md for details.
 * v1.11.0
 */









const tableRowCss = ":host([disabled]){cursor:default;-webkit-user-select:none;user-select:none;opacity:var(--calcite-ui-opacity-disabled)}:host([disabled]) *,:host([disabled]) ::slotted(*){pointer-events:none}:host{--calcite-internal-table-row-background:var(--calcite-table-row-background, var(--calcite-ui-foreground-1));--calcite-internal-table-row-border-color:var(--calcite-table-row-border-color, transparent);display:contents}:host([hidden]){display:none}[hidden]{display:none}:host([disabled]) tr{pointer-events:none;opacity:var(--calcite-ui-opacity-disabled)}:host([disabled]) ::slotted([calcite-hydrated][disabled]),:host([disabled]) [calcite-hydrated][disabled]{opacity:1}tr{border-block-end:1px solid var(--calcite-internal-table-row-border-color);background-color:var(--calcite-internal-table-row-background)}";

const TableRow = /*@__PURE__*/ (0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_7__.proxyCustomElement)(class extends _stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_7__.HTMLElement {
  constructor() {
    super();
    this.__registerHost();
    this.__attachShadow();
    this.calciteTableRowSelect = (0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_7__.createEvent)(this, "calciteTableRowSelect", 6);
    this.calciteInternalTableRowFocusRequest = (0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_7__.createEvent)(this, "calciteInternalTableRowFocusRequest", 6);
    this.rowCells = [];
    this.emitTableRowFocusRequest = (cellPosition, rowPosition, destination, lastCell) => {
      this.calciteInternalTableRowFocusRequest.emit({
        cellPosition,
        rowPosition,
        destination,
        lastCell,
      });
    };
    this.updateCells = () => {
      const slottedCells = this.tableRowSlotEl
        ?.assignedElements({ flatten: true })
        ?.filter((el) => el.matches("calcite-table-cell") || el.matches("calcite-table-header"));
      const renderedCells = Array.from(this.tableRowEl?.querySelectorAll("calcite-table-header, calcite-table-cell"))?.filter((el) => el.numberCell || el.selectionCell);
      const cells = renderedCells ? renderedCells.concat(slottedCells) : slottedCells;
      if (cells.length > 0) {
        cells?.forEach((cell, index) => {
          cell.positionInRow = index + 1;
          cell.parentRowType = this.rowType;
          cell.scale = this.scale;
          if (cell.nodeName === "CALCITE-TABLE-CELL") {
            cell.readCellContentsToAT = this.readCellContentsToAT;
            cell.disabled = this.disabled;
            cell.parentRowIsSelected = this.selected;
          }
        });
      }
      this.rowCells =
        cells || [];
      this.cellCount = cells?.length;
    };
    this.handleSelectionOfRow = () => {
      this.calciteTableRowSelect.emit();
    };
    this.handleKeyboardSelection = (event) => {
      if ((0,_key_js__WEBPACK_IMPORTED_MODULE_1__.i)(event.key)) {
        if (event.key === " ") {
          event.preventDefault();
        }
        this.handleSelectionOfRow();
      }
    };
    this.disabled = false;
    this.selected = false;
    this.cellCount = undefined;
    this.rowType = undefined;
    this.numbered = false;
    this.positionSection = undefined;
    this.positionSectionLocalized = undefined;
    this.positionAll = undefined;
    this.readCellContentsToAT = undefined;
    this.scale = undefined;
    this.selectionMode = "none";
    this.selectedRowCount = undefined;
    this.selectedRowCountLocalized = undefined;
    this.bodyRowCount = undefined;
    this.effectiveLocale = "";
  }
  handleCellChanges() {
    if (this.tableRowEl && this.rowCells.length > 0) {
      this.updateCells();
    }
  }
  handleDelayedCellChanges() {
    if (this.tableRowEl && this.rowCells.length > 0) {
      requestAnimationFrame(() => this.updateCells());
    }
  }
  //--------------------------------------------------------------------------
  //
  //  Lifecycle
  //
  //--------------------------------------------------------------------------
  componentDidLoad() {
    if (this.tableRowEl && this.rowCells.length > 0) {
      this.updateCells();
    }
  }
  connectedCallback() {
    (0,_interactive_js__WEBPACK_IMPORTED_MODULE_2__.c)(this);
  }
  componentDidRender() {
    (0,_interactive_js__WEBPACK_IMPORTED_MODULE_2__.u)(this);
  }
  disconnectedCallback() {
    (0,_interactive_js__WEBPACK_IMPORTED_MODULE_2__.d)(this);
  }
  //--------------------------------------------------------------------------
  //
  //  Event Listeners
  //
  //--------------------------------------------------------------------------
  calciteInternalTableRowFocusChangeHandler(event) {
    if (event.target.contains(this.el)) {
      const position = event.detail.cellPosition;
      const rowPosition = event.detail.rowPosition;
      const destination = event.detail.destination;
      const lastCell = event.detail.lastCell;
      if (rowPosition === this.positionAll) {
        if (this.disabled) {
          const deflectDirection = destination === "last" ? "previous" : destination === "first" ? "next" : destination;
          this.emitTableRowFocusRequest(position, this.positionAll, deflectDirection);
          return;
        }
        const cellPosition = lastCell
          ? this.rowCells[this.rowCells.length - 1]
          : this.rowCells?.find((_, index) => index + 1 === position);
        if (cellPosition) {
          cellPosition.setFocus();
        }
      }
    }
  }
  //--------------------------------------------------------------------------
  //
  //  Private Methods
  //
  //--------------------------------------------------------------------------
  keyDownHandler(event) {
    const el = event.target;
    const key = event.key;
    const isControl = event.ctrlKey;
    const cells = this.rowCells;
    if (el.matches("calcite-table-cell") || el.matches("calcite-table-header")) {
      switch (key) {
        case "ArrowUp":
          this.emitTableRowFocusRequest(el.positionInRow, this.positionAll, "previous");
          event.preventDefault();
          break;
        case "ArrowDown":
          this.emitTableRowFocusRequest(el.positionInRow, this.positionAll, "next");
          event.preventDefault();
          break;
        case "PageUp":
          this.emitTableRowFocusRequest(el.positionInRow, this.positionAll, "first");
          event.preventDefault();
          break;
        case "PageDown":
          this.emitTableRowFocusRequest(el.positionInRow, this.positionAll, "last");
          event.preventDefault();
          break;
        case "ArrowLeft":
          (0,_dom_js__WEBPACK_IMPORTED_MODULE_0__.i)(cells, el, "previous", false);
          event.preventDefault();
          break;
        case "ArrowRight":
          (0,_dom_js__WEBPACK_IMPORTED_MODULE_0__.i)(cells, el, "next", false);
          event.preventDefault();
          break;
        case "Home":
          if (isControl) {
            this.emitTableRowFocusRequest(1, this.positionAll, "first");
            event.preventDefault();
          }
          else {
            (0,_dom_js__WEBPACK_IMPORTED_MODULE_0__.i)(cells, el, "first", false);
            event.preventDefault();
          }
          break;
        case "End":
          if (isControl) {
            this.emitTableRowFocusRequest(this.rowCells?.length, this.positionAll, "last", true);
            event.preventDefault();
          }
          else {
            (0,_dom_js__WEBPACK_IMPORTED_MODULE_0__.i)(cells, el, "last", false);
            event.preventDefault();
          }
          break;
      }
    }
  }
  //--------------------------------------------------------------------------
  //
  //  Render Methods
  //
  //--------------------------------------------------------------------------
  renderSelectionIcon() {
    const icon = this.selectionMode === "multiple" && this.selected
      ? "check-square-f"
      : this.selectionMode === "multiple"
        ? "square"
        : this.selected
          ? "circle-f"
          : "circle";
    return (0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_7__.h)("calcite-icon", { icon: icon, scale: (0,_component_js__WEBPACK_IMPORTED_MODULE_3__.g)(this.scale) });
  }
  renderSelectableCell() {
    return this.rowType === "head" ? ((0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_7__.h)("calcite-table-header", { alignment: "center", bodyRowCount: this.bodyRowCount, key: "selection-head", onClick: this.selectionMode === "multiple" && this.handleSelectionOfRow, onKeyDown: this.selectionMode === "multiple" && this.handleKeyboardSelection, selectedRowCount: this.selectedRowCount, selectedRowCountLocalized: this.selectedRowCountLocalized, selectionCell: true, selectionMode: this.selectionMode })) : this.rowType === "body" ? ((0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_7__.h)("calcite-table-cell", { alignment: "center", key: "selection-body", onClick: this.handleSelectionOfRow, onKeyDown: this.handleKeyboardSelection, parentRowIsSelected: this.selected, parentRowPositionLocalized: this.positionSectionLocalized, selectionCell: true }, this.renderSelectionIcon())) : ((0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_7__.h)("calcite-table-cell", { alignment: "center", key: "selection-foot", selectionCell: true }));
  }
  renderNumberedCell() {
    return this.rowType === "head" ? ((0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_7__.h)("calcite-table-header", { alignment: "center", key: "numbered-head", numberCell: true })) : this.rowType === "body" ? ((0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_7__.h)("calcite-table-cell", { alignment: "center", key: "numbered-body", numberCell: true }, this.positionSectionLocalized)) : ((0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_7__.h)("calcite-table-cell", { alignment: "center", key: "numbered-foot", numberCell: true }));
  }
  render() {
    return ((0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_7__.h)(_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_7__.Host, null, (0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_7__.h)("tr", { "aria-disabled": this.disabled, "aria-rowindex": this.positionAll + 1, "aria-selected": this.selected, onKeyDown: (event) => this.keyDownHandler(event),
      // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)
      ref: (el) => (this.tableRowEl = el) }, this.numbered && this.renderNumberedCell(), this.selectionMode !== "none" && this.renderSelectableCell(), (0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_7__.h)("slot", { onSlotchange: this.updateCells, ref: (el) => (this.tableRowSlotEl = el) }))));
  }
  get el() { return this; }
  static get watchers() { return {
    "bodyRowCount": ["handleCellChanges"],
    "scale": ["handleCellChanges"],
    "selected": ["handleCellChanges"],
    "selectedRowCount": ["handleCellChanges"],
    "numbered": ["handleDelayedCellChanges"],
    "selectionMode": ["handleDelayedCellChanges"]
  }; }
  static get style() { return tableRowCss; }
}, [1, "calcite-table-row", {
    "disabled": [516],
    "selected": [516],
    "cellCount": [1026, "cell-count"],
    "rowType": [1, "row-type"],
    "numbered": [4],
    "positionSection": [2, "position-section"],
    "positionSectionLocalized": [1, "position-section-localized"],
    "positionAll": [2, "position-all"],
    "readCellContentsToAT": [4, "read-cell-contents-to-a-t"],
    "scale": [1],
    "selectionMode": [1, "selection-mode"],
    "selectedRowCount": [2, "selected-row-count"],
    "selectedRowCountLocalized": [1, "selected-row-count-localized"],
    "bodyRowCount": [2, "body-row-count"],
    "effectiveLocale": [32]
  }, [[4, "calciteInternalTableRowFocusChange", "calciteInternalTableRowFocusChangeHandler"]]]);
function defineCustomElement$1() {
  if (typeof customElements === "undefined") {
    return;
  }
  const components = ["calcite-table-row", "calcite-icon", "calcite-table-cell", "calcite-table-header"];
  components.forEach(tagName => { switch (tagName) {
    case "calcite-table-row":
      if (!customElements.get(tagName)) {
        customElements.define(tagName, TableRow);
      }
      break;
    case "calcite-icon":
      if (!customElements.get(tagName)) {
        (0,_icon_js__WEBPACK_IMPORTED_MODULE_4__.d)();
      }
      break;
    case "calcite-table-cell":
      if (!customElements.get(tagName)) {
        (0,_table_cell_js__WEBPACK_IMPORTED_MODULE_5__.d)();
      }
      break;
    case "calcite-table-header":
      if (!customElements.get(tagName)) {
        (0,_table_header_js__WEBPACK_IMPORTED_MODULE_6__.d)();
      }
      break;
  } });
}
defineCustomElement$1();

const CalciteTableRow = TableRow;
const defineCustomElement = defineCustomElement$1;




/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,