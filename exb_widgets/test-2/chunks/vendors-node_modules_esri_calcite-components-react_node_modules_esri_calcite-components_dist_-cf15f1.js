"use strict";
(self["webpackChunkexb_client"] = self["webpackChunkexb_client"] || []).push([["vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-cf15f1"],{

/***/ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-headless.js":
/*!*******************************************************************************************************************************!*\
  !*** ./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-headless.js ***!
  \*******************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   C: () => (/* binding */ CoreSizing15),
/* harmony export */   a: () => (/* binding */ CoreBreakpointWidthDefaultMd),
/* harmony export */   b: () => (/* binding */ CoreBreakpointWidthDefaultSm),
/* harmony export */   c: () => (/* binding */ CoreBreakpointWidthDefaultXs),
/* harmony export */   d: () => (/* binding */ CoreBreakpointWidthDefaultXxs),
/* harmony export */   e: () => (/* binding */ CoreBreakpointWidthDefaultLg)
/* harmony export */ });
/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-design-system/blob/main/LICENSE.md for details.
 * v1.11.0
 */
/**
 * Do not edit directly
 * Generated on Tue, 21 Nov 2023 22:52:13 GMT
 */
const CoreSizing15 = "48px";
const CoreBreakpointWidthDefaultXxs = "320px";
const CoreBreakpointWidthDefaultXs = "476px";
const CoreBreakpointWidthDefaultSm = "768px";
const CoreBreakpointWidthDefaultMd = "1152px";
const CoreBreakpointWidthDefaultLg = "1440px";




/***/ }),

/***/ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/pagination.js":
/*!*************************************************************************************************************************!*\
  !*** ./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/pagination.js ***!
  \*************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   P: () => (/* binding */ Pagination),
/* harmony export */   d: () => (/* binding */ defineCustomElement)
/* harmony export */ });
/* harmony import */ var _stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @stencil/core/internal/client/index.js */ "./node_modules/@esri/calcite-components-react/node_modules/@stencil/core/internal/client/index.js");
/* harmony import */ var _loadable_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./loadable.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/loadable.js");
/* harmony import */ var _locale_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./locale.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/locale.js");
/* harmony import */ var _t9n_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./t9n.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/t9n.js");
/* harmony import */ var _observers_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./observers.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/observers.js");
/* harmony import */ var _calcite_headless_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./calcite-headless.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-headless.js");
/* harmony import */ var _component_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./component.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/component.js");
/* harmony import */ var _icon_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./icon.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/icon.js");
/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-design-system/blob/main/LICENSE.md for details.
 * v1.11.0
 */









const CSS = {
  page: "page",
  selected: "selected",
  chevron: "chevron",
  disabled: "disabled",
  ellipsis: "ellipsis",
};
const ICONS = {
  next: "chevron-right",
  previous: "chevron-left",
  first: "chevron-start",
  last: "chevron-end",
};

/**
 * A breakpoints lookup object.
 */
const breakpoints = {
  width: {
    large: cssLengthToNumber(_calcite_headless_js__WEBPACK_IMPORTED_MODULE_4__.e),
    medium: cssLengthToNumber(_calcite_headless_js__WEBPACK_IMPORTED_MODULE_4__.a),
    small: cssLengthToNumber(_calcite_headless_js__WEBPACK_IMPORTED_MODULE_4__.b),
    xsmall: cssLengthToNumber(_calcite_headless_js__WEBPACK_IMPORTED_MODULE_4__.c),
    xxsmall: cssLengthToNumber(_calcite_headless_js__WEBPACK_IMPORTED_MODULE_4__.d),
  },
};
function cssLengthToNumber(length) {
  return parseInt(length);
}

const paginationCss = ":host{display:flex;writing-mode:horizontal-tb}:host([scale=s]) .chevron,:host([scale=s]) .page,:host([scale=s]) .ellipsis{block-size:1.5rem;padding-inline:0.25rem;font-size:var(--calcite-font-size--2);line-height:1rem;min-inline-size:1.5rem}:host([scale=m]) .chevron,:host([scale=m]) .page,:host([scale=m]) .ellipsis{block-size:2rem;padding-inline:0.5rem;font-size:var(--calcite-font-size--1);line-height:1rem;min-inline-size:2rem}:host([scale=l]) .chevron,:host([scale=l]) .page,:host([scale=l]) .ellipsis{block-size:2.75rem;font-size:var(--calcite-font-size-0);line-height:1.25rem;min-inline-size:2.75rem}:host([scale=l]) .chevron{padding-inline:0.625rem}:host([scale=l]) .page,:host([scale=l]) .ellipsis{padding-inline:0.75rem}:host button{outline-color:transparent}:host button:focus{outline:2px solid var(--calcite-ui-focus-color, var(--calcite-ui-brand));outline-offset:calc(\n            -2px *\n            calc(\n              1 -\n              2 * clamp(\n                0,\n                var(--calcite-ui-focus-offset-invert),\n                1\n              )\n            )\n          )}.chevron,.page,.ellipsis{margin:0px;box-sizing:border-box;display:flex;align-items:center;justify-content:center;border-style:none;--tw-border-opacity:0;background-color:transparent;padding:0px;vertical-align:baseline;font-family:inherit;font-size:var(--calcite-font-size-0);line-height:1.25rem;color:var(--calcite-ui-text-3)}.chevron,.page{cursor:pointer;border-block:2px solid transparent}.chevron:hover,.page:hover{color:var(--calcite-ui-text-1);transition:all var(--calcite-animation-timing) ease-in-out 0s, outline 0s, outline-offset 0s}.page:hover{border-block-end-color:var(--calcite-ui-border-2)}.page.selected{font-weight:var(--calcite-font-weight-medium);color:var(--calcite-ui-text-1);border-block-end-color:var(--calcite-ui-brand)}.chevron:hover{background-color:var(--calcite-ui-foreground-2);color:var(--calcite-ui-brand)}.chevron:active{background-color:var(--calcite-ui-foreground-3)}.chevron.disabled{pointer-events:none;background-color:transparent}.chevron.disabled>calcite-icon{opacity:var(--calcite-ui-opacity-disabled)}:host([hidden]){display:none}[hidden]{display:none}";

const firstAndLastPageCount = 2;
const ellipsisCount = 2;
const maxItemBreakpoints = {
  large: 11,
  medium: 9,
  small: 7,
  xsmall: 5,
  xxsmall: 1,
};
const Pagination = /*@__PURE__*/ (0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_7__.proxyCustomElement)(class extends _stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_7__.HTMLElement {
  constructor() {
    super();
    this.__registerHost();
    this.__attachShadow();
    this.calcitePaginationChange = (0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_7__.createEvent)(this, "calcitePaginationChange", 6);
    this.resizeObserver = (0,_observers_js__WEBPACK_IMPORTED_MODULE_3__.c)("resize", (entries) => entries.forEach(this.resizeHandler));
    this.resizeHandler = ({ contentRect: { width } }) => this.setMaxItemsToBreakpoint(width);
    this.firstClicked = () => {
      this.startItem = 1;
      this.emitUpdate();
    };
    this.lastClicked = () => {
      this.startItem = this.lastStartItem;
      this.emitUpdate();
    };
    this.previousClicked = async () => {
      await this.previousPage();
      this.emitUpdate();
    };
    this.nextClicked = async () => {
      await this.nextPage();
      this.emitUpdate();
    };
    this.handlePageClick = (event) => {
      const target = event.target;
      this.startItem = parseInt(target.value, 10);
      this.emitUpdate();
    };
    this.groupSeparator = false;
    this.messages = undefined;
    this.messageOverrides = undefined;
    this.numberingSystem = undefined;
    this.pageSize = 20;
    this.scale = "m";
    this.startItem = 1;
    this.totalItems = 0;
    this.defaultMessages = undefined;
    this.effectiveLocale = "";
    this.maxItems = maxItemBreakpoints.xxsmall;
    this.totalPages = undefined;
    this.lastStartItem = undefined;
    this.isXXSmall = undefined;
  }
  onMessagesChange() {
    /* wired up by t9n util */
  }
  handleTotalPages() {
    if (this.pageSize < 1) {
      this.pageSize = 1;
    }
    this.totalPages = this.totalItems / this.pageSize;
  }
  effectiveLocaleChange() {
    (0,_t9n_js__WEBPACK_IMPORTED_MODULE_2__.u)(this, this.effectiveLocale);
  }
  effectiveLocaleWatcher() {
    _locale_js__WEBPACK_IMPORTED_MODULE_1__.n.numberFormatOptions = {
      locale: this.effectiveLocale,
      numberingSystem: this.numberingSystem,
      useGrouping: this.groupSeparator,
    };
  }
  handleLastStartItemChange() {
    const { totalItems, pageSize, totalPages } = this;
    this.lastStartItem =
      (totalItems % pageSize === 0 ? totalItems - pageSize : Math.floor(totalPages) * pageSize) + 1;
  }
  handleIsXXSmall() {
    this.isXXSmall = this.maxItems === maxItemBreakpoints.xxsmall;
  }
  // --------------------------------------------------------------------------
  //
  //  Lifecycle
  //
  // --------------------------------------------------------------------------
  connectedCallback() {
    (0,_locale_js__WEBPACK_IMPORTED_MODULE_1__.c)(this);
    (0,_t9n_js__WEBPACK_IMPORTED_MODULE_2__.c)(this);
    this.resizeObserver?.observe(this.el);
  }
  async componentWillLoad() {
    await (0,_t9n_js__WEBPACK_IMPORTED_MODULE_2__.s)(this);
    (0,_loadable_js__WEBPACK_IMPORTED_MODULE_0__.a)(this);
    this.handleTotalPages();
    this.handleLastStartItemChange();
    this.handleIsXXSmall();
  }
  componentDidLoad() {
    (0,_loadable_js__WEBPACK_IMPORTED_MODULE_0__.s)(this);
    this.setMaxItemsToBreakpoint(this.el.clientWidth);
  }
  disconnectedCallback() {
    (0,_locale_js__WEBPACK_IMPORTED_MODULE_1__.d)(this);
    (0,_t9n_js__WEBPACK_IMPORTED_MODULE_2__.d)(this);
    this.resizeObserver?.disconnect();
  }
  // --------------------------------------------------------------------------
  //
  //  Public Methods
  //
  // --------------------------------------------------------------------------
  /** Sets focus on the component's first focusable element. */
  async setFocus() {
    await (0,_loadable_js__WEBPACK_IMPORTED_MODULE_0__.c)(this);
    this.el.focus();
  }
  /** Go to the next page of results. */
  async nextPage() {
    this.startItem = Math.min(this.lastStartItem, this.startItem + this.pageSize);
  }
  /** Go to the previous page of results. */
  async previousPage() {
    this.startItem = Math.max(1, this.startItem - this.pageSize);
  }
  // --------------------------------------------------------------------------
  //
  //  Private Methods
  //
  // --------------------------------------------------------------------------
  setMaxItemsToBreakpoint(width) {
    if (!breakpoints || !width) {
      return;
    }
    if (width >= breakpoints.width.medium) {
      this.maxItems = maxItemBreakpoints.large;
      return;
    }
    if (width >= breakpoints.width.small) {
      this.maxItems = maxItemBreakpoints.medium;
      return;
    }
    if (width >= breakpoints.width.xsmall) {
      this.maxItems = maxItemBreakpoints.small;
      return;
    }
    if (width >= breakpoints.width.xxsmall) {
      this.maxItems = maxItemBreakpoints.xsmall;
      return;
    }
    this.maxItems = maxItemBreakpoints.xxsmall;
  }
  showStartEllipsis() {
    return (this.totalPages > this.maxItems &&
      Math.floor(this.startItem / this.pageSize) >
        this.maxItems - firstAndLastPageCount - ellipsisCount);
  }
  showEndEllipsis() {
    return (this.totalPages > this.maxItems &&
      (this.totalItems - this.startItem) / this.pageSize >
        this.maxItems - firstAndLastPageCount - (ellipsisCount - 1));
  }
  emitUpdate() {
    this.calcitePaginationChange.emit();
  }
  //--------------------------------------------------------------------------
  //
  //  Render Methods
  //
  //--------------------------------------------------------------------------
  renderEllipsis(type) {
    return ((0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_7__.h)("span", { class: CSS.ellipsis, "data-test-ellipsis": type, key: type }, "\u2026"));
  }
  renderItems() {
    const { totalItems, pageSize, startItem, maxItems, totalPages, lastStartItem, isXXSmall } = this;
    const items = [];
    if (isXXSmall) {
      items.push(this.renderPage(startItem));
      return items;
    }
    const renderFirstPage = totalItems > pageSize;
    const renderStartEllipsis = this.showStartEllipsis();
    const renderEndEllipsis = this.showEndEllipsis();
    if (renderFirstPage) {
      items.push(this.renderPage(1));
    }
    if (renderStartEllipsis) {
      items.push(this.renderEllipsis("start"));
    }
    const remainingItems = maxItems -
      firstAndLastPageCount -
      (renderEndEllipsis ? 1 : 0) -
      (renderStartEllipsis ? 1 : 0);
    let end;
    let nextStart;
    // if we don't need ellipses render the whole set
    if (totalPages - 1 <= remainingItems) {
      nextStart = 1 + pageSize;
      end = lastStartItem - pageSize;
    }
    else {
      // if we're within max pages of page 1
      if (startItem / pageSize < remainingItems) {
        nextStart = 1 + pageSize;
        end = 1 + remainingItems * pageSize;
      }
      else {
        // if we're within max pages of last page
        if (startItem + remainingItems * pageSize >= totalItems) {
          nextStart = lastStartItem - remainingItems * pageSize;
          end = lastStartItem - pageSize;
        }
        else {
          // if we're within the center pages
          nextStart = startItem - pageSize * ((remainingItems - 1) / 2);
          end = startItem + pageSize * ((remainingItems - 1) / 2);
        }
      }
    }
    for (let i = 0; i < remainingItems && nextStart <= end; i++) {
      items.push(this.renderPage(nextStart));
      nextStart = nextStart + pageSize;
    }
    if (renderEndEllipsis) {
      items.push(this.renderEllipsis("end"));
    }
    items.push(this.renderPage(lastStartItem));
    return items;
  }
  renderPage(start) {
    const { pageSize } = this;
    const page = Math.floor(start / pageSize) + (pageSize === 1 ? 0 : 1);
    _locale_js__WEBPACK_IMPORTED_MODULE_1__.n.numberFormatOptions = {
      locale: this.effectiveLocale,
      numberingSystem: this.numberingSystem,
      useGrouping: this.groupSeparator,
    };
    const displayedPage = _locale_js__WEBPACK_IMPORTED_MODULE_1__.n.localize(page.toString());
    const selected = start === this.startItem;
    return ((0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_7__.h)("button", { "aria-current": selected ? "page" : "false", class: {
        [CSS.page]: true,
        [CSS.selected]: selected,
      }, onClick: this.handlePageClick, value: start }, displayedPage));
  }
  renderPreviousChevron() {
    const { pageSize, startItem, messages } = this;
    const disabled = pageSize === 1 ? startItem <= pageSize : startItem < pageSize;
    return ((0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_7__.h)("button", { "aria-label": messages.previous, class: {
        [CSS.chevron]: true,
        [CSS.disabled]: disabled,
      }, "data-test-chevron": "previous", disabled: disabled, key: "previous", onClick: this.previousClicked }, (0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_7__.h)("calcite-icon", { flipRtl: true, icon: ICONS.previous, scale: (0,_component_js__WEBPACK_IMPORTED_MODULE_5__.g)(this.scale) })));
  }
  renderNextChevron() {
    const { totalItems, pageSize, startItem, messages } = this;
    const disabled = pageSize === 1 ? startItem + pageSize > totalItems : startItem + pageSize > totalItems;
    return ((0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_7__.h)("button", { "aria-label": messages.next, class: {
        [CSS.chevron]: true,
        [CSS.disabled]: disabled,
      }, "data-test-chevron": "next", disabled: disabled, key: "next-button", onClick: this.nextClicked }, (0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_7__.h)("calcite-icon", { flipRtl: true, icon: ICONS.next, scale: (0,_component_js__WEBPACK_IMPORTED_MODULE_5__.g)(this.scale) })));
  }
  renderFirstChevron() {
    const { messages, startItem, isXXSmall } = this;
    const disabled = startItem === 1;
    return isXXSmall ? ((0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_7__.h)("button", { "aria-label": messages.first, class: {
        [CSS.chevron]: true,
        [CSS.disabled]: disabled,
      }, disabled: disabled, key: "first-button", onClick: this.firstClicked }, (0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_7__.h)("calcite-icon", { flipRtl: true, icon: ICONS.first, scale: (0,_component_js__WEBPACK_IMPORTED_MODULE_5__.g)(this.scale) }))) : null;
  }
  renderLastChevron() {
    const { messages, startItem, isXXSmall, lastStartItem } = this;
    const disabled = startItem === lastStartItem;
    return isXXSmall ? ((0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_7__.h)("button", { "aria-label": messages.last, class: {
        [CSS.chevron]: true,
        [CSS.disabled]: disabled,
      }, disabled: disabled, key: "last-button", onClick: this.lastClicked }, (0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_7__.h)("calcite-icon", { flipRtl: true, icon: ICONS.last, scale: (0,_component_js__WEBPACK_IMPORTED_MODULE_5__.g)(this.scale) }))) : null;
  }
  render() {
    return ((0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_7__.h)(_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_7__.Fragment, null, this.renderFirstChevron(), this.renderPreviousChevron(), this.renderItems(), this.renderNextChevron(), this.renderLastChevron()));
  }
  static get delegatesFocus() { return true; }
  static get assetsDirs() { return ["assets"]; }
  get el() { return this; }
  static get watchers() { return {
    "messageOverrides": ["onMessagesChange"],
    "totalItems": ["handleTotalPages", "handleLastStartItemChange"],
    "pageSize": ["handleTotalPages", "handleLastStartItemChange"],
    "effectiveLocale": ["effectiveLocaleChange", "effectiveLocaleWatcher"],
    "totalPages": ["handleLastStartItemChange"],
    "maxItems": ["handleIsXXSmall"]
  }; }
  static get style() { return paginationCss; }
}, [17, "calcite-pagination", {
    "groupSeparator": [516, "group-separator"],
    "messages": [1040],
    "messageOverrides": [1040],
    "numberingSystem": [1, "numbering-system"],
    "pageSize": [1538, "page-size"],
    "scale": [513],
    "startItem": [1538, "start-item"],
    "totalItems": [514, "total-items"],
    "defaultMessages": [32],
    "effectiveLocale": [32],
    "maxItems": [32],
    "totalPages": [32],
    "lastStartItem": [32],
    "isXXSmall": [32],
    "setFocus": [64],
    "nextPage": [64],
    "previousPage": [64]
  }]);
function defineCustomElement() {
  if (typeof customElements === "undefined") {
    return;
  }
  const components = ["calcite-pagination", "calcite-icon"];
  components.forEach(tagName => { switch (tagName) {
    case "calcite-pagination":
      if (!customElements.get(tagName)) {
        customElements.define(tagName, Pagination);
      }
      break;
    case "calcite-icon":
      if (!customElements.get(tagName)) {
        (0,_icon_js__WEBPACK_IMPORTED_MODULE_6__.d)();
      }
      break;
  } });
}
defineCustomElement();




/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,