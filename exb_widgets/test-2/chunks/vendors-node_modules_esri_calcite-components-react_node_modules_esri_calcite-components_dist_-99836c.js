"use strict";
(self["webpackChunkexb_client"] = self["webpackChunkexb_client"] || []).push([["vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-99836c"],{

/***/ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/ExpandToggle.js":
/*!***************************************************************************************************************************!*\
  !*** ./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/ExpandToggle.js ***!
  \***************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   E: () => (/* binding */ ExpandToggle),
/* harmony export */   a: () => (/* binding */ overflowActions),
/* harmony export */   b: () => (/* binding */ getOverflowCount),
/* harmony export */   g: () => (/* binding */ geActionDimensions),
/* harmony export */   o: () => (/* binding */ overflowActionsDebounceInMs),
/* harmony export */   q: () => (/* binding */ queryActions),
/* harmony export */   t: () => (/* binding */ toggleChildActionText)
/* harmony export */ });
/* harmony import */ var _stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @stencil/core/internal/client/index.js */ "./node_modules/@esri/calcite-components-react/node_modules/@stencil/core/internal/client/index.js");
/* harmony import */ var _dom_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dom.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/dom.js");
/* harmony import */ var _action_group_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./action-group.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/action-group.js");
/* harmony import */ var _action_menu_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./action-menu.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/action-menu.js");
/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-design-system/blob/main/LICENSE.md for details.
 * v1.11.0
 */





const overflowActionsDebounceInMs = 150;
const groupBufferPx = 2;
const getAverage = (arr) => arr.reduce((p, c) => p + c, 0) / arr.length;
const geActionDimensions = (actions) => {
  const actionsNotSlotted = actions.filter((action) => action.slot !== _action_group_js__WEBPACK_IMPORTED_MODULE_1__.S.menuActions);
  const actionLen = actionsNotSlotted?.length;
  return {
    actionWidth: actionLen ? getAverage(actionsNotSlotted.map((action) => action.clientWidth || 0)) : 0,
    actionHeight: actionLen ? getAverage(actionsNotSlotted.map((action) => action.clientHeight || 0)) : 0,
  };
};
const getMaxActionCount = ({ width, actionWidth, layout, height, actionHeight, groupCount, }) => {
  const maxContainerPx = layout === "horizontal" ? width : height;
  const avgItemPx = layout === "horizontal" ? actionWidth : actionHeight;
  return Math.floor((maxContainerPx - groupCount * groupBufferPx) / avgItemPx);
};
const getOverflowCount = ({ layout, actionCount, actionWidth, width, actionHeight, height, groupCount, }) => {
  return Math.max(actionCount - getMaxActionCount({ width, actionWidth, layout, height, actionHeight, groupCount }), 0);
};
const queryActions = (el) => {
  return Array.from(el.querySelectorAll("calcite-action")).filter((action) => action.closest("calcite-action-menu") ? action.slot === _action_menu_js__WEBPACK_IMPORTED_MODULE_2__.S.trigger : true);
};
const overflowActions = ({ actionGroups, expanded, overflowCount, }) => {
  let needToSlotCount = overflowCount;
  actionGroups.reverse().forEach((group) => {
    let slottedWithinGroupCount = 0;
    const groupActions = queryActions(group).reverse();
    groupActions.forEach((groupAction) => {
      if (groupAction.slot === _action_group_js__WEBPACK_IMPORTED_MODULE_1__.S.menuActions) {
        groupAction.removeAttribute("slot");
        groupAction.textEnabled = expanded;
      }
    });
    if (needToSlotCount > 0) {
      groupActions.some((groupAction) => {
        const unslottedActions = groupActions.filter((action) => !action.slot);
        if (unslottedActions.length > 1 && groupActions.length > 2 && !groupAction.closest("calcite-action-menu")) {
          groupAction.textEnabled = true;
          groupAction.setAttribute("slot", _action_group_js__WEBPACK_IMPORTED_MODULE_1__.S.menuActions);
          slottedWithinGroupCount++;
          if (slottedWithinGroupCount > 1) {
            needToSlotCount--;
          }
        }
        return needToSlotCount < 1;
      });
    }
    (0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_3__.forceUpdate)(group);
  });
};

const ICONS = {
  chevronsLeft: "chevrons-left",
  chevronsRight: "chevrons-right",
};
function getCalcitePosition(position, el) {
  return position || el.closest("calcite-shell-panel")?.position || "start";
}
function toggleChildActionText({ el, expanded, }) {
  queryActions(el)
    .filter((el) => el.slot !== _action_group_js__WEBPACK_IMPORTED_MODULE_1__.S.menuActions)
    .forEach((action) => (action.textEnabled = expanded));
  el.querySelectorAll("calcite-action-group, calcite-action-menu").forEach((el) => (el.expanded = expanded));
}
const setTooltipReference = ({ tooltip, referenceElement, expanded, ref, }) => {
  if (tooltip) {
    tooltip.referenceElement = !expanded && referenceElement ? referenceElement : null;
  }
  if (ref) {
    ref(referenceElement);
  }
  return referenceElement;
};
const ExpandToggle = ({ expanded, expandText, collapseText, toggle, el, position, tooltip, ref, scale, }) => {
  const rtl = (0,_dom_js__WEBPACK_IMPORTED_MODULE_0__.b)(el) === "rtl";
  const text = expanded ? collapseText : expandText;
  const icons = [ICONS.chevronsLeft, ICONS.chevronsRight];
  if (rtl) {
    icons.reverse();
  }
  const end = getCalcitePosition(position, el) === "end";
  const expandIcon = end ? icons[1] : icons[0];
  const collapseIcon = end ? icons[0] : icons[1];
  const actionNode = ((0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_3__.h)("calcite-action", { icon: expanded ? expandIcon : collapseIcon, onClick: toggle, scale: scale, text: text, textEnabled: expanded, title: !expanded && !tooltip ? text : null, 
    // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)
    ref: (referenceElement) => setTooltipReference({ tooltip, referenceElement, expanded, ref }) }));
  return actionNode;
};




/***/ }),

/***/ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/action-group.js":
/*!***************************************************************************************************************************!*\
  !*** ./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/action-group.js ***!
  \***************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   A: () => (/* binding */ ActionGroup),
/* harmony export */   S: () => (/* binding */ SLOTS),
/* harmony export */   d: () => (/* binding */ defineCustomElement)
/* harmony export */ });
/* harmony import */ var _stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @stencil/core/internal/client/index.js */ "./node_modules/@esri/calcite-components-react/node_modules/@stencil/core/internal/client/index.js");
/* harmony import */ var _conditionalSlot_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./conditionalSlot.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/conditionalSlot.js");
/* harmony import */ var _loadable_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./loadable.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/loadable.js");
/* harmony import */ var _locale_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./locale.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/locale.js");
/* harmony import */ var _t9n_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./t9n.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/t9n.js");
/* harmony import */ var _action_menu_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./action-menu.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/action-menu.js");
/* harmony import */ var _dom_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./dom.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/dom.js");
/* harmony import */ var _action_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./action.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/action.js");
/* harmony import */ var _icon_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./icon.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/icon.js");
/* harmony import */ var _loader_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./loader.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/loader.js");
/* harmony import */ var _popover_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./popover.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/popover.js");
/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-design-system/blob/main/LICENSE.md for details.
 * v1.11.0
 */












const SLOTS = {
  menuActions: "menu-actions",
  menuTooltip: "menu-tooltip",
};
const ICONS = {
  menu: "ellipsis",
};
const CSS = {
  container: "container",
};

const actionGroupCss = ":host{box-sizing:border-box;background-color:var(--calcite-ui-foreground-1);color:var(--calcite-ui-text-2);font-size:var(--calcite-font-size--1)}:host *{box-sizing:border-box}:host{display:flex;flex-direction:column;padding:0px;--calcite-action-group-columns:3;--calcite-action-group-gap:1px;--calcite-action-group-padding:1px}.container{display:flex;flex-grow:1;flex-direction:column}:host([columns=\"1\"]){--calcite-action-group-columns:1}:host([columns=\"2\"]){--calcite-action-group-columns:2}:host([columns=\"3\"]){--calcite-action-group-columns:3}:host([columns=\"4\"]){--calcite-action-group-columns:4}:host([columns=\"5\"]){--calcite-action-group-columns:5}:host([columns=\"6\"]){--calcite-action-group-columns:6}:host(:first-child){padding-block-start:0px}:host([layout=horizontal]),:host([layout=horizontal]) .container{flex-direction:row}:host([layout=grid]){display:grid}:host([layout=grid]) .container{display:grid;place-content:stretch;background-color:var(--calcite-ui-background);gap:var(--calcite-action-group-gap);padding:var(--calcite-action-group-gap);grid-template-columns:repeat(var(--calcite-action-group-columns), auto)}:host([hidden]){display:none}[hidden]{display:none}";

const ActionGroup = /*@__PURE__*/ (0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_10__.proxyCustomElement)(class extends _stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_10__.HTMLElement {
  constructor() {
    super();
    this.__registerHost();
    this.__attachShadow();
    // --------------------------------------------------------------------------
    //
    //  Private Methods
    //
    // --------------------------------------------------------------------------
    this.setMenuOpen = (event) => {
      this.menuOpen = !!event.target.open;
    };
    this.handleMenuActionsSlotChange = (event) => {
      this.hasMenuActions = (0,_dom_js__WEBPACK_IMPORTED_MODULE_5__.e)(event);
    };
    this.expanded = false;
    this.label = undefined;
    this.layout = "vertical";
    this.columns = undefined;
    this.menuOpen = false;
    this.overlayPositioning = "absolute";
    this.scale = undefined;
    this.messages = undefined;
    this.messageOverrides = undefined;
    this.effectiveLocale = "";
    this.defaultMessages = undefined;
    this.hasMenuActions = false;
  }
  expandedHandler() {
    this.menuOpen = false;
  }
  onMessagesChange() {
    /* wired up by t9n util */
  }
  effectiveLocaleChange() {
    (0,_t9n_js__WEBPACK_IMPORTED_MODULE_3__.u)(this, this.effectiveLocale);
  }
  //--------------------------------------------------------------------------
  //
  //  Public Methods
  //
  //--------------------------------------------------------------------------
  /** Sets focus on the component's first focusable element. */
  async setFocus() {
    await (0,_loadable_js__WEBPACK_IMPORTED_MODULE_1__.c)(this);
    this.el.focus();
  }
  // --------------------------------------------------------------------------
  //
  //  Lifecycle
  //
  // --------------------------------------------------------------------------
  connectedCallback() {
    (0,_locale_js__WEBPACK_IMPORTED_MODULE_2__.c)(this);
    (0,_t9n_js__WEBPACK_IMPORTED_MODULE_3__.c)(this);
    (0,_conditionalSlot_js__WEBPACK_IMPORTED_MODULE_0__.c)(this);
  }
  disconnectedCallback() {
    (0,_locale_js__WEBPACK_IMPORTED_MODULE_2__.d)(this);
    (0,_t9n_js__WEBPACK_IMPORTED_MODULE_3__.d)(this);
    (0,_conditionalSlot_js__WEBPACK_IMPORTED_MODULE_0__.d)(this);
  }
  async componentWillLoad() {
    (0,_loadable_js__WEBPACK_IMPORTED_MODULE_1__.a)(this);
    await (0,_t9n_js__WEBPACK_IMPORTED_MODULE_3__.s)(this);
  }
  componentDidLoad() {
    (0,_loadable_js__WEBPACK_IMPORTED_MODULE_1__.s)(this);
  }
  // --------------------------------------------------------------------------
  //
  //  Component Methods
  //
  // --------------------------------------------------------------------------
  renderMenu() {
    const { expanded, menuOpen, scale, layout, messages, overlayPositioning, hasMenuActions } = this;
    return ((0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_10__.h)("calcite-action-menu", { expanded: expanded, flipPlacements: ["left", "right"], hidden: !hasMenuActions, label: messages.more, onCalciteActionMenuOpen: this.setMenuOpen, open: menuOpen, overlayPositioning: overlayPositioning, placement: layout === "horizontal" ? "bottom-start" : "leading-start", scale: scale }, (0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_10__.h)("calcite-action", { icon: ICONS.menu, scale: scale, slot: _action_menu_js__WEBPACK_IMPORTED_MODULE_4__.S.trigger, text: messages.more, textEnabled: expanded }), (0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_10__.h)("slot", { name: SLOTS.menuActions, onSlotchange: this.handleMenuActionsSlotChange }), (0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_10__.h)("slot", { name: SLOTS.menuTooltip, slot: _action_menu_js__WEBPACK_IMPORTED_MODULE_4__.S.tooltip })));
  }
  render() {
    return ((0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_10__.h)("div", { "aria-label": this.label, class: CSS.container, role: "group" }, (0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_10__.h)("slot", null), this.renderMenu()));
  }
  static get delegatesFocus() { return true; }
  static get assetsDirs() { return ["assets"]; }
  get el() { return this; }
  static get watchers() { return {
    "expanded": ["expandedHandler"],
    "messageOverrides": ["onMessagesChange"],
    "effectiveLocale": ["effectiveLocaleChange"]
  }; }
  static get style() { return actionGroupCss; }
}, [17, "calcite-action-group", {
    "expanded": [516],
    "label": [1],
    "layout": [513],
    "columns": [514],
    "menuOpen": [1540, "menu-open"],
    "overlayPositioning": [513, "overlay-positioning"],
    "scale": [513],
    "messages": [1040],
    "messageOverrides": [1040],
    "effectiveLocale": [32],
    "defaultMessages": [32],
    "hasMenuActions": [32],
    "setFocus": [64]
  }]);
function defineCustomElement() {
  if (typeof customElements === "undefined") {
    return;
  }
  const components = ["calcite-action-group", "calcite-action", "calcite-action-menu", "calcite-icon", "calcite-loader", "calcite-popover"];
  components.forEach(tagName => { switch (tagName) {
    case "calcite-action-group":
      if (!customElements.get(tagName)) {
        customElements.define(tagName, ActionGroup);
      }
      break;
    case "calcite-action":
      if (!customElements.get(tagName)) {
        (0,_action_js__WEBPACK_IMPORTED_MODULE_6__.d)();
      }
      break;
    case "calcite-action-menu":
      if (!customElements.get(tagName)) {
        (0,_action_menu_js__WEBPACK_IMPORTED_MODULE_4__.d)();
      }
      break;
    case "calcite-icon":
      if (!customElements.get(tagName)) {
        (0,_icon_js__WEBPACK_IMPORTED_MODULE_7__.d)();
      }
      break;
    case "calcite-loader":
      if (!customElements.get(tagName)) {
        (0,_loader_js__WEBPACK_IMPORTED_MODULE_8__.d)();
      }
      break;
    case "calcite-popover":
      if (!customElements.get(tagName)) {
        (0,_popover_js__WEBPACK_IMPORTED_MODULE_9__.d)();
      }
      break;
  } });
}
defineCustomElement();




/***/ }),

/***/ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/conditionalSlot.js":
/*!******************************************************************************************************************************!*\
  !*** ./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/conditionalSlot.js ***!
  \******************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   c: () => (/* binding */ connectConditionalSlotComponent),
/* harmony export */   d: () => (/* binding */ disconnectConditionalSlotComponent)
/* harmony export */ });
/* harmony import */ var _stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @stencil/core/internal/client/index.js */ "./node_modules/@esri/calcite-components-react/node_modules/@stencil/core/internal/client/index.js");
/* harmony import */ var _observers_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./observers.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/observers.js");
/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-design-system/blob/main/LICENSE.md for details.
 * v1.11.0
 */



const observed = new Set();
let mutationObserver;
const observerOptions = { childList: true };
/**
 * Helper to set up a conditional slot component on connectedCallback.
 *
 * @param component
 * @deprecated Use `onSlotchange` event with `slotChangeHasAssignedElement` DOM utility instead.
 *
 * ```
 * <slot onSlotchange={(event) => this.mySlotHasElement = slotChangeHasAssignedElement(event)} />}
 * ```
 */
function connectConditionalSlotComponent(component) {
  if (!mutationObserver) {
    mutationObserver = (0,_observers_js__WEBPACK_IMPORTED_MODULE_0__.c)("mutation", processMutations);
  }
  mutationObserver.observe(component.el, observerOptions);
}
/**
 * Helper to tear down a conditional slot component on disconnectedCallback.
 *
 * @param component
 * @deprecated Use `onSlotchange` event with `slotChangeHasAssignedElement` DOM utility instead.
 *
 * ```
 * <slot onSlotchange={(event) => this.mySlotHasElement = slotChangeHasAssignedElement(event)} />}
 * ```
 */
function disconnectConditionalSlotComponent(component) {
  observed.delete(component.el);
  // we explicitly process queued mutations and disconnect and reconnect
  // the observer until MutationObserver gets an `unobserve` method
  // see https://github.com/whatwg/dom/issues/126
  processMutations(mutationObserver.takeRecords());
  mutationObserver.disconnect();
  for (const [element] of observed.entries()) {
    mutationObserver.observe(element, observerOptions);
  }
}
function processMutations(mutations) {
  mutations.forEach(({ target }) => {
    (0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_1__.forceUpdate)(target);
  });
}




/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2lkZ2V0cy9jaHVua3MvdmVuZG9ycy1ub2RlX21vZHVsZXNfZXNyaV9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Rfbm9kZV9tb2R1bGVzX2VzcmlfY2FsY2l0ZS1jb21wb25lbnRzX2Rpc3RfLTk5ODM2Yy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDd0U7QUFDMUI7QUFDRztBQUNIOztBQUU5QztBQUNBO0FBQ0E7QUFDQTtBQUNBLHVFQUF1RSwrQ0FBTztBQUM5RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkIsK0RBQStEO0FBQzVGO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCLDRFQUE0RTtBQUN4RyxvREFBb0QsOERBQThEO0FBQ2xIO0FBQ0E7QUFDQSxzSUFBc0ksOENBQUs7QUFDM0k7QUFDQSwyQkFBMkIsd0NBQXdDO0FBQ25FO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrQkFBK0IsK0NBQU87QUFDdEM7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQ0FBMkMsK0NBQU87QUFDbEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0EsSUFBSSxtRkFBVztBQUNmLEdBQUc7QUFDSDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlDQUFpQyxlQUFlO0FBQ2hEO0FBQ0EsZ0NBQWdDLCtDQUFPO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBLCtCQUErQiwyQ0FBMkM7QUFDMUU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixnRkFBZ0Y7QUFDeEcsY0FBYywwQ0FBYTtBQUMzQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLHlFQUFDLHFCQUFxQjtBQUM1QztBQUNBLHFEQUFxRCwwQ0FBMEMsR0FB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QUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIsd0VBQXdFO0FBQy9GO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLGdEQUFjO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLHdFQUF3RTtBQUMvRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLFFBQVE7QUFDL0IsSUFBSSxtRkFBVztBQUNmLEdBQUc7QUFDSDs7QUFFeUYiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9leGItY2xpZW50Ly4vbm9kZV9tb2R1bGVzL0Blc3JpL2NhbGNpdGUtY29tcG9uZW50cy1yZWFjdC9ub2RlX21vZHVsZXMvQGVzcmkvY2FsY2l0ZS1jb21wb25lbnRzL2Rpc3QvY29tcG9uZW50cy9FeHBhbmRUb2dnbGUuanMiLCJ3ZWJwYWNrOi8vZXhiLWNsaWVudC8uL25vZGVfbW9kdWxlcy9AZXNyaS9jYWxjaXRlLWNvbXBvbmVudHMtcmVhY3Qvbm9kZV9tb2R1bGVzL0Blc3JpL2NhbGNpdGUtY29tcG9uZW50cy9kaXN0L2NvbXBvbmVudHMvYWN0aW9uLWdyb3VwLmpzIiwid2VicGFjazovL2V4Yi1jbGllbnQvLi9ub2RlX21vZHVsZXMvQGVzcmkvY2FsY2l0ZS1jb21wb25lbnRzLXJlYWN0L25vZGVfbW9kdWxlcy9AZXNyaS9jYWxjaXRlLWNvbXBvbmVudHMvZGlzdC9jb21wb25lbnRzL2NvbmRpdGlvbmFsU2xvdC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiFcbiAqIEFsbCBtYXRlcmlhbCBjb3B5cmlnaHQgRVNSSSwgQWxsIFJpZ2h0cyBSZXNlcnZlZCwgdW5sZXNzIG90aGVyd2lzZSBzcGVjaWZpZWQuXG4gKiBTZWUgaHR0cHM6Ly9naXRodWIuY29tL0VzcmkvY2FsY2l0ZS1kZXNpZ24tc3lzdGVtL2Jsb2IvbWFpbi9MSUNFTlNFLm1kIGZvciBkZXRhaWxzLlxuICogdjEuMTEuMFxuICovXG5pbXBvcnQgeyBmb3JjZVVwZGF0ZSwgaCB9IGZyb20gJ0BzdGVuY2lsL2NvcmUvaW50ZXJuYWwvY2xpZW50L2luZGV4LmpzJztcbmltcG9ydCB7IGIgYXMgZ2V0RWxlbWVudERpciB9IGZyb20gJy4vZG9tLmpzJztcbmltcG9ydCB7IFMgYXMgU0xPVFMkMSB9IGZyb20gJy4vYWN0aW9uLWdyb3VwLmpzJztcbmltcG9ydCB7IFMgYXMgU0xPVFMgfSBmcm9tICcuL2FjdGlvbi1tZW51LmpzJztcblxuY29uc3Qgb3ZlcmZsb3dBY3Rpb25zRGVib3VuY2VJbk1zID0gMTUwO1xuY29uc3QgZ3JvdXBCdWZmZXJQeCA9IDI7XG5jb25zdCBnZXRBdmVyYWdlID0gKGFycikgPT4gYXJyLnJlZHVjZSgocCwgYykgPT4gcCArIGMsIDApIC8gYXJyLmxlbmd0aDtcbmNvbnN0IGdlQWN0aW9uRGltZW5zaW9ucyA9IChhY3Rpb25zKSA9PiB7XG4gIGNvbnN0IGFjdGlvbnNOb3RTbG90dGVkID0gYWN0aW9ucy5maWx0ZXIoKGFjdGlvbikgPT4gYWN0aW9uLnNsb3QgIT09IFNMT1RTJDEubWVudUFjdGlvbnMpO1xuICBjb25zdCBhY3Rpb25MZW4gPSBhY3Rpb25zTm90U2xvdHRlZD8ubGVuZ3RoO1xuICByZXR1cm4ge1xuICAgIGFjdGlvbldpZHRoOiBhY3Rpb25MZW4gPyBnZXRBdmVyYWdlKGFjdGlvbnNOb3RTbG90dGVkLm1hcCgoYWN0aW9uKSA9PiBhY3Rpb24uY2xpZW50V2lkdGggfHwgMCkpIDogMCxcbiAgICBhY3Rpb25IZWlnaHQ6IGFjdGlvbkxlbiA/IGdldEF2ZXJhZ2UoYWN0aW9uc05vdFNsb3R0ZWQubWFwKChhY3Rpb24pID0+IGFjdGlvbi5jbGllbnRIZWlnaHQgfHwgMCkpIDogMCxcbiAgfTtcbn07XG5jb25zdCBnZXRNYXhBY3Rpb25Db3VudCA9ICh7IHdpZHRoLCBhY3Rpb25XaWR0aCwgbGF5b3V0LCBoZWlnaHQsIGFjdGlvbkhlaWdodCwgZ3JvdXBDb3VudCwgfSkgPT4ge1xuICBjb25zdCBtYXhDb250YWluZXJQeCA9IGxheW91dCA9PT0gXCJob3Jpem9udGFsXCIgPyB3aWR0aCA6IGhlaWdodDtcbiAgY29uc3QgYXZnSXRlbVB4ID0gbGF5b3V0ID09PSBcImhvcml6b250YWxcIiA/IGFjdGlvbldpZHRoIDogYWN0aW9uSGVpZ2h0O1xuICByZXR1cm4gTWF0aC5mbG9vcigobWF4Q29udGFpbmVyUHggLSBncm91cENvdW50ICogZ3JvdXBCdWZmZXJQeCkgLyBhdmdJdGVtUHgpO1xufTtcbmNvbnN0IGdldE92ZXJmbG93Q291bnQgPSAoeyBsYXlvdXQsIGFjdGlvbkNvdW50LCBhY3Rpb25XaWR0aCwgd2lkdGgsIGFjdGlvbkhlaWdodCwgaGVpZ2h0LCBncm91cENvdW50LCB9KSA9PiB7XG4gIHJldHVybiBNYXRoLm1heChhY3Rpb25Db3VudCAtIGdldE1heEFjdGlvbkNvdW50KHsgd2lkdGgsIGFjdGlvbldpZHRoLCBsYXlvdXQsIGhlaWdodCwgYWN0aW9uSGVpZ2h0LCBncm91cENvdW50IH0pLCAwKTtcbn07XG5jb25zdCBxdWVyeUFjdGlvbnMgPSAoZWwpID0+IHtcbiAgcmV0dXJuIEFycmF5LmZyb20oZWwucXVlcnlTZWxlY3RvckFsbChcImNhbGNpdGUtYWN0aW9uXCIpKS5maWx0ZXIoKGFjdGlvbikgPT4gYWN0aW9uLmNsb3Nlc3QoXCJjYWxjaXRlLWFjdGlvbi1tZW51XCIpID8gYWN0aW9uLnNsb3QgPT09IFNMT1RTLnRyaWdnZXIgOiB0cnVlKTtcbn07XG5jb25zdCBvdmVyZmxvd0FjdGlvbnMgPSAoeyBhY3Rpb25Hcm91cHMsIGV4cGFuZGVkLCBvdmVyZmxvd0NvdW50LCB9KSA9PiB7XG4gIGxldCBuZWVkVG9TbG90Q291bnQgPSBvdmVyZmxvd0NvdW50O1xuICBhY3Rpb25Hcm91cHMucmV2ZXJzZSgpLmZvckVhY2goKGdyb3VwKSA9PiB7XG4gICAgbGV0IHNsb3R0ZWRXaXRoaW5Hcm91cENvdW50ID0gMDtcbiAgICBjb25zdCBncm91cEFjdGlvbnMgPSBxdWVyeUFjdGlvbnMoZ3JvdXApLnJldmVyc2UoKTtcbiAgICBncm91cEFjdGlvbnMuZm9yRWFjaCgoZ3JvdXBBY3Rpb24pID0+IHtcbiAgICAgIGlmIChncm91cEFjdGlvbi5zbG90ID09PSBTTE9UUyQxLm1lbnVBY3Rpb25zKSB7XG4gICAgICAgIGdyb3VwQWN0aW9uLnJlbW92ZUF0dHJpYnV0ZShcInNsb3RcIik7XG4gICAgICAgIGdyb3VwQWN0aW9uLnRleHRFbmFibGVkID0gZXhwYW5kZWQ7XG4gICAgICB9XG4gICAgfSk7XG4gICAgaWYgKG5lZWRUb1Nsb3RDb3VudCA+IDApIHtcbiAgICAgIGdyb3VwQWN0aW9ucy5zb21lKChncm91cEFjdGlvbikgPT4ge1xuICAgICAgICBjb25zdCB1bnNsb3R0ZWRBY3Rpb25zID0gZ3JvdXBBY3Rpb25zLmZpbHRlcigoYWN0aW9uKSA9PiAhYWN0aW9uLnNsb3QpO1xuICAgICAgICBpZiAodW5zbG90dGVkQWN0aW9ucy5sZW5ndGggPiAxICYmIGdyb3VwQWN0aW9ucy5sZW5ndGggPiAyICYmICFncm91cEFjdGlvbi5jbG9zZXN0KFwiY2FsY2l0ZS1hY3Rpb24tbWVudVwiKSkge1xuICAgICAgICAgIGdyb3VwQWN0aW9uLnRleHRFbmFibGVkID0gdHJ1ZTtcbiAgICAgICAgICBncm91cEFjdGlvbi5zZXRBdHRyaWJ1dGUoXCJzbG90XCIsIFNMT1RTJDEubWVudUFjdGlvbnMpO1xuICAgICAgICAgIHNsb3R0ZWRXaXRoaW5Hcm91cENvdW50Kys7XG4gICAgICAgICAgaWYgKHNsb3R0ZWRXaXRoaW5Hcm91cENvdW50ID4gMSkge1xuICAgICAgICAgICAgbmVlZFRvU2xvdENvdW50LS07XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBuZWVkVG9TbG90Q291bnQgPCAxO1xuICAgICAgfSk7XG4gICAgfVxuICAgIGZvcmNlVXBkYXRlKGdyb3VwKTtcbiAgfSk7XG59O1xuXG5jb25zdCBJQ09OUyA9IHtcbiAgY2hldnJvbnNMZWZ0OiBcImNoZXZyb25zLWxlZnRcIixcbiAgY2hldnJvbnNSaWdodDogXCJjaGV2cm9ucy1yaWdodFwiLFxufTtcbmZ1bmN0aW9uIGdldENhbGNpdGVQb3NpdGlvbihwb3NpdGlvbiwgZWwpIHtcbiAgcmV0dXJuIHBvc2l0aW9uIHx8IGVsLmNsb3Nlc3QoXCJjYWxjaXRlLXNoZWxsLXBhbmVsXCIpPy5wb3NpdGlvbiB8fCBcInN0YXJ0XCI7XG59XG5mdW5jdGlvbiB0b2dnbGVDaGlsZEFjdGlvblRleHQoeyBlbCwgZXhwYW5kZWQsIH0pIHtcbiAgcXVlcnlBY3Rpb25zKGVsKVxuICAgIC5maWx0ZXIoKGVsKSA9PiBlbC5zbG90ICE9PSBTTE9UUyQxLm1lbnVBY3Rpb25zKVxuICAgIC5mb3JFYWNoKChhY3Rpb24pID0+IChhY3Rpb24udGV4dEVuYWJsZWQgPSBleHBhbmRlZCkpO1xuICBlbC5xdWVyeVNlbGVjdG9yQWxsKFwiY2FsY2l0ZS1hY3Rpb24tZ3JvdXAsIGNhbGNpdGUtYWN0aW9uLW1lbnVcIikuZm9yRWFjaCgoZWwpID0+IChlbC5leHBhbmRlZCA9IGV4cGFuZGVkKSk7XG59XG5jb25zdCBzZXRUb29sdGlwUmVmZXJlbmNlID0gKHsgdG9vbHRpcCwgcmVmZXJlbmNlRWxlbWVudCwgZXhwYW5kZWQsIHJlZiwgfSkgPT4ge1xuICBpZiAodG9vbHRpcCkge1xuICAgIHRvb2x0aXAucmVmZXJlbmNlRWxlbWVudCA9ICFleHBhbmRlZCAmJiByZWZlcmVuY2VFbGVtZW50ID8gcmVmZXJlbmNlRWxlbWVudCA6IG51bGw7XG4gIH1cbiAgaWYgKHJlZikge1xuICAgIHJlZihyZWZlcmVuY2VFbGVtZW50KTtcbiAgfVxuICByZXR1cm4gcmVmZXJlbmNlRWxlbWVudDtcbn07XG5jb25zdCBFeHBhbmRUb2dnbGUgPSAoeyBleHBhbmRlZCwgZXhwYW5kVGV4dCwgY29sbGFwc2VUZXh0LCB0b2dnbGUsIGVsLCBwb3NpdGlvbiwgdG9vbHRpcCwgcmVmLCBzY2FsZSwgfSkgPT4ge1xuICBjb25zdCBydGwgPSBnZXRFbGVtZW50RGlyKGVsKSA9PT0gXCJydGxcIjtcbiAgY29uc3QgdGV4dCA9IGV4cGFuZGVkID8gY29sbGFwc2VUZXh0IDogZXhwYW5kVGV4dDtcbiAgY29uc3QgaWNvbnMgPSBbSUNPTlMuY2hldnJvbnNMZWZ0LCBJQ09OUy5jaGV2cm9uc1JpZ2h0XTtcbiAgaWYgKHJ0bCkge1xuICAgIGljb25zLnJldmVyc2UoKTtcbiAgfVxuICBjb25zdCBlbmQgPSBnZXRDYWxjaXRlUG9zaXRpb24ocG9zaXRpb24sIGVsKSA9PT0gXCJlbmRcIjtcbiAgY29uc3QgZXhwYW5kSWNvbiA9IGVuZCA/IGljb25zWzFdIDogaWNvbnNbMF07XG4gIGNvbnN0IGNvbGxhcHNlSWNvbiA9IGVuZCA/IGljb25zWzBdIDogaWNvbnNbMV07XG4gIGNvbnN0IGFjdGlvbk5vZGUgPSAoaChcImNhbGNpdGUtYWN0aW9uXCIsIHsgaWNvbjogZXhwYW5kZWQgPyBleHBhbmRJY29uIDogY29sbGFwc2VJY29uLCBvbkNsaWNrOiB0b2dnbGUsIHNjYWxlOiBzY2FsZSwgdGV4dDogdGV4dCwgdGV4dEVuYWJsZWQ6IGV4cGFuZGVkLCB0aXRsZTogIWV4cGFuZGVkICYmICF0b29sdGlwID8gdGV4dCA6IG51bGwsIFxuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSByZWFjdC9qc3gtc29ydC1wcm9wcyAtLSByZWYgc2hvdWxkIGJlIGxhc3Qgc28gbm9kZSBhdHRycy9wcm9wcyBhcmUgaW4gc3luYyAoc2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9Fc3JpL2NhbGNpdGUtZGVzaWduLXN5c3RlbS9wdWxsLzY1MzApXG4gICAgcmVmOiAocmVmZXJlbmNlRWxlbWVudCkgPT4gc2V0VG9vbHRpcFJlZmVyZW5jZSh7IHRvb2x0aXAsIHJlZmVyZW5jZUVsZW1lbnQsIGV4cGFuZGVkLCByZWYgfSkgfSkpO1xuICByZXR1cm4gYWN0aW9uTm9kZTtcbn07XG5cbmV4cG9ydCB7IEV4cGFuZFRvZ2dsZSBhcyBFLCBvdmVyZmxvd0FjdGlvbnMgYXMgYSwgZ2V0T3ZlcmZsb3dDb3VudCBhcyBiLCBnZUFjdGlvbkRpbWVuc2lvbnMgYXMgZywgb3ZlcmZsb3dBY3Rpb25zRGVib3VuY2VJbk1zIGFzIG8sIHF1ZXJ5QWN0aW9ucyBhcyBxLCB0b2dnbGVDaGlsZEFjdGlvblRleHQgYXMgdCB9O1xuIiwiLyohXG4gKiBBbGwgbWF0ZXJpYWwgY29weXJpZ2h0IEVTUkksIEFsbCBSaWdodHMgUmVzZXJ2ZWQsIHVubGVzcyBvdGhlcndpc2Ugc3BlY2lmaWVkLlxuICogU2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9Fc3JpL2NhbGNpdGUtZGVzaWduLXN5c3RlbS9ibG9iL21haW4vTElDRU5TRS5tZCBmb3IgZGV0YWlscy5cbiAqIHYxLjExLjBcbiAqL1xuaW1wb3J0IHsgcHJveHlDdXN0b21FbGVtZW50LCBIVE1MRWxlbWVudCwgaCB9IGZyb20gJ0BzdGVuY2lsL2NvcmUvaW50ZXJuYWwvY2xpZW50L2luZGV4LmpzJztcbmltcG9ydCB7IGMgYXMgY29ubmVjdENvbmRpdGlvbmFsU2xvdENvbXBvbmVudCwgZCBhcyBkaXNjb25uZWN0Q29uZGl0aW9uYWxTbG90Q29tcG9uZW50IH0gZnJvbSAnLi9jb25kaXRpb25hbFNsb3QuanMnO1xuaW1wb3J0IHsgYyBhcyBjb21wb25lbnRGb2N1c2FibGUsIGEgYXMgc2V0VXBMb2FkYWJsZUNvbXBvbmVudCwgcyBhcyBzZXRDb21wb25lbnRMb2FkZWQgfSBmcm9tICcuL2xvYWRhYmxlLmpzJztcbmltcG9ydCB7IGMgYXMgY29ubmVjdExvY2FsaXplZCwgZCBhcyBkaXNjb25uZWN0TG9jYWxpemVkIH0gZnJvbSAnLi9sb2NhbGUuanMnO1xuaW1wb3J0IHsgdSBhcyB1cGRhdGVNZXNzYWdlcywgYyBhcyBjb25uZWN0TWVzc2FnZXMsIGQgYXMgZGlzY29ubmVjdE1lc3NhZ2VzLCBzIGFzIHNldFVwTWVzc2FnZXMgfSBmcm9tICcuL3Q5bi5qcyc7XG5pbXBvcnQgeyBTIGFzIFNMT1RTJDEsIGQgYXMgZGVmaW5lQ3VzdG9tRWxlbWVudCQ0IH0gZnJvbSAnLi9hY3Rpb24tbWVudS5qcyc7XG5pbXBvcnQgeyBlIGFzIHNsb3RDaGFuZ2VIYXNBc3NpZ25lZEVsZW1lbnQgfSBmcm9tICcuL2RvbS5qcyc7XG5pbXBvcnQgeyBkIGFzIGRlZmluZUN1c3RvbUVsZW1lbnQkNSB9IGZyb20gJy4vYWN0aW9uLmpzJztcbmltcG9ydCB7IGQgYXMgZGVmaW5lQ3VzdG9tRWxlbWVudCQzIH0gZnJvbSAnLi9pY29uLmpzJztcbmltcG9ydCB7IGQgYXMgZGVmaW5lQ3VzdG9tRWxlbWVudCQyIH0gZnJvbSAnLi9sb2FkZXIuanMnO1xuaW1wb3J0IHsgZCBhcyBkZWZpbmVDdXN0b21FbGVtZW50JDEgfSBmcm9tICcuL3BvcG92ZXIuanMnO1xuXG5jb25zdCBTTE9UUyA9IHtcbiAgbWVudUFjdGlvbnM6IFwibWVudS1hY3Rpb25zXCIsXG4gIG1lbnVUb29sdGlwOiBcIm1lbnUtdG9vbHRpcFwiLFxufTtcbmNvbnN0IElDT05TID0ge1xuICBtZW51OiBcImVsbGlwc2lzXCIsXG59O1xuY29uc3QgQ1NTID0ge1xuICBjb250YWluZXI6IFwiY29udGFpbmVyXCIsXG59O1xuXG5jb25zdCBhY3Rpb25Hcm91cENzcyA9IFwiOmhvc3R7Ym94LXNpemluZzpib3JkZXItYm94O2JhY2tncm91bmQtY29sb3I6dmFyKC0tY2FsY2l0ZS11aS1mb3JlZ3JvdW5kLTEpO2NvbG9yOnZhcigtLWNhbGNpdGUtdWktdGV4dC0yKTtmb250LXNpemU6dmFyKC0tY2FsY2l0ZS1mb250LXNpemUtLTEpfTpob3N0ICp7Ym94LXNpemluZzpib3JkZXItYm94fTpob3N0e2Rpc3BsYXk6ZmxleDtmbGV4LWRpcmVjdGlvbjpjb2x1bW47cGFkZGluZzowcHg7LS1jYWxjaXRlLWFjdGlvbi1ncm91cC1jb2x1bW5zOjM7LS1jYWxjaXRlLWFjdGlvbi1ncm91cC1nYXA6MXB4Oy0tY2FsY2l0ZS1hY3Rpb24tZ3JvdXAtcGFkZGluZzoxcHh9LmNvbnRhaW5lcntkaXNwbGF5OmZsZXg7ZmxleC1ncm93OjE7ZmxleC1kaXJlY3Rpb246Y29sdW1ufTpob3N0KFtjb2x1bW5zPVxcXCIxXFxcIl0pey0tY2FsY2l0ZS1hY3Rpb24tZ3JvdXAtY29sdW1uczoxfTpob3N0KFtjb2x1bW5zPVxcXCIyXFxcIl0pey0tY2FsY2l0ZS1hY3Rpb24tZ3JvdXAtY29sdW1uczoyfTpob3N0KFtjb2x1bW5zPVxcXCIzXFxcIl0pey0tY2FsY2l0ZS1hY3Rpb24tZ3JvdXAtY29sdW1uczozfTpob3N0KFtjb2x1bW5zPVxcXCI0XFxcIl0pey0tY2FsY2l0ZS1hY3Rpb24tZ3JvdXAtY29sdW1uczo0fTpob3N0KFtjb2x1bW5zPVxcXCI1XFxcIl0pey0tY2FsY2l0ZS1hY3Rpb24tZ3JvdXAtY29sdW1uczo1fTpob3N0KFtjb2x1bW5zPVxcXCI2XFxcIl0pey0tY2FsY2l0ZS1hY3Rpb24tZ3JvdXAtY29sdW1uczo2fTpob3N0KDpmaXJzdC1jaGlsZCl7cGFkZGluZy1ibG9jay1zdGFydDowcHh9Omhvc3QoW2xheW91dD1ob3Jpem9udGFsXSksOmhvc3QoW2xheW91dD1ob3Jpem9udGFsXSkgLmNvbnRhaW5lcntmbGV4LWRpcmVjdGlvbjpyb3d9Omhvc3QoW2xheW91dD1ncmlkXSl7ZGlzcGxheTpncmlkfTpob3N0KFtsYXlvdXQ9Z3JpZF0pIC5jb250YWluZXJ7ZGlzcGxheTpncmlkO3BsYWNlLWNvbnRlbnQ6c3RyZXRjaDtiYWNrZ3JvdW5kLWNvbG9yOnZhcigtLWNhbGNpdGUtdWktYmFja2dyb3VuZCk7Z2FwOnZhcigtLWNhbGNpdGUtYWN0aW9uLWdyb3VwLWdhcCk7cGFkZGluZzp2YXIoLS1jYWxjaXRlLWFjdGlvbi1ncm91cC1nYXApO2dyaWQtdGVtcGxhdGUtY29sdW1uczpyZXBlYXQodmFyKC0tY2FsY2l0ZS1hY3Rpb24tZ3JvdXAtY29sdW1ucyksIGF1dG8pfTpob3N0KFtoaWRkZW5dKXtkaXNwbGF5Om5vbmV9W2hpZGRlbl17ZGlzcGxheTpub25lfVwiO1xuXG5jb25zdCBBY3Rpb25Hcm91cCA9IC8qQF9fUFVSRV9fKi8gcHJveHlDdXN0b21FbGVtZW50KGNsYXNzIGV4dGVuZHMgSFRNTEVsZW1lbnQge1xuICBjb25zdHJ1Y3RvcigpIHtcbiAgICBzdXBlcigpO1xuICAgIHRoaXMuX19yZWdpc3Rlckhvc3QoKTtcbiAgICB0aGlzLl9fYXR0YWNoU2hhZG93KCk7XG4gICAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgICAvL1xuICAgIC8vICBQcml2YXRlIE1ldGhvZHNcbiAgICAvL1xuICAgIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gICAgdGhpcy5zZXRNZW51T3BlbiA9IChldmVudCkgPT4ge1xuICAgICAgdGhpcy5tZW51T3BlbiA9ICEhZXZlbnQudGFyZ2V0Lm9wZW47XG4gICAgfTtcbiAgICB0aGlzLmhhbmRsZU1lbnVBY3Rpb25zU2xvdENoYW5nZSA9IChldmVudCkgPT4ge1xuICAgICAgdGhpcy5oYXNNZW51QWN0aW9ucyA9IHNsb3RDaGFuZ2VIYXNBc3NpZ25lZEVsZW1lbnQoZXZlbnQpO1xuICAgIH07XG4gICAgdGhpcy5leHBhbmRlZCA9IGZhbHNlO1xuICAgIHRoaXMubGFiZWwgPSB1bmRlZmluZWQ7XG4gICAgdGhpcy5sYXlvdXQgPSBcInZlcnRpY2FsXCI7XG4gICAgdGhpcy5jb2x1bW5zID0gdW5kZWZpbmVkO1xuICAgIHRoaXMubWVudU9wZW4gPSBmYWxzZTtcbiAgICB0aGlzLm92ZXJsYXlQb3NpdGlvbmluZyA9IFwiYWJzb2x1dGVcIjtcbiAgICB0aGlzLnNjYWxlID0gdW5kZWZpbmVkO1xuICAgIHRoaXMubWVzc2FnZXMgPSB1bmRlZmluZWQ7XG4gICAgdGhpcy5tZXNzYWdlT3ZlcnJpZGVzID0gdW5kZWZpbmVkO1xuICAgIHRoaXMuZWZmZWN0aXZlTG9jYWxlID0gXCJcIjtcbiAgICB0aGlzLmRlZmF1bHRNZXNzYWdlcyA9IHVuZGVmaW5lZDtcbiAgICB0aGlzLmhhc01lbnVBY3Rpb25zID0gZmFsc2U7XG4gIH1cbiAgZXhwYW5kZWRIYW5kbGVyKCkge1xuICAgIHRoaXMubWVudU9wZW4gPSBmYWxzZTtcbiAgfVxuICBvbk1lc3NhZ2VzQ2hhbmdlKCkge1xuICAgIC8qIHdpcmVkIHVwIGJ5IHQ5biB1dGlsICovXG4gIH1cbiAgZWZmZWN0aXZlTG9jYWxlQ2hhbmdlKCkge1xuICAgIHVwZGF0ZU1lc3NhZ2VzKHRoaXMsIHRoaXMuZWZmZWN0aXZlTG9jYWxlKTtcbiAgfVxuICAvLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gIC8vXG4gIC8vICBQdWJsaWMgTWV0aG9kc1xuICAvL1xuICAvLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gIC8qKiBTZXRzIGZvY3VzIG9uIHRoZSBjb21wb25lbnQncyBmaXJzdCBmb2N1c2FibGUgZWxlbWVudC4gKi9cbiAgYXN5bmMgc2V0Rm9jdXMoKSB7XG4gICAgYXdhaXQgY29tcG9uZW50Rm9jdXNhYmxlKHRoaXMpO1xuICAgIHRoaXMuZWwuZm9jdXMoKTtcbiAgfVxuICAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAvL1xuICAvLyAgTGlmZWN5Y2xlXG4gIC8vXG4gIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gIGNvbm5lY3RlZENhbGxiYWNrKCkge1xuICAgIGNvbm5lY3RMb2NhbGl6ZWQodGhpcyk7XG4gICAgY29ubmVjdE1lc3NhZ2VzKHRoaXMpO1xuICAgIGNvbm5lY3RDb25kaXRpb25hbFNsb3RDb21wb25lbnQodGhpcyk7XG4gIH1cbiAgZGlzY29ubmVjdGVkQ2FsbGJhY2soKSB7XG4gICAgZGlzY29ubmVjdExvY2FsaXplZCh0aGlzKTtcbiAgICBkaXNjb25uZWN0TWVzc2FnZXModGhpcyk7XG4gICAgZGlzY29ubmVjdENvbmRpdGlvbmFsU2xvdENvbXBvbmVudCh0aGlzKTtcbiAgfVxuICBhc3luYyBjb21wb25lbnRXaWxsTG9hZCgpIHtcbiAgICBzZXRVcExvYWRhYmxlQ29tcG9uZW50KHRoaXMpO1xuICAgIGF3YWl0IHNldFVwTWVzc2FnZXModGhpcyk7XG4gIH1cbiAgY29tcG9uZW50RGlkTG9hZCgpIHtcbiAgICBzZXRDb21wb25lbnRMb2FkZWQodGhpcyk7XG4gIH1cbiAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgLy9cbiAgLy8gIENvbXBvbmVudCBNZXRob2RzXG4gIC8vXG4gIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gIHJlbmRlck1lbnUoKSB7XG4gICAgY29uc3QgeyBleHBhbmRlZCwgbWVudU9wZW4sIHNjYWxlLCBsYXlvdXQsIG1lc3NhZ2VzLCBvdmVybGF5UG9zaXRpb25pbmcsIGhhc01lbnVBY3Rpb25zIH0gPSB0aGlzO1xuICAgIHJldHVybiAoaChcImNhbGNpdGUtYWN0aW9uLW1lbnVcIiwgeyBleHBhbmRlZDogZXhwYW5kZWQsIGZsaXBQbGFjZW1lbnRzOiBbXCJsZWZ0XCIsIFwicmlnaHRcIl0sIGhpZGRlbjogIWhhc01lbnVBY3Rpb25zLCBsYWJlbDogbWVzc2FnZXMubW9yZSwgb25DYWxjaXRlQWN0aW9uTWVudU9wZW46IHRoaXMuc2V0TWVudU9wZW4sIG9wZW46IG1lbnVPcGVuLCBvdmVybGF5UG9zaXRpb25pbmc6IG92ZXJsYXlQb3NpdGlvbmluZywgcGxhY2VtZW50OiBsYXlvdXQgPT09IFwiaG9yaXpvbnRhbFwiID8gXCJib3R0b20tc3RhcnRcIiA6IFwibGVhZGluZy1zdGFydFwiLCBzY2FsZTogc2NhbGUgfSwgaChcImNhbGNpdGUtYWN0aW9uXCIsIHsgaWNvbjogSUNPTlMubWVudSwgc2NhbGU6IHNjYWxlLCBzbG90OiBTTE9UUyQxLnRyaWdnZXIsIHRleHQ6IG1lc3NhZ2VzLm1vcmUsIHRleHRFbmFibGVkOiBleHBhbmRlZCB9KSwgaChcInNsb3RcIiwgeyBuYW1lOiBTTE9UUy5tZW51QWN0aW9ucywgb25TbG90Y2hhbmdlOiB0aGlzLmhhbmRsZU1lbnVBY3Rpb25zU2xvdENoYW5nZSB9KSwgaChcInNsb3RcIiwgeyBuYW1lOiBTTE9UUy5tZW51VG9vbHRpcCwgc2xvdDogU0xPVFMkMS50b29sdGlwIH0pKSk7XG4gIH1cbiAgcmVuZGVyKCkge1xuICAgIHJldHVybiAoaChcImRpdlwiLCB7IFwiYXJpYS1sYWJlbFwiOiB0aGlzLmxhYmVsLCBjbGFzczogQ1NTLmNvbnRhaW5lciwgcm9sZTogXCJncm91cFwiIH0sIGgoXCJzbG90XCIsIG51bGwpLCB0aGlzLnJlbmRlck1lbnUoKSkpO1xuICB9XG4gIHN0YXRpYyBnZXQgZGVsZWdhdGVzRm9jdXMoKSB7IHJldHVybiB0cnVlOyB9XG4gIHN0YXRpYyBnZXQgYXNzZXRzRGlycygpIHsgcmV0dXJuIFtcImFzc2V0c1wiXTsgfVxuICBnZXQgZWwoKSB7IHJldHVybiB0aGlzOyB9XG4gIHN0YXRpYyBnZXQgd2F0Y2hlcnMoKSB7IHJldHVybiB7XG4gICAgXCJleHBhbmRlZFwiOiBbXCJleHBhbmRlZEhhbmRsZXJcIl0sXG4gICAgXCJtZXNzYWdlT3ZlcnJpZGVzXCI6IFtcIm9uTWVzc2FnZXNDaGFuZ2VcIl0sXG4gICAgXCJlZmZlY3RpdmVMb2NhbGVcIjogW1wiZWZmZWN0aXZlTG9jYWxlQ2hhbmdlXCJdXG4gIH07IH1cbiAgc3RhdGljIGdldCBzdHlsZSgpIHsgcmV0dXJuIGFjdGlvbkdyb3VwQ3NzOyB9XG59LCBbMTcsIFwiY2FsY2l0ZS1hY3Rpb24tZ3JvdXBcIiwge1xuICAgIFwiZXhwYW5kZWRcIjogWzUxNl0sXG4gICAgXCJsYWJlbFwiOiBbMV0sXG4gICAgXCJsYXlvdXRcIjogWzUxM10sXG4gICAgXCJjb2x1bW5zXCI6IFs1MTRdLFxuICAgIFwibWVudU9wZW5cIjogWzE1NDAsIFwibWVudS1vcGVuXCJdLFxuICAgIFwib3ZlcmxheVBvc2l0aW9uaW5nXCI6IFs1MTMsIFwib3ZlcmxheS1wb3NpdGlvbmluZ1wiXSxcbiAgICBcInNjYWxlXCI6IFs1MTNdLFxuICAgIFwibWVzc2FnZXNcIjogWzEwNDBdLFxuICAgIFwibWVzc2FnZU92ZXJyaWRlc1wiOiBbMTA0MF0sXG4gICAgXCJlZmZlY3RpdmVMb2NhbGVcIjogWzMyXSxcbiAgICBcImRlZmF1bHRNZXNzYWdlc1wiOiBbMzJdLFxuICAgIFwiaGFzTWVudUFjdGlvbnNcIjogWzMyXSxcbiAgICBcInNldEZvY3VzXCI6IFs2NF1cbiAgfV0pO1xuZnVuY3Rpb24gZGVmaW5lQ3VzdG9tRWxlbWVudCgpIHtcbiAgaWYgKHR5cGVvZiBjdXN0b21FbGVtZW50cyA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgIHJldHVybjtcbiAgfVxuICBjb25zdCBjb21wb25lbnRzID0gW1wiY2FsY2l0ZS1hY3Rpb24tZ3JvdXBcIiwgXCJjYWxjaXRlLWFjdGlvblwiLCBcImNhbGNpdGUtYWN0aW9uLW1lbnVcIiwgXCJjYWxjaXRlLWljb25cIiwgXCJjYWxjaXRlLWxvYWRlclwiLCBcImNhbGNpdGUtcG9wb3ZlclwiXTtcbiAgY29tcG9uZW50cy5mb3JFYWNoKHRhZ05hbWUgPT4geyBzd2l0Y2ggKHRhZ05hbWUpIHtcbiAgICBjYXNlIFwiY2FsY2l0ZS1hY3Rpb24tZ3JvdXBcIjpcbiAgICAgIGlmICghY3VzdG9tRWxlbWVudHMuZ2V0KHRhZ05hbWUpKSB7XG4gICAgICAgIGN1c3RvbUVsZW1lbnRzLmRlZmluZSh0YWdOYW1lLCBBY3Rpb25Hcm91cCk7XG4gICAgICB9XG4gICAgICBicmVhaztcbiAgICBjYXNlIFwiY2FsY2l0ZS1hY3Rpb25cIjpcbiAgICAgIGlmICghY3VzdG9tRWxlbWVudHMuZ2V0KHRhZ05hbWUpKSB7XG4gICAgICAgIGRlZmluZUN1c3RvbUVsZW1lbnQkNSgpO1xuICAgICAgfVxuICAgICAgYnJlYWs7XG4gICAgY2FzZSBcImNhbGNpdGUtYWN0aW9uLW1lbnVcIjpcbiAgICAgIGlmICghY3VzdG9tRWxlbWVudHMuZ2V0KHRhZ05hbWUpKSB7XG4gICAgICAgIGRlZmluZUN1c3RvbUVsZW1lbnQkNCgpO1xuICAgICAgfVxuICAgICAgYnJlYWs7XG4gICAgY2FzZSBcImNhbGNpdGUtaWNvblwiOlxuICAgICAgaWYgKCFjdXN0b21FbGVtZW50cy5nZXQodGFnTmFtZSkpIHtcbiAgICAgICAgZGVmaW5lQ3VzdG9tRWxlbWVudCQzKCk7XG4gICAgICB9XG4gICAgICBicmVhaztcbiAgICBjYXNlIFwiY2FsY2l0ZS1sb2FkZXJcIjpcbiAgICAgIGlmICghY3VzdG9tRWxlbWVudHMuZ2V0KHRhZ05hbWUpKSB7XG4gICAgICAgIGRlZmluZUN1c3RvbUVsZW1lbnQkMigpO1xuICAgICAgfVxuICAgICAgYnJlYWs7XG4gICAgY2FzZSBcImNhbGNpdGUtcG9wb3ZlclwiOlxuICAgICAgaWYgKCFjdXN0b21FbGVtZW50cy5nZXQodGFnTmFtZSkpIHtcbiAgICAgICAgZGVmaW5lQ3VzdG9tRWxlbWVudCQxKCk7XG4gICAgICB9XG4gICAgICBicmVhaztcbiAgfSB9KTtcbn1cbmRlZmluZUN1c3RvbUVsZW1lbnQoKTtcblxuZXhwb3J0IHsgQWN0aW9uR3JvdXAgYXMgQSwgU0xPVFMgYXMgUywgZGVmaW5lQ3VzdG9tRWxlbWVudCBhcyBkIH07XG4iLCIvKiFcbiAqIEFsbCBtYXRlcmlhbCBjb3B5cmlnaHQgRVNSSSwgQWxsIFJpZ2h0cyBSZXNlcnZlZCwgdW5sZXNzIG90aGVyd2lzZSBzcGVjaWZpZWQuXG4gKiBTZWUgaHR0cHM6Ly9naXRodWIuY29tL0VzcmkvY2FsY2l0ZS1kZXNpZ24tc3lzdGVtL2Jsb2IvbWFpbi9MSUNFTlNFLm1kIGZvciBkZXRhaWxzLlxuICogdjEuMTEuMFxuICovXG5pbXBvcnQgeyBmb3JjZVVwZGF0ZSB9IGZyb20gJ0BzdGVuY2lsL2NvcmUvaW50ZXJuYWwvY2xpZW50L2luZGV4LmpzJztcbmltcG9ydCB7IGMgYXMgY3JlYXRlT2JzZXJ2ZXIgfSBmcm9tICcuL29ic2VydmVycy5qcyc7XG5cbmNvbnN0IG9ic2VydmVkID0gbmV3IFNldCgpO1xubGV0IG11dGF0aW9uT2JzZXJ2ZXI7XG5jb25zdCBvYnNlcnZlck9wdGlvbnMgPSB7IGNoaWxkTGlzdDogdHJ1ZSB9O1xuLyoqXG4gKiBIZWxwZXIgdG8gc2V0IHVwIGEgY29uZGl0aW9uYWwgc2xvdCBjb21wb25lbnQgb24gY29ubmVjdGVkQ2FsbGJhY2suXG4gKlxuICogQHBhcmFtIGNvbXBvbmVudFxuICogQGRlcHJlY2F0ZWQgVXNlIGBvblNsb3RjaGFuZ2VgIGV2ZW50IHdpdGggYHNsb3RDaGFuZ2VIYXNBc3NpZ25lZEVsZW1lbnRgIERPTSB1dGlsaXR5IGluc3RlYWQuXG4gKlxuICogYGBgXG4gKiA8c2xvdCBvblNsb3RjaGFuZ2U9eyhldmVudCkgPT4gdGhpcy5teVNsb3RIYXNFbGVtZW50ID0gc2xvdENoYW5nZUhhc0Fzc2lnbmVkRWxlbWVudChldmVudCl9IC8+fVxuICogYGBgXG4gKi9cbmZ1bmN0aW9uIGNvbm5lY3RDb25kaXRpb25hbFNsb3RDb21wb25lbnQoY29tcG9uZW50KSB7XG4gIGlmICghbXV0YXRpb25PYnNlcnZlcikge1xuICAgIG11dGF0aW9uT2JzZXJ2ZXIgPSBjcmVhdGVPYnNlcnZlcihcIm11dGF0aW9uXCIsIHByb2Nlc3NNdXRhdGlvbnMpO1xuICB9XG4gIG11dGF0aW9uT2JzZXJ2ZXIub2JzZXJ2ZShjb21wb25lbnQuZWwsIG9ic2VydmVyT3B0aW9ucyk7XG59XG4vKipcbiAqIEhlbHBlciB0byB0ZWFyIGRvd24gYSBjb25kaXRpb25hbCBzbG90IGNvbXBvbmVudCBvbiBkaXNjb25uZWN0ZWRDYWxsYmFjay5cbiAqXG4gKiBAcGFyYW0gY29tcG9uZW50XG4gKiBAZGVwcmVjYXRlZCBVc2UgYG9uU2xvdGNoYW5nZWAgZXZlbnQgd2l0aCBgc2xvdENoYW5nZUhhc0Fzc2lnbmVkRWxlbWVudGAgRE9NIHV0aWxpdHkgaW5zdGVhZC5cbiAqXG4gKiBgYGBcbiAqIDxzbG90IG9uU2xvdGNoYW5nZT17KGV2ZW50KSA9PiB0aGlzLm15U2xvdEhhc0VsZW1lbnQgPSBzbG90Q2hhbmdlSGFzQXNzaWduZWRFbGVtZW50KGV2ZW50KX0gLz59XG4gKiBgYGBcbiAqL1xuZnVuY3Rpb24gZGlzY29ubmVjdENvbmRpdGlvbmFsU2xvdENvbXBvbmVudChjb21wb25lbnQpIHtcbiAgb2JzZXJ2ZWQuZGVsZXRlKGNvbXBvbmVudC5lbCk7XG4gIC8vIHdlIGV4cGxpY2l0bHkgcHJvY2VzcyBxdWV1ZWQgbXV0YXRpb25zIGFuZCBkaXNjb25uZWN0IGFuZCByZWNvbm5lY3RcbiAgLy8gdGhlIG9ic2VydmVyIHVudGlsIE11dGF0aW9uT2JzZXJ2ZXIgZ2V0cyBhbiBgdW5vYnNlcnZlYCBtZXRob2RcbiAgLy8gc2VlIGh0dHBzOi8vZ2l0aHViLmNvbS93aGF0d2cvZG9tL2lzc3Vlcy8xMjZcbiAgcHJvY2Vzc011dGF0aW9ucyhtdXRhdGlvbk9ic2VydmVyLnRha2VSZWNvcmRzKCkpO1xuICBtdXRhdGlvbk9ic2VydmVyLmRpc2Nvbm5lY3QoKTtcbiAgZm9yIChjb25zdCBbZWxlbWVudF0gb2Ygb2JzZXJ2ZWQuZW50cmllcygpKSB7XG4gICAgbXV0YXRpb25PYnNlcnZlci5vYnNlcnZlKGVsZW1lbnQsIG9ic2VydmVyT3B0aW9ucyk7XG4gIH1cbn1cbmZ1bmN0aW9uIHByb2Nlc3NNdXRhdGlvbnMobXV0YXRpb25zKSB7XG4gIG11dGF0aW9ucy5mb3JFYWNoKCh7IHRhcmdldCB9KSA9PiB7XG4gICAgZm9yY2VVcGRhdGUodGFyZ2V0KTtcbiAgfSk7XG59XG5cbmV4cG9ydCB7IGNvbm5lY3RDb25kaXRpb25hbFNsb3RDb21wb25lbnQgYXMgYywgZGlzY29ubmVjdENvbmRpdGlvbmFsU2xvdENvbXBvbmVudCBhcyBkIH07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=