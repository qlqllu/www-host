"use strict";
(self["webpackChunkexb_client"] = self["webpackChunkexb_client"] || []).push([["extensions_widgets_arcgis_analysis_node_modules_arcgis_app-components_dist_esm_arcgis-group-t-68763e"],{

/***/ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/arcgis-group-thumbnail.entry.js":
/*!*************************************************************************************************************************!*\
  !*** ./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/arcgis-group-thumbnail.entry.js ***!
  \*************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   arcgis_group_thumbnail: () => (/* binding */ ArcgisGroupThumbnail)
/* harmony export */ });
/* harmony import */ var _index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index-92ebb396.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/index-92ebb396.js");
/* harmony import */ var _portal_79caaeff_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./portal-79caaeff.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/portal-79caaeff.js");
/* harmony import */ var _dom_13f5b00c_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dom-13f5b00c.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/dom-13f5b00c.js");
/* harmony import */ var _loadModules_aaf30bd6_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./loadModules-aaf30bd6.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/loadModules-aaf30bd6.js");
/* harmony import */ var _config_eb5f7dc2_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./config-eb5f7dc2.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/config-eb5f7dc2.js");
/* harmony import */ var _index_81d548b7_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./index-81d548b7.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/index-81d548b7.js");
/* harmony import */ var _privileges_ccd5f37d_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./privileges-ccd5f37d.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/privileges-ccd5f37d.js");
/* harmony import */ var _functional_c82f5ab9_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./functional-c82f5ab9.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/functional-c82f5ab9.js");
/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * v3.0.99
 */









/**
 * The following utilities come from calcite components
 * If there is a good way to import ts utils from CC, this should be deleted.
 */
const shortHandHex = /^#[0-9A-F]{3}$/i;
const longhandHex = /^#[0-9A-F]{6}$/i;
function isValidHex(hex) {
  return isShorthandHex(hex) || isLonghandHex(hex);
}
function isShorthandHex(hex) {
  return hex && hex.length === 4 && shortHandHex.test(hex);
}
function isLonghandHex(hex) {
  return hex && hex.length === 7 && longhandHex.test(hex);
}
function hexToRGB(hex) {
  if (!isValidHex(hex)) {
    return null;
  }
  hex = hex.replace("#", "");
  if (hex.length === 3) {
    const [first, second, third] = hex.split("");
    const r = parseInt(`${first}${first}`, 16);
    const g = parseInt(`${second}${second}`, 16);
    const b = parseInt(`${third}${third}`, 16);
    return { r, g, b };
  }
  const r = parseInt(hex.slice(0, 2), 16);
  const g = parseInt(hex.slice(2, 4), 16);
  const b = parseInt(hex.slice(4, 6), 16);
  return { r, g, b };
}
/**
 * Convert a string to a valid hex by hashing its contents
 * and using the hash as a seed for three distinct color values
 *
 * @param str
 */
function stringToHex(str) {
  let hash = 0;
  for (let i = 0; i < str.length; i++) {
    hash = str.charCodeAt(i) + ((hash << 5) - hash);
  }
  let hex = "#";
  for (let j = 0; j < 3; j++) {
    const value = (hash >> (j * 8)) & 0xff;
    hex += ("00" + value.toString(16)).substr(-2);
  }
  return hex;
}
/**
 * Find the hue of a color given the separate RGB color channels
 *
 * @param rgb
 */
function rgbToHue(rgb) {
  let { r, g, b } = rgb;
  r /= 255;
  g /= 255;
  b /= 255;
  const max = Math.max(r, g, b);
  const min = Math.min(r, g, b);
  const delta = max - min;
  if (max === min) {
    return 0;
  }
  let hue = (max + min) / 2;
  switch (max) {
    case r:
      hue = (g - b) / delta + (g < b ? 6 : 0);
      break;
    case g:
      hue = (b - r) / delta + 2;
      break;
    case b:
      hue = (r - g) / delta + 4;
      break;
  }
  return Math.round(hue * 60);
}
/**
 * For a hex color, find the hue
 *
 * @param hex {string} - form of "#------"
 */
function hexToHue(hex) {
  return rgbToHue(hexToRGB(hex));
}

const arcgisGroupThumbnailCss = ":host{display:inline-block}:host([scale=s]){font-size:0.625rem;height:1.5rem;width:1.5rem}:host([scale=m]){font-size:0.75rem;height:2rem;width:2rem}:host([scale=l]){font-size:1rem;height:2.75rem;width:2.75rem}:host([scale=xl]){font-size:1.25rem;height:4rem;width:4rem}.icon{display:flex;color:var(--calcite-ui-text-3)}.background{display:flex;height:100%;width:100%;align-items:center;justify-content:center;position:relative}.initials{color:var(--calcite-ui-text-2);font-weight:700;text-transform:uppercase;position:absolute}.thumbnail{height:100%;width:100%}.tooltip-text{margin:0;padding:0;font-size:0.75rem;color:var(--calcite-ui-text-2)}calcite-tooltip{pointer-events:none}";

const ArcgisGroupThumbnail = class {
  constructor(hostRef) {
    (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.r)(this, hostRef);
    this.openTooltip = () => {
      if (this.tooltipElement) {
        this.tooltipElement.open = true;
      }
    };
    this.closeTooltip = () => {
      if (this.tooltipElement) {
        this.tooltipElement.open = false;
      }
    };
    this.group = undefined;
    this.portal = undefined;
    this.tooltip = undefined;
    this.scale = "m";
    this.error = false;
  }
  //--------------------------------------------------------------------------
  //
  //  Private Methods
  //
  //--------------------------------------------------------------------------
  render() {
    const { group, error, openTooltip, closeTooltip } = this;
    if ((group === null || group === void 0 ? void 0 : group.thumbnail) && !error) {
      return ((0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)(_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.H, null, (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("img", { alt: "", class: "thumbnail", onError: () => (this.error = true), ref: (el) => (this.thumbnailElement = el), src: this.getThumbnailURI(), onMouseLeave: closeTooltip, onMouseEnter: openTooltip, onFocusout: closeTooltip, onFocusin: openTooltip }), this.renderTooltip()));
    }
    const initials = this.generateInitials();
    const backgroundColor = this.generateFillColor();
    return ((0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)(_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.H, null, (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("span", { class: "background", ref: (el) => (this.thumbnailElement = el), style: { backgroundColor }, onMouseLeave: closeTooltip, onMouseEnter: openTooltip, onFocusout: closeTooltip, onFocusin: openTooltip }, initials ? ((0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("span", { "aria-hidden": "true", class: "initials" }, initials)) : ((0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-icon", { class: "icon", icon: "users", scale: this.scale === "xl" ? "l" : this.scale }))), this.renderTooltip()));
  }
  renderTooltip() {
    if (!this.tooltip) {
      return null;
    }
    return ((0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-tooltip", { ref: (el) => {
        el.referenceElement = this.thumbnailElement;
        this.tooltipElement = el;
      }, closeOnClick: true, label: this.group.title, placement: "bottom-start", offsetDistance: 6, offsetSkidding: 0, class: "tooltip" }, (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("p", { class: "tooltip-text" }, this.group.title)));
  }
  getThumbnailURI() {
    const { group } = this;
    if (!(group === null || group === void 0 ? void 0 : group.thumbnail)) {
      return null;
    }
    // if user begins with a protocol, assume it's already fully qualified
    if (group.thumbnail.startsWith("http")) {
      return group.thumbnail;
    }
    const token = (0,_portal_79caaeff_js__WEBPACK_IMPORTED_MODULE_1__.h)(this.portal);
    const tokenParam = token ? `?token=${token}` : "";
    return `${(0,_portal_79caaeff_js__WEBPACK_IMPORTED_MODULE_1__.g)(this.portal)}community/groups/${group.id}/info/${group.thumbnail}${tokenParam}`;
  }
  generateFillColor() {
    const { group: { title, id }, el } = this;
    const theme = (0,_dom_13f5b00c_js__WEBPACK_IMPORTED_MODULE_2__.g)(el);
    const idHex = `#${id === null || id === void 0 ? void 0 : id.substr(id.length - 6)}`;
    const hex = id && isValidHex(idHex) ? idHex : stringToHex(title);
    // if there is not unique information, or an invalid hex is produced, return a default
    if ((!id && !title) || !isValidHex(hex)) {
      return `var(--calcite-ui-foreground-2)`;
    }
    const hue = hexToHue(hex);
    const l = theme === "dark" ? 20 : 90;
    return `hsl(${hue}, 60%, ${l}%)`;
  }
  generateInitials() {
    var _a, _b;
    const initial = (_b = (_a = this.group) === null || _a === void 0 ? void 0 : _a.title) === null || _b === void 0 ? void 0 : _b.trim().charAt(0);
    if (initial === null || initial === void 0 ? void 0 : initial.match(/^\w+$/)) {
      return initial;
    }
    return false;
  }
  get el() { return (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.d)(this); }
};
ArcgisGroupThumbnail.style = arcgisGroupThumbnailCss;




/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,