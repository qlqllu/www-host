"use strict";
(self["webpackChunkexb_client"] = self["webpackChunkexb_client"] || []).push([["vendors-extensions_widgets_arcgis_analysis_node_modules_arcgis_app-components_dist_esm_arcgis-2d14a1"],{

/***/ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/append-58a7e7ab.js":
/*!************************************************************************************************************!*\
  !*** ./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/append-58a7e7ab.js ***!
  \************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   A: () => (/* binding */ AppendOverwriteCloudPublishTypes),
/* harmony export */   N: () => (/* binding */ NONE_VALUE),
/* harmony export */   a: () => (/* binding */ appendFileTypes),
/* harmony export */   b: () => (/* binding */ AppendOverwritePublishTypes),
/* harmony export */   c: () => (/* binding */ appendExtensionsForEnterprise),
/* harmony export */   d: () => (/* binding */ appendExtensions),
/* harmony export */   u: () => (/* binding */ uidFields)
/* harmony export */ });
/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * v3.0.99
 */
const uidFields = ["esriFieldTypeOID", "esriFieldTypeGlobalID"];
const NONE_VALUE = "<None>";
const AppendOverwritePublishTypes = {
  "file geodatabase": "filegeodatabase",
  shapefile: "shapefile",
  geojson: "geojson",
  csv: "CSV",
  "microsoft excel": "excel",
  geopackage: "geoPackage"
};
const appendFileTypes = {
  Shapefile: "shapefile",
  "File Geodatabase": "fileGeodatabase",
  CSV: "csv",
  "Microsoft Excel": "excel",
  GeoJson: "geojson",
  GeoPackage: "geoPackage"
};
const AppendOverwriteCloudPublishTypes = {
  csv: "CSV",
  excel: "Microsoft Excel",
  shapefile: "Shapefile",
  fgdb: "File Geodatabase",
  geojson: "GeoJson",
  googlesheets: "Microsoft Excel"
};
const appendExtensions = ["zip", "csv", "xls", "xlsx", "geojson", "gpkg", "json"];
const appendExtensionsForEnterprise = ["zip", "csv", "xls", "xlsx"];




/***/ }),

/***/ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/arcgis-new-item-pages-append-select.entry.js":
/*!**************************************************************************************************************************************!*\
  !*** ./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/arcgis-new-item-pages-append-select.entry.js ***!
  \**************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   arcgis_new_item_pages_append_select: () => (/* binding */ ArcgisNewItemPagesAppendSelect)
/* harmony export */ });
/* harmony import */ var _index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index-92ebb396.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/index-92ebb396.js");
/* harmony import */ var _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./add-item-97d577a9.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/add-item-97d577a9.js");
/* harmony import */ var _append_58a7e7ab_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./append-58a7e7ab.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/append-58a7e7ab.js");
/* harmony import */ var _ui_ecf86bba_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ui-ecf86bba.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/ui-ecf86bba.js");
/* harmony import */ var _config_eb5f7dc2_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./config-eb5f7dc2.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/config-eb5f7dc2.js");
/* harmony import */ var _functional_c82f5ab9_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./functional-c82f5ab9.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/functional-c82f5ab9.js");
/* harmony import */ var _index_eb224d3c_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./index-eb224d3c.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/index-eb224d3c.js");
/* harmony import */ var _publish_item_82ffa7f8_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./publish-item-82ffa7f8.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/publish-item-82ffa7f8.js");
/* harmony import */ var _overwrite_3049b7af_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./overwrite-3049b7af.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/overwrite-3049b7af.js");
/* harmony import */ var _feature_layer_38cdae87_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./feature-layer-38cdae87.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/feature-layer-38cdae87.js");
/* harmony import */ var _index_81d548b7_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./index-81d548b7.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/index-81d548b7.js");
/* harmony import */ var _tile_layer_90a6b901_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./tile-layer-90a6b901.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/tile-layer-90a6b901.js");
/* harmony import */ var _functional_9f648bee_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./functional-9f648bee.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/functional-9f648bee.js");
/* harmony import */ var _geocode_7eb7c0df_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./geocode-7eb7c0df.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/geocode-7eb7c0df.js");
/* harmony import */ var _privileges_ccd5f37d_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./privileges-ccd5f37d.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/privileges-ccd5f37d.js");
/* harmony import */ var _privileges_35590eb4_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./privileges-35590eb4.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/privileges-35590eb4.js");
/* harmony import */ var _portal_79caaeff_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./portal-79caaeff.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/portal-79caaeff.js");
/* harmony import */ var _loadModules_aaf30bd6_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./loadModules-aaf30bd6.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/loadModules-aaf30bd6.js");
/* harmony import */ var _server_item_f12153e6_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./server-item-f12153e6.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/server-item-f12153e6.js");
/* harmony import */ var _item_properties_e6412a9a_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./item-properties-e6412a9a.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/item-properties-e6412a9a.js");
/* harmony import */ var _item_types_b4fe86ad_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./item-types-b4fe86ad.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/item-types-b4fe86ad.js");
/* harmony import */ var _feature_layer_d33ea114_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./feature-layer-d33ea114.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/feature-layer-d33ea114.js");
/* harmony import */ var _guid_4f4176ba_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./guid-4f4176ba.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/guid-4f4176ba.js");
/* harmony import */ var _thumbnail_0b7adfcd_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./thumbnail-0b7adfcd.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/thumbnail-0b7adfcd.js");
/* harmony import */ var _query_4f7b7e4d_js__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./query-4f7b7e4d.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/query-4f7b7e4d.js");
/* harmony import */ var _user_e3dedc4a_js__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./user-e3dedc4a.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/user-e3dedc4a.js");
/* harmony import */ var _api_f7934cd7_js__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./api-f7934cd7.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/api-f7934cd7.js");
/* harmony import */ var _item_d9d70416_js__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./item-d9d70416.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/item-d9d70416.js");
/* harmony import */ var _dom_13f5b00c_js__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./dom-13f5b00c.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/dom-13f5b00c.js");
/* harmony import */ var _feature_layer_69305a85_js__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./feature-layer-69305a85.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/feature-layer-69305a85.js");
/* harmony import */ var _ags_68d4ae20_js__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./ags-68d4ae20.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/ags-68d4ae20.js");
/* harmony import */ var _url_f3b82cc7_js__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./url-f3b82cc7.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/url-f3b82cc7.js");
/* harmony import */ var _storage_d7f5822e_js__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./storage-d7f5822e.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/storage-d7f5822e.js");
/* harmony import */ var _file_f36193e9_js__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ./file-f36193e9.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/file-f36193e9.js");
/* harmony import */ var _store_3210b604_js__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! ./store-3210b604.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/store-3210b604.js");
/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * v3.0.99
 */




































const arcgisNewItemPagesAppendSelectCss = ".tile-select{display:grid;font-size:1.125rem;margin-right:0.75rem;margin-left:0.75rem;margin-top:1rem;padding-bottom:6rem}@media (min-width: 480px){.tile-select{grid-template-columns:repeat(2, 1fr)}}.tile-card:hover{box-shadow:0 4px 16px 0 rgba(0, 0, 0, 0.08), 0 2px 8px 0 rgba(0, 0, 0, 0.04)}.header{font-size:1rem;font-weight:500;margin-left:0.75rem}.insert-only-info{color:var(--calcite-ui-text-1);font-weight:500;font-size:0.75rem;margin-left:0.75rem}";

const ArcgisNewItemPagesAppendSelect = class {
  constructor(hostRef) {
    (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.r)(this, hostRef);
    this.newItemUpdatePage = (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "newItemUpdatePage", 7);
    this.newItemToggleNavigationEnabled = (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "newItemToggleNavigationEnabled", 7);
    this.workflowComplete = (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "workflowComplete", 7);
    this.insertOnly = false;
    this.isCloudItem = false;
    this.isUrlItem = false;
    this.options = {
      add: {
        icon: "add-features",
        updateType: "add",
        hidden: false,
        disabled: false
      },
      update: {
        icon: "update-features",
        updateType: "update",
        hidden: false,
        disabled: false
      },
      upsert: {
        icon: "add-and-update-features",
        updateType: "upsert",
        hidden: false,
        disabled: false
      },
      overwrite: {
        icon: "overwrite-features",
        updateType: "overwrite",
        hidden: false,
        disabled: false
      }
    };
    this.selected = "add";
    this.error = undefined;
    this.loading = false;
    this.loaderType = "indeterminate";
    this.loaderMessage = undefined;
  }
  handleNext() {
    let nextPage;
    const { item, selected, layer, layerId, appendLayerEntry } = this;
    _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_1__.a.addAppendSelectOption = selected;
    if (!appendLayerEntry && selected !== "overwrite" && item.layers.length > 1) {
      //feature layer is multi-layered
      nextPage = "appendSelectLayer";
    }
    else {
      if (item.cloudProviderInfo && selected === "overwrite") {
        _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_1__.a.newItemMode = "file";
        if (item.cloudProviderInfo.cloudProvider) {
          const { id, mimeType, cloudProvider } = item.cloudProviderInfo;
          this.assignCloudItemStore(item.cloudProviderInfo);
          this.handleOverwriteURL(item, id, mimeType, cloudProvider);
          return;
        }
        else {
          this.handleOverwriteURL(item);
          return;
        }
      }
      else if (appendLayerEntry) {
        let sourceDataLayer = layer !== null && layer !== void 0 ? layer : item.layers[layerId];
        if (!sourceDataLayer) {
          //STGL items return a layerId that is greater than length of possible layer indexes
          sourceDataLayer = item.layers[0];
        }
        _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_1__.a.sourceDataLayer = sourceDataLayer;
      }
      else {
        _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_1__.a.sourceDataLayer = item.layers[0];
      }
      nextPage = "appendUpload";
    }
    this.newItemUpdatePage.emit(nextPage);
  }
  createOptions() {
    var _a, _b;
    const item = this.item;
    const noSourceData = !item.sourceData && !item.cloudProviderInfo;
    const isGeoPackageAndEnterprise = ((_a = item.sourceData) === null || _a === void 0 ? void 0 : _a.type) === "GeoPackage" && _config_eb5f7dc2_js__WEBPACK_IMPORTED_MODULE_4__.c.portal.isPortal;
    const capabilities = _config_eb5f7dc2_js__WEBPACK_IMPORTED_MODULE_4__.c.portal.isPortal && !item.isSDS
      ? item.serviceInfo.capabilities // portal hosted feature layer w/o 'providerSDS' typeKeyword
      : item.adminServiceInfo.capabilities; // every other hosted feature layer impl,
    if (capabilities.indexOf("ChangeTracking") !== -1 || item.serviceInfo.syncEnabled) {
      this.insertOnly = true;
      this.options.overwrite.disabled = true;
      this.options.update.disabled = true;
      this.options.upsert.disabled = true;
    } //insert only when change tracking OR sync enabled
    if (this.appendLayerEntry ||
      isGeoPackageAndEnterprise ||
      ((_b = item.sourceData) === null || _b === void 0 ? void 0 : _b.type) === "Service Definition" ||
      noSourceData) {
      this.options.overwrite.disabled = true;
    }
  }
  createOverwriteNextText() {
    switch (true) {
      case this.isCloudItem:
        return "signInAndOverwrite";
      case this.isUrlItem:
        return "overwriteAndComplete";
      default:
        return "next";
    }
  }
  async componentWillLoad() {
    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l;
    this.selected = _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_1__.a.addAppendSelectOption || "add";
    this.i18n = _ui_ecf86bba_js__WEBPACK_IMPORTED_MODULE_3__.u.i18n.appendSelect;
    this.item = _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_1__.a.existingItem;
    this.appendLayerEntry = _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_1__.a.layerId !== undefined || !!_add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_1__.a.sublayer;
    this.layerId = _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_1__.a.layerId;
    this.layer = _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_1__.a.sublayer;
    _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_1__.a.id = null; //Set existingItem to be null so that on close, it does not delete the HFL item
    _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_1__.a.dateFieldsTimeReference = (_g = (_c = (_b = (_a = this.item) === null || _a === void 0 ? void 0 : _a.publishParameters) === null || _b === void 0 ? void 0 : _b.dateFieldsTimeReference) !== null && _c !== void 0 ? _c : (_f = (_e = (_d = this.item) === null || _d === void 0 ? void 0 : _d.publishParameters) === null || _e === void 0 ? void 0 : _e.layers) === null || _f === void 0 ? void 0 : _f[0].dateFieldsTimeReference) !== null && _g !== void 0 ? _g : this.item.layers[0].dateFieldsTimeReference;
    this.isUrlItem = !!((_j = (_h = this.item) === null || _h === void 0 ? void 0 : _h.cloudProviderInfo) === null || _j === void 0 ? void 0 : _j.url);
    this.isCloudItem = !!((_l = (_k = this.item) === null || _k === void 0 ? void 0 : _k.cloudProviderInfo) === null || _l === void 0 ? void 0 : _l.cloudProvider);
    this.createOptions();
  }
  assignCloudItemStore(cloudProviderInfo) {
    const { cloudProvider, id, mimeType, cloudDriveFileName, cloudFileType, zipItemType } = cloudProviderInfo;
    _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_1__.a.cloudProvider = (0,_index_eb224d3c_js__WEBPACK_IMPORTED_MODULE_6__.d)(cloudProvider);
    _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_1__.a.cloudProviderResource = {
      cloudProvider,
      id,
      mimeType,
      cloudDriveFileName,
      cloudFileType,
      zipItemType
    };
  }
  async setUpCloud(cloudProvider) {
    const provider = (0,_index_eb224d3c_js__WEBPACK_IMPORTED_MODULE_6__.e)(cloudProvider);
    const { result, error } = await (0,_overwrite_3049b7af_js__WEBPACK_IMPORTED_MODULE_8__.g)(provider);
    if (error) {
      this.handleError();
      return null;
    }
    return result;
  }
  async handleOverwriteURL(item, id, mimeType, cloudProvider) {
    var _a, _b, _c, _d, _e, _f, _g;
    //for CSV, GeoJSON url-made items
    let dataUrl, type, typeKeywords;
    this.loading = true;
    this.loaderMessage = _ui_ecf86bba_js__WEBPACK_IMPORTED_MODULE_3__.u.i18n.append.appendLoadingMessages.overwriting;
    const cloudProviderInfo = item.cloudProviderInfo;
    _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_1__.a.fileName = item.title;
    _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_1__.a.title = item.title;
    if (cloudProviderInfo.cloudProvider) {
      type = _append_58a7e7ab_js__WEBPACK_IMPORTED_MODULE_2__.A[mimeType];
      typeKeywords = [_add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_1__.a.type];
      const token = await this.setUpCloud(cloudProvider);
      await (0,_functional_c82f5ab9_js__WEBPACK_IMPORTED_MODULE_5__.t)(200);
      switch (cloudProvider) {
        case "googleConnect":
          dataUrl = (0,_index_eb224d3c_js__WEBPACK_IMPORTED_MODULE_6__.f)(id, mimeType, token);
          break;
        case "dropBoxConnect":
          dataUrl = (0,_index_eb224d3c_js__WEBPACK_IMPORTED_MODULE_6__.i)(id, token);
          break;
        case "oneDriveConnect":
          dataUrl = (0,_index_eb224d3c_js__WEBPACK_IMPORTED_MODULE_6__.h)(id, token);
          break;
      }
    }
    else {
      if (cloudProviderInfo.mimeType === "geojson") {
        _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_1__.a.geoJSONResource = {
          fileName: cloudProviderInfo.fileName,
          url: cloudProviderInfo.url,
          mimeType: cloudProviderInfo.mimeType
        };
      }
      else {
        _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_1__.a.csvResource = {
          fileName: cloudProviderInfo.fileName,
          url: cloudProviderInfo.url,
          mimeType: cloudProviderInfo.mimeType
        };
      }
      const resource = (_a = _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_1__.a.csvResource) !== null && _a !== void 0 ? _a : _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_1__.a.geoJSONResource;
      type = _append_58a7e7ab_js__WEBPACK_IMPORTED_MODULE_2__.A[resource.mimeType];
      dataUrl = resource.url;
      typeKeywords = [type];
    }
    _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_1__.a.dataUrl = dataUrl;
    _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_1__.a.type = type;
    _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_1__.a.typeKeywords = typeKeywords;
    _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_1__.a.overwrite = true;
    try {
      this.newItemToggleNavigationEnabled.emit(false);
      await (0,_feature_layer_38cdae87_js__WEBPACK_IMPORTED_MODULE_9__.x)();
      const overwritePublishParameters = await (0,_overwrite_3049b7af_js__WEBPACK_IMPORTED_MODULE_8__.a)(item, _config_eb5f7dc2_js__WEBPACK_IMPORTED_MODULE_4__.c.portal, _config_eb5f7dc2_js__WEBPACK_IMPORTED_MODULE_4__.c.user, _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_1__.a.id);
      const publishResponse = await (0,_publish_item_82ffa7f8_js__WEBPACK_IMPORTED_MODULE_7__.p)({
        itemId: (_c = (_b = item === null || item === void 0 ? void 0 : item.sourceData) === null || _b === void 0 ? void 0 : _b.id) !== null && _c !== void 0 ? _c : item.id,
        user: _config_eb5f7dc2_js__WEBPACK_IMPORTED_MODULE_4__.c.user,
        title: (item === null || item === void 0 ? void 0 : item.title) || "",
        itemOwnerUrl: item.itemOwner.userContentUrl // ! Use fetchUser if itemOwner is not available
      }, overwritePublishParameters);
      await (0,_overwrite_3049b7af_js__WEBPACK_IMPORTED_MODULE_8__.u)(overwritePublishParameters.publishParameters, item, (_e = (_d = publishResponse.result) === null || _d === void 0 ? void 0 : _d.services) === null || _e === void 0 ? void 0 : _e[0].serviceItemId);
      await this.checkStatus({ itemId: item.id, jobId: (_g = (_f = publishResponse.result) === null || _f === void 0 ? void 0 : _f.services) === null || _g === void 0 ? void 0 : _g[0].jobId }, publishResponse === null || publishResponse === void 0 ? void 0 : publishResponse.result);
    }
    catch (error) {
      this.handleError();
    }
  }
  async checkStatus(jobInfo, publishResponse) {
    var _a;
    this.loaderMessage = _ui_ecf86bba_js__WEBPACK_IMPORTED_MODULE_3__.u.i18n.append.appendLoadingMessages.overwriting;
    this.newItemToggleNavigationEnabled.emit(true);
    const response = await (0,_feature_layer_38cdae87_js__WEBPACK_IMPORTED_MODULE_9__.w)(jobInfo.itemId, { jobId: jobInfo.jobId }); //checking update of source data's job.
    const overwriteStatus = response === null || response === void 0 ? void 0 : response.status;
    const emitPayload = Object.assign({ id: (_a = publishResponse === null || publishResponse === void 0 ? void 0 : publishResponse.services) === null || _a === void 0 ? void 0 : _a[0].serviceItemId, item: Object.assign({}, _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_1__.a), overwriteStatus, appendType: _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_1__.a.addAppendSelectOption }, publishResponse);
    if ((response === null || response === void 0 ? void 0 : response.status.toLowerCase()) === "completed") {
      emitPayload.overwriteStatus = response === null || response === void 0 ? void 0 : response.status;
      this.workflowComplete.emit(emitPayload);
      return null;
    }
    else if ((response === null || response === void 0 ? void 0 : response.status.toLowerCase()) === "failed") {
      this.handleError();
    }
    return response;
  }
  handleError() {
    _ui_ecf86bba_js__WEBPACK_IMPORTED_MODULE_3__.u.nextText = "next";
    this.newItemToggleNavigationEnabled.emit(true);
    this.loading = false;
    this.error = {
      title: _ui_ecf86bba_js__WEBPACK_IMPORTED_MODULE_3__.u.i18n.error,
      description: _ui_ecf86bba_js__WEBPACK_IMPORTED_MODULE_3__.u.i18n.appendUpload.errors.errorWhileUpload
    };
  }
  render() {
    const { i18n, options, insertOnly, error, loaderType, loading, loaderMessage } = this;
    return ((0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)(_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.H, { class: { "overflow-hidden": loading } }, (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("arcgis-new-item-loader", { type: loaderType, active: loading, text: loaderMessage }), (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: "header" }, insertOnly ? i18n.insertOnlyEnabled : i18n.chooseUpdate), (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: "tile-select" }, Object.keys(options).map((key) => {
      const { icon, hidden, disabled } = options[key];
      return ((0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-tile-select", { key: key, checked: this.selected === key, heading: i18n.options[key].title, icon: icon, name: "append-select-update", width: "full", type: "radio", value: key, class: "tile-card", hidden: hidden, disabled: disabled, inputEnabled: true, onCalciteTileSelectChange: (e) => {
          this.selected = e.target.value;
          _ui_ecf86bba_js__WEBPACK_IMPORTED_MODULE_3__.u.nextText =
            this.selected === "overwrite" ? this.createOverwriteNextText() : "next";
        } }));
    })), (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("arcgis-new-item-alert", { heading: error === null || error === void 0 ? void 0 : error.title, description: error === null || error === void 0 ? void 0 : error.description, active: !!error, onAlertDismiss: () => (this.error = null) })));
  }
  get el() { return (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.d)(this); }
};
ArcgisNewItemPagesAppendSelect.style = arcgisNewItemPagesAppendSelectCss;




/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,