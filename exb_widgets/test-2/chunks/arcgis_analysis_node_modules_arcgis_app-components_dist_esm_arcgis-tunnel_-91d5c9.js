"use strict";
(self["webpackChunkexb_client"] = self["webpackChunkexb_client"] || []).push([["extensions_widgets_arcgis_analysis_node_modules_arcgis_app-components_dist_esm_arcgis-tunnel_-91d5c9"],{

/***/ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/arcgis-tunnel.entry.js":
/*!****************************************************************************************************************!*\
  !*** ./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/arcgis-tunnel.entry.js ***!
  \****************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   arcgis_tunnel: () => (/* binding */ TunnelComponent)
/* harmony export */ });
/* harmony import */ var _index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index-92ebb396.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/index-92ebb396.js");
/* harmony import */ var _dom_13f5b00c_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dom-13f5b00c.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/dom-13f5b00c.js");
/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * v3.0.99
 */



const observerState = {
  elements: new Map()
};
function handleMutations(records) {
  const hasRemoval = records.find((record) => { var _a; return ((_a = record.removedNodes) === null || _a === void 0 ? void 0 : _a.length) && record.type === "childList"; });
  if (hasRemoval) {
    for (const element of observerState.elements.keys()) {
      if (!element.parentNode || !(0,_dom_13f5b00c_js__WEBPACK_IMPORTED_MODULE_1__.i)(element)) {
        const callbacks = observerState.elements.get(element);
        callbacks === null || callbacks === void 0 ? void 0 : callbacks.forEach(callback => callback());
        observerState.elements.delete(element);
      }
    }
  }
}
function observeElementRemoval(element, callback) {
  var _a;
  if (!element || !callback) {
    return;
  }
  if (!observerState.observer) {
    observerState.observer = new MutationObserver(handleMutations);
    observerState.observer.observe(document.querySelector("body"), { childList: true, subtree: true });
  }
  observerState.elements.set(element, [...((_a = observerState.elements.get(element)) !== null && _a !== void 0 ? _a : []), callback]);
  return observerState.observer;
}

const TunnelComponent = class {
  constructor(hostRef) {
    (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.r)(this, hostRef);
    this.moved = false;
    this.cleanUp = () => {
      var _a;
      (_a = this.tunnel) === null || _a === void 0 ? void 0 : _a.remove();
    };
    this.reference = undefined;
    this.destination = document.body;
  }
  createTunnel() {
    this.tunnel = document.createElement("div");
    this.destination.append(this.tunnel);
    this.tunnel.appendChild(this.element);
    observeElementRemoval(this.reference, this.cleanUp);
  }
  componentDidLoad() {
    this.createTunnel();
  }
  disconnectedCallback() {
    this.moved ? this.tunnel.remove() : (this.moved = true);
  }
  render() {
    return ((0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)(_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.H, { ref: (el) => (this.element = el) }, (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("slot", null)));
  }
};




/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2lkZ2V0cy9jaHVua3MvYXJjZ2lzX2FuYWx5c2lzX25vZGVfbW9kdWxlc19hcmNnaXNfYXBwLWNvbXBvbmVudHNfZGlzdF9lc21fYXJjZ2lzLXR1bm5lbF8tOTFkNWM5LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQzBFO0FBQ3BCOztBQUV0RDtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdEQUFnRCxRQUFRLG9IQUFvSDtBQUM1SztBQUNBO0FBQ0Esa0NBQWtDLG1EQUFZO0FBQzlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxRUFBcUUsZ0NBQWdDO0FBQ3JHO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxJQUFJLHFEQUFnQjtBQUNwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLHFEQUFDLENBQUMsaURBQUksSUFBSSxrQ0FBa0MsRUFBRSxxREFBQztBQUMzRDtBQUNBOztBQUU0QyIsInNvdXJjZXMiOlsid2VicGFjazovL2V4Yi1jbGllbnQvLi9leHRlbnNpb25zL3dpZGdldHMvYXJjZ2lzL2FuYWx5c2lzL25vZGVfbW9kdWxlcy9AYXJjZ2lzL2FwcC1jb21wb25lbnRzL2Rpc3QvZXNtL2FyY2dpcy10dW5uZWwuZW50cnkuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLyohXG4gKiBBbGwgbWF0ZXJpYWwgY29weXJpZ2h0IEVTUkksIEFsbCBSaWdodHMgUmVzZXJ2ZWQsIHVubGVzcyBvdGhlcndpc2Ugc3BlY2lmaWVkLlxuICogdjMuMC45OVxuICovXG5pbXBvcnQgeyByIGFzIHJlZ2lzdGVySW5zdGFuY2UsIGgsIEggYXMgSG9zdCB9IGZyb20gJy4vaW5kZXgtOTJlYmIzOTYuanMnO1xuaW1wb3J0IHsgaSBhcyBpc0luRG9jdW1lbnQgfSBmcm9tICcuL2RvbS0xM2Y1YjAwYy5qcyc7XG5cbmNvbnN0IG9ic2VydmVyU3RhdGUgPSB7XG4gIGVsZW1lbnRzOiBuZXcgTWFwKClcbn07XG5mdW5jdGlvbiBoYW5kbGVNdXRhdGlvbnMocmVjb3Jkcykge1xuICBjb25zdCBoYXNSZW1vdmFsID0gcmVjb3Jkcy5maW5kKChyZWNvcmQpID0+IHsgdmFyIF9hOyByZXR1cm4gKChfYSA9IHJlY29yZC5yZW1vdmVkTm9kZXMpID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS5sZW5ndGgpICYmIHJlY29yZC50eXBlID09PSBcImNoaWxkTGlzdFwiOyB9KTtcbiAgaWYgKGhhc1JlbW92YWwpIHtcbiAgICBmb3IgKGNvbnN0IGVsZW1lbnQgb2Ygb2JzZXJ2ZXJTdGF0ZS5lbGVtZW50cy5rZXlzKCkpIHtcbiAgICAgIGlmICghZWxlbWVudC5wYXJlbnROb2RlIHx8ICFpc0luRG9jdW1lbnQoZWxlbWVudCkpIHtcbiAgICAgICAgY29uc3QgY2FsbGJhY2tzID0gb2JzZXJ2ZXJTdGF0ZS5lbGVtZW50cy5nZXQoZWxlbWVudCk7XG4gICAgICAgIGNhbGxiYWNrcyA9PT0gbnVsbCB8fCBjYWxsYmFja3MgPT09IHZvaWQgMCA/IHZvaWQgMCA6IGNhbGxiYWNrcy5mb3JFYWNoKGNhbGxiYWNrID0+IGNhbGxiYWNrKCkpO1xuICAgICAgICBvYnNlcnZlclN0YXRlLmVsZW1lbnRzLmRlbGV0ZShlbGVtZW50KTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cbmZ1bmN0aW9uIG9ic2VydmVFbGVtZW50UmVtb3ZhbChlbGVtZW50LCBjYWxsYmFjaykge1xuICB2YXIgX2E7XG4gIGlmICghZWxlbWVudCB8fCAhY2FsbGJhY2spIHtcbiAgICByZXR1cm47XG4gIH1cbiAgaWYgKCFvYnNlcnZlclN0YXRlLm9ic2VydmVyKSB7XG4gICAgb2JzZXJ2ZXJTdGF0ZS5vYnNlcnZlciA9IG5ldyBNdXRhdGlvbk9ic2VydmVyKGhhbmRsZU11dGF0aW9ucyk7XG4gICAgb2JzZXJ2ZXJTdGF0ZS5vYnNlcnZlci5vYnNlcnZlKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCJib2R5XCIpLCB7IGNoaWxkTGlzdDogdHJ1ZSwgc3VidHJlZTogdHJ1ZSB9KTtcbiAgfVxuICBvYnNlcnZlclN0YXRlLmVsZW1lbnRzLnNldChlbGVtZW50LCBbLi4uKChfYSA9IG9ic2VydmVyU3RhdGUuZWxlbWVudHMuZ2V0KGVsZW1lbnQpKSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiBbXSksIGNhbGxiYWNrXSk7XG4gIHJldHVybiBvYnNlcnZlclN0YXRlLm9ic2VydmVyO1xufVxuXG5jb25zdCBUdW5uZWxDb21wb25lbnQgPSBjbGFzcyB7XG4gIGNvbnN0cnVjdG9yKGhvc3RSZWYpIHtcbiAgICByZWdpc3Rlckluc3RhbmNlKHRoaXMsIGhvc3RSZWYpO1xuICAgIHRoaXMubW92ZWQgPSBmYWxzZTtcbiAgICB0aGlzLmNsZWFuVXAgPSAoKSA9PiB7XG4gICAgICB2YXIgX2E7XG4gICAgICAoX2EgPSB0aGlzLnR1bm5lbCkgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLnJlbW92ZSgpO1xuICAgIH07XG4gICAgdGhpcy5yZWZlcmVuY2UgPSB1bmRlZmluZWQ7XG4gICAgdGhpcy5kZXN0aW5hdGlvbiA9IGRvY3VtZW50LmJvZHk7XG4gIH1cbiAgY3JlYXRlVHVubmVsKCkge1xuICAgIHRoaXMudHVubmVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgICB0aGlzLmRlc3RpbmF0aW9uLmFwcGVuZCh0aGlzLnR1bm5lbCk7XG4gICAgdGhpcy50dW5uZWwuYXBwZW5kQ2hpbGQodGhpcy5lbGVtZW50KTtcbiAgICBvYnNlcnZlRWxlbWVudFJlbW92YWwodGhpcy5yZWZlcmVuY2UsIHRoaXMuY2xlYW5VcCk7XG4gIH1cbiAgY29tcG9uZW50RGlkTG9hZCgpIHtcbiAgICB0aGlzLmNyZWF0ZVR1bm5lbCgpO1xuICB9XG4gIGRpc2Nvbm5lY3RlZENhbGxiYWNrKCkge1xuICAgIHRoaXMubW92ZWQgPyB0aGlzLnR1bm5lbC5yZW1vdmUoKSA6ICh0aGlzLm1vdmVkID0gdHJ1ZSk7XG4gIH1cbiAgcmVuZGVyKCkge1xuICAgIHJldHVybiAoaChIb3N0LCB7IHJlZjogKGVsKSA9PiAodGhpcy5lbGVtZW50ID0gZWwpIH0sIGgoXCJzbG90XCIsIG51bGwpKSk7XG4gIH1cbn07XG5cbmV4cG9ydCB7IFR1bm5lbENvbXBvbmVudCBhcyBhcmNnaXNfdHVubmVsIH07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=