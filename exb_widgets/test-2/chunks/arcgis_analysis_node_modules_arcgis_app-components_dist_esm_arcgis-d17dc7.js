"use strict";
(self["webpackChunkexb_client"] = self["webpackChunkexb_client"] || []).push([["vendors-extensions_widgets_arcgis_analysis_node_modules_arcgis_app-components_dist_esm_arcgis-d17dc7"],{

/***/ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/arcgis-new-item_19.entry.js":
/*!*********************************************************************************************************************!*\
  !*** ./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/arcgis-new-item_19.entry.js ***!
  \*********************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   arcgis_new_item: () => (/* binding */ ArcgisNewItem),
/* harmony export */   arcgis_new_item_create_layers_list: () => (/* binding */ ArcgisNewItemCreateLayersList),
/* harmony export */   arcgis_new_item_csv_field: () => (/* binding */ ArcgisNewItemCsvField),
/* harmony export */   arcgis_new_item_custom_parameter: () => (/* binding */ ArcgisNewItemCustomParameter),
/* harmony export */   arcgis_new_item_custom_parameters: () => (/* binding */ ArcgisNewItemCustomParameters),
/* harmony export */   arcgis_new_item_input_readonly: () => (/* binding */ ArcgisNewItemInputReadonly),
/* harmony export */   arcgis_new_item_layer_search: () => (/* binding */ ArcgisNewItemLayerSearch),
/* harmony export */   arcgis_new_item_pages_application: () => (/* binding */ ArcgisNewItemPagesApplication),
/* harmony export */   arcgis_new_item_pages_auth: () => (/* binding */ ArcgisNewItemPagesAuth),
/* harmony export */   arcgis_new_item_pages_bulk_layer_select: () => (/* binding */ ArcgisNewItemPagesBulkLayerSelect),
/* harmony export */   arcgis_new_item_pages_cloud: () => (/* binding */ ArcgisNewItemPagesCloud),
/* harmony export */   arcgis_new_item_pages_file_fields: () => (/* binding */ ArcgisNewItemPagesFileFields),
/* harmony export */   arcgis_new_item_pages_item_properties: () => (/* binding */ ArcgisNewItemPagesItemProperties),
/* harmony export */   arcgis_new_item_pages_publish_select: () => (/* binding */ ArcgisNewItemPagesPublishSelect),
/* harmony export */   arcgis_new_item_pages_single_layer_select: () => (/* binding */ ArcgisNewItemPagesSingleLayerSelect),
/* harmony export */   arcgis_new_item_pages_url_type: () => (/* binding */ ArcgisNewItemPagesUrlType),
/* harmony export */   arcgis_new_item_pages_zip_select: () => (/* binding */ ArcgisNewItemPagesZipSelect),
/* harmony export */   arcgis_new_item_timezone_dropdown: () => (/* binding */ ArcgisNewItemTimezoneDropdown),
/* harmony export */   arcgis_new_item_url: () => (/* binding */ ArcgisNewItemUrl)
/* harmony export */ });
/* harmony import */ var _index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index-92ebb396.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/index-92ebb396.js");
/* harmony import */ var _portal_79caaeff_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./portal-79caaeff.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/portal-79caaeff.js");
/* harmony import */ var _config_eb5f7dc2_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./config-eb5f7dc2.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/config-eb5f7dc2.js");
/* harmony import */ var _functional_c82f5ab9_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./functional-c82f5ab9.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/functional-c82f5ab9.js");
/* harmony import */ var _locale_13e00a75_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./locale-13e00a75.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/locale-13e00a75.js");
/* harmony import */ var _user_e3dedc4a_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./user-e3dedc4a.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/user-e3dedc4a.js");
/* harmony import */ var _item_properties_e6412a9a_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./item-properties-e6412a9a.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/item-properties-e6412a9a.js");
/* harmony import */ var _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./add-item-97d577a9.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/add-item-97d577a9.js");
/* harmony import */ var _item_types_b4fe86ad_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./item-types-b4fe86ad.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/item-types-b4fe86ad.js");
/* harmony import */ var _tile_layer_90a6b901_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./tile-layer-90a6b901.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/tile-layer-90a6b901.js");
/* harmony import */ var _feature_layer_38cdae87_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./feature-layer-38cdae87.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/feature-layer-38cdae87.js");
/* harmony import */ var _tile_layer_f8be7028_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./tile-layer-f8be7028.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/tile-layer-f8be7028.js");
/* harmony import */ var _ui_ecf86bba_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./ui-ecf86bba.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/ui-ecf86bba.js");
/* harmony import */ var _utils_86ac6961_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./utils-86ac6961.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/utils-86ac6961.js");
/* harmony import */ var _file_f36193e9_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./file-f36193e9.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/file-f36193e9.js");
/* harmony import */ var _server_item_f12153e6_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./server-item-f12153e6.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/server-item-f12153e6.js");
/* harmony import */ var _item_types_054054c6_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./item-types-054054c6.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/item-types-054054c6.js");
/* harmony import */ var _privileges_35590eb4_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./privileges-35590eb4.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/privileges-35590eb4.js");
/* harmony import */ var _tile_layer_bd7e56c2_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./tile-layer-bd7e56c2.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/tile-layer-bd7e56c2.js");
/* harmony import */ var _subscription_09185996_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./subscription-09185996.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/subscription-09185996.js");
/* harmony import */ var _privileges_ccd5f37d_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./privileges-ccd5f37d.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/privileges-ccd5f37d.js");
/* harmony import */ var _geocode_7eb7c0df_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./geocode-7eb7c0df.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/geocode-7eb7c0df.js");
/* harmony import */ var _guid_4f4176ba_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./guid-4f4176ba.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/guid-4f4176ba.js");
/* harmony import */ var _url_f3b82cc7_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./url-f3b82cc7.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/url-f3b82cc7.js");
/* harmony import */ var _index_eb224d3c_js__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./index-eb224d3c.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/index-eb224d3c.js");
/* harmony import */ var _data_store_f509564d_js__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./data-store-f509564d.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/data-store-f509564d.js");
/* harmony import */ var _image_collection_a67002cc_js__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./image-collection-a67002cc.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/image-collection-a67002cc.js");
/* harmony import */ var _publish_item_82ffa7f8_js__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./publish-item-82ffa7f8.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/publish-item-82ffa7f8.js");
/* harmony import */ var _i18n_6685247f_js__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./i18n-6685247f.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/i18n-6685247f.js");
/* harmony import */ var _feature_layer_d0f64b81_js__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./feature-layer-d0f64b81.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/feature-layer-d0f64b81.js");
/* harmony import */ var _analyze_a3711367_js__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./analyze-a3711367.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/analyze-a3711367.js");
/* harmony import */ var _ags_68d4ae20_js__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./ags-68d4ae20.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/ags-68d4ae20.js");
/* harmony import */ var _loadModules_aaf30bd6_js__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./loadModules-aaf30bd6.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/loadModules-aaf30bd6.js");
/* harmony import */ var _index_81d548b7_js__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ./index-81d548b7.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/index-81d548b7.js");
/* harmony import */ var _dom_13f5b00c_js__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! ./dom-13f5b00c.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/dom-13f5b00c.js");
/* harmony import */ var _languageUtil_22258c90_js__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! ./languageUtil-22258c90.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/languageUtil-22258c90.js");
/* harmony import */ var _feature_layer_d33ea114_js__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! ./feature-layer-d33ea114.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/feature-layer-d33ea114.js");
/* harmony import */ var _thumbnail_0b7adfcd_js__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! ./thumbnail-0b7adfcd.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/thumbnail-0b7adfcd.js");
/* harmony import */ var _query_4f7b7e4d_js__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(/*! ./query-4f7b7e4d.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/query-4f7b7e4d.js");
/* harmony import */ var _api_f7934cd7_js__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(/*! ./api-f7934cd7.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/api-f7934cd7.js");
/* harmony import */ var _item_d9d70416_js__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(/*! ./item-d9d70416.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/item-d9d70416.js");
/* harmony import */ var _feature_layer_69305a85_js__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(/*! ./feature-layer-69305a85.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/feature-layer-69305a85.js");
/* harmony import */ var _functional_9f648bee_js__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(/*! ./functional-9f648bee.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/functional-9f648bee.js");
/* harmony import */ var _store_3210b604_js__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(/*! ./store-3210b604.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/store-3210b604.js");
/* harmony import */ var _storage_d7f5822e_js__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(/*! ./storage-d7f5822e.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/storage-d7f5822e.js");
/* harmony import */ var _data_store_e8b5ce2f_js__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(/*! ./data-store-e8b5ce2f.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/data-store-e8b5ce2f.js");
/* harmony import */ var _basic_ee9c674c_js__WEBPACK_IMPORTED_MODULE_46__ = __webpack_require__(/*! ./basic-ee9c674c.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/basic-ee9c674c.js");
/* harmony import */ var _commonEnums_f98a323c_js__WEBPACK_IMPORTED_MODULE_47__ = __webpack_require__(/*! ./commonEnums-f98a323c.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/commonEnums-f98a323c.js");
/* harmony import */ var _append_58a7e7ab_js__WEBPACK_IMPORTED_MODULE_48__ = __webpack_require__(/*! ./append-58a7e7ab.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/append-58a7e7ab.js");
/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * v3.0.99
 */


















































// TODO: remove newItemMode === "url" once the business logic for feature collection is ready
const canSkipPublishSelectToNextPage = ({ directMode, newItemMode, itemType, cloud, isMultipageExcel, fromExistingItem, canPublishItemType }) => {
  if (fromExistingItem && !isMultipageExcel) {
    return true;
  }
  if (directMode) {
    // #2728 for CSV --- #2731 for GeoJSON
    if ((cloud && !isMultipageExcel) ||
      ((!isMultipageExcel || newItemMode === "url") &&
        (!canPublishItemType || (itemType !== "GeoJson" && itemType !== "CSV")))) {
      return true;
    }
  }
  return false;
};

const initializeWithExistingItem = async (item, options) => {
  var _a;
  const { existingItemType, portal, existingItemPublishType } = options;
  _config_eb5f7dc2_js__WEBPACK_IMPORTED_MODULE_2__.c.initialFolder =
    (_a = (await (0,_user_e3dedc4a_js__WEBPACK_IMPORTED_MODULE_5__.d)(item.folderId, item.itemOwner))) !== null && _a !== void 0 ? _a : (0,_user_e3dedc4a_js__WEBPACK_IMPORTED_MODULE_5__.e)(item.itemOwner);
  let type = item.type;
  // After publish, somehow the new item will have GeoJSON instead of GeoJson
  if (type === "GeoJSON") {
    type = "GeoJson";
  }
  _item_properties_e6412a9a_js__WEBPACK_IMPORTED_MODULE_6__.i.title = item.title;
  _item_properties_e6412a9a_js__WEBPACK_IMPORTED_MODULE_6__.i.categories = item.categories;
  const curTag = item.tags;
  if (Array.isArray(curTag)) {
    _item_properties_e6412a9a_js__WEBPACK_IMPORTED_MODULE_6__.i.tags = curTag || [];
  }
  else {
    _item_properties_e6412a9a_js__WEBPACK_IMPORTED_MODULE_6__.i.tags = (curTag !== null && curTag !== void 0 ? curTag : "").split(",");
  }
  _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.id = item.id;
  _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.type = type;
  _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.fileName = item.name;
  _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.existingItem = item;
  // TODO: determine if this is true
  // Enable publishing causes this bug https://devtopia.esri.com/WebGIS/arcgis-portal-app/issues/40133
  _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.enablePublishing = existingItemType !== "tileLayer";
  _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.newItemMode = existingItemType;
  switch (existingItemType) {
    case "file":
      _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.extension = _item_types_b4fe86ad_js__WEBPACK_IMPORTED_MODULE_8__.a[type].fileExt[0];
      break;
    case "tileLayer":
      const { id, url, title } = item;
      const [{ layers, tables, serviceInfo }] = await Promise.all([
        (0,_feature_layer_38cdae87_js__WEBPACK_IMPORTED_MODULE_10__.g)(url, (0,_portal_79caaeff_js__WEBPACK_IMPORTED_MODULE_1__.g)(portal), true)
      ]);
      const { result: updatedItemData } = await (0,_tile_layer_f8be7028_js__WEBPACK_IMPORTED_MODULE_11__.f)({
        itemId: id,
        itemUrl: url,
        publishType: existingItemPublishType === "vectorTiles" ? "vector" : "raster",
        portal,
        fullLayers: layers
      });
      _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.sourceTitle = title;
      _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.tileLayerPublishType = existingItemPublishType;
      if (_add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.tileLayerPublishType === "3dTiles") {
        _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.tilesLayer3dTilesLayerType = _tile_layer_90a6b901_js__WEBPACK_IMPORTED_MODULE_9__.D;
        break;
      }
      _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.tileLayerData = updatedItemData;
      _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.tileAutoCreation = true;
      _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.tileLayerBasemapType = "standard";
      _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.tileLayerBasemapUrl = "";
      _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.tileLayerFromFeatureLayer = true;
      _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.tileLayerLayers = layers;
      _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.tileLayerTables = tables;
      _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.tileLayerServiceInfo = serviceInfo;
      break;
  }
};

/** mapping of next page detail to element tag name */
const pages = {
  application: "arcgis-new-item-pages-application",
  auth: "arcgis-new-item-pages-auth",
  bulkLayerSelect: "arcgis-new-item-pages-bulk-layer-select",
  cloud: "arcgis-new-item-pages-cloud",
  csvLocationFields: "arcgis-new-item-pages-csv-location-fields",
  dataUpload: "arcgis-new-item-pages-data-upload",
  dataStoreBrowser: "arcgis-new-item-pages-data-store-browser",
  dataStoreList: "arcgis-new-item-pages-data-store-list",
  dataStoreSelect: "arcgis-new-item-pages-data-store-select",
  dataStoreSelectFolder: "arcgis-new-item-pages-data-store-select-folder",
  dataStoreSelectDatabase: "arcgis-new-item-pages-data-store-select-database",
  dataStoreSelectDatabaseType: "arcgis-new-item-pages-data-store-select-database-type",
  dataStoreSelectBdfs: "arcgis-new-item-pages-data-store-select-bdfs",
  dataStoreSelectBdfsCloud: "arcgis-new-item-pages-data-store-select-bdfs-cloud",
  dataStoreSelectBdfsFileshare: "arcgis-new-item-pages-data-store-select-bdfs-fileshare",
  dataStoreSelectBdfsHdfs: "arcgis-new-item-pages-data-store-select-bdfs-hdfs",
  dataStoreSelectBdfsHive: "arcgis-new-item-pages-data-store-select-bdfs-hive",
  dataStoreSelectCloud: "arcgis-new-item-pages-data-store-select-cloud",
  dataStoreSelectCloudCredentials: "arcgis-new-item-pages-data-store-select-cloud-credentials",
  dataStoreDatabaseCredentials: "arcgis-new-item-pages-data-store-database-credentials",
  dataStoreSelectNoSql: "arcgis-new-item-pages-data-store-select-nosql",
  dataStoreSelectNoSqlCredentials: "arcgis-new-item-pages-data-store-select-nosql-credentials",
  dataStoreSelectArangoCredentials: "arcgis-new-item-pages-data-store-select-arango-credentials",
  dataStoreSelectServerList: "arcgis-new-item-pages-data-store-select-server-list",
  developerCredentialsSelect: "arcgis-new-item-pages-developer-credentials-select",
  featureLayerFromExisting: "arcgis-new-item-pages-feature-layer-from-existing",
  featureLayerFromScratch: "arcgis-new-item-pages-feature-layer-from-scratch",
  featureLayerFromTemplate: "arcgis-new-item-pages-feature-layer-from-template",
  featureLayerFromURL: "arcgis-new-item-pages-feature-layer-from-url",
  featureLayerPreference: "arcgis-new-item-pages-feature-layer-preference",
  appendSelect: "arcgis-new-item-pages-append-select",
  appendUpload: "arcgis-new-item-pages-append-upload",
  appendSelectUpdate: "arcgis-new-item-pages-append-select-update",
  appendMatchFields: "arcgis-new-item-pages-append-match-fields",
  appendKeyPairSelect: "arcgis-new-item-pages-append-key-pair-select",
  appendSelectLayer: "arcgis-new-item-pages-append-select-layer",
  appendOverwrite: "arcgis-new-item-pages-append-overwrite",
  appendFinish: "arcgis-new-item-pages-append-job",
  featureLayerSelect: "arcgis-new-item-pages-feature-layer-select",
  featureLayerSummary: "arcgis-new-item-pages-feature-layer-summary",
  fileField: "arcgis-new-item-pages-file-fields",
  hybridImageSelect: "arcgis-new-item-pages-hybrid-image-select",
  itemProperties: "arcgis-new-item-pages-item-properties",
  layerUpload: "arcgis-new-item-pages-layer-upload",
  locatorSelect: "arcgis-new-item-pages-locator-select",
  publishSelect: "arcgis-new-item-pages-publish-select",
  sceneLayerSelect: "arcgis-new-item-pages-scene-layer-select",
  serverList: "arcgis-new-item-pages-server-list",
  serviceScope: "arcgis-new-item-pages-service-scope",
  singleLayerSelect: "arcgis-new-item-pages-single-layer-select",
  tileLayerFromExisting: "arcgis-new-item-pages-tile-layer-from-existing",
  tileLayerFromUrl: "arcgis-new-item-pages-tile-layer-from-url",
  tileLayerSelect: "arcgis-new-item-pages-tile-layer-select",
  tileLayerSettings: "arcgis-new-item-pages-tile-layer-settings",
  urlTypeSelect: "arcgis-new-item-pages-url-type",
  zipSelect: "arcgis-new-item-pages-zip-select",
  default: "arcgis-new-item-pages-home"
};

const handleInitWithFile = (file) => {
  const { title, fileName, extension } = (0,_file_f36193e9_js__WEBPACK_IMPORTED_MODULE_14__.s)(file);
  _item_properties_e6412a9a_js__WEBPACK_IMPORTED_MODULE_6__.i.title = title;
  _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.file = file;
  _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.fileName = fileName;
  _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.newItemMode = "file";
  _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.extension = extension;
  return extension;
};
const analyzeItemForNextStep = (extension) => {
  const possibleItemTypes = (0,_item_types_054054c6_js__WEBPACK_IMPORTED_MODULE_16__.f)(extension);
  const itemType = possibleItemTypes[0];
  const { type, nextStep } = itemType;
  _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.type = type;
  return { nextStep, type };
};
const handleDeleteItem = async (itemId, fromExistingItem) => {
  try {
    itemId && !fromExistingItem && (await (0,_server_item_f12153e6_js__WEBPACK_IMPORTED_MODULE_15__.d)(itemId, { permanentDelete: true }));
  }
  catch (_a) {
    // if no existing item was found, assume it's not there, safe to proceed. (WebGIS/arcgis-portal-app#40040)
    return;
  }
};

const TELEMETRY_ID = "new item";
const TELEMETRY_PAGE_NAME = "my content";
function logAddNewItemStart() {
  const telemetry = _config_eb5f7dc2_js__WEBPACK_IMPORTED_MODULE_2__.c.telemetry;
  telemetry === null || telemetry === void 0 ? void 0 : telemetry.startWorkflow("new item upload", {
    eventType: "workflow",
    category: "new item upload",
    details: _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.type,
    pageName: TELEMETRY_PAGE_NAME
  });
}
function logSuccessfulItemCreation() {
  const { type, applicationType, customParameters, selectedLayerIdTracker } = _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a;
  const telemetry = _config_eb5f7dc2_js__WEBPACK_IMPORTED_MODULE_2__.c.telemetry;
  const telemetryDetails = _ui_ecf86bba_js__WEBPACK_IMPORTED_MODULE_12__.u.telemetryDetails;
  telemetry === null || telemetry === void 0 ? void 0 : telemetry.endWorkflow("new item upload", {
    details: type,
    pageName: TELEMETRY_PAGE_NAME
  });
  // Set up telemetry payload based on the path the user took
  const payload = {
    eventType: "other",
    pageName: TELEMETRY_PAGE_NAME,
    category: TELEMETRY_ID,
    label: TELEMETRY_ID,
    details: telemetryDetails
  };
  if (telemetryDetails === "url") {
    payload.attribute = type;
    if ((customParameters === null || customParameters === void 0 ? void 0 : customParameters.length) > 0) {
      payload.action = "customParams";
    }
    if (type === "WMS") {
      payload.count = selectedLayerIdTracker === null || selectedLayerIdTracker === void 0 ? void 0 : selectedLayerIdTracker.count;
    }
  }
  else if (applicationType) {
    payload.attribute = applicationType;
  }
  telemetry === null || telemetry === void 0 ? void 0 : telemetry.logEvent(payload);
}
const logInitWithFile = () => {
  const { telemetry } = _config_eb5f7dc2_js__WEBPACK_IMPORTED_MODULE_2__.c;
  const payload = {
    eventType: "other",
    pageName: "my content",
    category: "content page drag drop",
    label: "content"
  };
  telemetry === null || telemetry === void 0 ? void 0 : telemetry.logEvent(payload);
  _ui_ecf86bba_js__WEBPACK_IMPORTED_MODULE_12__.u.telemetryDetails = "drag drop";
};
function logItemPropertiesChanges() {
  var _a, _b;
  const telemetry = _config_eb5f7dc2_js__WEBPACK_IMPORTED_MODULE_2__.c.telemetry;
  const { title, folder, categories, tags, snippet } = _item_properties_e6412a9a_js__WEBPACK_IMPORTED_MODULE_6__.i;
  const { initialTitle, initialFolders } = _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a;
  const homeFolder = !folder || folder.title === folder.id;
  const existingFolder = !!initialFolders.map((folder) => folder.id).find((id) => id === folder.id);
  // Log changes the user has made to default item properties
  const payload = {
    eventType: "other",
    pageName: TELEMETRY_PAGE_NAME,
    category: "new item item info",
    label: title === initialTitle ? "default title" : "title changed",
    action: (snippet === null || snippet === void 0 ? void 0 : snippet.length) > 0 ? "summary" : "no summary",
    count: (_a = tags === null || tags === void 0 ? void 0 : tags.length) !== null && _a !== void 0 ? _a : 0,
    number: (_b = categories === null || categories === void 0 ? void 0 : categories.length) !== null && _b !== void 0 ? _b : 0
  };
  // Check if the user added to a folder they created within item properties
  if (!existingFolder) {
    payload.details = "new folder";
  }
  else {
    payload.details = homeFolder ? "root folder" : "custom folder";
  }
  telemetry === null || telemetry === void 0 ? void 0 : telemetry.logEvent(payload);
}

const arcgisNewItemCss = ".stage{padding-bottom:1.5rem;padding-left:1px;padding-right:1px;box-sizing:border-box;width:100%;opacity:1;display:block;height:calc(100% - 2rem);transition:all 200ms ease-in-out}@media screen and (min-width: 1080px){.stage{height:min(700px, 60vh)}}.stage--fullscreen{height:100%;overflow:auto;padding-bottom:0}.stage--disable-scroll{overflow:hidden;height:33vh}.stage-anim{transform:translate3d(0, 0, 0)}.stage-anim--leaving{position:absolute;width:calc(100% - 4rem)}.stage-anim--left{opacity:0;transform:translate3d(-24px, 0, 0)}.stage-anim--right{opacity:0;transform:translate3d(24px, 0, 0)}.header{display:flex;align-items:center;position:relative}.header>.icon{border-style:none;margin-left:0.5rem;margin-right:0.5rem;padding:0;display:flex;background-color:transparent}@media screen and (max-width: 480px){.stage{padding-bottom:6rem}}.header__title{font-size:1.125rem;margin:0;padding:0;font-weight:500}.content{height:100%}.onboarding{--arcgis-information-min-width:0}.onboarding__scroll{overflow:auto;max-height:min(700px, 60vh)}.onboarding__section{padding-bottom:1rem;padding-top:0.5rem;width:255px}.onboarding__title{color:var(--calcite-ui-text-1);font-size:0.875rem;padding-top:0;margin:0;font-weight:600}.onboarding__description{margin-top:0.5rem;margin-bottom:0.75rem;font-size:0.75rem;color:var(--calcite-ui-text-1)}.modal{--calcite-modal-width:1080px;--calcite-modal-height:min(922px, 75vh)}.modal--grey{--calcite-modal-content-padding:0;--calcite-modal-content-background:var(--calcite-ui-background)}";

const ANIMATION_DURATION = 200;
const ArcgisNewItem = class {
  constructor(hostRef) {
    (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.r)(this, hostRef);
    this.workflowCancel = (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "workflowCancel", 7);
    this.workflowComplete = (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "workflowComplete", 7);
    this.showBackButton = false;
    this.workflowCompleted = false;
    this.closeDialog = () => {
      const { id, existingItem } = _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a;
      const fromExistingItem = !!existingItem && _ui_ecf86bba_js__WEBPACK_IMPORTED_MODULE_12__.u.workflow !== "append"; //don't want to delete HFL item before new file is uploaded.
      !this.workflowCompleted && this.handleCancel(id, fromExistingItem);
      this.workflowCompleted = false;
      (0,_utils_86ac6961_js__WEBPACK_IMPORTED_MODULE_13__.r)();
      this.pageHistory = ["home"];
      // Reset to make sure if the modal is opened again, it will be in the default state
      //  and any nextText change will trigger the `onChange properly
      _ui_ecf86bba_js__WEBPACK_IMPORTED_MODULE_12__.u.nextText = "next";
      // https://devtopia.esri.com/WebGIS/arcgis-portal-app/issues/43280
      // maintain item id on setting page register cancel
      // R2 TODO: improve store cleanup/reinitialization
      if (this.workflow === "register") {
        _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.id = id;
        _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.existingItem = existingItem;
      }
    };
    this.handleCancel = async (itemId, fromExistingItem) => {
      let cancelPayload;
      const { overwritePayload } = _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a;
      if (overwritePayload) {
        cancelPayload = overwritePayload;
      }
      else {
        await _feature_layer_38cdae87_js__WEBPACK_IMPORTED_MODULE_10__.s.unsubscribeAll();
        await handleDeleteItem(itemId, fromExistingItem);
      }
      this.workflowCancel.emit(cancelPayload);
      const telemetry = _config_eb5f7dc2_js__WEBPACK_IMPORTED_MODULE_2__.c.telemetry;
      (telemetry === null || telemetry === void 0 ? void 0 : telemetry.getWorkflow("new item upload")) &&
        (telemetry === null || telemetry === void 0 ? void 0 : telemetry.cancelWorkflow("new item upload", {
          details: _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.type
        }));
    };
    this.user = undefined;
    this.portal = undefined;
    this.api = undefined;
    this.config = undefined;
    this.telemetry = undefined;
    this.file = undefined;
    this.firstStep = undefined;
    this.initialFolder = undefined;
    this.isActive = true;
    this.layerId = undefined;
    this.layer = undefined;
    this.existingItem = undefined;
    this.existingItemType = undefined;
    this.existingItemPublishType = undefined;
    this.workflow = undefined;
    this.allowedItemTypes = undefined;
    this.allowedModes = [..._item_types_b4fe86ad_js__WEBPACK_IMPORTED_MODULE_8__.A];
    this.allowPublish = true;
    this.pageHistory = ["home"];
    this.initialPage = "default";
    this.navEnabled = true;
    this.transition = undefined;
    this.targetHeight = undefined;
    this.outerHeight = undefined;
    this.primaryButtonText = undefined;
    this.noPadding = undefined;
    this.isLoading = false;
    this.loadingText = undefined;
    this.disableCloseButton = false;
    this.headerIconRef = undefined;
  }
  disableNavButtons(event) {
    this.navEnabled = event.detail;
  }
  disableCloseButtons(event) {
    //disables "Cancel" and "x" buttons on modal
    if (this.isDisableClosePage(this.pageHistory[this.pageHistory.length - 1])) {
      this.disableCloseButton = event.detail;
    }
  }
  handleRedirect({ detail }) {
    const payload = {
      response: { success: true, id: null, folder: null },
      type: detail.type
    };
    if (detail.url) {
      payload.url = detail.url;
      payload.customParameters = detail.customParameters;
      payload.layers = detail.layers;
    }
    this.workflowComplete.emit(payload);
    this.isActive = false;
  }
  handleWorkflowComplete() {
    this.workflowCompleted = true;
    if (_ui_ecf86bba_js__WEBPACK_IMPORTED_MODULE_12__.u.workflow === "map") {
      this.isLoading = true;
      this.loadingText = this.i18n.creatingLayer;
    }
    else {
      this.isActive = false;
    }
  }
  async goToNextPage(event) {
    var _a, _b, _c;
    // Reset in case we forget to set it
    _ui_ecf86bba_js__WEBPACK_IMPORTED_MODULE_12__.u.nextText = "next";
    this.transition = "forward";
    this.pageHistory = [...this.pageHistory, event.detail];
    this.targetHeight = null;
    this.outerHeight = this.contentSlot.offsetHeight;
    this.cleanPageHistory();
    const oldPage = this.currentScreen;
    const newPage = pages[event.detail];
    const oldPageHeight = this.el.querySelector(oldPage).clientHeight;
    const contentContainer = (_a = this.modalRef) === null || _a === void 0 ? void 0 : _a.shadowRoot.querySelector(".content");
    if (contentContainer) {
      contentContainer.style.overflow = "hidden";
    }
    await (0,_functional_c82f5ab9_js__WEBPACK_IMPORTED_MODULE_3__.t)(ANIMATION_DURATION);
    const newPageHeight = (_b = this.el.querySelector(newPage)) === null || _b === void 0 ? void 0 : _b.clientHeight;
    if (newPageHeight) {
      this.targetHeight = oldPageHeight;
      this.outerHeight = null;
      await (0,_functional_c82f5ab9_js__WEBPACK_IMPORTED_MODULE_3__.t)(ANIMATION_DURATION);
      this.targetHeight = newPageHeight;
    }
    await (0,_functional_c82f5ab9_js__WEBPACK_IMPORTED_MODULE_3__.t)(ANIMATION_DURATION);
    this.targetHeight = null;
    this.transition = null;
    await (0,_functional_c82f5ab9_js__WEBPACK_IMPORTED_MODULE_3__.t)(ANIMATION_DURATION);
    if (contentContainer) {
      contentContainer.style.overflowY = "auto";
    }
    const transitionCompleteEvent = new CustomEvent("arcgisTransitionComplete");
    (_c = this.currentPageEl) === null || _c === void 0 ? void 0 : _c.dispatchEvent(transitionCompleteEvent);
    this.focusFirstElement();
  }
  async goToPreviousPage() {
    var _a, _b, _c;
    // Reset in case we forget to
    _ui_ecf86bba_js__WEBPACK_IMPORTED_MODULE_12__.u.nextText = "next";
    const { pageHistory } = this;
    this.transition = "back";
    this.targetHeight = null;
    this.outerHeight = this.contentSlot.offsetHeight;
    const oldPage = pages[pageHistory[pageHistory.length - 1]] || pages.default;
    const newPage = pages[pageHistory[pageHistory.length - 2]] || pages.default;
    const oldPageHeight = this.el.querySelector(oldPage).clientHeight;
    const contentContainer = (_a = this.modalRef) === null || _a === void 0 ? void 0 : _a.shadowRoot.querySelector(".content");
    if (contentContainer) {
      contentContainer.style.overflow = "hidden";
    }
    await (0,_functional_c82f5ab9_js__WEBPACK_IMPORTED_MODULE_3__.t)(ANIMATION_DURATION);
    const newPageHeight = (_b = this.el.querySelector(newPage)) === null || _b === void 0 ? void 0 : _b.clientHeight;
    if (newPageHeight) {
      this.targetHeight = oldPageHeight;
      this.outerHeight = null;
      await (0,_functional_c82f5ab9_js__WEBPACK_IMPORTED_MODULE_3__.t)(ANIMATION_DURATION);
      this.targetHeight = newPageHeight;
    }
    await (0,_functional_c82f5ab9_js__WEBPACK_IMPORTED_MODULE_3__.t)(ANIMATION_DURATION);
    this.targetHeight = null;
    this.transition = null;
    this.pageHistory = this.pageHistory.length === 1 ? this.pageHistory.slice(0, 1) : this.pageHistory.slice(0, -1);
    await (0,_functional_c82f5ab9_js__WEBPACK_IMPORTED_MODULE_3__.t)(ANIMATION_DURATION);
    if (contentContainer) {
      contentContainer.style.overflowY = "auto";
    }
    const transitionCompleteEvent = new CustomEvent("arcgisTransitionComplete");
    (_c = this.currentPageEl) === null || _c === void 0 ? void 0 : _c.dispatchEvent(transitionCompleteEvent);
    this.focusFirstElement();
  }
  updateActive(active) {
    if (active && this.firstStep) {
      this.pageHistory = [this.firstStep];
    }
  }
  updateFirstStep(page) {
    this.pageHistory = [page];
  }
  initializeWithFile() {
    const { user, portal } = _config_eb5f7dc2_js__WEBPACK_IMPORTED_MODULE_2__.c;
    const { file } = this;
    if (file) {
      const extension = handleInitWithFile(file);
      if (extension === "zip") {
        this.pageHistory = ["home", "zipSelect"];
        return;
      }
      const { nextStep, type } = analyzeItemForNextStep(extension);
      this.postprocessAddFromFile(type);
      // there is no reason to show publishSelect screen for users that can't publish
      if (!(0,_privileges_35590eb4_js__WEBPACK_IMPORTED_MODULE_17__.a)(user, type, portal) && nextStep === "publishSelect") {
        _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.enablePublishing = false;
        this.pageHistory = ["home", "itemProperties"];
      }
      else {
        this.pageHistory = ["home", nextStep];
      }
      logInitWithFile();
    }
  }
  postprocessAddFromFile(type) {
    _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.tileLayerPublishType = type === "3DTiles Package" ? "3dTiles" : undefined;
  }
  updateInitialFolder(folder) {
    _config_eb5f7dc2_js__WEBPACK_IMPORTED_MODULE_2__.c.initialFolder = folder;
  }
  focusFirstElement() {
    var _a;
    const curPage = this.currentPageEl;
    if (curPage && !curPage.managedFocus) {
      (_a = this.modalRef) === null || _a === void 0 ? void 0 : _a.setFocus();
    }
  }
  removePageFromHistory(page) {
    const { pageHistory } = this;
    if (pageHistory.length > 1 && pageHistory.includes(page) && pageHistory.at(-1) !== page) {
      pageHistory.splice(pageHistory.indexOf(page), 1);
    }
  }
  cleanPageHistory() {
    const { newItemMode, type, excelLayers, existingItem, cloudProviderResource } = _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a;
    const prevPage = this.pageHistory[this.pageHistory.length - 2];
    const isMultipageExcel = type === "Microsoft Excel" && (excelLayers === null || excelLayers === void 0 ? void 0 : excelLayers.length) > 1;
    const directMode = _ui_ecf86bba_js__WEBPACK_IMPORTED_MODULE_12__.u.workflow === "map";
    if (canSkipPublishSelectToNextPage({
      directMode,
      isMultipageExcel,
      newItemMode,
      itemType: type,
      cloud: !!cloudProviderResource,
      // #38481: After a CSV/Json has been analyzed for publish, remove publishSelect from history
      // Excel files with multiple sheets should still have access
      fromExistingItem: !!existingItem,
      canPublishItemType: (0,_privileges_35590eb4_js__WEBPACK_IMPORTED_MODULE_17__.a)(_config_eb5f7dc2_js__WEBPACK_IMPORTED_MODULE_2__.c.user, type, _config_eb5f7dc2_js__WEBPACK_IMPORTED_MODULE_2__.c.portal)
    }) &&
      prevPage === "publishSelect") {
      this.removePageFromHistory("publishSelect");
    }
  }
  async initializeWithExistingItem() {
    const item = this.existingItem;
    const existingItemType = this.existingItemType;
    this.isLoading = true;
    await initializeWithExistingItem(item, {
      existingItemType,
      portal: _config_eb5f7dc2_js__WEBPACK_IMPORTED_MODULE_2__.c.portal,
      existingItemPublishType: this.existingItemPublishType
    });
    this.isLoading = false;
    const type = item.type;
    if (this.workflow === "append") {
      _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.layerId = this === null || this === void 0 ? void 0 : this.layerId;
      _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.sublayer = this === null || this === void 0 ? void 0 : this.layer;
      _ui_ecf86bba_js__WEBPACK_IMPORTED_MODULE_12__.u.workflow = "append";
      this.initialPage = "appendSelect";
      this.pageHistory = [this.initialPage];
    }
    else if (this.workflow === "update") {
      this.pageHistory = ["dataUpload"];
    }
    else if (["CSV", "Microsoft Excel"].includes(type)) {
      this.pageHistory = ["publishSelect"];
    }
    else if (existingItemType === "tileLayer") {
      this.pageHistory = ["tileLayerSettings"];
    }
    else if (this.workflow === "register") {
      // TODO: rework this once Steven publish his dubstep diagram
      this.pageHistory = ["developerCredentialsSelect"];
    }
    else {
      this.pageHistory = ["itemProperties"];
    }
  }
  triggerPageTransition(eventType) {
    var _a;
    const event = new CustomEvent(eventType, { cancelable: true });
    const eventNotCancelled = (_a = this.currentPageEl) === null || _a === void 0 ? void 0 : _a.dispatchEvent(event);
    if (eventNotCancelled && eventType === "arcgisNewItemPagePrev") {
      this.goToPreviousPage();
    }
  }
  /** Update the component in the modal's slot when a state change is detected */
  displayPage() {
    if (!this.isActive) {
      // No point of rendering elements on the screen if modal is not active
      return;
    }
    const { transition, pageHistory, initialPage } = this;
    const forward = transition === "forward";
    const back = transition === "back";
    const next = back ? pageHistory[pageHistory.length - 2] : pageHistory[pageHistory.length - 1];
    // TODO: strictly type this
    const NextScreen = `${pages[next] || pages[initialPage]}`;
    const CurrentScreen = this.currentScreen;
    if (CurrentScreen && pageHistory.length > 1 && transition) {
      return [
        (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)(CurrentScreen, { class: {
            stage: true,
            "stage--fullscreen": this.isFullScreenPage(CurrentScreen),
            "stage-anim": true,
            "stage-anim--leaving": true,
            "stage-anim--left": forward,
            "stage-anim--right": back
          } }),
        (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)(NextScreen, { class: {
            stage: true,
            "stage--fullscreen": this.isFullScreenPage(NextScreen),
            "stage-anim": true,
            "stage-anim--left": back,
            "stage-anim--right": forward
          }, style: { height: `${this.targetHeight}px` }, ref: (el) => {
            var _a;
            this.currentPageEl = el;
            (_a = this.modalRef) === null || _a === void 0 ? void 0 : _a.updateFocusTrapElements();
          } })
      ];
    }
    else {
      this.currentScreen = NextScreen;
    }
    const style = this.targetHeight ? { height: `${this.targetHeight}px` } : {};
    return ((0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)(NextScreen, { class: {
        stage: true,
        "stage--fullscreen": this.isFullScreenPage(NextScreen)
      }, style: style, ref: (el) => {
        this.currentPageEl = el;
      } }));
  }
  disconnectedCallback() {
    this.closeDialog();
  }
  /** Initialize the itemPropertiesStore with data from props on load */
  async componentWillLoad() {
    var _a, _b, _c;
    const { file, portal, api, user, config, telemetry, existingItem, firstStep, workflow, initialFolder } = this;
    const locale = await (0,_locale_13e00a75_js__WEBPACK_IMPORTED_MODULE_4__.g)(this.el);
    this.i18n = locale[0];
    _ui_ecf86bba_js__WEBPACK_IMPORTED_MODULE_12__.u.i18n = locale[0];
    _config_eb5f7dc2_js__WEBPACK_IMPORTED_MODULE_2__.c.lang = locale[1];
    this.primaryButtonText = this.i18n.next;
    _ui_ecf86bba_js__WEBPACK_IMPORTED_MODULE_12__.u.workflow = workflow;
    _config_eb5f7dc2_js__WEBPACK_IMPORTED_MODULE_2__.c.portal = portal;
    if (!!user) {
      const { error, result: _isPortalBackedBySDS } = await (0,_portal_79caaeff_js__WEBPACK_IMPORTED_MODULE_1__.f)(() => (0,_portal_79caaeff_js__WEBPACK_IMPORTED_MODULE_1__.i)(portal, user), "isPortalBackedBySDS", portal.id);
      if (!error) {
        _config_eb5f7dc2_js__WEBPACK_IMPORTED_MODULE_2__.c.portal.isBackedBySDS = _isPortalBackedBySDS;
      }
    }
    _config_eb5f7dc2_js__WEBPACK_IMPORTED_MODULE_2__.c.api = api;
    _config_eb5f7dc2_js__WEBPACK_IMPORTED_MODULE_2__.c.config = config;
    _config_eb5f7dc2_js__WEBPACK_IMPORTED_MODULE_2__.c.allowedItemTypes = this.allowedItemTypes;
    _config_eb5f7dc2_js__WEBPACK_IMPORTED_MODULE_2__.c.allowedModes = this.allowedModes;
    _config_eb5f7dc2_js__WEBPACK_IMPORTED_MODULE_2__.c.allowPublish = this.allowPublish;
    _config_eb5f7dc2_js__WEBPACK_IMPORTED_MODULE_2__.c.telemetry = telemetry;
    _config_eb5f7dc2_js__WEBPACK_IMPORTED_MODULE_2__.c.config.helpBase = (_a = config === null || config === void 0 ? void 0 : config.helpBase) !== null && _a !== void 0 ? _a : portal.helpBase;
    _config_eb5f7dc2_js__WEBPACK_IMPORTED_MODULE_2__.c.initialFolder = initialFolder;
    if (!((_b = _config_eb5f7dc2_js__WEBPACK_IMPORTED_MODULE_2__.c.config) === null || _b === void 0 ? void 0 : _b.helpMap)) {
      const helpResponse = await (0,_portal_79caaeff_js__WEBPACK_IMPORTED_MODULE_1__.r)(`${config.restBaseUrl}/portals/helpmap?culture=${_config_eb5f7dc2_js__WEBPACK_IMPORTED_MODULE_2__.c.lang}`);
      _config_eb5f7dc2_js__WEBPACK_IMPORTED_MODULE_2__.c.config.helpMap = helpResponse === null || helpResponse === void 0 ? void 0 : helpResponse.helpMap.m;
    }
    if (user) {
      _config_eb5f7dc2_js__WEBPACK_IMPORTED_MODULE_2__.c.user = user;
      _config_eb5f7dc2_js__WEBPACK_IMPORTED_MODULE_2__.c.userLicensedItems =
        (_c = user.userLicensedItems) !== null && _c !== void 0 ? _c : (await (0,_privileges_35590eb4_js__WEBPACK_IMPORTED_MODULE_17__.f)(portal));
    }
    if (file) {
      this.initializeWithFile();
    }
    if (existingItem) {
      this.initializeWithExistingItem();
    }
    if (firstStep) {
      this.pageHistory = [this.firstStep];
    }
    _ui_ecf86bba_js__WEBPACK_IMPORTED_MODULE_12__.a.onChange("disableScroll", () => {
      _ui_ecf86bba_js__WEBPACK_IMPORTED_MODULE_12__.u.disableScroll
        ? this.contentSlot.classList.add("stage--disable-scroll")
        : this.contentSlot.classList.remove("stage--disable-scroll");
    });
    _ui_ecf86bba_js__WEBPACK_IMPORTED_MODULE_12__.a.onChange("nextText", () => {
      const { i18n } = this;
      let nextText = i18n.next;
      switch (_ui_ecf86bba_js__WEBPACK_IMPORTED_MODULE_12__.u.nextText) {
        case "addToMap":
          nextText = i18n.common.addToMap;
          break;
        case "createAndAddToMap":
          nextText = i18n.common.createAndAddToMap;
          break;
        case "useAsBaseMap":
          nextText = i18n.urlType.useAsBaseMap;
          break;
        case "updateAppend":
          nextText = i18n.common.updateAndComplete;
          break;
        case "addAndComplete":
          nextText = i18n.common.addAndComplete;
          break;
        case "proceed":
          nextText = i18n.common.proceed;
          break;
        case "register":
          nextText = i18n.common.register;
          break;
        case "save":
          nextText = i18n.save;
          break;
        case "createConnection":
          nextText = i18n.common.createConnection;
          break;
        case "signInAndOverwrite":
          nextText = i18n.common.signInAndOverwrite;
          break;
        case "overwriteAndComplete":
          nextText = i18n.common.overwriteAndComplete;
          break;
      }
      this.primaryButtonText = nextText;
    });
  }
  componentWillRender() {
    this.showBackButton = this.pageHistory.length > 1;
  }
  componentDidLoad() {
    this.modalRef.setFocus();
  }
  componentDidRender() {
    var _a, _b;
    const shadowRoot = (_a = this.modalRef) === null || _a === void 0 ? void 0 : _a.shadowRoot;
    // Help the tooltip to be on top of the footer
    if (shadowRoot) {
      const modalHeader = shadowRoot.querySelector(".header");
      if (modalHeader) {
        modalHeader.style.zIndex = "3";
      }
      const modalFooter = shadowRoot.querySelector(".footer");
      const modalContent = shadowRoot.querySelector(".content");
      const modal = shadowRoot.querySelector(".modal");
      const hideFooter = this.currentScreen === pages.default;
      const isHome = this.currentScreen === pages[this.initialPage];
      if (modalFooter && modalContent) {
        modalFooter.style.position = "absolute";
        modalFooter.style.bottom = "0";
        modalFooter.style.visibility = hideFooter ? "hidden" : "visible";
        modal.style.position = "relative";
        if (isHome) {
          modalContent.style.paddingBottom = "65px";
          modal.style.paddingBottom = "0";
        }
        else {
          modalContent.style.paddingBottom = "0";
          modal.style.paddingBottom = "65px";
        }
      }
    }
    this.noPadding = this.isFullScreenPage(this.currentScreen);
    (_b = this.modalRef) === null || _b === void 0 ? void 0 : _b.updateFocusTrapElements();
  }
  isFullScreenPage(page) {
    return [
      "arcgis-new-item-pages-feature-layer-from-template",
      "arcgis-new-item-pages-feature-layer-from-existing",
      "arcgis-new-item-pages-tile-layer-from-store",
      "arcgis-new-item-pages-data-store-list",
      "arcgis-new-item-pages-data-store-browser",
      "arcgis-new-item-pages-tile-layer-from-existing",
      "arcgis-new-item-pages-append-select-layer"
    ].includes(page);
  }
  isDisableClosePage(page) {
    const pageToHideCloseButton = [
      "appendSelectUpdate",
      "csvLocationFields",
      "appendMatchFields"
    ];
    return pageToHideCloseButton.includes(page);
  }
  getHeaderTitle() {
    const { i18n, pageHistory } = this;
    const { newItemMode, existingItem } = _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a;
    if (_ui_ecf86bba_js__WEBPACK_IMPORTED_MODULE_12__.u.workflow === "map") {
      return i18n.addLayer;
    }
    if (_ui_ecf86bba_js__WEBPACK_IMPORTED_MODULE_12__.u.workflow === "register" && existingItem) {
      return i18n.common.register;
    }
    if (newItemMode === "rasterFunctionTemplate") {
      return i18n.createRasterFunctionTemplate;
    }
    const curPage = (pageHistory[pageHistory.length - 1] || "").toLowerCase();
    switch (true) {
      case curPage.includes("featurelayer"):
        return i18n.createFeatureLayer;
      case curPage.includes("tilelayer"):
        return i18n.createTileLayer;
      case _ui_ecf86bba_js__WEBPACK_IMPORTED_MODULE_12__.u.workflow === "update" && (existingItem === null || existingItem === void 0 ? void 0 : existingItem.type) === "Vector Tile Service":
        return i18n.update;
      case _ui_ecf86bba_js__WEBPACK_IMPORTED_MODULE_12__.u.workflow === "append" || _ui_ecf86bba_js__WEBPACK_IMPORTED_MODULE_12__.u.workflow === "update":
        return i18n.appendSelect.updateData;
      case newItemMode === "sceneLayer":
        return i18n.createSceneLayer;
      case newItemMode === "tileLayer":
        return i18n.createTileLayer;
      case newItemMode === "dataStore":
        return i18n.addDataStore;
      default:
        return i18n.newItem;
    }
  }
  renderOnboardingSection({ title, content, background, path }) {
    return ((0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: "onboarding__section" }, (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("h4", { class: "onboarding__title" }, title), (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("p", { class: "onboarding__description" }, content), (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("svg", { width: "255", height: "64", viewBox: "0 0 255 64", fill: "none", xmlns: "http://www.w3.org/2000/svg" }, (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("rect", { width: "255", height: "64", fill: background, "fill-opacity": "0.1" }), path)));
  }
  renderOnboarding() {
    if (_ui_ecf86bba_js__WEBPACK_IMPORTED_MODULE_12__.u.workflow === "map") {
      return null;
    }
    const { i18n } = this;
    const onboardingContent = [
      {
        title: i18n.onboard.addDocumentTitle,
        content: i18n.onboard.addDocumentContent,
        background: "#007ac2",
        show: true,
        path: ((0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("path", { d: "M132.257 45.5566L146.318 31.4926L140 25.1736L141.368 21.5716L126.485 15.9196L122.666 12.0996H109.1V42.8996H113.611L116.756 44.0946L125.246 52.5646L129.054 48.7656L130.787 49.4246L132.043 46.1186H132.044L132.257 45.5566ZM145.187 31.4926L132.95 43.7296L139.686 25.9946L145.187 31.4926ZM122.9 13.4656L130.534 21.0996H122.9V13.4656ZM109.9 12.8996H122.334L122.434 12.9996H122.1V21.8996H131V21.5646L131.1 21.6656V42.0996H109.9V12.8996ZM125.246 51.4336L118.586 44.7896L128.233 48.4546L125.246 51.4336ZM130.324 48.3936L115.864 42.8996H131.9V21.3336L127.865 17.2976L140.335 22.0346L131.643 44.9216L130.324 48.3936Z", fill: "#3985B2" }))
      },
      {
        title: i18n.onboard.publishLayerTitle,
        content: this.portal.isPortal
          ? i18n.onboard.publishLayerEnterprise
          : i18n.onboard.publishLayerContent,
        show: (0,_privileges_35590eb4_js__WEBPACK_IMPORTED_MODULE_17__.b)(this.user, this.portal),
        background: "#35AC46",
        path: ((0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("path", { d: "M141.105 16.2537L140.876 16.1767C140.564 16.0727 133.164 13.6597 126.852 16.1857C120.814 18.5977 113.449 16.2007 113.376 16.1757L112.931 16.0287L107.808 47.2817L108.071 47.4137C110.922 48.6327 114.002 49.2205 117.101 49.1367C120.513 49.1139 123.898 48.5398 127.126 47.4367C138.069 43.7867 145.497 47.3767 145.571 47.4147L146.271 47.7627L141.105 16.2537ZM126.874 46.6767C117.087 49.9387 110.114 47.4137 108.694 46.8167L113.571 17.0727C115.303 17.5747 121.639 19.1327 127.148 16.9277C132.588 14.7537 139.104 16.4837 140.396 16.8657L145.236 46.3987C143.116 45.5657 136.336 43.5227 126.874 46.6767ZM137.68 18.4287C134.067 17.7098 130.328 17.9712 126.85 19.1857C125.996 19.5212 125.112 19.7751 124.21 19.9437L124.198 19.9467C121.662 20.3744 119.07 20.3616 116.538 19.9087L116.141 19.8427L112.111 44.4287L112.478 44.5117C114.342 44.9239 116.247 45.1288 118.156 45.1227C121.549 45.1021 124.915 44.5328 128.126 43.4367C131.17 42.4017 134.358 41.8503 137.573 41.8027H137.583C138.825 41.7881 140.066 41.8603 141.297 42.0187L141.832 42.0887L137.961 18.4767L137.68 18.4287ZM140.363 38.0717L137.891 40.5437C137.8 39.7207 137.658 38.9042 137.467 38.0987L139.959 35.6067L140.363 38.0717ZM139.799 34.6347L137.233 37.2007C137.023 36.4878 136.761 35.7916 136.448 35.1177L139.396 32.1687L139.799 34.6347ZM139.236 31.1977L136.061 34.3727C135.732 33.7679 135.335 33.2031 134.876 32.6897L138.832 28.7337L139.236 31.1977ZM138.672 27.7617L134.302 32.1317C133.848 31.7219 133.356 31.355 132.834 31.0357C132.858 30.9203 132.873 30.8033 132.88 30.6857L138.268 25.2967L138.672 27.7617ZM138.109 24.3247L132.747 29.6867C132.627 29.3574 132.437 29.0584 132.189 28.8106C131.941 28.5629 131.642 28.3724 131.313 28.2527L137.705 21.8607L138.109 24.3247ZM130.5 28.9007C130.817 28.9007 131.126 28.9945 131.389 29.1703C131.652 29.3461 131.857 29.596 131.978 29.8884C132.099 30.1807 132.131 30.5024 132.069 30.8128C132.008 31.1232 131.855 31.4083 131.631 31.632C131.408 31.8558 131.123 32.0082 130.812 32.0699C130.502 32.1317 130.18 32.1 129.888 31.9789C129.595 31.8578 129.346 31.6527 129.17 31.3896C128.994 31.1265 128.9 30.8171 128.9 30.5007C128.901 30.0765 129.069 29.6698 129.369 29.3699C129.669 29.0699 130.076 28.9012 130.5 28.9007ZM137.547 20.8877L130.316 28.1187C129.991 28.1436 129.675 28.2349 129.386 28.3869C129.098 28.539 128.844 28.7485 128.64 29.0027C128.195 28.7707 127.773 28.4971 127.38 28.1857L130.972 24.5947C131.336 24.8317 131.771 24.9365 132.203 24.8913C132.635 24.8461 133.039 24.6538 133.346 24.3465C133.653 24.0393 133.846 23.6357 133.891 23.2036C133.936 22.7714 133.831 22.3368 133.594 21.9727L136.502 19.0647C136.762 19.0987 137.022 19.1317 137.265 19.1707L137.547 20.8877ZM133.1 23.0007C133.1 23.2182 133.036 23.4309 132.915 23.6118C132.794 23.7927 132.622 23.9337 132.421 24.0169C132.22 24.1002 131.999 24.122 131.786 24.0795C131.572 24.0371 131.376 23.9323 131.222 23.7785C131.068 23.6246 130.964 23.4286 130.921 23.2153C130.879 23.0019 130.901 22.7807 130.984 22.5797C131.067 22.3787 131.208 22.2069 131.389 22.0861C131.57 21.9652 131.783 21.9007 132 21.9007C132.292 21.9009 132.571 22.0169 132.778 22.2231C132.984 22.4294 133.1 22.709 133.1 23.0007ZM135.481 18.9527L133.028 21.4067C132.664 21.1696 132.229 21.0649 131.797 21.11C131.365 21.1552 130.962 21.3476 130.654 21.6548C130.347 21.9621 130.155 22.3656 130.109 22.7978C130.064 23.2299 130.169 23.6645 130.406 24.0287L126.785 27.6507C126.533 27.3913 126.302 27.1113 126.096 26.8137C125.913 26.5372 125.757 26.2439 125.629 25.9377L132.706 18.8617C133.632 18.8364 134.559 18.8668 135.481 18.9527ZM127.893 19.6737C129.063 19.2898 130.273 19.0422 131.499 18.9357L125.323 25.1117C125.089 24.3363 124.924 23.5419 124.829 22.7377L127.893 19.6737ZM126.166 20.2687L124.726 21.7087C124.7 21.3618 124.684 21.0144 124.676 20.6667C125.193 20.5567 125.686 20.4207 126.166 20.2687ZM127.874 42.6767C123.113 44.3665 117.987 44.7579 113.024 43.8107L116.802 20.7607C119.145 21.1389 121.532 21.1571 123.88 20.8147C123.919 22.2727 124.157 25.4197 125.439 27.2687C126.163 28.2967 127.127 29.1318 128.248 29.7007C128.153 29.9568 128.103 30.2275 128.1 30.5007C128.099 31.0201 128.267 31.5258 128.579 31.9414C128.89 32.357 129.329 32.6601 129.827 32.8049C130.326 32.9497 130.859 32.9284 131.344 32.7442C131.83 32.56 132.243 32.2229 132.52 31.7837C133.084 32.1296 133.609 32.5368 134.084 32.9977C134.694 33.6027 136.674 35.9357 137.146 41.0097C133.99 41.1015 130.865 41.6633 127.874 42.6767ZM138.549 41.0177L140.523 39.0437L140.87 41.1607C140.099 41.0796 139.325 41.0319 138.55 41.0177H138.549ZM119 25.1007C118.624 25.1007 118.257 25.2121 117.945 25.4209C117.632 25.6297 117.389 25.9264 117.245 26.2736C117.101 26.6207 117.063 27.0028 117.137 27.3713C117.21 27.7399 117.391 28.0785 117.657 28.3442C117.922 28.6099 118.261 28.7908 118.629 28.8642C118.998 28.9375 119.38 28.8998 119.727 28.756C120.074 28.6122 120.371 28.3687 120.58 28.0563C120.789 27.7438 120.9 27.3765 120.9 27.0007C120.9 26.4969 120.699 26.014 120.343 25.6577C119.987 25.3015 119.504 25.1012 119 25.1007ZM119 28.1007C118.783 28.1007 118.57 28.0362 118.389 27.9153C118.208 27.7944 118.067 27.6226 117.984 27.4216C117.901 27.2206 117.879 26.9994 117.921 26.7861C117.964 26.5727 118.068 26.3767 118.222 26.2229C118.376 26.069 118.572 25.9642 118.786 25.9218C118.999 25.8794 119.22 25.9011 119.421 25.9844C119.622 26.0677 119.794 26.2086 119.915 26.3895C120.036 26.5704 120.1 26.7831 120.1 27.0007C120.1 27.2923 119.984 27.572 119.778 27.7782C119.571 27.9844 119.292 28.1004 119 28.1007ZM119.5 33.1007C119.223 33.1007 118.953 33.1828 118.722 33.3366C118.492 33.4904 118.313 33.7091 118.207 33.9649C118.101 34.2207 118.073 34.5022 118.127 34.7738C118.181 35.0454 118.314 35.2948 118.51 35.4906C118.706 35.6864 118.955 35.8197 119.227 35.8738C119.499 35.9278 119.78 35.9001 120.036 35.7941C120.292 35.6881 120.51 35.5087 120.664 35.2785C120.818 35.0482 120.9 34.7776 120.9 34.5007C120.9 34.1295 120.752 33.7737 120.489 33.5113C120.227 33.2489 119.871 33.1012 119.5 33.1007ZM119.5 35.1007C119.381 35.1007 119.265 35.0655 119.167 34.9995C119.068 34.9336 118.991 34.8399 118.946 34.7303C118.9 34.6206 118.888 34.5 118.912 34.3836C118.935 34.2672 118.992 34.1603 119.076 34.0764C119.16 33.9925 119.267 33.9353 119.383 33.9122C119.499 33.889 119.62 33.9009 119.73 33.9463C119.839 33.9918 119.933 34.0687 119.999 34.1673C120.065 34.266 120.1 34.382 120.1 34.5007C120.1 34.6598 120.037 34.8124 119.924 34.9249C119.812 35.0375 119.659 35.1007 119.5 35.1007ZM128 36.1007C127.624 36.1007 127.257 36.2121 126.945 36.4209C126.632 36.6297 126.389 36.9264 126.245 37.2736C126.101 37.6207 126.063 38.0028 126.137 38.3713C126.21 38.7399 126.391 39.0784 126.657 39.3442C126.922 39.6099 127.261 39.7908 127.629 39.8642C127.998 39.9375 128.38 39.8998 128.727 39.756C129.074 39.6122 129.371 39.3687 129.58 39.0563C129.789 38.7438 129.9 38.3765 129.9 38.0007C129.9 37.4969 129.699 37.014 129.343 36.6577C128.987 36.3015 128.504 36.1012 128 36.1007ZM128 39.1007C127.783 39.1007 127.57 39.0362 127.389 38.9153C127.208 38.7944 127.067 38.6226 126.984 38.4216C126.901 38.2206 126.879 37.9994 126.921 37.7861C126.964 37.5727 127.068 37.3767 127.222 37.2229C127.376 37.069 127.572 36.9642 127.786 36.9218C127.999 36.8794 128.22 36.9011 128.421 36.9844C128.622 37.0677 128.794 37.2086 128.915 37.3895C129.036 37.5704 129.1 37.7831 129.1 38.0007C129.1 38.2923 128.984 38.572 128.778 38.7782C128.571 38.9844 128.292 39.1004 128 39.1007Z", fill: "#35AC46" }))
      },
      {
        title: i18n.onboard.linkLayerTitle,
        content: i18n.onboard.linkLayerContent,
        background: "#EDD317",
        show: true,
        path: ((0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("path", { d: "M145.887 31.4506C145.802 26.7994 143.986 22.347 140.792 18.9642C137.599 15.5814 133.258 13.5116 128.62 13.1596C128.253 13.1256 127.881 13.1016 127.5 13.1016C127.119 13.1016 126.747 13.1256 126.38 13.1596C121.741 13.5116 117.4 15.5816 114.207 18.9646C111.014 22.3475 109.197 26.8002 109.113 31.4516C109.113 31.4866 109.119 31.5186 109.122 31.5536C109.118 31.7036 109.1 31.8496 109.1 32.0006C109.063 36.377 110.556 40.6289 113.32 44.0221C116.084 47.4152 119.946 49.7367 124.24 50.5856C124.405 50.6186 124.577 50.6376 124.745 50.6656C125.079 50.7166 125.411 50.7756 125.752 50.8096C126.914 50.9309 128.086 50.9309 129.248 50.8096C129.588 50.7766 129.921 50.7166 130.255 50.6646C130.423 50.6376 130.595 50.6186 130.76 50.5856C135.053 49.7367 138.916 47.4152 141.68 44.0221C144.444 40.6289 145.937 36.377 145.9 32.0006C145.9 31.8506 145.882 31.7036 145.878 31.5536C145.881 31.5186 145.887 31.4866 145.887 31.4516V31.4506ZM142.534 41.3626L142.278 41.6666C141.704 42.2504 141.008 42.7004 140.24 42.9846C141.445 40.2196 142.049 37.2304 142.013 34.2146C143.102 33.9263 144.133 33.4509 145.06 32.8096C144.935 35.8251 144.067 38.7631 142.534 41.3626ZM112.722 41.6666L112.471 41.3586C110.936 38.7609 110.067 35.8242 109.941 32.8096C110.867 33.4508 111.898 33.9262 112.987 34.2146C112.951 37.2304 113.555 40.2196 114.76 42.9846C113.992 42.7003 113.296 42.2503 112.722 41.6666ZM112.298 22.9226C113.015 23.4313 113.838 23.773 114.705 23.9226C113.624 26.9623 113.044 30.1577 112.989 33.3836C111.124 32.8016 110.014 32.1466 109.923 31.5326C109.993 28.5107 110.809 25.553 112.298 22.9226ZM120.476 16.5126C121.232 16.9679 122.064 17.2811 122.933 17.4366C122.079 19.5294 121.455 21.7089 121.072 23.9366C119.301 23.8294 117.537 23.6203 115.79 23.3106C116.782 20.7007 118.39 18.3687 120.476 16.5126ZM139.216 23.3246C137.466 23.6264 135.701 23.8314 133.929 23.9386C133.546 21.7102 132.921 19.53 132.067 17.4366C132.935 17.2811 133.768 16.9679 134.524 16.5126C136.614 18.3723 138.223 20.7092 139.216 23.3246ZM145.076 31.5326C144.986 32.1466 143.876 32.8026 142.011 33.3836C141.955 30.1581 141.376 26.963 140.295 23.9236C141.162 23.774 141.984 23.4323 142.702 22.9236C144.191 25.5537 145.006 28.5111 145.077 31.5326H145.076ZM141.214 33.6156C139.159 34.1446 137.067 34.52 134.956 34.7386C134.919 31.3844 134.623 28.0381 134.071 24.7296C135.896 24.6268 137.713 24.4145 139.512 24.0936C140.608 27.15 141.183 30.3687 141.214 33.6156ZM127.9 17.8756C129.023 17.8623 130.143 17.7674 131.253 17.5916C132.117 19.6458 132.747 21.7906 133.133 23.9856C131.584 24.0756 129.843 24.1306 127.9 24.1376V17.8756ZM127.9 17.0756V13.9366C129.033 14.1396 130.038 15.1966 130.893 16.8406C129.901 16.9847 128.902 17.0626 127.9 17.0736V17.0756ZM127.1 17.0756C126.098 17.0642 125.098 16.9861 124.107 16.8416C124.962 15.1986 125.967 14.1406 127.1 13.9376V17.0756ZM127.1 17.8756V24.1376C125.354 24.1342 123.609 24.0832 121.867 23.9846C122.252 21.7899 122.883 19.6455 123.747 17.5916C124.856 17.7671 125.977 17.8617 127.1 17.8746V17.8756ZM127.1 24.9396V35.1446C125.011 35.1351 122.923 35.0289 120.844 34.8266C120.863 31.459 121.156 28.0986 121.721 24.7786C123.961 24.9056 126.001 24.9346 127.1 24.9386V24.9396ZM127.1 35.9446V45.0376C125.405 45.0269 123.711 44.9231 122.028 44.7266C121.214 41.7646 120.815 38.7041 120.842 35.6326C122.869 35.8276 124.999 35.9326 127.1 35.9446ZM127.1 45.8376V50.0786C124.722 49.8876 123.235 48.0046 122.313 45.5586C123.903 45.7328 125.5 45.8263 127.1 45.8386V45.8376ZM127.9 45.8376C129.499 45.826 131.097 45.7332 132.687 45.5596C131.765 48.0046 130.277 49.8876 127.9 50.0796V45.8376ZM127.9 45.0376V35.9446C129.989 35.9339 132.077 35.8298 134.158 35.6326C134.184 38.7038 133.785 41.7639 132.972 44.7256C131.288 44.9222 129.595 45.0264 127.9 45.0376ZM127.9 35.1446V24.9406C128.999 24.9356 131.038 24.9066 133.279 24.7796C133.843 28.0996 134.136 31.46 134.156 34.8276C132.076 35.0299 129.989 35.136 127.9 35.1456V35.1446ZM131.723 16.6946C131.288 15.7612 130.693 14.911 129.966 14.1826C131.376 14.5183 132.704 15.1368 133.869 16.0006C133.189 16.3317 132.467 16.5659 131.723 16.6966V16.6946ZM123.277 16.6946C122.532 16.5647 121.81 16.3311 121.13 16.0006C122.294 15.1371 123.622 14.519 125.033 14.1836C124.305 14.9123 123.71 15.7628 123.276 16.6966L123.277 16.6946ZM120.929 24.7296C120.376 28.0384 120.08 31.3851 120.044 34.7396C117.933 34.5206 115.841 34.1449 113.786 33.6156C113.817 30.3687 114.392 27.15 115.488 24.0936C117.287 24.4144 119.103 24.6268 120.928 24.7296H120.929ZM113.794 34.4516C115.847 34.9692 117.936 35.3348 120.044 35.5456C119.99 38.6014 120.352 41.6504 121.121 44.6086C119.354 44.3753 117.613 43.9809 115.918 43.4306C114.523 40.6428 113.796 37.5688 113.794 34.4516ZM121.396 45.4446C121.888 47.1149 122.847 48.6098 124.16 49.7536C122.593 49.435 121.108 48.8006 119.794 47.889C118.48 46.9775 117.366 45.8079 116.52 44.4516C118.118 44.9041 119.748 45.2361 121.396 45.4446ZM133.604 45.4446C135.251 45.2364 136.881 44.9048 138.479 44.4526C137.632 45.8085 136.518 46.9778 135.204 47.889C133.891 48.8002 132.405 49.4343 130.839 49.7526C132.152 48.6096 133.111 47.1153 133.604 45.4456V45.4446ZM133.88 44.6086C134.648 41.6504 135.01 38.6014 134.956 35.5456C137.063 35.3348 139.152 34.9692 141.206 34.4516C141.204 37.5688 140.476 40.6428 139.082 43.4306C137.387 43.9809 135.646 44.3752 133.88 44.6086ZM142.282 22.2126C142.282 22.4826 141.512 22.8366 140.005 23.1666C138.972 20.4017 137.288 17.9262 135.096 15.9496C135.134 15.8849 135.167 15.8165 135.192 15.7456C138.101 17.2143 140.552 19.4506 142.282 22.2126ZM134.462 15.3836C134.46 15.4004 134.456 15.4171 134.452 15.4336C134.386 15.3836 134.317 15.3376 134.25 15.2896C134.321 15.3196 134.392 15.3526 134.463 15.3836H134.462ZM120.548 15.4336C120.543 15.4192 120.54 15.4045 120.538 15.3896C120.608 15.3586 120.678 15.3196 120.75 15.2896C120.683 15.3376 120.614 15.3846 120.548 15.4346V15.4336ZM119.808 15.7456C119.833 15.8165 119.865 15.8849 119.904 15.9496C117.716 17.9213 116.035 20.39 115.002 23.1476C113.568 22.8216 112.815 22.4676 112.742 22.1716C114.47 19.428 116.913 17.2066 119.808 15.7456ZM113.885 43.4536C114.341 43.6791 114.81 43.8784 115.289 44.0506C115.781 44.9374 116.369 45.7674 117.043 46.5256C115.868 45.6351 114.807 44.6033 113.885 43.4536ZM137.957 46.5256C138.63 45.7674 139.219 44.9374 139.711 44.0506C140.19 43.8784 140.659 43.6791 141.115 43.4536C140.192 44.6034 139.132 45.6351 137.957 46.5256Z", fill: "#D9BC00" }))
      }
    ]
      .filter((section) => section.show)
      .map(this.renderOnboardingSection);
    return ((0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("arcgis-information", { label: i18n.onboard.tooltipLabel, placement: "bottom-start", heading: i18n.onboard.title, headingLevel: 3, class: "onboarding", overlayPositioning: "fixed", paddedContent: true }, (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: "onboarding__scroll" }, onboardingContent)));
  }
  render() {
    const { i18n, noPadding, isLoading, loadingText, isActive, disableCloseButton } = this;
    const contentStyle = this.outerHeight ? { height: `${this.outerHeight}px` } : {};
    return ((0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-modal", { ref: (ele) => (this.modalRef = ele), open: isActive, onCalciteModalClose: this.closeDialog, outsideCloseDisabled: true, escapeDisabled: true, class: {
        modal: true,
        "modal--grey": noPadding
      }, closeButtonDisabled: disableCloseButton }, (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { slot: "header", class: "header" }, (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("h3", { id: "modal-title", class: "header__title" }, this.getHeaderTitle()), this.pageHistory[this.pageHistory.length - 1] === "home" &&
      isActive &&
      this.renderOnboarding()), (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { slot: "content", style: contentStyle, ref: (el) => (this.contentSlot = el), class: "content" }, isLoading && ((0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: "stage" }, (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("arcgis-new-item-loader", { active: isLoading, text: loadingText !== null && loadingText !== void 0 ? loadingText : i18n.loadingData }))), !isLoading && this.displayPage()), (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { slot: "back" }, this.showBackButton && ((0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-button", { appearance: "outline-fill", kind: "neutral", "data-id": "backButton", onClick: () => {
        if (this.navEnabled) {
          this.triggerPageTransition("arcgisNewItemPagePrev");
        }
      }, width: "full", disabled: !this.navEnabled }, i18n.back))), (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-button", { slot: "secondary", appearance: "outline-fill", "data-id": "cancelButton", onClick: () => {
        if (!disableCloseButton) {
          this.isActive = false;
        }
      }, width: "full", disabled: disableCloseButton }, i18n.cancel), (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-button", { slot: "primary", appearance: "solid", "data-id": "nextButton", onClick: () => {
        this.triggerPageTransition("arcgisNewItemPageNext");
      }, width: "full", disabled: !this.navEnabled }, this.primaryButtonText)));
  }
  get el() { return (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.d)(this); }
  static get watchers() { return {
    "isActive": ["updateActive"],
    "firstStep": ["updateFirstStep"],
    "file": ["initializeWithFile"],
    "initialFolder": ["updateInitialFolder"]
  }; }
};
ArcgisNewItem.style = arcgisNewItemCss;

const handleCreateLayerListTelemetry = (label) => {
  const { telemetry } = _config_eb5f7dc2_js__WEBPACK_IMPORTED_MODULE_2__.c;
  const payload = {
    eventType: "new item click",
    pageName: "my content",
    category: "new item",
    label
  };
  telemetry === null || telemetry === void 0 ? void 0 : telemetry.logEvent(payload);
  _ui_ecf86bba_js__WEBPACK_IMPORTED_MODULE_12__.u.telemetryDetails = label;
};
const handleApplicationClick = () => {
  _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.newItemMode = "application";
  _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.file = null;
  _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.type = "Web Mapping Application";
  _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.typeKeywords = ["JavaScript", "Online Map", "Ready To Use"];
  _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.thumbnailURL = "https://static.arcgis.com/images/desktopapp.png";
};
const handleFeatureLayerClick = async () => {
  var _a;
  (_a = _config_eb5f7dc2_js__WEBPACK_IMPORTED_MODULE_2__.c.telemetry) === null || _a === void 0 ? void 0 : _a.startWorkflow("create feature layer", {
    category: "create feature layer",
    pageName: "my content"
  });
  _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.newItemMode = "create";
};

const arcgisNewItemCreateLayersListCss = ".title{font-weight:400;font-size:1rem;color:var(--calcite-ui-text-1);padding:0;margin:0;margin-top:2rem}.list{margin:0;padding:0;padding-bottom:0.75rem;display:flex;flex-wrap:wrap}.list-item{margin:0;padding:0;display:flex;justify-items:start;list-style-type:none;flex:1 1 380px}.card{margin-top:1.25rem;padding:0;display:flex;border:1px solid transparent;-webkit-margin-end:2rem;margin-inline-end:2rem;max-width:440px;align-items:stretch;background-color:white;transition:all 150ms ease-in-out;outline-offset:0px;outline-color:transparent;font-family:inherit;text-align:initial;cursor:pointer}.card:hover{border-color:#aaa}.card:focus{outline:none;border-color:var(--calcite-ui-brand)}.card:hover .card__icon,.card:focus .card__icon{background-color:#eef7fd}.card:hover .card__arrow,.card:focus .card__arrow{opacity:1;transform:translate3d(0, 0, 0)}.card__arrow{vertical-align:-6px;opacity:0;transform:translate3d(-20px, 0, 0);transition:all 150ms ease-in-out}.card__icon{flex:0 0 auto;display:flex;justify-content:center;align-items:center;width:87px;min-height:87px;color:#000000;background-color:var(--calcite-ui-background);transition:all 150ms ease-in-out}.card__content{padding-left:0.75rem;padding-right:0.75rem;padding-top:0.5rem;padding-bottom:0.5rem}.card__title{font-size:1rem;line-height:1.25rem;margin:0;padding:0;font-weight:400;color:#323232}.card__subtitle{font-size:0.875rem;line-height:1.25rem;font-weight:400;margin:0;margin-top:0.5rem;padding:0;color:#646464}";

const ArcgisNewItemCreateLayersList = class {
  constructor(hostRef) {
    (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.r)(this, hostRef);
    this.newItemUpdatePage = (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "newItemUpdatePage", 7);
    this.handleRedirect = (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "handleRedirect", 7);
    this.i18n = undefined;
    this.options = undefined;
    this.isLoading = false;
  }
  async componentWillLoad() {
    this.i18n = _ui_ecf86bba_js__WEBPACK_IMPORTED_MODULE_12__.u.i18n.createLayersList;
    const { user, portal, userLicensedItems } = _config_eb5f7dc2_js__WEBPACK_IMPORTED_MODULE_2__.c;
    this.isLoading = true;
    const { result: subscriptionInfo } = await (0,_portal_79caaeff_js__WEBPACK_IMPORTED_MODULE_1__.f)(() => (0,_subscription_09185996_js__WEBPACK_IMPORTED_MODULE_19__.g)(_config_eb5f7dc2_js__WEBPACK_IMPORTED_MODULE_2__.c.portal), "subscriptionType", _config_eb5f7dc2_js__WEBPACK_IMPORTED_MODULE_2__.c.user.id);
    _config_eb5f7dc2_js__WEBPACK_IMPORTED_MODULE_2__.c.subscriptionInfo = subscriptionInfo;
    this.isLoading = false;
    // TODO: filter options based on user's permissions
    this.options = [
      {
        heading: this.i18n.featureLayerHeading,
        icon: "featureLayer",
        description: this.i18n.featureLayerDescription,
        show: _config_eb5f7dc2_js__WEBPACK_IMPORTED_MODULE_2__.c.allowedModes.includes("featureLayer") && (0,_privileges_35590eb4_js__WEBPACK_IMPORTED_MODULE_17__.b)(user, portal),
        handler: this.onFeatureLayerClick
      },
      {
        heading: this.i18n.urlHeading,
        icon: "web",
        description: this.i18n.urlDescription,
        show: _config_eb5f7dc2_js__WEBPACK_IMPORTED_MODULE_2__.c.allowedModes.includes("url"),
        handler: this.onURLClick
      },
      {
        heading: this.i18n.developerCredentialsHeading,
        icon: "key",
        description: this.i18n["developerCredentialsNoAPIDescription"],
        show: _config_eb5f7dc2_js__WEBPACK_IMPORTED_MODULE_2__.c.allowedModes.includes("developerCredentials") &&
          (0,_privileges_35590eb4_js__WEBPACK_IMPORTED_MODULE_17__.d)(user),
        handler: this.onDeveloperCredentialsClick
      },
      {
        heading: this.i18n.applicationHeading,
        icon: "apps",
        description: this.i18n.applicationDescription,
        show: _config_eb5f7dc2_js__WEBPACK_IMPORTED_MODULE_2__.c.allowedModes.includes("application"),
        handler: this.onApplicationClick
      },
      {
        heading: this.i18n.imageLayerHeading,
        icon: "imageLayer",
        description: this.i18n.imageLayerDescription,
        show: _config_eb5f7dc2_js__WEBPACK_IMPORTED_MODULE_2__.c.allowedModes.includes("imageryLayer") &&
          (0,_privileges_35590eb4_js__WEBPACK_IMPORTED_MODULE_17__.e)(user, portal, userLicensedItems),
        handler: this.onImageryLayerClick
      },
      {
        heading: this.i18n.tileLayerHeading,
        icon: "tileLayer",
        description: this.i18n.tileLayerDescription,
        show: _config_eb5f7dc2_js__WEBPACK_IMPORTED_MODULE_2__.c.allowedModes.includes("tileLayer") && (0,_privileges_35590eb4_js__WEBPACK_IMPORTED_MODULE_17__.g)(user, portal),
        handler: this.onTileLayerClick
      },
      {
        heading: this.i18n.sceneLayerHeading,
        icon: "layerGraphics",
        description: this.i18n.sceneLayerDescription,
        handler: this.onSceneLayerClick,
        show: _config_eb5f7dc2_js__WEBPACK_IMPORTED_MODULE_2__.c.allowedModes.includes("sceneLayer") && (0,_privileges_35590eb4_js__WEBPACK_IMPORTED_MODULE_17__.h)(user)
      },
      {
        heading: this.i18n.locatorHeading,
        icon: "locator",
        description: this.i18n[(0,_privileges_35590eb4_js__WEBPACK_IMPORTED_MODULE_17__.i)(user, portal) ? "locatorDescription" : "locatorOnlyDescription"],
        show: _config_eb5f7dc2_js__WEBPACK_IMPORTED_MODULE_2__.c.allowedModes.includes("locator") && (0,_privileges_35590eb4_js__WEBPACK_IMPORTED_MODULE_17__.j)(user),
        handler: this.onLocatorClick
      },
      {
        heading: this.i18n.dataStoreHeading,
        icon: "data",
        description: this.i18n.dataStoreDescription,
        show: _config_eb5f7dc2_js__WEBPACK_IMPORTED_MODULE_2__.c.allowedModes.includes("dataStore") && (0,_privileges_35590eb4_js__WEBPACK_IMPORTED_MODULE_17__.k)(user, portal),
        handler: this.onDataStoreClick /* For Enterprise */
      },
      {
        heading: this.i18n.dataStoreHeading,
        icon: "data",
        description: this.i18n.dataStoreConnectionDescription,
        show: false,
        handler: this.onDataStoreConnectionClick /* Placeholder for Online implementation */
      },
      {
        heading: this.i18n.rasterFunctionTemplateHeading,
        icon: "new-raster-function-template",
        description: this.i18n.rasterFunctionTemplateDescription,
        show: _config_eb5f7dc2_js__WEBPACK_IMPORTED_MODULE_2__.c.allowedModes.includes("rasterFunctionTemplate") &&
          (0,_privileges_35590eb4_js__WEBPACK_IMPORTED_MODULE_17__.l)(user) &&
          !(0,_privileges_ccd5f37d_js__WEBPACK_IMPORTED_MODULE_20__.n)(user),
        handler: this.onRasterFunctionTemplateClick
      }
    ];
  }
  onFeatureLayerClick() {
    handleCreateLayerListTelemetry("feature layer");
    handleFeatureLayerClick();
    this.newItemUpdatePage.emit("featureLayerSelect");
  }
  onTileLayerClick() {
    handleCreateLayerListTelemetry("tile layer");
    _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.newItemMode = "tileLayer";
    (0,_tile_layer_bd7e56c2_js__WEBPACK_IMPORTED_MODULE_18__.l)();
    this.newItemUpdatePage.emit("tileLayerSelect");
  }
  onSceneLayerClick() {
    handleCreateLayerListTelemetry("scene layer");
    _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.newItemMode = "sceneLayer";
    // TODO: add telemetry
    // logTileLayerStart();
    if (_config_eb5f7dc2_js__WEBPACK_IMPORTED_MODULE_2__.c.portal.isPortal) {
      this.newItemUpdatePage.emit("sceneLayerSelect");
    }
    else {
      // We only have 1 option in AGOL so just skip the select screen directly
      this.newItemUpdatePage.emit("layerUpload");
    }
  }
  onImageryLayerClick() {
    handleCreateLayerListTelemetry("imagery layer");
    this.handleRedirect.emit({ type: "Imagery Layer" });
  }
  onURLClick() {
    handleCreateLayerListTelemetry("url");
    this.newItemUpdatePage.emit("urlTypeSelect");
  }
  onDataStoreClick() {
    const useNewWorkflow = _config_eb5f7dc2_js__WEBPACK_IMPORTED_MODULE_2__.c.config.addDatastoreComponentEnabled;
    handleCreateLayerListTelemetry("data store");
    if (!useNewWorkflow) {
      // Previous handler for redirecting to the dojo-based workflow
      this.handleRedirect.emit({ type: "Data Store" });
    }
    else {
      // Migrated UI for adding data stores https://devtopia.esri.com/WebGIS/arcgis-app-components/issues/2429
      _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.newItemMode = "dataStore";
      this.newItemUpdatePage.emit("dataStoreSelect");
    }
  }
  onDataStoreConnectionClick() {
    //keeping this separate from onDataStoreClick when this opens up to new item for Online
    _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.newItemMode = "dataStore";
    this.newItemUpdatePage.emit("dataStoreSelect");
  }
  onApplicationClick() {
    handleCreateLayerListTelemetry("an app");
    handleApplicationClick();
    this.newItemUpdatePage.emit("application");
  }
  async onLocatorClick() {
    handleCreateLayerListTelemetry("locator");
    this.newItemUpdatePage.emit("locatorSelect");
  }
  onDeveloperCredentialsClick() {
    _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.newItemMode = "developerCredentials";
    handleCreateLayerListTelemetry("dev cred");
    this.newItemUpdatePage.emit("developerCredentialsSelect");
  }
  onRasterFunctionTemplateClick() {
    handleCreateLayerListTelemetry("raster function template");
    _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.type = "Raster function template";
    _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.newItemMode = "rasterFunctionTemplate";
    this.newItemUpdatePage.emit("itemProperties");
  }
  renderOptions() {
    return this.options.map((option) => option.show && ((0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("li", { class: "list-item" }, (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("button", { class: "card", onClick: option.handler.bind(this) }, (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: "card__icon" }, (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-icon", { icon: option.icon, scale: "l" })), (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: "card__content" }, (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("h4", { class: "card__title" }, option.heading, " ", (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-icon", { class: "card__arrow", icon: "arrow-right", "flip-rtl": true })), (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("h4", { class: "card__subtitle" }, option.description))))));
  }
  render() {
    const { isLoading, i18n } = this;
    return ((0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("nav", { "aria-labelledby": "layers-list-heading" }, (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("arcgis-new-item-loader", { active: isLoading, text: i18n.getSubscriptionInfo }), (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("ul", { class: "list" }, this.renderOptions())));
  }
  get el() { return (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.d)(this); }
};
ArcgisNewItemCreateLayersList.style = arcgisNewItemCreateLayersListCss;

const arcgisNewItemCsvFieldCss = ".cell{box-sizing:border-box;width:33.333333%}.cell label{margin-top:0.75rem !important}.row{display:flex;justify-content:space-between;align-items:center;grid-gap:0.25rem;gap:0.25rem;padding:0.25rem;border-top:1px solid #eaeaea}.deselected{opacity:var(--calcite-ui-opacity-disabled)}.screen-readers-only{position:absolute;width:1px;height:1px;padding:0;margin:-1px;overflow:hidden;clip:rect(0, 0, 0, 0);white-space:nowrap;border-width:0}.label{--calcite-label-margin-bottom:0;position:relative}.field-name{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}";

const ArcgisNewItemCsvField = class {
  constructor(hostRef) {
    (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.r)(this, hostRef);
    this.fieldChange = (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "fieldChange", 7);
    this.handleTypeChange = (ev) => {
      const value = ev.target.selectedOption.value;
      this.fieldChange.emit({
        name: this.field.name,
        key: "type",
        value,
        modified: value !== this.initialField.type
      });
    };
    this.checked = true;
    this.defaultChecked = true;
    this.field = undefined;
    this.fieldTypes = undefined;
    this.detectedType = undefined;
    this.canHideFields = undefined;
    this.displayNameLabel = undefined;
    this.typeLabel = undefined;
  }
  componentWillLoad() {
    this.checked = this.defaultChecked;
    this.allowedFieldTypes = (0,_geocode_7eb7c0df_js__WEBPACK_IMPORTED_MODULE_21__.g)(this.detectedType);
    // Telemetry: Capture default state of the field
    this.initialField = Object.assign({}, this.field);
  }
  render() {
    const { field, canHideFields } = this;
    const deselected = !field.selected;
    return ((0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: "row", role: "row" }, (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-label", { class: "cell", layout: "inline", role: "cell" }, canHideFields && ((0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-checkbox", { onCalciteCheckboxChange: (ev) => this.fieldChange.emit({
        name: field.name,
        key: "selected",
        value: ev.target.checked
      }), checked: field.selected })), (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("span", { class: { "field-name": true, deselected } }, field.name)), (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-label", { class: "cell label", role: "cell" }, (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-input", { disabled: deselected, onCalciteInputInput: (event) => {
        const value = event.target.value;
        this.fieldChange.emit({
          name: field.name,
          key: "alias",
          value,
          modified: value !== this.initialField.alias
        });
      }, value: field.alias || field.name }), (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("span", { class: "screen-readers-only" }, this.displayNameLabel)), (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-select", { label: this.typeLabel, class: "cell", role: "cell", "aria-sort": "none", disabled: deselected, onCalciteSelectChange: this.handleTypeChange }, Object.keys(this.fieldTypes)
      .filter((fieldType) => this.allowedFieldTypes.includes(fieldType))
      .map((type) => ((0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-option", { selected: field.type === type, value: type, key: field.name }, this.fieldTypes[type]))))));
  }
  get el() { return (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.d)(this); }
};
ArcgisNewItemCsvField.style = arcgisNewItemCsvFieldCss;

const arcgisNewItemCustomParameterCss = ".container{margin-bottom:0.5rem;border:1px solid;border-color:var(--calcite-ui-border-1);padding:16px;max-width:100%}.content-container{display:flex}.inputs{display:flex;flex-direction:column;width:100%}@media (min-width: 864px){.inputs{flex-direction:row}}.inputs calcite-label{flex:1 1 0%}@media (min-width: 864px){.inputs calcite-label:first-child{-webkit-margin-end:12px;margin-inline-end:12px}}.delete-container{display:flex;justify-content:flex-end;align-items:center;position:relative;-webkit-margin-start:1.5rem;margin-inline-start:1.5rem;margin-top:10px}.delete-btn{cursor:pointer;border-style:none;background:transparent;height:-moz-fit-content;height:fit-content;padding:6px}.delete-btn:focus{outline:5px auto;outline-color:var(--calcite-ui-brand-hover)}.checkbox{display:flex;align-items:center}calcite-checkbox{-webkit-margin-end:5px;margin-inline-end:5px}.delete-btn-popover{white-space:nowrap;padding-left:0.5rem;padding-right:0.5rem;padding-top:0.25rem;padding-bottom:0.25rem}";

const ArcgisNewItemCustomParameter = class {
  constructor(hostRef) {
    (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.r)(this, hostRef);
    this.removeCustomParameter = (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "removeCustomParameter", 7);
    this.updateCustomParameter = (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "updateCustomParameter", 7);
    this.itemType = undefined;
    this.index = undefined;
    this.customParameter = undefined;
    this.i18n = undefined;
    this.showAppend = false;
    this.deleteButtonRef = undefined;
    this.deleteTooltipOpen = false;
  }
  async componentDidLoad() {
    this.setFocus();
    await (0,_functional_c82f5ab9_js__WEBPACK_IMPORTED_MODULE_3__.t)(500);
    const openTooltip = () => {
      this.deleteTooltipOpen = true;
    };
    const closeTooltip = () => {
      this.deleteTooltipOpen = false;
    };
    this.deleteButtonRef.onfocus = openTooltip;
    this.deleteButtonRef.onblur = closeTooltip;
    this.deleteButtonRef.onmouseover = openTooltip;
    this.deleteButtonRef.onmouseout = closeTooltip;
  }
  componentWillLoad() {
    this.handleItemTypeChange();
  }
  async setFocus(delay = 0) {
    await (0,_functional_c82f5ab9_js__WEBPACK_IMPORTED_MODULE_3__.t)(delay);
    this.mainInputRef.setFocus();
  }
  handleItemTypeChange() {
    this.showAppend = ["WMS", "WMTS"].some((type) => type === this.itemType);
  }
  handleInputChange(event, type) {
    const node = event.target;
    const updatedParameter = type === "parameter"
      ? Object.assign(Object.assign({}, this.customParameter), { parameter: node.value }) : Object.assign(Object.assign({}, this.customParameter), { value: node.value });
    this.updateCustomParameter.emit({ index: this.index, customParameter: updatedParameter });
  }
  handleCheckboxChange(event) {
    const updatedParameter = Object.assign(Object.assign({}, this.customParameter), { append: event.target.checked ? "layer" : "all" });
    this.updateCustomParameter.emit({ index: this.index, customParameter: updatedParameter });
  }
  render() {
    var _a, _b;
    return ((0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: "container" }, (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: "content-container" }, (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: "inputs" }, (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-label", null, this.i18n.parameter, (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-input", { placeholder: this.i18n.addParameter, value: (_a = this.customParameter) === null || _a === void 0 ? void 0 : _a.parameter, onCalciteInputInput: (ev) => this.handleInputChange(ev, "parameter"), ref: (ele) => (this.mainInputRef = ele) })), (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-label", null, this.i18n.value, (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-input", { placeholder: this.i18n.addValue, value: (_b = this.customParameter) === null || _b === void 0 ? void 0 : _b.value, onCalciteInputInput: (ev) => this.handleInputChange(ev, "value") }))), (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: "delete-container" }, (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("button", { class: "delete-btn", "aria-label": this.i18n.remove, onClick: () => this.removeCustomParameter.emit(this.index), ref: (ele) => (this.deleteButtonRef = ele) }, (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-icon", { icon: "trash", scale: "s" })), (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-popover", { label: this.i18n.remove, pointerDisabled: true, referenceElement: this.deleteButtonRef, open: this.deleteTooltipOpen }, (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: "delete-btn-popover" }, this.i18n.remove)))), this.showAppend && ((0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("label", { class: "checkbox" }, (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-checkbox", { checked: this.customParameter.append === "layer", onCalciteCheckboxChange: (ev) => this.handleCheckboxChange(ev), onClick: (ev) => ev.preventDefault() }), this.i18n.append))));
  }
  static get watchers() { return {
    "itemType": ["handleItemTypeChange"]
  }; }
};
ArcgisNewItemCustomParameter.style = arcgisNewItemCustomParameterCss;

const arcgisNewItemCustomParametersCss = ":host{font-family:Avenir Next, Avenir, Helvetica Neue, sans-serif;font-size:0.875rem;margin-bottom:14px}.label{font-weight:500;font-size:0.875rem;color:var(--calcite-ui-text-1);line-height:16px;margin-bottom:8px}.sub-header{font-size:0.875rem;color:var(--calcite-ui-text-3);display:flex;margin-top:0px;line-height:18px}.help-text{max-width:20rem;display:block}.add{font-weight:500;font-size:0.875rem;cursor:pointer;display:flex;justify-content:center;align-items:center;font-family:Avenir Next, Avenir, Helvetica Neue, sans-serif;margin-bottom:0.5rem;transition-duration:200ms;color:var(--calcite-ui-text-link);border:none;box-shadow:none;background:transparent;padding:10px;-webkit-padding-start:0;padding-inline-start:0;line-height:16px}.add:focus,.add:focus-visible{outline:5px auto;outline-color:#00619b}.add:hover{color:#00619b}.add-icon{color:var(--calcite-ui-text-link);-webkit-margin-end:0.625rem;margin-inline-end:0.625rem}";

const ArcgisNewItemCustomParameters = class {
  constructor(hostRef) {
    (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.r)(this, hostRef);
    this.customParameterRefList = [];
    this.itemType = undefined;
    this.customParameters = undefined;
    this.i18n = undefined;
  }
  removeCustomParameter(event) {
    const itemIndex = event.detail;
    const { url } = _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a;
    if (url) {
      const newUrl = (0,_feature_layer_38cdae87_js__WEBPACK_IMPORTED_MODULE_10__.r)(url, this.customParameters[itemIndex]);
      _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.url = newUrl;
    }
    const { customParameters } = _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a;
    this.customParameters = customParameters.filter((_, index) => index !== itemIndex);
    _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.customParameters = [...this.customParameters];
    if (this.customParameters.length <= 0) {
      this.newCustomParameterRef.focus();
    }
    else {
      this.customParameterRefList[Math.max(0, itemIndex - 1)].setFocus();
    }
  }
  updateCustomParameterHandler(event) {
    const { customParameters } = _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a;
    const { index, customParameter } = event.detail;
    this.customParameters = customParameters.map((entry, idx) => {
      if (idx === index) {
        entry = customParameter;
      }
      return entry;
    });
    _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.customParameters = [...this.customParameters];
  }
  async componentWillLoad() {
    const { customParameters } = _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a;
    this.i18n = _ui_ecf86bba_js__WEBPACK_IMPORTED_MODULE_12__.u.i18n.customParameters;
    this.customParameters = customParameters;
  }
  createNewCustomParameter() {
    const { customParameters } = _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a;
    this.customParameters = [...customParameters, { parameter: "", value: "", append: "all" }];
    _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.customParameters = this.customParameters;
  }
  render() {
    var _a;
    const { i18n, itemType } = this;
    return ((0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)(_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.H, null, (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-label", { class: "label" }, i18n.customParameters), (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("p", { class: "sub-header" }, i18n.description, " ", (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("arcgis-information", { label: i18n.customParameters, placement: "bottom", offsetSkidding: 6, overlayPositioning: "fixed", headingLevel: 3, paddedContent: true }, (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("span", { class: "help-text" }, i18n.helpText))), (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("button", { class: "add", type: "submit", onClick: () => this.createNewCustomParameter(), ref: (ele) => (this.newCustomParameterRef = ele) }, (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-icon", { class: "add-icon", icon: "plus", scale: "s" }), i18n.newCustomParameter), (_a = this.customParameters) === null || _a === void 0 ? void 0 :
      _a.map((customParameter, index) => {
        return ((0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("arcgis-new-item-custom-parameter", { class: "custom-parameter", itemType: itemType, customParameter: customParameter, index: index, i18n: i18n, ref: (ele) => (this.customParameterRefList[index] = ele) }));
      })));
  }
  get el() { return (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.d)(this); }
};
ArcgisNewItemCustomParameters.style = arcgisNewItemCustomParametersCss;

const arcgisNewItemInputReadonlyCss = ":host{--arcgis-label-font-weight:400}.label{margin-top:0;margin-bottom:0;font-weight:var(--arcgis-label-font-weight)}.label--bold{--arcgis-label-font-weight:500}";

const ArcgisNewItemInputReadonly = class {
  constructor(hostRef) {
    (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.r)(this, hostRef);
    this.scale = "m";
    this.label = undefined;
    this.path = undefined;
    this.i18n = undefined;
    this.labelType = "bold";
  }
  async componentWillLoad() {
    var _a, _b;
    this.i18n = _ui_ecf86bba_js__WEBPACK_IMPORTED_MODULE_12__.u.i18n.inputReadonly;
    const { newItemMode: itemType, fileName, originalFileName, url, provider, databaseProvider, addDataStoreType } = _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a;
    const strings = _ui_ecf86bba_js__WEBPACK_IMPORTED_MODULE_12__.u.i18n.itemProperties;
    switch (itemType) {
      case "file":
        this.label = (_a = this.label) !== null && _a !== void 0 ? _a : this.i18n.file;
        this.path = originalFileName !== null && originalFileName !== void 0 ? originalFileName : fileName;
        break;
      case "url":
        this.label = this.i18n.url;
        this.path = url;
        break;
      case "dataStore":
        this.label = this.i18n.dataStore;
        this.path =
          addDataStoreType === "cloud" ? strings[provider] : (_b = strings[databaseProvider]) !== null && _b !== void 0 ? _b : null;
    }
  }
  render() {
    var _a;
    const { labelType, path, label, scale } = this;
    return ((0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-label", { scale: (_a = _config_eb5f7dc2_js__WEBPACK_IMPORTED_MODULE_2__.c.scale) !== null && _a !== void 0 ? _a : scale }, _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.addAppendSelectOption !== "overwrite" && ((0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("span", { class: `label label--${labelType}` }, label)), path && (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: "item-field" }, path)));
  }
  get el() { return (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.d)(this); }
};
ArcgisNewItemInputReadonly.style = arcgisNewItemInputReadonlyCss;

const arcgisNewItemLayerSearchCss = ".screen-reader{position:absolute;width:1px;height:1px;padding:0;margin:-1px;overflow:hidden;clip:rect(0, 0, 0, 0);white-space:nowrap;border-width:0}.search-container{width:100%}";

const ArcgisNewItemLayerSearch = class {
  constructor(hostRef) {
    (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.r)(this, hostRef);
    this.searchUpdate = (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "searchUpdate", 7);
    this.handleSearchInput = (event) => {
      const input = event.target.value || "";
      if (input !== this.searchInput) {
        this.searchInput = input;
        this.searchUpdate.emit(input);
      }
    };
    this.handleKeyup = (event) => {
      if ((event.key === "Escape" || event.key === "Esc") && this.searchInput) {
        event.stopPropagation();
        this.searchInput = "";
      }
    };
    this.searchInput = "";
    this.controls = undefined;
    this.searchLabel = undefined;
    this.i18n = undefined;
  }
  async componentWillLoad() {
    this.i18n = _ui_ecf86bba_js__WEBPACK_IMPORTED_MODULE_12__.u.i18n.layerSearch;
  }
  async focusMainInput() {
    this.mainInputRef.setFocus();
  }
  render() {
    return ((0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: "search-container" }, (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("label", { class: "screen-reader", htmlFor: "search" }, this.i18n.search), (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-input", { placeholder: `${this.i18n.search} ${this.searchLabel}`, icon: "search", type: "search", id: "search", clearable: true, "aria-controls": this.controls, value: this.searchInput, onKeyUp: this.handleKeyup, ref: (el) => (this.mainInputRef = el), onCalciteInputInput: this.handleSearchInput })));
  }
  get el() { return (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.d)(this); }
};
ArcgisNewItemLayerSearch.style = arcgisNewItemLayerSearchCss;

const arcgisNewItemPagesApplicationCss = ".flex-container{display:flex;justify-content:space-between}.leader{margin-top:2rem}.two-up{width:calc(50% - 2rem)}calcite-label{color:var(--calcite-ui-text-1)}.label{font-weight:500;font-size:0.875rem;margin-bottom:0;margin-top:0;line-height:18px}.file{font-size:0.875rem;color:var(--calcite-ui-text-1);margin:0;margin-bottom:2rem;padding:0}";

const ArcgisNewItemPagesApplication = class {
  constructor(hostRef) {
    (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.r)(this, hostRef);
    this.newItemUpdatePage = (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "newItemUpdatePage", 7);
    this.submenus = {
      desktop: {
        title: "Platform",
        file: true
      },
      mobile: { title: "SDK" },
      web: { title: "API" }
    };
    this.url = _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.url;
    this.urlInputMessage = undefined;
    this.fileInputMessage = undefined;
    this.manifestInputMessage = undefined;
    this.manifestUrl = undefined;
    this.i18n = undefined;
    this.i18nURL = undefined;
  }
  validateFile(file) {
    const { title, fileName, extension } = (0,_file_f36193e9_js__WEBPACK_IMPORTED_MODULE_14__.s)(file);
    if (extension !== "zip") {
      this.fileInputMessage = this.i18n.selectZip;
      return false;
    }
    else {
      _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.file = file;
      _item_properties_e6412a9a_js__WEBPACK_IMPORTED_MODULE_6__.i.title = title;
      _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.fileName = fileName;
      this.fileInputMessage = null;
      return true;
    }
  }
  async navigateToNextPage() {
    const { url, i18n, i18nURL, manifestUrl } = this;
    const { file, applicationType } = _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a;
    let manifest;
    if (url && (0,_url_f3b82cc7_js__WEBPACK_IMPORTED_MODULE_23__.i)(url, _config_eb5f7dc2_js__WEBPACK_IMPORTED_MODULE_2__.c.portal.isPortal)) {
      this.urlInputMessage = i18nURL.httpWarning;
      return;
    }
    if (applicationType === "desktop") {
      if (!file) {
        this.fileInputMessage = i18n.fileRequired;
        return;
      }
      if (!this.validateFile(file)) {
        return;
      }
    }
    if ((applicationType === "mobile" || applicationType === "web") && !url) {
      this.urlInputMessage = i18n.enterUrl;
      return;
    }
    if (applicationType === "appExtension" || applicationType === "experienceBuilderWidget") {
      if (!manifestUrl) {
        this.manifestInputMessage = i18n.enterManifestUrl;
        return;
      }
      const { error, result } = await (0,_feature_layer_38cdae87_js__WEBPACK_IMPORTED_MODULE_10__.f)(this.manifestUrl);
      if (error) {
        this.manifestInputMessage = this.i18n[error.code];
        return;
      }
      manifest = result;
    }
    // some apis need to be sent to the server differently than they are shown in the dropdown
    const types = {
      web: {
        type: "Web Mapping Application",
        typeKeywords: ["Web Map", "Map", "Online Map", "Mapping Site"],
        thumbnailUrl: "https://static.arcgis.com/images/webapp.png",
        url
      },
      desktop: {
        type: "Desktop Application",
        typeKeywords: ["Desktop Application"],
        url
      },
      mobile: {
        type: "Mobile Application",
        typeKeywords: ["ArcGIS Mobile Map", "Mobile Application"],
        thumbnailUrl: "https://static.arcgis.com/images/mobileapp.png",
        url
      },
      appExtension: {
        type: "AppBuilder Extension",
        typeKeywords: [
          "Widget",
          "App Builder",
          "widget",
          (manifest === null || manifest === void 0 ? void 0 : manifest.platform) === "HTML3D" ? "HTML3D" : "HTML"
        ],
        url: manifestUrl,
        accessInformation: (manifest === null || manifest === void 0 ? void 0 : manifest.author) || "",
        text: manifest ? JSON.stringify(manifest) : ""
      },
      experienceBuilderWidget: {
        type: "Experience Builder Widget",
        url: manifestUrl,
        accessInformation: (manifest === null || manifest === void 0 ? void 0 : manifest.author) || "",
        text: manifest ? JSON.stringify(manifest) : ""
      },
      otherApplication: {
        type: "Application",
        typeKeywords: ["Application"]
      }
    };
    let title = "";
    if (url) {
      title = (0,_url_f3b82cc7_js__WEBPACK_IMPORTED_MODULE_23__.u)(url) || "";
    }
    else if (file) {
      title = (0,_file_f36193e9_js__WEBPACK_IMPORTED_MODULE_14__.s)(file).title;
    }
    else if (manifest) {
      title = manifest.name || "application extension";
    }
    const typeDetails = types[applicationType];
    _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.newItemMode = "application";
    _item_properties_e6412a9a_js__WEBPACK_IMPORTED_MODULE_6__.i.title = title;
    _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.name = `${title}_${(0,_guid_4f4176ba_js__WEBPACK_IMPORTED_MODULE_22__.g)()}`;
    _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.type = typeDetails.type;
    _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.typeKeywords = typeDetails.typeKeywords;
    _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.url = typeDetails.url;
    _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.accessInformation = typeDetails.accessInformation;
    _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.text = typeDetails.text;
    this.newItemUpdatePage.emit("itemProperties");
  }
  async componentWillLoad() {
    const { application, url } = _ui_ecf86bba_js__WEBPACK_IMPORTED_MODULE_12__.u.i18n;
    this.i18n = application;
    this.i18nURL = url;
    const { file, applicationType } = _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a;
    if (file) {
      _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.applicationType = "desktop";
    }
    else if (!applicationType) {
      _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.applicationType = "web";
    }
  }
  render() {
    const { i18n } = this;
    const { applicationType, applicationFile, file } = _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a;
    const menu = this.submenus[applicationType];
    return ((0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)(_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.H, null, !applicationFile && applicationType === "desktop" && file && ((0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", null, (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("h4", { class: "label" }, i18n.File), (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("p", { class: "file" }, file.name))), (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("form", { novalidate: true, onSubmit: (e) => {
        e.preventDefault();
      } }, (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-label", null, (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("span", { class: "label" }, i18n.applicationType)), (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-tile-select-group", { layout: "vertical" }, [
      "web",
      "desktop",
      "mobile",
      ...(_config_eb5f7dc2_js__WEBPACK_IMPORTED_MODULE_2__.c.portal.isPortal && (0,_privileges_ccd5f37d_js__WEBPACK_IMPORTED_MODULE_20__.e)(_config_eb5f7dc2_js__WEBPACK_IMPORTED_MODULE_2__.c.user)
        ? ["appExtension", "experienceBuilderWidget"]
        : []),
      "otherApplication"
    ].map((value) => ((0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-tile-select", { checked: applicationType === value, width: "full", "input-enabled": true, "input-alignment": "start", value: value, name: i18n[value], heading: i18n[value], onCalciteTileSelectChange: (e) => {
        _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.applicationType = e.target.value;
        this.urlInputMessage = null;
        this.fileInputMessage = null;
      } })))), menu && ((0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: "leader" }, (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-label", null, (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("span", { class: "label" }, i18n.URL), (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-input", { type: "text", value: this.url, required: applicationType === "web" || applicationType === "mobile", status: this.urlInputMessage ? "invalid" : "idle", onCalciteInputInput: (e) => {
        this.url = e.target.value;
        this.urlInputMessage = null;
      }, onFocusout: (e) => {
        var _a;
        if (e.target.value && ((_a = this.url) === null || _a === void 0 ? void 0 : _a.indexOf("http")) < 0) {
          // TODO: specify e.target
          this.url = `https://${this.url}`;
        }
      } }), (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-input-message", { icon: true, hidden: !this.urlInputMessage, status: "invalid" }, this.urlInputMessage)), menu.file && (applicationFile || !file) && ((0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: "leader" }, (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-label", null, (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("span", { class: "label" }, i18n.File), (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-input", { type: "file", required: true, status: this.fileInputMessage ? "invalid" : "idle", onCalciteInputInput: (e) => {
        const file = e.target.shadowRoot.querySelector("input").files[0];
        this.validateFile(file);
        _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.applicationFile = file;
      } }), (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-input-message", { icon: true, hidden: !this.fileInputMessage, status: "invalid" }, this.fileInputMessage)))))), ["appExtension", "experienceBuilderWidget"].includes(applicationType) && ((0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: "leader" }, (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-label", null, (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("span", { class: "label" }, i18n.manifestUrl), (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-input", { type: "text", required: true, status: this.manifestInputMessage ? "invalid" : "idle", onCalciteInputInput: (e) => {
        this.manifestUrl = e.target.value;
        this.manifestInputMessage = null;
      } }), (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-input-message", { icon: true, hidden: !this.manifestInputMessage, status: "invalid" }, this.manifestInputMessage)))))));
  }
  get element() { return (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.d)(this); }
};
ArcgisNewItemPagesApplication.style = arcgisNewItemPagesApplicationCss;

const ArcgisNewItemPagesAuth = class {
  constructor(hostRef) {
    (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.r)(this, hostRef);
    this.newItemUpdatePage = (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "newItemUpdatePage", 7);
    this.newItemToggleNavigationEnabled = (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "newItemToggleNavigationEnabled", 7);
    this.handlePasswordChange = (event) => {
      this.updateValidationResponse(true);
      _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.password = event.target.value;
    };
    this.handleUsernameChange = (event) => {
      this.updateValidationResponse(true);
      _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.username = event.target.value;
    };
    this.isLoading = false;
    this.validationResponse = { valid: true };
  }
  async navigateToNextPage() {
    if (!_add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.username || !_add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.password) {
      this.validationResponse = { valid: false, message: this.i18n.requiresCredentials };
      return;
    }
    this.isLoading = true;
    try {
      // TODO: Get store updates some other way, or add a separate return object to the big add url tunnel
      const response = await (0,_feature_layer_38cdae87_js__WEBPACK_IMPORTED_MODULE_10__.a)(Object.assign({}, _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a));
      const { title, tags, snippet, description, serviceInfo, serviceUsername, servicePassword, spatialReference, proxyUrl, extent, thumbnailToken } = response;
      _item_properties_e6412a9a_js__WEBPACK_IMPORTED_MODULE_6__.i.title = title || _item_properties_e6412a9a_js__WEBPACK_IMPORTED_MODULE_6__.i.title;
      _item_properties_e6412a9a_js__WEBPACK_IMPORTED_MODULE_6__.i.tags = tags;
      _item_properties_e6412a9a_js__WEBPACK_IMPORTED_MODULE_6__.i.snippet = snippet;
      _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.description = description;
      _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.serviceInfo = serviceInfo;
      _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.serviceUsername = serviceUsername;
      _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.servicePassword = servicePassword;
      _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.spatialReference = spatialReference;
      _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.thumbnailToken = thumbnailToken;
      _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.proxyUrl = proxyUrl;
      _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.extent = extent;
      this.isLoading = false;
      if ((0,_feature_layer_38cdae87_js__WEBPACK_IMPORTED_MODULE_10__.i)(_add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.url, serviceInfo)) {
        this.newItemUpdatePage.emit("hybridImageSelect");
        return;
      }
      this.newItemUpdatePage.emit("itemProperties");
    }
    catch (error) {
      console.error(error);
      this.validationResponse = { valid: false, message: this.i18n.invalid };
      this.isLoading = false;
    }
  }
  handleLoadChange(_oldValue, newValue) {
    this.newItemToggleNavigationEnabled.emit(newValue);
  }
  async componentWillLoad() {
    this.i18n = _ui_ecf86bba_js__WEBPACK_IMPORTED_MODULE_12__.u.i18n.auth;
    this.urlTypei18n = _ui_ecf86bba_js__WEBPACK_IMPORTED_MODULE_12__.u.i18n.urlType;
    // Clean up old serviceInfo if returning from item properties
    _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.serviceInfo = null;
  }
  updateValidationResponse(valid) {
    if (!this.validationResponse.valid) {
      this.validationResponse = { valid };
    }
  }
  render() {
    const { i18n, urlTypei18n, validationResponse, isLoading } = this;
    const { valid, message } = validationResponse;
    return ((0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)(_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.H, null, (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("arcgis-new-item-loader", { type: "indeterminate", value: _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.uploadProgress, active: isLoading, text: urlTypei18n.getServiceInfo }), (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-label", { for: "username" }, i18n.enterUsername, (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-input", { onCalciteInputInput: this.handleUsernameChange, id: "username", placeholder: i18n.enterUsername, value: _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.username, status: valid ? "idle" : "invalid" })), (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-label", { for: "password" }, i18n.enterPassword, (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-input", { type: "password", onCalciteInputInput: this.handlePasswordChange, id: "password", placeholder: i18n.enterPassword, value: _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.password, status: valid ? "idle" : "invalid", required: true }), (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-input-message", { icon: !valid, hidden: valid, status: valid ? "idle" : "invalid" }, message))));
  }
  get element() { return (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.d)(this); }
  static get watchers() { return {
    "isLoading": ["handleLoadChange"]
  }; }
};

var TreeSelectionMode;
(function (TreeSelectionMode) {
  TreeSelectionMode["Single"] = "single";
  TreeSelectionMode["Multi"] = "multi";
  TreeSelectionMode["Children"] = "children";
  TreeSelectionMode["MultiChildren"] = "multi-children";
  TreeSelectionMode["Ancestors"] = "ancestors";
})(TreeSelectionMode || (TreeSelectionMode = {}));

const arcgisNewItemPagesBulkLayerSelectCss = ".outer-container{display:flex;flex-direction:column}.layer-select-tree{width:100%;overflow-y:auto}.layer-notice{margin-bottom:1.5rem}.select-item-message{font-weight:500;font-size:0.875rem;margin-bottom:0.25rem}.layer-not-found-message{font-weight:500;font-size:0.875rem;color:var(--calcite-ui-text-2);text-align:center;width:100%;margin-top:1.5rem}.select-all{margin-top:5px;margin-left:5px}";

const SOFT_CAP = 1000;
const MAX_LAYER_LIMIT = 10000;
const ArcgisNewItemPagesBulkLayerSelect = class {
  constructor(hostRef) {
    (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.r)(this, hostRef);
    this.newItemUpdatePage = (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "newItemUpdatePage", 7);
    this.workflowComplete = (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "workflowComplete", 7);
    /** Keep a reference to all the tree-items currently in view, by id */
    this.inView = {};
    this.searchUpdateHandler = (event) => {
      const input = event.detail;
      this.searchInput = input;
      const lowerCaseInput = input.toLowerCase();
      function getFilteredLayers(layers) {
        const matches = [];
        layers.forEach((layer) => {
          if (layer.title
            .toLowerCase()
            // TODO: fix the root cause of this weird character
            .replace(/[\u202F\u00A0]/g, " ")
            .includes(lowerCaseInput) ||
            !input) {
            matches.push(Object.assign({}, layer));
          }
          else {
            const subLayers = getFilteredLayers(layer.subLayers);
            if (subLayers.length) {
              matches.push(Object.assign({}, layer, { subLayers, expanded: true }));
            }
          }
        });
        return matches;
      }
      this.filteredLayers = this.getDisplayLayers(getFilteredLayers(this.layers));
    };
    this.handleLayerSelect = (event) => {
      const node = event.target;
      const inViewSelectedList = node.selectedItems.map((treeItem) => treeItem.getAttribute("id"));
      // Filter out any item that's in view, then spread the current selected tree back in
      const outOfViewSelectedList = Object.keys(this.selectedLayerIdTracker.idMap).filter((layerId) => !this.inView[layerId]);
      const newSelectedLayerCount = inViewSelectedList.length + outOfViewSelectedList.length;
      const newSelectedIdMap = {};
      inViewSelectedList.forEach((layerId) => (newSelectedIdMap[layerId] = true));
      outOfViewSelectedList.forEach((layerId) => (newSelectedIdMap[layerId] = true));
      const newTracker = {
        count: newSelectedLayerCount,
        idMap: newSelectedIdMap
      };
      _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.selectedLayerIdTracker = newTracker;
      this.selectedLayerIdTracker = newTracker;
      this.noLayersSelected = this.noLayersSelected ? newSelectedLayerCount <= 0 : false;
    };
    this.getDisplayLayers = (layers = this.layers, displayLayers = []) => {
      let acc = 0;
      for (const layer of layers) {
        if (acc >= SOFT_CAP) {
          this.usePro = true;
          const selected = this.isLayerSelected(layer);
          if (selected || this.containsSelected(layer)) {
            displayLayers.push(layer);
          }
        }
        else {
          acc++;
          if (layer.subLayers.length > 0) {
            const subLayerCount = this.countSublayers(layer);
            if (subLayerCount >= MAX_LAYER_LIMIT) {
              // we should not display any sublayers if there are a total of > 10,000
              displayLayers.push(Object.assign(Object.assign({}, layer), { subLayers: [] }));
            }
            else {
              acc += subLayerCount;
              displayLayers.push(layer);
            }
          }
          else {
            displayLayers.push(layer);
          }
        }
      }
      displayLayers.sort((layer1, layer2) => (layer1.title > layer2.title ? 1 : -1));
      return displayLayers;
    };
    this.countSublayers = (layer) => {
      // Exit if no sublayers found
      if (layer.subLayers.length <= 0) {
        return 0;
      }
      // Otherwise, accumulate the sublayers, then count its sublayers
      let numSubLayer = layer.subLayers.length;
      layer.subLayers.forEach((sublayer) => {
        numSubLayer += this.countSublayers(sublayer);
      });
      return numSubLayer;
    };
    this.renderTree = (layer) => {
      var _a;
      const id = layer.id;
      const expanded = layer.expanded || false;
      const selected = this.isLayerSelected(layer);
      const containsSelected = this.containsSelected(layer);
      return ((0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-tree-item", { key: id, id: id, selected: selected || layer.visible, expanded: (containsSelected && !selected) || expanded, ref: () => (this.inView[id] = true) }, (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("span", null, layer.title), ((_a = layer.subLayers) === null || _a === void 0 ? void 0 : _a.length) ? ((0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-tree", { selectionMode: TreeSelectionMode.Ancestors, slot: "children" }, layer.subLayers.map(this.renderTree))) : null));
    };
    this.managedFocus = true;
    this.layers = [];
    this.filteredLayers = [];
    this.searchInput = "";
    this.selectedLayerIdTracker = {
      // Transform selectedLayerMap into array to get the length would kill off performance
      count: 0,
      idMap: {}
    };
    this.usePro = undefined;
    this.noLayersSelected = false;
    this.allLayersSelected = undefined;
  }
  async componentWillLoad() {
    var _a, _b;
    const i18n = _ui_ecf86bba_js__WEBPACK_IMPORTED_MODULE_12__.u.i18n;
    this.i18n = i18n.bulkLayerSelect;
    if (this.isAddToMapTerminalPage()) {
      _ui_ecf86bba_js__WEBPACK_IMPORTED_MODULE_12__.u.nextText = _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.addAsBasemap ? "useAsBaseMap" : "addToMap";
    }
    const { layers, selectedLayerIdTracker } = _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a;
    this.layers = !!layers && ((_a = layers[0]) === null || _a === void 0 ? void 0 : _a.id) ? layers : this.addIds(layers);
    this.filteredLayers = this.getDisplayLayers();
    this.selectedLayerIdTracker = {
      count: (_b = selectedLayerIdTracker === null || selectedLayerIdTracker === void 0 ? void 0 : selectedLayerIdTracker.count) !== null && _b !== void 0 ? _b : 0,
      idMap: selectedLayerIdTracker ? Object.assign({}, selectedLayerIdTracker.idMap) : {}
    };
  }
  onTransitionComplete() {
    var _a;
    (_a = this.layerSearchRef) === null || _a === void 0 ? void 0 : _a.focusMainInput();
  }
  handleNext() {
    if (this.selectedLayerIdTracker.count === 0) {
      this.noLayersSelected = true;
    }
    else {
      // Set only the selected layers as final output
      const layers = this.setVisibility(this.layers)
        .filter((layer) => layer.visible)
        .map((layer) => {
        const { name, title, queryable, subLayers } = layer;
        return { name, title, queryable, subLayers };
      });
      _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.layers = layers;
      // Done if direct add
      if (this.isAddToMapTerminalPage()) {
        this.workflowComplete.emit({
          type: _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.type,
          url: encodeURI(_add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.url),
          customParameters: _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.customParameters,
          layers,
          addAsBasemap: _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.addAsBasemap
        });
      }
      else {
        this.newItemUpdatePage.emit("itemProperties");
      }
    }
  }
  isAddToMapTerminalPage() {
    return _ui_ecf86bba_js__WEBPACK_IMPORTED_MODULE_12__.u.workflow === "map";
  }
  isLayerSelected(layer) {
    return !!this.selectedLayerIdTracker.idMap[layer.id];
  }
  /** remove ID and set visibility prior to commiting to store */
  setVisibility(layers) {
    return layers.map((layer) => {
      layer.visible = this.isLayerSelected(layer);
      if (layer.subLayers) {
        layer.subLayers = this.setVisibility(layer.subLayers);
      }
      return layer;
    });
  }
  /** Add unique ids to each layer if not previously set */
  addIds(layers) {
    return layers.map((layer) => {
      if (layer.subLayers) {
        layer.subLayers = this.addIds(layer.subLayers);
      }
      layer.id = (0,_guid_4f4176ba_js__WEBPACK_IMPORTED_MODULE_22__.g)();
      // Set visible to false by default
      layer.visible = false;
      return layer;
    });
  }
  containsSelected(layer) {
    var _a;
    return (_a = layer.subLayers) === null || _a === void 0 ? void 0 : _a.some((subLayer) => {
      const selected = this.isLayerSelected(layer);
      if (subLayer.subLayers) {
        const containsDeepSelected = this.containsSelected(subLayer);
        return selected || containsDeepSelected;
      }
      return selected;
    });
  }
  handleSelectAll() {
    const newSelectedLayerIdMap = {};
    let newSelectedLayerCount = 0;
    const selectAll = (layers) => {
      layers.forEach((layer) => {
        if (!newSelectedLayerIdMap[layer.id]) {
          newSelectedLayerCount += 1;
        }
        newSelectedLayerIdMap[layer.id] = true;
        if (layer.subLayers) {
          selectAll(layer.subLayers);
        }
      });
    };
    if (!this.allLayersSelected) {
      selectAll(this.layers);
      this.allLayersSelected = true;
    }
    const newTracker = {
      count: newSelectedLayerCount,
      idMap: newSelectedLayerIdMap
    };
    this.selectedLayerIdTracker = newTracker;
    _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.selectedLayerIdTracker = newTracker;
  }
  checkSelectionStatus(layers) {
    return layers.every((layer) => {
      const selected = this.isLayerSelected(layer);
      if (layer.subLayers) {
        const containsSelected = this.checkSelectionStatus(layer.subLayers);
        return selected && containsSelected;
      }
      else {
        return selected;
      }
    });
  }
  render() {
    this.inView = {};
    const { i18n, usePro, searchUpdateHandler, handleLayerSelect, renderTree, handleSelectAll, filteredLayers, noLayersSelected } = this;
    this.allLayersSelected = this.checkSelectionStatus(this.filteredLayers);
    return ((0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: "outer-container" }, (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-notice", { class: "layer-notice", icon: "information", open: usePro, width: "full" }, (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("p", { slot: "message" }, i18n.usePro)), (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("strong", { class: "select-item-message" }, i18n.selectLayers), (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("arcgis-new-item-layer-search", { onSearchUpdate: searchUpdateHandler, controls: "layer-select-tree", searchLabel: i18n.layers, ref: (ele) => (this.layerSearchRef = ele) }), filteredLayers.length === 0 ? ((0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("strong", { class: "layer-not-found-message" }, i18n.noLayersFound)) : ((0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: "layer-select-tree" }, this.searchInput.length >= 1 ? null : ((0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-button", { appearance: "transparent", class: "select-all", onClick: handleSelectAll.bind(this) }, this.allLayersSelected ? this.i18n.deselectAll : i18n.selectAll)), (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-tree", { onCalciteTreeSelect: handleLayerSelect, selectionMode: TreeSelectionMode.Ancestors }, filteredLayers.map(renderTree)))), (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("arcgis-new-item-alert", { active: noLayersSelected, heading: i18n.errorTitle, description: i18n.noLayersSelected })));
  }
  get el() { return (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.d)(this); }
};
ArcgisNewItemPagesBulkLayerSelect.style = arcgisNewItemPagesBulkLayerSelectCss;

const arcgisNewItemPagesCloudCss = ".screen-readers-only{position:absolute;width:1px;height:1px;padding:0;margin:-1px;overflow:hidden;clip:rect(0, 0, 0, 0);white-space:nowrap;border-width:0}.table{display:flex;flex-direction:column;border-style:none;margin:0;min-height:35rem}.table__body{margin:0;padding:0;outline:2px solid transparent;outline-offset:2px;border-style:none;flex:1 1 0%}.table__body--center{display:flex;align-items:center;justify-items:center}.input{width:100%;margin-bottom:1rem;display:block}.select{min-width:10rem;-webkit-margin-start:0.5rem;margin-inline-start:0.5rem}.files{padding:0;list-style-type:none;margin:0 -0.5rem}.files__item{position:relative;width:100%}.files__item:before{display:block;position:absolute;bottom:0;content:\"\";right:0.5rem;left:0.5rem;border-top:1px solid var(--calcite-ui-border-3);transition:all 150ms ease-in-out;z-index:2}.files__item:hover:before,.files__item:focus-within:before{border-top-color:#009AF2}.files__item--active:before{border-top-color:transparent}.file{padding-top:0.75rem;padding-bottom:0.75rem;padding-left:0.5rem;padding-right:0.5rem;margin:0;display:flex;color:var(--calcite-ui-text-2);font-size:0.875rem;width:100%;box-sizing:border-box;border-radius:0;cursor:pointer;font-weight:400;align-items:center;background-color:white;transition:all 150ms ease-in-out;outline:1px solid transparent;outline-offset:-1px;font-family:inherit;border:none;text-align:initial}.files__item--active .file{background-color:rgba(0, 121, 193, 0.04);outline-color:#009AF2}.file__icon{color:var(--calcite-ui-brand);flex:0}.file__title{font-weight:500;padding-left:0.75rem;padding-right:0.75rem;font-size:0.875rem;flex:1 1 0%}.file__type{width:30%;flex:0 1 auto}.file__size{text-align:inline-end;width:6rem;flex:0 1 auto}.no-results{text-align:center;width:100%;display:block}.next{display:block;margin:0}.error{position:absolute;bottom:1rem;right:1rem;inset-inline-end:1rem;z-index:2}";

const ArcgisNewItemPagesCloud = class {
  constructor(hostRef) {
    (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.r)(this, hostRef);
    this.newItemUpdatePage = (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "newItemUpdatePage", 7);
    this.updateFilter = () => {
      this.searching = true;
      const option = this.select.querySelector("calcite-option[selected]");
      this.filter = option.value;
      this.search();
    };
    this.debouncedInput = (0,_functional_c82f5ab9_js__WEBPACK_IMPORTED_MODULE_3__.d)(async (e) => {
      this.searching = true;
      this.searchTerm = e.target.value;
      this.search();
    }, 400);
    this.managedFocus = true;
    this.loading = true;
    this.loadingText = "";
    this.searching = undefined;
    this.files = [];
    this.moreResults = undefined;
    this.searchTerm = "";
    this.filter = "csv";
    this.selected = undefined;
    this.error = undefined;
    this.i18n = undefined;
  }
  async componentWillLoad() {
    this.i18n = _ui_ecf86bba_js__WEBPACK_IMPORTED_MODULE_12__.u.i18n.cloud;
    const current = _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.cloudProvider;
    this.loadingText = this.i18n[current];
    this.provider = (0,_index_eb224d3c_js__WEBPACK_IMPORTED_MODULE_24__.g)(current);
  }
  async componentDidLoad() {
    var _a;
    try {
      await this.provider.connect();
      await this.search();
      await (0,_functional_c82f5ab9_js__WEBPACK_IMPORTED_MODULE_3__.t)(200);
      (_a = this.mainInputRef) === null || _a === void 0 ? void 0 : _a.setFocus();
      if (_ui_ecf86bba_js__WEBPACK_IMPORTED_MODULE_12__.u.workflow === "map" && !_add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.existingItem) {
        // Sometimes when we go back, an item has already been created so we need to clean it up
        // For now, it only happens in MV
        // No need to await this, can be done in the background
        this.removeExistingFile();
      }
    }
    catch (error) {
      this.parseError(error);
    }
    this.loading = false;
  }
  async navigateToNextPage() {
    if (this.selected) {
      const { title, fileName, extension } = (0,_file_f36193e9_js__WEBPACK_IMPORTED_MODULE_14__.a)(this.selected.name);
      _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.dataUrl = this.selected.downloadUrl;
      _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.fileName = fileName;
      _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.extension = extension;
      _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.newItemMode = "file";
      _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.cloudProviderResource = {
        cloudProvider: (0,_index_eb224d3c_js__WEBPACK_IMPORTED_MODULE_24__.a)(_add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.cloudProvider),
        id: this.selected.id,
        mimeType: this.selected.mimeType,
        cloudDriveFileName: this.selected.name,
        cloudFileType: this.filter
      };
      // In case the user goes back to the file select page
      //  and select a different file
      _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.selectedFields = undefined;
      _item_properties_e6412a9a_js__WEBPACK_IMPORTED_MODULE_6__.i.title = title;
      const possibleItemTypes = (0,_item_types_054054c6_js__WEBPACK_IMPORTED_MODULE_16__.f)(extension);
      if (this.selected.mimeType === "googlesheets") {
        await this.removeExistingFile();
        _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.type = "Microsoft Excel";
        _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.extension = "xls";
        const nextStep = _config_eb5f7dc2_js__WEBPACK_IMPORTED_MODULE_2__.c.allowPublish === false ? "itemProperties" : "publishSelect";
        this.newItemUpdatePage.emit(nextStep);
      }
      else if (possibleItemTypes.length === 1) {
        await this.removeExistingFile();
        _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.type = possibleItemTypes[0].type;
        const nextItemStep = possibleItemTypes[0].nextStep;
        const nextStep = _config_eb5f7dc2_js__WEBPACK_IMPORTED_MODULE_2__.c.allowPublish === false && nextItemStep === "publishSelect"
          ? "itemProperties"
          : nextItemStep;
        this.newItemUpdatePage.emit(nextStep);
      }
      else if (extension === "zip") {
        this.newItemUpdatePage.emit("zipSelect");
      }
    }
    else {
      this.error = {
        title: this.i18n.errorTitle,
        message: this.i18n.errorMessage
      };
    }
  }
  async removeExistingFile() {
    const id = _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.id;
    if (id) {
      _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.id = null;
      await (0,_server_item_f12153e6_js__WEBPACK_IMPORTED_MODULE_15__.d)(id, { permanentDelete: true });
    }
  }
  async search(next) {
    this.moreResults = false;
    this.error = null;
    const result = await this.provider.search({
      searchText: this.searchTerm,
      dropdownFilter: this.filter,
      next
    });
    if (next) {
      this.files = [...this.files, ...result.files];
    }
    else {
      this.files = [...result.files];
    }
    this.moreResults = result.next;
    this.selected = null;
    this.searching = false;
  }
  getFilterOptions() {
    const provider = _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.cloudProvider;
    const filters = ["csv", "excel", "zip", "geojson"];
    if (provider === "google drive") {
      filters.push("googlesheets");
    }
    return filters;
  }
  renderFiles() {
    const { files, selected, i18n, moreResults } = this;
    if (!(files === null || files === void 0 ? void 0 : files.length)) {
      return (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: "no-results" }, i18n.noResults);
    }
    return ((0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", null, !this.error && ((0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("ul", { class: "files" }, files.map((file) => ((0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("li", { class: {
        files__item: true,
        "files__item--active": file.id === (selected === null || selected === void 0 ? void 0 : selected.id)
      }, key: file.id }, (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("label", { class: "file", htmlFor: `input-${file.id}` }, (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-icon", { icon: _index_eb224d3c_js__WEBPACK_IMPORTED_MODULE_24__.c[file.mimeType] || "file-text", scale: "s", class: "file__icon" }), (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("input", { type: "radio", id: `input-${file.id}`, name: "file", value: file.id, checked: (selected === null || selected === void 0 ? void 0 : selected.id) === file.id, onChange: () => {
        this.selected = file;
        this.error = null;
      }, class: "screen-readers-only" }), (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("span", { class: "file__title" }, file.name), (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("span", { class: "file__type", "aria-hidden": "true" }, _index_eb224d3c_js__WEBPACK_IMPORTED_MODULE_24__.b[file.mimeType] || i18n.file), file.size && ((0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("span", { class: "file__size", "aria-hidden": "true" }, (0,_file_f36193e9_js__WEBPACK_IMPORTED_MODULE_14__.f)(file.size))))))))), moreResults && ((0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-button", { "icon-start": "plus", class: "next", appearance: "transparent", onClick: () => this.search(true) }, i18n.viewMore))));
  }
  parseError(e) {
    if (e === "popupBlocked") {
      this.error = this.i18n.error.popup;
    }
    else {
      this.error = this.i18n.error.generic;
    }
  }
  render() {
    const { loading, loadingText, files, i18n, filter, searching, error } = this;
    return ((0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)(_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.H, null, loading && !files.length ? ((0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("arcgis-new-item-loader", { active: true, text: loadingText, type: "indeterminate" })) : ((0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: "table" }, (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-input", { type: "search", icon: "search", class: "input", onCalciteInputInput: this.debouncedInput, label: i18n.searchFiles, ref: (ele) => (this.mainInputRef = ele) }, (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-select", { label: i18n.filterFileType, ref: (el) => (this.select = el), onCalciteSelectChange: this.updateFilter, slot: "action", class: "select" }, this.getFilterOptions().map((value) => {
      var _a;
      return ((0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-option", { selected: filter === value, value: value, label: (_a = i18n.fileType[value]) !== null && _a !== void 0 ? _a : _index_eb224d3c_js__WEBPACK_IMPORTED_MODULE_24__.b[value] }));
    }))), (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("fieldset", { class: {
        table__body: true,
        "table__body--center": searching || !files.length
      } }, (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("legend", { class: "screen-readers-only" }, i18n.selectAFile), this.searching ? ((0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: "loader" }, (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("arcgis-new-item-loader", { active: true, text: i18n.loadingFiles }))) : (this.renderFiles())))), (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("arcgis-new-item-alert", { heading: error === null || error === void 0 ? void 0 : error.title, description: error === null || error === void 0 ? void 0 : error.message, active: !!error, onAlertDismiss: () => {
        this.error = null;
      } })));
  }
  get el() { return (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.d)(this); }
};
ArcgisNewItemPagesCloud.style = arcgisNewItemPagesCloudCss;

const arcgisNewItemPagesFileFieldsCss = ".fields-container{display:flex;flex-direction:column;height:100%}.field-table{margin-bottom:1.5rem;display:flex;flex-direction:column;min-height:15rem}.search-container{display:flex;width:100%}.screen-readers-only{position:absolute;width:1px;height:1px;padding:0;margin:-1px;overflow:hidden;clip:rect(0, 0, 0, 0);white-space:nowrap;border-width:0}.field-search{-webkit-margin-end:8px;margin-inline-end:8px;width:75%}.field-select{width:25%}.fields-scroll-container{overflow-y:auto;flex:1 1 auto;transform:translateZ(0)}.header-row{display:flex;align-content:flex-start;justify-content:center;color:var(--calcite-ui-text-1);font-size:0.875rem;grid-gap:0.25rem;gap:0.25rem;padding:0.25rem}.header-cell{width:100%}.hide{display:none}.chip-container{margin-top:1rem;margin-bottom:1rem}.chip{font-weight:700}.clear-selection{border-style:none;cursor:pointer;padding:0;border-width:0;-webkit-appearance:none;-moz-appearance:none;appearance:none;font-size:0.75rem;font-weight:500;color:var(--calcite-ui-text-2);margin-left:0.75rem;margin-right:0.75rem;font-family:Avenir Next, Avenir, Helvetica Neue, sans-serif;background:transparent}.clear-selection:hover{text-decoration:underline;cursor:pointer}.not-visible{visibility:hidden;height:0}.description{margin-bottom:1rem}";

const ArcgisNewItemPagesFileFields = class {
  constructor(hostRef) {
    (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.r)(this, hostRef);
    this.newItemUpdatePage = (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "newItemUpdatePage", 7);
    this.workflowComplete = (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "workflowComplete", 7);
    // Telemetry: gather info about which fields have received user input
    this.fieldsSearched = false;
    this.fieldsModified = {};
    this.addDirectToMap = false;
    this.handleTimezoneChange = (event) => {
      _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.timezone = event.detail;
    };
    this.updateModifiedFields = (detail) => {
      const { name, key, modified } = detail;
      // If no existing entry, create one with the corresponding property's modified flag set, update otherwise
      if (!this.fieldsModified[name]) {
        this.fieldsModified[name] = {
          type: key === "type" && modified ? 1 : 0,
          alias: key === "alias" && modified ? 1 : 0
        };
      }
      else {
        this.fieldsModified[name][key] = modified ? 1 : 0;
      }
    };
    this.handleFieldTypeFilter = (ev) => {
      this.selectedFieldTypeFilter = ev.target.selectedOption.value;
    };
    this.handleSearchChange = (ev) => {
      // Telemetry: Flag if the user attempted to search
      this.fieldsSearched = true;
      this.searchTerm = ev.target.value;
    };
    this.getFilteredFields = () => {
      this.filteredFields = this.fields.reduce((filteredFields, field) => {
        if ((!this.searchTerm ||
          field.name.toLowerCase().indexOf(this.searchTerm.toLowerCase()) > -1 ||
          field.alias.toLowerCase().indexOf(this.searchTerm.toLowerCase()) > -1) &&
          (this.selectedFieldTypeFilter === "default" ||
            this.selectedFieldTypeFilter === field.type)) {
          filteredFields[field.name] = field;
        }
        return filteredFields;
      }, {});
    };
    this.handleSelectAllToggle = () => {
      this.fields = this.fields.map((field) => {
        if (!!this.filteredFields[field.name]) {
          return Object.assign(Object.assign({}, field), { selected: !this.allSelected });
        }
        return field;
      });
    };
    this.clearSelection = () => {
      this.fields = this.fields.map((field) => (Object.assign(Object.assign({}, field), { selected: false })));
    };
    // Telemetry: Log changes user made to fields
    this.logCSVFieldChanges = (fields) => {
      // TODO: Refactor fields count to use mapreduce
      const telemetry = _config_eb5f7dc2_js__WEBPACK_IMPORTED_MODULE_2__.c.telemetry;
      const modifiedFieldsCount = { type: 0, alias: 0 };
      const totalFieldsCount = this.fields.length;
      const selectedFieldsCount = Object.keys(fields).length;
      for (const field in this.fieldsModified) {
        modifiedFieldsCount.type += this.fieldsModified[field].type;
        modifiedFieldsCount.alias += this.fieldsModified[field].alias;
      }
      const payload = {
        eventType: "other",
        pageName: "my content",
        category: "new item csv time zone and fields",
        details: this.fieldsSearched ? "fields searched" : "no fields searched",
        label: this.initialTimezone === _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.timezone ? "default timezone" : "timezone changed",
        count: totalFieldsCount,
        number: totalFieldsCount - selectedFieldsCount,
        size: modifiedFieldsCount.alias,
        position: modifiedFieldsCount.type
      };
      telemetry === null || telemetry === void 0 ? void 0 : telemetry.logEvent(payload);
    };
    this.selectedFieldTypeFilter = "default";
    this.fields = undefined;
    this.filteredFields = undefined;
    this.searchTerm = undefined;
    this.i18n = undefined;
    this.allSelected = undefined;
  }
  handleNext() {
    const fields = this.fields.reduce((fieldMap, field) => {
      var _a, _b;
      if (field.selected) {
        delete field.selected;
        // #4336 - if user changed to string, add a larger length to avoid publish errors
        if (field.type === "esriFieldTypeString" && ((_b = (_a = this.fieldsModified) === null || _a === void 0 ? void 0 : _a[field.name]) === null || _b === void 0 ? void 0 : _b.type)) {
          field.length = 4000;
        }
        fieldMap[field.name] = field;
      }
      return fieldMap;
    }, {});
    _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.selectedFields = fields;
    this.logCSVFieldChanges(fields);
    if (this.isAddToMapTerminalPage()) {
      // TODO: merge this with the same thing in `csv-location-fields`
      this.workflowComplete.emit({
        type: _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.type,
        url: encodeURI(_add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.url),
        customParameters: _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.customParameters,
        results: {
          analyzeResults: _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.analyzeResults,
          fields: _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.selectedFields
        }
      });
    }
    else if (_add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.type === "GeoJson") {
      this.newItemUpdatePage.emit("itemProperties");
    }
    else {
      this.newItemUpdatePage.emit("csvLocationFields");
    }
  }
  fieldsChanged() {
    this.getFilteredFields();
  }
  isAddToMapTerminalPage() {
    const { newItemMode, type } = _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a;
    return _ui_ecf86bba_js__WEBPACK_IMPORTED_MODULE_12__.u.workflow === "map" && newItemMode === "url" && type !== "CSV";
  }
  async componentWillLoad() {
    const i18n = _ui_ecf86bba_js__WEBPACK_IMPORTED_MODULE_12__.u.i18n;
    this.i18n = i18n.csvFields;
    if (this.isAddToMapTerminalPage()) {
      _ui_ecf86bba_js__WEBPACK_IMPORTED_MODULE_12__.u.nextText = "addToMap";
    }
    const { backupLayerFields } = _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a;
    const fields = (0,_geocode_7eb7c0df_js__WEBPACK_IMPORTED_MODULE_21__.a)().fields;
    const lookupMap = {};
    fields.forEach((field) => (lookupMap[field.name] = true));
    this.fields = backupLayerFields.map((field) => {
      var _a, _b;
      return (Object.assign(Object.assign({}, ((_b = (_a = _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.selectedFields) === null || _a === void 0 ? void 0 : _a[field.name]) !== null && _b !== void 0 ? _b : field)), { selected: !!lookupMap[field.name] }));
    });
    this.getFilteredFields();
    this.initialTimezone = _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.timezone;
    this.addDirectToMap = _ui_ecf86bba_js__WEBPACK_IMPORTED_MODULE_12__.u.workflow === "map" && !_add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.enablePublishing;
  }
  async componentDidLoad() {
    var _a;
    // https://devtopia.esri.com/WebGIS/arcgis-portal-app/issues/43341
    if (this.scrollContainer && ((_a = navigator === null || navigator === void 0 ? void 0 : navigator.vendor) === null || _a === void 0 ? void 0 : _a.includes("Apple"))) {
      this.scrollContainer.style.overflow = "hidden";
      await (0,_functional_c82f5ab9_js__WEBPACK_IMPORTED_MODULE_3__.t)(100);
      this.scrollContainer.style.overflow = "auto";
    }
  }
  updateField(event) {
    const { name, key, value } = event.detail;
    this.fields = this.fields.map((field) => {
      if (field.name === name) {
        field[key] = value;
        // Telemetry: Track if the incoming key is different than the default value
        this.updateModifiedFields(event.detail);
      }
      return field;
    });
  }
  render() {
    const { i18n, addDirectToMap } = this;
    this.allSelected = Object.keys(this.filteredFields).every((name) => this.filteredFields[name].selected);
    const canHideFields = !addDirectToMap && _ui_ecf86bba_js__WEBPACK_IMPORTED_MODULE_12__.u.workflow !== "append";
    const numberSelected = this.fields.filter((field) => field.selected).length;
    const hasDate = this.fields.some((field) => field.type === "esriFieldTypeDate");
    const timezone = _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.timezone;
    const rowHeaders = [i18n.fieldName, i18n.displayName, i18n.type];
    return ((0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("section", { class: "fields-container" }, (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("arcgis-new-item-description", { class: "description", header: i18n.fieldTitle, content: i18n[!_add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.enablePublishing ? "fieldNoHostedDescription" : "fieldDescription"] }), (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: "search-container" }, (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-label", { class: "field-search" }, (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-input", { onCalciteInputInput: this.handleSearchChange, type: "search", placeholder: i18n.searchFields }), (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("span", { class: "screen-readers-only" }, i18n.searchFields)), (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-select", { label: i18n.fieldType, onCalciteSelectChange: this.handleFieldTypeFilter, class: "field-select", width: "half" }, (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-option", { selected: this.selectedFieldTypeFilter === "default", value: "default" }, i18n.allTypes), Object.keys(i18n.fieldTypes).map((type) => {
      const fieldType = i18n.fieldTypes[type];
      return ((0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-option", { selected: this.selectedFieldTypeFilter === type, value: type }, fieldType));
    }))), (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: "field-table", role: "table" }, (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: `chip-container ${numberSelected === 0 || canHideFields ? "" : "not-visible"}` }, (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-chip", { class: "chip", value: numberSelected }, numberSelected, " ", i18n.selected), (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("button", { onClick: this.clearSelection, class: "clear-selection" }, i18n.clearSelection)), (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: `header-row ${Object.keys(this.filteredFields).length === 0 ? "hide" : ""}`, role: "row" }, rowHeaders.map((column, index) => {
      if (index === 0 && canHideFields) {
        return ((0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-label", { layout: "inline", class: "header-cell", role: "columnheader", "aria-sort": "none" }, (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-checkbox", { checked: this.allSelected, onCalciteCheckboxChange: this.handleSelectAllToggle }), column));
      }
      return ((0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("span", { class: "header-cell", role: "columnheader", "aria-sort": "none" }, column));
    })), Object.keys(this.filteredFields).length > 0 ? ((0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: "fields-scroll-container", ref: (el) => {
        this.scrollContainer = el;
      } }, Object.keys(this.filteredFields).map((key) => {
      var _a, _b;
      const field = this.filteredFields[key];
      return ((0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("arcgis-new-item-csv-field", { detectedType: (_b = (_a = _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a === null || _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a === void 0 ? void 0 : _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.backupLayerFields) === null || _a === void 0 ? void 0 : _a.find((backupField) => backupField.name === field.name)) === null || _b === void 0 ? void 0 : _b.type, onFieldChange: this.updateField.bind(this), field: field, fieldTypes: i18n.fieldTypes, defaultChecked: field.selected, canHideFields: canHideFields, displayNameLabel: i18n.displayNameLabel.replace("${name}", field.name), typeLabel: i18n.typeLabel.replace("${name}", field.name) }));
    }))) : ((0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-input-message", { icon: true, status: "valid" }, i18n.noFields))), hasDate && !addDirectToMap && ((0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("arcgis-new-item-timezone-dropdown", { onTimezoneChange: this.handleTimezoneChange, defaultTimezone: timezone }))));
  }
  get el() { return (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.d)(this); }
  static get watchers() { return {
    "fields": ["fieldsChanged"],
    "selectedFieldTypeFilter": ["fieldsChanged"],
    "searchTerm": ["fieldsChanged"]
  }; }
};
ArcgisNewItemPagesFileFields.style = arcgisNewItemPagesFileFieldsCss;

const arcgisNewItemPagesItemPropertiesCss = ".layer-description.sc-arcgis-new-item-pages-item-properties{display:block;margin-bottom:0.75rem}.locator__heading.sc-arcgis-new-item-pages-item-properties{font-weight:500;font-size:0.875rem;color:var(--calcite-ui-text-1);line-height:18px;margin-bottom:2px}.locator__description.sc-arcgis-new-item-pages-item-properties{font-size:0.875rem;color:var(--calcite-ui-text-1);margin:0;margin-bottom:1rem;padding:0}.medium.sc-arcgis-new-item-pages-item-properties{--arcgis-label-font-weight:500}.info-container.sc-arcgis-new-item-pages-item-properties{margin-bottom:1.5rem}";

var __asyncValues = ( false) || function (o) {
  if (!Symbol.asyncIterator)
    throw new TypeError("Symbol.asyncIterator is not defined.");
  var m = o[Symbol.asyncIterator], i;
  return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
  function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
  function settle(resolve, reject, d, v) { Promise.resolve(v).then(function (v) { resolve({ value: v, done: d }); }, reject); }
};
const MAX_TITLE_LENGTH = 250;
const ArcgisNewItemPagesItemProperties = class {
  constructor(hostRef) {
    (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.r)(this, hostRef);
    this.workflowCancel = (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "workflowCancel", 7);
    this.workflowComplete = (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "workflowComplete", 7);
    this.newItemToggleNavigationEnabled = (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "newItemToggleNavigationEnabled", 7);
    this.workflowCancelled = false;
    this.handleRequest = async () => {
      var _a, _b, _c;
      // Don't send request if an error is reported
      if (!(await this.validate())) {
        return;
      }
      const { newItemMode, existingItem, type } = _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a;
      const { categories } = _item_properties_e6412a9a_js__WEBPACK_IMPORTED_MODULE_6__.i;
      const { portal } = _config_eb5f7dc2_js__WEBPACK_IMPORTED_MODULE_2__.c;
      let addResponse;
      let publishResponse;
      let emptyLayerCreated = newItemMode === "featureLayer";
      const title = _item_properties_e6412a9a_js__WEBPACK_IMPORTED_MODULE_6__.i.title;
      if ((title === null || title === void 0 ? void 0 : title.length) > MAX_TITLE_LENGTH) {
        _item_properties_e6412a9a_js__WEBPACK_IMPORTED_MODULE_6__.i.title = title.substring(0, MAX_TITLE_LENGTH);
      }
      try {
        // Telemetry: Begin upload tracking workflow
        // TODO: Check if same telemetry events should be used in existing item publish workflows too
        logAddNewItemStart();
        ({ addResponse, publishResponse } =
          existingItem && newItemMode === "file"
            ? await this.publishExistingItem()
            : await this.handleAddItem());
        const responseIds = [addResponse === null || addResponse === void 0 ? void 0 : addResponse.id, publishResponse === null || publishResponse === void 0 ? void 0 : publishResponse.id].filter((id) => id);
        categories && (await (0,_server_item_f12153e6_js__WEBPACK_IMPORTED_MODULE_15__.u)(portal, responseIds, categories));
        if (type === "KML") {
          const { config, portal, api } = _config_eb5f7dc2_js__WEBPACK_IMPORTED_MODULE_2__.c;
          await (0,_feature_layer_38cdae87_js__WEBPACK_IMPORTED_MODULE_10__.p)((_a = addResponse.id) !== null && _a !== void 0 ? _a : _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.id, portal, config.restBaseUrl, config, api);
        }
        if (!this.workflowCancelled) {
          // Telemetry: Only log telemetry after successful upload
          logItemPropertiesChanges();
          logSuccessfulItemCreation();
          !!_add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.addTileLayerOption && (0,_tile_layer_bd7e56c2_js__WEBPACK_IMPORTED_MODULE_18__.a)();
          _config_eb5f7dc2_js__WEBPACK_IMPORTED_MODULE_2__.c.telemetry && (await (0,_functional_c82f5ab9_js__WEBPACK_IMPORTED_MODULE_3__.t)(750));
          let emitPayload;
          if (this.isAddToMapTerminalPage()) {
            if (newItemMode === "url") {
              const payload = Object.assign(Object.assign({ url: _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.url, customParameters: _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.customParameters, type: _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.type, addAsBasemap: _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.addAsBasemap }, (publishResponse
                ? { id: publishResponse.id, serviceUrl: publishResponse.serviceUrl }
                : {})), (_add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.storeAuth ? { id: addResponse.id } : {}));
              emitPayload = payload;
            }
            else {
              let payload;
              if (publishResponse) {
                payload = {
                  type: publishResponse.serviceType,
                  id: publishResponse.id,
                  jobId: publishResponse.jobId,
                  serviceUrl: publishResponse.serviceUrl,
                  results: {
                    sourceItemInfo: {
                      id: (_b = addResponse === null || addResponse === void 0 ? void 0 : addResponse.id) !== null && _b !== void 0 ? _b : existingItem === null || existingItem === void 0 ? void 0 : existingItem.id,
                      type: (_c = _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.type) !== null && _c !== void 0 ? _c : existingItem === null || existingItem === void 0 ? void 0 : existingItem.type
                    }
                  }
                };
              }
              else {
                payload = Object.assign({ type: _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.type, id: addResponse.id }, (_add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.analyzeResults && _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.selectedFields
                  ? {
                    results: {
                      analyzeResults: _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.analyzeResults,
                      fields: _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.selectedFields
                    }
                  }
                  : {}));
              }
              emitPayload = payload;
            }
          }
          else {
            emitPayload = Object.assign({
              // `publishResponse` doesn't for some flows so use this id instead
              id: addResponse === null || addResponse === void 0 ? void 0 : addResponse.id, item: Object.assign({}, _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a), response: addResponse, emptyLayerCreated,
              newItemMode
            }, publishResponse);
          }
          this.workflowComplete.emit(emitPayload);
        }
        else {
          (publishResponse === null || publishResponse === void 0 ? void 0 : publishResponse.id) && (await (0,_server_item_f12153e6_js__WEBPACK_IMPORTED_MODULE_15__.d)(publishResponse.id, { permanentDelete: true }));
          addResponse.id && (await (0,_server_item_f12153e6_js__WEBPACK_IMPORTED_MODULE_15__.d)(addResponse.id, { permanentDelete: true }));
          this.workflowCancel.emit();
        }
        (0,_utils_86ac6961_js__WEBPACK_IMPORTED_MODULE_13__.r)();
      }
      catch (error) {
        if (newItemMode === "featureLayer") {
          // TODO: refactor this once we refactor the error system in item properties
          (0,_feature_layer_d0f64b81_js__WEBPACK_IMPORTED_MODULE_29__.f)(JSON.stringify(error));
        }
        console.error(error);
        this.error = error;
        this.showLoader(false);
      }
    };
    this.preprocessAddItem = () => {
      if (_add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.tileLayerPublishType === "3dTiles") {
        _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.typeKeywords = [
          ..._add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.typeKeywords.filter((typeKeyword) => !_tile_layer_90a6b901_js__WEBPACK_IMPORTED_MODULE_9__.t.includes(typeKeyword)),
          _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.tilesLayer3dTilesLayerType
        ];
      }
    };
    this.itemType = undefined;
    this.error = undefined;
    this.loading = false;
    this.loaderType = "indeterminate";
    this.loaderMessage = undefined;
    this.i18n = undefined;
  }
  async validate() {
    var _a, _b;
    if (!(await this.itemPropertiesFolderRef.saveActiveFolder())) {
      return false;
    }
    const titleError = await ((_a = this.titleRef) === null || _a === void 0 ? void 0 : _a.validateTitle());
    if (titleError) {
      // Title component uses a brief inline error - map the main error handler to the detailed message
      this.error =
        titleError.code === "titleInUseService" ? { code: "serviceNameExists" } : titleError;
      this.titleRef.focusMainInput();
      return false;
    }
    const summaryError = await ((_b = this.summaryRef) === null || _b === void 0 ? void 0 : _b.getErrorMessage());
    if (summaryError) {
      this.error = summaryError;
      return false;
    }
    return true;
  }
  async navigateToNextPage() {
    this.handleRequest();
  }
  async handleError() {
    const { error } = this;
    const errorMessage = typeof error === "string" ? error : error === null || error === void 0 ? void 0 : error.message;
    // 39963: Publishing fails if the service name is taken, but the created item persists
    // Remove the newly created item so the title can be changed without throwing the
    // "file already exists" error on retry
    if ((errorMessage === null || errorMessage === void 0 ? void 0 : errorMessage.includes("Service name")) && !_add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.existingItem) {
      await (0,_server_item_f12153e6_js__WEBPACK_IMPORTED_MODULE_15__.d)(_add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.id, { permanentDelete: true });
    }
  }
  isAddToMapTerminalPage() {
    return _ui_ecf86bba_js__WEBPACK_IMPORTED_MODULE_12__.u.workflow === "map";
  }
  // Item was already created and only needs an update if it's a large CSV added to MV without publishing
  shouldUpdatePreviouslyCreatedItem() {
    const { type, enablePublishing, file } = _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a;
    const mvFlow = _ui_ecf86bba_js__WEBPACK_IMPORTED_MODULE_12__.u.workflow === "map";
    return (mvFlow &&
      type === "CSV" &&
      !enablePublishing &&
      !!file &&
      file.size > _feature_layer_38cdae87_js__WEBPACK_IMPORTED_MODULE_10__.M);
  }
  async componentWillLoad() {
    const addCreateI18n = _ui_ecf86bba_js__WEBPACK_IMPORTED_MODULE_12__.u.i18n;
    const i18n = addCreateI18n.itemProperties;
    this.i18n = i18n;
    const { newItemMode } = _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a;
    if (this.isAddToMapTerminalPage()) {
      _ui_ecf86bba_js__WEBPACK_IMPORTED_MODULE_12__.u.nextText = "createAndAddToMap";
    }
    else {
      _ui_ecf86bba_js__WEBPACK_IMPORTED_MODULE_12__.u.nextText = newItemMode === "dataStore" ? "createConnection" : "save";
    }
    _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.initialFolders = _config_eb5f7dc2_js__WEBPACK_IMPORTED_MODULE_2__.c.folders;
    _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.initialTitle = _item_properties_e6412a9a_js__WEBPACK_IMPORTED_MODULE_6__.i.title;
    const { enablePublishing, fileName, type, storeAuth } = _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a;
    if (_ui_ecf86bba_js__WEBPACK_IMPORTED_MODULE_12__.u.workflow === "map") {
      this.descriptionInfo = {
        title: !!fileName
          ? (0,_i18n_6685247f_js__WEBPACK_IMPORTED_MODULE_28__.r)(i18n.howWillAdd, fileName, "fileName")
          : i18n.howWillAddService,
        content: storeAuth
          ? i18n.howWillAddSecuredServiceDescription
          : enablePublishing
            ? i18n.howWillAddHostedDescription
            : (0,_i18n_6685247f_js__WEBPACK_IMPORTED_MODULE_28__.r)(i18n.howWillAddDescription, type === "GeoJson" ? "GeoJSON" : type, "fileType")
      };
    }
  }
  async handleAddItem() {
    const { file, fileName, newItemMode, type, enablePublishing, serviceInfo, typeKeywords, tags, extent, selectedServiceInfoLayersNames, addFeatureLayerType } = _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a;
    let addResponse;
    let publishResponse;
    this.preprocessAddItem();
    switch (newItemMode) {
      case "file":
        this.showLoader(true, {
          loaderType: (file === null || file === void 0 ? void 0 : file.size) > _feature_layer_38cdae87_js__WEBPACK_IMPORTED_MODULE_10__.M ? "determinate" : "indeterminate",
          loaderMessage: (0,_i18n_6685247f_js__WEBPACK_IMPORTED_MODULE_28__.r)(this.i18n["uploading"], fileName, "fileType") // TODO: Type in string should be "fileName", not "fileType"
        });
        if (this.shouldUpdatePreviouslyCreatedItem()) {
          ({ addResponse } = await this.handleFileUpdate());
        }
        else {
          ({ addResponse, publishResponse } = await this.handleFileUpload());
        }
        // Workflow was cancelled if no file found in store
        if (!_add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.file && !_add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.dataUrl) {
          this.workflowCancelled = true;
        }
        break;
      case "url":
        this.showLoader(true, {
          loaderType: "indeterminate",
          loaderMessage: (0,_i18n_6685247f_js__WEBPACK_IMPORTED_MODULE_28__.r)(this.i18n["adding"], _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.url, "fileType")
        });
        if ((type === "CSV" || type === "GeoJson") && enablePublishing) {
          ({ addResponse, publishResponse } = await this.handleFileUpload());
        }
        else {
          addResponse = await (0,_feature_layer_38cdae87_js__WEBPACK_IMPORTED_MODULE_10__.h)(_add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a, _config_eb5f7dc2_js__WEBPACK_IMPORTED_MODULE_2__.c.config, _config_eb5f7dc2_js__WEBPACK_IMPORTED_MODULE_2__.c.api);
        }
        break;
      case "featureLayer":
        this.showLoader(true, {
          loaderType: "indeterminate",
          loaderMessage: (0,_i18n_6685247f_js__WEBPACK_IMPORTED_MODULE_28__.r)(this.i18n["creating"], "feature layer", "fileType")
        });
        addResponse = await (0,_feature_layer_38cdae87_js__WEBPACK_IMPORTED_MODULE_10__.c)({
          serviceInfo,
          typeKeywords,
          tags,
          extent,
          selectedServiceInfoLayersNames,
          addFeatureLayerType
        });
        (0,_feature_layer_d0f64b81_js__WEBPACK_IMPORTED_MODULE_29__.a)();
        break;
      case "tileLayer":
      case "sceneLayer":
        this.showLoader(true, {
          loaderType: "indeterminate",
          loaderMessage: (0,_i18n_6685247f_js__WEBPACK_IMPORTED_MODULE_28__.r)(this.i18n["publishing"], newItemMode === "sceneLayer" ? "scene service" : "tile layer", "fileType")
        });
        ({ addResponse, publishResponse } = await this.addTileLayer());
        break;
      case "rasterFunctionTemplate":
        this.showLoader(true, {
          loaderType: (file === null || file === void 0 ? void 0 : file.size) > _feature_layer_38cdae87_js__WEBPACK_IMPORTED_MODULE_10__.M ? "determinate" : "indeterminate",
          loaderMessage: (0,_i18n_6685247f_js__WEBPACK_IMPORTED_MODULE_28__.r)(this.i18n["uploading"], fileName, "fileType")
        });
        _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.file = new File([""], `${_item_properties_e6412a9a_js__WEBPACK_IMPORTED_MODULE_6__.i.title}.rft.json`);
        ({ addResponse, publishResponse } = await this.handleFileUpload());
        break;
      case "application":
        this.showLoader(true, {
          loaderType: (file === null || file === void 0 ? void 0 : file.size) > _feature_layer_38cdae87_js__WEBPACK_IMPORTED_MODULE_10__.M ? "determinate" : "indeterminate",
          loaderMessage: (0,_i18n_6685247f_js__WEBPACK_IMPORTED_MODULE_28__.r)(this.i18n["adding"], _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.type, "fileType")
        });
        addResponse = await (0,_feature_layer_38cdae87_js__WEBPACK_IMPORTED_MODULE_10__.b)(_add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a, _config_eb5f7dc2_js__WEBPACK_IMPORTED_MODULE_2__.c.config.restBaseUrl, type === "Application"
          ? { redirect_uris: ["urn:ietf:wg:oauth:2.0:oob"], appType: "multiple" }
          : undefined);
        break;
      case "dataStore":
        const { addDataStoreType, provider } = _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a;
        this.showLoader(true, {
          loaderType: "indeterminate",
          loaderMessage: (0,_i18n_6685247f_js__WEBPACK_IMPORTED_MODULE_28__.r)(this.i18n["addDataStore"], this.i18n[addDataStoreType === "cloud" ? provider : addDataStoreType], "fileType")
        });
        addResponse = await (0,_data_store_f509564d_js__WEBPACK_IMPORTED_MODULE_25__.a)(_add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a, _item_properties_e6412a9a_js__WEBPACK_IMPORTED_MODULE_6__.i.title, _item_properties_e6412a9a_js__WEBPACK_IMPORTED_MODULE_6__.i.tags, _item_properties_e6412a9a_js__WEBPACK_IMPORTED_MODULE_6__.i.categories, _item_properties_e6412a9a_js__WEBPACK_IMPORTED_MODULE_6__.i.snippet);
        break;
      case "developerCredentials":
        this.showLoader(true, {
          loaderType: "indeterminate",
          loaderMessage: (0,_i18n_6685247f_js__WEBPACK_IMPORTED_MODULE_28__.r)(this.i18n["creating"], _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.type, "fileType")
        });
        addResponse = await this.addDeveloperCredentialApplication();
        break;
      case "create":
      default:
        this.showLoader(true, {
          loaderType: "indeterminate",
          loaderMessage: (0,_i18n_6685247f_js__WEBPACK_IMPORTED_MODULE_28__.r)(this.i18n["creating"], _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.type, "fileType")
        });
        addResponse = await (0,_server_item_f12153e6_js__WEBPACK_IMPORTED_MODULE_15__.c)(_add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a);
        break;
    }
    return { addResponse, publishResponse };
  }
  async publishExistingItem() {
    const { id, type } = _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a;
    let addResponse = { success: true, id, folder: null };
    const publishResponse = type === "Image Collection"
      ? await this.publishImageCollection(addResponse)
      : await this.publishService(id);
    await (0,_publish_item_82ffa7f8_js__WEBPACK_IMPORTED_MODULE_27__.a)(publishResponse);
    // https://devtopia.esri.com/WebGIS/arcgis-portal-app/issues/41501
    const typesToUpdateTitle = [
      "Shapefile",
      "File Geodatabase",
      "CSV",
      "Microsoft Excel",
      "GeoJson",
      "GeoPackage",
      "Feature Collection"
    ];
    if (typesToUpdateTitle.includes(type)) {
      ({ addResponse } = await this.handleFileUpdate(publishResponse.id));
    }
    return { addResponse, publishResponse };
  }
  async handleFileUpload() {
    var _a;
    const { type, enablePublishing, cloudProviderResource, geoJSONResource, csvResource } = _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a;
    let addResponse;
    let publishResponse;
    const isNotCSVOrExcel = type !== "CSV" && type !== "Microsoft Excel";
    if (enablePublishing) {
      if (type === "Image Collection") {
        addResponse = await this.addFile();
        publishResponse = await this.publishImageCollection(addResponse);
      }
      else {
        // For CSV and XLXS from cloud and large csv, we already add item
        if (!isNotCSVOrExcel && (cloudProviderResource || _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.id)) {
          // We need to make change to the original item title before publishing
          //  because publish always use the item title as the service name
          await (0,_server_item_f12153e6_js__WEBPACK_IMPORTED_MODULE_15__.e)(_add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.id, (0,_server_item_f12153e6_js__WEBPACK_IMPORTED_MODULE_15__.f)({
            title: _item_properties_e6412a9a_js__WEBPACK_IMPORTED_MODULE_6__.i.title,
            tags: _item_properties_e6412a9a_js__WEBPACK_IMPORTED_MODULE_6__.i.tags,
            snippet: _item_properties_e6412a9a_js__WEBPACK_IMPORTED_MODULE_6__.i.snippet
          }));
          ({ addResponse, publishResponse } = await this.publishExistingItem());
        }
        else {
          addResponse = await this.addFile({ title: _item_properties_e6412a9a_js__WEBPACK_IMPORTED_MODULE_6__.i.title });
          _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.id = addResponse.id;
          publishResponse = await this.publishService(addResponse.id);
        }
        await (0,_publish_item_82ffa7f8_js__WEBPACK_IMPORTED_MODULE_27__.a)(publishResponse);
      }
      this.updateFolder(publishResponse);
      if (cloudProviderResource || geoJSONResource || csvResource) {
        if ((cloudProviderResource === null || cloudProviderResource === void 0 ? void 0 : cloudProviderResource.mimeType) === "zip") {
          cloudProviderResource.zipItemType = type;
        }
        try {
          await (0,_feature_layer_38cdae87_js__WEBPACK_IMPORTED_MODULE_10__.d)((_a = cloudProviderResource !== null && cloudProviderResource !== void 0 ? cloudProviderResource : geoJSONResource) !== null && _a !== void 0 ? _a : csvResource, publishResponse.id);
        }
        catch (_b) {
          // no-op
        }
      }
    }
    else {
      if (cloudProviderResource && !isNotCSVOrExcel && _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.id) {
        // Already add, just need to update the title
        addResponse = await (0,_server_item_f12153e6_js__WEBPACK_IMPORTED_MODULE_15__.e)(_add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.id, (0,_server_item_f12153e6_js__WEBPACK_IMPORTED_MODULE_15__.f)({
          title: _item_properties_e6412a9a_js__WEBPACK_IMPORTED_MODULE_6__.i.title,
          tags: _item_properties_e6412a9a_js__WEBPACK_IMPORTED_MODULE_6__.i.tags,
          snippet: _item_properties_e6412a9a_js__WEBPACK_IMPORTED_MODULE_6__.i.snippet
        }));
      }
      else {
        addResponse = await this.addFile({ title: _item_properties_e6412a9a_js__WEBPACK_IMPORTED_MODULE_6__.i.title });
      }
    }
    return { addResponse, publishResponse };
  }
  async handleFileUpdate(id) {
    this.updateLoader("indeterminate", this.i18n.uploading.replace("${type}", _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.fileName));
    const addResponse = await (0,_server_item_f12153e6_js__WEBPACK_IMPORTED_MODULE_15__.e)(id !== null && id !== void 0 ? id : _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.id, (0,_server_item_f12153e6_js__WEBPACK_IMPORTED_MODULE_15__.f)({
      title: _item_properties_e6412a9a_js__WEBPACK_IMPORTED_MODULE_6__.i.title,
      tags: _item_properties_e6412a9a_js__WEBPACK_IMPORTED_MODULE_6__.i.tags,
      snippet: _item_properties_e6412a9a_js__WEBPACK_IMPORTED_MODULE_6__.i.snippet
    }));
    this.updateFolder(addResponse);
    return { addResponse };
  }
  async addDeveloperCredentialApplication() {
    const { developerCredentialsRedirectUrls, applicationEnvironment, developerCredentialsType, apiKeyReferrerUrls, developerPrivileges } = _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a;
    return (0,_feature_layer_38cdae87_js__WEBPACK_IMPORTED_MODULE_10__.b)(_add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a, (0,_portal_79caaeff_js__WEBPACK_IMPORTED_MODULE_1__.g)(_config_eb5f7dc2_js__WEBPACK_IMPORTED_MODULE_2__.c.portal), developerCredentialsType === "oauth"
      ? { appType: applicationEnvironment, redirect_uris: developerCredentialsRedirectUrls }
      : {
        appType: "apikey",
        redirect_uris: developerCredentialsRedirectUrls,
        httpReferrers: apiKeyReferrerUrls,
        privileges: developerPrivileges
      });
  }
  async addFile(props) {
    const response = await (0,_feature_layer_38cdae87_js__WEBPACK_IMPORTED_MODULE_10__.e)(props);
    this.updateLoader("indeterminate", this.i18n.checkingStatus);
    await (0,_publish_item_82ffa7f8_js__WEBPACK_IMPORTED_MODULE_27__.c)(response);
    return response;
  }
  async updateFolder(publishResponse) {
    const { id, file, cloudProviderResource } = _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a;
    const folder = _item_properties_e6412a9a_js__WEBPACK_IMPORTED_MODULE_6__.i.folder;
    // Multipart and pre-added items need to be moved after creation
    if ((file === null || file === void 0 ? void 0 : file.size) > _feature_layer_38cdae87_js__WEBPACK_IMPORTED_MODULE_10__.M || cloudProviderResource) {
      const moveIds = [];
      id && moveIds.push(id);
      (publishResponse === null || publishResponse === void 0 ? void 0 : publishResponse.id) && moveIds.push(publishResponse === null || publishResponse === void 0 ? void 0 : publishResponse.id);
      folder.id !== folder.username && (await (0,_server_item_f12153e6_js__WEBPACK_IMPORTED_MODULE_15__.m)(moveIds.join(","), folder.id));
    }
  }
  async publishService(itemId) {
    var _a, _b, _c, _d, _e, _f, _g, _h;
    this.showLoader(true, {
      loaderType: "indeterminate",
      loaderMessage: this.i18n.publishingService
    });
    const { result: publishResponse } = await (0,_publish_item_82ffa7f8_js__WEBPACK_IMPORTED_MODULE_27__.p)({
      itemId,
      user: _config_eb5f7dc2_js__WEBPACK_IMPORTED_MODULE_2__.c.user,
      extension: _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.extension,
      type: _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.type,
      title: _item_properties_e6412a9a_js__WEBPACK_IMPORTED_MODULE_6__.i.title
    });
    if (!((_a = publishResponse.services) === null || _a === void 0 ? void 0 : _a.length) || !((_c = (_b = publishResponse.services) === null || _b === void 0 ? void 0 : _b[0]) === null || _c === void 0 ? void 0 : _c.success) === false) {
      throw this.i18n.errorPublishing;
    }
    else if ((_e = (_d = publishResponse.services[0]) === null || _d === void 0 ? void 0 : _d.error) === null || _e === void 0 ? void 0 : _e.message) {
      throw (_g = (_f = publishResponse.services[0]) === null || _f === void 0 ? void 0 : _f.error) === null || _g === void 0 ? void 0 : _g.message;
    }
    const service = (_h = publishResponse.services) === null || _h === void 0 ? void 0 : _h[0];
    return {
      id: service === null || service === void 0 ? void 0 : service.serviceItemId,
      jobId: service === null || service === void 0 ? void 0 : service.jobId,
      serviceType: service === null || service === void 0 ? void 0 : service.type,
      serviceUrl: service === null || service === void 0 ? void 0 : service.serviceurl
    };
  }
  async publishImageCollection(addItemResponse) {
    var _a, e_1, _b, _c;
    const { config, user, portal } = _config_eb5f7dc2_js__WEBPACK_IMPORTED_MODULE_2__.c;
    this.showLoader(true, {
      loaderType: "indeterminate",
      loaderMessage: this.i18n.publishingService
    });
    const imageCollectionGenerator = (0,_image_collection_a67002cc_js__WEBPACK_IMPORTED_MODULE_26__.c)(addItemResponse, _item_properties_e6412a9a_js__WEBPACK_IMPORTED_MODULE_6__.i.title, { config, user, portal });
    try {
      for (var _d = true, imageCollectionGenerator_1 = __asyncValues(imageCollectionGenerator), imageCollectionGenerator_1_1; imageCollectionGenerator_1_1 = await imageCollectionGenerator_1.next(), _a = imageCollectionGenerator_1_1.done, !_a;) {
        _c = imageCollectionGenerator_1_1.value;
        _d = false;
        try {
          const status = _c;
          if (typeof status === "string") {
            this.updateLoader("indeterminate", this.i18n[status]);
          }
          else {
            return {
              id: status.serviceItemId,
              jobId: null,
              serviceType: status.type,
              serviceUrl: status.serviceurl
            };
          }
        }
        finally {
          _d = true;
        }
      }
    }
    catch (e_1_1) {
      e_1 = { error: e_1_1 };
    }
    finally {
      try {
        if (!_d && !_a && (_b = imageCollectionGenerator_1.return))
          await _b.call(imageCollectionGenerator_1);
      }
      finally {
        if (e_1)
          throw e_1.error;
      }
    }
  }
  async addTileLayer() {
    const { dataset, dataStoreId, serverId } = _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a;
    const { folder, categories } = _item_properties_e6412a9a_js__WEBPACK_IMPORTED_MODULE_6__.i;
    let publishResponse;
    if (dataset) {
      const { result, error } = await (0,_data_store_f509564d_js__WEBPACK_IMPORTED_MODULE_25__.p)({
        type: dataset.type,
        serviceName: _item_properties_e6412a9a_js__WEBPACK_IMPORTED_MODULE_6__.i.title,
        pathInCachedStore: dataset.path,
        cacheStoreId: dataStoreId,
        serverId,
        folder,
        description: _item_properties_e6412a9a_js__WEBPACK_IMPORTED_MODULE_6__.i.snippet,
        tags: _item_properties_e6412a9a_js__WEBPACK_IMPORTED_MODULE_6__.i.tags
      }, _config_eb5f7dc2_js__WEBPACK_IMPORTED_MODULE_2__.c.portal);
      if (error) {
        throw error;
      }
      if (result) {
        publishResponse = {
          id: result.serviceItemId,
          serviceType: result.type,
          serviceUrl: result.serviceUrl
        };
      }
    }
    else {
      if (_add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.tileLayerPublishType !== "3dTiles") {
        // TODO: finish the 3D Tiles publish workflow
        const { tileLayerPublishContent, tileLayerPublishType, tileLayerData } = _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a;
        const { title, tags, snippet } = _item_properties_e6412a9a_js__WEBPACK_IMPORTED_MODULE_6__.i;
        publishResponse = await (0,_tile_layer_f8be7028_js__WEBPACK_IMPORTED_MODULE_11__.p)(tileLayerPublishContent, {
          user: _config_eb5f7dc2_js__WEBPACK_IMPORTED_MODULE_2__.c.user,
          publishType: tileLayerPublishType,
          folder,
          title,
          tags,
          categories,
          snippet
        }, tileLayerData);
      }
    }
    const addResponse = { success: true, id: publishResponse.id, folder: null };
    return { addResponse, publishResponse };
  }
  showLoader(show, update) {
    if (update) {
      this.updateLoader(update.loaderType, update.loaderMessage);
    }
    if (show) {
      this.newItemToggleNavigationEnabled.emit(false);
      this.loading = true;
    }
    else {
      this.newItemToggleNavigationEnabled.emit(true);
      this.loading = false;
    }
  }
  updateLoader(loaderType, loaderMessage) {
    this.loaderType = loaderType;
    this.loaderMessage = loaderMessage;
  }
  parseError() {
    var _a, _b, _c, _d, _e, _f;
    const { i18n, error } = this;
    if (typeof error !== "string" && (0,_feature_layer_38cdae87_js__WEBPACK_IMPORTED_MODULE_10__.j)(error)) {
      const code = error.code;
      let linkInfo;
      if (code === "itemExists" || code === "fileExists") {
        linkInfo = {
          link: error.itemUrl,
          text: i18n.alreadyExists.linkText
        };
      }
      let title = i18n.errorTitle;
      let description = error.translatedMessage;
      if (!description && code === "fileExists") {
        title = i18n.alreadyExists.title;
        description = (0,_i18n_6685247f_js__WEBPACK_IMPORTED_MODULE_28__.r)(i18n.alreadyExists.description, this.fileName, "fileName");
      }
      if (code === "failToPublishFromDataStore") {
        const { newItemMode } = _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a;
        const baseI18n = i18n.failDatastorePublish;
        title = baseI18n.title;
        description = (0,_i18n_6685247f_js__WEBPACK_IMPORTED_MODULE_28__.r)(baseI18n.description, newItemMode === "sceneLayer" || newItemMode === "tileLayer" ? baseI18n[newItemMode] : "", "fileType");
      }
      if (code === "serviceNameExists") {
        ({ title, description } = i18n.serviceNameExists);
      }
      return { title, description, linkInfo };
    }
    if ((0,_feature_layer_38cdae87_js__WEBPACK_IMPORTED_MODULE_10__.k)(error)) {
      const errorDetail = error.details[0];
      if (errorDetail === null || errorDetail === void 0 ? void 0 : errorDetail.includes("must be uploaded directly to an ArcGIS Server site")) {
        const errorInfo = i18n.arcgisServerUpload;
        return { title: errorInfo.title, description: errorInfo.description };
      }
      else if (errorDetail.includes("spatial reference must be either a geographic or projected coordinate system")) {
        const errorInfo = i18n.invalidSpatialRef;
        return { title: errorInfo.title, description: errorInfo.description };
      }
    }
    const errorMessage = (typeof error === "string" ? error : error === null || error === void 0 ? void 0 : error.message) ||
      (error === null || error === void 0 ? void 0 : error.statusMessage) ||
      i18n.errorDescription;
    if (!errorMessage) {
      return { title: i18n.errorTitle, description: i18n.errorDescription };
    }
    const { fileName, file } = _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a;
    const lowercaseErrorMessage = errorMessage.toLowerCase();
    switch (true) {
      case (_a = lowercaseErrorMessage.includes) === null || _a === void 0 ? void 0 : _a.call(lowercaseErrorMessage, "already exists"):
        if (lowercaseErrorMessage.includes("file") || lowercaseErrorMessage.includes("item")) {
          return {
            title: i18n.alreadyExists.title,
            description: i18n.alreadyExists.description.replace("${fileName}", fileName || (file === null || file === void 0 ? void 0 : file.name))
          };
        }
        if (errorMessage.includes("Service name")) {
          return i18n.serviceNameExists;
        }
        break;
      case (_b = errorMessage.includes) === null || _b === void 0 ? void 0 : _b.call(errorMessage, "GeoJson doesn't have 'type'"):
        return i18n.invalidGeoJSON;
      case (_c = errorMessage.includes) === null || _c === void 0 ? void 0 : _c.call(errorMessage, "GeoJson file is not a valid json"):
        return i18n.invalidJSON;
      case (_d = errorMessage.includes) === null || _d === void 0 ? void 0 : _d.call(errorMessage, "Invalid Shapefile"):
        return {
          title: i18n.invalidShapefile.title,
          description: i18n.invalidShapefile.description
        };
      case (_e = errorMessage.includes) === null || _e === void 0 ? void 0 : _e.call(errorMessage, "Invalid File Geodatabase"):
        return i18n.invalidGeodatabase;
      case (_f = errorMessage.includes) === null || _f === void 0 ? void 0 : _f.call(errorMessage, "error publishing"):
        return { title: i18n.errorTitle, description: i18n.errorPublishing };
    }
    return {
      title: i18n.errorTitle,
      description: i18n.errorDescription
    };
  }
  render() {
    const { descriptionInfo, loading } = this;
    const { title, description, linkInfo } = this.parseError();
    const { newItemMode, type, enablePublishing } = _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a;
    const { user } = _config_eb5f7dc2_js__WEBPACK_IMPORTED_MODULE_2__.c;
    const isPublishedServiceDefinition = type === "Service Definition" && enablePublishing;
    const mvFlow = _ui_ecf86bba_js__WEBPACK_IMPORTED_MODULE_12__.u.workflow === "map";
    return ((0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)(_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.H, { class: { "overflow-hidden": loading } }, mvFlow && newItemMode === "url" && ((0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: "info-container" }, (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("arcgis-new-item-input-readonly", null))), descriptionInfo && ((0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: "info-container" }, (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("arcgis-new-item-description", { class: "layer-description", header: descriptionInfo.title, content: descriptionInfo.content, scale: "s", contentScale: "m" }))), (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("arcgis-new-item-loader", { type: this.loaderType, value: _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.uploadProgress, active: this.loading, text: this.loaderMessage }), ["file", "url", "dataStore"].includes(newItemMode) && !mvFlow && ((0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: "info-container" }, (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("arcgis-new-item-input-readonly", null))), type === "Geocoding Service" && ((0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", null, (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("h5", { class: "locator__heading" }, this.i18n.item), (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("p", { class: "locator__description" }, _ui_ecf86bba_js__WEBPACK_IMPORTED_MODULE_12__.u.i18n.createLayersList[newItemMode === "url" ? "locatorHeading" : "locatorViewHeading"]))), (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("arcgis-item-properties", null, !isPublishedServiceDefinition && ((0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("arcgis-title-input", { class: "medium", currentFolder: _item_properties_e6412a9a_js__WEBPACK_IMPORTED_MODULE_6__.i.folder, type: _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.type, enablePublishing: _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.enablePublishing, update: this.shouldUpdatePreviouslyCreatedItem(), ref: (ele) => (this.titleRef = ele), onArcgisTitleInputChange: () => {
        this.error = null;
      } })), (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("arcgis-folder-picker", { class: "medium", ref: (ele) => (this.itemPropertiesFolderRef = ele), onArcgisFolderPickerLoad: ({ detail }) => {
        var _a;
        (_a = _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.initialFolders) !== null && _a !== void 0 ? _a : (_add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.initialFolders = detail);
      } }), !(0,_privileges_ccd5f37d_js__WEBPACK_IMPORTED_MODULE_20__.n)(user) && (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("arcgis-categories-picker", { class: "medium" }), (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("arcgis-tags-picker", { class: "medium" }), (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("arcgis-summary-input", { class: "medium", ref: (ele) => (this.summaryRef = ele) }), type === "Notebook" && (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("arcgis-notebook-runtime-select", { class: "medium" })), (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("arcgis-new-item-alert", { heading: title, description: description, active: !!this.error, link: { href: linkInfo === null || linkInfo === void 0 ? void 0 : linkInfo.link, title: linkInfo === null || linkInfo === void 0 ? void 0 : linkInfo.text }, onAlertDismiss: () => (this.error = null) })));
  }
  get el() { return (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.d)(this); }
  static get watchers() { return {
    "error": ["handleError"]
  }; }
};
ArcgisNewItemPagesItemProperties.style = arcgisNewItemPagesItemPropertiesCss;

const arcgisNewItemPagesPublishSelectCss = ".label{font-weight:500;font-size:0.875rem;color:var(--calcite-ui-text-1);margin-bottom:1rem;padding-top:1rem;display:block;line-height:18px}.label--leader{margin-top:0.75rem;margin-bottom:0.5rem;font-weight:400}.fieldset{margin:0;padding:0;border-style:none}.constrain{max-width:360px}.notice--tip{margin-top:1.5rem}";

const ArcgisNewItemPagesPublishSelect = class {
  constructor(hostRef) {
    (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.r)(this, hostRef);
    this.newItemUpdatePage = (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "newItemUpdatePage", 7);
    this.newItemPrevPage = (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "newItemPrevPage", 7);
    this.newItemToggleNavigationEnabled = (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "newItemToggleNavigationEnabled", 7);
    this.workflowComplete = (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "workflowComplete", 7);
    this.canSkipPublishSelect = false;
    this.updateSelectedSheet = async ({ currentTarget }) => {
      // TODO: calcite-select currently sets selectedOption to the innerHTML of the first element instead of its value
      const selected = parseInt(currentTarget.selectedOption.value);
      _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.selectedSheet = isNaN(selected) ? 0 : selected;
      this.newItemToggleNavigationEnabled.emit(false);
      _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.selectedFields = null;
      _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.analyzeResults = null;
      _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.backupLayerFields = null;
      // For cloud, we also upload the file already at the beginning
      const success = await this.analyze(_add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.existingItem || _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.cloudProviderResource ? "item" : "file");
      if (!success) {
        // TODO: should we revert the change?
        return;
      }
      this.newItemToggleNavigationEnabled.emit(true);
    };
    this.deleteCurItem = async () => {
      try {
        if (_add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.id) {
          this.isDeletingOldFile = true;
          await (0,_server_item_f12153e6_js__WEBPACK_IMPORTED_MODULE_15__.d)(_add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.id, { permanentDelete: true });
          _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.id = null;
          this.isDeletingOldFile = false;
        }
      }
      catch (error) {
        console.warn("Delete item failed", error);
      }
    };
    this.selected = "hosted";
    this.loading = undefined;
    this.isDeletingOldFile = undefined;
    this.loaderType = "indeterminate";
    this.alertContent = undefined;
    this.tip = undefined;
    this.loaderMessage = undefined;
    this.publishSelectOption = null;
    this.i18n = undefined;
    this.itemInfoI18N = undefined;
    this.duplicateItemUrl = null;
  }
  async handleNext() {
    if (_add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.tileLayerPublishType === "3dTiles") {
      _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.tilesLayer3dTilesLayerType = this.publishSelectOption.tilesLayer3dTilesLayerType;
    }
    const { customParameters, url, type, newItemMode, file } = _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a;
    const isHosted = this.selected === "hosted";
    const mvFlow = _ui_ecf86bba_js__WEBPACK_IMPORTED_MODULE_12__.u.workflow === "map";
    _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.enablePublishing = isHosted;
    if (this.isAddToMapTerminalPage()) {
      this.workflowComplete.emit({
        type,
        url: encodeURI(url),
        customParameters
      });
      return;
    }
    if (newItemMode === "url" && type === "CSV" && mvFlow) {
      // Right now we only support this for csv
      const success = await this.analyze("url");
      if (!success) {
        return;
      }
    }
    else {
      if (this.duplicateItemUrl && isHosted) {
        this.handleError({ code: "itemExists", itemUrl: this.duplicateItemUrl });
        return;
      }
      const simpleHostedTypes = [
        "Json",
        "Tile Package",
        "Vector Tile Package",
        "Service Definition",
        "Scene Package",
        "GeoPackage",
        "3DTiles Package",
        // arcgis-portal-app#40929 and arcgis-portal-app#38119
        "GeoJson"
      ];
      const telemetry = _config_eb5f7dc2_js__WEBPACK_IMPORTED_MODULE_2__.c.telemetry;
      const payload = {
        eventType: "other",
        pageName: "my content",
        category: "new item add csv file"
      };
      if (simpleHostedTypes.indexOf(type) > -1 ||
        // We still want to analyze even if it's add direct
        (!isHosted && !mvFlow)) {
        if (type === "CSV") {
          // Log telemetry for non-hosted csv
          payload.details = "csv only";
          telemetry === null || telemetry === void 0 ? void 0 : telemetry.logEvent(payload);
        }
        this.newItemUpdatePage.emit("itemProperties");
        return;
      }
      if (type === "CSV") {
        const success = await this.analyze(!!_add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.cloudProviderResource ? "cloud" : file ? "file" : "url");
        if (!success) {
          return;
        }
      }
      // On successful upload, log hosted csv telemetry
      payload.details = "csv and hosted feature layer";
      telemetry === null || telemetry === void 0 ? void 0 : telemetry.logEvent(payload);
    }
    this.newItemUpdatePage.emit("fileField");
  }
  async handlePrev(event) {
    event.preventDefault();
    await this.deleteCurItem();
    const { type } = _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a;
    if (type === "CSV" || type === "Microsoft Excel") {
      // In case the user goes back to the file select page
      //  and select a different file
      _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.selectedFields = undefined;
    }
    this.newItemPrevPage.emit();
  }
  determineHint(file) {
    if (!(0,_item_types_054054c6_js__WEBPACK_IMPORTED_MODULE_16__.i)(file.size)) {
      return;
    }
    const { i18n } = this;
    const { user, portal } = _config_eb5f7dc2_js__WEBPACK_IMPORTED_MODULE_2__.c;
    const linkText = _ui_ecf86bba_js__WEBPACK_IMPORTED_MODULE_12__.u.i18n.common.learnMore;
    let title;
    let link; // TODO: set link url once we have the help id
    let color = "brand";
    if (!user || (0,_privileges_ccd5f37d_js__WEBPACK_IMPORTED_MODULE_20__.n)(user)) {
      title = i18n.bigGeoJsonHintPublicAccount;
      color = "danger";
    }
    else if (!(0,_privileges_35590eb4_js__WEBPACK_IMPORTED_MODULE_17__.a)(user, "GeoJson", portal)) {
      title = i18n.bigGeoJsonHintNoPrivilege;
    }
    else {
      title = i18n.bigGeoJsonHint;
    }
    this.alertContent = { title, linkText, link, color };
  }
  shouldDisableNonHosted() {
    const { file, type } = _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a;
    return (_ui_ecf86bba_js__WEBPACK_IMPORTED_MODULE_12__.u.workflow === "map" && type === "GeoJson" && file && (0,_item_types_054054c6_js__WEBPACK_IMPORTED_MODULE_16__.i)(file.size));
  }
  updateLoader(loaderType, loaderMessage) {
    this.loaderType = loaderType;
    this.loaderMessage = loaderMessage;
  }
  async connectedCallback() {
    var _a, _b, _c;
    this.i18n = _ui_ecf86bba_js__WEBPACK_IMPORTED_MODULE_12__.u.i18n.publishSelect;
    this.itemInfoI18N = _ui_ecf86bba_js__WEBPACK_IMPORTED_MODULE_12__.u.i18n.itemTypeInfo;
    const { type, id, existingItem, newItemMode, cloudProviderResource, file, tileLayerPublishType } = _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a;
    const { user, portal, config: { helpMap, helpBase } } = _config_eb5f7dc2_js__WEBPACK_IMPORTED_MODULE_2__.c;
    if (user) {
      const { error: backedBySDSError, result: _isPortalBackedBySDS } = await (0,_portal_79caaeff_js__WEBPACK_IMPORTED_MODULE_1__.f)(() => (0,_portal_79caaeff_js__WEBPACK_IMPORTED_MODULE_1__.i)(portal, user), "isPortalBackedBySDS", portal.id);
      if (!backedBySDSError) {
        _config_eb5f7dc2_js__WEBPACK_IMPORTED_MODULE_2__.c.portal.isBackedBySDS = _isPortalBackedBySDS;
      }
    }
    const mvFlow = _ui_ecf86bba_js__WEBPACK_IMPORTED_MODULE_12__.u.workflow === "map";
    const isExcel = type === "Microsoft Excel";
    if (existingItem) {
      const success = await this.analyze("item");
      if (!success) {
        return;
      }
      if (type === "CSV" ||
        (isExcel && ((_a = _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.analyzeResults.publishParameters.layers) === null || _a === void 0 ? void 0 : _a.length) === 1)) {
        this.newItemUpdatePage.emit("fileField");
        return;
      }
    }
    // Analyze to get Excel sheet info
    if (isExcel && !(0,_privileges_ccd5f37d_js__WEBPACK_IMPORTED_MODULE_20__.n)(user) && !existingItem) {
      if (!id) {
        _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.selectedSheet = 0;
        await this.analyze(cloudProviderResource ? "cloud" : "file");
      }
      else {
        await this.analyze("item");
      }
    }
    if (mvFlow) {
      this.selected =
        (newItemMode === "url" || !(0,_privileges_35590eb4_js__WEBPACK_IMPORTED_MODULE_17__.a)(user, type, portal)) &&
          !this.shouldDisableNonHosted()
          ? "non-hosted"
          : "hosted";
      if (this.isAddToMapTerminalPage()) {
        _ui_ecf86bba_js__WEBPACK_IMPORTED_MODULE_12__.u.nextText = "addToMap";
      }
    }
    // Add to MV: Manage upload here when adding file directly
    this.canSkipPublishSelect = canSkipPublishSelectToNextPage({
      directMode: mvFlow,
      isMultipageExcel: isExcel && ((_b = _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.excelLayers) === null || _b === void 0 ? void 0 : _b.length) > 1,
      newItemMode,
      cloud: !!cloudProviderResource,
      fromExistingItem: !!existingItem,
      itemType: type,
      canPublishItemType: (0,_privileges_35590eb4_js__WEBPACK_IMPORTED_MODULE_17__.a)(user, type, portal)
    });
    if (this.canSkipPublishSelect) {
      if (newItemMode === "url") {
        // Only adding from URL can be added directly
        //  since from-file flows relies on the published item id
        this.selected = "non-hosted";
      }
      this.handleNext();
    }
    if (!(0,_privileges_ccd5f37d_js__WEBPACK_IMPORTED_MODULE_20__.o)(portal) || !user) {
      this.selected = "non-hosted";
    }
    if (type === "Scene Package" && !(0,_privileges_35590eb4_js__WEBPACK_IMPORTED_MODULE_17__.h)(user)) {
      this.selected = "non-hosted";
      this.handleNext();
    }
    if (type === "GeoJson" && _ui_ecf86bba_js__WEBPACK_IMPORTED_MODULE_12__.u.workflow === "map") {
      if (!!file) {
        this.determineHint(file);
      }
      else if (!!_add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.url) {
        this.tip = {
          title: this.i18n.largeGeoJsonConditionDescription,
          linkText: _ui_ecf86bba_js__WEBPACK_IMPORTED_MODULE_12__.u.i18n.common.learnMore,
          link: `${helpBase}${helpMap["120003923"]}`
        };
      }
    }
    if (tileLayerPublishType === "3dTiles") {
      this.publishSelectOption = {
        tileLayerPublishType,
        tilesLayer3dTilesLayerType: (_c = _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.tilesLayer3dTilesLayerType) !== null && _c !== void 0 ? _c : _tile_layer_90a6b901_js__WEBPACK_IMPORTED_MODULE_9__.D
      };
    }
  }
  isAddToMapTerminalPage() {
    const { selected } = this;
    const { newItemMode, type } = _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a;
    return (_ui_ecf86bba_js__WEBPACK_IMPORTED_MODULE_12__.u.workflow === "map" &&
      newItemMode === "url" &&
      type === "GeoJson" &&
      selected === "non-hosted");
  }
  async analyze(analyzeType, forceCreateItem = false) {
    var _a;
    const { fileName, file, url, dataUrl, id: itemid, extension, type } = _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a;
    const { portal, user, config, lang } = _config_eb5f7dc2_js__WEBPACK_IMPORTED_MODULE_2__.c;
    this.updateLoader("indeterminate", this.i18n.analyze.replace("${fileName}", fileName.length > 0 ? fileName : url));
    this.loading = true;
    const fromCloud = analyzeType === "cloud";
    let error = null;
    if (fromCloud || (type === "CSV" && file && (0,_item_types_054054c6_js__WEBPACK_IMPORTED_MODULE_16__.a)(file.size)) || forceCreateItem) {
      const existingItemUrl = await (0,_server_item_f12153e6_js__WEBPACK_IMPORTED_MODULE_15__.h)(_add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.fileName, (_a = (0,_item_types_054054c6_js__WEBPACK_IMPORTED_MODULE_16__.f)(extension)[0]) === null || _a === void 0 ? void 0 : _a.type);
      if (existingItemUrl) {
        this.handleError({ code: "itemExists", itemUrl: existingItemUrl });
        this.loading = false;
        return false;
      }
      // ! This is a work around since analyze doesn't work with sourceUrl for cloud items yet
      // Also analyze will timeout for big csv https://devtopia.esri.com/WebGIS/arcgis-app-components/issues/2875
      if (!_add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.id) {
        const newName = (0,_guid_4f4176ba_js__WEBPACK_IMPORTED_MODULE_22__.g)();
        if ((file === null || file === void 0 ? void 0 : file.size) > _feature_layer_38cdae87_js__WEBPACK_IMPORTED_MODULE_10__.M) {
          this.updateLoader("determinate", this.i18n.uploading.replace("${item}", fileName));
        }
        const addResponse = await (fromCloud ? _feature_layer_38cdae87_js__WEBPACK_IMPORTED_MODULE_10__.l : _feature_layer_38cdae87_js__WEBPACK_IMPORTED_MODULE_10__.e)({
          title: newName,
          filename: newName
        });
        this.updateLoader("indeterminate", this.i18n.analyze.replace("${fileName}", fileName.length > 0 ? fileName : url));
        try {
          await (0,_publish_item_82ffa7f8_js__WEBPACK_IMPORTED_MODULE_27__.c)(addResponse);
        }
        catch (e) {
          this.handleError({ code: "unhandledError" });
          this.loading = false;
          return false;
        }
        const itemid = addResponse.id;
        ({ error } = await (0,_analyze_a3711367_js__WEBPACK_IMPORTED_MODULE_30__.a)({
          analyzeArgs: { type: "item", itemid },
          configArgs: { portal, user, config, lang },
          itemArgs: { itemType: type },
          initialize: true
        }));
        // We don't delete in case the user go back and forth
        _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.id = itemid;
      }
    }
    else {
      ({ error } = await (0,_analyze_a3711367_js__WEBPACK_IMPORTED_MODULE_30__.a)({
        analyzeArgs: analyzeType === "url"
          ? { type: "url", sourceUrl: url !== null && url !== void 0 ? url : dataUrl }
          : analyzeType === "file"
            ? { type: "file", file }
            : { type: "item", itemid },
        configArgs: { portal, user, config, lang },
        itemArgs: { itemType: type },
        initialize: true
      }));
      if ((error === null || error === void 0 ? void 0 : error.code) === "timeout") {
        // https://devtopia.esri.com/WebGIS/arcgis-app-components/issues/2875
        return this.analyze(analyzeType, true);
      }
    }
    this.loading = false;
    if (error) {
      this.handleError(error);
    }
    return !error;
  }
  handleError(error) {
    const { i18n } = this;
    this.duplicateItemUrl = null;
    this.alertContent = null;
    switch (error.code) {
      case "itemExists":
        this.duplicateItemUrl = error.itemUrl;
        const fileName = _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.fileName;
        this.alertContent = {
          title: i18n.error.alreadyExists.title,
          description: i18n.error.alreadyExists.desciption.replace("${fileName}", fileName),
          link: error.itemUrl,
          linkText: i18n.error.alreadyExists.linkText
        };
        break;
      case "emptyFile":
        this.alertContent = { title: i18n.error.title, description: i18n.error.emptyFile };
        break;
      case "duplicateFieldNames":
        this.alertContent = i18n.error.duplicateFields;
        break;
      default:
        this.alertContent = i18n.error;
        break;
    }
  }
  getDisplayType(type, extension) {
    var _a, _b, _c;
    let i18nKey = type;
    if (((_a = _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.cloudProviderResource) === null || _a === void 0 ? void 0 : _a.mimeType) === "googlesheets") {
      i18nKey = "Google Sheets";
    }
    else if (extension === "json") {
      i18nKey = "JSON";
    }
    return (_c = (_b = this.itemInfoI18N.lowercaseDisplayName[i18nKey]) !== null && _b !== void 0 ? _b : i18nKey) !== null && _c !== void 0 ? _c : "";
  }
  getOptionText(radio, displayName) {
    const isHosted = radio === "hosted";
    const { i18n, itemInfoI18N } = this;
    const { dataUrl, fileName, type } = _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a;
    const mvFlow = _ui_ecf86bba_js__WEBPACK_IMPORTED_MODULE_12__.u.workflow === "map";
    if (mvFlow) {
      return isHosted
        ? { title: i18n.hostedMVTitle, description: i18n.hostedMVDescription }
        : {
          title: dataUrl ? i18n.addDirectlyUrlTitle : i18n.addDirectlyTitle,
          description: dataUrl ? i18n.addDirectlyUrlDescription : i18n.addDirectlyDescription
        };
    }
    if (displayName === "GeoJSON" && !!dataUrl) {
      return i18n.geoJSONFromURL[isHosted ? "hosted" : "nonHosted"];
    }
    const title = (0,_i18n_6685247f_js__WEBPACK_IMPORTED_MODULE_28__.r)(isHosted
      ? i18n.hostedTitle[mvFlow && type === "CSV" ? "CSVNoTable" : displayName] ||
        i18n.hostedTitle[type]
      : itemInfoI18N.nonHostedTitle, fileName, "fileName");
    const description = (0,_i18n_6685247f_js__WEBPACK_IMPORTED_MODULE_28__.r)(isHosted
      ? // TODO: fix casing in the "tile package" and "vector tile package" hosted description keys in the i18n file after string freeze is lifted
        // WebGIS/arcgis-portal-app#39867
        i18n.hostedDescription[displayName] ||
          i18n.hostedDescription[displayName.toLowerCase()] ||
          i18n.hostedDescription[type] ||
          i18n.hostedDescription[type.toLowerCase()]
      : itemInfoI18N.nonHostedDescription, displayName, "fileType");
    return { title, description };
  }
  renderOption(radio, displayName) {
    const { title, description } = this.getOptionText(radio, displayName);
    return ((0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-tile-select", { checked: radio === this.selected, onCalciteTileSelectChange: (e) => {
        this.selected = e.target.value;
        _ui_ecf86bba_js__WEBPACK_IMPORTED_MODULE_12__.u.nextText = this.isAddToMapTerminalPage() ? "addToMap" : "next";
      }, description: description, heading: title, name: description, "input-enabled": true, "input-alignment": "start", type: "radio", value: radio, width: "full", id: `${radio}-input-option`, disabled: radio === "non-hosted" && this.shouldDisableNonHosted() }));
  }
  renderSheetSelect() {
    var _a;
    const { excelLayers } = _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a;
    if (!excelLayers || excelLayers.length === 1) {
      return null;
    }
    return ((0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-label", null, (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("span", { class: "label label--leader" }, this.i18n.publishThisSheet), (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-select", { label: "", onCalciteSelectChange: this.updateSelectedSheet.bind(this), value: (_a = String(_add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.selectedSheet)) !== null && _a !== void 0 ? _a : "0", class: "constrain" }, excelLayers.map((layer, i) => ((0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-option", { value: i, selected: i === _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.selectedSheet }, layer.name))))));
  }
  render3dTilesSelect() {
    const { i18n, publishSelectOption } = this;
    if ((publishSelectOption === null || publishSelectOption === void 0 ? void 0 : publishSelectOption.tileLayerPublishType) !== "3dTiles") {
      return null;
    }
    const { tilesLayer3dTilesLayerType } = publishSelectOption;
    return ((0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-label", null, (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("span", { class: "label label--leader" }, i18n["3dTiles"].layerType), (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-select", { label: "", onCalciteSelectChange: ({ currentTarget }) => {
        const selected = currentTarget.selectedOption
          .value;
        publishSelectOption.tilesLayer3dTilesLayerType = selected;
      }, value: publishSelectOption.tilesLayer3dTilesLayerType, class: "constrain" }, _tile_layer_90a6b901_js__WEBPACK_IMPORTED_MODULE_9__.t.map((layerType) => ((0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-option", { value: layerType, selected: layerType === tilesLayer3dTilesLayerType }, layerType === "3DObject" ? "3D Objects" : "Integrated Mesh"))))));
  }
  render() {
    const { extension, type, existingItem } = _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a;
    const { portal, user } = _config_eb5f7dc2_js__WEBPACK_IMPORTED_MODULE_2__.c;
    const displayName = this.getDisplayType(_add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.type, extension);
    const { loaderType, itemInfoI18N, loading, loaderMessage, selected, alertContent, isDeletingOldFile, tip, canSkipPublishSelect } = this;
    const mvFlow = _ui_ecf86bba_js__WEBPACK_IMPORTED_MODULE_12__.u.workflow === "map";
    // Add to MV: hide hosted select if item is being added directly
    const canPublishGeoJson = type === "GeoJson" && (0,_privileges_35590eb4_js__WEBPACK_IMPORTED_MODULE_17__.a)(user, "GeoJson", portal);
    // CSV has X Y
    const canPublishCSV = type === "CSV" && (0,_privileges_35590eb4_js__WEBPACK_IMPORTED_MODULE_17__.a)(user, "CSV", portal);
    const showPublishOptions = !existingItem && (!mvFlow || (!canSkipPublishSelect && (canPublishGeoJson || canPublishCSV)));
    return ((0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", null, (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("arcgis-new-item-loader", { type: loaderType, value: _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.uploadProgress, active: loading, text: loaderMessage }), (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("arcgis-new-item-loader", { type: "indeterminate", active: isDeletingOldFile }), (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("arcgis-new-item-input-readonly", null), showPublishOptions && ((0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("fieldset", { class: "fieldset" }, (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("legend", { class: "label" }, itemInfoI18N.howToAdd), (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-tile-select-group", { layout: "vertical" }, ["hosted", "non-hosted"]
      .filter((option) => (0,_privileges_ccd5f37d_js__WEBPACK_IMPORTED_MODULE_20__.o)(portal) || option !== "hosted")
      .map((radio) => this.renderOption(radio, displayName))))), type === "Microsoft Excel" &&
      selected === "hosted" &&
      _ui_ecf86bba_js__WEBPACK_IMPORTED_MODULE_12__.u.workflow !== "append" &&
      this.renderSheetSelect(), this.render3dTilesSelect(), (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-notice", { open: !!tip, class: "notice--tip", icon: true, scale: "s" }, (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { slot: "title" }, tip === null || tip === void 0 ? void 0 : tip.title), (tip === null || tip === void 0 ? void 0 : tip.description) && (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { slot: "message" }, tip === null || tip === void 0 ? void 0 : tip.description), (tip === null || tip === void 0 ? void 0 : tip.link) && ((0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-link", { slot: "link", href: tip === null || tip === void 0 ? void 0 : tip.link, target: "_blank" }, tip === null || tip === void 0 ? void 0 : tip.linkText))), (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("arcgis-new-item-alert", { heading: alertContent === null || alertContent === void 0 ? void 0 : alertContent.title, description: alertContent === null || alertContent === void 0 ? void 0 : alertContent.description, link: { href: alertContent === null || alertContent === void 0 ? void 0 : alertContent.link, title: alertContent === null || alertContent === void 0 ? void 0 : alertContent.linkText }, active: !!alertContent, onAlertDismiss: () => (this.alertContent = null), scale: "s" })));
  }
  get el() { return (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.d)(this); }
};
ArcgisNewItemPagesPublishSelect.style = arcgisNewItemPagesPublishSelectCss;

const arcgisNewItemPagesSingleLayerSelectCss = ".outer-container{display:flex;flex-direction:column}.layer-container{overflow:auto;overflow-x:hidden;box-sizing:border-box;display:flex;max-height:212px;height:30vh;border:1px solid var(--calcite-ui-border-1);border-top:0;width:100%}calcite-radio-button-group{width:100%}.layer-item{padding:12px 12px 0}.layer-notice{margin-bottom:1.5rem}.layer-input-message{font-weight:400;color:var(--calcite-ui-text-3);font-size:0.875rem}.layer-not-found-message{font-weight:500;font-size:0.875rem;color:var(--calcite-ui-text-2);text-align:center;width:100%;margin-top:1.5rem}.selected{background-color:rgba(0, 121, 193, 0.05)}.select-container{display:flex;justify-content:space-between;margin-top:1.5rem}.select-item{width:45%}.select-item-message{font-weight:500;font-size:0.875rem;margin-bottom:0.25rem}";

const ArcgisNewItemPagesSingleLayerSelect = class {
  constructor(hostRef) {
    (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.r)(this, hostRef);
    this.newItemUpdatePage = (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "newItemUpdatePage", 7);
    this.workflowComplete = (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "workflowComplete", 7);
    // TODO: Keep serviceInfo unmodified - can be hard to follow what came back from the response vs what was added/changed after
    this.selectWMTSLayer = (selectedLayer) => {
      var _a;
      const { serviceInfo } = _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a;
      serviceInfo.selectedLayer = selectedLayer;
      _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.serviceInfo = serviceInfo;
      _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.selectedLayer = selectedLayer;
      _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.tileMatrices =
        _config_eb5f7dc2_js__WEBPACK_IMPORTED_MODULE_2__.c.api === 4
          ? selectedLayer.tileMatrixSets.toArray()
          : selectedLayer.tileMatrixSetInfos;
      _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.selectedTileInfo = (_a = _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.tileMatrices) === null || _a === void 0 ? void 0 : _a[0];
      _item_properties_e6412a9a_js__WEBPACK_IMPORTED_MODULE_6__.i.title = selectedLayer.title;
    };
    this.selectWFSLayer = async (layer) => {
      const { serviceInfo, maxFeatures } = _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a;
      const { name, extent, title } = layer;
      const wfsLayerOptions = {
        layerName: name,
        mode: "snapshot",
        title: title || name,
        fullExtent: extent,
        maxFeatures: maxFeatures || 3000
      };
      if (_config_eb5f7dc2_js__WEBPACK_IMPORTED_MODULE_2__.c.api === 3) {
        // when calling select layer from `WFSLayer` this will actually update serviceInfo, so we need to setServiceInfo everytime after we call selectLayer here.
        await serviceInfo.selectLayer(wfsLayerOptions, () => {
          serviceInfo.selectedLayer = wfsLayerOptions;
          const isComplex = serviceInfo.geometryType === "esriGeometryComplex";
          serviceInfo.isComplex = isComplex;
          const url = serviceInfo.url.trim();
          _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.isComplex = isComplex;
          _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.serviceInfo = serviceInfo;
          _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.selectedLayer = wfsLayerOptions;
          _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.url = url;
          _item_properties_e6412a9a_js__WEBPACK_IMPORTED_MODULE_6__.i.title = wfsLayerOptions.title;
        });
      }
      else {
        serviceInfo.layerName = name;
        serviceInfo.maxFeatures = wfsLayerOptions.maxFeatures;
        // Previously we call `serviceInfo.selectLayer` in v3 and these are the callback
        serviceInfo.selectedLayer = wfsLayerOptions;
        const isComplex = serviceInfo.geometryType === "esriGeometryComplex";
        serviceInfo.isComplex = isComplex;
        const url = serviceInfo.url.trim();
        _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.isComplex = isComplex;
        _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.serviceInfo = serviceInfo;
        _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.selectedLayer = wfsLayerOptions;
        _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.url = url;
        _item_properties_e6412a9a_js__WEBPACK_IMPORTED_MODULE_6__.i.title = serviceInfo.title;
      }
    };
    this.handleSearchUpdate = (event) => {
      const layers = _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.b.layers.filter((layer) => !event.detail || layer.title.toLowerCase().indexOf(event.detail) > -1);
      this.filteredLayers = layers;
    };
    this.handleTileChange = () => {
      const name = this.getSelectOption(this.tileSelectRef);
      const selectedTileInfo = _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.b.tileMatrices.find((tileInfo) => tileInfo[_config_eb5f7dc2_js__WEBPACK_IMPORTED_MODULE_2__.c.api === 4 ? "id" : "tileMatrixSet"] === name);
      _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.selectedTileInfo = selectedTileInfo;
    };
    this.handleMaxFeatureChange = (event) => {
      _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.maxFeatures = parseInt(event.target.value);
    };
    this.handleGeometryChange = () => {
      this.selectedGeometry = this.getSelectOption(this.geometrySelectRef);
      _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.geometryType = this.selectedGeometry;
    };
    this.renderSelectMenus = () => {
      const { type, maxFeatures, tileMatrices, isComplex } = _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.b;
      const { i18n, handleGeometryChange, handleMaxFeatureChange, handleTileChange } = this;
      if (type === "WFS") {
        return ((0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: "select-container" }, (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-label", { class: "select-item" }, (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("strong", { class: "select-item-message" }, i18n.maxFeature), (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-input", { onCalciteInputInput: handleMaxFeatureChange, value: `${maxFeatures}`, "number-button-type": "vertical", min: 0,
          // width="auto" // TODO: No direct conversion - maybe style it from the outside
          type: "number" })), isComplex && ((0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-label", { class: "select-item" }, (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("strong", { class: "select-item-message" }, i18n.featureType), (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-select", { label: "", class: "select-geometry", onCalciteSelectChange: handleGeometryChange, ref: (el) => (this.geometrySelectRef = el) }, (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-option", { selected: this.selectedGeometry === "default", disabled: true, value: "default", label: i18n.selectGeometry }), (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-option", { value: "esriGeometryPoint", label: i18n.points }), (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-option", { value: "esriGeometryPolyline", label: i18n.lines }), (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-option", { value: "esriGeometryPolygon", label: i18n.polygons }))))));
      }
      else if ((tileMatrices === null || tileMatrices === void 0 ? void 0 : tileMatrices.length) > 1) {
        return ((0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: "select-container" }, (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-label", { class: "select-item" }, (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("strong", { class: "select-item-message" }, i18n.selectTile), (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-select", { label: "", onCalciteSelectChange: handleTileChange, ref: (el) => (this.tileSelectRef = el) }, tileMatrices.map((tile) => {
          const value = _config_eb5f7dc2_js__WEBPACK_IMPORTED_MODULE_2__.c.api === 3 ? tile.tileMatrixSet : tile.id;
          return (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-option", { value: value, label: value });
        })))));
      }
    };
    this.managedFocus = true;
    this.selectedLayer = undefined;
    this.selectedGeometry = "default";
    this.filteredLayers = undefined;
    this.errorMessage = "";
    this.i18n = undefined;
  }
  onTransitionComplete() {
    var _a;
    (_a = this.layerSearchRef) === null || _a === void 0 ? void 0 : _a.focusMainInput();
  }
  async handleNext() {
    const { isComplex } = _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.b;
    if (isComplex && this.selectedGeometry === "default") {
      this.errorMessage = this.i18n.selectGeometryError;
      this.geometrySelectRef.setFocus();
      return;
    }
    const { type } = _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a;
    if (type === "WFS") {
      await this.selectWFSLayer(this.selectedLayer);
    }
    if (this.isAddToMapTerminalPage()) {
      this.workflowComplete.emit({
        type: _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.type,
        url: encodeURI(_add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.url),
        customParameters: _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.customParameters,
        layers: [this.selectedLayer],
        addAsBasemap: _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.addAsBasemap
      });
    }
    else {
      this.newItemUpdatePage.emit("itemProperties");
    }
  }
  async handleLayerChange(name) {
    if (!name) {
      return;
    }
    // TODO: return new layer from select____Layer, write to store here
    if (_add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.b.type === "WMTS") {
      const selectedLayer = _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.b.layers.find((layer) => (_config_eb5f7dc2_js__WEBPACK_IMPORTED_MODULE_2__.c.api === 3 ? layer.identifier : layer.id) === name);
      this.selectedLayer = selectedLayer;
      this.selectWMTSLayer(selectedLayer);
    }
    else if (_add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.b.type === "WFS") {
      const selectedLayer = _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.b.layers.find((layer) => layer.name === name);
      await this.selectWFSLayer(selectedLayer);
      this.selectedLayer = selectedLayer;
      this.selectedGeometry = "default";
    }
    else {
      const selectedLayer = _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.b.layers.find((layer) => layer.title === name);
      this.selectedLayer = selectedLayer;
      // trouble with the typing here
      (0,_feature_layer_38cdae87_js__WEBPACK_IMPORTED_MODULE_10__.m)(selectedLayer);
    }
  }
  isAddToMapTerminalPage() {
    return _ui_ecf86bba_js__WEBPACK_IMPORTED_MODULE_12__.u.workflow === "map";
  }
  async componentWillLoad() {
    const i18n = _ui_ecf86bba_js__WEBPACK_IMPORTED_MODULE_12__.u.i18n;
    this.i18n = i18n.singleLayerSelect;
    if (this.isAddToMapTerminalPage()) {
      _ui_ecf86bba_js__WEBPACK_IMPORTED_MODULE_12__.u.nextText = _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.addAsBasemap ? "useAsBaseMap" : "addToMap";
    }
    if (_add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.b.type === "WFS") {
      _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.maxFeatures = 3000;
      await this.selectWFSLayer(_add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.serviceInfo.layers[0]);
    }
    if (_add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.b.type === "WMTS") {
      this.selectWMTSLayer(_add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.serviceInfo.layers[0]);
    }
    this.filteredLayers = _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.b.layers;
    const isOGCFeature = _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.b.type === "OGCFeatureServer";
    const layerValue = isOGCFeature
      ? "title"
      : _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.b.type === "WFS"
        ? "layerName"
        : "identifier";
    this.selectedLayer =
      _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.b.layers.find((layer) => { var _a; return layer[isOGCFeature ? "title" : " name"] === ((_a = _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.b.selectedLayer) === null || _a === void 0 ? void 0 : _a[layerValue]); }) || _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.b.layers[0];
    _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.selectedLayer = this.selectedLayer;
  }
  getSelectOption(select) {
    const option = select === null || select === void 0 ? void 0 : select.querySelector("calcite-option[selected]");
    return option === null || option === void 0 ? void 0 : option.value;
  }
  render() {
    var _a;
    const { renderSelectMenus, i18n, selectedLayer } = this;
    const isWMTS = _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.b.type === "WMTS";
    const isOGCFeature = _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.b.type === "OGCFeatureServer";
    const layerValue = isOGCFeature
      ? "title"
      : isWMTS
        ? _config_eb5f7dc2_js__WEBPACK_IMPORTED_MODULE_2__.c.api === 3
          ? "identifier"
          : "id"
        : "name";
    const LIMIT_AMOUNT = 1000;
    const usePro = this.filteredLayers.length >= LIMIT_AMOUNT;
    return ((0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: "outer-container" }, (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-notice", { class: "layer-notice", icon: "information", open: usePro, width: "full" }, (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("p", { slot: "message" }, i18n.usePro)), (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("strong", { class: "select-item-message" }, i18n.selectLayer), (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", null, (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("arcgis-new-item-layer-search", { searchLabel: "layers", onSearchUpdate: this.handleSearchUpdate, ref: (ele) => (this.layerSearchRef = ele) }), (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: "layer-container" }, this.filteredLayers.length === 0 ? ((0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("strong", { class: "layer-not-found-message" }, i18n.noLayersFound)) : ((0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-radio-button-group", { name: "layer-select", role: "radiogroup", layout: "vertical", onCalciteRadioButtonGroupChange: (event) => this.handleLayerChange(event.target.selectedItem.value) }, (_a = this.filteredLayers) === null || _a === void 0 ? void 0 : _a.slice(0, LIMIT_AMOUNT).map((layer) => {
      const value = layer[layerValue];
      const label = layer.title;
      let isSelected = false;
      // for some OGC Servers, the title may be duplicated in the data set so you have to also check the id as well (for what I was testing - the id couldnt be used as a value because it had special characters and couldnt be used as a selector in `querySelector`)
      if (value === selectedLayer[layerValue]) {
        if (isOGCFeature) {
          isSelected = layer.id === selectedLayer.id;
        }
        else {
          isSelected = true;
        }
      }
      return ((0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-label", { layout: "inline", for: value, class: {
          "layer-item": true,
          selected: isSelected
        } }, (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-radio-button", { class: "radio", checked: isSelected, id: value, name: value, value: value }), label || value));
    }))))), renderSelectMenus(), (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("arcgis-new-item-alert", { active: !!this.errorMessage, description: this.errorMessage, onAlertDismiss: () => (this.errorMessage = "") })));
  }
  get el() { return (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.d)(this); }
};
ArcgisNewItemPagesSingleLayerSelect.style = arcgisNewItemPagesSingleLayerSelectCss;

/**
 * Custom Paramters can be used for any OGC or AGS service. For WMS,
 * WFS and WMTS they will be added to the constructor from the JSAPI when
 * creating the layer, for everything else it will be added temporarily
 * to the URL when retreiving service info.
 * For all urls with custom paramters, it will be added to the items
 *  metadata using the text attribute.
 */
async function handleCustomParameterUpdate(serviceInfo, type, _customParameters) {
  const { customParameters, customLayerParameters } = (0,_feature_layer_38cdae87_js__WEBPACK_IMPORTED_MODULE_10__.n)(_customParameters);
  switch (type) {
    case "WMS":
    case "WMTS":
      await (serviceInfo === null || serviceInfo === void 0 ? void 0 : serviceInfo.setCustomParameters(customParameters || {}, customLayerParameters || {}));
      break;
    case "WFS":
      await (serviceInfo === null || serviceInfo === void 0 ? void 0 : serviceInfo.setCustomParameters(customParameters || {}));
      break;
  }
}

const isKeyAllowedInUrlLocalState = (key) => [
  "url",
  "type",
  "newItemMode",
  "serviceInfo",
  "isSecured",
  "allowStoredAuth",
  "storeAuth",
  "hybridImageServiceSetting",
  "addAsBasemap",
  "dataUrl",
  "fileName",
  "geoJSONResource",
  "title",
  "tags",
  "snippet"
].includes(key);

const arcgisNewItemPagesUrlTypeCss = ".label{font-weight:500;font-size:0.875rem;color:var(--calcite-ui-text-1);margin-bottom:1rem;padding-top:1rem;display:block;line-height:18px}.fieldset{margin:0;margin-bottom:1.5rem;padding:0;border-style:none}.info-header{font-weight:500;font-size:0.875rem;color:var(--calcite-ui-text-1);margin:0;margin-bottom:0.5rem;padding:0}.info-header--leader{margin-top:1rem}.info-description{font-weight:400;font-size:0.75rem;color:var(--calcite-ui-text-1);margin:0;padding:0}.custom-param-container{margin-bottom:1.5rem}:host{overflow-x:hidden}";

const ArcgisNewItemPagesUrlType = class {
  constructor(hostRef) {
    (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.r)(this, hostRef);
    this.newItemUpdatePage = (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "newItemUpdatePage", 7);
    this.newItemToggleNavigationEnabled = (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "newItemToggleNavigationEnabled", 7);
    this.workflowComplete = (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "workflowComplete", 7);
    var _a;
    this.addDirectToMap = false;
    this.urlOptions = [
      { value: "AGS", icon: "server", show: true },
      { value: "Document Link", icon: "file-code", show: !(0,_privileges_ccd5f37d_js__WEBPACK_IMPORTED_MODULE_20__.n)(_config_eb5f7dc2_js__WEBPACK_IMPORTED_MODULE_2__.c.user) },
      { value: "GeoJson", icon: "brackets-curly", show: true },
      { value: "KML", icon: "layer-kml", show: true },
      { value: "OGCFeatureServer", icon: "feature-layer", show: true },
      { value: "WFS", icon: "feature-layer", show: true },
      { value: "WMS", icon: "layer-map", show: true },
      { value: "WMTS", icon: "tile-layer", show: true },
      { value: "GeoRSS", icon: "file-text", show: _ui_ecf86bba_js__WEBPACK_IMPORTED_MODULE_12__.u.workflow === "map" },
      {
        value: "CSV",
        icon: "file-csv",
        show: _ui_ecf86bba_js__WEBPACK_IMPORTED_MODULE_12__.u.workflow === "map" || !((_a = _config_eb5f7dc2_js__WEBPACK_IMPORTED_MODULE_2__.c.portal) === null || _a === void 0 ? void 0 : _a.isPortal)
      },
      { value: "Tile Layer", icon: "tile-layer", show: _ui_ecf86bba_js__WEBPACK_IMPORTED_MODULE_12__.u.workflow === "map" }
    ];
    this.setServiceInfoState = (properties) => {
      Object.keys(properties).forEach((key) => {
        const value = properties[key];
        if (isKeyAllowedInUrlLocalState(key)) {
          // TODO: Remove any cast once incoming properties are trimmed down to urlData
          this.urlData[key] = value;
        }
        else {
          // TODO: Decide if all possible service info properties (thumbnail, extent, layers, etc.) should be part of urlData
          // If not, consider holding this as a temporary local object until the rest of the store assignments
          // @ts-ignore
          _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a[key] = value;
        }
      });
    };
    this.isAddToMapTerminalPage = () => {
      var _a;
      const { selectedOption, urlData: { url, serviceInfo }, addDirectToMap } = this;
      return (addDirectToMap &&
        (((0,_ags_68d4ae20_js__WEBPACK_IMPORTED_MODULE_31__.i)(this.urlData.type) && !this.urlData.storeAuth && serviceInfo) ||
          (0,_url_f3b82cc7_js__WEBPACK_IMPORTED_MODULE_23__.s)(selectedOption)) &&
        !(0,_feature_layer_38cdae87_js__WEBPACK_IMPORTED_MODULE_10__.i)(url, serviceInfo) &&
        (!["WMS", "WFS", "WMTS", "CSV", "GeoJson", "OGCFeatureServer"].includes(selectedOption) ||
          (0,_ags_68d4ae20_js__WEBPACK_IMPORTED_MODULE_31__.i)(this.urlData.type) ||
          (selectedOption === "GeoJson" && !_config_eb5f7dc2_js__WEBPACK_IMPORTED_MODULE_2__.c.user) ||
          (((_a = _config_eb5f7dc2_js__WEBPACK_IMPORTED_MODULE_2__.c.portal) === null || _a === void 0 ? void 0 : _a.isPortal) && ["CSV", "GeoJson"].includes(selectedOption))));
    };
    this.determineNextText = () => {
      const { urlData, isAddToMapTerminalPage, showAddToMap } = this;
      _ui_ecf86bba_js__WEBPACK_IMPORTED_MODULE_12__.u.nextText = "next";
      if (isAddToMapTerminalPage()) {
        _ui_ecf86bba_js__WEBPACK_IMPORTED_MODULE_12__.u.nextText = "addToMap";
        if (showAddToMap() && urlData.addAsBasemap) {
          _ui_ecf86bba_js__WEBPACK_IMPORTED_MODULE_12__.u.nextText = "useAsBaseMap";
        }
      }
    };
    this.showAddToMap = () => {
      const { urlData, addDirectToMap } = this;
      const { url = "", serviceInfo } = urlData;
      const addToMapType = [
        "Tile Layer",
        "WMS",
        "WMTS",
        "Vector Tile Service",
        "Image Service",
        "Map Service"
      ];
      return (addDirectToMap &&
        (addToMapType.includes(urlData.type) || (0,_feature_layer_38cdae87_js__WEBPACK_IMPORTED_MODULE_10__.i)(url, serviceInfo)));
    };
    this.handleAuthSwitchChange = (event) => {
      this.urlData.storeAuth = event.detail;
    };
    this.handleLoaderUpdate = (event) => {
      this.loading = event.detail;
    };
    this.resetError = () => {
      this.error = false;
      this.errorMessage = "";
    };
    this.open = false;
    this.selectedOption = null;
    this.previousSelectedOption = null;
    this.i18n = undefined;
    this.error = false;
    this.errorMessage = undefined;
    this.loading = false;
    this.loaderText = undefined;
    this.urlData = {};
  }
  async handleNext() {
    var _a, _b;
    const { urlData, selectedOption, itemUrlRef, i18n, selectRef } = this;
    const { customParameters } = _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a;
    const urlErrorMessage = await (itemUrlRef === null || itemUrlRef === void 0 ? void 0 : itemUrlRef.validateInput());
    if (urlErrorMessage) {
      // We already show error inline
      itemUrlRef.focusMainInput();
      return;
    }
    // Cancel next if url is not yet analyzed
    if (this.loading) {
      return;
    }
    if (!selectedOption) {
      selectRef.setFocus();
      this.errorMessage = i18n.undetected;
      this.error = true;
      return;
    }
    this.loading = true;
    const success = await this.handlePageTransition();
    this.loading = false;
    if (success) {
      if ((0,_feature_layer_38cdae87_js__WEBPACK_IMPORTED_MODULE_10__.i)(urlData.url, (_a = this.urlData) === null || _a === void 0 ? void 0 : _a.serviceInfo)) {
        this.assignStoreState();
        this.newItemUpdatePage.emit(this.urlData.storeAuth ? "auth" : "hybridImageSelect");
        return;
      }
      if (this.isAddToMapTerminalPage()) {
        this.loading = true;
        // Only redirect if no more actions are needed
        this.workflowComplete.emit({
          type: urlData.type,
          url: encodeURI(urlData.url),
          customParameters,
          addAsBasemap: (_b = this.urlData.addAsBasemap) !== null && _b !== void 0 ? _b : false
        });
        this.loading = false;
      }
      this.setNextPage();
      this.assignStoreState();
      this.newItemUpdatePage.emit(this.nextPage);
    }
    else {
      this.itemUrlRef.focusMainInput();
      this.error = true;
    }
  }
  assignStoreState() {
    const { url, type, allowStoredAuth, storeAuth, title, tags, snippet, serviceInfo, isSecured, addAsBasemap } = this.urlData;
    const selectedOption = this.selectedOption;
    _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.url = url;
    _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.storeAuth = storeAuth;
    _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.type = type;
    _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.allowStoredAuth = allowStoredAuth;
    _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.newItemMode = "url";
    _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.serviceInfo = serviceInfo;
    _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.isSecured = isSecured;
    _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.addAsBasemap = addAsBasemap !== null && addAsBasemap !== void 0 ? addAsBasemap : false;
    const parts = url.split("/");
    const fileName = parts[parts.length - 1];
    if (selectedOption === "GeoJson" && url) {
      _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.dataUrl = url;
      _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.title = fileName.replace(_privileges_ccd5f37d_js__WEBPACK_IMPORTED_MODULE_20__.q, "").replace(_privileges_ccd5f37d_js__WEBPACK_IMPORTED_MODULE_20__.s, "");
      _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.fileName = fileName;
      _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.extension = "json";
      if (_ui_ecf86bba_js__WEBPACK_IMPORTED_MODULE_12__.u.workflow !== "map") {
        _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.newItemMode = "file";
      }
      _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.geoJSONResource = {
        fileName,
        url,
        mimeType: "geojson"
      };
    }
    if (selectedOption === "CSV") {
      _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.type = "CSV";
      _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.dataUrl = url;
      _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.fileName = (0,_url_f3b82cc7_js__WEBPACK_IMPORTED_MODULE_23__.u)(url);
      _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.extension = "csv";
      _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.csvResource = {
        fileName,
        url,
        mimeType: "csv"
      };
    }
    title && (_item_properties_e6412a9a_js__WEBPACK_IMPORTED_MODULE_6__.i.title = title.replace(_privileges_ccd5f37d_js__WEBPACK_IMPORTED_MODULE_20__.s, ""));
    tags && (_item_properties_e6412a9a_js__WEBPACK_IMPORTED_MODULE_6__.i.tags = tags);
    snippet && (_item_properties_e6412a9a_js__WEBPACK_IMPORTED_MODULE_6__.i.snippet = snippet);
  }
  async componentWillLoad() {
    var _a;
    const { type, url, serviceInfo, isSecured, allowStoredAuth, storeAuth, addAsBasemap, title } = _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a;
    this.urlData = {
      url,
      type,
      allowStoredAuth,
      storeAuth,
      serviceInfo,
      isSecured,
      addAsBasemap,
      title
    };
    this.changeOption((_a = type) !== null && _a !== void 0 ? _a : null);
    this.addDirectToMap = _ui_ecf86bba_js__WEBPACK_IMPORTED_MODULE_12__.u.workflow === "map";
    this.i18n = _ui_ecf86bba_js__WEBPACK_IMPORTED_MODULE_12__.u.i18n.urlType;
    this.loaderText = this.i18n.getServiceInfo;
    if (!!_config_eb5f7dc2_js__WEBPACK_IMPORTED_MODULE_2__.c.allowedItemTypes) {
      this.urlOptions = this.urlOptions.filter((option) => {
        var _a, _b;
        return option.value === "AGS"
          ? (_a = _config_eb5f7dc2_js__WEBPACK_IMPORTED_MODULE_2__.c.allowedItemTypes) === null || _a === void 0 ? void 0 : _a.some((type) => (0,_ags_68d4ae20_js__WEBPACK_IMPORTED_MODULE_31__.i)(type))
          : (_b = _config_eb5f7dc2_js__WEBPACK_IMPORTED_MODULE_2__.c.allowedItemTypes) === null || _b === void 0 ? void 0 : _b.includes(option.value);
      });
      this.allowedItemTypes = _config_eb5f7dc2_js__WEBPACK_IMPORTED_MODULE_2__.c.allowedItemTypes.filter((itemType) => !_config_eb5f7dc2_js__WEBPACK_IMPORTED_MODULE_2__.c.portal.isPortal || _ui_ecf86bba_js__WEBPACK_IMPORTED_MODULE_12__.u.workflow === "map" || "CSV" !== itemType);
    }
    this.options = this.urlOptions
      .filter(({ show }) => show)
      .map(({ value, icon }) => {
      const entry = typeof value !== "string" ? "AGS" : value;
      return {
        optionTitle: this.i18n[entry].title,
        value: entry,
        description: this.i18n[entry].description,
        icon
      };
    });
    // Since we re-assign store state on next anyway,
    // these should be safe to be reset to avoid dangling data
    _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.dataUrl = null;
    _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.fileName = null;
    _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.geoJSONResource = null;
    _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.csvResource = null;
  }
  async getServiceInfo(checkAuth) {
    var _a;
    const { url, type, storeAuth } = this.urlData;
    const { error, result } = await (0,_feature_layer_38cdae87_js__WEBPACK_IMPORTED_MODULE_10__.o)({
      url,
      customParameters: _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.customParameters,
      type,
      checkAuth,
      storeAuth
    });
    if (error || !result) {
      this.error = true;
      if ((error === null || error === void 0 ? void 0 : error.message) === "does not point to a GIS server") {
        this.errorMessage = this.i18n.serviceNotGIS;
      }
      else if ((_a = error === null || error === void 0 ? void 0 : error.message) === null || _a === void 0 ? void 0 : _a.includes("doesn't support GeoJSON output")) {
        this.errorMessage = this.i18n.unsupportedWFSGeoJSONOutputFormat;
      }
      else {
        switch (error === null || error === void 0 ? void 0 : error.code) {
          case "serviceNotExist":
            this.errorMessage = this.i18n.serviceNotExist;
            break;
          case "unauthorized":
            this.errorMessage = "Unauthorized"; // TODO: Get proper error messaging, then localize
            break;
          case "unsupportedWFSVersion":
            this.errorMessage = this.i18n.unsupportedWFSVersion;
            break;
          case "invalidWMTS":
            this.errorMessage = this.i18n.invalidWMTS;
            break;
          case "invalidSpatialRef":
            this.errorMessage = this.i18n.invalidSpatialRef;
            break;
          case "emptyFeatureLayer":
            this.errorMessage = this.i18n.emptyFeatureLayer;
            break;
          default:
            this.errorMessage = this.i18n[error === null || error === void 0 ? void 0 : error.code] || this.i18n.serviceNotExist;
        }
      }
      return;
    }
    return result;
  }
  handleLoadChange(_oldValue, newValue) {
    this.newItemToggleNavigationEnabled.emit(newValue);
  }
  changeOption(type) {
    this.previousSelectedOption = this.selectedOption;
    this.selectedOption = (0,_ags_68d4ae20_js__WEBPACK_IMPORTED_MODULE_31__.i)(type) ? "AGS" : type;
    this.urlData.type = type;
    // Log telemetry event if option is manually changed to a different type
    if (this.previousSelectedOption !== this.selectedOption) {
      this.logChangeOptionEvent();
    }
    this.determineNextText();
  }
  async detectType(url) {
    if (url) {
      const { isPortal } = _config_eb5f7dc2_js__WEBPACK_IMPORTED_MODULE_2__.c.portal;
      const { result: type } = (0,_url_f3b82cc7_js__WEBPACK_IMPORTED_MODULE_23__.g)(url, isPortal);
      return type;
    }
    return this.urlData.type;
  }
  async handleNewUrl(args) {
    const { url } = args;
    this.loading = true;
    this.resetError();
    if (this.urlData.url !== url) {
      this.resetUrlData();
      this.resetServiceInfo();
      const detectedType = await this.detectType(url);
      this.urlData.url = url;
      this.urlData.type = detectedType;
      if ((0,_ags_68d4ae20_js__WEBPACK_IMPORTED_MODULE_31__.i)(detectedType)) {
        const serviceInfo = await this.getServiceInfo(false);
        serviceInfo && this.setServiceInfoState(serviceInfo);
      }
      this.changeOption(detectedType);
    }
    this.loading = false;
  }
  resetUrlData() {
    const { urlData } = this;
    urlData.url = null;
    urlData.type = null;
    urlData.isSecured = null;
    urlData.storeAuth = null;
    urlData.allowStoredAuth = null;
    urlData.serviceInfo = null;
    urlData.title = null;
    urlData.tags = null;
    urlData.snippet = null;
  }
  // Prevent stale service info from persisting on url change
  resetServiceInfo() {
    _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.agsType = null;
    _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.description = null;
    _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.extent = null;
    _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.thumbnailToken = null;
  }
  async handlePageTransition() {
    const { urlData } = this;
    // TODO: refactor this once we remove the side-effect from `custom-parameters`
    const { customParameters } = _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a;
    if (this.selectedOption === "Document Link") {
      return true;
    }
    const checkAuth = !!urlData.isSecured;
    _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.checkAuth = checkAuth;
    // ! For AGS case, `getServiceInfo` is already called once.
    // TODO: So refactor once we can get the sign in popup to show up easier
    const serviceInfo = await this.getServiceInfo(checkAuth);
    serviceInfo && this.setServiceInfoState(serviceInfo);
    if (customParameters.length > 0 && _config_eb5f7dc2_js__WEBPACK_IMPORTED_MODULE_2__.c.api === 3) {
      // `serviceInfo.customParameters` is already set after we fetch service info
      //  and setCustomParameters doesn't exist for v4
      await handleCustomParameterUpdate(urlData.serviceInfo, urlData.type, customParameters);
    }
    return !!serviceInfo;
  }
  /**
   * Telemetry handling for when an option is manually changed
   */
  logChangeOptionEvent() {
    const telemetry = _config_eb5f7dc2_js__WEBPACK_IMPORTED_MODULE_2__.c.telemetry;
    const payload = {
      eventType: "other",
      pageName: "my content",
      category: "new item url type change",
      details: this.urlData.url,
      label: `${this.previousSelectedOption}, ${this.selectedOption}`
    };
    telemetry === null || telemetry === void 0 ? void 0 : telemetry.logEvent(payload);
  }
  setNextPage() {
    const { selectedOption, addDirectToMap } = this;
    let nextPage;
    if ((0,_ags_68d4ae20_js__WEBPACK_IMPORTED_MODULE_31__.i)(this.urlData.type)) {
      nextPage = this.urlData.storeAuth ? "auth" : "itemProperties";
    }
    else {
      switch (selectedOption) {
        case "WMS":
          nextPage = "bulkLayerSelect";
          break;
        case "WFS":
        case "WMTS":
          nextPage = "singleLayerSelect";
          break;
        case "CSV":
        case "GeoJson":
          nextPage = "publishSelect";
          break;
        case "Tile Layer":
          nextPage = "tileLayerFromUrl";
          break;
        // TODO: move this back once we finalize spec https://devtopia.esri.com/WebGIS/arcgis-portal-app/issues/45714
        case "OGCFeatureServer":
          if (addDirectToMap) {
            nextPage = "singleLayerSelect";
            break;
          }
        default:
          nextPage = "itemProperties";
      }
    }
    this.nextPage = nextPage;
  }
  render() {
    var _a;
    const { i18n, selectedOption, urlData, determineNextText, addDirectToMap } = this;
    const { url = "", isSecured, addAsBasemap, allowStoredAuth } = urlData;
    const { config: { helpMap, helpBase }, user } = _config_eb5f7dc2_js__WEBPACK_IMPORTED_MODULE_2__.c;
    const agsItemTypes = (0,_functional_c82f5ab9_js__WEBPACK_IMPORTED_MODULE_3__.b)(Object.values(_ags_68d4ae20_js__WEBPACK_IMPORTED_MODULE_31__.a));
    const showCustomParametersType = [
      "WMS",
      "WFS",
      "WMTS",
      "OGCFeatureServer",
      ...agsItemTypes
    ];
    const showCustomParameters = showCustomParametersType.includes(urlData.type);
    return ((0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)(_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.H, null, (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("arcgis-new-item-loader", { active: this.loading, text: i18n.getServiceInfo }), (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("arcgis-new-item-alert", { active: this.error, description: this.errorMessage, onAlertDismiss: () => {
        this.error = false;
        this.errorMessage = "";
      } }), (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("arcgis-new-item-url", { url: url, onNewItemUrlChange: (event) => this.handleNewUrl(event.detail), supportedServices: (_a = this.allowedItemTypes) !== null && _a !== void 0 ? _a : _config_eb5f7dc2_js__WEBPACK_IMPORTED_MODULE_2__.c.allowedItemTypes, onUrlLoaderUpdate: this.handleLoaderUpdate, ref: (ele) => (this.itemUrlRef = ele) }), (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("arcgis-select", { ref: (ele) => (this.selectRef = ele), emptyText: i18n.undetected, selectedOption: selectedOption, options: this.options, label: i18n.label, onArcgisOptionChange: (event) => this.changeOption(event.detail) }), showCustomParameters && ((0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: "custom-param-container" }, (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("arcgis-new-item-custom-parameters", { itemType: urlData.type }))), !!user && isSecured && allowStoredAuth && ((0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("arcgis-new-item-switch-card", { onSwitchChange: this.handleAuthSwitchChange, header: i18n[addDirectToMap ? "storeAuthMV" : "storeAuth"], headerLink: { text: i18n.learnMore, href: `${helpBase}${helpMap["120000597"]}` }, defaultChecked: this.urlData.storeAuth })), this.showAddToMap() && ((0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("arcgis-new-item-switch-card", { header: i18n.useAsBaseMap, defaultChecked: addAsBasemap, onSwitchChange: (toggled) => {
        const addAsBasemap = toggled.detail;
        urlData.addAsBasemap = addAsBasemap;
        determineNextText();
      } }))));
  }
  get element() { return (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.d)(this); }
  static get watchers() { return {
    "loading": ["handleLoadChange"]
  }; }
};
ArcgisNewItemPagesUrlType.style = arcgisNewItemPagesUrlTypeCss;

// Map zip file options to their telemetry detail counterparts
var ZipFileTelemetry;
(function (ZipFileTelemetry) {
  ZipFileTelemetry["Shapefile"] = "shapefile";
  ZipFileTelemetry["File Geodatabase"] = "fgdb";
  ZipFileTelemetry["Photos with Locations"] = "geotagged photos";
  ZipFileTelemetry["Deep Learning Package"] = "deep learning package";
  ZipFileTelemetry["Map Template"] = "map template";
  ZipFileTelemetry["CAD Drawing"] = "cad";
  ZipFileTelemetry["CSV Collection"] = "csv collection";
  ZipFileTelemetry["KML Collection"] = "kml collection";
  ZipFileTelemetry["Desktop Application Template"] = "desktop app template";
  ZipFileTelemetry["Geoprocessing Sample"] = "geoprocessing sample";
  ZipFileTelemetry["Code Sample"] = "code sample";
  ZipFileTelemetry["ArcPad Package"] = "arcpad package";
  ZipFileTelemetry["AppBuilder Widget Package"] = "wab custom widget";
  ZipFileTelemetry["Image Collection"] = "image collection";
  ZipFileTelemetry["iWork Pages"] = "iwork pages";
  ZipFileTelemetry["iWork Numbers"] = "iwork numbers";
  ZipFileTelemetry["iWork Keynote"] = "iwork keynote";
  ZipFileTelemetry["GML"] = "gml";
  ZipFileTelemetry["Application"] = "application";
})(ZipFileTelemetry || (ZipFileTelemetry = {}));

const codeSampleLanguages = [
  "C",
  "C#",
  "C++",
  "Java",
  "Perl",
  "PHP",
  "Python",
  "Ruby",
  "SQL",
  "VB",
  "WPF",
  "Other"
];

const arcgisNewItemPagesZipSelectCss = ":host{padding-bottom:2rem;min-height:460px}.file{font-size:0.875rem;color:var(--calcite-ui-text-1);margin:0;padding:0}.label{font-weight:500;font-size:0.875rem;color:var(--calcite-ui-text-1);margin-bottom:0.75rem;margin-top:0;line-height:18px}.label--top{display:block;margin-top:1.5rem}.trailer-0{margin-bottom:0}";

const ArcgisNewItemPagesZipSelect = class {
  constructor(hostRef) {
    (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.r)(this, hostRef);
    this.newItemUpdatePage = (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "newItemUpdatePage", 7);
    this.itemTypes = [];
    this.updateHostedStatus = (e) => {
      this.publish = e.target.value;
    };
    this.handleChange = (event) => {
      this.selected = event.detail;
    };
    this.selected = "Shapefile";
    this.publish = "hosted";
    this.language = "C";
    this.pad = "project";
    this.i18n = undefined;
    this.itemInfoI18N = undefined;
  }
  handleNext() {
    const selected = this.selected === "Photos with Locations" ? "Image Collection" : this.selected;
    if (this.selected === "Application") {
      _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.newItemMode = "application";
      this.newItemUpdatePage.emit("application");
      return;
    }
    const { type, typeKeywords, thumbnailURL } = _item_types_b4fe86ad_js__WEBPACK_IMPORTED_MODULE_8__.a[selected];
    if (this.selected === "ArcPad Package") {
      typeKeywords.push(this.pad === "project" ? "ArcPad Project" : "ArcPad Template");
    }
    if (this.selected === "Code Sample") {
      typeKeywords.push(this.language);
    }
    if (this.selected === "Photos with Locations") {
      typeKeywords.push("Photo locations");
    }
    _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.newItemMode = "file";
    _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.type = type;
    _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.typeKeywords = typeKeywords;
    _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.thumbnailURL = thumbnailURL;
    _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.enablePublishing =
      this.publish === "hosted" && this.canPublishZipType() && _config_eb5f7dc2_js__WEBPACK_IMPORTED_MODULE_2__.c.allowPublish;
    this.newItemUpdatePage.emit("itemProperties");
  }
  async componentWillLoad() {
    this.i18n = _ui_ecf86bba_js__WEBPACK_IMPORTED_MODULE_12__.u.i18n.zipSelect;
    this.itemInfoI18N = _ui_ecf86bba_js__WEBPACK_IMPORTED_MODULE_12__.u.i18n.itemTypeInfo;
    const { portal, user } = _config_eb5f7dc2_js__WEBPACK_IMPORTED_MODULE_2__.c;
    if (!(0,_privileges_ccd5f37d_js__WEBPACK_IMPORTED_MODULE_20__.o)(portal)) {
      this.publish = "not-hosted";
    }
    const _isPublicUser = (0,_privileges_ccd5f37d_js__WEBPACK_IMPORTED_MODULE_20__.n)(user);
    const isEnterprise = portal.isPortal;
    this.itemTypes = [
      { value: "Shapefile", icon: "file-zip", publishable: true },
      { value: "File Geodatabase", icon: "data", publishable: true },
      { value: "Photos with Locations", icon: "images", publishable: true, hide: isEnterprise },
      { value: "Deep Learning Package", icon: "deep-learning" },
      { value: "Map Template", icon: "file-zip" },
      { value: "CAD Drawing", icon: "file-cad" },
      { value: "CSV Collection", icon: "file-csv" },
      { value: "KML Collection", icon: "layer-kml" },
      { value: "Desktop Application Template", icon: "file-zip" },
      { value: "Geoprocessing Sample", icon: "hammer" },
      { value: "Code Sample", icon: "file-code" },
      { value: "ArcPad Package", icon: "cube" },
      { value: "AppBuilder Widget Package", icon: "app-gear", hide: _isPublicUser },
      { value: "Image Collection", icon: "collection", hide: _isPublicUser },
      { value: "GML", icon: "code", hide: _isPublicUser },
      { value: "Application", icon: "apps", hide: _isPublicUser }
    ];
    // Add to MV: Trim down selectable list to defined allowedItemTypes, otherwise accept all
    if (!!_config_eb5f7dc2_js__WEBPACK_IMPORTED_MODULE_2__.c.allowedItemTypes) {
      this.itemTypes = this.itemTypes.filter((item) => _config_eb5f7dc2_js__WEBPACK_IMPORTED_MODULE_2__.c.allowedItemTypes.includes(item.value));
    }
  }
  replaceTypeAndName(str, fileName) {
    const nameRegEx = new RegExp(/\$\{fileName\}/g);
    const typeRegEx = new RegExp(/\$\{type\}/g);
    return str.replace(typeRegEx, this.selected).replace(nameRegEx, fileName);
  }
  canPublishZipType() {
    const { user, portal } = _config_eb5f7dc2_js__WEBPACK_IMPORTED_MODULE_2__.c;
    const selectedItemType = this.itemTypes.find((itemType) => itemType.value === this.selected);
    return selectedItemType.publishable && (0,_privileges_35590eb4_js__WEBPACK_IMPORTED_MODULE_17__.a)(user, selectedItemType.value, portal);
  }
  renderPublish() {
    const { i18n, itemInfoI18N } = this;
    const { portal } = _config_eb5f7dc2_js__WEBPACK_IMPORTED_MODULE_2__.c;
    const fileType = itemInfoI18N.lowercaseDisplayName[this.selected];
    let options = ["hosted", "not-hosted"];
    options = options.filter((option) => option !== "hosted" || (0,_privileges_ccd5f37d_js__WEBPACK_IMPORTED_MODULE_20__.o)(portal));
    return ((0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", null, (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-label", { class: "trailer-0" }, (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("span", { class: "label label--top" }, (0,_i18n_6685247f_js__WEBPACK_IMPORTED_MODULE_28__.r)(itemInfoI18N.howToAdd, fileType, "fileType"))), (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-tile-select-group", { layout: "vertical" }, options.map((value) => {
      const heading = (0,_i18n_6685247f_js__WEBPACK_IMPORTED_MODULE_28__.r)(value === "hosted" ? i18n[value].heading : itemInfoI18N.nonHostedTitle, _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a.fileName, "fileName");
      const description = (0,_i18n_6685247f_js__WEBPACK_IMPORTED_MODULE_28__.r)(value === "hosted" ? i18n[value].description : itemInfoI18N.nonHostedDescription, fileType, "fileType");
      return ((0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-tile-select", { checked: this.publish === value, width: "full", "input-enabled": true, "input-alignment": "start", name: "publish", value: value, onCalciteTileSelectChange: this.updateHostedStatus, heading: heading, description: description }));
    }))));
  }
  renderLanguages() {
    const languages = codeSampleLanguages.map((value) => ((0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-option", { value: value, selected: this.language === value }, value === "Other" ? this.i18n.other : value)));
    return ((0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-label", { key: "language-label" }, (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("span", { class: "label label--top" }, this.i18n.language), (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-select", { label: this.i18n.language, width: "half", ref: (el) => {
        this.languageSelect = el;
      }, onCalciteSelectChange: () => (this.language = this.languageSelect.selectedOption.value) }, languages)));
  }
  renderPad() {
    const padOptions = ["project", "template"].map((value) => ((0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-option", { value: value, selected: this.pad === value }, this.i18n.ArcPad[value])));
    return ((0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-label", { key: "pad-label" }, (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("span", { class: "label label--top" }, this.i18n.type), (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-select", { label: "", width: "half", ref: (el) => {
        this.padSelect = el;
      }, onCalciteSelectChange: () => (this.pad = this.padSelect.selectedOption.value) }, padOptions)));
  }
  render() {
    const { fileName } = _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_7__.a;
    const options = this.itemTypes
      .filter((item) => !item.hide)
      .map(({ value, icon }) => ({
      optionTitle: this.i18n[value].title,
      value,
      description: this.i18n[value].description,
      icon
    }));
    return ((0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", null, (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("h4", { class: "label" }, this.i18n.file), (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("p", { class: "file" }, fileName), (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("arcgis-select", { class: "label--top", selectedOption: this.selected, options: options, label: this.i18n.itemType, onArcgisOptionChange: (e) => {
        // Log which type of zip file was selected
        const telemetry = _config_eb5f7dc2_js__WEBPACK_IMPORTED_MODULE_2__.c.telemetry;
        const payload = {
          eventType: "other",
          pageName: "my content",
          category: "new item zip item type",
          label: ZipFileTelemetry[e.detail]
        };
        telemetry === null || telemetry === void 0 ? void 0 : telemetry.logEvent(payload);
        this.selected = e.detail;
      } }), this.canPublishZipType() &&
      _ui_ecf86bba_js__WEBPACK_IMPORTED_MODULE_12__.u.workflow !== "map" &&
      _config_eb5f7dc2_js__WEBPACK_IMPORTED_MODULE_2__.c.allowPublish &&
      this.renderPublish(), this.selected === "Code Sample" && this.renderLanguages(), this.selected === "ArcPad Package" && this.renderPad()));
  }
  get el() { return (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.d)(this); }
};
ArcgisNewItemPagesZipSelect.style = arcgisNewItemPagesZipSelectCss;

const timeZoneIds = {
  0: "Dateline Standard Time",
  200: "Hawaiian Standard Time",
  300: "Alaskan Standard Time",
  400: "Pacific Standard Time",
  410: "Pacific Standard Time (Mexico)",
  520: "US Mountain Standard Time",
  510: "Mountain Standard Time (Mexico)",
  500: "Mountain Standard Time",
  610: "Central America Standard Time",
  620: "Central Standard Time",
  630: "Central Standard Time (Mexico)",
  600: "Canada Central Standard Time",
  710: "SA Pacific Standard Time",
  700: "Eastern Standard Time",
  720: "US Eastern Standard Time",
  730: "Venezuela Standard Time",
  850: "Paraguay Standard Time",
  800: "Atlantic Standard Time",
  810: "Central Brazilian Standard Time",
  830: "SA Western Standard Time",
  820: "Pacific SA Standard Time",
  900: "Newfoundland Standard Time",
  910: "E. South America Standard Time",
  950: "Argentina Standard Time",
  940: "SA Eastern Standard Time",
  920: "Greenland Standard Time",
  930: "Montevideo Standard Time",
  1010: "UTC-02",
  1000: "Mid-Atlantic Standard Time",
  1100: "Azores Standard Time",
  1110: "Cape Verde Standard Time",
  1220: "Morocco Standard Time",
  1230: "UTC",
  1200: "GMT Standard Time",
  1210: "Greenwich Standard Time",
  1340: "W. Europe Standard Time",
  1300: "Central Europe Standard Time",
  1320: "Romance Standard Time",
  1310: "Central European Standard Time",
  1330: "W. Central Africa Standard Time",
  1350: "Namibia Standard Time",
  1430: "GTB Standard Time",
  1460: "Middle East Standard Time",
  1410: "Egypt Standard Time",
  1480: "Syria Standard Time",
  1400: "E. Europe Standard Time",
  1470: "South Africa Standard Time",
  1420: "FLE Standard Time",
  1490: "Turkey Standard Time",
  1440: "Israel Standard Time",
  1450: "Jordan Standard Time",
  1510: "Arabic Standard Time",
  1530: "Kaliningrad Standard Time",
  1500: "Arab Standard Time",
  1520: "E. Africa Standard Time",
  1535: "Iran Standard Time",
  1600: "Arabian Standard Time",
  1610: "Azerbaijan Standard Time",
  1540: "Russian Standard Time",
  1650: "Mauritius Standard Time",
  1640: "Georgian Standard Time",
  1620: "Caucasus Standard Time",
  1660: "Afghanistan Standard Time",
  1710: "West Asia Standard Time",
  1715: "Pakistan Standard Time",
  1720: "India Standard Time",
  1730: "Sri Lanka Standard Time",
  1740: "Nepal Standard Time",
  1800: "Central Asia Standard Time",
  1810: "Bangladesh Standard Time",
  1755: "Ekaterinburg Standard Time",
  1820: "Myanmar Standard Time",
  1900: "SE Asia Standard Time",
  1830: "N. Central Asia Standard Time",
  2000: "China Standard Time",
  1910: "North Asia Standard Time",
  2020: "Singapore Standard Time",
  2040: "W. Australia Standard Time",
  2030: "Taipei Standard Time",
  2050: "Ulaanbaatar Standard Time",
  2060: "North Asia East Standard Time",
  2110: "Tokyo Standard Time",
  2100: "Korea Standard Time",
  2140: "Cen. Australia Standard Time",
  2130: "AUS Central Standard Time",
  2210: "E. Australia Standard Time",
  2200: "AUS Eastern Standard Time",
  2240: "West Pacific Standard Time",
  2220: "Tasmania Standard Time",
  2150: "Yakutsk Standard Time",
  2300: "Central Pacific Standard Time",
  2250: "Vladivostok Standard Time",
  2410: "New Zealand Standard Time",
  2430: "UTC+12",
  2400: "Fiji Standard Time",
  2310: "Magadan Standard Time",
  2500: "Tonga Standard Time",
  120: "Samoa Standard Time"
};

const arcgisNewItemTimezoneDropdownCss = ".label{font-weight:500;font-size:0.875rem;color:var(--calcite-ui-text-1);line-height:18px;margin-bottom:6px}.has-subtitle{font-size:1rem;margin-bottom:0}.sub-label{font-size:0.75rem}:host{margin-bottom:1.5rem}";

const ArcgisNewItemTimezoneDropdown = class {
  constructor(hostRef) {
    (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.r)(this, hostRef);
    this.timezoneChange = (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "timezoneChange", 7);
    this.selected = "1230";
    this.subTitle = undefined;
    this.defaultTimezone = undefined;
    this.i18n = undefined;
  }
  async componentWillLoad() {
    this.i18n = _ui_ecf86bba_js__WEBPACK_IMPORTED_MODULE_12__.u.i18n.timezoneDropdown;
    const { defaultTimezone } = this;
    if (defaultTimezone) {
      for (const id in timeZoneIds) {
        if (defaultTimezone === timeZoneIds[id]) {
          this.selected = id;
          break;
        }
      }
    }
  }
  render() {
    const { i18n, selected, timezoneChange, subTitle } = this;
    return ((0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-label", null, (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("span", { class: "label" }, !subTitle && i18n.title), !subTitle && (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("span", { class: "sub-label" }, i18n.subTitle), (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-select", { onCalciteSelectChange: (event) => {
        const value = event.target.selectedOption.value;
        const id = timeZoneIds[value] || value;
        timezoneChange.emit(id);
      }, width: "half", label: "timezone-select", selectedOption: selected }, Object.keys(i18n.timezones).map((code) => {
      const timezone = i18n.timezones[code];
      return ((0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-option", { selected: code === selected, value: code }, timezone));
    })), subTitle && (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("span", { class: "sub-label" }, subTitle)));
  }
  get el() { return (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.d)(this); }
};
ArcgisNewItemTimezoneDropdown.style = arcgisNewItemTimezoneDropdownCss;

const arcgisNewItemUrlCss = ".url-field{margin-bottom:1rem}.help-text{margin-top:0.25rem;margin-bottom:0.5rem;font-size:0.875rem}";

const ArcgisNewItemUrl = class {
  constructor(hostRef) {
    (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.r)(this, hostRef);
    this.urlInputAddAction = (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "urlInputAddAction", 7);
    this.newItemUpdatePage = (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "newItemUpdatePage", 7);
    this.newItemUrlChange = (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "newItemUrlChange", 7);
    this.urlLoaderUpdate = (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "urlLoaderUpdate", 7);
    this.debouncedInput = (0,_functional_c82f5ab9_js__WEBPACK_IMPORTED_MODULE_3__.d)(() => {
      this.urlInputAddHandler();
    }, 2000);
    this.inputTitle = "";
    this.inputMessage = "";
    this.headerScale = "s";
    this.supportedServices = undefined;
    this.url = undefined;
    this.placeholder = "https://";
    this.required = true;
    this.inputMessageActive = false;
    this.inputStatus = undefined;
    this.isLoading = false;
    this.i18n = undefined;
  }
  async componentWillLoad() {
    var _a;
    const i18n = _ui_ecf86bba_js__WEBPACK_IMPORTED_MODULE_12__.u.i18n;
    this.i18n = i18n.url;
    if (((_a = this.supportedServices) === null || _a === void 0 ? void 0 : _a.length) > 0) {
      this.supportedServiceString = this.supportedServices
        .filter((type) => (0,_item_types_b4fe86ad_js__WEBPACK_IMPORTED_MODULE_8__.i)(type))
        .map((type) => {
        var _a, _b;
        const option = (0,_ags_68d4ae20_js__WEBPACK_IMPORTED_MODULE_31__.i)(type) ? "AGS" : type;
        return ((_b = (_a = i18n.itemTypeInfo.mvText[option]) !== null && _a !== void 0 ? _a : i18n.itemTypeInfo.lowercaseDisplayName[option]) !== null && _b !== void 0 ? _b : type);
      })
        .join(", ");
      this.helpText = (0,_i18n_6685247f_js__WEBPACK_IMPORTED_MODULE_28__.r)(i18n.common.supportLayerTypes, this.supportedServiceString, "typeList");
    }
    // Initialize state
    this.inputStatus = "idle";
    this.inputMessageActive = this.inputMessage.length > 0;
    if (!this.inputTitle) {
      this.inputTitle = this.i18n.url;
    }
  }
  async focusMainInput() {
    this.mainInputRef.setFocus();
  }
  async validateInput() {
    const { url, required } = this;
    this.resetValidation();
    this.debouncedInput.invoke();
    if (!url && !required) {
      this.urlLoaderUpdate.emit(false);
      return;
    }
    if (!url) {
      this.urlLoaderUpdate.emit(false);
      return this.setError("invalidUrl");
    }
    if ((0,_url_f3b82cc7_js__WEBPACK_IMPORTED_MODULE_23__.i)(url, _config_eb5f7dc2_js__WEBPACK_IMPORTED_MODULE_2__.c.portal.isPortal)) {
      this.urlLoaderUpdate.emit(false);
      return this.setError("httpWarning");
    }
  }
  resetValidation() {
    this.inputStatus = "idle";
    this.inputMessageActive = false;
  }
  async urlInputAddHandler() {
    if (!this.url) {
      return;
    }
    this.urlLoaderUpdate.emit(true);
    const { isPortal, allSSL } = _config_eb5f7dc2_js__WEBPACK_IMPORTED_MODULE_2__.c.portal;
    this.url = (0,_url_f3b82cc7_js__WEBPACK_IMPORTED_MODULE_23__.f)(this.url, allSSL);
    const { result: type, error } = (0,_url_f3b82cc7_js__WEBPACK_IMPORTED_MODULE_23__.g)(this.url, isPortal);
    if (type !== "KML") {
      // KML has a separate name field
      _item_properties_e6412a9a_js__WEBPACK_IMPORTED_MODULE_6__.i.title = (0,_url_f3b82cc7_js__WEBPACK_IMPORTED_MODULE_23__.u)(this.url).replace(_privileges_ccd5f37d_js__WEBPACK_IMPORTED_MODULE_20__.s, "");
    }
    this.urlLoaderUpdate.emit(false);
    if (error) {
      this.setError(error.code);
    }
    else {
      this.newItemUrlChange.emit({
        type,
        url: this.url
      });
    }
  }
  setError(code) {
    var _a;
    const supportedServiceString = this.supportedServiceString;
    const inputMessage = (code === "invalidUrl" && supportedServiceString
      ? (0,_i18n_6685247f_js__WEBPACK_IMPORTED_MODULE_28__.r)(this.i18n.invalidUrlWithType, supportedServiceString, "typeList")
      : (_a = this.i18n) === null || _a === void 0 ? void 0 : _a[code]) || this.i18n.errorMessage;
    this.inputStatus = "invalid";
    this.inputMessage = inputMessage;
    this.inputMessageActive = true;
    return inputMessage;
  }
  render() {
    const { url, helpText, placeholder, required, headerScale } = this;
    return ((0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-label", null, (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("arcgis-new-item-description", { header: this.inputTitle, headerScale: headerScale }), (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-input", { id: "item-properties-url", placeholder: placeholder, value: url, required: required, ref: (ele) => (this.mainInputRef = ele), status: this.inputStatus, type: "url", onInput: (e) => {
        this.resetValidation();
        // ignore paste, it's handled separately
        if (e.inputType === "insertFromPaste")
          return;
        this.url = e.target.value;
        this.debouncedInput();
      }, onKeyDown: (e) => {
        if (e.key === "Enter") {
          this.url = this.mainInputRef.value;
          this.debouncedInput.invoke();
        }
      }, onPaste: (e) => {
        this.url = e.clipboardData.getData("text");
        this.debouncedInput.invoke();
      } }), this.inputMessageActive ? ((0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-input-message", { icon: this.inputStatus === "invalid", status: this.inputStatus }, this.inputMessage)) : helpText ? ((0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("p", { class: "help-text" }, helpText)) : null));
  }
  get el() { return (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.d)(this); }
};
ArcgisNewItemUrl.style = arcgisNewItemUrlCss;




/***/ }),

/***/ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/feature-layer-d0f64b81.js":
/*!*******************************************************************************************************************!*\
  !*** ./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/feature-layer-d0f64b81.js ***!
  \*******************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   a: () => (/* binding */ featureServiceEndTelemetry),
/* harmony export */   b: () => (/* binding */ filterChangeTelemetry),
/* harmony export */   c: () => (/* binding */ featureLayerTypeTelemetry),
/* harmony export */   e: () => (/* binding */ enableLayerPreferenceTelemetry),
/* harmony export */   f: () => (/* binding */ featureLayerErrorTelemetry),
/* harmony export */   i: () => (/* binding */ itemExpandedTelemetry)
/* harmony export */ });
/* harmony import */ var _config_eb5f7dc2_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./config-eb5f7dc2.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/config-eb5f7dc2.js");
/* harmony import */ var _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./add-item-97d577a9.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/add-item-97d577a9.js");
/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * v3.0.99
 */



const TELEMETRY_ID = "create feature layer";
const TELEMETRY_PAGE_NAME = "my content";
const addFeatureLayerTypeToTelemetry = (type) => {
  switch (type) {
    case "build":
      return "blank";
    case "existing":
      return "fs";
    case "template":
      return "template";
    case "link":
      return "url";
  }
};
const enableLayerPreferenceTelemetry = (type) => {
  const telemetry = _config_eb5f7dc2_js__WEBPACK_IMPORTED_MODULE_0__.c.telemetry;
  telemetry === null || telemetry === void 0 ? void 0 : telemetry.stepWorkflow(TELEMETRY_ID, `enable ${type === "captureGPS" ? "gps" : type === "enableZDefaults" ? "z" : "m"}`, {
    category: TELEMETRY_ID,
    attribute: addFeatureLayerTypeToTelemetry(_add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_1__.a.addFeatureLayerType),
    pageName: TELEMETRY_PAGE_NAME
  });
};
const itemExpandedTelemetry = (type) => {
  const telemetry = _config_eb5f7dc2_js__WEBPACK_IMPORTED_MODULE_0__.c.telemetry;
  telemetry === null || telemetry === void 0 ? void 0 : telemetry.stepWorkflow(TELEMETRY_ID, `expand ${type} details`, {
    category: TELEMETRY_ID,
    attribute: addFeatureLayerTypeToTelemetry(_add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_1__.a.addFeatureLayerType),
    pageName: TELEMETRY_PAGE_NAME
  });
};
const filterChangeTelemetry = () => {
  const telemetry = _config_eb5f7dc2_js__WEBPACK_IMPORTED_MODULE_0__.c.telemetry;
  telemetry === null || telemetry === void 0 ? void 0 : telemetry.stepWorkflow(TELEMETRY_ID, "filter", {
    category: TELEMETRY_ID,
    attribute: addFeatureLayerTypeToTelemetry(_add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_1__.a.addFeatureLayerType),
    pageName: TELEMETRY_PAGE_NAME
  });
};
const featureLayerTypeTelemetry = (type) => {
  const telemetryType = addFeatureLayerTypeToTelemetry(type);
  const telemetry = _config_eb5f7dc2_js__WEBPACK_IMPORTED_MODULE_0__.c.telemetry;
  telemetry === null || telemetry === void 0 ? void 0 : telemetry.stepWorkflow(TELEMETRY_ID, "from option", {
    category: TELEMETRY_ID,
    attribute: telemetryType,
    pageName: TELEMETRY_PAGE_NAME
  });
};
const featureServiceEndTelemetry = () => {
  const { addFeatureLayerType, serviceInfo } = _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_1__.a;
  const featureLayerServiceInfo = serviceInfo;
  const telemetry = _config_eb5f7dc2_js__WEBPACK_IMPORTED_MODULE_0__.c.telemetry;
  telemetry === null || telemetry === void 0 ? void 0 : telemetry.endWorkflow(TELEMETRY_ID, {
    category: TELEMETRY_ID,
    attribute: addFeatureLayerTypeToTelemetry(addFeatureLayerType),
    pageName: TELEMETRY_PAGE_NAME,
    count: featureLayerServiceInfo.layers.length,
    number: featureLayerServiceInfo.tables.length
  });
};
const featureLayerErrorTelemetry = (errString) => {
  var _a;
  (_a = _config_eb5f7dc2_js__WEBPACK_IMPORTED_MODULE_0__.c.telemetry) === null || _a === void 0 ? void 0 : _a.logError({
    category: TELEMETRY_ID,
    error: errString
  });
};




/***/ }),

/***/ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/i18n-6685247f.js":
/*!**********************************************************************************************************!*\
  !*** ./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/i18n-6685247f.js ***!
  \**********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   r: () => (/* binding */ replaceI18NString)
/* harmony export */ });
/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * v3.0.99
 */
const regexLookupMap = {
  fileName: /\$\{fileName\}/g,
  fileType: /\$\{type\}/g,
  typeList: /\$\{typeList\}/g,
  missingFields: /\$\{\missingFields\}/g
};
const replaceI18NString = (str, replacementString, type) => {
  const typeRegEx = new RegExp(regexLookupMap[type]);
  return str === null || str === void 0 ? void 0 : str.replace(typeRegEx, replacementString);
};




/***/ }),

/***/ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/image-collection-a67002cc.js":
/*!**********************************************************************************************************************!*\
  !*** ./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/image-collection-a67002cc.js ***!
  \**********************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   c: () => (/* binding */ createImageCollection)
/* harmony export */ });
/* harmony import */ var _guid_4f4176ba_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./guid-4f4176ba.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/guid-4f4176ba.js");
/* harmony import */ var _server_item_f12153e6_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./server-item-f12153e6.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/server-item-f12153e6.js");
/* harmony import */ var _feature_layer_38cdae87_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./feature-layer-38cdae87.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/feature-layer-38cdae87.js");
/* harmony import */ var _portal_79caaeff_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./portal-79caaeff.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/portal-79caaeff.js");
/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * v3.0.99
 */





var __await = ( false) || function (v) { return this instanceof __await ? (this.v = v, this) : new __await(v); };
var __asyncGenerator = ( false) || function (thisArg, _arguments, generator) {
  if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
  var g = generator.apply(thisArg, _arguments || []), i, q = [];
  return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
  function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
  function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }
  function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
  function fulfill(value) { resume("next", value); }
  function reject(value) { resume("throw", value); }
  function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }
};
/**
 * Given an item, create a new service
 */
function createImageCollection(response, title, configOptions) {
  return __asyncGenerator(this, arguments, function* createImageCollection_1() {
    const { config, portal, user } = configOptions;
    const { item } = yield __await(fetchItem(response, user));
    const template = yield __await((0,_feature_layer_38cdae87_js__WEBPACK_IMPORTED_MODULE_2__.u)(portal));
    yield yield __await("publishingService");
    const isNotInRootFolder = item.ownerFolder && item.ownerFolder !== "/" && item.ownerFolder !== "root";
    const tempTitle = `${title}---${(0,_guid_4f4176ba_js__WEBPACK_IMPORTED_MODULE_0__.g)()}`;
    const { createServiceResponse, addToDefinitionResponse } = yield __await((0,_feature_layer_38cdae87_js__WEBPACK_IMPORTED_MODULE_2__.v)(Object.assign({ name: isNotInRootFolder ? tempTitle : title, layers: (template === null || template === void 0 ? void 0 : template.layers) || [], tables: (template === null || template === void 0 ? void 0 : template.tables) || [] }, template), { config, user }));
    if (isNotInRootFolder) {
      yield __await((0,_server_item_f12153e6_js__WEBPACK_IMPORTED_MODULE_1__.m)(createServiceResponse.itemId, item.ownerFolder));
      yield __await((0,_server_item_f12153e6_js__WEBPACK_IMPORTED_MODULE_1__.e)(createServiceResponse.itemId, { title }));
    }
    yield yield __await("appendingPhotos");
    const { statusUrl } = yield __await(appendPhotos(createServiceResponse, addToDefinitionResponse, item));
    yield __await(addRelationship(createServiceResponse, item, user));
    yield yield __await("checkingStatus");
    yield __await((0,_portal_79caaeff_js__WEBPACK_IMPORTED_MODULE_3__.p)(statusUrl));
    yield yield __await(createServiceResponse);
  });
}
function fetchItem(item, user) {
  const url = `${user.userContentUrl}/items/${item.id}`;
  return (0,_portal_79caaeff_js__WEBPACK_IMPORTED_MODULE_3__.r)(url);
}
function appendPhotos(createServiceResponse, addToDefinitionResponse, item) {
  var _a;
  const layer = addToDefinitionResponse.layers[0];
  const url = `${createServiceResponse.encodedServiceURL}/${(_a = layer.id) !== null && _a !== void 0 ? _a : 0}/append`;
  const content = {
    appendItemId: item.id,
    appendUploadFormat: "imageCollection",
    appendAttachmentsInfo: JSON.stringify({ ignoreAttachmentsWithoutLocation: true }),
    upsert: false,
    useGlobalIds: false,
    rollbackOnFailure: true
  };
  return (0,_portal_79caaeff_js__WEBPACK_IMPORTED_MODULE_3__.r)(url, content, {}, "post");
}
function addRelationship(createServiceResponse, item, user) {
  const url = `${user.userContentUrl}/addRelationship`;
  const content = {
    relationshipType: "Service2Data",
    destinationItemId: item.id,
    originItemId: createServiceResponse.itemId
  };
  return (0,_portal_79caaeff_js__WEBPACK_IMPORTED_MODULE_3__.r)(url, content, {}, "post");
}




/***/ }),

/***/ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/item-types-054054c6.js":
/*!****************************************************************************************************************!*\
  !*** ./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/item-types-054054c6.js ***!
  \****************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   a: () => (/* binding */ isLargeCSV),
/* harmony export */   f: () => (/* binding */ findPossibleItemTypesByExtension),
/* harmony export */   i: () => (/* binding */ isLargeGeoJSON),
/* harmony export */   m: () => (/* binding */ mapItemTypesToFileExtensions)
/* harmony export */ });
/* harmony import */ var _functional_c82f5ab9_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./functional-c82f5ab9.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/functional-c82f5ab9.js");
/* harmony import */ var _item_types_b4fe86ad_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./item-types-b4fe86ad.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/item-types-b4fe86ad.js");
/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * v3.0.99
 */



function findPossibleItemTypesByExtension(extension, validationTypes) {
  // Search item types extensions for the one imported
  let itemTypes;
  if (validationTypes) {
    itemTypes = validationTypes.map((value) => {
      return value.type;
    });
  }
  else {
    itemTypes = Object.keys(_item_types_b4fe86ad_js__WEBPACK_IMPORTED_MODULE_1__.a);
  }
  let possibleItemTypes = [];
  itemTypes.forEach((type) => {
    var _a;
    if (((_a = _item_types_b4fe86ad_js__WEBPACK_IMPORTED_MODULE_1__.a[type].fileExt) === null || _a === void 0 ? void 0 : _a.indexOf(extension)) >= 0) {
      possibleItemTypes.push(_item_types_b4fe86ad_js__WEBPACK_IMPORTED_MODULE_1__.a[type]);
    }
  });
  return possibleItemTypes;
}
function mapItemTypesToFileExtensions(types) {
  if (!types) {
    return null;
  }
  return (0,_functional_c82f5ab9_js__WEBPACK_IMPORTED_MODULE_0__.b)(types.flatMap((type) => { var _a; return (_a = _item_types_b4fe86ad_js__WEBPACK_IMPORTED_MODULE_1__.a[type]) === null || _a === void 0 ? void 0 : _a.fileExt; }).filter((valid) => !!valid));
}
const isLargeGeoJSON = (sizeInBytes) => {
  const sizeInMB = sizeInBytes / 1024 / 1024;
  // https://devtopia.esri.com/WebGIS/arcgis-app-components/issues/2553#issuecomment-3645404
  return sizeInMB > 50; // 50MB
};
const isLargeCSV = (sizeInBytes) => {
  const sizeInMB = sizeInBytes / 1024 / 1024;
  // https://devtopia.esri.com/WebGIS/arcgis-app-components/issues/2875#issuecomment-3748913
  return sizeInMB > 20; // 20MB
};




/***/ }),

/***/ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/languageUtil-22258c90.js":
/*!******************************************************************************************************************!*\
  !*** ./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/languageUtil-22258c90.js ***!
  \******************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   C: () => (/* binding */ CSS_UTILITY),
/* harmony export */   a: () => (/* binding */ formatDate),
/* harmony export */   f: () => (/* binding */ formatNumber),
/* harmony export */   g: () => (/* binding */ getElementDir),
/* harmony export */   l: () => (/* binding */ languageMap)
/* harmony export */ });
/* harmony import */ var _loadModules_aaf30bd6_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./loadModules-aaf30bd6.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/loadModules-aaf30bd6.js");
/* harmony import */ var _dom_13f5b00c_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dom-13f5b00c.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/dom-13f5b00c.js");
/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * v3.0.99
 */



const languageMap = new Map([
  ["ar", "ar"],
  ["bg", "bg"],
  ["bs", "bs"],
  ["ca", "ca"],
  ["cs", "cs"],
  ["da", "da"],
  ["de", "de"],
  ["el", "el"],
  ["en", "en"],
  ["es", "es"],
  ["et", "et"],
  ["fi", "fi"],
  ["fr", "fr"],
  ["he", "he"],
  ["hr", "hr"],
  ["hu", "hu"],
  ["id", "id"],
  ["it", "it"],
  ["ja", "ja"],
  ["ko", "ko"],
  ["lt", "lt"],
  ["lv", "lv"],
  ["nb", "nb"],
  ["nl", "nl"],
  ["pl", "pl"],
  ["pt-br", "pt-BR"],
  ["pt-pt", "pt-PT"],
  ["ro", "ro"],
  ["ru", "ru"],
  ["sk", "sk"],
  ["sl", "sl"],
  ["sr", "sr"],
  ["sv", "sv"],
  ["th", "th"],
  ["tr", "tr"],
  ["uk", "uk"],
  ["vi", "vi"],
  ["zh-cn", "zh-CN"],
  ["zh-hk", "zh-HK"],
  ["zh-tw", "zh-TW"]
]);
// rtl
function getElementDir(el) {
  return getElementProp(el, "dir", "ltr");
}
function getElementProp(el, prop, value) {
  const closestWithProp = (0,_dom_13f5b00c_js__WEBPACK_IMPORTED_MODULE_1__.c)(el, `[${prop}]`);
  return closestWithProp ? closestWithProp.getAttribute(prop) : value;
}
// css
const CSS_UTILITY = {
  rtl: "arcgis--rtl"
};
async function formatNumber(number, options) {
  const { api, type, places } = options || {};
  if (api === 4) {
    const [intl] = await (0,_loadModules_aaf30bd6_js__WEBPACK_IMPORTED_MODULE_0__.l)(["esri/intl"]);
    const numberFormatIntlOptions = intl.convertNumberFormatToIntlOptions({
      places,
      style: type,
      digitSeparator: true
    });
    return intl.formatNumber(number, Object.assign(Object.assign({}, numberFormatIntlOptions), { style: type }));
  }
  const [dojoNumber] = await (0,_loadModules_aaf30bd6_js__WEBPACK_IMPORTED_MODULE_0__.l)(["dojo/number"]);
  return dojoNumber.format(number, {
    type,
    places,
    pattern: options === null || options === void 0 ? void 0 : options.pattern
  });
}
const cache = {};
function formatDate(date) {
  const lang = document.documentElement.lang;
  const dayShortMonthYear = {
    year: "numeric",
    month: "short",
    day: "numeric"
  };
  if (!cache[lang]) {
    cache[lang] = new Intl.DateTimeFormat(document.documentElement.lang, dayShortMonthYear);
  }
  return cache[lang].format(date);
}




/***/ }),

/***/ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/locale-13e00a75.js":
/*!************************************************************************************************************!*\
  !*** ./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/locale-13e00a75.js ***!
  \************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   a: () => (/* binding */ getComponentClosestLanguage),
/* harmony export */   g: () => (/* binding */ getLocaleComponentStrings)
/* harmony export */ });
/* harmony import */ var _dom_13f5b00c_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dom-13f5b00c.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/dom-13f5b00c.js");
/* harmony import */ var _languageUtil_22258c90_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./languageUtil-22258c90.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/languageUtil-22258c90.js");
/* harmony import */ var _index_92ebb396_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./index-92ebb396.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/index-92ebb396.js");
/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * v3.0.99
 */




// https://medium.com/stencil-tricks/implementing-internationalisation-i18n-with-stencil-5e6559554117
function getComponentClosestLanguage(element) {
  var _a, _b, _c;
  const closestElement = (_a = (0,_dom_13f5b00c_js__WEBPACK_IMPORTED_MODULE_0__.c)(element, "[lang]")) !== null && _a !== void 0 ? _a : (_c = (_b = element.shadowRoot) === null || _b === void 0 ? void 0 : _b.ownerDocument) === null || _c === void 0 ? void 0 : _c.documentElement;
  // language set by the calling application or browser. defaults to english.
  const lang = ((closestElement === null || closestElement === void 0 ? void 0 : closestElement.lang) || (navigator === null || navigator === void 0 ? void 0 : navigator.language) || "en").toLowerCase();
  if (_languageUtil_22258c90_js__WEBPACK_IMPORTED_MODULE_1__.l.has(lang)) {
    return _languageUtil_22258c90_js__WEBPACK_IMPORTED_MODULE_1__.l.get(lang);
  }
  else {
    // "ru-RU" maps to "ru" use case
    if (_languageUtil_22258c90_js__WEBPACK_IMPORTED_MODULE_1__.l.has(lang.slice(0, 2))) {
      return _languageUtil_22258c90_js__WEBPACK_IMPORTED_MODULE_1__.l.get(lang.slice(0, 2));
    }
    else {
      return "en";
    }
  }
}
function getComponentClosestLanguageIntl(element) {
  var _a, _b, _c;
  // it's OK if we don't have the 4 letter language file for it
  // 4 letter language code needed for formatting numbers
  const closestElement = (_a = (0,_dom_13f5b00c_js__WEBPACK_IMPORTED_MODULE_0__.c)(element, "[lang]")) !== null && _a !== void 0 ? _a : (_c = (_b = element.shadowRoot) === null || _b === void 0 ? void 0 : _b.ownerDocument) === null || _c === void 0 ? void 0 : _c.documentElement;
  // language set by the calling application or browser. defaults to english.
  const lang = ((closestElement === null || closestElement === void 0 ? void 0 : closestElement.lang) || (navigator === null || navigator === void 0 ? void 0 : navigator.language) || "en").toLowerCase();
  if (_languageUtil_22258c90_js__WEBPACK_IMPORTED_MODULE_1__.l.has(lang)) {
    return _languageUtil_22258c90_js__WEBPACK_IMPORTED_MODULE_1__.l.get(lang);
  }
  else {
    if (_languageUtil_22258c90_js__WEBPACK_IMPORTED_MODULE_1__.l.has(lang.slice(0, 2))) {
      // we support the 2 letter coded language
      // e.g. it-CH vs it
      return lang;
    }
    else {
      return "en";
    }
  }
}
function fetchLocaleStringsForComponent(componentName, locale) {
  return new Promise((resolve, reject) => {
    fetch((0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_2__.a)(`../arcgis-app-assets/i18n/${componentName}.i18n.${locale}.json`)).then((result) => {
      if (result.ok)
        resolve(result.json());
      else
        reject();
    }, () => reject());
  });
}
const stringCache = {};
function fetchLocaleStringsFromCache(componentName, locale) {
  const id = `${componentName}${locale}`;
  if (!stringCache[id]) {
    stringCache[id] = fetchLocaleStringsForComponent(componentName, locale);
  }
  return stringCache[id];
}
/**
 * Get strings and language codes.
 * This method returns 2 language codes.
 * The first one returns a code that's also supported as a language file.
 * The second one returns a code where there is support for the first 2 letters of the code as part of a language file,
 * but will return the original 4 letter code from the page.
 * E.g. For "it-ch" it will return "it" as the first language code and "it-ch" as the second.
 * The second one is required for esri.intl.setLocale() to get the correct formatting.
 *
 * If a tagName is provided it will overwite the element's tagName
 *
 *  @return [ strings, first language code, second language code]
 */
async function getLocaleComponentStrings(element, tagName) {
  const componentName = tagName || element.tagName.toLowerCase();
  const componentLanguage = getComponentClosestLanguage(element);
  const componentLanguageIntl = getComponentClosestLanguageIntl(element);
  let strings;
  try {
    strings = await fetchLocaleStringsFromCache(componentName, componentLanguage);
  }
  catch (e) {
    console.warn(`no locale for ${componentName} (${componentLanguage}) loading default locale en.`);
    strings = await fetchLocaleStringsFromCache(componentName, "en");
  }
  return [strings, componentLanguage, componentLanguageIntl];
}




/***/ }),

/***/ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/subscription-09185996.js":
/*!******************************************************************************************************************!*\
  !*** ./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/subscription-09185996.js ***!
  \******************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   g: () => (/* binding */ getSubscriptionInfo)
/* harmony export */ });
/* harmony import */ var _portal_79caaeff_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./portal-79caaeff.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/portal-79caaeff.js");
/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * v3.0.99
 */


const getSubscriptionInfo = async (portal) => {
  try {
    const subscriptionInfo = await (0,_portal_79caaeff_js__WEBPACK_IMPORTED_MODULE_0__.r)(`${(0,_portal_79caaeff_js__WEBPACK_IMPORTED_MODULE_0__.g)(portal)}portals/self/subscriptionInfo`);
    return { result: subscriptionInfo };
  }
  catch (error) {
    console.error(error);
    return { error: { code: "unhandledError" } };
  }
};




/***/ }),

/***/ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/tile-layer-bd7e56c2.js":
/*!****************************************************************************************************************!*\
  !*** ./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/tile-layer-bd7e56c2.js ***!
  \****************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   a: () => (/* binding */ logTileLayerFinish),
/* harmony export */   b: () => (/* binding */ logTileLayerFromOption),
/* harmony export */   l: () => (/* binding */ logTileLayerStart)
/* harmony export */ });
/* harmony import */ var _config_eb5f7dc2_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./config-eb5f7dc2.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/config-eb5f7dc2.js");
/* harmony import */ var _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./add-item-97d577a9.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/add-item-97d577a9.js");
/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * v3.0.99
 */



const TELEMETRY_ID = "create tile layer";
const TELEMETRY_PAGE_NAME = "my content";
const mapTileLayerOptionToTelemetry = (type) => {
  switch (type) {
    case "store":
      return "data store";
    case "existing":
      return "fs";
    case "upload":
      return "upload";
  }
};
const mapTileLayerTypeToTelemetry = (type) => {
  switch (type) {
    case "tiles":
      return "raster";
    case "vectorTiles":
      return "vector";
  }
};
const logTileLayerStart = () => {
  var _a;
  (_a = _config_eb5f7dc2_js__WEBPACK_IMPORTED_MODULE_0__.c.telemetry) === null || _a === void 0 ? void 0 : _a.startWorkflow(TELEMETRY_ID, {
    category: "create tile layer",
    pageName: "my content"
  });
};
const logTileLayerFromOption = () => {
  const telemetry = _config_eb5f7dc2_js__WEBPACK_IMPORTED_MODULE_0__.c.telemetry;
  telemetry === null || telemetry === void 0 ? void 0 : telemetry.stepWorkflow(TELEMETRY_ID, "from option", {
    category: TELEMETRY_ID,
    attribute: mapTileLayerOptionToTelemetry(_add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_1__.a.addTileLayerOption),
    details: mapTileLayerTypeToTelemetry(_add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_1__.a.tileLayerPublishType),
    pageName: TELEMETRY_PAGE_NAME
  });
};
const logTileLayerFinish = () => {
  const telemetry = _config_eb5f7dc2_js__WEBPACK_IMPORTED_MODULE_0__.c.telemetry;
  telemetry === null || telemetry === void 0 ? void 0 : telemetry.endWorkflow(TELEMETRY_ID, {
    category: TELEMETRY_ID,
    attribute: mapTileLayerOptionToTelemetry(_add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_1__.a.addTileLayerOption),
    details: mapTileLayerTypeToTelemetry(_add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_1__.a.tileLayerPublishType),
    pageName: TELEMETRY_PAGE_NAME
  });
};




/***/ }),

/***/ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/utils-86ac6961.js":
/*!***********************************************************************************************************!*\
  !*** ./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/utils-86ac6961.js ***!
  \***********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   a: () => (/* binding */ resetStoreOnHome),
/* harmony export */   r: () => (/* binding */ resetAddItemStores)
/* harmony export */ });
/* harmony import */ var _item_properties_e6412a9a_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./item-properties-e6412a9a.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/item-properties-e6412a9a.js");
/* harmony import */ var _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./add-item-97d577a9.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/add-item-97d577a9.js");
/* harmony import */ var _ui_ecf86bba_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ui-ecf86bba.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/ui-ecf86bba.js");
/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * v3.0.99
 */




function resetAddItemStores() {
  _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_1__.d.reset();
  _item_properties_e6412a9a_js__WEBPACK_IMPORTED_MODULE_0__.a.reset();
}
const resetStoreOnHome = () => {
  if (_add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_1__.a.existingItem || _ui_ecf86bba_js__WEBPACK_IMPORTED_MODULE_2__.u.workflow === "register") {
    return;
  }
  _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_1__.d.reset();
  const folder = _item_properties_e6412a9a_js__WEBPACK_IMPORTED_MODULE_0__.i.folder;
  _item_properties_e6412a9a_js__WEBPACK_IMPORTED_MODULE_0__.a.reset();
  _item_properties_e6412a9a_js__WEBPACK_IMPORTED_MODULE_0__.i.folder = folder;
};




/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,