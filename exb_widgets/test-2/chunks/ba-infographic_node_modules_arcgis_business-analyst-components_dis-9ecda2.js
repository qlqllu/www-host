"use strict";
(self["webpackChunkexb_client"] = self["webpackChunkexb_client"] || []).push([["vendors-extensions_widgets_ba-infographic_node_modules_arcgis_business-analyst-components_dis-9ecda2"],{

/***/ "./extensions/widgets/ba-infographic/node_modules/@arcgis/business-analyst-components/dist/stencil-components/dist/esm/arcgis-ba-search-b60a78f9.js":
/*!**********************************************************************************************************************************************************!*\
  !*** ./extensions/widgets/ba-infographic/node_modules/@arcgis/business-analyst-components/dist/stencil-components/dist/esm/arcgis-ba-search-b60a78f9.js ***!
  \**********************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   A: () => (/* binding */ ArcgisBaSearch),
/* harmony export */   s: () => (/* binding */ s$C)
/* harmony export */ });
/* harmony import */ var _index_4e647411_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./index-4e647411.js */ "./extensions/widgets/ba-infographic/node_modules/@arcgis/business-analyst-components/dist/stencil-components/dist/esm/index-4e647411.js");
/* harmony import */ var _GEClient_f71049f8_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./GEClient-f71049f8.js */ "./extensions/widgets/ba-infographic/node_modules/@arcgis/business-analyst-components/dist/stencil-components/dist/esm/GEClient-f71049f8.js");
/* harmony import */ var _ElementIds_a2c40592_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ElementIds-a2c40592.js */ "./extensions/widgets/ba-infographic/node_modules/@arcgis/business-analyst-components/dist/stencil-components/dist/esm/ElementIds-a2c40592.js");
/* harmony import */ var _index_esm_1c65d8c7_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index.esm-1c65d8c7.js */ "./extensions/widgets/ba-infographic/node_modules/@arcgis/business-analyst-components/dist/stencil-components/dist/esm/index.esm-1c65d8c7.js");
/* harmony import */ var _base_util_b7db69f0_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./base-util-b7db69f0.js */ "./extensions/widgets/ba-infographic/node_modules/@arcgis/business-analyst-components/dist/stencil-components/dist/esm/base-util-b7db69f0.js");






/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
let e$E;function has(a){return "function"==typeof e$E[a]?e$E[a]=e$E[a](globalThis):e$E[a]}e$E=globalThis.dojoConfig?.has||globalThis.esriConfig?.has?{...globalThis.dojoConfig?.has,...globalThis.esriConfig?.has}:{},has.add=(a,o,d,r)=>((r||void 0===e$E[a])&&(e$E[a]=o),d&&has(a)),has.cache=e$E,has.add("esri-deprecation-warnings",!0),has.add("esri-force-fullscreen-debug",!1),(()=>{has.add("host-webworker",void 0!==globalThis.WorkerGlobalScope&&self instanceof globalThis.WorkerGlobalScope);const e="undefined"!=typeof window&&"undefined"!=typeof location&&"undefined"!=typeof document&&window.location===location&&window.document===document;if(has.add("host-browser",e),has.add("host-node","object"==typeof globalThis.process&&globalThis.process.versions?.node&&globalThis.process.versions.v8),has.add("dom",e),has("host-browser")){const e=navigator,a=e.userAgent,o=e.appVersion,d=parseFloat(o);if(has.add("wp",parseFloat(a.split("Windows Phone")[1])||void 0),has.add("msapp",parseFloat(a.split("MSAppHost/")[1])||void 0),has.add("khtml",o.includes("Konqueror")?d:void 0),has.add("edge",parseFloat(a.split("Edge/")[1])||void 0),has.add("opr",parseFloat(a.split("OPR/")[1])||void 0),has.add("webkit",!has("wp")&&!has("edge")&&parseFloat(a.split("WebKit/")[1])||void 0),has.add("chrome",!has("edge")&&!has("opr")&&parseFloat(a.split("Chrome/")[1])||void 0),has.add("android",!has("wp")&&parseFloat(a.split("Android ")[1])||void 0),has.add("safari",!o.includes("Safari")||has("wp")||has("chrome")||has("android")||has("edge")||has("opr")?void 0:parseFloat(o.split("Version/")[1])),has.add("mac",o.includes("Macintosh")),!has("wp")&&/(iPhone|iPod|iPad)/.test(a)){const e=RegExp.$1.replace(/P/,"p"),o=/OS ([\d_]+)/.test(a)?RegExp.$1:"1",d=parseFloat(o.replace(/_/,".").replaceAll("_",""));has.add(e,d),has.add("ios",d);}has("webkit")||(!a.includes("Gecko")||has("wp")||has("khtml")||has("edge")||has.add("mozilla",d),has("mozilla")&&has.add("ff",parseFloat(a.split("Firefox/")[1]||a.split("Minefield/")[1])||void 0));}})(),(()=>{if(globalThis.navigator){const e=navigator.userAgent,a=/Android|webOS|iPhone|iPad|iPod|BlackBerry|Opera Mini|IEMobile/i.test(e),o=/iPhone/i.test(e);a&&has.add("esri-mobile",a),o&&has.add("esri-iPhone",o),has.add("esri-geolocation",!!navigator.geolocation);}has.add("esri-wasm","WebAssembly"in globalThis),has.add("esri-shared-array-buffer",(()=>{const e="SharedArrayBuffer"in globalThis,a=!1===globalThis.crossOriginIsolated;return e&&!a})),has.add("wasm-simd",(()=>{const e=[0,97,115,109,1,0,0,0,1,5,1,96,0,1,123,3,2,1,0,10,10,1,8,0,65,0,253,15,253,98,11];return WebAssembly.validate(new Uint8Array(e))})),has.add("esri-atomics","Atomics"in globalThis),has.add("esri-workers","Worker"in globalThis),has.add("web-feat:cache","caches"in globalThis),has.add("esri-workers-arraybuffer-transfer",!has("safari")||Number(has("safari"))>=12),has.add("workers-pool-size",8),has.add("featurelayer-simplify-thresholds",[.5,.5,.5,.5]),has.add("featurelayer-simplify-payload-size-factors",[1,1,4]),has.add("featurelayer-animation-enabled",!0),has.add("featurelayer-snapshot-enabled",!0),has.add("featurelayer-snapshot-point-min-threshold",8e4),has.add("featurelayer-snapshot-point-max-threshold",4e5),has.add("featurelayer-snapshot-point-coverage",.1),has.add("featurelayer-advanced-symbols",!1),has.add("featurelayer-pbf",!0),has.add("featurelayer-pbf-statistics",!1),has.add("feature-layers-workers",!0),has.add("feature-polyline-generalization-factor",1),has.add("mapview-transitions-duration",200),has.add("mapview-srswitch-adjust-rotation-scale-threshold",24e6),has.add("mapserver-pbf-version-support",10.81),has.add("mapservice-popup-identify-max-tolerance",20),has.add("heatmap-allow-raster-fallback",!1),has.add("heatmap-force-raster",!1),has("host-webworker")||has("host-browser")&&(has.add("esri-csp-restrictions",(()=>{try{new Function;}catch{return !0}return !1})),has.add("esri-image-decode",(()=>{if("decode"in new Image){const e=new Image;return e.src='data:image/svg+xml;charset=UTF-8,<svg version="1.1" xmlns="http://www.w3.org/2000/svg"></svg>',void e.decode().then((()=>{has.add("esri-image-decode",!0,!0,!0);})).catch((()=>{has.add("esri-image-decode",!1,!0,!0);}))}return !1})),has.add("esri-url-encodes-apostrophe",(()=>{const e=window.document.createElement("a");return e.href="?'",e.href.includes("?%27")})));})();

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
function s$G(t,n,e){if(null==t&&null==n)return !0;if(null==t||null==n||t.length!==n.length)return !1;if(e){for(let r=0;r<t.length;r++)if(!e(t[r],n[r]))return !1}else for(let r=0;r<t.length;r++)if(t[r]!==n[r])return !1;return !0}class v$b{constructor(){this.last=0;}}const A$a=new v$b;function b$a(t,n,e,r){r=r||A$a;const o=Math.max(0,r.last-10);for(let u=o;u<e;++u)if(t[u]===n)return r.last=u,u;const l=Math.min(o,e);for(let u=0;u<l;++u)if(t[u]===n)return r.last=u,u;return -1}const I$7=new Set;function O$6(t,n,e=t.length,r=n.length,o,l){if(0===r||0===e)return e;I$7.clear();for(let f=0;f<r;++f)I$7.add(n[f]);o=o||A$a;const u=Math.max(0,o.last-10);for(let f=u;f<e;++f)if(I$7.has(t[f])&&(l&&l.push(t[f]),I$7.delete(t[f]),t[f]=t[e-1],--e,--f,0===I$7.size||0===e))return I$7.clear(),e;for(let f=0;f<u;++f)if(I$7.has(t[f])&&(l&&l.push(t[f]),I$7.delete(t[f]),t[f]=t[e-1],--e,--f,0===I$7.size||0===e))return I$7.clear(),e;return I$7.clear(),e}function L$7(t,n){const e=t.indexOf(n);return -1!==e?(t.splice(e,1),n):null}function R$6(t,n){return null!=t}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
function r$r(n){return "Int8Array"===n?.constructor?.name}function t$y(n){return "Uint8Array"===n?.constructor?.name}function u$y(n){return "Uint8ClampedArray"===n?.constructor?.name}function o$C(n){return "Int16Array"===n?.constructor?.name}function c$B(n){return "Uint16Array"===n?.constructor?.name}function e$D(n){return "Int32Array"===n?.constructor?.name}function a$w(n){return "Uint32Array"===n?.constructor?.name}function i$z(n){return "Float32Array"===n?.constructor?.name}function f$w(n){return "Float64Array"===n?.constructor?.name}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
function l$t(t,n){let e;if(n)for(e in t)t.hasOwnProperty(e)&&(void 0===t[e]?delete t[e]:t[e]instanceof Object&&l$t(t[e],!0));else for(e in t)t.hasOwnProperty(e)&&void 0===t[e]&&delete t[e];return t}function a$v(t){if(!t||"object"!=typeof t||"function"==typeof t)return t;const n=O$5(t);if(null!=n)return n;if(y$j(t))return t.clone();if(m$n(t))return t.map(a$v);if(b$9(t))return t.clone();const e={};for(const r of Object.getOwnPropertyNames(t))e[r]=a$v(t[r]);return e}function y$j(t){return "function"==typeof t.clone}function m$n(t){return "function"==typeof t.map&&"function"==typeof t.forEach}function b$9(t){return "function"==typeof t.notifyChange&&"function"==typeof t.watch}function g$i(t){if("[object Object]"!==Object.prototype.toString.call(t))return !1;const n=Object.getPrototypeOf(t);return null===n||n===Object.prototype}function O$5(t){if(r$r(t)||t$y(t)||u$y(t)||o$C(t)||c$B(t)||e$D(t)||a$w(t)||i$z(t)||f$w(t))return t.slice();if(t instanceof Date)return new Date(t.getTime());if(t instanceof ArrayBuffer){return t.slice(0,t.byteLength)}if(t instanceof Map){const n=new Map;for(const[e,r]of t)n.set(e,a$v(r));return n}if(t instanceof Set){const n=new Set;for(const e of t)n.add(a$v(e));return n}return null}function j$d(t,n){return t===n||"number"==typeof t&&isNaN(t)&&"number"==typeof n&&isNaN(n)||"function"==typeof(t||{}).getTime&&"function"==typeof(n||{}).getTime&&t.getTime()===n.getTime()||!1}function h$m(n,e){return n===e||(null==n||"string"==typeof n?n===e:"number"==typeof n?n===e||"number"==typeof e&&isNaN(n)&&isNaN(e):n instanceof Date?e instanceof Date&&n.getTime()===e.getTime():Array.isArray(n)?Array.isArray(e)&&s$G(n,e):n instanceof Set?e instanceof Set&&N$3(n,e):n instanceof Map?e instanceof Map&&T$5(n,e):!!g$i(n)&&(g$i(e)&&w$9(n,e)))}function w$9(t,n){if(null===t||null===n)return !1;const e=Object.keys(t);if(null===n||Object.keys(n).length!==e.length)return !1;for(const r of e)if(t[r]!==n[r]||!Object.prototype.hasOwnProperty.call(n,r))return !1;return !0}function N$3(t,n){if(t.size!==n.size)return !1;for(const e of t)if(!n.has(e))return !1;return !0}function T$5(t,n){if(t.size!==n.size)return !1;for(const[e,r]of t){const t=n.get(e);if(t!==r||void 0===t&&!n.has(e))return !1}return !0}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
function n$u(r,n,t=!1){return i$y(r,n,t)}function t$x(r,n){if(null!=n)return n[r]||e$C(r.split("."),!1,n)}function o$B(r,n,t){const o=r.split("."),i=o.pop(),u=e$C(o,!0,t);u&&i&&(u[i]=n);}function e$C(r,n,t){let o=t;for(const e of r){if(null==o)return;if(!(e in o)){if(!n)return;o[e]={};}o=o[e];}return o}function i$y(n,t,o){return t?Object.keys(t).reduce(((n,e)=>{let u=n[e],c=t[e];return u===c?n:void 0===u?(n[e]=a$v(c),n):(Array.isArray(c)||Array.isArray(n)?(u=u?Array.isArray(u)?n[e]=u.concat():n[e]=[u]:n[e]=[],c&&(Array.isArray(c)||(c=[c]),o?c.forEach((r=>{u.includes(r)||u.push(r);})):n[e]=c.concat())):c&&"object"==typeof c?n[e]=i$y(u,c,o):n.hasOwnProperty(e)&&!t.hasOwnProperty(e)||(n[e]=c),n)}),n||{}):n}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
const s$F={analysisTheme:{accentColor:[255,127,0],textColor:"white"},apiKey:void 0,applicationName:"",applicationUrl:globalThis.location?.href,assetsPath:"",fontsUrl:"https://static.arcgis.com/fonts",geometryServiceUrl:"https://utility.arcgisonline.com/arcgis/rest/services/Geometry/GeometryServer",geoRSSServiceUrl:"https://utility.arcgis.com/sharing/rss",kmlServiceUrl:"https://utility.arcgis.com/sharing/kml",userPrivilegesApplied:!1,portalUrl:"https://www.arcgis.com",routeServiceUrl:"https://route-api.arcgis.com/arcgis/rest/services/World/Route/NAServer/Route_World",workers:{loaderConfig:{has:{},paths:{},map:{},packages:[]}},request:{crossOriginNoCorsDomains:null,httpsDomains:["arcgis.com","arcgisonline.com","esrikr.com","premiumservices.blackbridge.com","esripremium.accuweather.com","gbm.digitalglobe.com","firstlook.digitalglobe.com","msi.digitalglobe.com"],interceptors:[],maxUrlLength:2e3,priority:"high",proxyRules:[],proxyUrl:null,timeout:6e4,trustedServers:[],useIdentity:!0},log:{interceptors:[],level:null}};if(globalThis.esriConfig&&(n$u(s$F,globalThis.esriConfig,!0),delete s$F.has),!s$F.assetsPath){{const e="4.27";s$F.assetsPath=`https://js.arcgis.com/${e}/@arcgis/core/assets`;}s$F.defaultAssetsPath=s$F.assetsPath;}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
const e$B=/\{([^\}]+)\}/g;function n$t(t){return t??""}function r$q(r,o){return r.replaceAll(e$B,"object"==typeof o?(e,r)=>n$t(t$x(r,o)):(t,e)=>n$t(o(e)))}function c$A(t){let e=0;for(let n=0;n<t.length;n++)e=(e<<5)-e+t.charCodeAt(n),e|=0;return e}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
const r$p={info:0,warn:1,error:2,none:3};class s$E{constructor(e){this.level=null,this._module="",this._parent=null,this.writer=null,this._loggedMessages={error:new Map,warn:new Map,info:new Map},null!=e.level&&(this.level=e.level),null!=e.writer&&(this.writer=e.writer),this._module=e.module,s$E._loggers.set(this.module,this);const t=this.module.lastIndexOf(".");-1!==t&&(this._parent=s$E.getLogger(this.module.slice(0,t)));}get module(){return this._module}get parent(){return this._parent}error(...e){this._log("error","always",...e);}warn(...e){this._log("warn","always",...e);}info(...e){this._log("info","always",...e);}errorOnce(...e){this._log("error","once",...e);}warnOnce(...e){this._log("warn","once",...e);}infoOnce(...e){this._log("info","once",...e);}errorOncePerTick(...e){this._log("error","oncePerTick",...e);}warnOncePerTick(...e){this._log("warn","oncePerTick",...e);}infoOncePerTick(...e){this._log("info","oncePerTick",...e);}get test(){const e=this;return {loggedMessages:e._loggedMessages,clearLoggedWarnings:()=>e._loggedMessages.warn.clear()}}static get test(){return {resetLoggers(e=new Map){const t=s$E._loggers;return s$E._loggers=e,t},set throttlingDisabled(e){s$E._throttlingDisabled=e;}}}static getLogger(e){return e="string"!=typeof e?e.declaredClass:e,s$E._loggers.get(e)||new s$E({module:e})}_log(t,r,...n){if(!this._matchLevel(t))return;if("always"!==r&&!s$E._throttlingDisabled){const e=this._argsToKey(n),o=this._loggedMessages[t].get(e);if("once"===r&&null!=o||"oncePerTick"===r&&o&&o>=s$E._tickCounter)return;this._loggedMessages[t].set(e,s$E._tickCounter),s$E._scheduleTickCounterIncrement();}for(const s of s$F.log.interceptors)if(s(t,this.module,...n))return;this._inheritedWriter()(t,this.module,...n);}_parentWithMember(e,t){let r=this;for(;null!=r;){const t=r[e];if(null!=t)return t;r=r.parent;}return t}_inheritedWriter(){return this._parentWithMember("writer",this._consoleWriter)}_consoleWriter(e,t,...r){console[e](`[${t}]`,...r);}_matchLevel(t){const s=s$F.log.level||"warn";return r$p[this._parentWithMember("level",s)]<=r$p[t]}_argsToKey(...e){const r=(e,t)=>"object"!=typeof t||Array.isArray(t)?t:"[Object]";return c$A(JSON.stringify(e,r))}static _scheduleTickCounterIncrement(){s$E._tickCounterScheduled||(s$E._tickCounterScheduled=!0,Promise.resolve().then((()=>{s$E._tickCounter++,s$E._tickCounterScheduled=!1;})));}}s$E._loggers=new Map,s$E._tickCounter=0,s$E._tickCounterScheduled=!1,s$E._throttlingDisabled=!1;

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
function s$D(s,e){return s.replaceAll(/\$\{([^\s\:\}]*)(?:\:([^\s\:\}]+))?\}/g,((s,r)=>{if(""===r)return "$";const n=t$x(r,e);return (n??"").toString()}))}class e$A{constructor(t,e,r){this.name=t,this.details=r,this.message=(e&&s$D(e,r))??"";}toString(){return "["+this.name+"]: "+this.message}}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
class s$C extends e$A{constructor(e,t,r){super(e,t,r);}toJSON(){if(null!=this.details)try{return {name:this.name,message:this.message,details:JSON.parse(JSON.stringify(this.details,((t,r)=>{if(r&&"object"==typeof r&&"function"==typeof r.toJSON)return r;try{return a$v(r)}catch(s){return "[object]"}})))}}catch(r){throw s$E.getLogger("esri.core.Error").error(r),r}return {name:this.name,message:this.message,details:this.details}}static fromJSON(e){return new s$C(e.name,e.message,e.details)}}s$C.prototype.type="error";

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
function l$s(n){return n?.destroy(),null}function o$A(n){return n?.remove(),null}function i$x(n){return null}function p$m(n){return n}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
function t$w(e){return /\/(sharing|usrsvcs)\/(appservices|servers)\//i.test(e)}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
const u$x=s$E.getLogger("esri.core.urlUtils"),l$r=s$F.request,c$z="esri/config: esriConfig.request.proxyUrl is not set.",f$v=/^\s*[a-z][a-z0-9-+.]*:(?![0-9])/i,a$u=/^\s*http:/i,p$l=/^\s*https:/i,h$l=/^\s*file:/i,m$m=/:\d+$/,d$q=/^https?:\/\/[^/]+\.arcgis.com\/sharing(\/|$)/i,g$h=new RegExp("^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?$"),y$i=new RegExp("^((([^\\[:]+):)?([^@]+)@)?(\\[([^\\]]+)\\]|([^\\[:]*))(:([0-9]+))?$");class $$4{constructor(t=""){this.uri=t,this.scheme=null,this.authority=null,this.path=null,this.query=null,this.fragment=null,this.user=null,this.password=null,this.host=null,this.port=null;let n=p$m(this.uri.match(g$h));this.scheme=n[2]||(n[1]?"":null),this.authority=n[4]||(n[3]?"":null),this.path=n[5],this.query=n[7]||(n[6]?"":null),this.fragment=n[9]||(n[8]?"":null),null!=this.authority&&(n=p$m(this.authority.match(y$i)),this.user=n[3]||null,this.password=n[4]||null,this.host=n[6]||n[7],this.port=n[9]||null);}toString(){return this.uri}}const x$c={},w$8=new $$4(s$F.applicationUrl);let O$4=w$8;const U$3=q$6();let C$7=U$3;const R$5=()=>O$4;function q$6(){const t=p$m(O$4.path),n=t.substring(0,t.lastIndexOf(t.split("/")[t.split("/").length-1]));return `${`${O$4.scheme}://${O$4.host}${null!=O$4.port?`:${O$4.port}`:""}`}${n}`}function L$6(t){if(!t)return null;const n={path:null,query:null},e=new $$4(t),r=t.indexOf("?");return null===e.query?n.path=t:(n.path=t.substring(0,r),n.query=I$6(e.query)),e.fragment&&(n.hash=e.fragment,null===e.query&&(n.path=n.path.substring(0,n.path.length-(e.fragment.length+1)))),n}function I$6(t){const n=t.split("&"),e={};for(const r of n){if(!r)continue;const t=r.indexOf("=");let n,o;t<0?(n=decodeURIComponent(r),o=""):(n=decodeURIComponent(r.slice(0,t)),o=decodeURIComponent(r.slice(t+1)));let i=e[n];"string"==typeof i&&(i=e[n]=[i]),Array.isArray(i)?i.push(o):e[n]=o;}return e}function A$9(t){return t&&"object"==typeof t&&"toJSON"in t&&"function"==typeof t.toJSON}function v$a(t,n){return t?n&&"function"==typeof n?Object.keys(t).map((e=>encodeURIComponent(e)+"="+encodeURIComponent(n(e,t[e])))).join("&"):Object.keys(t).map((e=>{const r=t[e];if(null==r)return "";const o=encodeURIComponent(e)+"=",i=n&&n[e];return i?o+encodeURIComponent(i(r)):Array.isArray(r)?r.map((t=>A$9(t)?o+encodeURIComponent(JSON.stringify(t)):o+encodeURIComponent(t))).join("&"):A$9(r)?o+encodeURIComponent(JSON.stringify(r)):o+encodeURIComponent(r)})).filter((t=>t)).join("&"):""}function P$4(t=!1){let n,r=l$r.proxyUrl;if("string"==typeof t){n=ht(t);const e=J$2(t);e&&(r=e.proxyUrl);}else n=!!t;if(!r)throw u$x.warn(c$z),new s$C("urlutils:proxy-not-set",c$z);n&&xt()&&(r=yt(r));return L$6(r)}const k$a={path:"",query:""};function E$8(t){const n=t.indexOf("?");return -1!==n?(k$a.path=t.slice(0,n),k$a.query=t.slice(n+1)):(k$a.path=t,k$a.query=null),k$a}function B$6(t){return t=(t=wt(t=Rt(t=E$8(t).path),!0)).toLowerCase()}function H$3(t){const n={proxyUrl:t.proxyUrl,urlPrefix:B$6(t.urlPrefix)},e=l$r.proxyRules,r=n.urlPrefix;let o=e.length;for(let i=0;i<e.length;i++){const t=e[i].urlPrefix;if(0===r.indexOf(t)){if(r.length===t.length)return -1;o=i;break}0===t.indexOf(r)&&(o=i+1);}return e.splice(o,0,n),o}function J$2(t){const n=l$r.proxyRules,e=B$6(t);for(let r=0;r<n.length;r++)if(0===e.indexOf(n[r].urlPrefix))return n[r]}function D$8(t){const n=n=>null==n||n instanceof RegExp&&n.test(t)||"string"==typeof n&&t.startsWith(n),e=l$r.interceptors;if(e)for(const r of e)if(Array.isArray(r.urls)){if(r.urls.some(n))return r}else if(n(r.urls))return r;return null}function F$4(t,n,e=!1){if(!t||!n)return !1;const r=At(t),o=At(n);return !(!e&&r.scheme!==o.scheme)&&(null!=r.host&&null!=o.host&&(r.host.toLowerCase()===o.host.toLowerCase()&&r.port===o.port))}function M$8(t){if("string"==typeof t){if(!Y$2(t))return !0;t=At(t);}if(F$4(t,O$4))return !0;const n=l$r.trustedServers||[];for(let e=0;e<n.length;e++){const r=Q$3(n[e]);for(let n=0;n<r.length;n++)if(F$4(t,r[n]))return !0}return !1}function Q$3(t){return x$c[t]||(pt(t)||at(t)?x$c[t]=[new $$4(_$d(t))]:x$c[t]=[new $$4(`http://${t}`),new $$4(`https://${t}`)]),x$c[t]}function _$d(t,n=C$7,e){return at(t)?e&&e.preserveProtocolRelative?t:"http"===O$4.scheme&&O$4.authority===X$2(t).slice(2)?`http:${t}`:`https:${t}`:pt(t)?t:p$m(V$2("/"===t[0]?Ot(n):n,t))}function K$2(t){return t=Lt(t=jt(t=qt(t=_$d(t=t.trim()))))}function V$2(...t){const e=t.filter(R$6);if(!e||!e.length)return;const r=[];if(Y$2(e[0])){const t=e[0],n=t.indexOf("//");-1!==n&&(r.push(t.slice(0,n+1)),dt(e[0])&&(r[0]+="/"),e[0]=t.slice(n+2));}else "/"===e[0][0]&&r.push("");const o=e.reduce(((t,n)=>n?t.concat(n.split("/")):t),[]);for(let n=0;n<o.length;n++){const t=o[n];".."===t&&r.length>0&&".."!==r[r.length-1]?r.pop():(!t&&n===o.length-1||t&&("."!==t||0===r.length))&&r.push(t);}return r.join("/")}function X$2(t,n=!1){if(null==t||Z$3(t)||tt(t))return null;let e=t.indexOf("://");if(-1===e&&at(t))e=2;else {if(-1===e)return null;e+=3;}const r=t.indexOf("/",e);return -1!==r&&(t=t.slice(0,r)),n&&(t=wt(t,!0)),t}function Y$2(t){return at(t)||pt(t)}function Z$3(t){return null!=t&&"blob:"===t.slice(0,5)}function tt(t){return null!=t&&"data:"===t.slice(0,5)}function et(t){return btoa(String.fromCharCode.apply(null,t)).replaceAll("+","-").replaceAll("/","_").replace(/=+$/,"")}function at(t){return null!=t&&"/"===t[0]&&"/"===t[1]}function pt(t){return null!=t&&f$v.test(t)}function ht(t){return null!=t&&p$l.test(t)||"https"===O$4.scheme&&at(t)}function mt(t){return null!=t&&a$u.test(t)||"http"===O$4.scheme&&at(t)}function dt(t){return null!=t&&h$l.test(t)}function yt(t){return at(t)?`https:${t}`:t.replace(a$u,"https:")}function $t(){return "http"===O$4.scheme}function xt(){return "https"===O$4.scheme}function wt(t,n=!1){return at(t)?t.slice(2):(t=t.replace(f$v,""),n&&t.length>1&&"/"===t[0]&&"/"===t[1]&&(t=t.slice(2)),t)}function Ot(t){const n=t.indexOf("//"),e=t.indexOf("/",n+2);return -1===e?t:t.slice(0,e)}function Rt(t){return t&&"/"===t[t.length-1]?t:`${t}/`}function qt(t){if(/^https?:\/\//i.test(t)){const n=E$8(t);t=(t=n.path.replaceAll(/\/{2,}/g,"/")).replace("/","//"),n.query&&(t+=`?${n.query}`);}return t}function jt(t){return t.replace(/^(https?:\/\/)(arcgis\.com)/i,"$1www.$2")}function Lt(t){const n=l$r.httpsDomains;if(!mt(t))return t;const e=t.indexOf("/",7);let r;if(r=-1===e?t:t.slice(0,e),r=r.toLowerCase().slice(7),m$m.test(r)){if(!r.endsWith(":80"))return t;r=r.slice(0,-3),t=t.replace(":80","");}return $t()&&r===O$4.authority&&!d$q.test(t)||(xt()&&r===O$4.authority||n&&n.some((t=>r===t||r.endsWith(`.${t}`)))||xt()&&!J$2(t))&&(t=yt(t)),t}function At(t){return "string"==typeof t?new $$4(_$d(t)):(t.scheme||(t.scheme=O$4.scheme),t)}function St(t,n,e){const r=L$6(t),o=r.query||{};return o[n]=String(e),`${r.path}?${v$a(o)}`}function kt(t,n){const e=L$6(t),r=e.query||{};for(const i in n)r[i]=n[i];const o=v$a(r);return o?`${e.path}?${o}`:e.path}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
let n$s;function o$z(t){n$s=t;}has("host-webworker");

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
function e$z(e){return {setTimeout:(t,o)=>{const r=e.setTimeout(t,o);return {remove:()=>e.clearTimeout(r)}}}}const t$v=e$z(globalThis);

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
function e$y(e){return e&&("function"==typeof e.on||"function"==typeof e.addEventListener)}function r$o(r,t,n){if(!e$y(r))throw new TypeError("target is not a Evented or EventTarget object");if("on"in r)return r.on(t,n);if(Array.isArray(t)){const e=t.slice();for(const t of e)r.addEventListener(t,n);return {remove(){for(const t of e)r.removeEventListener(t,n);}}}return r.addEventListener(t,n),{remove(){r.removeEventListener(t,n);}}}function t$u(t,n,o){if(!e$y(t))throw new TypeError("target is not a Evented or EventTarget object");if("once"in t)return t.once(n,o);const i=r$o(t,n,(e=>{i.remove(),o.call(t,e);}));return {remove(){i.remove();}}}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
function c$y(t="Aborted"){return new s$C("AbortError",t)}function l$q(t){return null!=t?"aborted"in t?t:t.signal:t}function a$t(t){const r=l$q(t);return null!=r&&r.aborted}function m$l(t){if(!d$p(t))throw t}function w$7(t,r){const e=l$q(t);if(null!=e){if(!e.aborted)return t$u(e,"abort",(()=>r()));r();}}function d$p(t){return "AbortError"===t?.name}async function j$c(t){if(!t)return;if("function"!=typeof t.forEach){const r=Object.keys(t),n=r.map((r=>t[r])),e=await j$c(n),o={};return r.map(((t,r)=>o[t]=e[r])),o}const r=t;return Promise.allSettled(r).then((t=>Array.from(r,((r,n)=>{const e=t[n];return "fulfilled"===e.status?{promise:r,value:e.value}:{promise:r,error:e.reason}}))))}function g$g(t,r=void 0,n){const e=new AbortController;return w$7(n,(()=>e.abort())),new Promise(((n,o)=>{let i=setTimeout((()=>{i=0,n(r);}),t);w$7(e,(()=>{i&&(clearTimeout(i),o(c$y()));}));}))}function T$4(t){return t&&"function"==typeof t.then}function E$7(t){return T$4(t)?t:Promise.resolve(t)}function k$9(t,r=-1){let n,e,o,u,s=null;const l=(...a)=>{if(n){e=a,u&&u.reject(c$y()),u=C$6();const t=p$m(u.promise);if(s){const t=s;s=null,t.abort();}return t}if(o=u||C$6(),u=null,r>0){const e=new AbortController;n=E$7(t(...a,e.signal));const o=n;g$g(r).then((()=>{n===o&&(u?e.abort():s=e);}));}else n=1,n=E$7(t(...a));const f=()=>{const t=e;e=o=n=s=null,null!=t&&l(...t);},m=n,w=o;return m.then(f,f),m.then(w.resolve,w.reject),p$m(w.promise)};return l}function C$6(){let r,n;const e=new Promise(((t,e)=>{r=t,n=e;})),o=t=>{r(t);};return o.resolve=t=>r(t),o.reject=t=>n(t),o.timeout=(r,n)=>t$v.setTimeout((()=>o.reject(n)),r),o.promise=e,o}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
const t$t=["elevation3d.arcgis.com","js.arcgis.com","jsdev.arcgis.com","jsqa.arcgis.com","static.arcgis.com"];function r$n(c){const r=X$2(c,!0);return !!r&&(r.endsWith(".arcgis.com")&&!t$t.includes(r)&&!c.endsWith("/sharing/rest/generateToken"))}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
function i$w(e,o,t=!1,n){return new Promise(((s,i)=>{if(a$t(n))return void i(c$x());let a=()=>{l(),i(new Error(`Unable to load ${o}`));},u=()=>{const r=e;l(),s(r);},m=()=>{if(!e)return;const r=e;l(),r.src="",i(c$x());};const l=()=>{has("esri-image-decode")||(e.removeEventListener("error",a),e.removeEventListener("load",u)),a=null,u=null,e=null,null!=n&&n.removeEventListener("abort",m),m=null,t&&URL.revokeObjectURL(o);};null!=n&&n.addEventListener("abort",m),has("esri-image-decode")?e.decode().then(u,a):(e.addEventListener("error",a),e.addEventListener("load",u));}))}function c$x(){try{return new DOMException("Aborted","AbortError")}catch{const e=new Error;return e.name="AbortError",e}}const a$s="Timeout exceeded";function u$w(){return new Error(a$s)}function l$p(r){s$F.request.crossOriginNoCorsDomains||(s$F.request.crossOriginNoCorsDomains={});const t=s$F.request.crossOriginNoCorsDomains;for(let e of r)e=e.toLowerCase(),/^https?:\/\//.test(e)?t[X$2(e)??""]=0:(t[X$2("http://"+e)??""]=0,t[X$2("https://"+e)??""]=0);}function d$o(r){const s=s$F.request.crossOriginNoCorsDomains;if(s){let e=X$2(r);if(e)return e=e.toLowerCase(),!F$4(e,R$5())&&s[e]<Date.now()-36e5}return !1}async function f$u(r){const t=s$F.request.crossOriginNoCorsDomains,n=X$2(r);t&&n&&(t[n.toLowerCase()]=Date.now());const i=L$6(r);r=i.path,"json"===i.query?.f&&(r+="?f=json");try{await fetch(r,{mode:"no-cors",credentials:"include"});}catch{}}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
async function j$b(e,t){e instanceof URL&&(e=e.toString()),t?.query instanceof URLSearchParams&&(t.query=I$6(t.query.toString().replaceAll("+"," ")));const r=tt(e),s=Z$3(e);s||r||(e=K$2(e));const a={url:e,requestOptions:{...t}};let n=D$8(e);if(n){const e=await J$1(n,a);if(null!=e)return {data:e,getHeader:R$4,httpStatus:200,requestOptions:a.requestOptions,url:a.url};n.after||n.error||(n=null);}if(e=a.url,"image"===(t=a.requestOptions).responseType&&(has("host-webworker")||has("host-node")))throw B$5("request:invalid-parameters",new Error("responseType 'image' is not supported in Web Workers or Node environment"),a);if("head"===t.method){if(t.body)throw B$5("request:invalid-parameters",new Error("body parameter cannot be set when method is 'head'"),a);if(r||s)throw B$5("request:invalid-parameters",new Error("data and blob URLs are not supported for method 'head'"),a)}if(await $$3(),P$3)return P$3.execute(e,t);const i=new AbortController;w$7(t,(()=>i.abort()));const h={controller:i,credential:void 0,credentialToken:void 0,fetchOptions:void 0,hasToken:!1,interceptor:n,params:a,redoRequest:!1,useIdentity:D$7.useIdentity,useProxy:!1,useSSL:!1,withCredentials:!1},m=await V$1(h);return n?.after?.(m),m}let P$3;const D$7=s$F.request,_$c="FormData"in globalThis,A$8=[499,498,403,401],F$3=["COM_0056","COM_0057","SB_0008"],I$5=[/\/arcgis\/tokens/i,/\/sharing(\/rest)?\/generatetoken/i,/\/rest\/info/i],R$4=()=>null,M$7=Symbol();function H$2(e){const t=X$2(e);t&&!j$b._corsServers.includes(t)&&j$b._corsServers.push(t);}function N$2(e){const t=X$2(e);return !t||t.endsWith(".arcgis.com")||j$b._corsServers.includes(t)||M$8(t)}function B$5(e,t,o,i){let l="Error";const u={url:o.url,requestOptions:o.requestOptions,getHeader:R$4,ssl:!1};if(t instanceof s$C)return t.details?(t.details=a$v(t.details),t.details.url=o.url,t.details.requestOptions=o.requestOptions):t.details=u,t;if(t){const e=i&&(e=>i.headers.get(e)),r=i?.status,s=t.message;s&&(l=s),e&&(u.getHeader=e),u.httpStatus=(null!=t.httpCode?t.httpCode:t.code)||r||0,u.subCode=t.subcode,u.messageCode=t.messageCode,"string"==typeof t.details?u.messages=[t.details]:u.messages=t.details,u.raw=M$7 in t?t[M$7]:t;}return d$p(t)?c$y():new s$C(e,l,u)}async function $$3(){has("host-webworker")?P$3||(P$3=await __webpack_require__.e(/*! import() */ "extensions_widgets_ba-infographic_node_modules_arcgis_business-analyst-components_dist_stenci-61a37e").then(__webpack_require__.bind(__webpack_require__, /*! ./request-c15b72b2.js */ "./extensions/widgets/ba-infographic/node_modules/@arcgis/business-analyst-components/dist/stencil-components/dist/esm/request-c15b72b2.js"))):j$b._abortableFetch||(j$b._abortableFetch=globalThis.fetch.bind(globalThis));}async function z$6(){n$s||await Promise.resolve().then(function () { return IdentityManager; });}async function K$1(r){const s=r.params.url,o=r.params.requestOptions,a=r.controller.signal,n=o.body;let l=null,u=null;if(_$c&&"HTMLFormElement"in globalThis&&(n instanceof FormData?l=n:n instanceof HTMLFormElement&&(l=new FormData(n))),"string"==typeof n&&(u=n),r.fetchOptions={cache:o.cacheBust&&!("polyfill"in j$b._abortableFetch)?"no-cache":"default",credentials:"same-origin",headers:o.headers||{},method:"head"===o.method?"HEAD":"GET",mode:"cors",priority:D$7.priority,redirect:"follow",signal:a},(l||u)&&(r.fetchOptions.body=l||u),"anonymous"===o.authMode&&(r.useIdentity=!1),r.hasToken=!!(/token=/i.test(s)||o.query?.token||l?.get("token")),!r.hasToken&&s$F.apiKey&&r$n(s)&&(o.query||(o.query={}),o.query.token=s$F.apiKey,r.hasToken=!0),r.useIdentity&&!r.hasToken&&!r.credentialToken&&!W$1(s)&&!a$t(a)){let e;"immediate"===o.authMode?(await z$6(),e=await n$s.getCredential(s,{signal:a}),r.credential=e):"no-prompt"===o.authMode?(await z$6(),e=await n$s.getCredential(s,{prompt:!1,signal:a}).catch((()=>{})),r.credential=e):n$s&&(e=n$s.findCredential(s)),e&&(r.credentialToken=e.token,r.useSSL=!!e.ssl);}}function W$1(e){return I$5.some((t=>t.test(e)))}async function G$2(e){let r=e.params.url;const s=e.params.requestOptions,o=e.fetchOptions??{},a=Z$3(r)||tt(r),i=s.responseType||"json",l=a?0:null!=s.timeout?s.timeout:D$7.timeout;let d=!1;if(!a){e.useSSL&&(r=yt(r)),s.cacheBust&&"default"===o.cache&&(r=St(r,"request.preventCache",Date.now()));let a={...s.query};e.credentialToken&&(a.token=e.credentialToken);let n=v$a(a);has("esri-url-encodes-apostrophe")&&(n=n.replaceAll("'","%27"));const i=r.length+1+n.length;let l;d="delete"===s.method||"post"===s.method||"put"===s.method||!!s.body||i>D$7.maxUrlLength;const u=s.useProxy||!!J$2(r);if(u){const e=P$4(r);l=e.path,!d&&l.length+1+i>D$7.maxUrlLength&&(d=!0),e.query&&(a={...e.query,...a});}if("HEAD"===o.method&&(d||u)){if(d){if(i>D$7.maxUrlLength)throw B$5("request:invalid-parameters",new Error("URL exceeds maximum length"),e.params);throw B$5("request:invalid-parameters",new Error("cannot use POST request when method is 'head'"),e.params)}if(u)throw B$5("request:invalid-parameters",new Error("cannot use proxy when method is 'head'"),e.params)}if(d?(o.method="delete"===s.method?"DELETE":"put"===s.method?"PUT":"POST",s.body?r=kt(r,a):(o.body=v$a(a),o.headers||(o.headers={}),o.headers["Content-Type"]="application/x-www-form-urlencoded")):r=kt(r,a),u&&(e.useProxy=!0,r=`${l}?${r}`),a.token&&_$c&&o.body instanceof FormData&&!t$w(r)&&o.body.set("token",a.token),s.hasOwnProperty("withCredentials"))e.withCredentials=s.withCredentials;else if(!F$4(r,R$5()))if(M$8(r))e.withCredentials=!0;else if(n$s){const s=n$s.findServerInfo(r);s?.webTierAuth&&(e.withCredentials=!0);}e.withCredentials&&(o.credentials="include",d$o(r)&&await f$u(d?kt(r,a):r));}let p,C,v=0,U=!1;l>0&&(v=setTimeout((()=>{U=!0,e.controller.abort();}),l));try{if("native-request-init"===s.responseType)C=o,C.url=r;else if("image"!==s.responseType||"default"!==o.cache||"GET"!==o.method||d||X$1(s.headers)||!a&&!e.useProxy&&D$7.proxyUrl&&!N$2(r)){if(p=await j$b._abortableFetch(r,o),e.useProxy||H$2(r),"native"===s.responseType)C=p;else if("HEAD"!==o.method)if(p.ok){switch(i){case"array-buffer":C=await p.arrayBuffer();break;case"blob":case"image":C=await p.blob();break;default:C=await p.text();}if(v&&(clearTimeout(v),v=0),"json"===i||"xml"===i||"document"===i)if(C)switch(i){case"json":C=JSON.parse(C);break;case"xml":C=Q$2(C,"application/xml");break;case"document":C=Q$2(C,"text/html");}else C=null;if(C){if("array-buffer"===i||"blob"===i){const e=p.headers.get("Content-Type");if(e&&/application\/json|text\/plain/i.test(e)&&C["blob"===i?"size":"byteLength"]<=750)try{const e=await new Response(C).json();e.error&&(C=e);}catch{}}"image"===i&&C instanceof Blob&&(C=await Z$2(URL.createObjectURL(C),e,!0));}}else {C=await p.text();try{C=JSON.parse(C);}catch{}}}else C=await Z$2(r,e);}catch(P){if("AbortError"===P.name){if(U)throw u$w();throw c$y("Request canceled")}if(!(!p&&P instanceof TypeError&&D$7.proxyUrl)||s.body||"delete"===s.method||"head"===s.method||"post"===s.method||"put"===s.method||e.useProxy||N$2(r))throw P;e.redoRequest=!0,H$3({proxyUrl:D$7.proxyUrl,urlPrefix:X$2(r)??""});}finally{v&&clearTimeout(v);}return [p,C]}async function J$1(e,t){if(null!=e.responseData)return e.responseData;if(e.headers&&(t.requestOptions.headers={...t.requestOptions.headers,...e.headers}),e.query&&(t.requestOptions.query={...t.requestOptions.query,...e.query}),e.before){let o,a;try{a=await e.before(t);}catch(s){o=B$5("request:interceptor",s,t);}if((a instanceof Error||a instanceof s$C)&&(o=B$5("request:interceptor",a,t)),o)throw e.error&&e.error(o),o;return a}}function X$1(e){if(e)for(const t of Object.getOwnPropertyNames(e))if(e[t])return !0;return !1}function Q$2(e,t){let r;try{r=(new DOMParser).parseFromString(e,t);}catch{}if(!r||r.getElementsByTagName("parsererror").length)throw new SyntaxError("XML Parse error");return r}async function V$1(e){let r,s;await K$1(e);try{do{[r,s]=await G$2(e);}while(!await Y$1(e,r,s))}catch(n){const t=B$5("request:server",n,e.params,r);throw t.details.ssl=e.useSSL,e.interceptor?.error&&e.interceptor.error(t),t}const o=e.params.url;if(s&&/\/sharing\/rest\/(accounts|portals)\/self/i.test(o)){if(!e.hasToken&&!e.credentialToken&&s.user?.username&&!M$8(o)){const e=X$2(o,!0);e&&D$7.trustedServers.push(e);}Array.isArray(s.authorizedCrossOriginNoCorsDomains)&&l$p(s.authorizedCrossOriginNoCorsDomains);}const a=e.credential;if(a&&n$s){const e=n$s.findServerInfo(a.server);let r=e?.owningSystemUrl;if(r){r=r.replace(/\/?$/,"/sharing");const e=n$s.findCredential(r,a.userId);e&&-1===n$s._getIdenticalSvcIdx(r,e)&&e.resources.unshift(r);}}return {data:s,getHeader:r?e=>r?.headers.get(e):R$4,httpStatus:r?.status??200,requestOptions:e.params.requestOptions,ssl:e.useSSL,url:e.params.url}}async function Y$1(e,r,s){if(e.redoRequest)return e.redoRequest=!1,!1;const o=e.params.requestOptions;if(!r||"native"===o.responseType||"native-request-init"===o.responseType)return !0;let a,n;if(s&&(s.error?a=s.error:"error"===s.status&&Array.isArray(s.messages)&&(a={...s},a[M$7]=s,a.details=s.messages)),!a&&!r.ok)throw a=new Error(`Unable to load ${r.url} status: ${r.status}`),a[M$7]=s,a;let i,l=null;a&&(n=Number(a.code),l=a.hasOwnProperty("subcode")?Number(a.subcode):null,i=a.messageCode,i=i?.toUpperCase());const u=o.authMode;if(403===n&&(4===l||a.message?.toLowerCase().includes("ssl")&&!a.message.toLowerCase().includes("permission"))){if(!e.useSSL)return e.useSSL=!0,!1}else if(!e.hasToken&&e.useIdentity&&("no-prompt"!==u||498===n)&&void 0!==n&&A$8.includes(n)&&!W$1(e.params.url)&&(403!==n||i&&!F$3.includes(i)&&(null==l||2===l&&e.credentialToken))){await z$6();try{const r=await n$s.getCredential(e.params.url,{error:B$5("request:server",a,e.params),prompt:"no-prompt"!==u,signal:e.controller.signal,token:e.credentialToken});return e.credential=r,e.credentialToken=r.token,e.useSSL=e.useSSL||r.ssl,!1}catch(c){if("no-prompt"===u)return e.credential=void 0,e.credentialToken=void 0,!1;a=c;}}if(a)throw a;return !0}function Z$2(e,t,r=!1){const s=t.controller.signal,o=new Image;return t.withCredentials?o.crossOrigin="use-credentials":o.crossOrigin="anonymous",o.alt="",o.fetchPriority=D$7.priority,o.src=e,i$w(o,e,r,s)}j$b._abortableFetch=null,j$b._corsServers=["https://server.arcgisonline.com","https://services.arcgisonline.com"];

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
function i$v(r,t){return t?{...t,query:{...r??{},...t.query}}:{query:r}}function f$t(r){return "string"==typeof r?L$6(r):a$v(r)}function s$B(r,t,o){const e={};for(const n in r){if("declaredClass"===n)continue;const i=r[n];if(null!=i&&"function"!=typeof i)if(Array.isArray(i)){e[n]=[];for(let r=0;r<i.length;r++)e[n][r]=s$B(i[r]);}else if("object"==typeof i)if(i.toJSON){const r=i.toJSON(o&&o[n]);e[n]=t?r:JSON.stringify(r);}else e[n]=t?i:JSON.stringify(i);else e[n]=i;}return e}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
function e$x(e,t,n,c){var o,r=arguments.length,f=r<3?t:null===c?c=Object.getOwnPropertyDescriptor(t,n):c;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)f=Reflect.decorate(e,t,n,c);else for(var u=e.length-1;u>=0;u--)(o=e[u])&&(f=(r<3?o(f):r>3?o(t,n,f):o(t,n))||f);return r>3&&f&&Object.defineProperty(t,n,f),f}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
function t$s(n){return null!=n&&"function"==typeof n[Symbol.iterator]}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
class t$r{constructor(){this._groups=new Map;}destroy(){this.removeAll();}get size(){let r=0;return this._groups.forEach((e=>{r+=e.length;})),r}add(e,t){if(t$s(e)){const r=this._getOrCreateGroup(t);for(const t of e)this._isHandle(t)&&r.push(t);}else if(this._isHandle(e)){this._getOrCreateGroup(t).push(e);}return this}forEach(r,e){if("function"==typeof r)this._groups.forEach((e=>e.forEach(r)));else {const t=this._getGroup(r);t&&e&&t.forEach(e);}}has(r){return this._groups.has(this._ensureGroupKey(r))}remove(e){if("string"!=typeof e&&t$s(e)){for(const r of e)this.remove(r);return this}return this.has(e)?(this._removeAllFromGroup(this._getGroup(e)),this._groups.delete(this._ensureGroupKey(e)),this):this}removeAll(){return this._groups.forEach((r=>this._removeAllFromGroup(r))),this._groups.clear(),this}_isHandle(r){return r&&(!!r.remove||r instanceof t$r)}_getOrCreateGroup(r){if(this.has(r))return this._getGroup(r);const e=[];return this._groups.set(this._ensureGroupKey(r),e),e}_getGroup(r){return p$m(this._groups.get(this._ensureGroupKey(r)))}_ensureGroupKey(r){return r||"_default_"}_removeAllFromGroup(r){for(const e of r)e instanceof t$r?e.removeAll():e.remove();}}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
const o$y=Symbol("Accessor-beforeDestroy");

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
function n$r(n){return e$w((()=>n.forEach((n=>null!=n&&n.remove()))))}function e$w(n){return {remove:()=>{n&&(n(),n=void 0);}}}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
function e$v(r){return r.__accessor__??null}function i$u(r,n){return null!=r&&r.metadatas&&null!=r.metadatas[n]}function o$x(r,n,t){if(t){return a$r(r,n,{policy:t,path:""})}return a$r(r,n,null)}function a$r(r,e,i){return e?Object.keys(e).reduce(((r,u)=>{const o=u;let l=null,s="merge";if(i&&(l=i.path?`${i.path}.${u}`:u,s=i.policy(l)),"replace"===s)return r[o]=e[o],r;if("replace-arrays"===s&&Array.isArray(r[o]))return r[o]=e[o],r;if(void 0===r[o])return r[o]=a$v(e[o]),r;let c=r[o],f=e[o];if(c===f)return r;if(Array.isArray(f)||Array.isArray(r))c=c?Array.isArray(c)?r[o]=c.concat():r[o]=[c]:r[o]=[],f&&(Array.isArray(f)||(f=[f]),f.forEach((r=>{c.includes(r)||c.push(r);})));else if(f&&"object"==typeof f)if(i){const n=i.path;i.path=p$m(l),r[o]=a$r(c,f,i),i.path=n;}else r[o]=a$r(c,f,null);else r.hasOwnProperty(u)&&!e.hasOwnProperty(u)||(r[o]=f);return r}),r||{}):r}function s$A(r){return Array.isArray(r)?r:r.split(".")}function c$w(r){return r.includes(",")?r.split(",").map((r=>r.trim())):[r.trim()]}function f$s(r){if(Array.isArray(r)){const n=[];for(const t of r)n.push(...c$w(t));return n}return c$w(r)}function y$h(n,t,e,i){const u=f$s(t);if(1!==u.length){const t=u.map((r=>i(n,r,e)));return n$r(t)}return i(n,u[0],e)}function h$k(r){let n=!1;return ()=>{n||(n=!0,r());}}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
function e$u(t,e){const i="?"===t[t.length-1]?t.slice(0,-1):t;if(null!=e.getItemAt||Array.isArray(e)){const t=parseInt(i,10);if(!isNaN(t))return Array.isArray(e)?e[t]:e.at(t)}const u=e$v(e);return i$u(u,i)?u.get(i):e[i]}function i$t(t,n,r){if(null==t)return t;const u=e$u(n[r],t);return !u&&r<n.length-1?void 0:r===n.length-1?u:i$t(u,n,r+1)}function u$v(n,r,u=0){return "string"!=typeof r||r.includes(".")?i$t(n,s$A(r),u):e$u(r,n)}function o$w(t,n){return u$v(t,n)}function s$z(t,n){return void 0!==u$v(n,t)}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
function r$m(e){let r=e.constructor.__accessorMetadata__;const o=Object.prototype.hasOwnProperty.call(e.constructor,"__accessorMetadata__");if(r){if(!o){r=Object.create(r);for(const e in r)r[e]=a$v(r[e]);Object.defineProperty(e.constructor,"__accessorMetadata__",{value:r,enumerable:!1,configurable:!0,writable:!0});}}else r={},Object.defineProperty(e.constructor,"__accessorMetadata__",{value:r,enumerable:!1,configurable:!0,writable:!0});return e.constructor.__accessorMetadata__}function o$v(t,e){const o=r$m(t);let c=o[e];return c||(c=o[e]={}),c}function n$q(t,r){return o$x(t,r,s$y)}const a$q=/^(?:[^.]+\.)?(?:value|type|(?:json\.type|json\.origins\.[^.]\.type))$/;function s$y(t){return a$q.test(t)?"replace":"merge"}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
function t$q(t){return t&&t.release&&"function"==typeof t.release}function i$s(t){return t&&t.acquire&&"function"==typeof t.acquire}class e$t{constructor(t,i,e,o=1,s=0){if(this._ctor=t,this._acquireFunction=i,this._releaseFunction=e,this.allocationSize=o,this._pool=new Array(s),this._initialSize=s,this._ctor)for(let n=0;n<s;n++)this._pool[n]=new this._ctor;this.allocationSize=Math.max(o,1);}destroy(){this.prune(0);}acquire(...t){let o;if(e$t.test.disabled)o=new this._ctor;else {if(0===this._pool.length){const t=this.allocationSize;for(let i=0;i<t;i++)this._pool[i]=new this._ctor;}o=this._pool.pop();}return this._acquireFunction?this._acquireFunction(o,...t):i$s(o)&&o.acquire(...t),o}release(i){i&&!e$t.test.disabled&&(this._releaseFunction?this._releaseFunction(i):t$q(i)&&i.release(),this._pool.push(i));}prune(t=this._initialSize){if(!(t>=this._pool.length)){for(let i=t;i<this._pool.length;++i){const t=this._pool[i];this._dispose(t);}this._pool.length=t;}}_dispose(t){t.dispose&&"function"==typeof t.dispose&&t.dispose();}}e$t.test={disabled:!1};

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
var I$4;!function(I){I[I.INITIALIZING=0]="INITIALIZING",I[I.CONSTRUCTING=1]="CONSTRUCTING",I[I.CONSTRUCTED=2]="CONSTRUCTED";}(I$4||(I$4={}));

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
class s$x{constructor(r,s){this._observers=r,this._observer=s;}remove(){L$7(this._observers,this._observer);}}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
class r$l{constructor(){this._observers=null,this.destroyed=!1;}observe(e){if(this.destroyed||e.destroyed)return t$p;null==this._observers&&(this._observers=[]);const r=this._observers;let o=!1,i=!1;const n=r.length;for(let s=0;s<n;++s){const t=r[s];if(t.destroyed)i=!0;else if(t===e){o=!0;break}}return o||(r.push(e),i&&this._removeDestroyedObservers()),new s$x(r,e)}_removeDestroyedObservers(){const e=this._observers;if(!e||0===e.length)return;const s=e.length;let r=0;for(let t=0;t<s;++t){for(;t+r<s;){if(!e[t+r].destroyed)break;++r;}if(r>0){if(!(t+r<s))break;e[t]=e[t+r];}}e.length=s-r;}destroy(){if(this.destroyed)return;this.destroyed=!0;const e=this._observers;if(null!=e){for(const s of e)s.onCommitted();this._observers=null;}}}const t$p=e$w();

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
var r$k;!function(e){e[e.DEFAULTS=0]="DEFAULTS",e[e.COMPUTED=1]="COMPUTED",e[e.SERVICE=2]="SERVICE",e[e.PORTAL_ITEM=3]="PORTAL_ITEM",e[e.WEB_SCENE=4]="WEB_SCENE",e[e.WEB_MAP=5]="WEB_MAP",e[e.LINK_CHART=6]="LINK_CHART",e[e.USER=7]="USER";}(r$k||(r$k={}));function n$p(e){switch(e){case"defaults":return r$k.DEFAULTS;case"service":return r$k.SERVICE;case"portal-item":return r$k.PORTAL_ITEM;case"web-scene":return r$k.WEB_SCENE;case"web-map":return r$k.WEB_MAP;case"link-chart":return r$k.LINK_CHART;case"user":return r$k.USER;default:return null}}function E$6(t){switch(t){case r$k.DEFAULTS:return "defaults";case r$k.SERVICE:return "service";case r$k.PORTAL_ITEM:return "portal-item";case r$k.WEB_SCENE:return "web-scene";case r$k.WEB_MAP:return "web-map";case r$k.LINK_CHART:return "link-chart";case r$k.USER:return "user"}return p$m(void 0)}function c$v(e){return E$6(e)}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
var i$r;!function(i){i[i.Dirty=1]="Dirty",i[i.Overriden=2]="Overriden",i[i.Computing=4]="Computing",i[i.NonNullable=8]="NonNullable",i[i.HasDefaultValue=16]="HasDefaultValue",i[i.DepTrackingInitialized=32]="DepTrackingInitialized",i[i.AutoTracked=64]="AutoTracked",i[i.ExplicitlyTracking=128]="ExplicitlyTracking";}(i$r||(i$r={}));

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
const o$u={onObservableAccessed:()=>{},onTrackingEnd:()=>{}},c$u=[];let s$w=o$u;function i$q(t){s$w.onObservableAccessed(t);}let l$o=!1,a$p=!1;function f$r(t,n,e){if(l$o)return u$u(t,n,e);p$k(t);const r=n.call(e);return d$n(),r}function g$f(t,n){return f$r(o$u,t,n)}function u$u(n,e,r){const o=l$o;l$o=!0,p$k(n);let c=null;try{c=e.call(r);}catch(s){a$p&&s$E.getLogger("esri.core.accessorSupport.tracking").error(s);}return d$n(),l$o=o,c}function p$k(t){s$w=t,c$u.push(t);}function d$n(){const t=c$u.length;if(t>1){const n=c$u.pop();s$w=c$u[t-2],n.onTrackingEnd();}else if(1===t){const t=c$u.pop();s$w=o$u,t.onTrackingEnd();}else s$w=o$u;}function b$8(t,n){const e=n.observerObject;if(e.flags&i$r.DepTrackingInitialized)return;const o=a$p;a$p=!1,e.flags&i$r.AutoTracked?u$u(n,n.metadata.get,t):y$g(t,n),a$p=o;}const m$k=[];function y$g(t,e){const o=e.observerObject;o.flags&i$r.ExplicitlyTracking||(o.flags|=i$r.ExplicitlyTracking,u$u(e,(()=>{const r=e.metadata.dependsOn||m$k;for(const e of r)if("string"!=typeof e||e.includes(".")){const r=s$A(e);for(let n=0,e=t;n<r.length&&null!=e&&"object"==typeof e;++n)e=k$8(e,r[n],n!==r.length-1);}else k$8(t,e,!1);})),o.flags&=~i$r.ExplicitlyTracking);}function k$8(t,n,r){const o="?"===n[n.length-1]?n.slice(0,-1):n;if(null!=t.getItemAt||Array.isArray(t)){const n=parseInt(o,10);if(!isNaN(n))return Array.isArray(t)?t[n]:t.at(n)}const c=e$v(t);if(c){const n=c.propertiesByName.get(o);n&&(i$q(n.observerObject),b$8(t,n));}return r?t[o]:void 0}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
class a$o{constructor(t,e){this.propertyName=t,this.metadata=e,this.observerObject=new l$n,this._accessed=null,this._handles=null,this.observerObject.flags=i$r.Dirty|(e.nonNullable?i$r.NonNullable:0)|(e.hasOwnProperty("value")?i$r.HasDefaultValue:0)|(void 0===e.get?i$r.DepTrackingInitialized:0)|(void 0===e.dependsOn?i$r.AutoTracked:0);}destroy(){this.observerObject.destroy(),this._accessed=null,this._clearObservationHandles();}getComputed(t){const a=this.observerObject;i$q(a);const l=t.store,c=this.propertyName,h=a.flags,d=l.get(c);if(h&i$r.Computing)return d;if(~h&i$r.Dirty&&l.has(c))return d;a.flags|=i$r.Computing;const g=t.host;let f;h&i$r.AutoTracked?f=f$r(this,this.metadata.get,g):(y$g(g,this),f=this.metadata.get.call(g)),l.set(c,f,r$k.COMPUTED);const m=l.get(c);return m===d?a.flags&=~i$r.Dirty:g$f(this.commit,this),a.flags&=~i$r.Computing,m}onObservableAccessed(t){if(t===this.observerObject)return;let e=this._accessed;if(null==e)e=[],this._accessed=e;else if(e.includes(t))return;e.push(t);}onTrackingEnd(){this._clearObservationHandles();const t=this.observerObject;t.flags|=i$r.DepTrackingInitialized;const e=this._accessed;if(null==e||0===e.length)return;let s=this._handles;null==s&&(s=[],this._handles=s);for(let i=0;i<e.length;++i)s.push(e[i].observe(t));e.length=0;}notifyChange(){const t=this.observerObject;t.onInvalidated(),t.onCommitted();}invalidate(){this.observerObject.onInvalidated();}commit(){const t=this.observerObject;t.flags&=~i$r.Dirty,t.onCommitted();}_clearObservationHandles(){const t=this._handles;if(null!==t){for(let e=0;e<t.length;++e)t[e].remove();t.length=0;}}}class l$n extends r$l{constructor(){super(...arguments),this.flags=0;}onInvalidated(){~this.flags&i$r.Overriden&&(this.flags|=i$r.Dirty);const t=this._observers;if(t&&t.length>0)for(const e of t)e.onInvalidated();}onCommitted(){const t=this._observers;if(t&&t.length>0){const e=t.slice();for(const t of e)t.onCommitted();}}destroy(){this.flags&i$r.Dirty&&this.onCommitted(),super.destroy();}}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
class t$o{constructor(){this._values=new Map,this.multipleOriginsSupported=!1;}clone(s){const r=new t$o;return this._values.forEach(((t,i)=>{s&&s.has(i)||r.set(i,a$v(t));})),r}get(e){return this._values.get(e)}originOf(){return r$k.USER}keys(){return [...this._values.keys()]}set(e,s){this._values.set(e,s);}delete(e){this._values.delete(e);}has(e){return this._values.has(e)}forEach(e){this._values.forEach(e);}}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
function g$e(t,e,r){return void 0!==t}function u$t(t,e,r,i){return void 0!==t&&(!(null==r&&t.observerObject.flags&i$r.NonNullable)||(!1))}function d$m(t){return t&&"function"==typeof t.destroy}s$E.getLogger("esri.core.accessorSupport.Properties");class m$j{constructor(t){this.host=t,this.propertiesByName=new Map,this.ctorArgs=null,this.destroyed=!1,this.lifecycle=I$4.INITIALIZING,this.store=new t$o,this._origin=r$k.USER;const e=this.host.constructor.__accessorMetadata__;for(const r in e){const t=new a$o(r,e[r]);this.propertiesByName.set(r,t);}this.metadatas=e;}initialize(){this.lifecycle=I$4.CONSTRUCTING;}constructed(){this.lifecycle=I$4.CONSTRUCTED;}destroy(){this.destroyed=!0;for(const[t,e]of this.propertiesByName){if(e.metadata.autoDestroy){const r=this.internalGet(t);r&&d$m(r)&&(r.destroy(),~e.observerObject.flags&i$r.NonNullable&&this._internalSet(e,null));}e.destroy();}}get initialized(){return this.lifecycle!==I$4.INITIALIZING}get(t){const e=this.propertiesByName.get(t);if(e.metadata.get)return e.getComputed(this);i$q(e.observerObject);const r=this.store;return r.has(t)?r.get(t):e.metadata.value}originOf(t){const e=this.store.originOf(t);if(void 0===e){const e=this.propertiesByName.get(t);if(void 0!==e&&e.observerObject.flags&i$r.HasDefaultValue)return "defaults"}return E$6(e)}has(t){return !!this.propertiesByName.has(t)&&this.store.has(t)}keys(){return [...this.propertiesByName.keys()]}internalGet(t){const e=this.propertiesByName.get(t);if(g$e(e))return this.store.has(t)?this.store.get(t):e.metadata.value}internalSet(t,e){const r=this.propertiesByName.get(t);g$e(r)&&this._internalSet(r,e);}getDependsInfo(t,e,r){const s=this.propertiesByName.get(e);if(!g$e(s))return "";const o=new Set,n=f$r({onObservableAccessed:t=>o.add(t),onTrackingEnd:()=>{}},(()=>s.metadata.get?.call(t)));let a=`${r}${t.declaredClass.split(".").pop()}.${e}: ${n}\n`;if(0===o.size)return a;r+="  ";for(const c of o){if(!(c instanceof a$o))continue;a+=`${r}${c.propertyName}: undefined\n`;}return a}setAtOrigin(t,e,r){const s=this.propertiesByName.get(t);if(g$e(s))return this._setAtOrigin(s,e,r)}isOverridden(t){const e=this.propertiesByName.get(t);return void 0!==e&&!!(e.observerObject.flags&i$r.Overriden)}clearOverride(t){const e=this.propertiesByName.get(t),r=e?.observerObject;r&&r.flags&i$r.Overriden&&(r.flags&=~i$r.Overriden,e.notifyChange());}override(t,e){const r=this.propertiesByName.get(t);if(!u$t(r,t,e))return;const s=r.metadata.cast;if(s){const t=this._cast(s,e),{valid:r,value:i}=t;if(y$f.release(t),!r)return;e=i;}r.observerObject.flags|=i$r.Overriden,this._internalSet(r,e);}set(t,e){const r=this.propertiesByName.get(t);if(!u$t(r,t,e))return;const s=r.metadata.cast;if(s){const t=this._cast(s,e),{valid:r,value:i}=t;if(y$f.release(t),!r)return;e=i;}const i=r.metadata.set;i?i.call(this.host,e):this._internalSet(r,e);}setDefaultOrigin(t){this._origin=n$p(t);}getDefaultOrigin(){return E$6(this._origin)}notifyChange(t){const e=this.propertiesByName.get(t);void 0!==e&&e.notifyChange();}invalidate(t){const e=this.propertiesByName.get(t);void 0!==e&&e.invalidate();}commit(t){const e=this.propertiesByName.get(t);void 0!==e&&e.commit();}_internalSet(t,e){const r=this.lifecycle!==I$4.INITIALIZING?this._origin:r$k.DEFAULTS;this._setAtOrigin(t,e,r);}_setAtOrigin(e,r,s){const i=this.store,o=e.propertyName;i.has(o,s)&&j$d(r,i.get(o))&&~e.observerObject.flags&i$r.Overriden&&s===i.originOf(o)||(e.invalidate(),i.set(o,r,s),e.commit(),b$8(this.host,e));}_cast(t,e){const r=y$f.acquire();return r.valid=!0,r.value=e,t&&(r.value=t.call(this.host,e,r)),r}}class v$9{constructor(){this.value=null,this.valid=!0;}acquire(){this.valid=!0;}release(){this.value=null;}}const y$f=new e$t(v$9);

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
function t$n(o,e,s){if(o&&e)if("object"==typeof e)for(const r of Object.getOwnPropertyNames(e))t$n(o,r,e[r]);else {if(e.includes(".")){const n=e.split("."),i=n.splice(n.length-1,1)[0];return void t$n(o$w(o,n),i,s)}const i=o.__accessor__;null!=i&&n$o(e,i),o[e]=s;}}function n$o(r,t){if(has("esri-unknown-property-errors")&&!e$s(r,t))throw new s$C("set:unknown-property",s$v(r,t))}function e$s(o,r){return null!=r.metadatas[o]}function s$v(o,r){return "setting unknown property '"+o+"' on instance of "+r.host.declaredClass}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
let n$n;function t$m(){return n$n}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
function r$j(e){e.length=0;}class t$l{constructor(t=50,o=50){this._pool=new e$t(Array,void 0,r$j,o,t);}acquire(){return this._pool.acquire()}release(e){this._pool.release(e);}prune(){this._pool.prune(0);}static acquire(){return o$t.acquire()}static release(e){return o$t.release(e)}static prune(){o$t.prune();}}const o$t=new t$l(100);

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
class t$k extends e$t{constructor(){super(...arguments),this._set=new Set;}destroy(){super.destroy(),this._set=i$x();}acquire(...e){const s=super.acquire(...e);return this._set.delete(s),s}release(e){e&&!this._set.has(e)&&(super.release(e),this._set.add(e));}_dispose(e){this._set.delete(e),super._dispose(e);}}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
const o$s=[];function t$j(t){o$s.push(t),1===o$s.length&&queueMicrotask((()=>{const t=o$s.slice();o$s.length=0;for(const o of t)o();}));}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
class s$u{constructor(s,e=30){this.name=s,this._counter=0,this._samples=new Array(e);}record(s){null!=s&&(this._samples[++this._counter%this._samples.length]=s);}get median(){return this._samples.slice().sort(((s,e)=>s-e))[Math.floor(this._samples.length/2)]}get average(){return this._samples.reduce(((s,e)=>s+e),0)/this._samples.length}get last(){return this._samples[this._counter%this._samples.length]}}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
var o$r;!function(o){const t=(o,t,n,e)=>{let i=t,c=t;const l=n>>>1,r=o[i-1];for(;c<=l;){c=i<<1,c<n&&e(o[c-1],o[c])<0&&++c;const t=o[c-1];if(e(t,r)<=0)break;o[i-1]=t,i=c;}o[i-1]=r;},n=(o,t)=>o<t?-1:o>t?1:0;function e(o,e,i,c){void 0===e&&(e=0),void 0===i&&(i=o.length),void 0===c&&(c=n);for(let n=i>>>1;n>e;n--)t(o,n,i,c);const l=e+1;for(let n=i-1;n>e;n--){const i=o[e];o[e]=o[n],o[n]=i,t(o,l,n,c);}}function*i(o,e,i,c){void 0===e&&(e=0),void 0===i&&(i=o.length),void 0===c&&(c=n);for(let n=i>>>1;n>e;n--)t(o,n,i,c),yield;const l=e+1;for(let n=i-1;n>e;n--){const i=o[e];o[e]=o[n],o[n]=i,t(o,l,n,c),yield;}}o.sort=e,o.iterableSort=i;}(o$r||(o$r={}));const t$i=o$r;

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
const a$n=1.5,e$r=1.1;class l$m{constructor(h){this.data=[],this._length=0,this._allocator=void 0,this._deallocator=()=>null,this._shrink=()=>{},this._hint=new v$b,h&&(h.initialSize&&(this.data=new Array(h.initialSize)),h.allocator&&(this._allocator=h.allocator),void 0!==h.deallocator&&(this._deallocator=h.deallocator),h.shrink&&(this._shrink=()=>n$m(this)));}toArray(){return this.data.slice(0,this.length)}filter(t){const h=new Array;for(let i=0;i<this._length;i++){const s=this.data[i];t(s)&&h.push(s);}return h}at(t){if((t=Math.trunc(t)||0)<0&&(t+=this._length),!(t<0||t>=this._length))return this.data[t]}includes(t,h){const i=this.data.indexOf(t,h);return -1!==i&&i<this.length}get length(){return this._length}set length(t){if(t>this._length){if(this._allocator){for(;this._length<t;)this.data[this._length++]=this._allocator(this.data[this._length]);return}this._length=t;}else {if(this._deallocator)for(let h=t;h<this._length;++h)this.data[h]=this._deallocator(this.data[h]);this._length=t,this._shrink();}}clear(){this.length=0;}prune(){this.clear(),this.data=[];}push(t){this.data[this._length++]=t;}pushArray(t,h=t.length){for(let i=0;i<h;i++)this.data[this._length++]=t[i];}fill(t,h){for(let i=0;i<h;i++)this.data[this._length++]=t;}pushNew(){this._allocator&&(this.data[this.length]=this._allocator(this.data[this.length]));const t=this.data[this._length];return ++this._length,t}unshift(t){this.data.unshift(t),this._length++,n$m(this);}pop(){if(0===this.length)return;const t=this.data[this.length-1];return this.length=this.length-1,this._shrink(),t}remove(t){const i=b$a(this.data,t,this.length,this._hint);if(-1!==i)return this.data.splice(i,1),this.length=this.length-1,t}removeUnordered(t){return this.removeUnorderedIndex(b$a(this.data,t,this.length,this._hint))}removeUnorderedIndex(t){if(!(t>=this.length||t<0))return this.swapElements(t,this.length-1),this.pop()}removeUnorderedMany(t,h=t.length,s){this.length=O$6(this.data,t,this.length,h,this._hint,s),this._shrink();}front(){if(0!==this.length)return this.data[0]}back(){if(0!==this.length)return this.data[this.length-1]}swapElements(t,h){if(t>=this.length||h>=this.length||t===h)return;const i=this.data[t];this.data[t]=this.data[h],this.data[h]=i;}sort(t){t$i.sort(this.data,0,this.length,t);}iterableSort(t){return t$i.iterableSort(this.data,0,this.length,t)}some(t,h){for(let i=0;i<this.length;++i)if(t.call(h,this.data[i],i,this.data))return !0;return !1}find(t,h){for(let i=0;i<this.length;++i){const s=this.data[i];if(t.call(h,s,i))return s}}filterInPlace(t,h){let i=0;for(let s=0;s<this._length;++s){const a=this.data[s];t.call(h,a,s,this.data)&&(this.data[s]=this.data[i],this.data[i]=a,i++);}if(this._deallocator)for(let s=i;s<this._length;s++)this.data[s]=this._deallocator(this.data[s]);return this._length=i,this._shrink(),this}forAll(t,h){const i=this.length,s=this.data;for(let a=0;a<i;++a)t.call(h,s[a],a,s);}forEach(t,h){for(let i=0;i<this.length;++i)t.call(h,this.data[i],i,this.data);}map(t,h){const i=new Array(this.length);for(let s=0;s<this.length;++s)i[s]=t.call(h,this.data[s],s,this.data);return i}reduce(t,h){let i=h;for(let s=0;s<this.length;++s)i=t(i,this.data[s],s,this.data);return i}has(t){const h=this.length,i=this.data;for(let s=0;s<h;++s)if(i[s]===t)return !0;return !1}}function n$m(t){t.data.length>a$n*t.length&&(t.data.length=Math.floor(t.length*e$r));}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
function n$l(n){return n}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
class m$i{constructor(e){this.callback=e,this.isActive=!0;}remove(){this.isActive=!1;}}let l$l=0;const u$s={time:n$l(0),deltaTime:n$l(0),elapsedFrameTime:n$l(0),frameDuration:n$l(0)},f$q=["prepare","preRender","render","postRender","update","finish"],h$j=[],d$l=new l$m;const k$7={frameTasks:d$l,willDispatch:!1,clearFrameTasks:j$a,dispatch:b$7,executeFrameTasks:D$6};function v$8(e){const r=new m$i(e);return h$j.push(r),k$7.willDispatch||(k$7.willDispatch=!0,t$j(b$7)),r}function j$a(e=!1){d$l.forAll((e=>{e.removed=!0;})),e&&_$b();}function D$6(e){const t=n$l(e-l$l);l$l=e;const r=1e3/60,s=Math.max(0,t-r);u$s.time=e,u$s.frameDuration=n$l(r-s);for(let o=0;o<f$q.length;o++){const r=performance.now(),s=f$q[o];d$l.forAll((r=>{if(r.paused||r.removed)return;0===o&&r.ticks++;r.phases[s]&&(u$s.elapsedFrameTime=n$l(performance.now()-e),u$s.deltaTime=0===r.ticks?n$l(0):t,r.phases[s]?.call(r,u$s));})),R$3[o].record(performance.now()-r);}_$b(),q$5.record(performance.now()-e);}const g$d=new l$m;function _$b(){d$l.forAll((e=>{e.removed&&g$d.push(e);})),d$l.removeUnorderedMany(g$d.data,g$d.length),g$d.clear();}function b$7(){for(;h$j.length;){const t=p$m(h$j.shift());t.isActive&&t.callback();}k$7.willDispatch=!1;}const R$3=f$q.map((e=>new s$u(e))),q$5=new s$u("total");

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
let t$h=0;function e$q(){return ++t$h}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
class t$g{constructor(t){this._accessed=[],this._handles=[],this._observerObject=new e$p(t),s$t.register(this,new WeakRef(this._observerObject),this);}destroy(){s$t.unregister(this._observerObject),this._accessed.length=0,this._observerObject?.destroy(),this.clear();}onObservableAccessed(t){const e=this._accessed;e.includes(t)||e.push(t);}onTrackingEnd(){const t=this._handles,e=this._accessed,s=this._observerObject;for(let i=0;i<e.length;++i)t.push(e[i].observe(s));e.length=0;}clear(){const t=this._handles;for(let e=0;e<t.length;++e)t[e].remove();t.length=0;}}class e$p{constructor(t){this._notify=t,this._invalidCount=0,this.destroyed=!1;}onInvalidated(){this._invalidCount++;}onCommitted(){if(this.destroyed)return;const t=this._invalidCount;if(1===t)return this._invalidCount=0,void this._notify();this._invalidCount=t>0?t-1:0;}destroy(){this.destroyed=!0,this._notify=i$p;}}const s$t=new FinalizationRegistry((t=>{t.deref()?.destroy();}));function i$p(){}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
let r$i=!1;const e$o=[];function o$q(e,o){let u=new t$g(s),l=null,f=!1;function s(){if(!u||f)return;if(r$i)return void i$o(s);const t=l;u.clear(),r$i=!0,f=!0,l=f$r(u,e),f=!1,r$i=!1,o(l,t),c$t();}function m(){u&&(u.destroy(),u=null,l=null);}return f=!0,l=f$r(u,e),f=!1,{remove:m}}function u$r(r,e){let o=new t$g(l),u=null;function l(){e(u,c);}function i(){o&&(o.destroy(),o=null),u=null;}function c(){return o?(o.clear(),u=f$r(o,r),u):null}return c(),{remove:i}}function i$o(n){e$o.includes(n)||e$o.unshift(n);}function c$t(){for(;e$o.length;)e$o.pop()();}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
var h$i;!function(e){e[e.Untracked=0]="Untracked",e[e.Tracked=1]="Tracked";}(h$i||(h$i={}));class f$p{constructor(){this.uid=e$q(),this.removed=!1,this.type=null,this.oldValue=null,this.callback=null,this.getValue=null,this.target=null,this.path=null,this.equals=null;}static acquireUntracked(e,r,o,l,i){return this.pool.acquire(h$i.Untracked,e,r,o,l,i,j$d)}static acquireTracked(e,t,r,o){return this.pool.acquire(h$i.Tracked,e,t,r,null,null,o)}notify(e,t){this.type===h$i.Untracked?this.callback.call(this.target,e,t,this.path,this.target):this.callback.call(null,e,t,void 0,void 0);}acquire(e,t,r,o,l,i,s){this.uid=e$q(),this.removed=!1,this.type=e,this.oldValue=t,this.callback=r,this.getValue=o,this.target=l,this.path=i,this.equals=s;}release(){this.target=this.path=this.oldValue=this.callback=this.getValue=null,this.uid=e$q(),this.removed=!0;}}f$p.pool=new t$k(f$p);const m$h=new t$l,v$7=new Set;let p$j;function k$6(e){v$7.delete(e),v$7.add(e),p$j||(p$j=v$8(q$4));}function _$a(e){if(e.removed)return;const t=e.oldValue,r=e.getValue();e.equals(t,r)||(e.oldValue=r,e.notify(r,t));}function g$c(e){for(const t of v$7.values())t.target===e&&(t.removed=!0);}function q$4(){let e=10;for(;p$j&&e--;){p$j=null;const e=j$9(),t=m$h.acquire();for(const r of e){const e=r.uid;_$a(r),e===r.uid&&r.removed&&t.push(r);}for(const r of v$7)r.removed&&(t.push(r),v$7.delete(r));for(const r of t)f$p.pool.release(r);m$h.release(t),m$h.release(e),V.forEach((e=>e()));}}function j$9(){const e=m$h.acquire();e.length=v$7.size;let t=0;for(const r of v$7)e[t]=r,++t;return v$7.clear(),e}const V=new Set;function U$2(e,t,r){let o=y$h(e,t,r,((e,t,r)=>{let l,i,n=u$r((()=>u$v(e,t)),((n,s)=>{e.__accessor__.destroyed||l&&l.uid!==i?o.remove():(l||(l=f$p.acquireUntracked(n,r,s,e,t),i=l.uid),k$6(l));}));return {remove:h$k((()=>{n.remove(),l&&(l.uid!==i||l.removed||(l.removed=!0,k$6(l)),l=null),o=n=null;}))}}));return o}function b$6(e,r,o){const l=y$h(e,r,o,((e,r,o)=>{let i=!1;return o$q((()=>u$v(e,r)),((n,s)=>{e.__accessor__.destroyed?l.remove():i||(i=!0,j$d(s,n)||o.call(e,n,s,r,e),i=!1);}))}));return l}function T$3(e,t,r,o=!1){return !e.__accessor__||e.__accessor__.destroyed?{remove(){}}:o?b$6(e,t,r):U$2(e,t,r)}function w$6(e,t,r){let o,l,i=u$r(e,((e,n)=>{o&&o.uid!==l?i.remove():(o||(o=f$p.acquireTracked(e,t,n,r),l=o.uid),k$6(o));}));return {remove:h$k((()=>{i.remove(),o&&(o.uid!==l||o.removed||(o.removed=!0,k$6(o)),o=null),i=null;}))}}function S$7(e,t,r){let o=!1;return o$q(e,((e,l)=>{o||(o=!0,r(l,e)||t(e,l),o=!1);}))}function P$2(e,t,o=!1,l=h$m){return o?S$7(e,t,l):w$6(e,t,l)}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
function r$h(n,t,r){const o=n.get(t);if(void 0!==o)return o;const u=r();return n.set(t,u),u}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
const r$g=s$E.getLogger("esri.core.accessorSupport.ensureTypes");function t$f(e){return null==e?e:new Date(e)}function o$p(e){return null==e?e:!!e}function u$q(e){return null==e?e:e.toString()}function a$m(e){return null==e?e:(e=parseFloat(e),isNaN(e)?0:e)}function s$s(e){return null==e?e:Math.round(parseFloat(e))}function i$n(e){return e&&e.constructor&&void 0!==e.constructor.__accessorMetadata__}function c$s(e,n){return null!=n&&e&&!(n instanceof e)}function l$k(e){return e&&"isCollection"in e}function f$o(e){return e&&e.Type?"function"==typeof e.Type?e.Type:e.Type.base:null}function p$i(e,n){if(!n||!n.constructor||!l$k(n.constructor))return y$e(e,n)?n:new e(n);const r=f$o(e.prototype.itemType),t=f$o(n.constructor.prototype.itemType);return r?t?r===t?n:r.prototype.isPrototypeOf(t.prototype)?new e(n):(y$e(e,n),n):new e(n):n}function y$e(e,n){return !!i$n(n)&&(r$g.error("Accessor#set","Assigning an instance of '"+(n.declaredClass||"unknown")+"' which is not a subclass of '"+g$b(e)+"'"),!0)}function v$6(e,n){return null==n?n:l$k(e)?p$i(e,n):c$s(e,n)?y$e(e,n)?n:new e(n):n}function g$b(e){return e&&e.prototype&&e.prototype.declaredClass||"unknown"}const h$h=new WeakMap;function m$g(e){switch(e){case Number:return a$m;case T$2:return s$s;case Boolean:return o$p;case String:return u$q;case Date:return t$f;default:return r$h(h$h,e,(()=>v$6.bind(null,e)))}}function d$k(e,n){const r=m$g(e);return 1===arguments.length?r:r(n)}function b$5(e,n,r){return 1===arguments.length?b$5.bind(null,e):n?Array.isArray(n)?n.map((n=>e(n,r))):[e(n,r)]:n}function w$5(e,n){return 1===arguments.length?b$5((n=>d$k(e,n))):b$5((n=>d$k(e,n)),n)}function A$7(e,n,r){return 0!==n&&Array.isArray(r)?r.map((r=>A$7(e,n-1,r))):e(r)}function $$2(e,n,r){if(2===arguments.length)return r=>$$2(e,n,r);if(!r)return r;r=A$7(e,n,r);let t=n,o=r;for(;t>0&&Array.isArray(o);)t--,o=o[0];if(void 0!==o)for(let u=0;u<t;u++)r=[r];return r}function j$8(e,n,r){return 2===arguments.length?$$2((n=>d$k(e,n)),n):$$2((n=>d$k(e,n)),n,r)}function k$5(e){return !!Array.isArray(e)&&!e.some((n=>{const r=typeof n;return !("string"===r||"number"===r||"function"===r&&e.length>1)}))}function M$6(e,n){if(2===arguments.length)return M$6(e).call(null,n);const t=new Set,o=e.filter((e=>"function"!=typeof e)),u=e.filter((e=>"function"==typeof e));for(const r of e)"string"!=typeof r&&"number"!=typeof r||t.add(r);let a=null,s=null;return (e,n)=>{if(null==e)return e;const i=typeof e,l="string"===i||"number"===i;return l&&(t.has(e)||u.some((e=>"string"===i&&e===String||"number"===i&&e===Number)))||"object"===i&&u.some((n=>!c$s(e,n)))?e:(l&&o.length?(a||(a=o.map((e=>"string"==typeof e?`'${e}'`:`${e}`)).join(", ")),r$g.error("Accessor#set",`'${e}' is not a valid value for this property, only the following values are valid: ${a}`)):"object"==typeof e&&u.length?(s||(s=u.map((e=>g$b(e))).join(", ")),r$g.error("Accessor#set",`'${e}' is not a valid value for this property, value must be one of ${s}`)):r$g.error("Accessor#set",`'${e}' is not a valid value for this property`),n&&(n.valid=!1),null)}}function S$6(e,n){if(2===arguments.length)return S$6(e).call(null,n);const t={},o=[],u=[];for(const r in e.typeMap){const n=e.typeMap[r];t[r]=d$k(n),o.push(g$b(n)),u.push(r);}const a=()=>`'${o.join("', '")}'`,s=()=>`'${u.join("', '")}'`,l="string"==typeof e.key?n=>n[e.key]:e.key;return n=>{if(e.base&&!c$s(e.base,n))return n;if(null==n)return n;const o=l(n)||e.defaultKeyValue,u=t[o];if(!u)return r$g.error("Accessor#set",`Invalid property value, value needs to be one of ${a()}, or a plain object that can autocast (having .type = ${s()})`),null;if(!c$s(e.typeMap[o],n))return n;if("string"==typeof e.key&&!i$n(n)){const r={};for(const t in n)t!==e.key&&(r[t]=n[t]);return u(r)}return u(n)}}class T$2{}function _$9(e){if(!e||!("type"in e))return !1;switch(e.type){case"native":case"array":case"one-of":return !0}return !1}function B$4(e){switch(e.type){case"native":return d$k(e.value);case"array":return b$5(B$4(e.value));case"one-of":return C$5(e);default:return null}}function C$5(e){let n=null;return (t,o)=>F$2(t,e)?t:(null==n&&(n=D$5(e)),r$g.error("Accessor#set",`Invalid property value, value needs to be of type ${n}`),o&&(o.valid=!1),null)}function D$5(e){switch(e.type){case"native":switch(e.value){case Number:return "number";case String:return "string";case Boolean:return "boolean";case T$2:return "integer";case Date:return "date";default:return g$b(e.value)}case"array":return `array of ${D$5(e.value)}`;case"one-of":{const n=e.values.map((e=>D$5(e)));return `one of ${n.slice(0,n.length-1)} or ${n[n.length-1]}`}}return "unknown"}function F$2(e,n){if(null==e)return !0;switch(n.type){case"native":switch(n.value){case Number:case T$2:return "number"==typeof e;case Boolean:return "boolean"==typeof e;case String:return "string"==typeof e}return e instanceof n.value;case"array":return !!Array.isArray(e)&&!e.some((e=>!F$2(e,n.value)));case"one-of":return n.values.some((n=>F$2(e,n)))}}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
function y$d(n={}){return (o,s)=>{if(o===Function.prototype)throw new Error(`Inappropriate use of @property() on a static field: ${o.name}.${s}. Accessor does not support static properties.`);const i=Object.getOwnPropertyDescriptor(o,s),a=o$v(o,s);i&&(i.get||i.set?(a.get=i.get||a.get,a.set=i.set||a.set):"value"in i&&("value"in n&&s$E.getLogger("esri.core.accessorSupport.decorators.property").warn(`@property() will redefine the value of "${s}" on "${o.constructor.name}" already defined in the metadata`,n),a.value=n.value=i.value)),null!=n.readOnly&&(a.readOnly=n.readOnly);const p=n.aliasOf;if(p){const t="string"==typeof p?p:p.source,e="string"==typeof p?null:!0===p.overridable;let r;a.dependsOn=[t],a.get=function(){let e=o$w(this,t);if("function"==typeof e){r||(r=t.split(".").slice(0,-1).join("."));const n=o$w(this,r);n&&(e=e.bind(n));}return e},a.readOnly||(a.set=e?function(t){this._override(s,t);}:function(e){t$n(this,t,e);});}const u=n.type,c=n.types;a.cast||(u?a.cast=h$g(u):c&&(Array.isArray(c)?a.cast=b$5(S$6(c[0])):a.cast=S$6(c))),n$q(a,n),n.range&&(a.cast=j$7(a.cast,n.range));}}function d$j(t,e,r){const n=o$v(t,r);n.json||(n.json={});let o=n.json;return void 0!==e&&(o.origins||(o.origins={}),o.origins[e]||(o.origins[e]={}),o=o.origins[e]),o}function h$g(t){let e=0,r=t;if(_$9(t))return B$4(t);for(;Array.isArray(r)&&1===r.length&&"string"!=typeof r[0]&&"number"!=typeof r[0];)r=r[0],e++;const f=r;if(k$5(f))return 0===e?M$6(f):$$2(M$6(f),e);if(1===e)return w$5(f);if(e>1)return j$8(f,e);const l=t;return l.from?l.from:d$k(l)}function j$7(t,e){return r=>{let n=+t(r);return null!=e.step&&(n=Math.round(n/e.step)*e.step),null!=e.min&&(n=Math.max(e.min,n)),null!=e.max&&(n=Math.min(e.max,n)),n}}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
function n$k(n){if(n.json&&n.json.origins){const o=n.json.origins,e={"web-document":["web-scene","web-map"]};for(const n in e)if(o[n]){const s=o[n];e[n].forEach((n=>{o[n]=s;})),delete o[n];}}}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
class s$r extends e$A{constructor(e,s,t){super(e,s,t);}}s$r.prototype.type="warning";

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
function e$n(e){return !!e&&e.prototype&&e.prototype.declaredClass&&0===e.prototype.declaredClass.indexOf("esri.core.Collection")}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
const i$m=s$E.getLogger("esri.core.accessorSupport.extensions.serializableProperty.reader");function p$h(t,r,n){t&&(!n&&!r.read||r.read?.reader||!1===r.read?.enabled||l$j(t)&&o$B("read.reader",u$p(t),r));}function u$p(t){const e=t.ndimArray??0;if(e>1)return c$r(t);if(1===e)return a$l(t);if("type"in t&&d$i(t.type)){const e=t.type.prototype?.itemType?.Type,r=a$l("function"==typeof e?{type:e}:{types:e});return (e,n,o)=>{const i=r(e,n,o);return i?new t.type(i):i}}return s$q(t)}function s$q(t){return "type"in t?y$c(t.type):g$a(t.types)}function y$c(t){return t.prototype.read?(e,r,n)=>{if(null==e)return e;const o=typeof e;if("object"!==o)return void i$m.error(`Expected JSON value of type 'object' to deserialize type '${t.prototype.declaredClass}', but got '${o}'`);const p=new t;return p.read(e,n),p}:t.fromJSON}function f$n(t,e,r,n){return 0!==n&&Array.isArray(e)?e.map((e=>f$n(t,e,r,n-1))):t(e,void 0,r)}function c$r(t){const e=s$q(t),r=f$n.bind(null,e),n=t.ndimArray??0;return (t,e,o)=>{if(null==t)return t;t=r(t,o,n);let i=n,p=t;for(;i>0&&Array.isArray(p);)i--,p=p[0];if(void 0!==p)for(let r=0;r<i;r++)t=[t];return t}}function a$l(t){const e=s$q(t);return (t,r,n)=>{if(null==t)return t;if(Array.isArray(t)){const r=[];for(const o of t){const t=e(o,void 0,n);void 0!==t&&r.push(t);}return r}const o=e(t,void 0,n);return void 0!==o?[o]:void 0}}function d$i(t){if(!e$n(t))return !1;const e=t.prototype.itemType;return !(!e||!e.Type)&&("function"==typeof e.Type?m$f(e.Type):j$6(e.Type))}function l$j(t){return "types"in t?j$6(t.types):m$f(t.type)}function m$f(t){return !Array.isArray(t)&&(!!t&&t.prototype&&("read"in t.prototype||"fromJSON"in t||d$i(t)))}function j$6(t){for(const e in t.typeMap){if(!m$f(t.typeMap[e]))return !1}return !0}function g$a(t){let e=null;const n=t.errorContext??"type";return (o,p,u)=>{if(null==o)return o;const s=typeof o;if("object"!==s)return void i$m.error(`Expected JSON value of type 'object' to deserialize, but got '${s}'`);e||(e=v$5(t));const y=t.key;if("string"!=typeof y)return;const f=o[y],c=f?e[f]:t.defaultKeyValue?t.typeMap[t.defaultKeyValue]:void 0;if(!c){const t=`Type '${f||"unknown"}' is not supported`;return u&&u.messages&&o&&u.messages.push(new s$r(`${n}:unsupported`,t,{definition:o,context:u})),void i$m.error(t)}const a=new c;return a.read(o,u),a}}function v$5(t){const e={};for(const r in t.typeMap){const o=t.typeMap[r],i=r$m(o.prototype);if("function"==typeof t.key)continue;const p=i[t.key];if(!p)continue;p.json?.type&&Array.isArray(p.json.type)&&1===p.json.type.length&&"string"==typeof p.json.type[0]&&(e[p.json.type[0]]=o);const u=p.json?.write;if(!u||!u.writer){e[r]=o;continue}const s=u.target,y="string"==typeof s?s:t.key,f={};u.writer(r,f,y),f[y]&&(e[f[y]]=o);}return e}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
function e$m(e){if(e.json||(e.json={}),o$o(e.json),n$j(e.json),r$f(e.json),e.json.origins)for(const t in e.json.origins)o$o(e.json.origins[t]),n$j(e.json.origins[t]),r$f(e.json.origins[t]);return !0}function r$f(e){e.name&&(e.read&&"object"==typeof e.read?void 0===e.read.source&&(e.read.source=e.name):e.read={source:e.name},e.write&&"object"==typeof e.write?void 0===e.write.target&&(e.write.target=e.name):e.write={target:e.name});}function o$o(e){"boolean"==typeof e.read?e.read={enabled:e.read}:"function"==typeof e.read?e.read={enabled:!0,reader:e.read}:e.read&&"object"==typeof e.read&&void 0===e.read.enabled&&(e.read.enabled=!0);}function n$j(e){"boolean"==typeof e.write?e.write={enabled:e.write}:"function"==typeof e.write?e.write={enabled:!0,writer:e.write}:e.write&&"object"==typeof e.write&&void 0===e.write.enabled&&(e.write.enabled=!0);}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
function i$l(r,e){if(!e.write||e.write.writer||!1===e.write.enabled&&!e.write.overridePolicy)return;const t=r?.ndimArray??0;r&&(1===t||"type"in r&&e$n(r.type))?e.write.writer=a$k:t>1?e.write.writer=l$i(t):e.types?Array.isArray(e.types)?e.write.writer=f$m(e.types[0]):e.write.writer=o$n(e.types):e.write.writer=s$p;}function o$n(r){return (e,t,n,i)=>e?u$o(e,r,i)?s$p(e,t,n,i):void 0:s$p(e,t,n,i)}function u$o(t,n,i){for(const r in n.typeMap)if(t instanceof n.typeMap[r])return !0;if(i?.messages){const o=n.errorContext??"type",u=`Values of type '${("function"!=typeof n.key?t[n.key]:t.declaredClass)??"Unknown"}' cannot be written`;i&&i.messages&&t&&i.messages.push(new s$C(`${o}:unsupported`,u,{definition:t,context:i})),s$E.getLogger("esri.core.accessorSupport.extensions.serializableProperty.writer").error(u);}return !1}function f$m(r){return (e,t,n,i)=>{if(!e||!Array.isArray(e))return s$p(e,t,n,i);return s$p(e.filter((e=>u$o(e,r,i))),t,n,i)}}function s$p(r,e,n,i){o$B(n,p$g(r,i),e);}function p$g(r,e){return r&&"function"==typeof r.write?r.write({},e):r&&"function"==typeof r.toJSON?r.toJSON():"number"==typeof r?y$b(r):r}function y$b(r){return r===-1/0?-Number.MAX_VALUE:r===1/0?Number.MAX_VALUE:isNaN(r)?null:r}function a$k(r,e,n,i){let o;null===r?o=null:r&&"function"==typeof r.map?(o=r.map((r=>p$g(r,i))),"function"==typeof o.toArray&&(o=o.toArray())):o=[p$g(r,i)],o$B(n,o,e);}function c$q(r,e,t){return 0!==t&&Array.isArray(r)?r.map((r=>c$q(r,e,t-1))):p$g(r,e)}function l$i(r){return (e,n,i,o)=>{let u;if(null===e)u=null;else {u=c$q(e,o,r);let t=r,n=u;for(;t>0&&Array.isArray(n);)t--,n=n[0];if(void 0!==n)for(let r=0;r<t;r++)u=[u];}o$B(i,u,n);}}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
function o$m(r,i){return y$a(r,"any",i?.origin)}function s$o(r,i){return y$a(r,"read",i?.origin)}function a$j(r,i){return y$a(r,"write",i?.origin)}function y$a(r,i,n){let e=r?.json;if(e?.origins&&n){let r;r="link-chart"===n?e.origins[n]&&("any"===i||i in e.origins[n])?e.origins[n]:e.origins["web-map"]:e.origins[n],r&&("any"===i||i in r)&&(e=r);}return e}function p$f(r){const i=f$l(r);if(r.json.origins)for(const e in r.json.origins){const o=r.json.origins[e],s=o.types?u$n(o):i;p$h(s,o,!1),o.types&&!o.write&&r.json.write&&r.json.write.enabled&&(o.write={...r.json.write}),i$l(s,o);}p$h(i,r.json,!0),i$l(i,r.json);}function f$l(r){return r.json.types?j$5(r.json):r.type?c$p(r):j$5(r)}function u$n(r){return r.type?c$p(r):j$5(r)}function c$p(i){if(!i.type)return;let n=0,e=i.type;for(;Array.isArray(e)&&!k$5(e);)e=e[0],n++;return {type:e,ndimArray:n}}function j$5(r){if(!r.types)return;let i=0,n=r.types;for(;Array.isArray(n);)n=n[0],i++;return {types:n,ndimArray:i}}function l$h(r){e$m(r)&&(n$k(r),p$f(r));}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
const i$k=new Set,n$i=new Set;function a$i(t){return o=>{o.prototype.declaredClass=t,l$g(o);const s=[],a=[];let c=o.prototype;for(;c;)c.hasOwnProperty("initialize")&&!i$k.has(c.initialize)&&(i$k.add(c.initialize),s.push(c.initialize)),c.hasOwnProperty("destroy")&&!n$i.has(c.destroy)&&(n$i.add(c.destroy),a.push(c.destroy)),c=Object.getPrototypeOf(c);i$k.clear(),n$i.clear();class p extends o{constructor(...t){if(super(...t),this.constructor===p&&"function"==typeof this.postscript){if(s.length&&Object.defineProperty(this,"initialize",{enumerable:!1,configurable:!0,value(){for(let e=s.length-1;e>=0;e--)s[e].call(this);}}),a.length){let t=!1;const r=this[o$y];Object.defineProperty(this,"destroy",{enumerable:!1,configurable:!0,value(){if(!t){t=!0,r.call(this);for(let e=0;e<a.length;e++)a[e].call(this);}}});}this.postscript(...t);}}}return p.__accessorMetadata__=r$m(o.prototype),p.prototype.declaredClass=t,p}}function c$o(e,t){return null==t.get?function(){const t=this.__accessor__,r=t.propertiesByName.get(e);if(void 0===r)return;i$q(r.observerObject);const s=t.store;return s.has(e)?s.get(e):r.metadata.value}:function(){const t=this.__accessor__,r=t.propertiesByName.get(e);if(void 0!==r)return r.getComputed(t)}}function l$g(e){const o=e.prototype,i=r$m(o),n={};for(const r of Object.getOwnPropertyNames(i)){const e=i[r];l$h(e),n[r]={enumerable:!0,configurable:!0,get:c$o(r,e),set(o){const s=this.__accessor__;if(void 0!==s){if(!Object.isFrozen(this)){if(s.initialized&&e.readOnly)throw new TypeError(`[accessor] cannot assign to read-only property '${r}' of ${this.declaredClass}`);if(s.lifecycle===I$4.CONSTRUCTED&&e.constructOnly)throw new TypeError(`[accessor] cannot assign to construct-only property '${r}' of ${this.declaredClass}`);s.set(r,o);}}else Object.defineProperty(this,r,{enumerable:!0,configurable:!0,writable:!0,value:o});}};}Object.defineProperties(e.prototype,n);}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
var u$m,p$e;function d$h(t){if(null==t)return {value:t};if(Array.isArray(t))return {type:[t[0]],value:null};switch(typeof t){case"object":return t.constructor?.__accessorMetadata__||t instanceof Date?{type:t.constructor,value:t}:t;case"boolean":return {type:Boolean,value:t};case"string":return {type:String,value:t};case"number":return {type:Number,value:t};case"function":return {type:t,value:null};default:return}}const y$9=Symbol("Accessor-Handles"),f$k=Symbol("Accessor-Initialized");class m$e{static createSubclass(t={}){if(Array.isArray(t))throw new Error("Multi-inheritance unsupported since 4.16");const{properties:r,declaredClass:e,constructor:s}=t;delete t.declaredClass,delete t.properties,delete t.constructor;const i=this;class c extends i{constructor(...t){super(...t),this.inherited=null,s&&s.apply(this,t);}}r$m(c.prototype);for(const o in t){const r=t[o];c.prototype[o]="function"==typeof r?function(...t){const e=this.inherited;let s;this.inherited=function(...t){if(i.prototype[o])return i.prototype[o].apply(this,t)};try{s=r.apply(this,t);}catch(c){throw this.inherited=e,c}return this.inherited=e,s}:t[o];}for(const o in r){const t=d$h(r[o]);y$d(t)(c.prototype,o);}return a$i(e)(c)}constructor(...t){if(this[u$m]=null,this[p$e]=!1,this.constructor===m$e)throw new Error("[accessor] cannot instantiate Accessor. This can be fixed by creating a subclass of Accessor");const r=new m$j(this);Object.defineProperty(this,"__accessor__",{enumerable:!1,value:r}),t.length>0&&this.normalizeCtorArgs&&(r.ctorArgs=this.normalizeCtorArgs.apply(this,t)),t$m()?.onInstanceConstruct(this),v$4.register(this,r.propertiesByName,this);}postscript(t){const r=this.__accessor__,e=r.ctorArgs||t;r.initialize(),e&&(this.set(e),r.ctorArgs=null),r.constructed(),this.initialize(),this[f$k]=!0;}initialize(){}[o$y](){this[y$9]=l$s(this[y$9]);}destroy(){this.destroyed||(v$4.unregister(this),g$c(this),this.__accessor__.destroy(),t$m()?.onInstanceDestroy(this));}get constructed(){return this.__accessor__&&this.__accessor__.initialized||!1}get initialized(){return this[f$k]}get destroyed(){return this.__accessor__&&this.__accessor__.destroyed||!1}commitProperty(t){this.get(t);}get(t){return o$w(this,t)}hasOwnProperty(t){return this.__accessor__?this.__accessor__.has(t):Object.prototype.hasOwnProperty.call(this,t)}keys(){return this.__accessor__?this.__accessor__.keys():[]}set(t,r){return t$n(this,t,r),this}watch(t,r,e){return T$3(this,t,r,e)}own(t){this.addHandles(t);}addHandles(r,e){if(this.destroyed){const t=Array.isArray(r)?r:[r];for(const r of t)r.remove();return}let s=this[y$9];null==s&&(s=this[y$9]=new t$r),s.add(r,e);}removeHandles(t){const r=this[y$9];null!=r&&r.remove(t);}removeAllHandles(){const t=this[y$9];null!=t&&t.removeAll();}hasHandles(t){const r=this[y$9];return null!=r&&r.has(t)}_override(t,r){void 0===r?this.__accessor__.clearOverride(t):this.__accessor__.override(t,r);}_clearOverride(t){return this.__accessor__.clearOverride(t)}_overrideIfSome(t,r){null==r?this.__accessor__.clearOverride(t):this.__accessor__.override(t,r);}_isOverridden(t){return this.__accessor__.isOverridden(t)}notifyChange(t){this.__accessor__.notifyChange(t);}_get(t){return this.__accessor__.internalGet(t)}_set(t,r){return this.__accessor__.internalSet(t,r),this}}u$m=y$9,p$e=f$k;const v$4=new FinalizationRegistry((t=>{for(const r of t.values())r.destroy();}));

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
class s$n{constructor(){this._values=new Map,this.multipleOriginsSupported=!1;}clone(e){const t=new s$n;return this._values.forEach(((s,r)=>{e&&e.has(r)||t.set(r,a$v(s.value),s.origin);})),t}get(i,e){e=this._normalizeOrigin(e);const s=this._values.get(i);return null==e||s?.origin===e?s?.value:void 0}originOf(i){return this._values.get(i)?.origin??r$k.USER}keys(i){i=this._normalizeOrigin(i);const e=[...this._values.keys()];return null==i?e:e.filter((e=>this._values.get(e)?.origin===i))}set(i,s,r){if((r=this._normalizeOrigin(r))===r$k.DEFAULTS){const e=this._values.get(i);if(e&&null!=e.origin&&e.origin>r)return}this._values.set(i,new t$e(s,r));}delete(i,e){null!=(e=this._normalizeOrigin(e))&&this._values.get(i)?.origin!==e||this._values.delete(i);}has(i,e){return null!=(e=this._normalizeOrigin(e))?this._values.get(i)?.origin===e:this._values.has(i)}forEach(i){this._values.forEach((({value:e},s)=>i(e,s)));}_normalizeOrigin(i){if(null!=i)return i===r$k.DEFAULTS?i:r$k.USER}}class t$e{constructor(i,e){this.value=i,this.origin=e;}}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
function e$l(e,r,n){r.keys().forEach((e=>{n.set(e,r.get(e),r$k.DEFAULTS);}));const o=e.metadatas;Object.keys(o).forEach((r=>{e.internalGet(r)&&n.set(r,e.internalGet(r),r$k.DEFAULTS);}));}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
function s$m(e,r,o){if(!e||!e.read||!1===e.read.enabled||!e.read.source)return !1;const n=e.read.source;if("string"==typeof n){if(n===r)return !0;if(n.includes(".")&&0===n.indexOf(r)&&s$z(n,o))return !0}else for(const s of n){if(s===r)return !0;if(s.includes(".")&&0===s.indexOf(r)&&s$z(s,o))return !0}return !1}function i$j(e){return e&&(!e.read||!1!==e.read.enabled&&!e.read.source)}function f$j(e,t,r,n,f){let a=s$o(t[r],f);i$j(a)&&(e[r]=!0);for(const i of Object.getOwnPropertyNames(t))a=s$o(t[i],f),s$m(a,r,n)&&(e[i]=!0);}function a$h(e,t,r,o){const s=r.metadatas,i=o$m(s[t],o),f=i?.default;if(void 0===f)return;const a="function"==typeof f?f.call(e,t,o):f;void 0!==a&&r.set(t,a);}const c$n={origin:"service"};function u$l(t,n,s=c$n){if(!n||"object"!=typeof n)return;const i=e$v(t),u=i.metadatas,d={};for(const e of Object.getOwnPropertyNames(n))f$j(d,u,e,n,s);i.setDefaultOrigin(s.origin);for(const r of Object.getOwnPropertyNames(d)){const f=s$o(u[r],s).read,a=f&&f.source;let c;c=a&&"string"==typeof a?u$v(n,a):n[r],f&&f.reader&&(c=f.reader.call(t,c,n,s)),void 0!==c&&i.set(r,c);}if(!s||!s.ignoreDefaults){i.setDefaultOrigin("defaults");for(const e of Object.getOwnPropertyNames(u))d[e]||a$h(t,e,i,s);}i.setDefaultOrigin("user");}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
function a$g(r,e,t,i,o){const n={};return e.write?.writer?.call(r,i,n,t,o),n}function f$i(r,i,s,u,l,a){if(!u||!u.write)return !1;const f=r.get(s);if(!l&&u.write.overridePolicy){const e=u.write.overridePolicy.call(r,f,s,a??void 0);void 0!==e&&(l=e);}if(l||(l=u.write),!l||!1===l.enabled)return !1;if((null===f&&!l.allowNull&&!l.writerEnsuresNonNull||void 0===f)&&l.isRequired){const i=new s$C("web-document-write:property-required",`Missing value for required property '${s}' on '${r.declaredClass}'`,{propertyName:s,target:r});return i&&a&&a.messages?a.messages.push(i):i&&!a&&s$E.getLogger("esri.core.accessorSupport.write").error(i.name,i.message),!1}if(void 0===f)return !1;if(null===f&&!l.allowNull&&!l.writerEnsuresNonNull)return !1;if(!l.alwaysWriteDefaults&&(!i.store.multipleOriginsSupported||i.store.originOf(s)===r$k.DEFAULTS)&&p$d(r,s,a,u,f))return !1;if(!l.ignoreOrigin&&a&&a.origin&&i.store.multipleOriginsSupported){if(i.store.originOf(s)<n$p(a.origin))return !1}return !0}function p$d(e,t,i,o,n){const s=o.default;if(void 0===s)return !1;if(null!=o.defaultEquals)return o.defaultEquals(n);if("function"==typeof s){if(Array.isArray(n)){const o=s.call(e,t,i??void 0);return s$G(o,n)}return !1}return s===n}function g$9(r,e,t){if(r&&"function"==typeof r.toJSON&&(!r.toJSON.isDefaultToJSON||!r.write))return o$x(e,r.toJSON(t));const o=e$v(r),n=o.metadatas;for(const s in n){const p=a$j(n[s],t);if(!f$i(r,o,s,p,void 0,t))continue;const c=r.get(s),g=a$g(r,p,p.write&&"string"==typeof p.write.target?p.write.target:s,c,t);Object.keys(g).length>0&&(e=o$x(e,g),t?.resources?.pendingOperations?.length&&t.resources.pendingOperations.push(Promise.all(t.resources.pendingOperations).then((()=>o$x(e,g,(()=>"replace-arrays"))))),t&&t.writtenProperties&&t.writtenProperties.push({target:r,propName:s,oldOrigin:c$v(o.store.originOf(s)),newOrigin:t.origin}));}return e}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
const u$k=t=>{let u=class extends t{constructor(...r){super(...r);const t=p$m(e$v(this)),i=t.store,p=new s$n;t.store=p,e$l(t,i,p);}read(r,t){u$l(this,r,t);}write(r,t){return g$9(this,r??{},t)}toJSON(r){return this.write({},r)}static fromJSON(r,t){return n$h.call(this,r,t)}};return u=e$x([a$i("esri.core.JSONSupport")],u),u.prototype.toJSON.isDefaultToJSON=!0,u};function n$h(r,t){if(!r)return null;if(r.declaredClass)throw new Error("JSON object is already hydrated");const s=new this;return s.read(r,t),s}let l$f=class extends(u$k(m$e)){};l$f=e$x([a$i("esri.core.JSONSupport")],l$f);

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
function o$l(o,e,t){let a,c;return void 0===e||Array.isArray(e)?(c=o,t=e,a=[void 0]):(c=e,a=Array.isArray(o)?o:[o]),(o,e)=>{const d=o.constructor.prototype;a.forEach((a=>{const s=d$j(o,a,c);s.read&&"object"==typeof s.read||(s.read={}),s.read.reader=d[e],t&&(s.read.source=(s.read.source||[]).concat(t));}));}}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
class s$l{constructor(s,o={ignoreUnknown:!1,useNumericKeys:!1}){this._jsonToAPI=s,this._options=o,this.apiValues=[],this.jsonValues=[],this._apiToJSON=this._invertMap(s),this.apiValues=this._getKeysSorted(this._apiToJSON),this.jsonValues=this._getKeysSorted(this._jsonToAPI),this.read=t=>this.fromJSON(t),this.write=(s,o,i)=>{const n=this.toJSON(s);void 0!==n&&o$B(i,n,o);},this.write.isJSONMapWriter=!0;}toJSON(t){if(null==t)return null;if(this._apiToJSON.hasOwnProperty(t)){const s=this._apiToJSON[t];return this._options.useNumericKeys?+s:s}return this._options.ignoreUnknown?void 0:t}fromJSON(t){return null!=t&&this._jsonToAPI.hasOwnProperty(t)?this._jsonToAPI[t]:this._options.ignoreUnknown?void 0:t}_invertMap(t){const s={};for(const o in t)s[t[o]]=o;return s}_getKeysSorted(t){const s=[];for(const o in t)s.push(o);return s.sort(),s}}function o$k(){return function(t,o){return new s$l(t,{ignoreUnknown:!0,...o})}}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
class i$i{constructor(i,s,t,e){this.semiMajorAxis=i,this.flattening=s,this.outerAtmosphereRimWidth=t;const h=1-this.flattening;this.semiMinorAxis=this.semiMajorAxis*h,this.halfSemiMajorAxis=this.semiMajorAxis/2,this.halfCircumference=Math.PI*this.semiMajorAxis,this.metersPerDegree=this.halfCircumference/180,this.inverseFlattening=1/(1-this.flattening)-1,this.eccentricitySquared=e||2*this.flattening-this.flattening*this.flattening,this.meanRadiusSemiAxes=(2*this.semiMajorAxis+this.semiMinorAxis)/3;}get radius(){return this.semiMajorAxis}}const s$k=new i$i(6378137,1/298.257223563,3e5,.006694379990137799),t$d=new i$i(3396190,1/169.8944472236118,23e4),e$k=new i$i(1737400,0,0);

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
var S$5;!function(S){S[S.CGCS2000=4490]="CGCS2000",S[S.GCSMARS2000=104971]="GCSMARS2000",S[S.GCSMARS2000_SPHERE=104905]="GCSMARS2000_SPHERE",S[S.GCSMOON2000=104903]="GCSMOON2000";}(S$5||(S$5={}));

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
let o$j;const r$e={values:[1,.3048,.3048006096012192,.3047972654,.9143917962,.201166195164,.9143984146160287,.3047994715386762,20.11676512155263,20.11678249437587,.9143985307444408,.91439523,.3047997101815088,20.1168,20.116756,5e4,15e4],units:["Meter","Foot","Foot_US","Foot_Clarke","Yard_Clarke","Link_Clarke","Yard_Sears","Foot_Sears","Chain_Sears","Chain_Benoit_1895_B","Yard_Indian","Yard_Indian_1937","Foot_Gold_Coast","Chain","Chain_Sears_1922_Truncated","50_Kilometers","150_Kilometers"],2066:5,2136:12,2155:2,2157:0,2158:0,2159:12,2160:12,2204:2,2219:0,2220:0,2254:2,2255:2,2256:1,2265:1,2266:1,2267:2,2268:2,2269:1,2270:1,2271:2,2272:2,2273:1,2294:0,2295:0,2314:3,2899:2,2900:2,2901:1,2909:1,2910:1,2911:2,2912:2,2913:1,2914:1,2992:1,2993:0,2994:1,3080:1,3089:2,3090:0,3091:2,3102:2,3141:0,3142:0,3167:14,3359:2,3360:0,3361:1,3362:0,3363:2,3364:0,3365:2,3366:3,3404:2,3405:0,3406:0,3407:3,3439:0,3440:0,3479:1,3480:0,3481:1,3482:0,3483:1,3484:0,3485:2,3486:0,3487:2,3488:0,3489:0,3490:2,3491:0,3492:2,3493:0,3494:2,3495:0,3496:2,3497:0,3498:2,3499:0,3500:2,3501:0,3502:2,3503:0,3504:2,3505:0,3506:2,3507:0,3508:2,3509:0,3510:2,3511:0,3512:2,3513:0,3514:0,3515:2,3516:0,3517:2,3518:0,3519:2,3520:0,3521:2,3522:0,3523:2,3524:0,3525:2,3526:0,3527:2,3528:0,3529:2,3530:0,3531:2,3532:0,3533:2,3534:0,3535:2,3536:0,3537:2,3538:0,3539:2,3540:0,3541:2,3542:0,3543:2,3544:0,3545:2,3546:0,3547:2,3548:0,3549:2,3550:0,3551:2,3552:0,3553:2,3582:2,3583:0,3584:2,3585:0,3586:2,3587:0,3588:1,3589:0,3590:1,3591:0,3592:0,3593:1,3598:2,3599:0,3600:2,3605:1,3606:0,3607:0,3608:2,3609:0,3610:2,3611:0,3612:2,3613:0,3614:2,3615:0,3616:2,3617:0,3618:2,3619:0,3620:2,3621:0,3622:2,3623:0,3624:2,3625:0,3626:2,3627:0,3628:2,3629:0,3630:2,3631:0,3632:2,3633:0,3634:1,3635:0,3636:1,3640:2,3641:0,3642:2,3643:0,3644:1,3645:0,3646:1,3647:0,3648:1,3649:0,3650:2,3651:0,3652:2,3653:0,3654:2,3655:0,3656:1,3657:0,3658:2,3659:0,3660:2,3661:0,3662:2,3663:0,3664:2,3668:2,3669:0,3670:2,3671:0,3672:2,3673:0,3674:2,3675:0,3676:1,3677:2,3678:0,3679:1,3680:2,3681:0,3682:1,3683:2,3684:0,3685:0,3686:2,3687:0,3688:2,3689:0,3690:2,3691:0,3692:2,3696:2,3697:0,3698:2,3699:0,3700:2,3793:0,3794:0,3812:0,3854:0,3857:0,3920:0,3978:0,3979:0,3991:2,3992:2,4026:0,4037:0,4038:0,4071:0,4082:0,4083:0,4087:0,4088:0,4217:2,4414:0,4415:0,4417:0,4434:0,4437:0,4438:2,4439:2,4462:0,4467:0,4471:0,4474:0,4559:0,4647:0,4822:0,4826:0,4839:0,5018:0,5041:0,5042:0,5048:0,5167:0,5168:0,5221:0,5223:0,5234:0,5235:0,5243:0,5247:0,5266:0,5316:0,5320:0,5321:0,5325:0,5337:0,5361:0,5362:0,5367:0,5382:0,5383:0,5396:0,5456:0,5457:0,5469:0,5472:4,5490:0,5513:0,5514:0,5523:0,5559:0,5588:1,5589:3,5596:0,5627:0,5629:0,5641:0,5643:0,5644:0,5646:2,5654:2,5655:2,5659:0,5700:0,5825:0,5836:0,5837:0,5839:0,5842:0,5844:0,5858:0,5879:0,5880:0,5887:0,5890:0,6128:1,6129:1,6141:1,6204:0,6210:0,6211:0,6307:0,6312:0,6316:0,6362:0,6391:1,6405:1,6406:0,6407:1,6408:0,6409:1,6410:0,6411:2,6412:0,6413:2,6414:0,6415:0,6416:2,6417:0,6418:2,6419:0,6420:2,6421:0,6422:2,6423:0,6424:2,6425:0,6426:2,6427:0,6428:2,6429:0,6430:2,6431:0,6432:2,6433:0,6434:2,6435:0,6436:2,6437:0,6438:2,6439:0,6440:0,6441:2,6442:0,6443:2,6444:0,6445:2,6446:0,6447:2,6448:0,6449:2,6450:0,6451:2,6452:0,6453:2,6454:0,6455:2,6456:0,6457:2,6458:0,6459:2,6460:0,6461:2,6462:0,6463:2,6464:0,6465:2,6466:0,6467:2,6468:0,6469:2,6470:0,6471:2,6472:0,6473:2,6474:0,6475:2,6476:0,6477:2,6478:0,6479:2,6484:2,6485:0,6486:2,6487:0,6488:2,6489:0,6490:2,6491:0,6492:2,6493:0,6494:1,6495:0,6496:1,6497:0,6498:0,6499:1,6500:0,6501:2,6502:0,6503:2,6504:0,6505:2,6506:0,6507:2,6508:0,6509:0,6510:2,6515:1,6516:0,6518:0,6519:2,6520:0,6521:2,6522:0,6523:2,6524:0,6525:2,6526:0,6527:2,6528:0,6529:2,6530:0,6531:2,6532:0,6533:2,6534:0,6535:2,6536:0,6537:2,6538:0,6539:2,6540:0,6541:2,6542:0,6543:2,6544:0,6545:1,6546:0,6547:1,6548:0,6549:2,6550:0,6551:2,6552:0,6553:2,6554:0,6555:2,6556:0,6557:1,6558:0,6559:1,6560:0,6561:1,6562:0,6563:2,6564:0,6565:2,6566:0,6567:0,6568:2,6569:0,6570:1,6571:0,6572:2,6573:0,6574:2,6575:0,6576:2,6577:0,6578:2,6582:2,6583:0,6584:2,6585:0,6586:2,6587:0,6588:2,6589:0,6590:2,6591:0,6592:0,6593:2,6594:0,6595:2,6596:0,6597:2,6598:0,6599:2,6600:0,6601:2,6602:0,6603:2,6605:2,6606:0,6607:2,6608:0,6609:2,6610:0,6611:0,6612:2,6613:0,6614:2,6615:0,6616:2,6617:0,6618:2,6633:2,6646:0,6703:0,6784:0,6785:1,6786:0,6787:1,6788:0,6789:1,6790:0,6791:1,6792:0,6793:1,6794:0,6795:1,6796:0,6797:1,6798:0,6799:1,6800:0,6801:1,6802:0,6803:1,6804:0,6805:1,6806:0,6807:1,6808:0,6809:1,6810:0,6811:1,6812:0,6813:1,6814:0,6815:1,6816:0,6817:1,6818:0,6819:1,6820:0,6821:1,6822:0,6823:1,6824:0,6825:1,6826:0,6827:1,6828:0,6829:1,6830:0,6831:1,6832:0,6833:1,6834:0,6835:1,6836:0,6837:1,6838:0,6839:1,6840:0,6841:1,6842:0,6843:1,6844:0,6845:1,6846:0,6847:1,6848:0,6849:1,6850:0,6851:1,6852:0,6853:1,6854:0,6855:1,6856:0,6857:1,6858:0,6859:1,6860:0,6861:1,6862:0,6863:1,6867:0,6868:1,6870:0,6875:0,6876:0,6879:0,6880:2,6884:0,6885:1,6886:0,6887:1,6915:0,6922:0,6923:2,6924:0,6925:2,6962:0,6984:0,6991:0,7128:2,7131:0,7132:2,7142:0,7257:0,7258:2,7259:0,7260:2,7261:0,7262:2,7263:0,7264:2,7265:0,7266:2,7267:0,7268:2,7269:0,7270:2,7271:0,7272:2,7273:0,7274:2,7275:0,7276:2,7277:0,7278:2,7279:0,7280:2,7281:0,7282:2,7283:0,7284:2,7285:0,7286:2,7287:0,7288:2,7289:0,7290:2,7291:0,7292:2,7293:0,7294:2,7295:0,7296:2,7297:0,7298:2,7299:0,7300:2,7301:0,7302:2,7303:0,7304:2,7305:0,7306:2,7307:0,7308:2,7309:0,7310:2,7311:0,7312:2,7313:0,7314:2,7315:0,7316:2,7317:0,7318:2,7319:0,7320:2,7321:0,7322:2,7323:0,7324:2,7325:0,7326:2,7327:0,7328:2,7329:0,7330:2,7331:0,7332:2,7333:0,7334:2,7335:0,7336:2,7337:0,7338:2,7339:0,7340:2,7341:0,7342:2,7343:0,7344:2,7345:0,7346:2,7347:0,7348:2,7349:0,7350:2,7351:0,7352:2,7353:0,7354:2,7355:0,7356:2,7357:0,7358:2,7359:0,7360:2,7361:0,7362:2,7363:0,7364:2,7365:0,7366:2,7367:0,7368:2,7369:0,7370:2,7877:0,7878:0,7882:0,7883:0,7887:0,7899:0,7991:0,7992:0,8035:2,8036:2,8058:0,8059:0,8082:0,8083:0,8088:0,8090:0,8091:2,8092:0,8093:2,8095:0,8096:2,8097:0,8098:2,8099:0,8100:2,8101:0,8102:2,8103:0,8104:2,8105:0,8106:2,8107:0,8108:2,8109:0,8110:2,8111:0,8112:2,8113:0,8114:2,8115:0,8116:2,8117:0,8118:2,8119:0,8120:2,8121:0,8122:2,8123:0,8124:2,8125:0,8126:2,8127:0,8128:2,8129:0,8130:2,8131:0,8132:2,8133:0,8134:2,8135:0,8136:2,8137:0,8138:2,8139:0,8140:2,8141:0,8142:2,8143:0,8144:2,8145:0,8146:2,8147:0,8148:2,8149:0,8150:2,8151:0,8152:2,8153:0,8154:2,8155:0,8156:2,8157:0,8158:2,8159:0,8160:2,8161:0,8162:2,8163:0,8164:2,8165:0,8166:2,8167:0,8168:2,8169:0,8170:2,8171:0,8172:2,8173:0,8177:2,8179:0,8180:2,8181:0,8182:2,8184:0,8185:2,8187:0,8189:2,8191:0,8193:2,8196:0,8197:2,8198:0,8200:2,8201:0,8202:2,8203:0,8204:2,8205:0,8206:2,8207:0,8208:2,8209:0,8210:2,8212:0,8213:2,8214:0,8216:2,8218:0,8220:2,8222:0,8224:2,8225:0,8226:2,8311:0,8312:1,8313:0,8314:1,8315:0,8316:1,8317:0,8318:1,8319:0,8320:1,8321:0,8322:1,8323:0,8324:1,8325:0,8326:1,8327:0,8328:1,8329:0,8330:1,8331:0,8332:1,8333:0,8334:1,8335:0,8336:1,8337:0,8338:1,8339:0,8340:1,8341:0,8342:1,8343:0,8344:1,8345:0,8346:1,8347:0,8348:1,8352:0,8353:0,8379:0,8380:2,8381:0,8382:2,8383:0,8384:2,8385:0,8387:2,8391:0,8395:0,8433:0,8441:0,8455:0,8456:0,8531:2,8682:0,8686:0,8687:0,8692:0,8693:0,8826:0,8903:0,8950:0,8951:0,9039:0,9040:0,9141:0,9149:0,9150:0,9191:0,9221:0,9222:0,9249:0,9250:0,9252:0,9254:0,9265:0,9284:0,9285:0,9300:0,9354:0,9367:0,9373:0,9377:0,9387:0,9391:0,9456:0,9473:0,9498:0,9674:0,9678:0,9680:0,9709:0,9712:0,9713:0,9716:0,9741:0,9748:2,9749:2,9761:0,9766:0,9793:0,9794:0,9869:0,9874:0,9875:0,9880:0,9943:0,9945:0,9947:0,9967:0,9972:0,9977:0,20042:0,20050:1,20499:0,20538:0,20539:0,20790:0,20791:0,21291:0,21292:0,21500:0,21817:0,21818:0,22032:0,22033:0,22091:0,22092:0,22239:0,22240:0,22332:0,22337:0,22338:0,22391:0,22392:0,22639:0,22700:0,22739:0,22770:0,22780:0,22832:0,23090:0,23095:0,23239:0,23240:0,23433:0,23700:0,24047:0,24048:0,24100:3,24200:0,24305:0,24306:0,24382:10,24383:0,24500:0,24547:0,24548:0,24571:9,24600:0,25e3:0,25231:0,25884:0,25932:0,26237:0,26331:0,26332:0,26432:0,26591:0,26592:0,26632:0,26692:0,27120:0,27200:0,27291:6,27292:6,27429:0,27492:0,27493:0,27500:0,27700:0,28232:0,28600:0,28991:0,28992:0,29100:0,29101:0,29220:0,29221:0,29333:0,29635:0,29636:0,29701:0,29738:0,29739:0,29849:0,29850:0,29871:8,29872:7,29873:0,29874:0,30200:5,30339:0,30340:0,30591:0,30592:0,30791:0,30792:0,30800:0,31028:0,31121:0,31154:0,31170:0,31171:0,31370:0,31528:0,31529:0,31600:0,31700:0,31838:0,31839:0,31900:0,31901:0,32061:0,32062:0,32098:0,32099:2,32100:0,32104:0,32161:0,32766:0,53048:0,53049:0,54090:0,54091:0,65061:2,65062:2,65161:0,65163:0,102041:2,102064:11,102068:15,102069:16,102118:2,102119:1,102120:2,102121:2,102217:2,102218:0,102219:2,102220:2,102378:1,102379:1,102380:0,102381:1,102589:2,102599:2,102600:2,102604:2,102647:0,102704:2,102705:2,102706:0,102731:0,102732:0,102759:1,102760:1,102761:2,102762:0,102763:2,102764:0,102765:0,102766:2,102970:1,102974:2,102993:0,102994:0,102995:2,102996:2,103015:0,103016:2,103017:0,103018:2,103025:0,103026:0,103027:2,103028:2,103035:0,103036:0,103037:2,103038:2,103039:0,103040:0,103041:2,103042:2,103043:0,103044:0,103045:2,103046:2,103047:0,103048:0,103049:2,103050:2,103051:0,103052:2,103053:0,103054:2,103055:0,103056:2,103057:0,103058:0,103059:2,103060:2,103061:0,103062:0,103063:2,103064:2,103069:2,103070:0,103071:0,103072:2,103073:2,103086:0,103087:0,103088:2,103089:2,103094:1,103095:0,103096:2,103103:0,103104:2,103105:0,103106:2,103121:0,103122:2,103123:0,103124:0,103125:1,103126:1,103127:0,103128:0,103129:2,103130:2,103131:0,103132:0,103133:2,103134:2,103135:0,103136:0,103137:1,103138:1,103139:0,103140:2,103141:0,103142:2,103143:0,103144:2,103145:0,103146:1,103147:0,103148:0,103149:2,103150:2,103151:0,103152:2,103172:0,103173:2,103174:0,103175:0,103176:2,103177:2,103178:0,103179:0,103180:2,103181:2,103182:0,103183:0,103184:2,103185:2,103228:0,103229:0,103230:2,103231:2,103250:0,103251:2,103252:0,103253:2,103260:0,103261:0,103262:2,103263:2,103270:0,103271:0,103272:2,103273:2,103274:0,103275:0,103276:2,103277:2,103278:0,103279:0,103280:2,103281:2,103282:0,103283:0,103284:2,103285:2,103286:0,103287:2,103288:0,103289:2,103290:0,103291:2,103292:0,103293:0,103294:2,103295:2,103296:0,103297:0,103298:2,103299:2,103376:2,103377:0,103378:0,103379:2,103380:2,103393:0,103394:0,103395:2,103396:2,103472:0,103473:1,103474:0,103475:2,103482:0,103483:2,103484:0,103485:2,103500:0,103501:2,103502:0,103503:0,103504:1,103505:1,103506:0,103507:0,103508:2,103509:2,103510:0,103511:0,103512:2,103513:2,103514:0,103515:2,103516:0,103517:2,103518:0,103519:2,103520:0,103521:1,103522:0,103523:0,103524:2,103525:2,103526:0,103527:2,103561:2,103562:2,103563:0,103564:0,103565:2,103566:2,103567:0,103568:0,103569:2,103570:2,103584:0,103585:2,103586:0,103587:2,103588:1,103589:0,103590:2,103591:1,103592:0,103593:2,103594:1,103695:2};for(o$j=2e3;o$j<=2045;o$j++)r$e[o$j]=0;for(o$j=2056;o$j<=2065;o$j++)r$e[o$j]=0;for(o$j=2067;o$j<=2135;o$j++)r$e[o$j]=0;for(o$j=2137;o$j<=2154;o$j++)r$e[o$j]=0;for(o$j=2161;o$j<=2170;o$j++)r$e[o$j]=0;for(o$j=2172;o$j<=2193;o$j++)r$e[o$j]=0;for(o$j=2195;o$j<=2198;o$j++)r$e[o$j]=0;for(o$j=2200;o$j<=2203;o$j++)r$e[o$j]=0;for(o$j=2205;o$j<=2217;o$j++)r$e[o$j]=0;for(o$j=2222;o$j<=2224;o$j++)r$e[o$j]=1;for(o$j=2225;o$j<=2250;o$j++)r$e[o$j]=2;for(o$j=2251;o$j<=2253;o$j++)r$e[o$j]=1;for(o$j=2257;o$j<=2264;o$j++)r$e[o$j]=2;for(o$j=2274;o$j<=2279;o$j++)r$e[o$j]=2;for(o$j=2280;o$j<=2282;o$j++)r$e[o$j]=1;for(o$j=2283;o$j<=2289;o$j++)r$e[o$j]=2;for(o$j=2290;o$j<=2292;o$j++)r$e[o$j]=0;for(o$j=2308;o$j<=2313;o$j++)r$e[o$j]=0;for(o$j=2315;o$j<=2491;o$j++)r$e[o$j]=0;for(o$j=2494;o$j<=2866;o$j++)r$e[o$j]=0;for(o$j=2867;o$j<=2869;o$j++)r$e[o$j]=1;for(o$j=2870;o$j<=2888;o$j++)r$e[o$j]=2;for(o$j=2891;o$j<=2895;o$j++)r$e[o$j]=2;for(o$j=2896;o$j<=2898;o$j++)r$e[o$j]=1;for(o$j=2902;o$j<=2908;o$j++)r$e[o$j]=2;for(o$j=2915;o$j<=2920;o$j++)r$e[o$j]=2;for(o$j=2921;o$j<=2923;o$j++)r$e[o$j]=1;for(o$j=2924;o$j<=2930;o$j++)r$e[o$j]=2;for(o$j=2931;o$j<=2962;o$j++)r$e[o$j]=0;for(o$j=2964;o$j<=2968;o$j++)r$e[o$j]=2;for(o$j=2969;o$j<=2973;o$j++)r$e[o$j]=0;for(o$j=2975;o$j<=2991;o$j++)r$e[o$j]=0;for(o$j=2995;o$j<=3051;o$j++)r$e[o$j]=0;for(o$j=3054;o$j<=3079;o$j++)r$e[o$j]=0;for(o$j=3081;o$j<=3088;o$j++)r$e[o$j]=0;for(o$j=3092;o$j<=3101;o$j++)r$e[o$j]=0;for(o$j=3106;o$j<=3138;o$j++)r$e[o$j]=0;for(o$j=3146;o$j<=3151;o$j++)r$e[o$j]=0;for(o$j=3153;o$j<=3166;o$j++)r$e[o$j]=0;for(o$j=3168;o$j<=3172;o$j++)r$e[o$j]=0;for(o$j=3174;o$j<=3203;o$j++)r$e[o$j]=0;for(o$j=3294;o$j<=3358;o$j++)r$e[o$j]=0;for(o$j=3367;o$j<=3403;o$j++)r$e[o$j]=0;for(o$j=3408;o$j<=3416;o$j++)r$e[o$j]=0;for(o$j=3417;o$j<=3438;o$j++)r$e[o$j]=2;for(o$j=3441;o$j<=3446;o$j++)r$e[o$j]=2;for(o$j=3447;o$j<=3450;o$j++)r$e[o$j]=0;for(o$j=3451;o$j<=3459;o$j++)r$e[o$j]=2;for(o$j=3460;o$j<=3478;o$j++)r$e[o$j]=0;for(o$j=3554;o$j<=3559;o$j++)r$e[o$j]=0;for(o$j=3560;o$j<=3570;o$j++)r$e[o$j]=2;for(o$j=3571;o$j<=3581;o$j++)r$e[o$j]=0;for(o$j=3594;o$j<=3597;o$j++)r$e[o$j]=0;for(o$j=3601;o$j<=3604;o$j++)r$e[o$j]=0;for(o$j=3637;o$j<=3639;o$j++)r$e[o$j]=0;for(o$j=3665;o$j<=3667;o$j++)r$e[o$j]=0;for(o$j=3693;o$j<=3695;o$j++)r$e[o$j]=0;for(o$j=3701;o$j<=3727;o$j++)r$e[o$j]=0;for(o$j=3728;o$j<=3739;o$j++)r$e[o$j]=2;for(o$j=3740;o$j<=3751;o$j++)r$e[o$j]=0;for(o$j=3753;o$j<=3760;o$j++)r$e[o$j]=2;for(o$j=3761;o$j<=3773;o$j++)r$e[o$j]=0;for(o$j=3775;o$j<=3777;o$j++)r$e[o$j]=0;for(o$j=3779;o$j<=3781;o$j++)r$e[o$j]=0;for(o$j=3783;o$j<=3785;o$j++)r$e[o$j]=0;for(o$j=3788;o$j<=3791;o$j++)r$e[o$j]=0;for(o$j=3797;o$j<=3802;o$j++)r$e[o$j]=0;for(o$j=3814;o$j<=3816;o$j++)r$e[o$j]=0;for(o$j=3825;o$j<=3829;o$j++)r$e[o$j]=0;for(o$j=3832;o$j<=3841;o$j++)r$e[o$j]=0;for(o$j=3844;o$j<=3852;o$j++)r$e[o$j]=0;for(o$j=3873;o$j<=3885;o$j++)r$e[o$j]=0;for(o$j=3890;o$j<=3893;o$j++)r$e[o$j]=0;for(o$j=3907;o$j<=3912;o$j++)r$e[o$j]=0;for(o$j=3942;o$j<=3950;o$j++)r$e[o$j]=0;for(o$j=3968;o$j<=3970;o$j++)r$e[o$j]=0;for(o$j=3973;o$j<=3976;o$j++)r$e[o$j]=0;for(o$j=3986;o$j<=3989;o$j++)r$e[o$j]=0;for(o$j=3994;o$j<=3997;o$j++)r$e[o$j]=0;for(o$j=4048;o$j<=4051;o$j++)r$e[o$j]=0;for(o$j=4056;o$j<=4063;o$j++)r$e[o$j]=0;for(o$j=4093;o$j<=4096;o$j++)r$e[o$j]=0;for(o$j=4390;o$j<=4398;o$j++)r$e[o$j]=0;for(o$j=4399;o$j<=4413;o$j++)r$e[o$j]=2;for(o$j=4418;o$j<=4433;o$j++)r$e[o$j]=2;for(o$j=4455;o$j<=4457;o$j++)r$e[o$j]=2;for(o$j=4484;o$j<=4489;o$j++)r$e[o$j]=0;for(o$j=4491;o$j<=4554;o$j++)r$e[o$j]=0;for(o$j=4568;o$j<=4589;o$j++)r$e[o$j]=0;for(o$j=4652;o$j<=4656;o$j++)r$e[o$j]=0;for(o$j=4766;o$j<=4800;o$j++)r$e[o$j]=0;for(o$j=5014;o$j<=5016;o$j++)r$e[o$j]=0;for(o$j=5069;o$j<=5072;o$j++)r$e[o$j]=0;for(o$j=5105;o$j<=5130;o$j++)r$e[o$j]=0;for(o$j=5173;o$j<=5188;o$j++)r$e[o$j]=0;for(o$j=5253;o$j<=5259;o$j++)r$e[o$j]=0;for(o$j=5269;o$j<=5275;o$j++)r$e[o$j]=0;for(o$j=5292;o$j<=5311;o$j++)r$e[o$j]=0;for(o$j=5329;o$j<=5331;o$j++)r$e[o$j]=0;for(o$j=5343;o$j<=5349;o$j++)r$e[o$j]=0;for(o$j=5355;o$j<=5357;o$j++)r$e[o$j]=0;for(o$j=5387;o$j<=5389;o$j++)r$e[o$j]=0;for(o$j=5459;o$j<=5463;o$j++)r$e[o$j]=0;for(o$j=5479;o$j<=5482;o$j++)r$e[o$j]=0;for(o$j=5518;o$j<=5520;o$j++)r$e[o$j]=0;for(o$j=5530;o$j<=5539;o$j++)r$e[o$j]=0;for(o$j=5550;o$j<=5552;o$j++)r$e[o$j]=0;for(o$j=5562;o$j<=5583;o$j++)r$e[o$j]=0;for(o$j=5623;o$j<=5625;o$j++)r$e[o$j]=2;for(o$j=5631;o$j<=5639;o$j++)r$e[o$j]=0;for(o$j=5649;o$j<=5653;o$j++)r$e[o$j]=0;for(o$j=5663;o$j<=5680;o$j++)r$e[o$j]=0;for(o$j=5682;o$j<=5685;o$j++)r$e[o$j]=0;for(o$j=5875;o$j<=5877;o$j++)r$e[o$j]=0;for(o$j=5896;o$j<=5899;o$j++)r$e[o$j]=0;for(o$j=5921;o$j<=5940;o$j++)r$e[o$j]=0;for(o$j=6050;o$j<=6125;o$j++)r$e[o$j]=0;for(o$j=6244;o$j<=6275;o$j++)r$e[o$j]=0;for(o$j=6328;o$j<=6348;o$j++)r$e[o$j]=0;for(o$j=6350;o$j<=6356;o$j++)r$e[o$j]=0;for(o$j=6366;o$j<=6372;o$j++)r$e[o$j]=0;for(o$j=6381;o$j<=6387;o$j++)r$e[o$j]=0;for(o$j=6393;o$j<=6404;o$j++)r$e[o$j]=0;for(o$j=6480;o$j<=6483;o$j++)r$e[o$j]=0;for(o$j=6511;o$j<=6514;o$j++)r$e[o$j]=0;for(o$j=6579;o$j<=6581;o$j++)r$e[o$j]=0;for(o$j=6619;o$j<=6624;o$j++)r$e[o$j]=0;for(o$j=6625;o$j<=6627;o$j++)r$e[o$j]=2;for(o$j=6628;o$j<=6632;o$j++)r$e[o$j]=0;for(o$j=6634;o$j<=6637;o$j++)r$e[o$j]=0;for(o$j=6669;o$j<=6692;o$j++)r$e[o$j]=0;for(o$j=6707;o$j<=6709;o$j++)r$e[o$j]=0;for(o$j=6720;o$j<=6723;o$j++)r$e[o$j]=0;for(o$j=6732;o$j<=6738;o$j++)r$e[o$j]=0;for(o$j=6931;o$j<=6933;o$j++)r$e[o$j]=0;for(o$j=6956;o$j<=6959;o$j++)r$e[o$j]=0;for(o$j=7005;o$j<=7007;o$j++)r$e[o$j]=0;for(o$j=7057;o$j<=7070;o$j++)r$e[o$j]=2;for(o$j=7074;o$j<=7082;o$j++)r$e[o$j]=0;for(o$j=7109;o$j<=7118;o$j++)r$e[o$j]=0;for(o$j=7119;o$j<=7127;o$j++)r$e[o$j]=1;for(o$j=7374;o$j<=7376;o$j++)r$e[o$j]=0;for(o$j=7528;o$j<=7586;o$j++)r$e[o$j]=0;for(o$j=7587;o$j<=7645;o$j++)r$e[o$j]=2;for(o$j=7692;o$j<=7696;o$j++)r$e[o$j]=0;for(o$j=7755;o$j<=7787;o$j++)r$e[o$j]=0;for(o$j=7791;o$j<=7795;o$j++)r$e[o$j]=0;for(o$j=7799;o$j<=7801;o$j++)r$e[o$j]=0;for(o$j=7803;o$j<=7805;o$j++)r$e[o$j]=0;for(o$j=7825;o$j<=7831;o$j++)r$e[o$j]=0;for(o$j=7845;o$j<=7859;o$j++)r$e[o$j]=0;for(o$j=8013;o$j<=8032;o$j++)r$e[o$j]=0;for(o$j=8065;o$j<=8068;o$j++)r$e[o$j]=1;for(o$j=8518;o$j<=8529;o$j++)r$e[o$j]=2;for(o$j=8533;o$j<=8536;o$j++)r$e[o$j]=2;for(o$j=8538;o$j<=8540;o$j++)r$e[o$j]=2;for(o$j=8677;o$j<=8679;o$j++)r$e[o$j]=0;for(o$j=8836;o$j<=8840;o$j++)r$e[o$j]=0;for(o$j=8857;o$j<=8859;o$j++)r$e[o$j]=0;for(o$j=8908;o$j<=8910;o$j++)r$e[o$j]=0;for(o$j=9154;o$j<=9159;o$j++)r$e[o$j]=0;for(o$j=9205;o$j<=9218;o$j++)r$e[o$j]=0;for(o$j=9271;o$j<=9273;o$j++)r$e[o$j]=0;for(o$j=9295;o$j<=9297;o$j++)r$e[o$j]=0;for(o$j=9356;o$j<=9360;o$j++)r$e[o$j]=0;for(o$j=9404;o$j<=9407;o$j++)r$e[o$j]=0;for(o$j=9476;o$j<=9482;o$j++)r$e[o$j]=0;for(o$j=9487;o$j<=9494;o$j++)r$e[o$j]=0;for(o$j=9697;o$j<=9699;o$j++)r$e[o$j]=0;for(o$j=9821;o$j<=9865;o$j++)r$e[o$j]=0;for(o$j=20002;o$j<=20032;o$j++)r$e[o$j]=0;for(o$j=20047;o$j<=20049;o$j++)r$e[o$j]=0;for(o$j=20062;o$j<=20092;o$j++)r$e[o$j]=0;for(o$j=20135;o$j<=20138;o$j++)r$e[o$j]=0;for(o$j=20248;o$j<=20258;o$j++)r$e[o$j]=0;for(o$j=20348;o$j<=20358;o$j++)r$e[o$j]=0;for(o$j=20436;o$j<=20440;o$j++)r$e[o$j]=0;for(o$j=20822;o$j<=20824;o$j++)r$e[o$j]=0;for(o$j=20904;o$j<=20932;o$j++)r$e[o$j]=0;for(o$j=20934;o$j<=20936;o$j++)r$e[o$j]=0;for(o$j=21004;o$j<=21032;o$j++)r$e[o$j]=0;for(o$j=21035;o$j<=21037;o$j++)r$e[o$j]=0;for(o$j=21095;o$j<=21097;o$j++)r$e[o$j]=0;for(o$j=21148;o$j<=21150;o$j++)r$e[o$j]=0;for(o$j=21207;o$j<=21264;o$j++)r$e[o$j]=0;for(o$j=21307;o$j<=21364;o$j++)r$e[o$j]=0;for(o$j=21413;o$j<=21423;o$j++)r$e[o$j]=0;for(o$j=21453;o$j<=21463;o$j++)r$e[o$j]=0;for(o$j=21473;o$j<=21483;o$j++)r$e[o$j]=0;for(o$j=21780;o$j<=21782;o$j++)r$e[o$j]=0;for(o$j=21891;o$j<=21894;o$j++)r$e[o$j]=0;for(o$j=21896;o$j<=21899;o$j++)r$e[o$j]=0;for(o$j=22171;o$j<=22177;o$j++)r$e[o$j]=0;for(o$j=22181;o$j<=22187;o$j++)r$e[o$j]=0;for(o$j=22191;o$j<=22197;o$j++)r$e[o$j]=0;for(o$j=22207;o$j<=22222;o$j++)r$e[o$j]=0;for(o$j=22234;o$j<=22236;o$j++)r$e[o$j]=0;for(o$j=22243;o$j<=22250;o$j++)r$e[o$j]=0;for(o$j=22262;o$j<=22265;o$j++)r$e[o$j]=0;for(o$j=22307;o$j<=22322;o$j++)r$e[o$j]=0;for(o$j=22348;o$j<=22357;o$j++)r$e[o$j]=0;for(o$j=22407;o$j<=22422;o$j++)r$e[o$j]=0;for(o$j=22462;o$j<=22465;o$j++)r$e[o$j]=0;for(o$j=22521;o$j<=22525;o$j++)r$e[o$j]=0;for(o$j=22607;o$j<=22622;o$j++)r$e[o$j]=0;for(o$j=22641;o$j<=22646;o$j++)r$e[o$j]=0;for(o$j=22648;o$j<=22657;o$j++)r$e[o$j]=0;for(o$j=22707;o$j<=22722;o$j++)r$e[o$j]=0;for(o$j=22762;o$j<=22765;o$j++)r$e[o$j]=0;for(o$j=22991;o$j<=22994;o$j++)r$e[o$j]=0;for(o$j=23028;o$j<=23038;o$j++)r$e[o$j]=0;for(o$j=23830;o$j<=23853;o$j++)r$e[o$j]=0;for(o$j=23866;o$j<=23872;o$j++)r$e[o$j]=0;for(o$j=23877;o$j<=23884;o$j++)r$e[o$j]=0;for(o$j=23886;o$j<=23894;o$j++)r$e[o$j]=0;for(o$j=23946;o$j<=23948;o$j++)r$e[o$j]=0;for(o$j=24311;o$j<=24313;o$j++)r$e[o$j]=0;for(o$j=24342;o$j<=24347;o$j++)r$e[o$j]=0;for(o$j=24370;o$j<=24374;o$j++)r$e[o$j]=10;for(o$j=24375;o$j<=24381;o$j++)r$e[o$j]=0;for(o$j=24718;o$j<=24721;o$j++)r$e[o$j]=0;for(o$j=24817;o$j<=24821;o$j++)r$e[o$j]=0;for(o$j=24877;o$j<=24882;o$j++)r$e[o$j]=0;for(o$j=24891;o$j<=24893;o$j++)r$e[o$j]=0;for(o$j=25391;o$j<=25395;o$j++)r$e[o$j]=0;for(o$j=25828;o$j<=25838;o$j++)r$e[o$j]=0;for(o$j=26191;o$j<=26195;o$j++)r$e[o$j]=0;for(o$j=26391;o$j<=26393;o$j++)r$e[o$j]=0;for(o$j=26701;o$j<=26722;o$j++)r$e[o$j]=0;for(o$j=26729;o$j<=26799;o$j++)r$e[o$j]=2;for(o$j=26801;o$j<=26803;o$j++)r$e[o$j]=2;for(o$j=26811;o$j<=26813;o$j++)r$e[o$j]=2;for(o$j=26847;o$j<=26870;o$j++)r$e[o$j]=2;for(o$j=26891;o$j<=26899;o$j++)r$e[o$j]=0;for(o$j=26901;o$j<=26923;o$j++)r$e[o$j]=0;for(o$j=26929;o$j<=26946;o$j++)r$e[o$j]=0;for(o$j=26948;o$j<=26998;o$j++)r$e[o$j]=0;for(o$j=27037;o$j<=27040;o$j++)r$e[o$j]=0;for(o$j=27205;o$j<=27232;o$j++)r$e[o$j]=0;for(o$j=27258;o$j<=27260;o$j++)r$e[o$j]=0;for(o$j=27391;o$j<=27398;o$j++)r$e[o$j]=0;for(o$j=27561;o$j<=27564;o$j++)r$e[o$j]=0;for(o$j=27571;o$j<=27574;o$j++)r$e[o$j]=0;for(o$j=27581;o$j<=27584;o$j++)r$e[o$j]=0;for(o$j=27591;o$j<=27594;o$j++)r$e[o$j]=0;for(o$j=28191;o$j<=28193;o$j++)r$e[o$j]=0;for(o$j=28348;o$j<=28358;o$j++)r$e[o$j]=0;for(o$j=28402;o$j<=28432;o$j++)r$e[o$j]=0;for(o$j=28462;o$j<=28492;o$j++)r$e[o$j]=0;for(o$j=29118;o$j<=29122;o$j++)r$e[o$j]=0;for(o$j=29168;o$j<=29172;o$j++)r$e[o$j]=0;for(o$j=29177;o$j<=29185;o$j++)r$e[o$j]=0;for(o$j=29187;o$j<=29195;o$j++)r$e[o$j]=0;for(o$j=29900;o$j<=29903;o$j++)r$e[o$j]=0;for(o$j=30161;o$j<=30179;o$j++)r$e[o$j]=0;for(o$j=30491;o$j<=30494;o$j++)r$e[o$j]=0;for(o$j=30729;o$j<=30732;o$j++)r$e[o$j]=0;for(o$j=31251;o$j<=31259;o$j++)r$e[o$j]=0;for(o$j=31265;o$j<=31268;o$j++)r$e[o$j]=0;for(o$j=31275;o$j<=31279;o$j++)r$e[o$j]=0;for(o$j=31281;o$j<=31297;o$j++)r$e[o$j]=0;for(o$j=31461;o$j<=31469;o$j++)r$e[o$j]=0;for(o$j=31491;o$j<=31495;o$j++)r$e[o$j]=0;for(o$j=31917;o$j<=31922;o$j++)r$e[o$j]=0;for(o$j=31965;o$j<=32e3;o$j++)r$e[o$j]=0;for(o$j=32001;o$j<=32003;o$j++)r$e[o$j]=2;for(o$j=32005;o$j<=32031;o$j++)r$e[o$j]=2;for(o$j=32033;o$j<=32060;o$j++)r$e[o$j]=2;for(o$j=32064;o$j<=32067;o$j++)r$e[o$j]=2;for(o$j=32074;o$j<=32077;o$j++)r$e[o$j]=2;for(o$j=32081;o$j<=32086;o$j++)r$e[o$j]=0;for(o$j=32107;o$j<=32130;o$j++)r$e[o$j]=0;for(o$j=32133;o$j<=32159;o$j++)r$e[o$j]=0;for(o$j=32164;o$j<=32167;o$j++)r$e[o$j]=2;for(o$j=32180;o$j<=32199;o$j++)r$e[o$j]=0;for(o$j=32201;o$j<=32260;o$j++)r$e[o$j]=0;for(o$j=32301;o$j<=32360;o$j++)r$e[o$j]=0;for(o$j=32601;o$j<=32662;o$j++)r$e[o$j]=0;for(o$j=32664;o$j<=32667;o$j++)r$e[o$j]=2;for(o$j=32701;o$j<=32761;o$j++)r$e[o$j]=0;for(o$j=53001;o$j<=53004;o$j++)r$e[o$j]=0;for(o$j=53008;o$j<=53019;o$j++)r$e[o$j]=0;for(o$j=53021;o$j<=53032;o$j++)r$e[o$j]=0;for(o$j=53034;o$j<=53037;o$j++)r$e[o$j]=0;for(o$j=53042;o$j<=53046;o$j++)r$e[o$j]=0;for(o$j=53074;o$j<=53080;o$j++)r$e[o$j]=0;for(o$j=54001;o$j<=54004;o$j++)r$e[o$j]=0;for(o$j=54008;o$j<=54019;o$j++)r$e[o$j]=0;for(o$j=54021;o$j<=54032;o$j++)r$e[o$j]=0;for(o$j=54034;o$j<=54037;o$j++)r$e[o$j]=0;for(o$j=54042;o$j<=54046;o$j++)r$e[o$j]=0;for(o$j=54048;o$j<=54053;o$j++)r$e[o$j]=0;for(o$j=54074;o$j<=54080;o$j++)r$e[o$j]=0;for(o$j=54098;o$j<=54101;o$j++)r$e[o$j]=0;for(o$j=102001;o$j<=102040;o$j++)r$e[o$j]=0;for(o$j=102042;o$j<=102063;o$j++)r$e[o$j]=0;for(o$j=102065;o$j<=102067;o$j++)r$e[o$j]=0;for(o$j=102070;o$j<=102117;o$j++)r$e[o$j]=0;for(o$j=102122;o$j<=102216;o$j++)r$e[o$j]=0;for(o$j=102221;o$j<=102377;o$j++)r$e[o$j]=0;for(o$j=102382;o$j<=102388;o$j++)r$e[o$j]=0;for(o$j=102389;o$j<=102398;o$j++)r$e[o$j]=2;for(o$j=102399;o$j<=102444;o$j++)r$e[o$j]=0;for(o$j=102445;o$j<=102447;o$j++)r$e[o$j]=2;for(o$j=102448;o$j<=102458;o$j++)r$e[o$j]=0;for(o$j=102459;o$j<=102468;o$j++)r$e[o$j]=2;for(o$j=102469;o$j<=102499;o$j++)r$e[o$j]=0;for(o$j=102500;o$j<=102519;o$j++)r$e[o$j]=1;for(o$j=102520;o$j<=102524;o$j++)r$e[o$j]=0;for(o$j=102525;o$j<=102529;o$j++)r$e[o$j]=2;for(o$j=102530;o$j<=102588;o$j++)r$e[o$j]=0;for(o$j=102590;o$j<=102598;o$j++)r$e[o$j]=0;for(o$j=102601;o$j<=102603;o$j++)r$e[o$j]=0;for(o$j=102605;o$j<=102628;o$j++)r$e[o$j]=0;for(o$j=102629;o$j<=102646;o$j++)r$e[o$j]=2;for(o$j=102648;o$j<=102700;o$j++)r$e[o$j]=2;for(o$j=102701;o$j<=102703;o$j++)r$e[o$j]=0;for(o$j=102707;o$j<=102730;o$j++)r$e[o$j]=2;for(o$j=102733;o$j<=102758;o$j++)r$e[o$j]=2;for(o$j=102767;o$j<=102900;o$j++)r$e[o$j]=0;for(o$j=102901;o$j<=102933;o$j++)r$e[o$j]=2;for(o$j=102934;o$j<=102950;o$j++)r$e[o$j]=13;for(o$j=102951;o$j<=102955;o$j++)r$e[o$j]=0;for(o$j=102961;o$j<=102963;o$j++)r$e[o$j]=0;for(o$j=102965;o$j<=102969;o$j++)r$e[o$j]=0;for(o$j=102971;o$j<=102973;o$j++)r$e[o$j]=0;for(o$j=102975;o$j<=102989;o$j++)r$e[o$j]=0;for(o$j=102990;o$j<=102992;o$j++)r$e[o$j]=1;for(o$j=102997;o$j<=103002;o$j++)r$e[o$j]=0;for(o$j=103003;o$j<=103008;o$j++)r$e[o$j]=2;for(o$j=103009;o$j<=103011;o$j++)r$e[o$j]=0;for(o$j=103012;o$j<=103014;o$j++)r$e[o$j]=2;for(o$j=103019;o$j<=103021;o$j++)r$e[o$j]=0;for(o$j=103022;o$j<=103024;o$j++)r$e[o$j]=2;for(o$j=103029;o$j<=103031;o$j++)r$e[o$j]=0;for(o$j=103032;o$j<=103034;o$j++)r$e[o$j]=2;for(o$j=103065;o$j<=103068;o$j++)r$e[o$j]=0;for(o$j=103074;o$j<=103076;o$j++)r$e[o$j]=0;for(o$j=103077;o$j<=103079;o$j++)r$e[o$j]=1;for(o$j=103080;o$j<=103082;o$j++)r$e[o$j]=0;for(o$j=103083;o$j<=103085;o$j++)r$e[o$j]=2;for(o$j=103090;o$j<=103093;o$j++)r$e[o$j]=0;for(o$j=103097;o$j<=103099;o$j++)r$e[o$j]=0;for(o$j=103100;o$j<=103102;o$j++)r$e[o$j]=2;for(o$j=103107;o$j<=103109;o$j++)r$e[o$j]=0;for(o$j=103110;o$j<=103112;o$j++)r$e[o$j]=2;for(o$j=103113;o$j<=103116;o$j++)r$e[o$j]=0;for(o$j=103117;o$j<=103120;o$j++)r$e[o$j]=2;for(o$j=103153;o$j<=103157;o$j++)r$e[o$j]=0;for(o$j=103158;o$j<=103162;o$j++)r$e[o$j]=2;for(o$j=103163;o$j<=103165;o$j++)r$e[o$j]=0;for(o$j=103166;o$j<=103168;o$j++)r$e[o$j]=1;for(o$j=103169;o$j<=103171;o$j++)r$e[o$j]=2;for(o$j=103186;o$j<=103188;o$j++)r$e[o$j]=0;for(o$j=103189;o$j<=103191;o$j++)r$e[o$j]=2;for(o$j=103192;o$j<=103195;o$j++)r$e[o$j]=0;for(o$j=103196;o$j<=103199;o$j++)r$e[o$j]=2;for(o$j=103200;o$j<=103224;o$j++)r$e[o$j]=0;for(o$j=103225;o$j<=103227;o$j++)r$e[o$j]=1;for(o$j=103232;o$j<=103237;o$j++)r$e[o$j]=0;for(o$j=103238;o$j<=103243;o$j++)r$e[o$j]=2;for(o$j=103244;o$j<=103246;o$j++)r$e[o$j]=0;for(o$j=103247;o$j<=103249;o$j++)r$e[o$j]=2;for(o$j=103254;o$j<=103256;o$j++)r$e[o$j]=0;for(o$j=103257;o$j<=103259;o$j++)r$e[o$j]=2;for(o$j=103264;o$j<=103266;o$j++)r$e[o$j]=0;for(o$j=103267;o$j<=103269;o$j++)r$e[o$j]=2;for(o$j=103300;o$j<=103375;o$j++)r$e[o$j]=0;for(o$j=103381;o$j<=103383;o$j++)r$e[o$j]=0;for(o$j=103384;o$j<=103386;o$j++)r$e[o$j]=1;for(o$j=103387;o$j<=103389;o$j++)r$e[o$j]=0;for(o$j=103390;o$j<=103392;o$j++)r$e[o$j]=2;for(o$j=103397;o$j<=103399;o$j++)r$e[o$j]=0;for(o$j=103400;o$j<=103471;o$j++)r$e[o$j]=2;for(o$j=103476;o$j<=103478;o$j++)r$e[o$j]=0;for(o$j=103479;o$j<=103481;o$j++)r$e[o$j]=2;for(o$j=103486;o$j<=103488;o$j++)r$e[o$j]=0;for(o$j=103489;o$j<=103491;o$j++)r$e[o$j]=2;for(o$j=103492;o$j<=103495;o$j++)r$e[o$j]=0;for(o$j=103496;o$j<=103499;o$j++)r$e[o$j]=2;for(o$j=103528;o$j<=103543;o$j++)r$e[o$j]=0;for(o$j=103544;o$j<=103548;o$j++)r$e[o$j]=2;for(o$j=103549;o$j<=103551;o$j++)r$e[o$j]=0;for(o$j=103552;o$j<=103554;o$j++)r$e[o$j]=1;for(o$j=103555;o$j<=103557;o$j++)r$e[o$j]=2;for(o$j=103558;o$j<=103560;o$j++)r$e[o$j]=0;for(o$j=103571;o$j<=103573;o$j++)r$e[o$j]=0;for(o$j=103574;o$j<=103576;o$j++)r$e[o$j]=2;for(o$j=103577;o$j<=103580;o$j++)r$e[o$j]=0;for(o$j=103581;o$j<=103583;o$j++)r$e[o$j]=2;for(o$j=103595;o$j<=103694;o$j++)r$e[o$j]=0;for(o$j=103696;o$j<=103699;o$j++)r$e[o$j]=0;for(o$j=103700;o$j<=103793;o$j++)r$e[o$j]=2;for(o$j=103794;o$j<=103890;o$j++)r$e[o$j]=0;for(o$j=103891;o$j<=103896;o$j++)r$e[o$j]=2;for(o$j=103900;o$j<=103971;o$j++)r$e[o$j]=2;for(o$j=103972;o$j<=103977;o$j++)r$e[o$j]=0;for(o$j=112e3;o$j<=112101;o$j++)r$e[o$j]=0;

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
const n$g={102113:!0,102100:!0,3857:!0,3785:!0},_$8={4326:!0,3785:!0,3857:!0,102113:!0,102100:!0,104905:!0,104971:!0},a$f='PROJCS["WGS_1984_Web_Mercator_Auxiliary_Sphere",GEOGCS["GCS_WGS_1984",DATUM["D_WGS_1984",SPHEROID["WGS_1984",6378137.0,298.257223563]],PRIMEM["Greenwich",0.0],UNIT["Degree",0.0174532925199433]],PROJECTION["Mercator_Auxiliary_Sphere"],PARAMETER["False_Easting",0.0],PARAMETER["False_Northing",0.0],PARAMETER["Central_Meridian",{Central_Meridian}],PARAMETER["Standard_Parallel_1",0.0],PARAMETER["Auxiliary_Sphere_Type",0.0],UNIT["Meter",1.0]]',t$c=[-20037508.342788905,20037508.342788905],l$e=[-20037508.342787,20037508.342787],M$5={102113:{wkTemplate:'PROJCS["WGS_1984_Web_Mercator",GEOGCS["GCS_WGS_1984_Major_Auxiliary_Sphere",DATUM["D_WGS_1984_Major_Auxiliary_Sphere",SPHEROID["WGS_1984_Major_Auxiliary_Sphere",6378137.0,0.0]],PRIMEM["Greenwich",0.0],UNIT["Degree",0.0174532925199433]],PROJECTION["Mercator"],PARAMETER["False_Easting",0.0],PARAMETER["False_Northing",0.0],PARAMETER["Central_Meridian",{Central_Meridian}],PARAMETER["Standard_Parallel_1",0.0],UNIT["Meter",1.0]]',valid:t$c,origin:l$e,dx:1e-5},102100:{wkTemplate:a$f,valid:t$c,origin:l$e,dx:1e-5},3785:{wkTemplate:'PROJCS["WGS_1984_Web_Mercator",GEOGCS["GCS_WGS_1984_Major_Auxiliary_Sphere",DATUM["D_WGS_1984_Major_Auxiliary_Sphere",SPHEROID["WGS_1984_Major_Auxiliary_Sphere",6378137.0,0.0]],PRIMEM["Greenwich",0.0],UNIT["Degree",0.0174532925199433]],PROJECTION["Mercator"],PARAMETER["False_Easting",0.0],PARAMETER["False_Northing",0.0],PARAMETER["Central_Meridian",{Central_Meridian}],PARAMETER["Standard_Parallel_1",0.0],UNIT["Meter",1.0]]',valid:t$c,origin:l$e,dx:1e-5},3857:{wkTemplate:a$f,valid:t$c,origin:l$e,dx:1e-5},4326:{wkTemplate:'GEOGCS["GCS_WGS_1984",DATUM["D_WGS_1984",SPHEROID["WGS_1984",6378137.0,298.257223563]],PRIMEM["Greenwich",{Central_Meridian}],UNIT["Degree",0.0174532925199433]]',altTemplate:'PROJCS["WGS_1984_Plate_Carree",GEOGCS["GCS_WGS_1984",DATUM["D_WGS_1984",SPHEROID["WGS_1984",6378137.0,298.257223563]],PRIMEM["Greenwich",0.0],UNIT["Degree",0.0174532925199433]],PROJECTION["Plate_Carree"],PARAMETER["False_Easting",0.0],PARAMETER["False_Northing",0.0],PARAMETER["Central_Meridian",{Central_Meridian}],UNIT["Degrees",111319.491]]',valid:[-180,180],origin:[-180,90],dx:1e-5},104971:{wkTemplate:'GEOGCS["Mars_2000_(Sphere)",DATUM["Mars_2000_(Sphere)",SPHEROID["Mars_2000_(Sphere)",3396190.0,0.0]],PRIMEM["Reference_Meridian",0.0],UNIT["Degree",0.0174532925199433]]',valid:[-180,180],origin:[-180,90],dx:1e-5},104905:{wkTemplate:'GEOGCS["GCS_Mars_2000",DATUM["D_Mars_2000",SPHEROID["Mars_2000_IAU_IAG",3396190.0,169.8944472236118]],PRIMEM["Reference_Meridian",0.0],UNIT["Degree",0.0174532925199433]]',valid:[-180,180],origin:[-180,90],dx:1e-5}};function S$4(e,r){return e===r||null!=e&&null!=r&&(null!=e.wkid||null!=r.wkid?e.wkid===r.wkid||A$6(e)&&A$6(r)||null!=r.latestWkid&&e.wkid===r.latestWkid||null!=e.latestWkid&&r.wkid===e.latestWkid:!(!e.wkt||!r.wkt)&&e.wkt.toUpperCase()===r.wkt.toUpperCase())}function d$g(e){return s$j(e)&&e.wkid&&M$5[e.wkid]||null}function E$5(e){return !!s$j(e)&&(e.wkid?null==r$e[e.wkid]:!!e.wkt&&!!/^\s*GEOGCS/i.test(e.wkt))}function u$j(e){return s$j(e)&&4326===e.wkid}function A$6(e){return s$j(e)&&null!=e.wkid&&!0===n$g[e.wkid]}function k$4(e){return e===S$5.GCSMARS2000||e===S$5.GCSMARS2000_SPHERE}function w$4(e){return e===S$5.GCSMOON2000}function C$4(e){return s$j(e)&&null!=e.wkid&&!0===_$8[e.wkid]}function s$j(e){return null!=e&&(null!=e.wkid&&e.wkid>=2e3||null!=e.wkt)}const p$c={wkid:4326,wkt:r$q(M$5[4326].wkTemplate,{Central_Meridian:"0.0"})},I$3={wkid:102100,latestWkid:3857},c$m={wkid:32662};

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
const o$i=s$k.radius*Math.PI/200,m$d=/UNIT\[([^\]]+)\]\]$/i,f$h=r$e,d$f=/UNIT\[([^\]]+)\]/i,U$1=new Set([4261,4305,4807,4810,4811,4812,4816,4819,4821,4901,4902,37225,104139,104140]),q$3=o$k()({meter:"meters",foot:"feet",foot_us:"us-feet",foot_clarke:"clarke-feet",yard_clarke:"clarke-yards",link_clarke:"clarke-links",yard_sears:"sears-yards",foot_sears:"sears-feet",chain_sears:"sears-chains",chain_benoit_1895_b:"benoit-1895-b-chains",yard_indian:"indian-yards",yard_indian_1937:"indian-1937-yards",foot_gold_coast:"gold-coast-feet",chain_sears_1922_truncated:"sears-1922-truncated-chains","50_kilometers":"50-kilometers","150_kilometers":"150-kilometers"});function A$5(e){return q$3.fromJSON(e.toLowerCase())||null}function H$1(e,s=s$k.metersPerDegree){return L$5(e,!0)??s}function L$5(e,s=!1){const t=null!=e?e.wkid:null,i=null!=e?e.wkt:null;let c=null;if(t){if(k$4(t))return t$d.metersPerDegree;if(w$4(t))return e$k.metersPerDegree;c=f$h.values[f$h[t]],!c&&s&&U$1.has(t)&&(c=o$i);}else i&&(se(i)?c=$$1(m$d.exec(i),c):ee(i)&&(c=$$1(d$f.exec(i),c)));return c}function $$1(e,s){return e&&e[1]?z$5(e[1]):s}function z$5(e){return parseFloat(e.split(",")[1])}function Q$1(e){const s=null!=e?e.wkid:null,t=null!=e?e.wkt:null;let r=null;if(s)r=f$h.units[f$h[s]];else if(t){const e=se(t)?m$d:ee(t)?d$f:null;if(e){const s=e.exec(t);s&&s[1]&&(r=re(s[1]));}}return null!=r?A$5(r):null}function ee(e){return /^GEOCCS/i.test(e)}function se(e){return /^PROJCS/i.test(e)}const te=1e-7;function re(e){const s=/[\\"\\']{1}([^\\"\\']+)/.exec(e);let t=s&&s[1];if(!t||!f$h.units.includes(t)){const s=z$5(e);t=null;const r=f$h.values;for(let e=0;e<r.length;++e)if(Math.abs(s-r[e])<te){t=f$h.units[e];break}}return t}const ie={esriAcres:"acres",esriAres:"ares",esriHectares:"hectares",esriSquareCentimeters:"square-centimeters",esriSquareDecimeters:"square-decimeters",esriSquareFeet:"square-feet",esriSquareInches:"square-inches",esriSquareKilometers:"square-kilometers",esriSquareMeters:"square-meters",esriSquareMiles:"square-miles",esriSquareMillimeters:"square-millimeters",esriSquareUsFeet:"square-us-feet",esriSquareYards:"square-yards"},ae={esriCentimeters:"centimeters",esriDecimeters:"decimeters",esriFeet:"feet",esriInches:"inches",esriKilometers:"kilometers",esriMeters:"meters",esriMiles:"miles",esriMillimeters:"millimeters",esriNauticalMiles:"nautical-miles",esriYards:"yards"},ue={esriDUDecimalDegrees:"degrees",esriDURadians:"radians"};o$k()(ie);o$k()(ae);o$k()(ue);

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
function r$d(r,o,e){let i,n;return void 0===o?(n=r,i=[void 0]):"string"!=typeof o?(n=r,i=[void 0],e=o):(n=o,i=Array.isArray(r)?r:[r]),(r,o)=>{const p=r.constructor.prototype;for(const c of i){const i=d$j(r,c,n);i.write&&"object"==typeof i.write||(i.write={}),e&&(i.write.target=e),i.write.writer=p[o];}}}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
var h$f;let k$3=h$f=class extends l$f{static fromJSON(e){if(!e)return null;if(e.wkid){if(102100===e.wkid)return h$f.WebMercator;if(4326===e.wkid)return h$f.WGS84}const t=new h$f;return t.read(e),t}constructor(e){super(e),this.latestWkid=null,this.wkid=null,this.wkt=null,this.vcsWkid=null,this.latestVcsWkid=null,this.imageCoordinateSystem=null;}normalizeCtorArgs(e){if(e&&"object"==typeof e)return e;return {["string"==typeof e?"wkt":"wkid"]:e}}get isWGS84(){return u$j(this)}get isWebMercator(){return A$6(this)}get isGeographic(){return E$5(this)}get isWrappable(){return C$4(this)}get metersPerUnit(){return H$1(this)}get unit(){return Q$1(this)||(this.isGeographic?"degrees":null)}writeWkt(e,t){this.wkid||(t.wkt=e);}clone(){if(this===h$f.WGS84)return h$f.WGS84;if(this===h$f.WebMercator)return h$f.WebMercator;const e=new h$f;return null!=this.wkid?(e.wkid=this.wkid,null!=this.latestWkid&&(e.latestWkid=this.latestWkid),null!=this.vcsWkid&&(e.vcsWkid=this.vcsWkid),null!=this.latestVcsWkid&&(e.latestVcsWkid=this.latestVcsWkid)):null!=this.wkt&&(e.wkt=this.wkt),this.imageCoordinateSystem&&(e.imageCoordinateSystem=a$v(this.imageCoordinateSystem)),e}equals(e){if(null==e)return !1;if(this.imageCoordinateSystem||e.imageCoordinateSystem){if(null==this.imageCoordinateSystem||null==e.imageCoordinateSystem)return !1;const{id:t,referenceServiceName:r}=e.imageCoordinateSystem,{geodataXform:i}=e.imageCoordinateSystem,o=this.imageCoordinateSystem;return null==t||i?JSON.stringify(o)===JSON.stringify(e.imageCoordinateSystem):r?o.id===t&&o.referenceServiceName===r:o.id===t}return S$4(this,e)}toJSON(e){return this.write(void 0,e)}};k$3.GCS_NAD_1927=null,k$3.WGS84=null,k$3.WebMercator=null,k$3.PlateCarree=null,e$x([y$d({readOnly:!0})],k$3.prototype,"isWGS84",null),e$x([y$d({readOnly:!0})],k$3.prototype,"isWebMercator",null),e$x([y$d({readOnly:!0})],k$3.prototype,"isGeographic",null),e$x([y$d({readOnly:!0})],k$3.prototype,"isWrappable",null),e$x([y$d({type:T$2,json:{write:!0}})],k$3.prototype,"latestWkid",void 0),e$x([y$d({readOnly:!0})],k$3.prototype,"metersPerUnit",null),e$x([y$d({readOnly:!0})],k$3.prototype,"unit",null),e$x([y$d({type:T$2,json:{write:!0,origins:{"web-scene":{write:{overridePolicy(){return {isRequired:null==this.wkt}}}}}}})],k$3.prototype,"wkid",void 0),e$x([y$d({type:String,json:{origins:{"web-scene":{write:{overridePolicy(){return {isRequired:null==this.wkid}}}}}}})],k$3.prototype,"wkt",void 0),e$x([r$d("wkt"),r$d("web-scene","wkt")],k$3.prototype,"writeWkt",null),e$x([y$d({type:T$2,json:{write:!0}})],k$3.prototype,"vcsWkid",void 0),e$x([y$d({type:T$2,json:{write:!0}})],k$3.prototype,"latestVcsWkid",void 0),e$x([y$d()],k$3.prototype,"imageCoordinateSystem",void 0),k$3=h$f=e$x([a$i("esri.geometry.SpatialReference")],k$3),k$3.prototype.toJSON.isDefaultToJSON=!0,k$3.GCS_NAD_1927=new k$3({wkid:4267,wkt:'GEOGCS["GCS_North_American_1927",DATUM["D_North_American_1927",SPHEROID["Clarke_1866",6378206.4,294.9786982]],PRIMEM["Greenwich",0.0],UNIT["Degree",0.0174532925199433]]'}),k$3.WGS84=new k$3(p$c),k$3.WebMercator=new k$3(I$3),k$3.PlateCarree=new k$3(c$m),Object.freeze&&(Object.freeze(k$3.GCS_NAD_1927),Object.freeze(k$3.WGS84),Object.freeze(k$3.WebMercator));const f$g=k$3;

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
let c$l=class extends l$f{constructor(...e){super(...e),this.type=null,this.hasM=!1,this.hasZ=!1,this.spatialReference=f$g.WGS84;}get cache(){return this.commitProperty("spatialReference"),{}}get extent(){return null}readSpatialReference(e,r){if(e instanceof f$g)return e;if(null!=e){const t=new f$g;return t.read(e,r),t}return e}clone(){return console.warn(".clone() is not implemented for "+this.declaredClass),null}clearCache(){this.notifyChange("cache");}getCacheValue(e){return this.cache[e]}setCacheValue(e,r){this.cache[e]=r;}};e$x([y$d()],c$l.prototype,"type",void 0),e$x([y$d({readOnly:!0})],c$l.prototype,"cache",null),e$x([y$d({readOnly:!0})],c$l.prototype,"extent",null),e$x([y$d({type:Boolean,json:{write:{overridePolicy:e=>({enabled:e})}}})],c$l.prototype,"hasM",void 0),e$x([y$d({type:Boolean,json:{write:{overridePolicy:e=>({enabled:e})}}})],c$l.prototype,"hasZ",void 0),e$x([y$d({type:f$g,json:{write:!0},value:f$g.WGS84})],c$l.prototype,"spatialReference",void 0),e$x([o$l("spatialReference")],c$l.prototype,"readSpatialReference",null),c$l=e$x([a$i("esri.geometry.Geometry")],c$l);const p$b=c$l;

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
const r$c=Object.prototype.toString;function o$h(n){const r="__accessorMetadata__"in n?d$k(n):n;return function(...t){if(t.push(r),"number"==typeof t[2])throw new Error("Using @cast has parameter decorator is not supported since 4.16");return e$j.apply(this,t)}}function e$j(t,r,o,e){o$v(t,r).cast=e;}function i$h(t){return (r,o)=>{o$v(r,t).cast=r[o];}}function s$i(...t){if(3!==t.length||"string"!=typeof t[1])return 1===t.length&&"[object Function]"===r$c.call(t[0])?o$h(t[0]):1===t.length&&"string"==typeof t[0]?i$h(t[0]):void 0}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
function t$b(t,n){const s=t.x-n.x,r=t.y-n.y,a=t.hasZ&&n.hasZ?t.z-n.z:0;return Math.sqrt(s*s+r*r+a*a)}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
const a$e=57.29577951308232,o$g=.017453292519943;function u$i(n){return n*a$e}function l$d(n){return n*o$g}function c$k(n){return null!=n.wkid||null!=n.wkt}const h$e=[0,0];function m$c(n,t,e,i,r){const s=n,a=r;if(a.spatialReference=e,"x"in s&&"x"in a)[a.x,a.y]=t(s.x,s.y,h$e,i);else if("xmin"in s&&"xmin"in a)[a.xmin,a.ymin]=t(s.xmin,s.ymin,h$e,i),[a.xmax,a.ymax]=t(s.xmax,s.ymax,h$e,i);else if("paths"in s&&"paths"in a||"rings"in s&&"rings"in a){const n="paths"in s?s.paths:s.rings,e=[];let r;for(let s=0;s<n.length;s++){const a=n[s];r=[],e.push(r);for(let n=0;n<a.length;n++)r.push(t(a[n][0],a[n][1],[0,0],i)),a[n].length>2&&r[n].push(a[n][2]),a[n].length>3&&r[n].push(a[n][3]);}"paths"in a?a.paths=e:a.rings=e;}else if("points"in s&&"points"in a){const n=s.points,e=[];for(let r=0;r<n.length;r++)e[r]=t(n[r][0],n[r][1],[0,0],i),n[r].length>2&&e[r].push(n[r][2]),n[r].length>3&&e[r].push(n[r][3]);a.points=e;}return r}function x$b(n,t){const e=n&&(c$k(n)?n:n.spatialReference),a=t&&(c$k(t)?t:t.spatialReference);return !(n&&"type"in n&&"mesh"===n.type||t&&"type"in t&&"mesh"===t.type||!e||!a)&&(!!S$4(a,e)||(A$6(a)&&u$j(e)||A$6(e)&&u$j(a)))}function g$8(e,a){if(null==e)return null;const o=e.spatialReference,u=a&&(c$k(a)?a:a.spatialReference);return x$b(o,u)?S$4(o,u)?a$v(e):A$6(u)?m$c(e,M$4,f$g.WebMercator,!1,a$v(e)):u$j(u)?m$c(e,y$8,f$g.WGS84,!1,a$v(e)):null:null}function M$4(n,t,i=[0,0]){t>89.99999?t=89.99999:t<-89.99999&&(t=-89.99999);const r=l$d(t);return i[0]=l$d(n)*s$k.radius,i[1]=s$k.halfSemiMajorAxis*Math.log((1+Math.sin(r))/(1-Math.sin(r))),i}function y$8(n,t,i=[0,0],r=!1){const s=u$i(n/s$k.radius);return i[0]=r?s:s-360*Math.floor((s+180)/360),i[1]=u$i(Math.PI/2-2*Math.atan(Math.exp(-t/s$k.radius))),i}function d$e(e,i=!1,r=a$v(e)){return m$c(e,M$4,f$g.WebMercator,i,r)}function R$2(e,i=!1,r=a$v(e)){return m$c(e,y$8,f$g.WGS84,i,r)}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
var y$7;const m$b=[0,0];function f$f(e){return e&&("esri.geometry.SpatialReference"===e.declaredClass||null!=e.wkid)}let g$7=y$7=class extends p$b{static copy(e,t){t._set("x",e._get("x")),t._set("y",e._get("y")),t._set("z",e._get("z")),t._set("m",e._get("m"));const r=e._get("spatialReference");t._set("spatialReference",Object.isFrozen(r)?r:r.clone());}constructor(...e){super(...e),this.x=0,this.y=0,this.z=void 0,this.m=void 0,this.type="point";}normalizeCtorArgs(e,r,i,s,o){let a;if(Array.isArray(e))a=e,o=r,e=a[0],r=a[1],i=a[2],s=a[3];else if(e&&"object"==typeof e){if(a=e,e=null!=a.x?a.x:a.longitude,r=null!=a.y?a.y:a.latitude,i=a.z,s=a.m,(o=a.spatialReference)&&"esri.geometry.SpatialReference"!==o.declaredClass&&(o=new f$g(o)),null!=a.longitude||null!=a.latitude)if(null==a.longitude)s$E.getLogger(this).warn(".longitude=","Latitude was defined without longitude");else if(null==a.latitude)s$E.getLogger(this).warn(".latitude=","Longitude was defined without latitude");else if(!a.declaredClass&&o&&o.isWebMercator){const t=M$4(a.longitude,a.latitude,m$b);e=t[0],r=t[1];}}else f$f(i)?(o=i,i=null):f$f(s)&&(o=s,s=null);const l={x:e,y:r};return null==l.x&&null!=l.y?s$E.getLogger(this).warn(".y=","Y coordinate was defined without an X coordinate"):null==l.y&&null!=l.x&&s$E.getLogger(this).warn(".x=","X coordinate was defined without a Y coordinate"),null!=o&&(l.spatialReference=o),null!=i&&(l.z=i),null!=s&&(l.m=s),l}get cache(){return this.commitProperty("x"),this.commitProperty("y"),this.commitProperty("z"),this.commitProperty("m"),this.commitProperty("spatialReference"),{}}get hasM(){return void 0!==this.m}set hasM(e){e!==(void 0!==this._get("m"))&&(this._set("m",e?0:void 0),this._set("hasM",e));}get hasZ(){return void 0!==this.z}set hasZ(e){e!==(void 0!==this._get("z"))&&(this._set("z",e?0:void 0),this._set("hasZ",e));}get latitude(){const{spatialReference:e,x:t,y:r}=this;if(e){if(e.isWebMercator)return y$8(t,r,m$b)[1];if(e.isGeographic)return r}return null}set latitude(e){const{spatialReference:t,x:r}=this;null!=e&&t&&(t.isWebMercator?this._set("y",M$4(r,e,m$b)[1]):t.isGeographic&&this._set("y",e),this._set("latitude",e));}get longitude(){const{x:e,y:t,spatialReference:r}=this;if(r){if(r.isWebMercator)return y$8(e,t,m$b)[0];if(r.isGeographic)return e}return null}set longitude(e){const{y:t,spatialReference:r}=this;null!=e&&r&&(r.isWebMercator?this._set("x",M$4(e,t,m$b)[0]):r.isGeographic&&this._set("x",e),this._set("longitude",e));}writeX(e,t,r){t[r]=isNaN(e)?"NaN":e;}readX(e){return "string"==typeof e?NaN:e}clone(){const e=new y$7;return e.x=this.x,e.y=this.y,e.z=this.z,e.m=this.m,e.spatialReference=this.spatialReference,e}copy(e){return y$7.copy(e,this),this}equals(e){if(null==e)return !1;const{x:t,y:r,z:i,m:s,spatialReference:o}=this,{z:a,m:l}=e;let{x:n,y:u,spatialReference:c}=e;if(!o.equals(c))if(o.isWebMercator&&c.isWGS84)[n,u]=M$4(n,u),c=o;else {if(!o.isWGS84||!c.isWebMercator)return !1;[n,u]=y$8(n,u),c=o;}return t===n&&r===u&&i===a&&s===l&&o.wkid===c.wkid}offset(e,t,r){return this.x+=e,this.y+=t,null!=r&&(this.z=(this.z??0)+r),this}normalize(){if(!this.spatialReference)return this;const e=d$g(this.spatialReference);if(!e)return this;let t=this.x;const[r,i]=e.valid,s=2*i;let o;return t>i?(o=Math.ceil(Math.abs(t-i)/s),t-=o*s):t<r&&(o=Math.ceil(Math.abs(t-r)/s),t+=o*s),this._set("x",t),this}distance(e){return t$b(this,e)}toArray(){const e=this.hasZ,t=this.hasM;return e&&t?[this.x,this.y,this.z,this.m]:e?[this.x,this.y,this.z]:t?[this.x,this.y,this.m]:[this.x,this.y]}toJSON(e){return this.write({},e)}};e$x([y$d({readOnly:!0})],g$7.prototype,"cache",null),e$x([y$d({type:Boolean,json:{read:!1,write:{enabled:!1,overridePolicy:null}}})],g$7.prototype,"hasM",null),e$x([y$d({type:Boolean,json:{read:!1,write:{enabled:!1,overridePolicy:null}}})],g$7.prototype,"hasZ",null),e$x([y$d({type:Number})],g$7.prototype,"latitude",null),e$x([y$d({type:Number})],g$7.prototype,"longitude",null),e$x([y$d({type:Number,json:{type:[Number,String],write:{isRequired:!0,allowNull:!0}}}),s$i((e=>isNaN(e)?e:a$m(e)))],g$7.prototype,"x",void 0),e$x([r$d("x")],g$7.prototype,"writeX",null),e$x([o$l("x")],g$7.prototype,"readX",null),e$x([y$d({type:Number,json:{write:!0}})],g$7.prototype,"y",void 0),e$x([y$d({type:Number,json:{write:{overridePolicy(){return {enabled:this.hasZ}}}}})],g$7.prototype,"z",void 0),e$x([y$d({type:Number,json:{write:{overridePolicy(){return {enabled:this.hasM}}}}})],g$7.prototype,"m",void 0),g$7=y$7=e$x([a$i("esri.geometry.Point")],g$7),g$7.prototype.toJSON.isDefaultToJSON=!0;const x$a=g$7;

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
const n$f=[0,0];function t$a(n,t){return null!=t&&e$i(n,t.x,t.y,t.z)}function u$h(n,t){const{xmin:r,ymin:u,zmin:i,xmax:o,ymax:f,zmax:c}=t;return n.hasZ&&t.hasZ?e$i(n,r,u,i)&&e$i(n,r,f,i)&&e$i(n,o,f,i)&&e$i(n,o,u,i)&&e$i(n,r,u,c)&&e$i(n,r,f,c)&&e$i(n,o,f,c)&&e$i(n,o,u,c):e$i(n,r,u)&&e$i(n,r,f)&&e$i(n,o,f)&&e$i(n,o,u)}function i$g(n,t){return e$i(n,t[0],t[1])}function o$f(n,t){return e$i(n,t[0],t[1],t[2])}function e$i(n,t,r,u){return t>=n.xmin&&t<=n.xmax&&r>=n.ymin&&r<=n.ymax&&(null==u||!n.hasZ||u>=n.zmin&&u<=n.zmax)}function f$e(t,r){return n$f[1]=r.y,n$f[0]=r.x,c$j(t,n$f)}function c$j(n,t){return s$h(n.rings,t)}function s$h(n,t){if(!n)return !1;if(x$9(n))return m$a(!1,n,t);let r=!1;for(let u=0,i=n.length;u<i;u++)r=m$a(r,n[u],t);return r}function x$9(n){return !Array.isArray(n[0][0])}function m$a(n,t,r){const[u,i]=r;let o=n,e=0;for(let f=0,c=t.length;f<c;f++){e++,e===c&&(e=0);const[n,r]=t[f],[s,x]=t[e];(r<i&&x>=i||x<i&&r>=i)&&n+(i-r)/(x-r)*(s-n)<u&&(o=!o);}return o}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
function i$f(t,e){return t$a(t,e)}function o$e(n,t){const e=n.hasZ&&t.hasZ;let r,i,o;if(n.xmin<=t.xmin){if(r=t.xmin,n.xmax<r)return !1}else if(r=n.xmin,t.xmax<r)return !1;if(n.ymin<=t.ymin){if(i=t.ymin,n.ymax<i)return !1}else if(i=n.ymin,t.ymax<i)return !1;if(e&&t.hasZ)if(n.zmin<=t.zmin){if(o=t.zmin,n.zmax<o)return !1}else if(o=n.zmin,t.zmax<o)return !1;return !0}function f$d(n,t){const{points:i,hasZ:o}=t,f=o?o$f:i$g;for(const e of i)if(f(n,e))return !0;return !1}const s$g=[0,0],u$g=[0,0],c$i=[0,0],m$9=[0,0],l$c=[s$g,u$g,c$i,m$9],a$d=[[c$i,s$g],[s$g,u$g],[u$g,m$9],[m$9,c$i]];function x$8(n,t){return y$6(n,t.rings)}function y$6(n,r){s$g[0]=n.xmin,s$g[1]=n.ymax,u$g[0]=n.xmax,u$g[1]=n.ymax,c$i[0]=n.xmin,c$i[1]=n.ymin,m$9[0]=n.xmax,m$9[1]=n.ymin;for(const e of l$c)if(s$h(r,e))return !0;for(const t of r){if(!t.length)continue;let r=t[0];if(i$g(n,r))return !0;for(let i=1;i<t.length;i++){const o=t[i];if(i$g(n,o)||z$4(r,o,a$d))return !0;r=o;}}return !1}function h$d(n,t){s$g[0]=n.xmin,s$g[1]=n.ymax,u$g[0]=n.xmax,u$g[1]=n.ymax,c$i[0]=n.xmin,c$i[1]=n.ymin,m$9[0]=n.xmax,m$9[1]=n.ymin;const r=t.paths;for(const i of r){if(!r.length)continue;let t=i[0];if(i$g(n,t))return !0;for(let r=1;r<i.length;r++){const o=i[r];if(i$g(n,o)||z$4(t,o,a$d))return !0;t=o;}}return !1}const g$6=[0,0];function p$a(n){for(let t=0;t<n.length;t++){const e=n[t];for(let i=0;i<e.length-1;i++){const r=e[i],o=e[i+1];for(let e=t+1;e<n.length;e++)for(let t=0;t<n[e].length-1;t++){const i=n[e][t],f=n[e][t+1];if(G$1(r,o,i,f,g$6)&&!(g$6[0]===r[0]&&g$6[1]===r[1]||g$6[0]===i[0]&&g$6[1]===i[1]||g$6[0]===o[0]&&g$6[1]===o[1]||g$6[0]===f[0]&&g$6[1]===f[1]))return !0}}const r=e.length;if(!(r<=4))for(let n=0;n<r-3;n++){let t=r-1;0===n&&(t=r-2);const i=e[n],o=e[n+1];for(let r=n+2;r<t;r++){const n=e[r],t=e[r+1];if(G$1(i,o,n,t,g$6)&&!(g$6[0]===i[0]&&g$6[1]===i[1]||g$6[0]===n[0]&&g$6[1]===n[1]||g$6[0]===o[0]&&g$6[1]===o[1]||g$6[0]===t[0]&&g$6[1]===t[1]))return !0}}}return !1}function z$4(n,t,e){for(let r=0;r<e.length;r++)if(G$1(n,t,e[r][0],e[r][1]))return !0;return !1}function G$1(n,t,e,r,i){const[o,f]=n,[s,u]=t,[c,m]=e,[l,a]=r,x=l-c,y=o-c,h=s-o,g=a-m,p=f-m,z=u-f,G=g*h-x*z;if(0===G)return !1;const Z=(x*p-g*y)/G,P=(h*p-z*y)/G;return Z>=0&&Z<=1&&P>=0&&P<=1&&(i&&(i[0]=o+Z*(s-o),i[1]=f+Z*(u-f)),!0)}function Z$1(n){switch(n){case"esriGeometryEnvelope":case"extent":return o$e;case"esriGeometryMultipoint":case"multipoint":return f$d;case"esriGeometryPoint":case"point":return i$f;case"esriGeometryPolygon":case"polygon":return x$8;case"esriGeometryPolyline":case"polyline":return h$d}}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
var u$f;function f$c(t){return t&&("esri.geometry.SpatialReference"===t.declaredClass||null!=t.wkid)}function d$d(t,i,e){return null==i?e:null==e?i:t(i,e)}let z$3=u$f=class extends p$b{constructor(...t){super(...t),this.type="extent",this.xmin=0,this.ymin=0,this.mmin=void 0,this.zmin=void 0,this.xmax=0,this.ymax=0,this.mmax=void 0,this.zmax=void 0;}normalizeCtorArgs(t,i,e,s,n){return f$c(t)?{spatialReference:t,xmin:0,ymin:0,xmax:0,ymax:0}:"object"==typeof t?(t.spatialReference=null==t.spatialReference?f$g.WGS84:t.spatialReference,t):{xmin:t,ymin:i,xmax:e,ymax:s,spatialReference:n??f$g.WGS84}}static fromBounds(t,i){return new u$f({xmin:t[0],ymin:t[1],xmax:t[2],ymax:t[3],spatialReference:i})}static fromPoint(t){return new u$f({xmin:t.x,ymin:t.y,zmin:t.z,xmax:t.x,ymax:t.y,zmax:t.z,spatialReference:t.spatialReference})}get cache(){return this.commitProperty("xmin"),this.commitProperty("ymin"),this.commitProperty("zmin"),this.commitProperty("mmin"),this.commitProperty("xmax"),this.commitProperty("ymax"),this.commitProperty("zmax"),this.commitProperty("mmax"),this.commitProperty("spatialReference"),{}}get center(){const t=new x$a({x:.5*(this.xmin+this.xmax),y:.5*(this.ymin+this.ymax),spatialReference:this.spatialReference});return this.hasZ&&(t.z=.5*(this.zmin+this.zmax)),this.hasM&&(t.m=.5*(this.mmin+this.mmax)),t}get extent(){return this.clone()}get hasM(){return null!=this.mmin&&null!=this.mmax}get hasZ(){return null!=this.zmin&&null!=this.zmax}get height(){return Math.abs(this.ymax-this.ymin)}get width(){return Math.abs(this.xmax-this.xmin)}centerAt(t){const i=this.center;return null!=t.z&&this.hasZ?this.offset(t.x-i.x,t.y-i.y,t.z-i.z):this.offset(t.x-i.x,t.y-i.y)}clone(){const t=new u$f;return t.xmin=this.xmin,t.ymin=this.ymin,t.xmax=this.xmax,t.ymax=this.ymax,t.spatialReference=this.spatialReference,null!=this.zmin&&(t.zmin=this.zmin,t.zmax=this.zmax),null!=this.mmin&&(t.mmin=this.mmin,t.mmax=this.mmax),t}contains(t){if(!t)return !1;const i=this.spatialReference,e=t.spatialReference;return i&&e&&!i.equals(e)&&x$b(i,e)&&(t=i.isWebMercator?d$e(t):R$2(t,!0)),"point"===t.type?t$a(this,t):"extent"===t.type&&u$h(this,t)}equals(t){if(this===t)return !0;if(null==t)return !1;const i=this.spatialReference,e=t.spatialReference;return i&&e&&!i.equals(e)&&x$b(i,e)&&(t=i.isWebMercator?d$e(t):R$2(t,!0)),this.xmin===t.xmin&&this.ymin===t.ymin&&this.zmin===t.zmin&&this.mmin===t.mmin&&this.xmax===t.xmax&&this.ymax===t.ymax&&this.zmax===t.zmax&&this.mmax===t.mmax}expand(t){const i=.5*(1-t),e=this.width*i,s=this.height*i;if(this.xmin+=e,this.ymin+=s,this.xmax-=e,this.ymax-=s,this.hasZ){const t=(this.zmax-this.zmin)*i;this.zmin+=t,this.zmax-=t;}if(this.hasM){const t=(this.mmax-this.mmin)*i;this.mmin+=t,this.mmax-=t;}return this}intersects(t){if(null==t)return !1;"mesh"===t.type&&(t=t.extent);const i=this.spatialReference,e=t.spatialReference;i&&e&&!S$4(i,e)&&x$b(i,e)&&(t=i.isWebMercator?d$e(t):R$2(t,!0));return Z$1(t.type)(this,t)}normalize(){const t=this._normalize(!1,!0);return Array.isArray(t)?t:[t]}offset(t,i,e){return this.xmin+=t,this.ymin+=i,this.xmax+=t,this.ymax+=i,null!=e&&(this.zmin+=e,this.zmax+=e),this}shiftCentralMeridian(){return this._normalize(!0)}union(t){return this===t||(this.xmin=Math.min(this.xmin,t.xmin),this.ymin=Math.min(this.ymin,t.ymin),this.xmax=Math.max(this.xmax,t.xmax),this.ymax=Math.max(this.ymax,t.ymax),(this.hasZ||t.hasZ)&&(this.zmin=d$d(Math.min,this.zmin,t.zmin),this.zmax=d$d(Math.max,this.zmax,t.zmax)),(this.hasM||t.hasM)&&(this.mmin=d$d(Math.min,this.mmin,t.mmin),this.mmax=d$d(Math.max,this.mmax,t.mmax))),this}intersection(t){return this===t?this:null!=t&&this.intersects(t)?(this.xmin=Math.max(this.xmin,t.xmin),this.ymin=Math.max(this.ymin,t.ymin),this.xmax=Math.min(this.xmax,t.xmax),this.ymax=Math.min(this.ymax,t.ymax),(this.hasZ||t.hasZ)&&(this.zmin=d$d(Math.max,this.zmin,t.zmin),this.zmax=d$d(Math.min,this.zmax,t.zmax)),(this.hasM||t.hasM)&&(this.mmin=d$d(Math.max,this.mmin,t.mmin),this.mmax=d$d(Math.min,this.mmax,t.mmax)),this):null}toJSON(t){return this.write({},t)}_shiftCM(t=d$g(this.spatialReference)){if(!t||!this.spatialReference)return this;const e=this.spatialReference,s=this._getCM(t);if(s){const n=e.isWebMercator?R$2(s):s;this.xmin-=s.x,this.xmax-=s.x,e.isWebMercator||(n.x=this._normalizeX(n.x,t).x),this.spatialReference=new f$g(r$q((e.isWGS84?t.altTemplate:null)??t.wkTemplate,{Central_Meridian:n.x}));}return this}_getCM(t){let i=null;const[e,s]=t.valid,n=this.xmin,m=this.xmax;return n>=e&&n<=s&&(m>=e&&m<=s)||(i=this.center),i}_normalize(t,i,e){const s=this.spatialReference;if(!s)return this;const n=e??d$g(s);if(null==n)return this;const m=this._getParts(n).map((t=>t.extent));if(m.length<2)return m[0]||this;if(m.length>2)return t?this._shiftCM(n):this.set({xmin:n.valid[0],xmax:n.valid[1]});if(t)return this._shiftCM(n);if(i)return m;let r=!0,a=!0;return m.forEach((t=>{t.hasZ||(r=!1),t.hasM||(a=!1);})),{rings:m.map((t=>{const i=[[t.xmin,t.ymin],[t.xmin,t.ymax],[t.xmax,t.ymax],[t.xmax,t.ymin],[t.xmin,t.ymin]];if(r){const e=(t.zmax-t.zmin)/2;for(let t=0;t<i.length;t++)i[t].push(e);}if(a){const e=(t.mmax-t.mmin)/2;for(let t=0;t<i.length;t++)i[t].push(e);}return i})),hasZ:r,hasM:a,spatialReference:s}}_getParts(t){let i=this.cache._parts;if(!i){i=[];const{ymin:e,ymax:s,spatialReference:n}=this,m=this.width,r=this.xmin,a=this.xmax;let h;t=t||d$g(n);const[o,x]=t.valid;h=this._normalizeX(this.xmin,t);const p=h.x,c=h.frameId;h=this._normalizeX(this.xmax,t);const y=h.x,f=h.frameId,d=p===y&&m>0;if(m>2*x){const t=new u$f(r<a?p:y,e,x,s,n),m=new u$f(o,e,r<a?y:p,s,n),h=new u$f(0,e,x,s,n),l=new u$f(o,e,0,s,n),d=[],z=[];t.contains(h)&&d.push(c),t.contains(l)&&z.push(c),m.contains(h)&&d.push(f),m.contains(l)&&z.push(f);for(let i=c+1;i<f;i++)d.push(i),z.push(i);i.push({extent:t,frameIds:[c]},{extent:m,frameIds:[f]},{extent:h,frameIds:d},{extent:l,frameIds:z});}else p>y||d?i.push({extent:new u$f(p,e,x,s,n),frameIds:[c]},{extent:new u$f(o,e,y,s,n),frameIds:[f]}):i.push({extent:new u$f(p,e,y,s,n),frameIds:[c]});this.cache._parts=i;}const e=this.hasZ,s=this.hasM;if(e||s){const t={};e&&(t.zmin=this.zmin,t.zmax=this.zmax),s&&(t.mmin=this.mmin,t.mmax=this.mmax);for(let e=0;e<i.length;e++)i[e].extent.set(t);}return i}_normalizeX(t,i){const[e,s]=i.valid,n=2*s;let m,r=0;return t>s?(m=Math.ceil(Math.abs(t-s)/n),t-=m*n,r=m):t<e&&(m=Math.ceil(Math.abs(t-e)/n),t+=m*n,r=-m),{x:t,frameId:r}}};e$x([y$d({readOnly:!0})],z$3.prototype,"cache",null),e$x([y$d({readOnly:!0})],z$3.prototype,"center",null),e$x([y$d({readOnly:!0})],z$3.prototype,"extent",null),e$x([y$d({readOnly:!0,json:{write:{enabled:!1,overridePolicy:null}}})],z$3.prototype,"hasM",null),e$x([y$d({readOnly:!0,json:{write:{enabled:!1,overridePolicy:null}}})],z$3.prototype,"hasZ",null),e$x([y$d({readOnly:!0})],z$3.prototype,"height",null),e$x([y$d({readOnly:!0})],z$3.prototype,"width",null),e$x([y$d({type:Number,json:{type:[Number,String],write:{enabled:!0,allowNull:!0}}})],z$3.prototype,"xmin",void 0),e$x([y$d({type:Number,json:{write:!0}})],z$3.prototype,"ymin",void 0),e$x([y$d({type:Number,json:{origins:{"web-scene":{write:!1}},write:{overridePolicy(){return {enabled:this.hasM}}}}})],z$3.prototype,"mmin",void 0),e$x([y$d({type:Number,json:{origins:{"web-scene":{write:!1}},write:{overridePolicy(){return {enabled:this.hasZ}}}}})],z$3.prototype,"zmin",void 0),e$x([y$d({type:Number,json:{write:!0}})],z$3.prototype,"xmax",void 0),e$x([y$d({type:Number,json:{write:!0}})],z$3.prototype,"ymax",void 0),e$x([y$d({type:Number,json:{origins:{"web-scene":{write:!1}},write:{overridePolicy(){return {enabled:this.hasM}}}}})],z$3.prototype,"mmax",void 0),e$x([y$d({type:Number,json:{origins:{"web-scene":{write:!1}},write:{overridePolicy(){return {enabled:this.hasZ}}}}})],z$3.prototype,"zmax",void 0),z$3=u$f=e$x([a$i("esri.geometry.Extent")],z$3),z$3.prototype.toJSON.isDefaultToJSON=!0;const M$3=z$3;

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
let i$e=class extends l$f{constructor(t){super(t),this.address=null,this.attributes=null,this.extent=null,this.location=null,this.score=null;}};e$x([y$d({type:String,json:{write:!0}})],i$e.prototype,"address",void 0),e$x([y$d({type:Object,json:{write:!0}})],i$e.prototype,"attributes",void 0),e$x([y$d({type:M$3,json:{write:!0}})],i$e.prototype,"extent",void 0),e$x([y$d({type:x$a,json:{write:!0}})],i$e.prototype,"location",void 0),e$x([y$d({type:Number,json:{write:!0}})],i$e.prototype,"score",void 0),i$e=e$x([a$i("esri.rest.support.AddressCandidate")],i$e);const c$h=i$e;

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
function h$c(h,a,s=!1){let{hasM:t,hasZ:e}=h;Array.isArray(a)?4!==a.length||t||e?3===a.length&&s&&!t?(e=!0,t=!1):3===a.length&&t&&e&&(t=!1,e=!1):(t=!0,e=!0):(e=!e&&a.hasZ&&(!t||a.hasM),t=!t&&a.hasM&&(!e||a.hasZ)),h.hasZ=e,h.hasM=t;}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
var h$b;function l$b(t){return (s,e)=>null==s?e:null==e?s:t(s,e)}function c$g(t){return t&&("esri.geometry.SpatialReference"===t.declaredClass||null!=t.wkid)}let m$8=h$b=class extends p$b{constructor(...t){super(...t),this.points=[],this.type="multipoint";}normalizeCtorArgs(t,s){if(!t&&!s)return {};const e={};Array.isArray(t)?(e.points=t,e.spatialReference=s):c$g(t)?e.spatialReference=t:(t.points&&(e.points=t.points),t.spatialReference&&(e.spatialReference=t.spatialReference),t.hasZ&&(e.hasZ=t.hasZ),t.hasM&&(e.hasM=t.hasM));const i=e.points&&e.points[0];return i&&(void 0===e.hasZ&&void 0===e.hasM?(e.hasZ=i.length>2,e.hasM=!1):void 0===e.hasZ?e.hasZ=i.length>3:void 0===e.hasM&&(e.hasM=i.length>3)),e}get cache(){return this.commitProperty("points"),this.commitProperty("hasZ"),this.commitProperty("hasM"),this.commitProperty("spatialReference"),{}}get extent(){const t=this.points;if(!t.length)return null;const s=new M$3,e=this.hasZ,i=this.hasM,r=e?3:2,n=t[0],a=l$b(Math.min),p=l$b(Math.max);let h,c,m,u,[f,y]=n,[d,g]=n;for(let o=0,l=t.length;o<l;o++){const s=t[o],[n,l]=s;if(f=a(f,n),y=a(y,l),d=p(d,n),g=p(g,l),e&&s.length>2){const t=s[2];h=a(h,t),m=p(m,t);}if(i&&s.length>r){const t=s[r];c=a(c,t),u=p(u,t);}}return s.xmin=f,s.ymin=y,s.xmax=d,s.ymax=g,s.spatialReference=this.spatialReference,e?(s.zmin=h,s.zmax=m):(s.zmin=void 0,s.zmax=void 0),i?(s.mmin=c,s.mmax=u):(s.mmin=void 0,s.mmax=void 0),s}writePoints(t,e){e.points=a$v(this.points);}addPoint(t){return h$c(this,t),Array.isArray(t)?this.points.push(t):this.points.push(t.toArray()),this.notifyChange("points"),this}clone(){const t={points:a$v(this.points),spatialReference:this.spatialReference};return this.hasZ&&(t.hasZ=!0),this.hasM&&(t.hasM=!0),new h$b(t)}getPoint(t){if(!this._validateInputs(t))return null;const s=this.points[t],e={x:s[0],y:s[1],spatialReference:this.spatialReference};let i=2;return this.hasZ&&(e.z=s[2],i=3),this.hasM&&(e.m=s[i]),new x$a(e)}removePoint(t){if(!this._validateInputs(t))return null;const s=new x$a(this.points.splice(t,1)[0],this.spatialReference);return this.notifyChange("points"),s}setPoint(t,s){return this._validateInputs(t)?(h$c(this,s),Array.isArray(s)||(s=s.toArray()),this.points[t]=s,this.notifyChange("points"),this):this}toJSON(t){return this.write({},t)}_validateInputs(t){return null!=t&&t>=0&&t<this.points.length}};e$x([y$d({readOnly:!0})],m$8.prototype,"cache",null),e$x([y$d()],m$8.prototype,"extent",null),e$x([y$d({type:[[Number]],json:{write:{isRequired:!0}}})],m$8.prototype,"points",void 0),e$x([r$d("points")],m$8.prototype,"writePoints",null),m$8=h$b=e$x([a$i("esri.geometry.Multipoint")],m$8),m$8.prototype.toJSON.isDefaultToJSON=!0;const u$e=m$8;

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
function r$b(t,n){const e=n[0]-t[0],r=n[1]-t[1];if(t.length>2&&n.length>2){const i=t[2]-n[2];return Math.sqrt(e*e+r*r+i*i)}return Math.sqrt(e*e+r*r)}function i$d(t,n,e){const r=t[0]+e*(n[0]-t[0]),i=t[1]+e*(n[1]-t[1]);return t.length>2&&n.length>2?[r,i,t[2]+e*(n[2]-t[2])]:[r,i]}function l$a(t,n){return i$d(t,n,.5)}function h$a(t,n,e){const r=t.length;let i=0,o=0,s=0;for(let f=0;f<r;f++){const l=t[f],u=t[(f+1)%r];let c=2;i+=l[0]*u[1]-u[0]*l[1],l.length>2&&u.length>2&&e&&(o+=l[0]*u[2]-u[0]*l[2],c=3),l.length>c&&u.length>c&&n&&(s+=l[0]*u[c]-u[0]*l[c]);}return i<=0&&o<=0&&s<=0}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
function o$d(t){return t?u$d(t.rings,t.hasZ??!1):null}function u$d(t,n){if(!t||!t.length)return null;const e=[],r=[],l=n?[1/0,-1/0,1/0,-1/0,1/0,-1/0]:[1/0,-1/0,1/0,-1/0];for(let o=0,u=t.length;o<u;o++){const e=s$f(t[o],n,l);e&&r.push(e);}if(r.sort(((t,e)=>{let r=t[2]-e[2];return 0===r&&n&&(r=t[4]-e[4]),r})),r.length&&(e[0]=r[0][0],e[1]=r[0][1],n&&(e[2]=r[0][3]),(e[0]<l[0]||e[0]>l[1]||e[1]<l[2]||e[1]>l[3]||n&&(e[2]<l[4]||e[2]>l[5]))&&(e.length=0)),!e.length){const r=t[0]&&t[0].length?I$2(t[0],n):null;if(!r)return null;e[0]=r[0],e[1]=r[1],n&&r.length>2&&(e[2]=r[2]);}return e}function s$f(t,n,e){let r=0,l=0,o=0,u=0,s=0;const I=t.length?t[0][0]:0,i=t.length?t[0][1]:0,h=t.length&&n?t[0][2]:0;for(let N=0;N<t.length;N++){const c=t[N],f=t[(N+1)%t.length],[m,x,g]=c,P=m-I,T=x-i,[a,E,y]=f,b=a-I,F=E-i,V=P*F-b*T;if(u+=V,r+=(P+b)*V,l+=(T+F)*V,n&&c.length>2&&f.length>2){const t=g-h,n=y-h,e=P*n-b*t;o+=(t+n)*e,s+=e;}m<e[0]&&(e[0]=m),m>e[1]&&(e[1]=m),x<e[2]&&(e[2]=x),x>e[3]&&(e[3]=x),n&&(g<e[4]&&(e[4]=g),g>e[5]&&(e[5]=g));}if(u>0&&(u*=-1),s>0&&(s*=-1),!u)return null;u*=.5,s*=.5;const c=[r/(6*u)+I,l/(6*u)+i,u];return n&&(e[4]===e[5]||0===s?(c[3]=(e[4]+e[5])/2,c[4]=0):(c[3]=o/(6*s)+h,c[4]=s)),c}function I$2(t,r){const l=r?[0,0,0]:[0,0],o=r?[0,0,0]:[0,0];let u=0,s=0,I=0,i=0;for(let h=0,c=t.length;h<c-1;h++){const c=t[h],N=t[h+1];if(c&&N){l[0]=c[0],l[1]=c[1],o[0]=N[0],o[1]=N[1],r&&c.length>2&&N.length>2&&(l[2]=c[2],o[2]=N[2]);const t=r$b(l,o);if(t){u+=t;const n=l$a(c,N);s+=t*n[0],I+=t*n[1],r&&n.length>2&&(i+=t*n[2]);}}}return u>0?r?[s/u,I/u,i/u]:[s/u,I/u]:t.length?t[0]:null}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
function n$e(){return [0,0,0]}function t$9(n){return [n[0],n[1],n[2]]}function r$a(n,t,r){return [n,t,r]}function e$h(t){const r=n$e(),e=Math.min(3,t.length);for(let n=0;n<e;++n)r[n]=t[n];return r}function u$c(n,t){return new Float64Array(n,t,3)}function o$c(){return n$e()}function a$c(){return r$a(1,1,1)}function s$e(){return r$a(1,0,0)}function c$f(){return r$a(0,1,0)}function i$c(){return r$a(0,0,1)}const f$b=o$c(),l$9=a$c(),_$7=s$e(),O$3=c$f(),b$4=i$c();Object.freeze(Object.defineProperty({__proto__:null,ONES:l$9,UNIT_X:_$7,UNIT_Y:O$3,UNIT_Z:b$4,ZEROS:f$b,clone:t$9,create:n$e,createView:u$c,fromArray:e$h,fromValues:r$a,ones:a$c,unitX:s$e,unitY:c$f,unitZ:i$c,zeros:o$c},Symbol.toStringTag,{value:"Module"}));

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
let t$8=1e-6;function a$b(){return t$8}function e$g(a){t$8=a;}const n$d=Math.random,o$b=Math.PI/180,s$d=180/Math.PI;function r$9(t){return t*o$b}function u$b(t){return t*s$d}function c$e(a,e){return Math.abs(a-e)<=t$8*Math.max(1,Math.abs(a),Math.abs(e))}Object.freeze(Object.defineProperty({__proto__:null,RANDOM:n$d,equals:c$e,getEpsilon:a$b,setEpsilon:e$g,toDegree:u$b,toRadian:r$9},Symbol.toStringTag,{value:"Module"}));

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
function s$c(t){const n=t[0],a=t[1],s=t[2];return Math.sqrt(n*n+a*a+s*s)}function r$8(t,n){return t[0]=n[0],t[1]=n[1],t[2]=n[2],t}function o$a(t,n,a,s){return t[0]=n,t[1]=a,t[2]=s,t}function u$a(t,n,a){return t[0]=n[0]+a[0],t[1]=n[1]+a[1],t[2]=n[2]+a[2],t}function e$f(t,n,a){return t[0]=n[0]-a[0],t[1]=n[1]-a[1],t[2]=n[2]-a[2],t}function c$d(t,n,a){return t[0]=n[0]*a[0],t[1]=n[1]*a[1],t[2]=n[2]*a[2],t}function i$b(t,n,a){return t[0]=n[0]/a[0],t[1]=n[1]/a[1],t[2]=n[2]/a[2],t}function h$9(t,n){return t[0]=Math.ceil(n[0]),t[1]=Math.ceil(n[1]),t[2]=Math.ceil(n[2]),t}function M$2(t,n){return t[0]=Math.floor(n[0]),t[1]=Math.floor(n[1]),t[2]=Math.floor(n[2]),t}function f$a(t,n){return t[0]=Math.abs(n[0]),t[1]=Math.abs(n[1]),t[2]=Math.abs(n[2]),t}function l$8(t,n){return t[0]=Math.sign(n[0]),t[1]=Math.sign(n[1]),t[2]=Math.sign(n[2]),t}function m$7(t,n,a){return t[0]=Math.min(n[0],a[0]),t[1]=Math.min(n[1],a[1]),t[2]=Math.min(n[2],a[2]),t}function d$c(t,n,a){return t[0]=Math.max(n[0],a[0]),t[1]=Math.max(n[1],a[1]),t[2]=Math.max(n[2],a[2]),t}function b$3(t,n){return t[0]=Math.round(n[0]),t[1]=Math.round(n[1]),t[2]=Math.round(n[2]),t}function g$5(t,n,a){return t[0]=n[0]*a,t[1]=n[1]*a,t[2]=n[2]*a,t}function q$2(t,n,a,s){return t[0]=n[0]+a[0]*s,t[1]=n[1]+a[1]*s,t[2]=n[2]+a[2]*s,t}function x$7(t,n){const a=n[0]-t[0],s=n[1]-t[1],r=n[2]-t[2];return Math.sqrt(a*a+s*s+r*r)}function p$9(t,n){const a=n[0]-t[0],s=n[1]-t[1],r=n[2]-t[2];return a*a+s*s+r*r}function v$3(t){const n=t[0],a=t[1],s=t[2];return n*n+a*a+s*s}function j$4(t,n){return t[0]=-n[0],t[1]=-n[1],t[2]=-n[2],t}function y$5(t,n){return t[0]=1/n[0],t[1]=1/n[1],t[2]=1/n[2],t}function z$2(t,n){const a=n[0],s=n[1],r=n[2];let o=a*a+s*s+r*r;return o>0&&(o=1/Math.sqrt(o),t[0]=n[0]*o,t[1]=n[1]*o,t[2]=n[2]*o),t}function P$1(t,n){return t[0]*n[0]+t[1]*n[1]+t[2]*n[2]}function _$6(t,n,a){const s=n[0],r=n[1],o=n[2],u=a[0],e=a[1],c=a[2];return t[0]=r*c-o*e,t[1]=o*u-s*c,t[2]=s*e-r*u,t}function A$4(t,n,a,s){const r=n[0],o=n[1],u=n[2];return t[0]=r+s*(a[0]-r),t[1]=o+s*(a[1]-o),t[2]=u+s*(a[2]-u),t}function D$4(t,n,a,s,r,o){const u=o*o,e=u*(2*o-3)+1,c=u*(o-2)+o,i=u*(o-1),h=u*(3-2*o);return t[0]=n[0]*e+a[0]*c+s[0]*i+r[0]*h,t[1]=n[1]*e+a[1]*c+s[1]*i+r[1]*h,t[2]=n[2]*e+a[2]*c+s[2]*i+r[2]*h,t}function I$1(t,n,a,s,r,o){const u=1-o,e=u*u,c=o*o,i=e*u,h=3*o*e,M=3*c*u,f=c*o;return t[0]=n[0]*i+a[0]*h+s[0]*M+r[0]*f,t[1]=n[1]*i+a[1]*h+s[1]*M+r[1]*f,t[2]=n[2]*i+a[2]*h+s[2]*M+r[2]*f,t}function L$4(t,n){n=n||1;const s=n$d,r=2*s()*Math.PI,o=2*s()-1,u=Math.sqrt(1-o*o)*n;return t[0]=Math.cos(r)*u,t[1]=Math.sin(r)*u,t[2]=o*n,t}function O$2(t,n,a){const s=n[0],r=n[1],o=n[2];return t[0]=a[0]*s+a[4]*r+a[8]*o+a[12],t[1]=a[1]*s+a[5]*r+a[9]*o+a[13],t[2]=a[2]*s+a[6]*r+a[10]*o+a[14],t}function S$3(t,n,a){const s=n[0],r=n[1],o=n[2];return t[0]=s*a[0]+r*a[3]+o*a[6],t[1]=s*a[1]+r*a[4]+o*a[7],t[2]=s*a[2]+r*a[5]+o*a[8],t}function E$4(t,n,a){const s=a[0],r=a[1],o=a[2],u=a[3],e=n[0],c=n[1],i=n[2];let h=r*i-o*c,M=o*e-s*i,f=s*c-r*e,l=r*f-o*M,m=o*h-s*f,d=s*M-r*h;const b=2*u;return h*=b,M*=b,f*=b,l*=2,m*=2,d*=2,t[0]=e+h+l,t[1]=c+M+m,t[2]=i+f+d,t}function Q(t,n,a,s){const r=[],o=[];return r[0]=n[0]-a[0],r[1]=n[1]-a[1],r[2]=n[2]-a[2],o[0]=r[0],o[1]=r[1]*Math.cos(s)-r[2]*Math.sin(s),o[2]=r[1]*Math.sin(s)+r[2]*Math.cos(s),t[0]=o[0]+a[0],t[1]=o[1]+a[1],t[2]=o[2]+a[2],t}function R$1(t,n,a,s){const r=[],o=[];return r[0]=n[0]-a[0],r[1]=n[1]-a[1],r[2]=n[2]-a[2],o[0]=r[2]*Math.sin(s)+r[0]*Math.cos(s),o[1]=r[1],o[2]=r[2]*Math.cos(s)-r[0]*Math.sin(s),t[0]=o[0]+a[0],t[1]=o[1]+a[1],t[2]=o[2]+a[2],t}function T$1(t,n,a,s){const r=[],o=[];return r[0]=n[0]-a[0],r[1]=n[1]-a[1],r[2]=n[2]-a[2],o[0]=r[0]*Math.cos(s)-r[1]*Math.sin(s),o[1]=r[0]*Math.sin(s)+r[1]*Math.cos(s),o[2]=r[2],t[0]=o[0]+a[0],t[1]=o[1]+a[1],t[2]=o[2]+a[2],t}function k$2(t,n){r$8(w$3,t),r$8(B$3,n),z$2(w$3,w$3),z$2(B$3,B$3);const a=P$1(w$3,B$3);return a>1?0:a<-1?Math.PI:Math.acos(a)}const w$3=n$e(),B$3=n$e();function C$3(t){return "vec3("+t[0]+", "+t[1]+", "+t[2]+")"}function F$1(t,n){return t[0]===n[0]&&t[1]===n[1]&&t[2]===n[2]}function G(t,a){if(t===a)return !0;const s=t[0],r=t[1],o=t[2],u=a[0],e=a[1],c=a[2],i=a$b();return Math.abs(s-u)<=i*Math.max(1,Math.abs(s),Math.abs(u))&&Math.abs(r-e)<=i*Math.max(1,Math.abs(r),Math.abs(e))&&Math.abs(o-c)<=i*Math.max(1,Math.abs(o),Math.abs(c))}function H(t,n,a){const s=a[0]-n[0],r=a[1]-n[1],o=a[2]-n[2];let u=s*s+r*r+o*o;return u>0?(u=1/Math.sqrt(u),t[0]=s*u,t[1]=r*u,t[2]=o*u,t):(t[0]=0,t[1]=0,t[2]=0,t)}const J=e$f,K=c$d,N$1=i$b,U=x$7,X=p$9,Y=s$c,Z=v$3;Object.freeze(Object.defineProperty({__proto__:null,abs:f$a,add:u$a,angle:k$2,bezier:I$1,ceil:h$9,copy:r$8,cross:_$6,direction:H,dist:U,distance:x$7,div:N$1,divide:i$b,dot:P$1,equals:G,exactEquals:F$1,floor:M$2,hermite:D$4,inverse:y$5,len:Y,length:s$c,lerp:A$4,max:d$c,min:m$7,mul:K,multiply:c$d,negate:j$4,normalize:z$2,random:L$4,rotateX:Q,rotateY:R$1,rotateZ:T$1,round:b$3,scale:g$5,scaleAndAdd:q$2,set:o$a,sign:l$8,sqrDist:X,sqrLen:Z,squaredDistance:p$9,squaredLength:v$3,str:C$3,sub:J,subtract:e$f,transformMat3:S$3,transformMat4:O$2,transformQuat:E$4},Symbol.toStringTag,{value:"Module"}));

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
function a$a(t,n){return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t}function r$7(t,n,a,r,s){return t[0]=n,t[1]=a,t[2]=r,t[3]=s,t}function s$b(t,n,a){return t[0]=n[0]+a[0],t[1]=n[1]+a[1],t[2]=n[2]+a[2],t[3]=n[3]+a[3],t}function o$9(t,n,a){return t[0]=n[0]-a[0],t[1]=n[1]-a[1],t[2]=n[2]-a[2],t[3]=n[3]-a[3],t}function u$9(t,n,a){return t[0]=n[0]*a[0],t[1]=n[1]*a[1],t[2]=n[2]*a[2],t[3]=n[3]*a[3],t}function e$e(t,n,a){return t[0]=n[0]/a[0],t[1]=n[1]/a[1],t[2]=n[2]/a[2],t[3]=n[3]/a[3],t}function c$c(t,n){return t[0]=Math.ceil(n[0]),t[1]=Math.ceil(n[1]),t[2]=Math.ceil(n[2]),t[3]=Math.ceil(n[3]),t}function i$a(t,n){return t[0]=Math.floor(n[0]),t[1]=Math.floor(n[1]),t[2]=Math.floor(n[2]),t[3]=Math.floor(n[3]),t}function h$8(t,n,a){return t[0]=Math.min(n[0],a[0]),t[1]=Math.min(n[1],a[1]),t[2]=Math.min(n[2],a[2]),t[3]=Math.min(n[3],a[3]),t}function M$1(t,n,a){return t[0]=Math.max(n[0],a[0]),t[1]=Math.max(n[1],a[1]),t[2]=Math.max(n[2],a[2]),t[3]=Math.max(n[3],a[3]),t}function f$9(t,n){return t[0]=Math.round(n[0]),t[1]=Math.round(n[1]),t[2]=Math.round(n[2]),t[3]=Math.round(n[3]),t}function l$7(t,n,a){return t[0]=n[0]*a,t[1]=n[1]*a,t[2]=n[2]*a,t[3]=n[3]*a,t}function m$6(t,n,a,r){return t[0]=n[0]+a[0]*r,t[1]=n[1]+a[1]*r,t[2]=n[2]+a[2]*r,t[3]=n[3]+a[3]*r,t}function d$b(t,n){const a=n[0]-t[0],r=n[1]-t[1],s=n[2]-t[2],o=n[3]-t[3];return Math.sqrt(a*a+r*r+s*s+o*o)}function b$2(t,n){const a=n[0]-t[0],r=n[1]-t[1],s=n[2]-t[2],o=n[3]-t[3];return a*a+r*r+s*s+o*o}function x$6(t){const n=t[0],a=t[1],r=t[2],s=t[3];return Math.sqrt(n*n+a*a+r*r+s*s)}function q$1(t){const n=t[0],a=t[1],r=t[2],s=t[3];return n*n+a*a+r*r+s*s}function p$8(t,n){return t[0]=-n[0],t[1]=-n[1],t[2]=-n[2],t[3]=-n[3],t}function g$4(t,n){return t[0]=1/n[0],t[1]=1/n[1],t[2]=1/n[2],t[3]=1/n[3],t}function v$2(t,n){const a=n[0],r=n[1],s=n[2],o=n[3];let u=a*a+r*r+s*s+o*o;return u>0&&(u=1/Math.sqrt(u),t[0]=a*u,t[1]=r*u,t[2]=s*u,t[3]=o*u),t}function y$4(t,n){return t[0]*n[0]+t[1]*n[1]+t[2]*n[2]+t[3]*n[3]}function j$3(t,n,a,r){const s=n[0],o=n[1],u=n[2],e=n[3];return t[0]=s+r*(a[0]-s),t[1]=o+r*(a[1]-o),t[2]=u+r*(a[2]-u),t[3]=e+r*(a[3]-e),t}function _$5(t,a){const r=n$d;let s,o,u,e,c,i;a=a||1;do{s=2*r()-1,o=2*r()-1,c=s*s+o*o;}while(c>=1);do{u=2*r()-1,e=2*r()-1,i=u*u+e*e;}while(i>=1);const h=Math.sqrt((1-c)/i);return t[0]=a*s,t[1]=a*o,t[2]=a*u*h,t[3]=a*e*h,t}function w$2(t,n,a){const r=n[0],s=n[1],o=n[2],u=n[3];return t[0]=a[0]*r+a[4]*s+a[8]*o+a[12]*u,t[1]=a[1]*r+a[5]*s+a[9]*o+a[13]*u,t[2]=a[2]*r+a[6]*s+a[10]*o+a[14]*u,t[3]=a[3]*r+a[7]*s+a[11]*o+a[15]*u,t}function z$1(t,n,a){const r=n[0],s=n[1],o=n[2],u=a[0],e=a[1],c=a[2],i=a[3],h=i*r+e*o-c*s,M=i*s+c*r-u*o,f=i*o+u*s-e*r,l=-u*r-e*s-c*o;return t[0]=h*i+l*-u+M*-c-f*-e,t[1]=M*i+l*-e+f*-u-h*-c,t[2]=f*i+l*-c+h*-e-M*-u,t[3]=n[3],t}function A$3(t){return "vec4("+t[0]+", "+t[1]+", "+t[2]+", "+t[3]+")"}function D$3(t,n){return t[0]===n[0]&&t[1]===n[1]&&t[2]===n[2]&&t[3]===n[3]}function E$3(n,a){const r=n[0],s=n[1],o=n[2],u=n[3],e=a[0],c=a[1],i=a[2],h=a[3],M=a$b();return Math.abs(r-e)<=M*Math.max(1,Math.abs(r),Math.abs(e))&&Math.abs(s-c)<=M*Math.max(1,Math.abs(s),Math.abs(c))&&Math.abs(o-i)<=M*Math.max(1,Math.abs(o),Math.abs(i))&&Math.abs(u-h)<=M*Math.max(1,Math.abs(u),Math.abs(h))}const L$3=o$9,O$1=u$9,S$2=e$e,k$1=d$b,B$2=b$2,C$2=x$6,F=q$1;Object.freeze(Object.defineProperty({__proto__:null,add:s$b,ceil:c$c,copy:a$a,dist:k$1,distance:d$b,div:S$2,divide:e$e,dot:y$4,equals:E$3,exactEquals:D$3,floor:i$a,inverse:g$4,len:C$2,length:x$6,lerp:j$3,max:M$1,min:h$8,mul:O$1,multiply:u$9,negate:p$8,normalize:v$2,random:_$5,round:f$9,scale:l$7,scaleAndAdd:m$6,set:r$7,sqrDist:B$2,sqrLen:F,squaredDistance:b$2,squaredLength:q$1,str:A$3,sub:L$3,subtract:o$9,transformMat4:w$2,transformQuat:z$1},Symbol.toStringTag,{value:"Module"}));

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
const u$8=new Float32Array(1);const g$3=new DataView(new ArrayBuffer(Float64Array.BYTES_PER_ELEMENT));function E$2(t){return g$3.setFloat64(0,t),g$3.getBigInt64(0)}function B$1(t){return g$3.setBigInt64(0,t),g$3.getFloat64(0)}const I=BigInt("1000000");x$5(1);function x$5(t){const n=E$2(t=Math.abs(t)),r=B$1(n<=I?I:n-I);return Math.abs(t-r)}function P(t){return u$8[0]=t,u$8[0]}P(34028234663852886e22);

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
function u$7(n){function t(t,i){return null==t?i:null==i?t:n(t,i)}return t}const l$6=u$7(Math.min),h$7=u$7(Math.max);function x$4(n,t,i,o){const e=i?3:2;if(!t.length||!t[0].length)return null;let r,u,a,c,[f,m]=t[0][0],[x,s]=t[0][0];for(let g=0;g<t.length;g++){const n=t[g];for(let t=0;t<n.length;t++){const g=n[t],[y,d]=g;if(f=l$6(f,y),m=l$6(m,d),x=h$7(x,y),s=h$7(s,d),i&&g.length>2){const n=g[2];r=l$6(r,n),u=h$7(u,n);}if(o&&g.length>e){const n=g[e];a=l$6(r,n),c=h$7(u,n);}}}return i?o?(n[0]=f,n[1]=m,n[2]=r,n[3]=a,n[4]=x,n[5]=s,n[6]=u,n[7]=c,n.length=8,n):(n[0]=f,n[1]=m,n[2]=r,n[3]=x,n[4]=s,n[5]=u,n.length=6,n):o?(n[0]=f,n[1]=m,n[2]=a,n[3]=x,n[4]=s,n[5]=c,n.length=6,n):(n[0]=f,n[1]=m,n[2]=x,n[3]=s,n.length=4,n)}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
const x$3=[];function a$9(n,i,t,u){return {xmin:n,ymin:i,xmax:t,ymax:u}}function c$b(n,i,t,u,m,o){return {xmin:n,ymin:i,zmin:t,xmax:u,ymax:m,zmax:o}}function s$a(n,i,t,u,m,o){return {xmin:n,ymin:i,mmin:t,xmax:u,ymax:m,mmax:o}}function e$d(n,i,t,u,m,o,r,x){return {xmin:n,ymin:i,zmin:t,mmin:u,xmax:m,ymax:o,zmax:r,mmax:x}}function f$8(n,i=!1,t=!1){return i?t?e$d(n[0],n[1],n[2],n[3],n[4],n[5],n[6],n[7]):c$b(n[0],n[1],n[2],n[3],n[4],n[5]):t?s$a(n[0],n[1],n[2],n[3],n[4],n[5]):a$9(n[0],n[1],n[2],n[3])}function v$1(n){const{hasZ:t,hasM:u,rings:m}=n,o=x$4(x$3,m,t??!1,u??!1);return o?f$8(o,t,u):null}function h$6(n){const{hasZ:t,hasM:u,paths:m}=n,o=x$4(x$3,m,t??!1,u??!1);return o?f$8(o,t,u):null}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
var d$a;function R(t){return !Array.isArray(t[0])}let x$2=d$a=class extends p$b{static fromExtent(t){const e=t.clone().normalize(),r=t.spatialReference;let s=!1,n=!1;for(const o of e)o.hasZ&&(s=!0),o.hasM&&(n=!0);const i={rings:e.map((t=>{const e=[[t.xmin,t.ymin],[t.xmin,t.ymax],[t.xmax,t.ymax],[t.xmax,t.ymin],[t.xmin,t.ymin]];if(s&&t.hasZ){const r=t.zmin+.5*(t.zmax-t.zmin);for(let t=0;t<e.length;t++)e[t].push(r);}if(n&&t.hasM){const r=t.mmin+.5*(t.mmax-t.mmin);for(let t=0;t<e.length;t++)e[t].push(r);}return e})),spatialReference:r};return s&&(i.hasZ=!0),n&&(i.hasM=!0),new d$a(i)}constructor(...t){super(...t),this.rings=[],this.type="polygon";}normalizeCtorArgs(t,e){let r,s,n=null,i=null;return t&&!Array.isArray(t)?(n=t.rings??null,e||(t.spatialReference?e=t.spatialReference:t.rings||(e=t)),r=t.hasZ,s=t.hasM):n=t,n=n||[],e=e||f$g.WGS84,n.length&&n[0]&&null!=n[0][0]&&"number"==typeof n[0][0]&&(n=[n]),i=n[0]&&n[0][0],i&&(void 0===r&&void 0===s?(r=i.length>2,s=i.length>3):void 0===r?r=s?i.length>3:i.length>2:void 0===s&&(s=r?i.length>3:i.length>2)),{rings:n,spatialReference:e,hasZ:r,hasM:s}}get cache(){return this.commitProperty("rings"),this.commitProperty("hasZ"),this.commitProperty("hasM"),this.commitProperty("spatialReference"),{}}get centroid(){const t=o$d(this);if(!t||isNaN(t[0])||isNaN(t[1])||this.hasZ&&isNaN(t[2]))return null;const e=new x$a;return e.x=t[0],e.y=t[1],e.spatialReference=this.spatialReference,this.hasZ&&(e.z=t[2]),e}get extent(){const{spatialReference:t}=this,e=v$1(this);if(!e)return null;const r=new M$3(e);return r.spatialReference=t,r}get isSelfIntersecting(){return p$a(this.rings)}writeRings(t,e){e.rings=a$v(this.rings);}addRing(t){if(!t)return;const e=this.rings,r=e.length;if(R(t)){const s=[];for(let e=0,r=t.length;e<r;e++)s[e]=t[e].toArray();e[r]=s;}else e[r]=t.concat();return this.notifyChange("rings"),this}clone(){const t=new d$a;return t.spatialReference=this.spatialReference,t.rings=a$v(this.rings),t.hasZ=this.hasZ,t.hasM=this.hasM,t}equals(t){if(this===t)return !0;if(null==t)return !1;const r=this.spatialReference,s=t.spatialReference;if(null!=r!=(null!=s))return !1;if(null!=r&&null!=s&&!r.equals(s))return !1;if(this.rings.length!==t.rings.length)return !1;const n=([t,e,r,s],[n,i,o,a])=>t===n&&e===i&&(null==r&&null==o||r===o)&&(null==s&&null==a||s===a);for(let i=0;i<this.rings.length;i++){const r=this.rings[i],s=t.rings[i];if(!s$G(r,s,n))return !1}return !0}contains(t){if(!t)return !1;const e=g$8(t,this.spatialReference);return f$e(this,null!=e?e:t)}isClockwise(t){let e;return e=R(t)?t.map((t=>this.hasZ?this.hasM?[t.x,t.y,t.z,t.m]:[t.x,t.y,t.z]:[t.x,t.y])):t,h$a(e,this.hasM,this.hasZ)}getPoint(t,e){if(!this._validateInputs(t,e))return null;const r=this.rings[t][e],s=this.hasZ,n=this.hasM;return s&&!n?new x$a(r[0],r[1],r[2],void 0,this.spatialReference):n&&!s?new x$a(r[0],r[1],void 0,r[2],this.spatialReference):s&&n?new x$a(r[0],r[1],r[2],r[3],this.spatialReference):new x$a(r[0],r[1],this.spatialReference)}insertPoint(t,e,r){return this._validateInputs(t,e,!0)?(h$c(this,r),Array.isArray(r)||(r=r.toArray()),this.rings[t].splice(e,0,r),this.notifyChange("rings"),this):this}removePoint(t,e){if(!this._validateInputs(t,e))return null;const r=new x$a(this.rings[t].splice(e,1)[0],this.spatialReference);return this.notifyChange("rings"),r}removeRing(t){if(!this._validateInputs(t,null))return null;const e=this.rings.splice(t,1)[0],r=this.spatialReference,s=e.map((t=>new x$a(t,r)));return this.notifyChange("rings"),s}setPoint(t,e,r){return this._validateInputs(t,e)?(h$c(this,r),Array.isArray(r)||(r=r.toArray()),this.rings[t][e]=r,this.notifyChange("rings"),this):this}_validateInputs(t,e,r=!1){if(null==t||t<0||t>=this.rings.length)return !1;if(null!=e){const s=this.rings[t];if(r&&(e<0||e>s.length))return !1;if(!r&&(e<0||e>=s.length))return !1}return !0}toJSON(t){return this.write({},t)}};e$x([y$d({readOnly:!0})],x$2.prototype,"cache",null),e$x([y$d({readOnly:!0})],x$2.prototype,"centroid",null),e$x([y$d({readOnly:!0})],x$2.prototype,"extent",null),e$x([y$d({readOnly:!0})],x$2.prototype,"isSelfIntersecting",null),e$x([y$d({type:[[[Number]]],json:{write:{isRequired:!0}}})],x$2.prototype,"rings",void 0),e$x([r$d("rings")],x$2.prototype,"writeRings",null),x$2=d$a=e$x([a$i("esri.geometry.Polygon")],x$2),x$2.prototype.toJSON.isDefaultToJSON=!0;const j$2=x$2;

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
var c$a;function u$6(t){return !Array.isArray(t[0])}let f$7=c$a=class extends p$b{constructor(...t){super(...t),this.paths=[],this.type="polyline";}normalizeCtorArgs(t,e){let s,r,i=null,a=null;return t&&!Array.isArray(t)?(i=t.paths??null,e||(t.spatialReference?e=t.spatialReference:t.paths||(e=t)),s=t.hasZ,r=t.hasM):i=t,i=i||[],e=e||f$g.WGS84,i.length&&i[0]&&null!=i[0][0]&&"number"==typeof i[0][0]&&(i=[i]),a=i[0]&&i[0][0],a&&(void 0===s&&void 0===r?(s=a.length>2,r=!1):void 0===s?s=!r&&a.length>3:void 0===r&&(r=!s&&a.length>3)),{paths:i,spatialReference:e,hasZ:s,hasM:r}}get cache(){return this.commitProperty("paths"),this.commitProperty("hasZ"),this.commitProperty("hasM"),this.commitProperty("spatialReference"),{}}get extent(){const{spatialReference:t}=this,e=h$6(this);if(!e)return null;const s=new M$3(e);return s.spatialReference=t,s}writePaths(t,s){s.paths=a$v(this.paths);}addPath(t){if(!t)return;const e=this.paths,s=e.length;if(u$6(t)){const r=[];for(let e=0,s=t.length;e<s;e++)r[e]=t[e].toArray();e[s]=r;}else e[s]=t.concat();return this.notifyChange("paths"),this}clone(){const t=new c$a;return t.spatialReference=this.spatialReference,t.paths=a$v(this.paths),t.hasZ=this.hasZ,t.hasM=this.hasM,t}getPoint(t,e){if(!this._validateInputs(t,e))return null;const s=this.paths[t][e],r=this.hasZ,i=this.hasM;return r&&!i?new x$a(s[0],s[1],s[2],void 0,this.spatialReference):i&&!r?new x$a(s[0],s[1],void 0,s[2],this.spatialReference):r&&i?new x$a(s[0],s[1],s[2],s[3],this.spatialReference):new x$a(s[0],s[1],this.spatialReference)}insertPoint(t,e,s){return this._validateInputs(t,e,!0)?(h$c(this,s),Array.isArray(s)||(s=s.toArray()),this.paths[t].splice(e,0,s),this.notifyChange("paths"),this):this}removePath(t){if(!this._validateInputs(t,null))return null;const e=this.paths.splice(t,1)[0],s=this.spatialReference,r=e.map((t=>new x$a(t,s)));return this.notifyChange("paths"),r}removePoint(t,e){if(!this._validateInputs(t,e))return null;const s=new x$a(this.paths[t].splice(e,1)[0],this.spatialReference);return this.notifyChange("paths"),s}setPoint(t,e,s){return this._validateInputs(t,e)?(h$c(this,s),Array.isArray(s)||(s=s.toArray()),this.paths[t][e]=s,this.notifyChange("paths"),this):this}_validateInputs(t,e,s=!1){if(null==t||t<0||t>=this.paths.length)return !1;if(null!=e){const r=this.paths[t];if(s&&(e<0||e>r.length))return !1;if(!s&&(e<0||e>=r.length))return !1}return !0}toJSON(t){return this.write({},t)}};e$x([y$d({readOnly:!0})],f$7.prototype,"cache",null),e$x([y$d({readOnly:!0})],f$7.prototype,"extent",null),e$x([y$d({type:[[[Number]]],json:{write:{isRequired:!0}}})],f$7.prototype,"paths",void 0),e$x([r$d("paths")],f$7.prototype,"writePaths",null),f$7=c$a=e$x([a$i("esri.geometry.Polyline")],f$7),f$7.prototype.toJSON.isDefaultToJSON=!0;const m$5=f$7;

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
o$k()({esriGeometryPoint:"point",esriGeometryMultipoint:"multipoint",esriGeometryPolyline:"polyline",esriGeometryPolygon:"polygon"});o$k()({esriGeometryPoint:"point",esriGeometryMultipoint:"multipoint",esriGeometryPolyline:"polyline",esriGeometryPolygon:"polygon",esriGeometryEnvelope:"extent",mesh:"mesh"});

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
const n$c={base:p$b,key:"type",typeMap:{extent:M$3,multipoint:u$e,point:x$a,polyline:m$5,polygon:j$2}};S$6(n$c);

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
const t$7={type:String,json:{read:{source:"token"},write:{target:"token"}}};

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
let l$5=class extends l$f{constructor(t){super(t),this.address=null,this.apiKey=null,this.categories=null,this.countryCode=null,this.forStorage=null,this.location=null,this.locationType=null,this.magicKey=null,this.maxLocations=null,this.outFields=null,this.outSpatialReference=null,this.searchExtent=null;}};e$x([y$d({type:Object,json:{write:!0}})],l$5.prototype,"address",void 0),e$x([y$d(t$7)],l$5.prototype,"apiKey",void 0),e$x([y$d({type:[String],json:{read:{source:"category",reader:t=>t?t.split(","):null},write:{target:"category",writer:(t,o)=>{o.category=t?t.join(","):null;}}}})],l$5.prototype,"categories",void 0),e$x([y$d({type:String,json:{write:!0}})],l$5.prototype,"countryCode",void 0),e$x([y$d({type:Boolean,json:{write:!0}})],l$5.prototype,"forStorage",void 0),e$x([y$d({type:x$a,json:{write:{writer:(t,o)=>{o.location=t?t.clone().normalize():null;}}}})],l$5.prototype,"location",void 0),e$x([y$d({type:String,json:{write:!0}})],l$5.prototype,"locationType",void 0),e$x([y$d({type:String,json:{write:!0}})],l$5.prototype,"magicKey",void 0),e$x([y$d({type:Number,json:{write:!0}})],l$5.prototype,"maxLocations",void 0),e$x([y$d({type:[String],json:{write:{writer:(t,o)=>{o.outFields=t?t.join(","):null;}}}})],l$5.prototype,"outFields",void 0),e$x([y$d({type:f$g,json:{read:{source:"outSR"},write:{target:"outSR"}}})],l$5.prototype,"outSpatialReference",void 0),e$x([y$d({type:M$3,json:{write:{writer:(t,o)=>{const e=t?t.shiftCentralMeridian():null;o.searchExtent=e;}}}})],l$5.prototype,"searchExtent",void 0),l$5=e$x([a$i("esri.rest.support.AddressToLocationsParameters")],l$5),l$5.from=d$k(l$5);

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
let p$7=class extends l$f{constructor(r){super(r),this.addresses=null,this.categories=null,this.countryCode=null,this.locationType=null,this.outSpatialReference=null;}};e$x([y$d({type:[Object],json:{read:{reader:r=>r&&r.records?r.records.map((r=>r.attributes)):null},write:{writer:(r,e)=>{const o=[];Array.isArray(r)&&r.forEach((r=>{o.push({attributes:r});})),e.addresses={records:o};}}}})],p$7.prototype,"addresses",void 0),e$x([y$d({type:[String],json:{read:{source:"category",reader:r=>r?r.split(","):null},write:{target:"category",writer:(r,e)=>{e.category=r?r.join(","):null;}}}})],p$7.prototype,"categories",void 0),e$x([y$d({type:String,json:{read:{source:"sourceCountry"},write:{target:"sourceCountry"}}})],p$7.prototype,"countryCode",void 0),e$x([y$d({type:String,json:{write:!0}})],p$7.prototype,"locationType",void 0),e$x([y$d({type:f$g,json:{read:{source:"outSR"},write:{target:"outSR"}}})],p$7.prototype,"outSpatialReference",void 0),p$7=e$x([a$i("esri.rest.support.AddressesToLocationsParameters")],p$7),p$7.from=d$k(p$7);

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
let a$8=class extends l$f{constructor(o){super(o),this.apiKey=null,this.location=null,this.locationType=null,this.outSpatialReference=null;}};e$x([y$d(t$7)],a$8.prototype,"apiKey",void 0),e$x([y$d({type:x$a,json:{write:{writer:(o,r)=>{const t=o?o.clone().normalize():null,e=void 0!==t;r.location=e?t:null;}}}})],a$8.prototype,"location",void 0),e$x([y$d({type:String,json:{write:!0}})],a$8.prototype,"locationType",void 0),e$x([y$d({type:f$g,json:{read:{source:"outSR"},write:{target:"outSR"}}})],a$8.prototype,"outSpatialReference",void 0),a$8=e$x([a$i("esri.rest.support.LocationToAddressParameters")],a$8),a$8.from=d$k(a$8);const n$b=a$8;

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
async function n$a(e,n,i){n=n$b.from(n);const c=f$t(e),m={...n.toJSON(),f:"json"},u=s$B({...c.query,...m}),f=i$v(u,i),p=`${c.path}/reverseGeocode`;return j$b(p,f).then(d$9)}function d$9({data:r}){if(!r)return;const{address:o,location:t}=r,s=o&&o.Match_addr||"";return c$h.fromJSON({address:s,attributes:o||{},location:t,score:100})}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
let e$c=class extends l$f{constructor(o){super(o),this.isCollection=null,this.magicKey=null,this.text=null;}};e$x([y$d({type:Boolean,json:{write:!0}})],e$c.prototype,"isCollection",void 0),e$x([y$d({type:String,json:{write:!0}})],e$c.prototype,"magicKey",void 0),e$x([y$d({type:String,json:{write:!0}})],e$c.prototype,"text",void 0),e$c=e$x([a$i("esri.rest.support.SuggestionCandidate")],e$c);

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
let c$9=class extends l$f{constructor(t){super(t),this.apiKey=null,this.categories=null,this.countryCode=null,this.location=null,this.maxSuggestions=null,this.outSpatialReference=null,this.searchExtent=null,this.text=null;}};e$x([y$d(t$7)],c$9.prototype,"apiKey",void 0),e$x([y$d({type:[String],json:{read:{source:"category",reader:t=>t?t.split(","):null},write:{target:"category",writer:(t,o)=>{o.category=t?t.join(","):null;}}}})],c$9.prototype,"categories",void 0),e$x([y$d({type:String,json:{write:!0}})],c$9.prototype,"countryCode",void 0),e$x([y$d({type:x$a,json:{write:{writer:(t,o)=>{o.location=t?t.clone().normalize():null;}}}})],c$9.prototype,"location",void 0),e$x([y$d({type:Number,json:{write:!0}})],c$9.prototype,"maxSuggestions",void 0),e$x([y$d({type:f$g,json:{read:{source:"outSR"},write:{target:"outSR"}}})],c$9.prototype,"outSpatialReference",void 0),e$x([y$d({type:M$3,json:{write:{writer:(t,o)=>{const e=t?t.shiftCentralMeridian():null;o.searchExtent=JSON.stringify(e);}}}})],c$9.prototype,"searchExtent",void 0),e$x([y$d({type:String,json:{write:!0}})],c$9.prototype,"text",void 0),c$9=e$x([a$i("esri.rest.support.SuggestLocationsParameters")],c$9),c$9.from=d$k(c$9);

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
class i$9{constructor(){this._emitter=new i$9.EventEmitter(this);}emit(t,e){return this._emitter.emit(t,e)}on(t,e){return this._emitter.on(t,e)}once(t,e){return this._emitter.once(t,e)}hasEventListener(t){return this._emitter.hasEventListener(t)}}!function(n){class o{constructor(t=null){this._target=t,this._listenersMap=null;}clear(){this._listenersMap?.clear(),this._listenersMap=null;}destroy(){this.clear();}emit(t,e){const s=this._listenersMap&&this._listenersMap.get(t);if(!s)return !1;const r=this._target||this;return [...s].forEach((t=>{t.call(r,e);})),s.length>0}on(t,e){if(Array.isArray(t)){const r=t.map((t=>this.on(t,e)));return n$r(r)}if(t.includes(","))throw new TypeError("Evented.on() with a comma delimited string of event types is not supported");this._listenersMap||(this._listenersMap=new Map);const r=this._listenersMap.get(t)||[];return r.push(e),this._listenersMap.set(t,r),{remove:()=>{const s=this._listenersMap&&this._listenersMap.get(t)||[],r=s.indexOf(e);r>=0&&s.splice(r,1);}}}once(t,e){const s=this.on(t,(t=>{s.remove(),e.call(null,t);}));return s}hasEventListener(t){const e=this._listenersMap&&this._listenersMap.get(t);return null!=e&&e.length>0}}n.EventEmitter=o,n.EventedMixin=e=>{let s=class extends e{constructor(){super(...arguments),this._emitter=new o;}destroy(){this._emitter.clear();}emit(t,e){return this._emitter.emit(t,e)}on(t,e){return this._emitter.on(t,e)}once(t,e){return this._emitter.once(t,e)}hasEventListener(t){return this._emitter.hasEventListener(t)}};return s=e$x([a$i("esri.core.Evented")],s),s};let h=class extends m$e{constructor(){super(...arguments),this._emitter=new i$9.EventEmitter(this);}destroy(){this._emitter.clear();}emit(t,e){return this._emitter.emit(t,e)}on(t,e){return this._emitter.on(t,e)}once(t,e){return this._emitter.once(t,e)}hasEventListener(t){return this._emitter.hasEventListener(t)}};h=e$x([a$i("esri.core.Evented")],h),n.EventedAccessor=h;}(i$9||(i$9={}));const n$9=i$9;

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
function l$4(n,t,r={}){return m$4(n,t,r,y$3)}function f$6(n,t,r={}){return m$4(n,t,r,d$8)}function m$4(n,t,r={},e){let i=null;const u=r.once?(n,r)=>{e(n)&&(o$A(i),t(n,r));}:(n,r)=>{e(n)&&t(n,r);};if(i=P$2(n,u,r.sync,r.equals),r.initial){const t=n();u(t,t);}return i}function y$3(n){return !0}function d$8(n){return !!n}const h$5={initial:!0},w$1={sync:!0,initial:!0};

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
let o$8;const e$b=globalThis.esriConfig?.locale??globalThis.dojoConfig?.locale;function t$6(){return e$b??globalThis.navigator?.language??"en"}function c$8(){return void 0===o$8&&(o$8=t$6()),o$8}const u$5=[];function s$9(n){return u$5.push(n),{remove(){u$5.splice(u$5.indexOf(n),1);}}}const f$5=[];function g$2(n){return f$5.push(n),{remove(){u$5.splice(f$5.indexOf(n),1);}}}function h$4(){const e=t$6();o$8!==e&&(o$8=e,[...f$5].forEach((n=>{n.call(null,e);})),[...u$5].forEach((n=>{n.call(null,e);})));}globalThis.addEventListener?.("languagechange",h$4);

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
({timeZone:Intl.DateTimeFormat().resolvedOptions().timeZone});const i$8={year:"numeric",month:"numeric",day:"numeric"},s$8={year:"numeric",month:"long",day:"numeric"},l$3={year:"numeric",month:"short",day:"numeric"},d$7={year:"numeric",month:"long",weekday:"long",day:"numeric"},y$2={hour:"numeric",minute:"numeric"},g$1={...y$2,second:"numeric"},u$4={"short-date":i$8,"short-date-short-time":{...i$8,...y$2},"short-date-short-time-24":{...i$8,...y$2,hour12:!1},"short-date-long-time":{...i$8,...g$1},"short-date-long-time-24":{...i$8,...g$1,hour12:!1},"short-date-le":i$8,"short-date-le-short-time":{...i$8,...y$2},"short-date-le-short-time-24":{...i$8,...y$2,hour12:!1},"short-date-le-long-time":{...i$8,...g$1},"short-date-le-long-time-24":{...i$8,...g$1,hour12:!1},"long-month-day-year":s$8,"long-month-day-year-short-time":{...s$8,...y$2},"long-month-day-year-short-time-24":{...s$8,...y$2,hour12:!1},"long-month-day-year-long-time":{...s$8,...g$1},"long-month-day-year-long-time-24":{...s$8,...g$1,hour12:!1},"day-short-month-year":l$3,"day-short-month-year-short-time":{...l$3,...y$2},"day-short-month-year-short-time-24":{...l$3,...y$2,hour12:!1},"day-short-month-year-long-time":{...l$3,...g$1},"day-short-month-year-long-time-24":{...l$3,...g$1,hour12:!1},"long-date":d$7,"long-date-short-time":{...d$7,...y$2},"long-date-short-time-24":{...d$7,...y$2,hour12:!1},"long-date-long-time":{...d$7,...g$1},"long-date-long-time-24":{...d$7,...g$1,hour12:!1},"long-month-year":{month:"long",year:"numeric"},"short-month-year":{month:"short",year:"numeric"},year:{year:"numeric"},"short-time":y$2,"long-time":g$1};o$k()({shortDate:"short-date",shortDateShortTime:"short-date-short-time",shortDateShortTime24:"short-date-short-time-24",shortDateLongTime:"short-date-long-time",shortDateLongTime24:"short-date-long-time-24",shortDateLE:"short-date-le",shortDateLEShortTime:"short-date-le-short-time",shortDateLEShortTime24:"short-date-le-short-time-24",shortDateLELongTime:"short-date-le-long-time",shortDateLELongTime24:"short-date-le-long-time-24",longMonthDayYear:"long-month-day-year",longMonthDayYearShortTime:"long-month-day-year-short-time",longMonthDayYearShortTime24:"long-month-day-year-short-time-24",longMonthDayYearLongTime:"long-month-day-year-long-time",longMonthDayYearLongTime24:"long-month-day-year-long-time-24",dayShortMonthYear:"day-short-month-year",dayShortMonthYearShortTime:"day-short-month-year-short-time",dayShortMonthYearShortTime24:"day-short-month-year-short-time-24",dayShortMonthYearLongTime:"day-short-month-year-long-time",dayShortMonthYearLongTime24:"day-short-month-year-long-time-24",longDate:"long-date",longDateShortTime:"long-date-short-time",longDateShortTime24:"long-date-short-time-24",longDateLongTime:"long-date-long-time",longDateLongTime24:"long-date-long-time-24",longMonthYear:"long-month-year",shortMonthYear:"short-month-year",year:"year"});const D$2={ar:"ar-u-nu-latn-ca-gregory"};let T=new WeakMap,S$1=u$4["short-date-short-time"];function L$2(t){const o=t||S$1;let r=T.get(o);if(!r){const t=c$8(),n=D$2[t]||t;r=new Intl.DateTimeFormat(n,o),T.set(o,r);}return r}function f$4(t,o){return L$2(o).format(t)}g$2((()=>{T=new WeakMap,S$1=u$4["short-date-short-time"];}));

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
const e$a={ar:"ar-u-nu-latn"};let a$7=new WeakMap,i$7={};function o$7(n){const o=n||i$7;if(!a$7.has(o)){const t=c$8(),i=e$a[c$8()]||t;a$7.set(o,new Intl.NumberFormat(i,n));}return p$m(a$7.get(o))}function c$7(t,n){return Object.is(t,-0)&&(t=0),o$7(n).format(t)}g$2((()=>{a$7=new WeakMap,i$7={};}));

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
const i$6=s$E.getLogger("esri.intl.substitute");function s$7(t,r,n={}){const{format:o={}}=n;return r$q(t,(t=>u$3(t,r,o)))}function u$3(t,e,n){let o,i;const s=t.indexOf(":");if(-1===s?o=t.trim():(o=t.slice(0,s).trim(),i=t.slice(s+1).trim()),!o)return "";const u=t$x(o,e);if(null==u)return "";const m=(i?n?.[i]:null)??n?.[o];return m?c$6(u,m):i?a$6(u,i):f$3(u)}function c$6(t,r){switch(r.type){case"date":return f$4(t,r.intlOptions);case"number":return c$7(t,r.intlOptions);default:return i$6.warn("missing format descriptor for key {key}"),f$3(t)}}function a$6(t,r){switch(r.toLowerCase()){case"dateformat":return f$4(t);case"numberformat":return c$7(t);default:return i$6.warn(`inline format is unsupported since 4.12: ${r}`),/^(dateformat|datestring)/i.test(r)?f$4(t):/^numberformat/i.test(r)?c$7(t):f$3(t)}}function f$3(t){switch(typeof t){case"string":return t;case"number":return c$7(t);case"boolean":return ""+t;default:return t instanceof Date?f$4(t):""}}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
const r$6=/^([a-z]{2})(?:[-_]([A-Za-z]{2}))?$/,o$6={ar:!0,bg:!0,bs:!0,ca:!0,cs:!0,da:!0,de:!0,el:!0,en:!0,es:!0,et:!0,fi:!0,fr:!0,he:!0,hr:!0,hu:!0,id:!0,it:!0,ja:!0,ko:!0,lt:!0,lv:!0,nb:!0,nl:!0,pl:!0,"pt-BR":!0,"pt-PT":!0,ro:!0,ru:!0,sk:!0,sl:!0,sr:!0,sv:!0,th:!0,tr:!0,uk:!0,vi:!0,"zh-CN":!0,"zh-HK":!0,"zh-TW":!0};function a$5(t){return t in o$6}const c$5=[],d$6=new Map;function l$2(t){for(const e of d$6.keys())m$3(t.pattern,e)&&d$6.delete(e);}function u$2(t){return c$5.includes(t)||(l$2(t),c$5.unshift(t)),{remove(){const e=c$5.indexOf(t);e>-1&&(c$5.splice(e,1),l$2(t));}}}async function h$3(t){const e=c$8();d$6.has(t)||d$6.set(t,_$4(t,e));const n=d$6.get(t);return n&&await p$6.add(n),n}function f$2(t){if(!r$6.test(t))return null;const e=r$6.exec(t);if(null===e)return null;const[,n,s]=e,o=n+(s?"-"+s.toUpperCase():"");return a$5(o)?o:a$5(n)?n:null}async function _$4(e,n){const s=[];for(const t of c$5)if(m$3(t.pattern,e))try{return await t.fetchMessageBundle(e,n)}catch(r){s.push(r);}if(s.length)throw new s$C("intl:message-bundle-error",`Errors occurred while loading "${e}"`,{errors:s});throw new s$C("intl:no-message-bundle-loader",`No loader found for message bundle "${e}"`)}function m$3(t,e){return "string"==typeof t?e.startsWith(t):t.test(e)}g$2((()=>{d$6.clear();}));const p$6=new class{constructor(){this._numLoading=0,this._dfd=null;}async waitForAll(){this._dfd&&await this._dfd.promise;}add(t){return this._increase(),t.then((()=>this._decrease()),(()=>this._decrease())),this.waitForAll()}_increase(){this._numLoading++,this._dfd||(this._dfd=C$6());}_decrease(){this._numLoading=Math.max(this._numLoading-1,0),this._dfd&&0===this._numLoading&&(this._dfd.resolve(),this._dfd=null);}};

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
async function r$5(e,r,s,i){const a=r.exec(s);if(!a)throw new s$C("esri-intl:invalid-bundle",`Bundle id "${s}" is not compatible with the pattern "${r}"`);const c=a[1]?`${a[1]}/`:"",l=a[2],w=f$2(i),h=`${c}${l}.json`,u=w?`${c}${l}_${w}.json`:h;let d;try{d=await o$5(e(u));}catch(f){if(u===h)throw new s$C("intl:unknown-bundle",`Bundle "${s}" cannot be loaded`,{error:f});try{d=await o$5(e(h));}catch(f){throw new s$C("intl:unknown-bundle",`Bundle "${s}" cannot be loaded`,{error:f})}}return d}async function o$5(t){if(null!=a$4.fetchBundleAsset)return a$4.fetchBundleAsset(t);const n=await j$b(t,{responseType:"text"});return JSON.parse(n.data)}class s$6{constructor({base:e="",pattern:t,location:n=new URL(window.location.href)}){let r;r="string"==typeof n?e=>new URL(e,new URL(n,window.location.href)).href:n instanceof URL?e=>new URL(e,n).href:n,this.pattern="string"==typeof t?new RegExp(`^${t}`):t,this.getAssetUrl=r,e=e?e.endsWith("/")?e:e+"/":"",this.matcher=new RegExp(`^${e}(?:(.*)/)?(.*)$`);}fetchMessageBundle(e,t){return r$5(this.getAssetUrl,this.matcher,e,t)}}function i$5(e){return new s$6(e)}const a$4={};

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
const i$4=s$E.getLogger("esri.assets");function a$3(t){if(!s$F.assetsPath)throw i$4.errorOnce("The API assets location needs to be set using config.assetsPath. More information: https://arcg.is/1OzLe50"),new s$C("assets:path-not-set","config.assetsPath is not set");return V$2(s$F.assetsPath,t)}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
u$2(i$5({pattern:"esri/",location:a$3}));

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
function e$9(e){return "string"==typeof e?document.getElementById(e):e??null}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
var h$2;!function(s){s[s.PENDING=0]="PENDING",s[s.RESOLVED=1]="RESOLVED",s[s.REJECTED=2]="REJECTED";}(h$2||(h$2={}));class n$8{constructor(){this._resolver=C$6(),this._status=h$2.PENDING,this._resolvingPromises=[],this._resolver.promise.then((()=>{this._status=h$2.RESOLVED,this._cleanUp();}),(()=>{this._status=h$2.REJECTED,this._cleanUp();})),this.promise=this._resolver.promise;}destroy(){this._cleanUp();}addResolvingPromise(s){this._resolvingPromises.push(s),this._tryResolve();}isResolved(){return this._status===h$2.RESOLVED}isRejected(){return this._status===h$2.REJECTED}isFulfilled(){return this._status!==h$2.PENDING}abort(){this._resolver.reject(c$y());}_cleanUp(){this._allPromise=null,this._resolvingPromises=null;}_tryResolve(){if(this.isFulfilled())return;const s=C$6(),e=[...this._resolvingPromises,p$m(s.promise)],t=this._allPromise=Promise.all(e);t.then((()=>{this.isFulfilled()||this._allPromise!==t||this._resolver.resolve();}),(s=>{this.isFulfilled()||this._allPromise!==t||d$p(s)||this._resolver.reject(s);})),s.resolve();}}const m$2=e=>{let r=class extends e{constructor(...s){super(...s),this._promiseProps=new n$8,this.addResolvingPromise(Promise.resolve());}destroy(){this._promiseProps?.destroy();}isResolved(){return this._promiseProps.isResolved()}isRejected(){return this._promiseProps.isRejected()}isFulfilled(){return this._promiseProps.isFulfilled()}when(s,e){return this._promiseProps.promise.then((()=>this)).then(s,e)}catch(s){return this.when(null,s)}addResolvingPromise(s){s&&!this._promiseProps.isFulfilled()&&this._promiseProps.addResolvingPromise("_promiseProps"in s?s.when():s);}};return r=e$x([a$i("esri.core.Promise")],r),r};let p$5=class extends(m$2(m$e)){};p$5=e$x([a$i("esri.core.Promise")],p$5);

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
const t$5="randomUUID"in crypto;function n$7(){if(t$5)return crypto.randomUUID();const n=crypto.getRandomValues(new Uint16Array(8));n[3]=4095&n[3]|16384,n[4]=16383&n[4]|32768;const r=t=>n[t].toString(16).padStart(4,"0");return r(0)+r(1)+"-"+r(2)+"-"+r(3)+"-"+r(4)+"-"+r(5)+r(6)+r(7)}

/*!
 * @esri/arcgis-html-sanitizer - v3.0.1 - Tue Nov 15 2022 09:46:54 GMT-0800 (Pacific Standard Time)
 * Copyright (c) 2022 - Environmental Systems Research Institute, Inc.
 * Apache-2.0
 * 
 * js-xss
 * Copyright (c) 2012-2018 Zongmin Lei(雷宗民) <leizongmin@gmail.com>
 * http://ucdok.com
 * MIT License, see https://github.com/leizongmin/js-xss/blob/master/LICENSE for details
 */
/**
 * Determine if the value is a plain object.
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.
 */
var isPlainObject = function (value) {
    if (typeof value !== "object" || value === null) {
        return false;
    }
    if (Object.prototype.toString.call(value) !== "[object Object]") {
        return false;
    }
    var proto = Object.getPrototypeOf(value);
    if (proto === null) {
        return true;
    }
    while (Object.getPrototypeOf(proto) !== null) {
        proto = Object.getPrototypeOf(proto);
    }
    return Object.getPrototypeOf(value) === proto;
};

var lib$1 = {exports: {}};

var _default$1 = {};

var lib = {exports: {}};

var _default = {};

/**
 * cssfilter
 *
 * @author 老雷<leizongmin@gmail.com>
 */

function getDefaultWhiteList$1 () {
  // 白名单值说明：
  // true: 允许该属性
  // Function: function (val) { } 返回true表示允许该属性，其他值均表示不允许
  // RegExp: regexp.test(val) 返回true表示允许该属性，其他值均表示不允许
  // 除上面列出的值外均表示不允许
  var whiteList = {};

  whiteList['align-content'] = false; // default: auto
  whiteList['align-items'] = false; // default: auto
  whiteList['align-self'] = false; // default: auto
  whiteList['alignment-adjust'] = false; // default: auto
  whiteList['alignment-baseline'] = false; // default: baseline
  whiteList['all'] = false; // default: depending on individual properties
  whiteList['anchor-point'] = false; // default: none
  whiteList['animation'] = false; // default: depending on individual properties
  whiteList['animation-delay'] = false; // default: 0
  whiteList['animation-direction'] = false; // default: normal
  whiteList['animation-duration'] = false; // default: 0
  whiteList['animation-fill-mode'] = false; // default: none
  whiteList['animation-iteration-count'] = false; // default: 1
  whiteList['animation-name'] = false; // default: none
  whiteList['animation-play-state'] = false; // default: running
  whiteList['animation-timing-function'] = false; // default: ease
  whiteList['azimuth'] = false; // default: center
  whiteList['backface-visibility'] = false; // default: visible
  whiteList['background'] = true; // default: depending on individual properties
  whiteList['background-attachment'] = true; // default: scroll
  whiteList['background-clip'] = true; // default: border-box
  whiteList['background-color'] = true; // default: transparent
  whiteList['background-image'] = true; // default: none
  whiteList['background-origin'] = true; // default: padding-box
  whiteList['background-position'] = true; // default: 0% 0%
  whiteList['background-repeat'] = true; // default: repeat
  whiteList['background-size'] = true; // default: auto
  whiteList['baseline-shift'] = false; // default: baseline
  whiteList['binding'] = false; // default: none
  whiteList['bleed'] = false; // default: 6pt
  whiteList['bookmark-label'] = false; // default: content()
  whiteList['bookmark-level'] = false; // default: none
  whiteList['bookmark-state'] = false; // default: open
  whiteList['border'] = true; // default: depending on individual properties
  whiteList['border-bottom'] = true; // default: depending on individual properties
  whiteList['border-bottom-color'] = true; // default: current color
  whiteList['border-bottom-left-radius'] = true; // default: 0
  whiteList['border-bottom-right-radius'] = true; // default: 0
  whiteList['border-bottom-style'] = true; // default: none
  whiteList['border-bottom-width'] = true; // default: medium
  whiteList['border-collapse'] = true; // default: separate
  whiteList['border-color'] = true; // default: depending on individual properties
  whiteList['border-image'] = true; // default: none
  whiteList['border-image-outset'] = true; // default: 0
  whiteList['border-image-repeat'] = true; // default: stretch
  whiteList['border-image-slice'] = true; // default: 100%
  whiteList['border-image-source'] = true; // default: none
  whiteList['border-image-width'] = true; // default: 1
  whiteList['border-left'] = true; // default: depending on individual properties
  whiteList['border-left-color'] = true; // default: current color
  whiteList['border-left-style'] = true; // default: none
  whiteList['border-left-width'] = true; // default: medium
  whiteList['border-radius'] = true; // default: 0
  whiteList['border-right'] = true; // default: depending on individual properties
  whiteList['border-right-color'] = true; // default: current color
  whiteList['border-right-style'] = true; // default: none
  whiteList['border-right-width'] = true; // default: medium
  whiteList['border-spacing'] = true; // default: 0
  whiteList['border-style'] = true; // default: depending on individual properties
  whiteList['border-top'] = true; // default: depending on individual properties
  whiteList['border-top-color'] = true; // default: current color
  whiteList['border-top-left-radius'] = true; // default: 0
  whiteList['border-top-right-radius'] = true; // default: 0
  whiteList['border-top-style'] = true; // default: none
  whiteList['border-top-width'] = true; // default: medium
  whiteList['border-width'] = true; // default: depending on individual properties
  whiteList['bottom'] = false; // default: auto
  whiteList['box-decoration-break'] = true; // default: slice
  whiteList['box-shadow'] = true; // default: none
  whiteList['box-sizing'] = true; // default: content-box
  whiteList['box-snap'] = true; // default: none
  whiteList['box-suppress'] = true; // default: show
  whiteList['break-after'] = true; // default: auto
  whiteList['break-before'] = true; // default: auto
  whiteList['break-inside'] = true; // default: auto
  whiteList['caption-side'] = false; // default: top
  whiteList['chains'] = false; // default: none
  whiteList['clear'] = true; // default: none
  whiteList['clip'] = false; // default: auto
  whiteList['clip-path'] = false; // default: none
  whiteList['clip-rule'] = false; // default: nonzero
  whiteList['color'] = true; // default: implementation dependent
  whiteList['color-interpolation-filters'] = true; // default: auto
  whiteList['column-count'] = false; // default: auto
  whiteList['column-fill'] = false; // default: balance
  whiteList['column-gap'] = false; // default: normal
  whiteList['column-rule'] = false; // default: depending on individual properties
  whiteList['column-rule-color'] = false; // default: current color
  whiteList['column-rule-style'] = false; // default: medium
  whiteList['column-rule-width'] = false; // default: medium
  whiteList['column-span'] = false; // default: none
  whiteList['column-width'] = false; // default: auto
  whiteList['columns'] = false; // default: depending on individual properties
  whiteList['contain'] = false; // default: none
  whiteList['content'] = false; // default: normal
  whiteList['counter-increment'] = false; // default: none
  whiteList['counter-reset'] = false; // default: none
  whiteList['counter-set'] = false; // default: none
  whiteList['crop'] = false; // default: auto
  whiteList['cue'] = false; // default: depending on individual properties
  whiteList['cue-after'] = false; // default: none
  whiteList['cue-before'] = false; // default: none
  whiteList['cursor'] = false; // default: auto
  whiteList['direction'] = false; // default: ltr
  whiteList['display'] = true; // default: depending on individual properties
  whiteList['display-inside'] = true; // default: auto
  whiteList['display-list'] = true; // default: none
  whiteList['display-outside'] = true; // default: inline-level
  whiteList['dominant-baseline'] = false; // default: auto
  whiteList['elevation'] = false; // default: level
  whiteList['empty-cells'] = false; // default: show
  whiteList['filter'] = false; // default: none
  whiteList['flex'] = false; // default: depending on individual properties
  whiteList['flex-basis'] = false; // default: auto
  whiteList['flex-direction'] = false; // default: row
  whiteList['flex-flow'] = false; // default: depending on individual properties
  whiteList['flex-grow'] = false; // default: 0
  whiteList['flex-shrink'] = false; // default: 1
  whiteList['flex-wrap'] = false; // default: nowrap
  whiteList['float'] = false; // default: none
  whiteList['float-offset'] = false; // default: 0 0
  whiteList['flood-color'] = false; // default: black
  whiteList['flood-opacity'] = false; // default: 1
  whiteList['flow-from'] = false; // default: none
  whiteList['flow-into'] = false; // default: none
  whiteList['font'] = true; // default: depending on individual properties
  whiteList['font-family'] = true; // default: implementation dependent
  whiteList['font-feature-settings'] = true; // default: normal
  whiteList['font-kerning'] = true; // default: auto
  whiteList['font-language-override'] = true; // default: normal
  whiteList['font-size'] = true; // default: medium
  whiteList['font-size-adjust'] = true; // default: none
  whiteList['font-stretch'] = true; // default: normal
  whiteList['font-style'] = true; // default: normal
  whiteList['font-synthesis'] = true; // default: weight style
  whiteList['font-variant'] = true; // default: normal
  whiteList['font-variant-alternates'] = true; // default: normal
  whiteList['font-variant-caps'] = true; // default: normal
  whiteList['font-variant-east-asian'] = true; // default: normal
  whiteList['font-variant-ligatures'] = true; // default: normal
  whiteList['font-variant-numeric'] = true; // default: normal
  whiteList['font-variant-position'] = true; // default: normal
  whiteList['font-weight'] = true; // default: normal
  whiteList['grid'] = false; // default: depending on individual properties
  whiteList['grid-area'] = false; // default: depending on individual properties
  whiteList['grid-auto-columns'] = false; // default: auto
  whiteList['grid-auto-flow'] = false; // default: none
  whiteList['grid-auto-rows'] = false; // default: auto
  whiteList['grid-column'] = false; // default: depending on individual properties
  whiteList['grid-column-end'] = false; // default: auto
  whiteList['grid-column-start'] = false; // default: auto
  whiteList['grid-row'] = false; // default: depending on individual properties
  whiteList['grid-row-end'] = false; // default: auto
  whiteList['grid-row-start'] = false; // default: auto
  whiteList['grid-template'] = false; // default: depending on individual properties
  whiteList['grid-template-areas'] = false; // default: none
  whiteList['grid-template-columns'] = false; // default: none
  whiteList['grid-template-rows'] = false; // default: none
  whiteList['hanging-punctuation'] = false; // default: none
  whiteList['height'] = true; // default: auto
  whiteList['hyphens'] = false; // default: manual
  whiteList['icon'] = false; // default: auto
  whiteList['image-orientation'] = false; // default: auto
  whiteList['image-resolution'] = false; // default: normal
  whiteList['ime-mode'] = false; // default: auto
  whiteList['initial-letters'] = false; // default: normal
  whiteList['inline-box-align'] = false; // default: last
  whiteList['justify-content'] = false; // default: auto
  whiteList['justify-items'] = false; // default: auto
  whiteList['justify-self'] = false; // default: auto
  whiteList['left'] = false; // default: auto
  whiteList['letter-spacing'] = true; // default: normal
  whiteList['lighting-color'] = true; // default: white
  whiteList['line-box-contain'] = false; // default: block inline replaced
  whiteList['line-break'] = false; // default: auto
  whiteList['line-grid'] = false; // default: match-parent
  whiteList['line-height'] = false; // default: normal
  whiteList['line-snap'] = false; // default: none
  whiteList['line-stacking'] = false; // default: depending on individual properties
  whiteList['line-stacking-ruby'] = false; // default: exclude-ruby
  whiteList['line-stacking-shift'] = false; // default: consider-shifts
  whiteList['line-stacking-strategy'] = false; // default: inline-line-height
  whiteList['list-style'] = true; // default: depending on individual properties
  whiteList['list-style-image'] = true; // default: none
  whiteList['list-style-position'] = true; // default: outside
  whiteList['list-style-type'] = true; // default: disc
  whiteList['margin'] = true; // default: depending on individual properties
  whiteList['margin-bottom'] = true; // default: 0
  whiteList['margin-left'] = true; // default: 0
  whiteList['margin-right'] = true; // default: 0
  whiteList['margin-top'] = true; // default: 0
  whiteList['marker-offset'] = false; // default: auto
  whiteList['marker-side'] = false; // default: list-item
  whiteList['marks'] = false; // default: none
  whiteList['mask'] = false; // default: border-box
  whiteList['mask-box'] = false; // default: see individual properties
  whiteList['mask-box-outset'] = false; // default: 0
  whiteList['mask-box-repeat'] = false; // default: stretch
  whiteList['mask-box-slice'] = false; // default: 0 fill
  whiteList['mask-box-source'] = false; // default: none
  whiteList['mask-box-width'] = false; // default: auto
  whiteList['mask-clip'] = false; // default: border-box
  whiteList['mask-image'] = false; // default: none
  whiteList['mask-origin'] = false; // default: border-box
  whiteList['mask-position'] = false; // default: center
  whiteList['mask-repeat'] = false; // default: no-repeat
  whiteList['mask-size'] = false; // default: border-box
  whiteList['mask-source-type'] = false; // default: auto
  whiteList['mask-type'] = false; // default: luminance
  whiteList['max-height'] = true; // default: none
  whiteList['max-lines'] = false; // default: none
  whiteList['max-width'] = true; // default: none
  whiteList['min-height'] = true; // default: 0
  whiteList['min-width'] = true; // default: 0
  whiteList['move-to'] = false; // default: normal
  whiteList['nav-down'] = false; // default: auto
  whiteList['nav-index'] = false; // default: auto
  whiteList['nav-left'] = false; // default: auto
  whiteList['nav-right'] = false; // default: auto
  whiteList['nav-up'] = false; // default: auto
  whiteList['object-fit'] = false; // default: fill
  whiteList['object-position'] = false; // default: 50% 50%
  whiteList['opacity'] = false; // default: 1
  whiteList['order'] = false; // default: 0
  whiteList['orphans'] = false; // default: 2
  whiteList['outline'] = false; // default: depending on individual properties
  whiteList['outline-color'] = false; // default: invert
  whiteList['outline-offset'] = false; // default: 0
  whiteList['outline-style'] = false; // default: none
  whiteList['outline-width'] = false; // default: medium
  whiteList['overflow'] = false; // default: depending on individual properties
  whiteList['overflow-wrap'] = false; // default: normal
  whiteList['overflow-x'] = false; // default: visible
  whiteList['overflow-y'] = false; // default: visible
  whiteList['padding'] = true; // default: depending on individual properties
  whiteList['padding-bottom'] = true; // default: 0
  whiteList['padding-left'] = true; // default: 0
  whiteList['padding-right'] = true; // default: 0
  whiteList['padding-top'] = true; // default: 0
  whiteList['page'] = false; // default: auto
  whiteList['page-break-after'] = false; // default: auto
  whiteList['page-break-before'] = false; // default: auto
  whiteList['page-break-inside'] = false; // default: auto
  whiteList['page-policy'] = false; // default: start
  whiteList['pause'] = false; // default: implementation dependent
  whiteList['pause-after'] = false; // default: implementation dependent
  whiteList['pause-before'] = false; // default: implementation dependent
  whiteList['perspective'] = false; // default: none
  whiteList['perspective-origin'] = false; // default: 50% 50%
  whiteList['pitch'] = false; // default: medium
  whiteList['pitch-range'] = false; // default: 50
  whiteList['play-during'] = false; // default: auto
  whiteList['position'] = false; // default: static
  whiteList['presentation-level'] = false; // default: 0
  whiteList['quotes'] = false; // default: text
  whiteList['region-fragment'] = false; // default: auto
  whiteList['resize'] = false; // default: none
  whiteList['rest'] = false; // default: depending on individual properties
  whiteList['rest-after'] = false; // default: none
  whiteList['rest-before'] = false; // default: none
  whiteList['richness'] = false; // default: 50
  whiteList['right'] = false; // default: auto
  whiteList['rotation'] = false; // default: 0
  whiteList['rotation-point'] = false; // default: 50% 50%
  whiteList['ruby-align'] = false; // default: auto
  whiteList['ruby-merge'] = false; // default: separate
  whiteList['ruby-position'] = false; // default: before
  whiteList['shape-image-threshold'] = false; // default: 0.0
  whiteList['shape-outside'] = false; // default: none
  whiteList['shape-margin'] = false; // default: 0
  whiteList['size'] = false; // default: auto
  whiteList['speak'] = false; // default: auto
  whiteList['speak-as'] = false; // default: normal
  whiteList['speak-header'] = false; // default: once
  whiteList['speak-numeral'] = false; // default: continuous
  whiteList['speak-punctuation'] = false; // default: none
  whiteList['speech-rate'] = false; // default: medium
  whiteList['stress'] = false; // default: 50
  whiteList['string-set'] = false; // default: none
  whiteList['tab-size'] = false; // default: 8
  whiteList['table-layout'] = false; // default: auto
  whiteList['text-align'] = true; // default: start
  whiteList['text-align-last'] = true; // default: auto
  whiteList['text-combine-upright'] = true; // default: none
  whiteList['text-decoration'] = true; // default: none
  whiteList['text-decoration-color'] = true; // default: currentColor
  whiteList['text-decoration-line'] = true; // default: none
  whiteList['text-decoration-skip'] = true; // default: objects
  whiteList['text-decoration-style'] = true; // default: solid
  whiteList['text-emphasis'] = true; // default: depending on individual properties
  whiteList['text-emphasis-color'] = true; // default: currentColor
  whiteList['text-emphasis-position'] = true; // default: over right
  whiteList['text-emphasis-style'] = true; // default: none
  whiteList['text-height'] = true; // default: auto
  whiteList['text-indent'] = true; // default: 0
  whiteList['text-justify'] = true; // default: auto
  whiteList['text-orientation'] = true; // default: mixed
  whiteList['text-overflow'] = true; // default: clip
  whiteList['text-shadow'] = true; // default: none
  whiteList['text-space-collapse'] = true; // default: collapse
  whiteList['text-transform'] = true; // default: none
  whiteList['text-underline-position'] = true; // default: auto
  whiteList['text-wrap'] = true; // default: normal
  whiteList['top'] = false; // default: auto
  whiteList['transform'] = false; // default: none
  whiteList['transform-origin'] = false; // default: 50% 50% 0
  whiteList['transform-style'] = false; // default: flat
  whiteList['transition'] = false; // default: depending on individual properties
  whiteList['transition-delay'] = false; // default: 0s
  whiteList['transition-duration'] = false; // default: 0s
  whiteList['transition-property'] = false; // default: all
  whiteList['transition-timing-function'] = false; // default: ease
  whiteList['unicode-bidi'] = false; // default: normal
  whiteList['vertical-align'] = false; // default: baseline
  whiteList['visibility'] = false; // default: visible
  whiteList['voice-balance'] = false; // default: center
  whiteList['voice-duration'] = false; // default: auto
  whiteList['voice-family'] = false; // default: implementation dependent
  whiteList['voice-pitch'] = false; // default: medium
  whiteList['voice-range'] = false; // default: medium
  whiteList['voice-rate'] = false; // default: normal
  whiteList['voice-stress'] = false; // default: normal
  whiteList['voice-volume'] = false; // default: medium
  whiteList['volume'] = false; // default: medium
  whiteList['white-space'] = false; // default: normal
  whiteList['widows'] = false; // default: 2
  whiteList['width'] = true; // default: auto
  whiteList['will-change'] = false; // default: auto
  whiteList['word-break'] = true; // default: normal
  whiteList['word-spacing'] = true; // default: normal
  whiteList['word-wrap'] = true; // default: normal
  whiteList['wrap-flow'] = false; // default: auto
  whiteList['wrap-through'] = false; // default: wrap
  whiteList['writing-mode'] = false; // default: horizontal-tb
  whiteList['z-index'] = false; // default: auto

  return whiteList;
}


/**
 * 匹配到白名单上的一个属性时
 *
 * @param {String} name
 * @param {String} value
 * @param {Object} options
 * @return {String}
 */
function onAttr (name, value, options) {
  // do nothing
}

/**
 * 匹配到不在白名单上的一个属性时
 *
 * @param {String} name
 * @param {String} value
 * @param {Object} options
 * @return {String}
 */
function onIgnoreAttr (name, value, options) {
  // do nothing
}

var REGEXP_URL_JAVASCRIPT = /javascript\s*\:/img;

/**
 * 过滤属性值
 *
 * @param {String} name
 * @param {String} value
 * @return {String}
 */
function safeAttrValue$1(name, value) {
  if (REGEXP_URL_JAVASCRIPT.test(value)) return '';
  return value;
}


_default.whiteList = getDefaultWhiteList$1();
_default.getDefaultWhiteList = getDefaultWhiteList$1;
_default.onAttr = onAttr;
_default.onIgnoreAttr = onIgnoreAttr;
_default.safeAttrValue = safeAttrValue$1;

var util$1 = {
  indexOf: function (arr, item) {
    var i, j;
    if (Array.prototype.indexOf) {
      return arr.indexOf(item);
    }
    for (i = 0, j = arr.length; i < j; i++) {
      if (arr[i] === item) {
        return i;
      }
    }
    return -1;
  },
  forEach: function (arr, fn, scope) {
    var i, j;
    if (Array.prototype.forEach) {
      return arr.forEach(fn, scope);
    }
    for (i = 0, j = arr.length; i < j; i++) {
      fn.call(scope, arr[i], i, arr);
    }
  },
  trim: function (str) {
    if (String.prototype.trim) {
      return str.trim();
    }
    return str.replace(/(^\s*)|(\s*$)/g, '');
  },
  trimRight: function (str) {
    if (String.prototype.trimRight) {
      return str.trimRight();
    }
    return str.replace(/(\s*$)/g, '');
  }
};

/**
 * cssfilter
 *
 * @author 老雷<leizongmin@gmail.com>
 */

var _$3 = util$1;


/**
 * 解析style
 *
 * @param {String} css
 * @param {Function} onAttr 处理属性的函数
 *   参数格式： function (sourcePosition, position, name, value, source)
 * @return {String}
 */
function parseStyle$1 (css, onAttr) {
  css = _$3.trimRight(css);
  if (css[css.length - 1] !== ';') css += ';';
  var cssLength = css.length;
  var isParenthesisOpen = false;
  var lastPos = 0;
  var i = 0;
  var retCSS = '';

  function addNewAttr () {
    // 如果没有正常的闭合圆括号，则直接忽略当前属性
    if (!isParenthesisOpen) {
      var source = _$3.trim(css.slice(lastPos, i));
      var j = source.indexOf(':');
      if (j !== -1) {
        var name = _$3.trim(source.slice(0, j));
        var value = _$3.trim(source.slice(j + 1));
        // 必须有属性名称
        if (name) {
          var ret = onAttr(lastPos, retCSS.length, name, value, source);
          if (ret) retCSS += ret + '; ';
        }
      }
    }
    lastPos = i + 1;
  }

  for (; i < cssLength; i++) {
    var c = css[i];
    if (c === '/' && css[i + 1] === '*') {
      // 备注开始
      var j = css.indexOf('*/', i + 2);
      // 如果没有正常的备注结束，则后面的部分全部跳过
      if (j === -1) break;
      // 直接将当前位置调到备注结尾，并且初始化状态
      i = j + 1;
      lastPos = i + 1;
      isParenthesisOpen = false;
    } else if (c === '(') {
      isParenthesisOpen = true;
    } else if (c === ')') {
      isParenthesisOpen = false;
    } else if (c === ';') {
      if (isParenthesisOpen) ; else {
        addNewAttr();
      }
    } else if (c === '\n') {
      addNewAttr();
    }
  }

  return _$3.trim(retCSS);
}

var parser$2 = parseStyle$1;

/**
 * cssfilter
 *
 * @author 老雷<leizongmin@gmail.com>
 */

var DEFAULT$1 = _default;
var parseStyle = parser$2;


/**
 * 返回值是否为空
 *
 * @param {Object} obj
 * @return {Boolean}
 */
function isNull$1 (obj) {
  return (obj === undefined || obj === null);
}

/**
 * 浅拷贝对象
 *
 * @param {Object} obj
 * @return {Object}
 */
function shallowCopyObject$1 (obj) {
  var ret = {};
  for (var i in obj) {
    ret[i] = obj[i];
  }
  return ret;
}

/**
 * 创建CSS过滤器
 *
 * @param {Object} options
 *   - {Object} whiteList
 *   - {Function} onAttr
 *   - {Function} onIgnoreAttr
 *   - {Function} safeAttrValue
 */
function FilterCSS$2 (options) {
  options = shallowCopyObject$1(options || {});
  options.whiteList = options.whiteList || DEFAULT$1.whiteList;
  options.onAttr = options.onAttr || DEFAULT$1.onAttr;
  options.onIgnoreAttr = options.onIgnoreAttr || DEFAULT$1.onIgnoreAttr;
  options.safeAttrValue = options.safeAttrValue || DEFAULT$1.safeAttrValue;
  this.options = options;
}

FilterCSS$2.prototype.process = function (css) {
  // 兼容各种奇葩输入
  css = css || '';
  css = css.toString();
  if (!css) return '';

  var me = this;
  var options = me.options;
  var whiteList = options.whiteList;
  var onAttr = options.onAttr;
  var onIgnoreAttr = options.onIgnoreAttr;
  var safeAttrValue = options.safeAttrValue;

  var retCSS = parseStyle(css, function (sourcePosition, position, name, value, source) {

    var check = whiteList[name];
    var isWhite = false;
    if (check === true) isWhite = check;
    else if (typeof check === 'function') isWhite = check(value);
    else if (check instanceof RegExp) isWhite = check.test(value);
    if (isWhite !== true) isWhite = false;

    // 如果过滤后 value 为空则直接忽略
    value = safeAttrValue(name, value);
    if (!value) return;

    var opts = {
      position: position,
      sourcePosition: sourcePosition,
      source: source,
      isWhite: isWhite
    };

    if (isWhite) {

      var ret = onAttr(name, value, opts);
      if (isNull$1(ret)) {
        return name + ':' + value;
      } else {
        return ret;
      }

    } else {

      var ret = onIgnoreAttr(name, value, opts);
      if (!isNull$1(ret)) {
        return ret;
      }

    }
  });

  return retCSS;
};


var css = FilterCSS$2;

/**
 * cssfilter
 *
 * @author 老雷<leizongmin@gmail.com>
 */

(function (module, exports) {
	var DEFAULT = _default;
	var FilterCSS = css;


	/**
	 * XSS过滤
	 *
	 * @param {String} css 要过滤的CSS代码
	 * @param {Object} options 选项：whiteList, onAttr, onIgnoreAttr
	 * @return {String}
	 */
	function filterCSS (html, options) {
	  var xss = new FilterCSS(options);
	  return xss.process(html);
	}


	// 输出
	exports = module.exports = filterCSS;
	exports.FilterCSS = FilterCSS;
	for (var i in DEFAULT) exports[i] = DEFAULT[i];
} (lib, lib.exports));

var util = {
  indexOf: function (arr, item) {
    var i, j;
    if (Array.prototype.indexOf) {
      return arr.indexOf(item);
    }
    for (i = 0, j = arr.length; i < j; i++) {
      if (arr[i] === item) {
        return i;
      }
    }
    return -1;
  },
  forEach: function (arr, fn, scope) {
    var i, j;
    if (Array.prototype.forEach) {
      return arr.forEach(fn, scope);
    }
    for (i = 0, j = arr.length; i < j; i++) {
      fn.call(scope, arr[i], i, arr);
    }
  },
  trim: function (str) {
    if (String.prototype.trim) {
      return str.trim();
    }
    return str.replace(/(^\s*)|(\s*$)/g, "");
  },
  spaceIndex: function (str) {
    var reg = /\s|\n|\t/;
    var match = reg.exec(str);
    return match ? match.index : -1;
  },
};

/**
 * default settings
 *
 * @author Zongmin Lei<leizongmin@gmail.com>
 */

var FilterCSS$1 = lib.exports.FilterCSS;
var getDefaultCSSWhiteList = lib.exports.getDefaultWhiteList;
var _$2 = util;

function getDefaultWhiteList() {
  return {
    a: ["target", "href", "title"],
    abbr: ["title"],
    address: [],
    area: ["shape", "coords", "href", "alt"],
    article: [],
    aside: [],
    audio: [
      "autoplay",
      "controls",
      "crossorigin",
      "loop",
      "muted",
      "preload",
      "src",
    ],
    b: [],
    bdi: ["dir"],
    bdo: ["dir"],
    big: [],
    blockquote: ["cite"],
    br: [],
    caption: [],
    center: [],
    cite: [],
    code: [],
    col: ["align", "valign", "span", "width"],
    colgroup: ["align", "valign", "span", "width"],
    dd: [],
    del: ["datetime"],
    details: ["open"],
    div: [],
    dl: [],
    dt: [],
    em: [],
    figcaption: [],
    figure: [],
    font: ["color", "size", "face"],
    footer: [],
    h1: [],
    h2: [],
    h3: [],
    h4: [],
    h5: [],
    h6: [],
    header: [],
    hr: [],
    i: [],
    img: ["src", "alt", "title", "width", "height"],
    ins: ["datetime"],
    li: [],
    mark: [],
    nav: [],
    ol: [],
    p: [],
    pre: [],
    s: [],
    section: [],
    small: [],
    span: [],
    sub: [],
    summary: [],
    sup: [],
    strong: [],
    strike: [],
    table: ["width", "border", "align", "valign"],
    tbody: ["align", "valign"],
    td: ["width", "rowspan", "colspan", "align", "valign"],
    tfoot: ["align", "valign"],
    th: ["width", "rowspan", "colspan", "align", "valign"],
    thead: ["align", "valign"],
    tr: ["rowspan", "align", "valign"],
    tt: [],
    u: [],
    ul: [],
    video: [
      "autoplay",
      "controls",
      "crossorigin",
      "loop",
      "muted",
      "playsinline",
      "poster",
      "preload",
      "src",
      "height",
      "width",
    ],
  };
}

var defaultCSSFilter = new FilterCSS$1();

/**
 * default onTag function
 *
 * @param {String} tag
 * @param {String} html
 * @param {Object} options
 * @return {String}
 */
function onTag(tag, html, options) {
  // do nothing
}

/**
 * default onIgnoreTag function
 *
 * @param {String} tag
 * @param {String} html
 * @param {Object} options
 * @return {String}
 */
function onIgnoreTag(tag, html, options) {
  // do nothing
}

/**
 * default onTagAttr function
 *
 * @param {String} tag
 * @param {String} name
 * @param {String} value
 * @return {String}
 */
function onTagAttr(tag, name, value) {
  // do nothing
}

/**
 * default onIgnoreTagAttr function
 *
 * @param {String} tag
 * @param {String} name
 * @param {String} value
 * @return {String}
 */
function onIgnoreTagAttr(tag, name, value) {
  // do nothing
}

/**
 * default escapeHtml function
 *
 * @param {String} html
 */
function escapeHtml(html) {
  return html.replace(REGEXP_LT, "&lt;").replace(REGEXP_GT, "&gt;");
}

/**
 * default safeAttrValue function
 *
 * @param {String} tag
 * @param {String} name
 * @param {String} value
 * @param {Object} cssFilter
 * @return {String}
 */
function safeAttrValue(tag, name, value, cssFilter) {
  // unescape attribute value firstly
  value = friendlyAttrValue(value);

  if (name === "href" || name === "src") {
    // filter `href` and `src` attribute
    // only allow the value that starts with `http://` | `https://` | `mailto:` | `/` | `#`
    value = _$2.trim(value);
    if (value === "#") return "#";
    if (
      !(
        value.substr(0, 7) === "http://" ||
        value.substr(0, 8) === "https://" ||
        value.substr(0, 7) === "mailto:" ||
        value.substr(0, 4) === "tel:" ||
        value.substr(0, 11) === "data:image/" ||
        value.substr(0, 6) === "ftp://" ||
        value.substr(0, 2) === "./" ||
        value.substr(0, 3) === "../" ||
        value[0] === "#" ||
        value[0] === "/"
      )
    ) {
      return "";
    }
  } else if (name === "background") {
    // filter `background` attribute (maybe no use)
    // `javascript:`
    REGEXP_DEFAULT_ON_TAG_ATTR_4.lastIndex = 0;
    if (REGEXP_DEFAULT_ON_TAG_ATTR_4.test(value)) {
      return "";
    }
  } else if (name === "style") {
    // `expression()`
    REGEXP_DEFAULT_ON_TAG_ATTR_7.lastIndex = 0;
    if (REGEXP_DEFAULT_ON_TAG_ATTR_7.test(value)) {
      return "";
    }
    // `url()`
    REGEXP_DEFAULT_ON_TAG_ATTR_8.lastIndex = 0;
    if (REGEXP_DEFAULT_ON_TAG_ATTR_8.test(value)) {
      REGEXP_DEFAULT_ON_TAG_ATTR_4.lastIndex = 0;
      if (REGEXP_DEFAULT_ON_TAG_ATTR_4.test(value)) {
        return "";
      }
    }
    if (cssFilter !== false) {
      cssFilter = cssFilter || defaultCSSFilter;
      value = cssFilter.process(value);
    }
  }

  // escape `<>"` before returns
  value = escapeAttrValue(value);
  return value;
}

// RegExp list
var REGEXP_LT = /</g;
var REGEXP_GT = />/g;
var REGEXP_QUOTE = /"/g;
var REGEXP_QUOTE_2 = /&quot;/g;
var REGEXP_ATTR_VALUE_1 = /&#([a-zA-Z0-9]*);?/gim;
var REGEXP_ATTR_VALUE_COLON = /&colon;?/gim;
var REGEXP_ATTR_VALUE_NEWLINE = /&newline;?/gim;
// var REGEXP_DEFAULT_ON_TAG_ATTR_3 = /\/\*|\*\//gm;
var REGEXP_DEFAULT_ON_TAG_ATTR_4 =
  /((j\s*a\s*v\s*a|v\s*b|l\s*i\s*v\s*e)\s*s\s*c\s*r\s*i\s*p\s*t\s*|m\s*o\s*c\s*h\s*a):/gi;
// var REGEXP_DEFAULT_ON_TAG_ATTR_5 = /^[\s"'`]*(d\s*a\s*t\s*a\s*)\:/gi;
// var REGEXP_DEFAULT_ON_TAG_ATTR_6 = /^[\s"'`]*(d\s*a\s*t\s*a\s*)\:\s*image\//gi;
var REGEXP_DEFAULT_ON_TAG_ATTR_7 =
  /e\s*x\s*p\s*r\s*e\s*s\s*s\s*i\s*o\s*n\s*\(.*/gi;
var REGEXP_DEFAULT_ON_TAG_ATTR_8 = /u\s*r\s*l\s*\(.*/gi;

/**
 * escape double quote
 *
 * @param {String} str
 * @return {String} str
 */
function escapeQuote(str) {
  return str.replace(REGEXP_QUOTE, "&quot;");
}

/**
 * unescape double quote
 *
 * @param {String} str
 * @return {String} str
 */
function unescapeQuote(str) {
  return str.replace(REGEXP_QUOTE_2, '"');
}

/**
 * escape html entities
 *
 * @param {String} str
 * @return {String}
 */
function escapeHtmlEntities(str) {
  return str.replace(REGEXP_ATTR_VALUE_1, function replaceUnicode(str, code) {
    return code[0] === "x" || code[0] === "X"
      ? String.fromCharCode(parseInt(code.substr(1), 16))
      : String.fromCharCode(parseInt(code, 10));
  });
}

/**
 * escape html5 new danger entities
 *
 * @param {String} str
 * @return {String}
 */
function escapeDangerHtml5Entities(str) {
  return str
    .replace(REGEXP_ATTR_VALUE_COLON, ":")
    .replace(REGEXP_ATTR_VALUE_NEWLINE, " ");
}

/**
 * clear nonprintable characters
 *
 * @param {String} str
 * @return {String}
 */
function clearNonPrintableCharacter(str) {
  var str2 = "";
  for (var i = 0, len = str.length; i < len; i++) {
    str2 += str.charCodeAt(i) < 32 ? " " : str.charAt(i);
  }
  return _$2.trim(str2);
}

/**
 * get friendly attribute value
 *
 * @param {String} str
 * @return {String}
 */
function friendlyAttrValue(str) {
  str = unescapeQuote(str);
  str = escapeHtmlEntities(str);
  str = escapeDangerHtml5Entities(str);
  str = clearNonPrintableCharacter(str);
  return str;
}

/**
 * unescape attribute value
 *
 * @param {String} str
 * @return {String}
 */
function escapeAttrValue(str) {
  str = escapeQuote(str);
  str = escapeHtml(str);
  return str;
}

/**
 * `onIgnoreTag` function for removing all the tags that are not in whitelist
 */
function onIgnoreTagStripAll() {
  return "";
}

/**
 * remove tag body
 * specify a `tags` list, if the tag is not in the `tags` list then process by the specify function (optional)
 *
 * @param {array} tags
 * @param {function} next
 */
function StripTagBody(tags, next) {
  if (typeof next !== "function") {
    next = function () {};
  }

  var isRemoveAllTag = !Array.isArray(tags);
  function isRemoveTag(tag) {
    if (isRemoveAllTag) return true;
    return _$2.indexOf(tags, tag) !== -1;
  }

  var removeList = [];
  var posStart = false;

  return {
    onIgnoreTag: function (tag, html, options) {
      if (isRemoveTag(tag)) {
        if (options.isClosing) {
          var ret = "[/removed]";
          var end = options.position + ret.length;
          removeList.push([
            posStart !== false ? posStart : options.position,
            end,
          ]);
          posStart = false;
          return ret;
        } else {
          if (!posStart) {
            posStart = options.position;
          }
          return "[removed]";
        }
      } else {
        return next(tag, html, options);
      }
    },
    remove: function (html) {
      var rethtml = "";
      var lastPos = 0;
      _$2.forEach(removeList, function (pos) {
        rethtml += html.slice(lastPos, pos[0]);
        lastPos = pos[1];
      });
      rethtml += html.slice(lastPos);
      return rethtml;
    },
  };
}

/**
 * remove html comments
 *
 * @param {String} html
 * @return {String}
 */
function stripCommentTag(html) {
  var retHtml = "";
  var lastPos = 0;
  while (lastPos < html.length) {
    var i = html.indexOf("<!--", lastPos);
    if (i === -1) {
      retHtml += html.slice(lastPos);
      break;
    }
    retHtml += html.slice(lastPos, i);
    var j = html.indexOf("-->", i);
    if (j === -1) {
      break;
    }
    lastPos = j + 3;
  }
  return retHtml;
}

/**
 * remove invisible characters
 *
 * @param {String} html
 * @return {String}
 */
function stripBlankChar(html) {
  var chars = html.split("");
  chars = chars.filter(function (char) {
    var c = char.charCodeAt(0);
    if (c === 127) return false;
    if (c <= 31) {
      if (c === 10 || c === 13) return true;
      return false;
    }
    return true;
  });
  return chars.join("");
}

_default$1.whiteList = getDefaultWhiteList();
_default$1.getDefaultWhiteList = getDefaultWhiteList;
_default$1.onTag = onTag;
_default$1.onIgnoreTag = onIgnoreTag;
_default$1.onTagAttr = onTagAttr;
_default$1.onIgnoreTagAttr = onIgnoreTagAttr;
_default$1.safeAttrValue = safeAttrValue;
_default$1.escapeHtml = escapeHtml;
_default$1.escapeQuote = escapeQuote;
_default$1.unescapeQuote = unescapeQuote;
_default$1.escapeHtmlEntities = escapeHtmlEntities;
_default$1.escapeDangerHtml5Entities = escapeDangerHtml5Entities;
_default$1.clearNonPrintableCharacter = clearNonPrintableCharacter;
_default$1.friendlyAttrValue = friendlyAttrValue;
_default$1.escapeAttrValue = escapeAttrValue;
_default$1.onIgnoreTagStripAll = onIgnoreTagStripAll;
_default$1.StripTagBody = StripTagBody;
_default$1.stripCommentTag = stripCommentTag;
_default$1.stripBlankChar = stripBlankChar;
_default$1.cssFilter = defaultCSSFilter;
_default$1.getDefaultCSSWhiteList = getDefaultCSSWhiteList;

var parser$1 = {};

/**
 * Simple HTML Parser
 *
 * @author Zongmin Lei<leizongmin@gmail.com>
 */

var _$1 = util;

/**
 * get tag name
 *
 * @param {String} html e.g. '<a hef="#">'
 * @return {String}
 */
function getTagName(html) {
  var i = _$1.spaceIndex(html);
  var tagName;
  if (i === -1) {
    tagName = html.slice(1, -1);
  } else {
    tagName = html.slice(1, i + 1);
  }
  tagName = _$1.trim(tagName).toLowerCase();
  if (tagName.slice(0, 1) === "/") tagName = tagName.slice(1);
  if (tagName.slice(-1) === "/") tagName = tagName.slice(0, -1);
  return tagName;
}

/**
 * is close tag?
 *
 * @param {String} html 如：'<a hef="#">'
 * @return {Boolean}
 */
function isClosing(html) {
  return html.slice(0, 2) === "</";
}

/**
 * parse input html and returns processed html
 *
 * @param {String} html
 * @param {Function} onTag e.g. function (sourcePosition, position, tag, html, isClosing)
 * @param {Function} escapeHtml
 * @return {String}
 */
function parseTag$1(html, onTag, escapeHtml) {

  var rethtml = "";
  var lastPos = 0;
  var tagStart = false;
  var quoteStart = false;
  var currentPos = 0;
  var len = html.length;
  var currentTagName = "";
  var currentHtml = "";

  chariterator: for (currentPos = 0; currentPos < len; currentPos++) {
    var c = html.charAt(currentPos);
    if (tagStart === false) {
      if (c === "<") {
        tagStart = currentPos;
        continue;
      }
    } else {
      if (quoteStart === false) {
        if (c === "<") {
          rethtml += escapeHtml(html.slice(lastPos, currentPos));
          tagStart = currentPos;
          lastPos = currentPos;
          continue;
        }
        if (c === ">") {
          rethtml += escapeHtml(html.slice(lastPos, tagStart));
          currentHtml = html.slice(tagStart, currentPos + 1);
          currentTagName = getTagName(currentHtml);
          rethtml += onTag(
            tagStart,
            rethtml.length,
            currentTagName,
            currentHtml,
            isClosing(currentHtml)
          );
          lastPos = currentPos + 1;
          tagStart = false;
          continue;
        }
        if (c === '"' || c === "'") {
          var i = 1;
          var ic = html.charAt(currentPos - i);

          while (ic.trim() === "" || ic === "=") {
            if (ic === "=") {
              quoteStart = c;
              continue chariterator;
            }
            ic = html.charAt(currentPos - ++i);
          }
        }
      } else {
        if (c === quoteStart) {
          quoteStart = false;
          continue;
        }
      }
    }
  }
  if (lastPos < html.length) {
    rethtml += escapeHtml(html.substr(lastPos));
  }

  return rethtml;
}

var REGEXP_ILLEGAL_ATTR_NAME = /[^a-zA-Z0-9\\_:.-]/gim;

/**
 * parse input attributes and returns processed attributes
 *
 * @param {String} html e.g. `href="#" target="_blank"`
 * @param {Function} onAttr e.g. `function (name, value)`
 * @return {String}
 */
function parseAttr$1(html, onAttr) {

  var lastPos = 0;
  var lastMarkPos = 0;
  var retAttrs = [];
  var tmpName = false;
  var len = html.length;

  function addAttr(name, value) {
    name = _$1.trim(name);
    name = name.replace(REGEXP_ILLEGAL_ATTR_NAME, "").toLowerCase();
    if (name.length < 1) return;
    var ret = onAttr(name, value || "");
    if (ret) retAttrs.push(ret);
  }

  // 逐个分析字符
  for (var i = 0; i < len; i++) {
    var c = html.charAt(i);
    var v, j;
    if (tmpName === false && c === "=") {
      tmpName = html.slice(lastPos, i);
      lastPos = i + 1;
      lastMarkPos = html.charAt(lastPos) === '"' || html.charAt(lastPos) === "'" ? lastPos : findNextQuotationMark(html, i + 1);
      continue;
    }
    if (tmpName !== false) {
      if (
        i === lastMarkPos
      ) {
        j = html.indexOf(c, i + 1);
        if (j === -1) {
          break;
        } else {
          v = _$1.trim(html.slice(lastMarkPos + 1, j));
          addAttr(tmpName, v);
          tmpName = false;
          i = j;
          lastPos = i + 1;
          continue;
        }
      }
    }
    if (/\s|\n|\t/.test(c)) {
      html = html.replace(/\s|\n|\t/g, " ");
      if (tmpName === false) {
        j = findNextEqual(html, i);
        if (j === -1) {
          v = _$1.trim(html.slice(lastPos, i));
          addAttr(v);
          tmpName = false;
          lastPos = i + 1;
          continue;
        } else {
          i = j - 1;
          continue;
        }
      } else {
        j = findBeforeEqual(html, i - 1);
        if (j === -1) {
          v = _$1.trim(html.slice(lastPos, i));
          v = stripQuoteWrap(v);
          addAttr(tmpName, v);
          tmpName = false;
          lastPos = i + 1;
          continue;
        } else {
          continue;
        }
      }
    }
  }

  if (lastPos < html.length) {
    if (tmpName === false) {
      addAttr(html.slice(lastPos));
    } else {
      addAttr(tmpName, stripQuoteWrap(_$1.trim(html.slice(lastPos))));
    }
  }

  return _$1.trim(retAttrs.join(" "));
}

function findNextEqual(str, i) {
  for (; i < str.length; i++) {
    var c = str[i];
    if (c === " ") continue;
    if (c === "=") return i;
    return -1;
  }
}

function findNextQuotationMark(str, i) {
  for (; i < str.length; i++) {
    var c = str[i];
    if (c === " ") continue;
    if (c === "'" || c === '"') return i;
    return -1;
  }
}

function findBeforeEqual(str, i) {
  for (; i > 0; i--) {
    var c = str[i];
    if (c === " ") continue;
    if (c === "=") return i;
    return -1;
  }
}

function isQuoteWrapString(text) {
  if (
    (text[0] === '"' && text[text.length - 1] === '"') ||
    (text[0] === "'" && text[text.length - 1] === "'")
  ) {
    return true;
  } else {
    return false;
  }
}

function stripQuoteWrap(text) {
  if (isQuoteWrapString(text)) {
    return text.substr(1, text.length - 2);
  } else {
    return text;
  }
}

parser$1.parseTag = parseTag$1;
parser$1.parseAttr = parseAttr$1;

/**
 * filter xss
 *
 * @author Zongmin Lei<leizongmin@gmail.com>
 */

var FilterCSS = lib.exports.FilterCSS;
var DEFAULT = _default$1;
var parser = parser$1;
var parseTag = parser.parseTag;
var parseAttr = parser.parseAttr;
var _ = util;

/**
 * returns `true` if the input value is `undefined` or `null`
 *
 * @param {Object} obj
 * @return {Boolean}
 */
function isNull(obj) {
  return obj === undefined || obj === null;
}

/**
 * get attributes for a tag
 *
 * @param {String} html
 * @return {Object}
 *   - {String} html
 *   - {Boolean} closing
 */
function getAttrs(html) {
  var i = _.spaceIndex(html);
  if (i === -1) {
    return {
      html: "",
      closing: html[html.length - 2] === "/",
    };
  }
  html = _.trim(html.slice(i + 1, -1));
  var isClosing = html[html.length - 1] === "/";
  if (isClosing) html = _.trim(html.slice(0, -1));
  return {
    html: html,
    closing: isClosing,
  };
}

/**
 * shallow copy
 *
 * @param {Object} obj
 * @return {Object}
 */
function shallowCopyObject(obj) {
  var ret = {};
  for (var i in obj) {
    ret[i] = obj[i];
  }
  return ret;
}

function keysToLowerCase(obj) {
  var ret = {};
  for (var i in obj) {
    if (Array.isArray(obj[i])) {
      ret[i.toLowerCase()] = obj[i].map(function (item) {
        return item.toLowerCase();
      });
    } else {
      ret[i.toLowerCase()] = obj[i];
    }
  }
  return ret;
}

/**
 * FilterXSS class
 *
 * @param {Object} options
 *        whiteList (or allowList), onTag, onTagAttr, onIgnoreTag,
 *        onIgnoreTagAttr, safeAttrValue, escapeHtml
 *        stripIgnoreTagBody, allowCommentTag, stripBlankChar
 *        css{whiteList, onAttr, onIgnoreAttr} `css=false` means don't use `cssfilter`
 */
function FilterXSS(options) {
  options = shallowCopyObject(options || {});

  if (options.stripIgnoreTag) {
    if (options.onIgnoreTag) {
      console.error(
        'Notes: cannot use these two options "stripIgnoreTag" and "onIgnoreTag" at the same time'
      );
    }
    options.onIgnoreTag = DEFAULT.onIgnoreTagStripAll;
  }
  if (options.whiteList || options.allowList) {
    options.whiteList = keysToLowerCase(options.whiteList || options.allowList);
  } else {
    options.whiteList = DEFAULT.whiteList;
  }

  options.onTag = options.onTag || DEFAULT.onTag;
  options.onTagAttr = options.onTagAttr || DEFAULT.onTagAttr;
  options.onIgnoreTag = options.onIgnoreTag || DEFAULT.onIgnoreTag;
  options.onIgnoreTagAttr = options.onIgnoreTagAttr || DEFAULT.onIgnoreTagAttr;
  options.safeAttrValue = options.safeAttrValue || DEFAULT.safeAttrValue;
  options.escapeHtml = options.escapeHtml || DEFAULT.escapeHtml;
  this.options = options;

  if (options.css === false) {
    this.cssFilter = false;
  } else {
    options.css = options.css || {};
    this.cssFilter = new FilterCSS(options.css);
  }
}

/**
 * start process and returns result
 *
 * @param {String} html
 * @return {String}
 */
FilterXSS.prototype.process = function (html) {
  // compatible with the input
  html = html || "";
  html = html.toString();
  if (!html) return "";

  var me = this;
  var options = me.options;
  var whiteList = options.whiteList;
  var onTag = options.onTag;
  var onIgnoreTag = options.onIgnoreTag;
  var onTagAttr = options.onTagAttr;
  var onIgnoreTagAttr = options.onIgnoreTagAttr;
  var safeAttrValue = options.safeAttrValue;
  var escapeHtml = options.escapeHtml;
  var cssFilter = me.cssFilter;

  // remove invisible characters
  if (options.stripBlankChar) {
    html = DEFAULT.stripBlankChar(html);
  }

  // remove html comments
  if (!options.allowCommentTag) {
    html = DEFAULT.stripCommentTag(html);
  }

  // if enable stripIgnoreTagBody
  var stripIgnoreTagBody = false;
  if (options.stripIgnoreTagBody) {
    stripIgnoreTagBody = DEFAULT.StripTagBody(
      options.stripIgnoreTagBody,
      onIgnoreTag
    );
    onIgnoreTag = stripIgnoreTagBody.onIgnoreTag;
  }

  var retHtml = parseTag(
    html,
    function (sourcePosition, position, tag, html, isClosing) {
      var info = {
        sourcePosition: sourcePosition,
        position: position,
        isClosing: isClosing,
        isWhite: Object.prototype.hasOwnProperty.call(whiteList, tag),
      };

      // call `onTag()`
      var ret = onTag(tag, html, info);
      if (!isNull(ret)) return ret;

      if (info.isWhite) {
        if (info.isClosing) {
          return "</" + tag + ">";
        }

        var attrs = getAttrs(html);
        var whiteAttrList = whiteList[tag];
        var attrsHtml = parseAttr(attrs.html, function (name, value) {
          // call `onTagAttr()`
          var isWhiteAttr = _.indexOf(whiteAttrList, name) !== -1;
          var ret = onTagAttr(tag, name, value, isWhiteAttr);
          if (!isNull(ret)) return ret;

          if (isWhiteAttr) {
            // call `safeAttrValue()`
            value = safeAttrValue(tag, name, value, cssFilter);
            if (value) {
              return name + '="' + value + '"';
            } else {
              return name;
            }
          } else {
            // call `onIgnoreTagAttr()`
            ret = onIgnoreTagAttr(tag, name, value, isWhiteAttr);
            if (!isNull(ret)) return ret;
            return;
          }
        });

        // build new tag html
        html = "<" + tag;
        if (attrsHtml) html += " " + attrsHtml;
        if (attrs.closing) html += " /";
        html += ">";
        return html;
      } else {
        // call `onIgnoreTag()`
        ret = onIgnoreTag(tag, html, info);
        if (!isNull(ret)) return ret;
        return escapeHtml(html);
      }
    },
    escapeHtml
  );

  // if enable stripIgnoreTagBody
  if (stripIgnoreTagBody) {
    retHtml = stripIgnoreTagBody.remove(retHtml);
  }

  return retHtml;
};

var xss = FilterXSS;

/**
 * xss
 *
 * @author Zongmin Lei<leizongmin@gmail.com>
 */

(function (module, exports) {
	var DEFAULT = _default$1;
	var parser = parser$1;
	var FilterXSS = xss;

	/**
	 * filter xss function
	 *
	 * @param {String} html
	 * @param {Object} options { whiteList, onTag, onTagAttr, onIgnoreTag, onIgnoreTagAttr, safeAttrValue, escapeHtml }
	 * @return {String}
	 */
	function filterXSS(html, options) {
	  var xss = new FilterXSS(options);
	  return xss.process(html);
	}

	exports = module.exports = filterXSS;
	exports.filterXSS = filterXSS;
	exports.FilterXSS = FilterXSS;

	(function () {
	  for (var i in DEFAULT) {
	    exports[i] = DEFAULT[i];
	  }
	  for (var j in parser) {
	    exports[j] = parser[j];
	  }
	})();

	// using `xss` on the WebWorker, output `filterXSS` to the globals
	function isWorkerEnv() {
	  return (
	    typeof self !== "undefined" &&
	    typeof DedicatedWorkerGlobalScope !== "undefined" &&
	    self instanceof DedicatedWorkerGlobalScope
	  );
	}
	if (isWorkerEnv()) {
	  self.filterXSS = module.exports;
	}
} (lib$1, lib$1.exports));

/* Copyright (c) 2020 Environmental Systems Research Institute, Inc.
 * Apache-2.0
 *
 * js-xss
 * Copyright (c) 2012-2018 Zongmin Lei(雷宗民) <leizongmin@gmail.com>
 * http://ucdok.com
 * The MIT License, see
 * https://github.com/leizongmin/js-xss/blob/master/LICENSE for details
 * */
/**
 * The Sanitizer Class
 *
 * @export
 * @class Sanitizer
 */
var Sanitizer = /** @class */ (function () {
    function Sanitizer(filterOptions, extendDefaults) {
        var _this = this;
        // Supported HTML Spec: https://doc.arcgis.com/en/arcgis-online/reference/supported-html.htm
        this.arcgisWhiteList = {
            a: ["href", "style", "target"],
            abbr: ["title"],
            audio: ["autoplay", "controls", "loop", "muted", "preload"],
            b: [],
            br: [],
            dd: ["style"],
            div: ["align", "style"],
            dl: ["style"],
            dt: ["style"],
            em: [],
            figcaption: ["style"],
            figure: ["style"],
            font: ["color", "face", "size", "style"],
            h1: ["style"],
            h2: ["style"],
            h3: ["style"],
            h4: ["style"],
            h5: ["style"],
            h6: ["style"],
            hr: [],
            i: [],
            img: ["alt", "border", "height", "src", "style", "width"],
            li: [],
            ol: [],
            p: ["style"],
            source: ["media", "src", "type"],
            span: ["style"],
            strong: [],
            sub: ["style"],
            sup: ["style"],
            table: ["border", "cellpadding", "cellspacing", "height", "style", "width"],
            tbody: [],
            tr: ["align", "height", "style", "valign"],
            td: [
                "align",
                "colspan",
                "height",
                "nowrap",
                "rowspan",
                "style",
                "valign",
                "width",
            ],
            th: [
                "align",
                "colspan",
                "height",
                "nowrap",
                "rowspan",
                "style",
                "valign",
                "width",
            ],
            u: [],
            ul: [],
            video: [
                "autoplay",
                "controls",
                "height",
                "loop",
                "muted",
                "poster",
                "preload",
                "width",
            ],
        };
        this.allowedProtocols = [
            "http",
            "https",
            "mailto",
            "iform",
            "tel",
            "flow",
            "lfmobile",
            "arcgis-navigator",
            "arcgis-appstudio-player",
            "arcgis-survey123",
            "arcgis-collector",
            "arcgis-workforce",
            "arcgis-explorer",
            "arcgis-trek2there",
            "arcgis-quickcapture",
            "mspbi",
            "comgooglemaps",
            "pdfefile",
            "pdfehttp",
            "pdfehttps",
            "boxapp",
            "boxemm",
            "awb",
            "awbs",
            "gropen",
            "radarscope",
        ];
        this.arcgisFilterOptions = {
            allowCommentTag: true,
            safeAttrValue: function (tag, name, value, cssFilter) {
                // Take over safe attribute filtering for `a` `href`, `img` `src`,
                // and `source` `src` attributes, otherwise pass onto the
                // default `XSS.safeAttrValue` method.
                if ((tag === "a" && name === "href") ||
                    ((tag === "img" || tag === "source") && name === "src")) {
                    return _this.sanitizeUrl(value);
                }
                return lib$1.exports.safeAttrValue(tag, name, value, cssFilter);
            },
        };
        this._entityMap = {
            "&": "&#x38;",
            "<": "&#x3C;",
            ">": "&#x3E;",
            '"': "&#x22;",
            "'": "&#x27;",
            "/": "&#x2F;",
        };
        var xssFilterOptions;
        if (filterOptions && !extendDefaults) {
            // Override the defaults
            xssFilterOptions = filterOptions;
        }
        else if (filterOptions && extendDefaults) {
            // Extend the defaults
            xssFilterOptions = Object.create(this.arcgisFilterOptions);
            Object.keys(filterOptions).forEach(function (key) {
                if (key === "whiteList") {
                    // Extend the whitelist by concatenating arrays
                    xssFilterOptions.whiteList = _this._extendObjectOfArrays([
                        _this.arcgisWhiteList,
                        filterOptions.whiteList || {},
                    ]);
                }
                else {
                    xssFilterOptions[key] = filterOptions[key];
                }
            });
        }
        else {
            // Only use the defaults
            xssFilterOptions = Object.create(this.arcgisFilterOptions);
            xssFilterOptions.whiteList = this.arcgisWhiteList;
        }
        this.xssFilterOptions = xssFilterOptions;
        // Make this readable to tests
        this._xssFilter = new lib$1.exports.FilterXSS(xssFilterOptions);
    }
    /**
     * Sanitizes value to remove invalid HTML tags.
     *
     * Note: If the value passed does not contain a valid JSON data type (String,
     * Number, JSON Object, Array, Boolean, or null), the value will be nullified.
     *
     * @param {any} value The value to sanitize.
     * @returns {any} The sanitized value.
     * @memberof Sanitizer
     */
    Sanitizer.prototype.sanitize = function (value, options) {
        if (options === void 0) { options = {}; }
        switch (typeof value) {
            case "number":
                if (isNaN(value) || !isFinite(value)) {
                    return null;
                }
                return value;
            case "boolean":
                return value;
            case "string":
                return this._xssFilter.process(value);
            case "object":
                return this._iterateOverObject(value, options);
            default:
                if (options.allowUndefined && typeof value === "undefined") {
                    return;
                }
                return null;
        }
    };
    /**
     * Sanitizes a URL string following the allowed protocols and sanitization rules.
     *
     * @param {string} value The URL to sanitize.
     * @param {{ isProtocolRequired: boolean }} options Configuration options for URL checking.
     * @returns {string} The sanitized URL if it's valid, or an empty string if the URL is invalid.
     */
    Sanitizer.prototype.sanitizeUrl = function (value, options) {
        var _a = (options !== null && options !== void 0 ? options : {}).isProtocolRequired, isProtocolRequired = _a === void 0 ? true : _a;
        var protocol = this._trim(value.substring(0, value.indexOf(":")));
        var isRootUrl = value === '/';
        var isUrlFragment = /^#/.test(value);
        var isValidProtocol = protocol && this.allowedProtocols.indexOf(protocol.toLowerCase()) > -1;
        if (isRootUrl || isUrlFragment || isValidProtocol) {
            return lib$1.exports.escapeAttrValue(value);
        }
        if (!protocol && !isProtocolRequired) {
            return lib$1.exports.escapeAttrValue("https://".concat(value));
        }
        return "";
    };
    /**
     * Sanitizes an HTML attribute value.
     *
     * @param {string} tag The tagname of the HTML element.
     * @param {string} attribute The attribute name of the HTML element.
     * @param {string} value The raw value to be used for the HTML attribute value.
     * @param {XSS.ICSSFilter} [cssFilter] The CSS filter to be used.
     * @returns {string} The sanitized attribute value.
     * @memberof Sanitizer
     */
    Sanitizer.prototype.sanitizeHTMLAttribute = function (tag, attribute, value, cssFilter) {
        // use the custom safeAttrValue function if provided
        if (typeof this.xssFilterOptions.safeAttrValue === "function") {
            return this.xssFilterOptions.safeAttrValue(tag, attribute, value, 
            // @ts-expect-error safeAttrValue does handle undefined cssFilter
            cssFilter);
        }
        // otherwise use the default
        // @ts-ignore safeAttrValue does handle undefined cssFilter
        return lib$1.exports.safeAttrValue(tag, attribute, value, cssFilter);
    };
    /**
     * Checks if a value only contains valid HTML.
     *
     * @param {any} value The value to validate.
     * @returns {boolean}
     * @memberof Sanitizer
     */
    Sanitizer.prototype.validate = function (value, options) {
        if (options === void 0) { options = {}; }
        var sanitized = this.sanitize(value, options);
        return {
            isValid: value === sanitized,
            sanitized: sanitized,
        };
    };
    /**
     * Encodes the following characters, `& < > \" ' /` to their hexadecimal HTML entity code.
     * Example: "&middot;" => "&#x38;middot;"
     *
     * @param {string} value The value to encode.
     * @returns {string} The encoded string value.
     * @memberof Sanitizer
     */
    Sanitizer.prototype.encodeHTML = function (value) {
        var _this = this;
        return String(value).replace(/[&<>"'\/]/g, function (s) {
            return _this._entityMap[s];
        });
    };
    /**
     * Encodes all non-alphanumeric ASCII characters to their hexadecimal HTML entity codes.
     * Example: "alert(document.cookie)" => "alert&#x28;document&#x2e;cookie&#x29;"
     *
     * @param {string} value The value to encode.
     * @returns {string} The encoded string value.
     * @memberof Sanitizer
     */
    Sanitizer.prototype.encodeAttrValue = function (value) {
        var alphanumericRE = /^[a-zA-Z0-9]$/;
        return String(value).replace(/[\x00-\xFF]/g, function (c, idx) {
            return !alphanumericRE.test(c)
                ? "&#x".concat(Number(value.charCodeAt(idx)).toString(16), ";")
                : c;
        });
    };
    /**
     * Extends an object of arrays by by concatenating arrays of the same object
     * keys. If the if the previous key's value is not an array, the next key's
     * value will replace the previous key. This method is used for extending the
     * whiteList in the XSS filter options.
     *
     * @private
     * @param {Array<{}>} objects An array of objects.
     * @returns {{}} The extended object.
     * @memberof Sanitizer
     */
    Sanitizer.prototype._extendObjectOfArrays = function (objects) {
        var finalObj = {};
        objects.forEach(function (obj) {
            Object.keys(obj).forEach(function (key) {
                if (Array.isArray(obj[key]) && Array.isArray(finalObj[key])) {
                    finalObj[key] = finalObj[key].concat(obj[key]);
                }
                else {
                    finalObj[key] = obj[key];
                }
            });
        });
        return finalObj;
    };
    /**
     * Iterate over a plain object or array to deeply sanitize each value.
     *
     * @private
     * @param {object} obj The object to iterate over.
     * @returns {(object | null)} The sanitized object.
     * @memberof Sanitizer
     */
    Sanitizer.prototype._iterateOverObject = function (obj, options) {
        var _this = this;
        if (options === void 0) { options = {}; }
        try {
            var hasChanged_1 = false;
            var changedObj = void 0;
            if (Array.isArray(obj)) {
                changedObj = obj.reduce(function (prev, value) {
                    var validation = _this.validate(value, options);
                    if (validation.isValid) {
                        return prev.concat([value]);
                    }
                    else {
                        hasChanged_1 = true;
                        return prev.concat([validation.sanitized]);
                    }
                }, []);
            }
            else if (!isPlainObject(obj)) {
                if (options.allowUndefined && typeof obj === "undefined") {
                    return;
                }
                return null;
            }
            else {
                var keys = Object.keys(obj);
                changedObj = keys.reduce(function (prev, key) {
                    var value = obj[key];
                    var validation = _this.validate(value, options);
                    if (validation.isValid) {
                        prev[key] = value;
                    }
                    else {
                        hasChanged_1 = true;
                        prev[key] = validation.sanitized;
                    }
                    return prev;
                }, {});
            }
            if (hasChanged_1) {
                return changedObj;
            }
            return obj;
        }
        catch (err) {
            return null;
        }
    };
    /**
     * Trim whitespace from the start and ends of a string.
     * @param {string} val The string to trim.
     * @returns {string} The trimmed string.
     */
    Sanitizer.prototype._trim = function (val) {
        // @ts-ignore This is used by Jest,
        // but TypeScript errors since it assumes `trim` is always available.
        return String.prototype.trim
            ? val.trim()
            : val.replace(/(^\s*)|(\s*$)/g, "");
    };
    return Sanitizer;
}());

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
const n$6=new Map;function t$4(){n$6.clear();}function e$8(t){return n$6.get(t)}function c$4(t,e){n$6.set(t,e);}function o$4(t){n$6.delete(t);}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
const f$1=s$E.getLogger("esri.widgets.support.widgetUtils");function m$1(e){const n=t$l.acquire();for(let t=0;t<arguments.length;t++){const e=arguments[t],r=typeof e;if("string"===r)n.push(e);else if(Array.isArray(e))n.push.apply(n,e);else if("object"===r)for(const t in e)e[t]&&n.push(t);}const r=n.join(" ");return t$l.release(n),r}(()=>{const e=new Map,t=new ResizeObserver((t=>{t$4();for(const n of t)e.get(n.target)?.(n);})),r=(r,i,o)=>(e.has(r)&&f$1.error("Already observing element",r),e.set(r,i),t.observe(r,o),e$w((()=>{t.unobserve(r),e.delete(r);})));return (e,t,n)=>{let s=null;return l$4((()=>"function"==typeof e?e():e),(e=>{s?.remove(),e&&(s=r(e,t,n));}),w$1)}})();function L$1(e){const t="data-node-ref";this[e.getAttribute(t)]=e;}const y$1=["dd","dl","dt","h1","h2","h3","h4","h5","h6","sub","sup",...["animate","animatetransform","circle","clippath","defs","ellipse","g","image","line","lineargradient","marker","mask","path","pattern","polygon","polyline","radialgradient","rect","stop","svg","switch","symbol","text","textpath","tspan","use"]],E$1=y$1.reduce(((e,t)=>(e[t]=[],e)),{}),A$2=["align","alink","alt","bgcolor","border","cellpadding","cellspacing","class","color","cols","colspan","coords","d","dir","face","height","hspace","ismap","lang","marginheight","marginwidth","multiple","nohref","noresize","noshade","nowrap","ref","rel","rev","rows","rowspan","scrolling","shape","span","summary","tabindex","title","usemap","valign","value","vlink","vspace","width"],j$1=new Sanitizer({whiteList:E$1,onTagAttr:(e,t,n)=>{const r=`${t}="${n}"`;if(A$2.includes(t))return r},stripIgnoreTag:!0,stripIgnoreTagBody:["script","style"]},!0);

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
const t$3="http://www.w3.org/",r$4=`${t$3}2000/svg`,o$3=`${t$3}1999/xlink`;let i$3=[],n$5=(e,t)=>{let r={};return Object.keys(e).forEach((t=>{r[t]=e[t];})),t&&Object.keys(t).forEach((e=>{r[e]=t[e];})),r},s$5=(e,t)=>e.vnodeSelector===t.vnodeSelector&&(e.properties&&t.properties?e.properties.key===t.properties.key&&e.properties.bind===t.properties.bind:!e.properties&&!t.properties),l$1=e=>{if("string"!=typeof e)throw new Error("Style values must be strings")},p$4=(e,t,r)=>{if(""!==t.vnodeSelector)for(let o=r;o<e.length;o++)if(s$5(e[o],t))return o;return -1},d$5=(e,t,r,o)=>{let i=e[t];if(""===i.vnodeSelector)return;let n=i.properties;if(!(n?void 0===n.key?n.bind:n.key:void 0))for(let l=0;l<e.length;l++)if(l!==t){let t=e[l];if(s$5(t,i))throw new Error(`${r.vnodeSelector} had a ${i.vnodeSelector} child ${"added"===o?o:"removed"}, but there is now more than one. You must add unique key properties to make them distinguishable.`)}},a$2=e=>{if(e.properties){let t=e.properties.enterAnimation;t&&t(e.domNode,e.properties);}},f=[],c$3=!1,u$1=e=>{(e.children||[]).forEach(u$1),e.properties&&e.properties.afterRemoved&&e.properties.afterRemoved.apply(e.properties.bind||e.properties,[e.domNode]);},m=()=>{c$3=!1,f.forEach(u$1),f.length=0;},h$1=e=>{f.push(e),c$3||(c$3=!0,"undefined"!=typeof window&&"requestIdleCallback"in window?window.requestIdleCallback(m,{timeout:16}):setTimeout(m,16));},v=e=>{let t=e.domNode;if(e.properties){let r=e.properties.exitAnimation;if(r){t.style.pointerEvents="none";let o=()=>{t.parentNode&&(t.parentNode.removeChild(t),h$1(e));};return void r(t,o,e.properties)}}t.parentNode&&(t.parentNode.removeChild(t),h$1(e));},y=(t,i,n)=>{if(!i)return;let s=n.eventHandlerInterceptor,p=Object.keys(i),d=p.length;for(let a=0;a<d;a++){let d=p[a],f=i[d];if("className"===d)throw new Error('Property "className" is not supported, use "class".');if("class"===d)k(t,f,!0);else if("classes"===d){let e=Object.keys(f),r=e.length;for(let o=0;o<r;o++){let r=e[o];f[r]&&t.classList.add(r);}}else if("styles"===d){let e=Object.keys(f),r=e.length;for(let o=0;o<r;o++){let r=e[o],i=f[r];i&&(l$1(i),n.styleApplyer(t,r,i));}}else if("key"!==d&&null!=f){let l=typeof f;"function"===l?(0===d.lastIndexOf("on",0)&&(s&&(f=s(d,f,t,i)),"oninput"===d&&function(){let e=f;f=function(t){e.apply(this,[t]),t.target["oninput-value"]=t.target.value;};}()),t[d]=f):n.namespace===r$4?"href"===d?t.setAttributeNS(o$3,d,f):t.setAttribute(d,f):"string"===l&&"value"!==d?"innerHTML"===d?t[d]=j$1.sanitize(f):g(t)&&d in t?t[d]=f:t.setAttribute(d,f):t[d]=f;}}};function g(e){if(!(e instanceof Element&&e.tagName.includes("-")))return !1;const t=window.customElements.get(e.tagName.toLowerCase());return !!t&&e instanceof t}let N,b$1=(e,t,r)=>{if(t)for(let o of t)x$1(o,e,void 0,r);},w=(e,t,r)=>{b$1(e,t.children,r),t.text&&(e.textContent=t.text),y(e,t.properties,r),t.properties&&t.properties.afterCreate&&t.properties.afterCreate.apply(t.properties.bind||t.properties,[e,r,t.vnodeSelector,t.properties,t.children]);},x$1=(e,t,o,i)=>{let s,l=0,p=e.vnodeSelector,d=t.ownerDocument;if(""===p)s=e.domNode=d.createTextNode(e.text),void 0!==o?t.insertBefore(s,o):t.appendChild(s);else {for(let a=0;a<=p.length;++a){let f=p.charAt(a);if(a===p.length||"."===f||"#"===f){let f=p.charAt(l-1),c=p.slice(l,a);"."===f?s.classList.add(c):"#"===f?s.id=c:("svg"===c&&(i=n$5(i,{namespace:r$4})),void 0!==i.namespace?s=e.domNode=d.createElementNS(i.namespace,c):(s=e.domNode=e.domNode||d.createElement(c),"input"===c&&e.properties&&void 0!==e.properties.type&&s.setAttribute("type",e.properties.type)),void 0!==o?t.insertBefore(s,o):s.parentNode!==t&&t.appendChild(s)),l=a+1;}}w(s,e,i);}},k=(e,t,r)=>{t&&t.split(" ").forEach((t=>{t&&e.classList.toggle(t,r);}));},A$1=(t,i,n,s)=>{if(!n)return;let p=!1,d=Object.keys(n),a=d.length;for(let f=0;f<a;f++){let a=d[f],c=n[a],u=i[a];if("class"===a)u!==c&&(k(t,u,!1),k(t,c,!0));else if("classes"===a){let e=t.classList,r=Object.keys(c),o=r.length;for(let t=0;t<o;t++){let o=r[t],i=!!c[o];i!==!!u[o]&&(p=!0,i?e.add(o):e.remove(o));}}else if("styles"===a){let e=Object.keys(c),r=e.length;for(let o=0;o<r;o++){let r=e[o],i=c[r];i!==u[r]&&(p=!0,i?(l$1(i),s.styleApplyer(t,r,i)):s.styleApplyer(t,r,""));}}else if(c||"string"!=typeof u||(c=""),"value"===a){let e=t[a];e!==c&&(t["oninput-value"]?e===t["oninput-value"]:c!==u)&&(t[a]=c,t["oninput-value"]=void 0),c!==u&&(p=!0);}else if(c!==u){let i=typeof c;"function"===i&&s.eventHandlerInterceptor||(s.namespace===r$4?"href"===a?t.setAttributeNS(o$3,a,c):t.setAttribute(a,c):"string"===i?"innerHTML"===a?t[a]=j$1.sanitize(c):"role"===a&&""===c?t.removeAttribute(a):g(t)&&a in t?t[a]=c:t.setAttribute(a,c):t[a]!==c&&(t[a]=c),p=!0);}}return p},S=(e,t,r,o,n)=>{if(r===o)return !1;o=o||i$3;let l,f=(r=r||i$3).length,c=o.length,u=0,m=0,h=!1;for(;m<c;){let i=u<f?r[u]:void 0,c=o[m];if(void 0!==i&&s$5(i,c))h=N(i,c,n)||h,u++;else {let i=p$4(r,c,u+1);if(i>=0){for(l=u;l<i;l++)v(r[l]),d$5(r,l,e,"removed");h=N(r[i],c,n)||h,u=i+1;}else x$1(c,t,u<f?r[u].domNode:void 0,n),a$2(c),d$5(o,m,e,"added");}m++;}if(f>u)for(l=u;l<f;l++)v(r[l]),d$5(r,l,e,"removed");return h};N=(e,t,o)=>{let i=e.domNode,s=!1;if(e===t)return !1;let l=!1;if(""===t.vnodeSelector){if(t.text!==e.text){let e=i.ownerDocument.createTextNode(t.text);return i.parentNode.replaceChild(e,i),t.domNode=e,s=!0,s}t.domNode=i;}else 0===t.vnodeSelector.lastIndexOf("svg",0)&&(o=n$5(o,{namespace:r$4})),e.text!==t.text&&(l=!0,void 0===t.text?i.removeChild(i.firstChild):i.textContent=t.text),t.domNode=i,l=S(t,i,e.children,t.children,o)||l,l=A$1(i,e.properties,t.properties,o)||l,t.properties&&t.properties.afterUpdate&&t.properties.afterUpdate.apply(t.properties.bind||t.properties,[i,o,t.vnodeSelector,t.properties,t.children]);return l&&t.properties&&t.properties.updateAnimation&&t.properties.updateAnimation(i,t.properties,e.properties),s};let C$1=(e,t)=>({getLastRender:()=>e,update:r=>{if(e.vnodeSelector!==r.vnodeSelector)throw new Error("The selector for the root VNode may not be changed. (consider using dom.merge and add one extra level to the virtual DOM)");let o=e;e=r,N(o,r,t);},domNode:e.domNode});

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
const p$3={namespace:void 0,performanceLogger:()=>{},eventHandlerInterceptor:void 0,styleApplyer:(e,r,o)=>{"-"===r.charAt(0)?e.style.setProperty(r,o):e.style[r]=o;}};let d$4=r=>n$5(p$3,r),n$4={create:(e,t)=>(t=d$4(t),x$1(e,document.createElement("div"),void 0,t),C$1(e,t)),append:(e,t,p)=>(p=d$4(p),x$1(t,e,void 0,p),C$1(t,p)),insertBefore:(e,t,p)=>(p=d$4(p),x$1(t,e.parentNode,e,p),C$1(t,p)),merge:(e,r,p)=>(p=d$4(p),r.domNode=e,w(e,r,p),C$1(r,p)),replace:(e,t,p)=>(p=d$4(p),x$1(t,e.parentNode,e,p),e.parentNode.removeChild(e),C$1(t,p))};

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
const e$7={handleInterceptedEvent:(e,p,t,n)=>(e.scheduleRender(),p.properties[`on${n.type}`].apply(p.properties.bind||t,[n]))};

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
const e$6={namespace:void 0,performanceLogger:()=>{},eventHandlerInterceptor:void 0,styleApplyer:(e,r,o)=>{e.style[r]=o;}},r$3=r=>({...e$6,...r});

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
const o$2=(e,t)=>{const r=[];for(;e&&e!==t;)r.push(e),e=e.parentNode;return r},n$3=(e,t)=>e.find(t),d$3=(e,t,r=!1)=>{let o=e;return t.forEach(((e,d)=>{const s=o?.children?n$3(o.children,(t=>t.domNode===e)):void 0;r&&!s&&d!==t.length-1||(o=s);})),o},s$4=n=>{let s;const i={...e$7,...n},c=r$3(i),a=c.performanceLogger;let m,p=!0,l=!1;const f=[],u=[],h=(e,t,r)=>{let n;c.eventHandlerInterceptor=(e,t,r,c)=>function(e){let t;a("domEvent",e);const r=o$2(e.currentTarget,n.domNode),c=r.some((e=>customElements.get(e?.tagName?.toLowerCase())));if(e.eventPhase===Event.CAPTURING_PHASE||!c)r.reverse(),t=d$3(n.getLastRender(),r);else {const r=e.composedPath(),o=r.slice(r.indexOf(e.currentTarget),r.indexOf(n.domNode)).filter((e=>e.getRootNode()===e.ownerDocument)).reverse();t=d$3(n.getLastRender(),o,!0);}let m;return t&&(m=i.handleInterceptedEvent(s,t,this,e)),a("domEventProcessed",e),m},i.postProcessProjectionOptions?.(c);const m=r();n=e(t,m,c),f.push(n),u.push(r),i.afterFirstVNodeRendered&&i.afterFirstVNodeRendered(n,m);};let v=()=>{if(m=void 0,p){p=!1,a("renderStart",void 0);for(let e=0;e<f.length;e++){const t=u[e]();a("rendered",void 0),f[e].update(t),a("patched",void 0);}a("renderDone",void 0),p=!0;}};return i.modifyDoRenderImplementation&&(v=i.modifyDoRenderImplementation(v,f,u)),s={renderNow:v,scheduleRender:()=>{m||l||(m=requestAnimationFrame(v));},stop:()=>{m&&(cancelAnimationFrame(m),m=void 0),l=!0;},resume:()=>{l=!1,p=!0,s.scheduleRender();},append:(t,r)=>{h(n$4.append,t,r);},insertBefore:(t,r)=>{h(n$4.insertBefore,t,r);},merge:(t,r)=>{h(n$4.merge,t,r);},replace:(t,r)=>{h(n$4.replace,t,r);},detach:e=>{for(let t=0;t<u.length;t++)if(u[t]===e)return u.splice(t,1),f.splice(t,1)[0];throw new Error("renderFunction was not found")}},s};

/**
 * Virtual DOM patching algorithm based on Snabbdom by
 * Simon Friis Vindum (@paldepind)
 * Licensed under the MIT License
 * https://github.com/snabbdom/snabbdom/blob/master/LICENSE
 *
 * Modified for Stencil's renderer and slot projection
 */
const getAssetPath = (path) => {
    const assetUrl = new URL(path, plt.$resourcesUrl$);
    return assetUrl.origin !== win.location.origin ? assetUrl.href : assetUrl.pathname;
};
const setAssetPath = (path) => (plt.$resourcesUrl$ = path);
const win = typeof window !== 'undefined' ? window : {};
const plt = {
    $flags$: 0,
    $resourcesUrl$: '',
    jmp: (h) => h(),
    raf: (h) => requestAnimationFrame(h),
    ael: (el, eventName, listener, opts) => el.addEventListener(eventName, listener, opts),
    rel: (el, eventName, listener, opts) => el.removeEventListener(eventName, listener, opts),
    ce: (eventName, opts) => new CustomEvent(eventName, opts),
};

/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-design-system/blob/main/LICENSE.md for details.
 * v1.8.0
 */

const autoMode = "calcite-mode-auto";
const darkMode = "calcite-mode-dark";

/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-design-system/blob/main/LICENSE.md for details.
 * v1.8.0
 */

/**
 * Emits when the mode is dynamically toggled between light and dark on <body> or in OS preferences.
 */
function initModeChangeEvent() {
  const { classList } = document.body;
  const prefersDark = window.matchMedia("(prefers-color-scheme: dark)").matches;
  const getMode = () => classList.contains(darkMode) || (classList.contains(autoMode) && prefersDark) ? "dark" : "light";
  const emitModeChange = (mode) => document.body.dispatchEvent(new CustomEvent("calciteModeChange", { bubbles: true, detail: { mode } }));
  const modeChangeHandler = (newMode) => {
    currentMode !== newMode && emitModeChange(newMode);
    currentMode = newMode;
  };
  let currentMode = getMode();
  // emits event on page load
  emitModeChange(currentMode);
  // emits event when changing OS mode preferences
  window
    .matchMedia("(prefers-color-scheme: dark)")
    .addEventListener("change", (event) => modeChangeHandler(event.matches ? "dark" : "light"));
  // emits event when toggling between mode classes on <body>
  new MutationObserver(() => modeChangeHandler(getMode())).observe(document.body, {
    attributes: true,
    attributeFilter: ["class"],
  });
}

/**
 * This file is imported in Stencil's `globalScript` config option.
 *
 * @see {@link https://stenciljs.com/docs/config#globalscript}
 */
function appGlobalScript () {
  const isBrowser = typeof window !== "undefined" &&
    typeof location !== "undefined" &&
    typeof document !== "undefined" &&
    window.location === location &&
    window.document === document;
  if (isBrowser) {
    if (document.readyState === "interactive") {
      initModeChangeEvent();
    }
    else {
      document.addEventListener("DOMContentLoaded", () => initModeChangeEvent(), { once: true });
    }
  }
}

const globalScripts = appGlobalScript;

globalScripts();

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
let c$2;function r$2(){try{getAssetPath(".");}catch{setAssetPath(_$d(a$3(c$2)));}}c$2="components/assets";

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
const t$2=Symbol("widget"),e$5=Symbol("widget-test-data");

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
const r$1=[],o$1={},n$2=new WeakMap;function i$2(e,t){let n=t.children;if(n&&n.length)for(let r=0;r<n.length;++r)n[r]=i$2(e,n[r]);else n=r$1;const f=t.vnodeSelector;if(a$1(f)){const r=t.properties||o$1,i=r.key||f;return {vnodeSelector:"div",properties:{key:i,afterCreate:d$2,afterUpdate:s$3,afterRemoved:c$1,parentWidget:e,widgetConstructor:f,widgetProperties:{...r,key:i,children:n}},children:void 0,text:void 0,domNode:null}}return t}function d$2(t,r,o,{parentWidget:i,widgetConstructor:d,widgetProperties:s}){const a=new d(s);a.container=t,n$2.set(t,a),a.afterCreate?.(a,t),i._internalHandles.add(e$w((()=>c$1(t))));}function s$3(e,t,r,{widgetProperties:o}){const i=n$2.get(e);i&&(i.set(o),i.afterUpdate?.(i,e));}function c$1(e){const t=n$2.get(e);t&&(t.afterRemoved?.(t,e),t.destroy(),n$2.delete(e));}function a$1(e){return "function"==typeof e&&e[t$2]}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
const e$4=new Set;function n$1(n){e$4.add(n),n.finally((()=>e$4.delete(n)));}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
var $;const z="esri.widgets.Widget";let x=0;const A={widgetIcon:"esri-icon-checkbox-unchecked"};function B(e,t){for(const r in t)null!=e[r]&&("object"==typeof e[r]&&"object"==typeof t[r]?B(e[r],t?.[r]):e[r]=t[r]);return e}const D$1=s$4({postProcessProjectionOptions(e){const t=e.eventHandlerInterceptor,r=/capture$/i;e.eventHandlerInterceptor=(e,s,o,i)=>{const n=t?.(e,s,o,i),a=r.test(e);if(!((e=e.replace(r,"")).toLowerCase()in o)||a){const t=e[2].toLowerCase()+e.slice(3),r=e=>n?.call(o,e);o.addEventListener(t,r,a);const s=()=>o.removeEventListener(t,r,a),c=i.afterRemoved;i.afterRemoved=e=>{c?.(e),s();};}return n};},handleInterceptedEvent(e,t,r,s){const{eventPhase:o,type:i}=s,n=o===Event.CAPTURING_PHASE;let a=`on${i}${n?"capture":""}`;const c=t.properties;(c&&a in c||(a=`on${i[0].toUpperCase()}${i.slice(1)}${n?"Capture":""}`,c&&a in c))&&(t$4(),e.scheduleRender(),c[a].call(c.bind||r,s));}});let M=!1,O=class extends(m$2(n$9.EventedAccessor)){constructor(e,t){super(e,t),this._attached=!1,this._internalHandles=new t$r,this._projector=D$1,this._readyForTrueRender=!1,this.iconClass=A.widgetIcon,this.icon=null,this.key=this,this._loadLocale=k$9((async()=>{if(this._messageBundleProps&&this._messageBundleProps.length){const e=await j$c(this._messageBundleProps.map((async({bundlePath:e,propertyName:t})=>{if(this.destroyed)return;let r=await h$3(e);this.uiStrings&&Object.keys(this.uiStrings)&&(r=B(a$v(r),this.uiStrings)),this[t]=r;})));if(this.destroyed)return;for(const t of e)t.error&&s$E.getLogger(this).error("widget-intl:locale-error",this.declaredClass,t.error);}await this.loadLocale();})),r$2();const r="esri-widget-uid-"+n$7(),s=this.render.bind(this);this._trackingTarget=new t$g((()=>this.scheduleRender()));const o=()=>{if(!this._readyForTrueRender||this.destroyed)return null;const e=s();let{properties:t}=e;t||(e.properties=t={});const{key:o}=t;o||(t.key=r),this.visible?t.styles||(t.styles={}):(t.class="",t.styles={display:"none"}),t.styles.display||(t.styles.display="");let i=0;return e.children?.forEach((e=>{if(a$1(e.vnodeSelector))return;let{properties:t}=e;t||(e.properties=t={}),t.key||(t.key=`${this.id}--${i++}`);})),i$2(this,e)};this.render=()=>{if(M)return o();let e=e$8(this)??null;if(e)return e;this._trackingTarget.clear(),M=!0;try{e=f$r(this._trackingTarget,o);}catch(t){throw console.error(t),t}finally{M=!1;}return e&&c$4(this,e),e},this.addResolvingPromise(this._resourcesFetch=this.beforeFirstRender().then((()=>{this._readyForTrueRender=!0,this._postInitialize();}))),n$1(this._resourcesFetch);}normalizeCtorArgs(e,t){const r={...e};return t&&(r.container=t),r}postInitialize(){}beforeFirstRender(){return Promise.all([this.loadDependencies(),this._loadLocale()]).then((()=>{})).catch(m$l)}async loadDependencies(){}async loadLocale(){}destroy(){this.destroyed||(l$s(this._trackingTarget),l$s(this.viewModel),this._detach(this.container),this._set("container",null),this._internalHandles.destroy(),this._emitter.clear(),this.render=()=>null,this._projector=null,o$4(this));}set container(e){this._get("container")||this._set("container",e);}castContainer(e){return e$9(e)}get domNode(){return this.container}set domNode(e){this.container=e;}get id(){return this._get("id")||this.get("container.id")||Date.now().toString(16)+"-widget-"+x++}set id(e){e&&this._set("id",e);}get label(){return this.declaredClass.split(".").pop()}set label(e){this._overrideIfSome("label",e);}get renderable(){return this._resourcesFetch}get visible(){return this._get("visible")}set visible(e){this._set("visible",e);}get[($=t$2,e$5)](){return {projector:this._projector}}render(){throw new Error("not implemented")}scheduleRender(){this.destroyed||(o$4(this),this._projector.scheduleRender());}classes(...e){return m$1.apply(this,e)}renderNow(){o$4(this),this._projector.renderNow();}_postInitialize(){if(this.destroyed)return;this.scheduleRender(),this._delegatedEventNames?.length&&this._internalHandles.add(l$4((()=>this.viewModel),((e,t)=>{t&&this._internalHandles.remove("delegated-events"),e&&e$y(e)&&this._internalHandles.add(this._delegatedEventNames.map((t=>r$o(e,t,(e=>{this.emit(t,e);})))),"delegated-events");}),h$5)),this.postInitialize();const e=async()=>{await this._loadLocale().catch(m$l),this.scheduleRender();};this._internalHandles.add([s$9(e),l$4((()=>this.uiStrings),e),f$6((()=>this.container),(e=>{this.destroyed||this._attach(e);}),{initial:!0,once:!0})]);}_attach(e){e&&(this._projector.merge(e,this.render),this._attached=!0);}_detach(e){this._attached&&(this._projector.detach(this.render),this._attached=!1),e?.parentNode?.removeChild(e);}};O[$]=!0,e$x([y$d()],O.prototype,"_readyForTrueRender",void 0),e$x([y$d({value:null})],O.prototype,"container",null),e$x([s$i("container")],O.prototype,"castContainer",null),e$x([y$d()],O.prototype,"iconClass",void 0),e$x([y$d()],O.prototype,"icon",void 0),e$x([y$d()],O.prototype,"id",null),e$x([y$d()],O.prototype,"label",null),e$x([y$d()],O.prototype,"renderable",null),e$x([y$d()],O.prototype,"uiStrings",void 0),e$x([y$d()],O.prototype,"viewModel",void 0),e$x([y$d({value:!0})],O.prototype,"visible",null),e$x([y$d()],O.prototype,"key",void 0),e$x([y$d()],O.prototype,"children",void 0),e$x([y$d()],O.prototype,"afterCreate",void 0),e$x([y$d()],O.prototype,"afterUpdate",void 0),e$x([y$d()],O.prototype,"afterRemoved",void 0),O=e$x([a$i(z)],O);const W=O;

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
function e$3(e){return (s,r)=>{s.hasOwnProperty("_messageBundleProps")||(s._messageBundleProps=s._messageBundleProps?s._messageBundleProps.slice():[]);s._messageBundleProps.push({bundlePath:e,propertyName:r});}}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
var e$2=function(r){return {vnodeSelector:"",properties:void 0,children:void 0,text:r.toString(),domNode:null}},o=function(r,t){for(var n=0,i=r.length;n<i;n++){var d=r[n];Array.isArray(d)?o(d,t):null!=d&&!1!==d&&(d.hasOwnProperty("vnodeSelector")||(d=e$2(d)),t.push(d));}},t$1=function(r,e){for(var t=[],n=2;n<arguments.length;n++)t[n-2]=arguments[n];if(1===t.length&&"string"==typeof t[0])return {vnodeSelector:r,properties:e||void 0,children:void 0,text:t[0],domNode:null};var i=[];return o(t,i),{vnodeSelector:r,properties:e||void 0,children:i,text:void 0,domNode:null}};function n(e,o,...n){return "function"!=typeof e||a$1(e)?t$1(e,o,...n):e(o,...n)}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
const a="esri-identity-form",p$2={base:a,group:`${a}__group`,label:`${a}__label`,footer:`${a}__footer`,esriInput:"esri-input",esriButton:"esri-button",esriButtonSecondary:"esri-button--secondary"},l="ArcGIS Online";let d$1=class extends W{constructor(s,e){super(s,e),this._usernameInputNode=null,this._passwordInputNode=null,this.signingIn=!1,this.server=null,this.resource=null,this.error=null,this.oAuthPrompt=!1;}render(){const{error:s,server:e,resource:t,signingIn:o,oAuthPrompt:n$1,messages:a}=this,d=n("div",{class:p$2.group},s$7(n$1?a.oAuthInfo:a.info,{server:e&&/\.arcgis\.com/i.test(e)?l:e,resource:`(${t||a.lblItem})`})),c=n$1?null:n("div",{class:p$2.group,key:"username"},n("label",{class:p$2.label},a.lblUser,n("input",{value:"",required:!0,autocomplete:"off",spellcheck:!1,type:"text",bind:this,afterCreate:L$1,"data-node-ref":"_usernameInputNode",class:p$2.esriInput}))),m=n$1?null:n("div",{class:p$2.group,key:"password"},n("label",{class:p$2.label},a.lblPwd,n("input",{value:"",required:!0,type:"password",bind:this,afterCreate:L$1,"data-node-ref":"_passwordInputNode",class:p$2.esriInput}))),h=n("div",{class:this.classes(p$2.group,p$2.footer)},n("input",{type:"submit",disabled:!!o,value:o?a.lblSigning:a.lblOk,class:p$2.esriButton}),n("input",{type:"button",value:a.lblCancel,bind:this,onclick:this._cancel,class:this.classes(p$2.esriButton,p$2.esriButtonSecondary)})),b=s?n("div",null,s.details&&s.details.httpStatus?a.invalidUser:a.noAuthService):null;return n("form",{class:p$2.base,bind:this,onsubmit:this._submit},d,b,c,m,h)}_cancel(){this._set("signingIn",!1),this._usernameInputNode&&(this._usernameInputNode.value=""),this._passwordInputNode&&(this._passwordInputNode.value=""),this.emit("cancel");}_submit(s){s.preventDefault(),this._set("signingIn",!0);const e=this.oAuthPrompt?{}:{username:this._usernameInputNode&&this._usernameInputNode.value,password:this._passwordInputNode&&this._passwordInputNode.value};this.emit("submit",e);}};e$x([y$d(),e$3("esri/identity/t9n/identity")],d$1.prototype,"messages",void 0),e$x([y$d()],d$1.prototype,"signingIn",void 0),e$x([y$d()],d$1.prototype,"server",void 0),e$x([y$d()],d$1.prototype,"resource",void 0),e$x([y$d()],d$1.prototype,"error",void 0),e$x([y$d()],d$1.prototype,"oAuthPrompt",void 0),d$1=e$x([a$i("esri.identity.IdentityForm")],d$1);const c=d$1;

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
function e$1(e){return e&&"function"==typeof e.render}

/*!
* focus-trap 7.4.3
* @license MIT, https://github.com/focus-trap/focus-trap/blob/master/LICENSE
*/

function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys.push.apply(keys, symbols);
  }
  return keys;
}
function _objectSpread2(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {
      _defineProperty(target, key, source[key]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {
      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
    });
  }
  return target;
}
function _defineProperty(obj, key, value) {
  key = _toPropertyKey(key);
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _toPrimitive(input, hint) {
  if (typeof input !== "object" || input === null) return input;
  var prim = input[Symbol.toPrimitive];
  if (prim !== undefined) {
    var res = prim.call(input, hint || "default");
    if (typeof res !== "object") return res;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (hint === "string" ? String : Number)(input);
}
function _toPropertyKey(arg) {
  var key = _toPrimitive(arg, "string");
  return typeof key === "symbol" ? key : String(key);
}

var activeFocusTraps = {
  activateTrap: function activateTrap(trapStack, trap) {
    if (trapStack.length > 0) {
      var activeTrap = trapStack[trapStack.length - 1];
      if (activeTrap !== trap) {
        activeTrap.pause();
      }
    }
    var trapIndex = trapStack.indexOf(trap);
    if (trapIndex === -1) {
      trapStack.push(trap);
    } else {
      // move this existing trap to the front of the queue
      trapStack.splice(trapIndex, 1);
      trapStack.push(trap);
    }
  },
  deactivateTrap: function deactivateTrap(trapStack, trap) {
    var trapIndex = trapStack.indexOf(trap);
    if (trapIndex !== -1) {
      trapStack.splice(trapIndex, 1);
    }
    if (trapStack.length > 0) {
      trapStack[trapStack.length - 1].unpause();
    }
  }
};
var isSelectableInput = function isSelectableInput(node) {
  return node.tagName && node.tagName.toLowerCase() === 'input' && typeof node.select === 'function';
};
var isEscapeEvent = function isEscapeEvent(e) {
  return e.key === 'Escape' || e.key === 'Esc' || e.keyCode === 27;
};
var isTabEvent = function isTabEvent(e) {
  return e.key === 'Tab' || e.keyCode === 9;
};

// checks for TAB by default
var isKeyForward = function isKeyForward(e) {
  return isTabEvent(e) && !e.shiftKey;
};

// checks for SHIFT+TAB by default
var isKeyBackward = function isKeyBackward(e) {
  return isTabEvent(e) && e.shiftKey;
};
var delay = function delay(fn) {
  return setTimeout(fn, 0);
};

// Array.find/findIndex() are not supported on IE; this replicates enough
//  of Array.findIndex() for our needs
var findIndex = function findIndex(arr, fn) {
  var idx = -1;
  arr.every(function (value, i) {
    if (fn(value)) {
      idx = i;
      return false; // break
    }

    return true; // next
  });

  return idx;
};

/**
 * Get an option's value when it could be a plain value, or a handler that provides
 *  the value.
 * @param {*} value Option's value to check.
 * @param {...*} [params] Any parameters to pass to the handler, if `value` is a function.
 * @returns {*} The `value`, or the handler's returned value.
 */
var valueOrHandler = function valueOrHandler(value) {
  for (var _len = arguments.length, params = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    params[_key - 1] = arguments[_key];
  }
  return typeof value === 'function' ? value.apply(void 0, params) : value;
};
var getActualTarget = function getActualTarget(event) {
  // NOTE: If the trap is _inside_ a shadow DOM, event.target will always be the
  //  shadow host. However, event.target.composedPath() will be an array of
  //  nodes "clicked" from inner-most (the actual element inside the shadow) to
  //  outer-most (the host HTML document). If we have access to composedPath(),
  //  then use its first element; otherwise, fall back to event.target (and
  //  this only works for an _open_ shadow DOM; otherwise,
  //  composedPath()[0] === event.target always).
  return event.target.shadowRoot && typeof event.composedPath === 'function' ? event.composedPath()[0] : event.target;
};

// NOTE: this must be _outside_ `createFocusTrap()` to make sure all traps in this
//  current instance use the same stack if `userOptions.trapStack` isn't specified
var internalTrapStack = [];
var createFocusTrap = function createFocusTrap(elements, userOptions) {
  // SSR: a live trap shouldn't be created in this type of environment so this
  //  should be safe code to execute if the `document` option isn't specified
  var doc = (userOptions === null || userOptions === void 0 ? void 0 : userOptions.document) || document;
  var trapStack = (userOptions === null || userOptions === void 0 ? void 0 : userOptions.trapStack) || internalTrapStack;
  var config = _objectSpread2({
    returnFocusOnDeactivate: true,
    escapeDeactivates: true,
    delayInitialFocus: true,
    isKeyForward: isKeyForward,
    isKeyBackward: isKeyBackward
  }, userOptions);
  var state = {
    // containers given to createFocusTrap()
    // @type {Array<HTMLElement>}
    containers: [],
    // list of objects identifying tabbable nodes in `containers` in the trap
    // NOTE: it's possible that a group has no tabbable nodes if nodes get removed while the trap
    //  is active, but the trap should never get to a state where there isn't at least one group
    //  with at least one tabbable node in it (that would lead to an error condition that would
    //  result in an error being thrown)
    // @type {Array<{
    //   container: HTMLElement,
    //   tabbableNodes: Array<HTMLElement>, // empty if none
    //   focusableNodes: Array<HTMLElement>, // empty if none
    //   firstTabbableNode: HTMLElement|null,
    //   lastTabbableNode: HTMLElement|null,
    //   nextTabbableNode: (node: HTMLElement, forward: boolean) => HTMLElement|undefined
    // }>}
    containerGroups: [],
    // same order/length as `containers` list

    // references to objects in `containerGroups`, but only those that actually have
    //  tabbable nodes in them
    // NOTE: same order as `containers` and `containerGroups`, but __not necessarily__
    //  the same length
    tabbableGroups: [],
    nodeFocusedBeforeActivation: null,
    mostRecentlyFocusedNode: null,
    active: false,
    paused: false,
    // timer ID for when delayInitialFocus is true and initial focus in this trap
    //  has been delayed during activation
    delayInitialFocusTimer: undefined
  };
  var trap; // eslint-disable-line prefer-const -- some private functions reference it, and its methods reference private functions, so we must declare here and define later

  /**
   * Gets a configuration option value.
   * @param {Object|undefined} configOverrideOptions If true, and option is defined in this set,
   *  value will be taken from this object. Otherwise, value will be taken from base configuration.
   * @param {string} optionName Name of the option whose value is sought.
   * @param {string|undefined} [configOptionName] Name of option to use __instead of__ `optionName`
   *  IIF `configOverrideOptions` is not defined. Otherwise, `optionName` is used.
   */
  var getOption = function getOption(configOverrideOptions, optionName, configOptionName) {
    return configOverrideOptions && configOverrideOptions[optionName] !== undefined ? configOverrideOptions[optionName] : config[configOptionName || optionName];
  };

  /**
   * Finds the index of the container that contains the element.
   * @param {HTMLElement} element
   * @param {Event} [event]
   * @returns {number} Index of the container in either `state.containers` or
   *  `state.containerGroups` (the order/length of these lists are the same); -1
   *  if the element isn't found.
   */
  var findContainerIndex = function findContainerIndex(element, event) {
    var composedPath = typeof (event === null || event === void 0 ? void 0 : event.composedPath) === 'function' ? event.composedPath() : undefined;
    // NOTE: search `containerGroups` because it's possible a group contains no tabbable
    //  nodes, but still contains focusable nodes (e.g. if they all have `tabindex=-1`)
    //  and we still need to find the element in there
    return state.containerGroups.findIndex(function (_ref) {
      var container = _ref.container,
        tabbableNodes = _ref.tabbableNodes;
      return container.contains(element) || ( // fall back to explicit tabbable search which will take into consideration any
      //  web components if the `tabbableOptions.getShadowRoot` option was used for
      //  the trap, enabling shadow DOM support in tabbable (`Node.contains()` doesn't
      //  look inside web components even if open)
      composedPath === null || composedPath === void 0 ? void 0 : composedPath.includes(container)) || tabbableNodes.find(function (node) {
        return node === element;
      });
    });
  };

  /**
   * Gets the node for the given option, which is expected to be an option that
   *  can be either a DOM node, a string that is a selector to get a node, `false`
   *  (if a node is explicitly NOT given), or a function that returns any of these
   *  values.
   * @param {string} optionName
   * @returns {undefined | false | HTMLElement | SVGElement} Returns
   *  `undefined` if the option is not specified; `false` if the option
   *  resolved to `false` (node explicitly not given); otherwise, the resolved
   *  DOM node.
   * @throws {Error} If the option is set, not `false`, and is not, or does not
   *  resolve to a node.
   */
  var getNodeForOption = function getNodeForOption(optionName) {
    var optionValue = config[optionName];
    if (typeof optionValue === 'function') {
      for (var _len2 = arguments.length, params = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
        params[_key2 - 1] = arguments[_key2];
      }
      optionValue = optionValue.apply(void 0, params);
    }
    if (optionValue === true) {
      optionValue = undefined; // use default value
    }

    if (!optionValue) {
      if (optionValue === undefined || optionValue === false) {
        return optionValue;
      }
      // else, empty string (invalid), null (invalid), 0 (invalid)

      throw new Error("`".concat(optionName, "` was specified but was not a node, or did not return a node"));
    }
    var node = optionValue; // could be HTMLElement, SVGElement, or non-empty string at this point

    if (typeof optionValue === 'string') {
      node = doc.querySelector(optionValue); // resolve to node, or null if fails
      if (!node) {
        throw new Error("`".concat(optionName, "` as selector refers to no known node"));
      }
    }
    return node;
  };
  var getInitialFocusNode = function getInitialFocusNode() {
    var node = getNodeForOption('initialFocus');

    // false explicitly indicates we want no initialFocus at all
    if (node === false) {
      return false;
    }
    if (node === undefined || !(0,_index_esm_1c65d8c7_js__WEBPACK_IMPORTED_MODULE_0__.a)(node, config.tabbableOptions)) {
      // option not specified nor focusable: use fallback options
      if (findContainerIndex(doc.activeElement) >= 0) {
        node = doc.activeElement;
      } else {
        var firstTabbableGroup = state.tabbableGroups[0];
        var firstTabbableNode = firstTabbableGroup && firstTabbableGroup.firstTabbableNode;

        // NOTE: `fallbackFocus` option function cannot return `false` (not supported)
        node = firstTabbableNode || getNodeForOption('fallbackFocus');
      }
    }
    if (!node) {
      throw new Error('Your focus-trap needs to have at least one focusable element');
    }
    return node;
  };
  var updateTabbableNodes = function updateTabbableNodes() {
    state.containerGroups = state.containers.map(function (container) {
      var tabbableNodes = (0,_index_esm_1c65d8c7_js__WEBPACK_IMPORTED_MODULE_0__.t)(container, config.tabbableOptions);

      // NOTE: if we have tabbable nodes, we must have focusable nodes; focusable nodes
      //  are a superset of tabbable nodes
      var focusableNodes = (0,_index_esm_1c65d8c7_js__WEBPACK_IMPORTED_MODULE_0__.f)(container, config.tabbableOptions);
      return {
        container: container,
        tabbableNodes: tabbableNodes,
        focusableNodes: focusableNodes,
        firstTabbableNode: tabbableNodes.length > 0 ? tabbableNodes[0] : null,
        lastTabbableNode: tabbableNodes.length > 0 ? tabbableNodes[tabbableNodes.length - 1] : null,
        /**
         * Finds the __tabbable__ node that follows the given node in the specified direction,
         *  in this container, if any.
         * @param {HTMLElement} node
         * @param {boolean} [forward] True if going in forward tab order; false if going
         *  in reverse.
         * @returns {HTMLElement|undefined} The next tabbable node, if any.
         */
        nextTabbableNode: function nextTabbableNode(node) {
          var forward = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
          // NOTE: If tabindex is positive (in order to manipulate the tab order separate
          //  from the DOM order), this __will not work__ because the list of focusableNodes,
          //  while it contains tabbable nodes, does not sort its nodes in any order other
          //  than DOM order, because it can't: Where would you place focusable (but not
          //  tabbable) nodes in that order? They have no order, because they aren't tabbale...
          // Support for positive tabindex is already broken and hard to manage (possibly
          //  not supportable, TBD), so this isn't going to make things worse than they
          //  already are, and at least makes things better for the majority of cases where
          //  tabindex is either 0/unset or negative.
          // FYI, positive tabindex issue: https://github.com/focus-trap/focus-trap/issues/375
          var nodeIdx = focusableNodes.findIndex(function (n) {
            return n === node;
          });
          if (nodeIdx < 0) {
            return undefined;
          }
          if (forward) {
            return focusableNodes.slice(nodeIdx + 1).find(function (n) {
              return (0,_index_esm_1c65d8c7_js__WEBPACK_IMPORTED_MODULE_0__.i)(n, config.tabbableOptions);
            });
          }
          return focusableNodes.slice(0, nodeIdx).reverse().find(function (n) {
            return (0,_index_esm_1c65d8c7_js__WEBPACK_IMPORTED_MODULE_0__.i)(n, config.tabbableOptions);
          });
        }
      };
    });
    state.tabbableGroups = state.containerGroups.filter(function (group) {
      return group.tabbableNodes.length > 0;
    });

    // throw if no groups have tabbable nodes and we don't have a fallback focus node either
    if (state.tabbableGroups.length <= 0 && !getNodeForOption('fallbackFocus') // returning false not supported for this option
    ) {
      throw new Error('Your focus-trap must have at least one container with at least one tabbable node in it at all times');
    }
  };
  var tryFocus = function tryFocus(node) {
    if (node === false) {
      return;
    }
    if (node === doc.activeElement) {
      return;
    }
    if (!node || !node.focus) {
      tryFocus(getInitialFocusNode());
      return;
    }
    node.focus({
      preventScroll: !!config.preventScroll
    });
    state.mostRecentlyFocusedNode = node;
    if (isSelectableInput(node)) {
      node.select();
    }
  };
  var getReturnFocusNode = function getReturnFocusNode(previousActiveElement) {
    var node = getNodeForOption('setReturnFocus', previousActiveElement);
    return node ? node : node === false ? false : previousActiveElement;
  };

  // This needs to be done on mousedown and touchstart instead of click
  // so that it precedes the focus event.
  var checkPointerDown = function checkPointerDown(e) {
    var target = getActualTarget(e);
    if (findContainerIndex(target, e) >= 0) {
      // allow the click since it ocurred inside the trap
      return;
    }
    if (valueOrHandler(config.clickOutsideDeactivates, e)) {
      // immediately deactivate the trap
      trap.deactivate({
        // NOTE: by setting `returnFocus: false`, deactivate() will do nothing,
        //  which will result in the outside click setting focus to the node
        //  that was clicked (and if not focusable, to "nothing"); by setting
        //  `returnFocus: true`, we'll attempt to re-focus the node originally-focused
        //  on activation (or the configured `setReturnFocus` node), whether the
        //  outside click was on a focusable node or not
        returnFocus: config.returnFocusOnDeactivate
      });
      return;
    }

    // This is needed for mobile devices.
    // (If we'll only let `click` events through,
    // then on mobile they will be blocked anyways if `touchstart` is blocked.)
    if (valueOrHandler(config.allowOutsideClick, e)) {
      // allow the click outside the trap to take place
      return;
    }

    // otherwise, prevent the click
    e.preventDefault();
  };

  // In case focus escapes the trap for some strange reason, pull it back in.
  var checkFocusIn = function checkFocusIn(e) {
    var target = getActualTarget(e);
    var targetContained = findContainerIndex(target, e) >= 0;

    // In Firefox when you Tab out of an iframe the Document is briefly focused.
    if (targetContained || target instanceof Document) {
      if (targetContained) {
        state.mostRecentlyFocusedNode = target;
      }
    } else {
      // escaped! pull it back in to where it just left
      e.stopImmediatePropagation();
      tryFocus(state.mostRecentlyFocusedNode || getInitialFocusNode());
    }
  };

  // Hijack key nav events on the first and last focusable nodes of the trap,
  // in order to prevent focus from escaping. If it escapes for even a
  // moment it can end up scrolling the page and causing confusion so we
  // kind of need to capture the action at the keydown phase.
  var checkKeyNav = function checkKeyNav(event) {
    var isBackward = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
    var target = getActualTarget(event);
    updateTabbableNodes();
    var destinationNode = null;
    if (state.tabbableGroups.length > 0) {
      // make sure the target is actually contained in a group
      // NOTE: the target may also be the container itself if it's focusable
      //  with tabIndex='-1' and was given initial focus
      var containerIndex = findContainerIndex(target, event);
      var containerGroup = containerIndex >= 0 ? state.containerGroups[containerIndex] : undefined;
      if (containerIndex < 0) {
        // target not found in any group: quite possible focus has escaped the trap,
        //  so bring it back into...
        if (isBackward) {
          // ...the last node in the last group
          destinationNode = state.tabbableGroups[state.tabbableGroups.length - 1].lastTabbableNode;
        } else {
          // ...the first node in the first group
          destinationNode = state.tabbableGroups[0].firstTabbableNode;
        }
      } else if (isBackward) {
        // REVERSE

        // is the target the first tabbable node in a group?
        var startOfGroupIndex = findIndex(state.tabbableGroups, function (_ref2) {
          var firstTabbableNode = _ref2.firstTabbableNode;
          return target === firstTabbableNode;
        });
        if (startOfGroupIndex < 0 && (containerGroup.container === target || (0,_index_esm_1c65d8c7_js__WEBPACK_IMPORTED_MODULE_0__.a)(target, config.tabbableOptions) && !(0,_index_esm_1c65d8c7_js__WEBPACK_IMPORTED_MODULE_0__.i)(target, config.tabbableOptions) && !containerGroup.nextTabbableNode(target, false))) {
          // an exception case where the target is either the container itself, or
          //  a non-tabbable node that was given focus (i.e. tabindex is negative
          //  and user clicked on it or node was programmatically given focus)
          //  and is not followed by any other tabbable node, in which
          //  case, we should handle shift+tab as if focus were on the container's
          //  first tabbable node, and go to the last tabbable node of the LAST group
          startOfGroupIndex = containerIndex;
        }
        if (startOfGroupIndex >= 0) {
          // YES: then shift+tab should go to the last tabbable node in the
          //  previous group (and wrap around to the last tabbable node of
          //  the LAST group if it's the first tabbable node of the FIRST group)
          var destinationGroupIndex = startOfGroupIndex === 0 ? state.tabbableGroups.length - 1 : startOfGroupIndex - 1;
          var destinationGroup = state.tabbableGroups[destinationGroupIndex];
          destinationNode = destinationGroup.lastTabbableNode;
        } else if (!isTabEvent(event)) {
          // user must have customized the nav keys so we have to move focus manually _within_
          //  the active group: do this based on the order determined by tabbable()
          destinationNode = containerGroup.nextTabbableNode(target, false);
        }
      } else {
        // FORWARD

        // is the target the last tabbable node in a group?
        var lastOfGroupIndex = findIndex(state.tabbableGroups, function (_ref3) {
          var lastTabbableNode = _ref3.lastTabbableNode;
          return target === lastTabbableNode;
        });
        if (lastOfGroupIndex < 0 && (containerGroup.container === target || (0,_index_esm_1c65d8c7_js__WEBPACK_IMPORTED_MODULE_0__.a)(target, config.tabbableOptions) && !(0,_index_esm_1c65d8c7_js__WEBPACK_IMPORTED_MODULE_0__.i)(target, config.tabbableOptions) && !containerGroup.nextTabbableNode(target))) {
          // an exception case where the target is the container itself, or
          //  a non-tabbable node that was given focus (i.e. tabindex is negative
          //  and user clicked on it or node was programmatically given focus)
          //  and is not followed by any other tabbable node, in which
          //  case, we should handle tab as if focus were on the container's
          //  last tabbable node, and go to the first tabbable node of the FIRST group
          lastOfGroupIndex = containerIndex;
        }
        if (lastOfGroupIndex >= 0) {
          // YES: then tab should go to the first tabbable node in the next
          //  group (and wrap around to the first tabbable node of the FIRST
          //  group if it's the last tabbable node of the LAST group)
          var _destinationGroupIndex = lastOfGroupIndex === state.tabbableGroups.length - 1 ? 0 : lastOfGroupIndex + 1;
          var _destinationGroup = state.tabbableGroups[_destinationGroupIndex];
          destinationNode = _destinationGroup.firstTabbableNode;
        } else if (!isTabEvent(event)) {
          // user must have customized the nav keys so we have to move focus manually _within_
          //  the active group: do this based on the order determined by tabbable()
          destinationNode = containerGroup.nextTabbableNode(target);
        }
      }
    } else {
      // no groups available
      // NOTE: the fallbackFocus option does not support returning false to opt-out
      destinationNode = getNodeForOption('fallbackFocus');
    }
    if (destinationNode) {
      if (isTabEvent(event)) {
        // since tab natively moves focus, we wouldn't have a destination node unless we
        //  were on the edge of a container and had to move to the next/previous edge, in
        //  which case we want to prevent default to keep the browser from moving focus
        //  to where it normally would
        event.preventDefault();
      }
      tryFocus(destinationNode);
    }
    // else, let the browser take care of [shift+]tab and move the focus
  };

  var checkKey = function checkKey(event) {
    if (isEscapeEvent(event) && valueOrHandler(config.escapeDeactivates, event) !== false) {
      event.preventDefault();
      trap.deactivate();
      return;
    }
    if (config.isKeyForward(event) || config.isKeyBackward(event)) {
      checkKeyNav(event, config.isKeyBackward(event));
    }
  };
  var checkClick = function checkClick(e) {
    var target = getActualTarget(e);
    if (findContainerIndex(target, e) >= 0) {
      return;
    }
    if (valueOrHandler(config.clickOutsideDeactivates, e)) {
      return;
    }
    if (valueOrHandler(config.allowOutsideClick, e)) {
      return;
    }
    e.preventDefault();
    e.stopImmediatePropagation();
  };

  //
  // EVENT LISTENERS
  //

  var addListeners = function addListeners() {
    if (!state.active) {
      return;
    }

    // There can be only one listening focus trap at a time
    activeFocusTraps.activateTrap(trapStack, trap);

    // Delay ensures that the focused element doesn't capture the event
    // that caused the focus trap activation.
    state.delayInitialFocusTimer = config.delayInitialFocus ? delay(function () {
      tryFocus(getInitialFocusNode());
    }) : tryFocus(getInitialFocusNode());
    doc.addEventListener('focusin', checkFocusIn, true);
    doc.addEventListener('mousedown', checkPointerDown, {
      capture: true,
      passive: false
    });
    doc.addEventListener('touchstart', checkPointerDown, {
      capture: true,
      passive: false
    });
    doc.addEventListener('click', checkClick, {
      capture: true,
      passive: false
    });
    doc.addEventListener('keydown', checkKey, {
      capture: true,
      passive: false
    });
    return trap;
  };
  var removeListeners = function removeListeners() {
    if (!state.active) {
      return;
    }
    doc.removeEventListener('focusin', checkFocusIn, true);
    doc.removeEventListener('mousedown', checkPointerDown, true);
    doc.removeEventListener('touchstart', checkPointerDown, true);
    doc.removeEventListener('click', checkClick, true);
    doc.removeEventListener('keydown', checkKey, true);
    return trap;
  };

  //
  // MUTATION OBSERVER
  //

  var checkDomRemoval = function checkDomRemoval(mutations) {
    var isFocusedNodeRemoved = mutations.some(function (mutation) {
      var removedNodes = Array.from(mutation.removedNodes);
      return removedNodes.some(function (node) {
        return node === state.mostRecentlyFocusedNode;
      });
    });

    // If the currently focused is removed then browsers will move focus to the
    // <body> element. If this happens, try to move focus back into the trap.
    if (isFocusedNodeRemoved) {
      tryFocus(getInitialFocusNode());
    }
  };

  // Use MutationObserver - if supported - to detect if focused node is removed
  // from the DOM.
  var mutationObserver = typeof window !== 'undefined' && 'MutationObserver' in window ? new MutationObserver(checkDomRemoval) : undefined;
  var updateObservedNodes = function updateObservedNodes() {
    if (!mutationObserver) {
      return;
    }
    mutationObserver.disconnect();
    if (state.active && !state.paused) {
      state.containers.map(function (container) {
        mutationObserver.observe(container, {
          subtree: true,
          childList: true
        });
      });
    }
  };

  //
  // TRAP DEFINITION
  //

  trap = {
    get active() {
      return state.active;
    },
    get paused() {
      return state.paused;
    },
    activate: function activate(activateOptions) {
      if (state.active) {
        return this;
      }
      var onActivate = getOption(activateOptions, 'onActivate');
      var onPostActivate = getOption(activateOptions, 'onPostActivate');
      var checkCanFocusTrap = getOption(activateOptions, 'checkCanFocusTrap');
      if (!checkCanFocusTrap) {
        updateTabbableNodes();
      }
      state.active = true;
      state.paused = false;
      state.nodeFocusedBeforeActivation = doc.activeElement;
      onActivate === null || onActivate === void 0 ? void 0 : onActivate();
      var finishActivation = function finishActivation() {
        if (checkCanFocusTrap) {
          updateTabbableNodes();
        }
        addListeners();
        updateObservedNodes();
        onPostActivate === null || onPostActivate === void 0 ? void 0 : onPostActivate();
      };
      if (checkCanFocusTrap) {
        checkCanFocusTrap(state.containers.concat()).then(finishActivation, finishActivation);
        return this;
      }
      finishActivation();
      return this;
    },
    deactivate: function deactivate(deactivateOptions) {
      if (!state.active) {
        return this;
      }
      var options = _objectSpread2({
        onDeactivate: config.onDeactivate,
        onPostDeactivate: config.onPostDeactivate,
        checkCanReturnFocus: config.checkCanReturnFocus
      }, deactivateOptions);
      clearTimeout(state.delayInitialFocusTimer); // noop if undefined
      state.delayInitialFocusTimer = undefined;
      removeListeners();
      state.active = false;
      state.paused = false;
      updateObservedNodes();
      activeFocusTraps.deactivateTrap(trapStack, trap);
      var onDeactivate = getOption(options, 'onDeactivate');
      var onPostDeactivate = getOption(options, 'onPostDeactivate');
      var checkCanReturnFocus = getOption(options, 'checkCanReturnFocus');
      var returnFocus = getOption(options, 'returnFocus', 'returnFocusOnDeactivate');
      onDeactivate === null || onDeactivate === void 0 ? void 0 : onDeactivate();
      var finishDeactivation = function finishDeactivation() {
        delay(function () {
          if (returnFocus) {
            tryFocus(getReturnFocusNode(state.nodeFocusedBeforeActivation));
          }
          onPostDeactivate === null || onPostDeactivate === void 0 ? void 0 : onPostDeactivate();
        });
      };
      if (returnFocus && checkCanReturnFocus) {
        checkCanReturnFocus(getReturnFocusNode(state.nodeFocusedBeforeActivation)).then(finishDeactivation, finishDeactivation);
        return this;
      }
      finishDeactivation();
      return this;
    },
    pause: function pause(pauseOptions) {
      if (state.paused || !state.active) {
        return this;
      }
      var onPause = getOption(pauseOptions, 'onPause');
      var onPostPause = getOption(pauseOptions, 'onPostPause');
      state.paused = true;
      onPause === null || onPause === void 0 ? void 0 : onPause();
      removeListeners();
      updateObservedNodes();
      onPostPause === null || onPostPause === void 0 ? void 0 : onPostPause();
      return this;
    },
    unpause: function unpause(unpauseOptions) {
      if (!state.paused || !state.active) {
        return this;
      }
      var onUnpause = getOption(unpauseOptions, 'onUnpause');
      var onPostUnpause = getOption(unpauseOptions, 'onPostUnpause');
      state.paused = false;
      onUnpause === null || onUnpause === void 0 ? void 0 : onUnpause();
      updateTabbableNodes();
      addListeners();
      updateObservedNodes();
      onPostUnpause === null || onPostUnpause === void 0 ? void 0 : onPostUnpause();
      return this;
    },
    updateContainerElements: function updateContainerElements(containerElements) {
      var elementsAsArray = [].concat(containerElements).filter(Boolean);
      state.containers = elementsAsArray.map(function (element) {
        return typeof element === 'string' ? doc.querySelector(element) : element;
      });
      if (state.active) {
        updateTabbableNodes();
      }
      updateObservedNodes();
      return this;
    }
  };

  // initialize container elements
  trap.updateContainerElements(elements);
  return trap;
};

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
const d="esri-identity-modal",p$1={base:d,open:`${d}--open`,closed:`${d}--closed`,title:`${d}__title`,dialog:`${d}__dialog`,content:`${d}__content`,closeButton:`${d}__close-button`,iconClose:"esri-icon-close"};let u=class extends W{constructor(t,e){super(t,e),this.container=document.createElement("div"),this.content=null,this.open=!1,this._focusTrap=null,this._close=()=>{this.open=!1;},document.body.appendChild(this.container),this.addHandles(l$4((()=>this.open),(()=>this._toggleFocusTrap())));}destroy(){this._destroyFocusTrap();}get title(){return this.messages?.auth.signIn}render(){const t=this.id,{open:e,content:o,title:s,messages:i}=this,r=e&&!!o,n$1={[p$1.open]:r,[p$1.closed]:!r},a=n("button",{class:p$1.closeButton,"aria-label":i.close,title:i.close,bind:this,onclick:this._close,type:"button"},n("span",{"aria-hidden":"true",class:p$1.iconClose})),l=`${t}_title`,d=`${t}_content`,u=s?n("h1",{id:l,class:p$1.title},s):null,h=r?n("div",{bind:this,class:p$1.dialog,role:"dialog","aria-labelledby":l,"aria-describedby":d,afterCreate:this._createFocusTrap},a,u,this._renderContent(d)):null;return n("div",{tabIndex:-1,class:this.classes(p$1.base,n$1)},h)}_destroyFocusTrap(){this._focusTrap?.deactivate({onDeactivate:()=>{}}),this._focusTrap=null;}_toggleFocusTrap(){const{_focusTrap:t,open:e}=this;t&&(e?t.activate():t.deactivate());}_createFocusTrap(t){this._destroyFocusTrap();const o=requestAnimationFrame((()=>{this._focusTrap=createFocusTrap(t,{initialFocus:"input",onDeactivate:this._close}),this._toggleFocusTrap();}));this.addHandles(e$w((()=>cancelAnimationFrame(o))));}_renderContent(t){const e=this.content;return "string"==typeof e?n("div",{class:p$1.content,id:t,innerHTML:e}):e$1(e)?n("div",{class:p$1.content,id:t},e.render()):e instanceof HTMLElement?n("div",{class:p$1.content,id:t,bind:e,afterCreate:this._attachToNode}):null}_attachToNode(t){const e=this;t.appendChild(e);}};e$x([y$d({readOnly:!0})],u.prototype,"container",void 0),e$x([y$d()],u.prototype,"content",void 0),e$x([y$d()],u.prototype,"open",void 0),e$x([y$d(),e$3("esri/t9n/common")],u.prototype,"messages",void 0),e$x([y$d()],u.prototype,"title",null),u=e$x([a$i("esri.identity.IdentityModal")],u);const h=u;

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
const t="esriJSAPIOAuth";class e{constructor(t,e){this.oAuthInfo=null,this.storage=null,this.appId=null,this.codeVerifier=null,this.expires=null,this.refreshToken=null,this.ssl=null,this.stateUID=null,this.token=null,this.userId=null,this.oAuthInfo=t,this.storage=e,this._init();}isValid(){let t=!1;if(this.oAuthInfo&&this.userId&&(this.refreshToken||this.token))if(null==this.expires&&this.refreshToken)t=!0;else if(this.expires){const e=Date.now();if(this.expires>e){(this.expires-e)/1e3>60*this.oAuthInfo.minTimeUntilExpiration&&(t=!0);}}return t}save(){if(!this.storage)return !1;const e=this._load(),s=this.oAuthInfo;if(s&&s.authNamespace&&s.portalUrl){let r=e[s.authNamespace];r||(r=e[s.authNamespace]={}),this.appId||(this.appId=s.appId),r[s.portalUrl]={appId:this.appId,codeVerifier:this.codeVerifier,expires:this.expires,refreshToken:this.refreshToken,ssl:this.ssl,stateUID:this.stateUID,token:this.token,userId:this.userId};try{this.storage.setItem(t,JSON.stringify(e));}catch(i){return console.warn(i),!1}return !0}return !1}destroy(){const e=this._load(),s=this.oAuthInfo;if(s&&s.appId&&s.portalUrl&&(null==this.expires||this.expires>Date.now())&&(this.refreshToken||this.token)){const t=s.portalUrl.replace(/^http:/i,"https:")+"/sharing/rest/oauth2/revokeToken",e=new FormData;if(e.append("f","json"),e.append("auth_token",this.refreshToken||this.token),e.append("client_id",s.appId),e.append("token_type_hint",this.refreshToken?"refresh_token":"access_token"),"function"==typeof navigator.sendBeacon)navigator.sendBeacon(t,e);else {const s=new XMLHttpRequest;s.open("POST",t),s.send(e);}}if(s&&s.authNamespace&&s.portalUrl&&this.storage){const r=e[s.authNamespace];if(r){delete r[s.portalUrl];try{this.storage.setItem(t,JSON.stringify(e));}catch(i){console.log(i);}}}s&&(s._oAuthCred=null,this.oAuthInfo=null);}_init(){const t=this._load(),e=this.oAuthInfo;if(e&&e.authNamespace&&e.portalUrl){let s=t[e.authNamespace];s&&(s=s[e.portalUrl],s&&(this.appId=s.appId,this.codeVerifier=s.codeVerifier,this.expires=s.expires,this.refreshToken=s.refreshToken,this.ssl=s.ssl,this.stateUID=s.stateUID,this.token=s.token,this.userId=s.userId));}}_load(){let e={};if(this.storage){const i=this.storage.getItem(t);if(i)try{e=JSON.parse(i);}catch(s){console.warn(s);}}return e}}e.prototype.declaredClass="esri.identity.OAuthCredential";

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
var p;let s$2=p=class extends l$f{constructor(o){super(o),this._oAuthCred=null,this.appId=null,this.authNamespace="/",this.expiration=20160,this.flowType="auto",this.forceLogin=!1,this.forceUserId=!1,this.locale=null,this.minTimeUntilExpiration=30,this.popup=!1,this.popupCallbackUrl="oauth-callback.html",this.popupWindowFeatures="height=490,width=800,resizable,scrollbars,status",this.portalUrl="https://www.arcgis.com",this.preserveUrlHash=!1,this.userId=null;}clone(){return p.fromJSON(this.toJSON())}};e$x([y$d({json:{write:!0}})],s$2.prototype,"appId",void 0),e$x([y$d({json:{write:!0}})],s$2.prototype,"authNamespace",void 0),e$x([y$d({json:{write:!0}})],s$2.prototype,"expiration",void 0),e$x([y$d({json:{write:!0}})],s$2.prototype,"flowType",void 0),e$x([y$d({json:{write:!0}})],s$2.prototype,"forceLogin",void 0),e$x([y$d({json:{write:!0}})],s$2.prototype,"forceUserId",void 0),e$x([y$d({json:{write:!0}})],s$2.prototype,"locale",void 0),e$x([y$d({json:{write:!0}})],s$2.prototype,"minTimeUntilExpiration",void 0),e$x([y$d({json:{write:!0}})],s$2.prototype,"popup",void 0),e$x([y$d({json:{write:!0}})],s$2.prototype,"popupCallbackUrl",void 0),e$x([y$d({json:{write:!0}})],s$2.prototype,"popupWindowFeatures",void 0),e$x([y$d({json:{write:!0}})],s$2.prototype,"portalUrl",void 0),e$x([y$d({json:{write:!0}})],s$2.prototype,"preserveUrlHash",void 0),e$x([y$d({json:{write:!0}})],s$2.prototype,"userId",void 0),s$2=p=e$x([a$i("esri.identity.OAuthInfo")],s$2);const i$1=s$2;

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
let s$1=class extends l$f{constructor(o){super(o),this.adminTokenServiceUrl=null,this.currentVersion=null,this.hasPortal=null,this.hasServer=null,this.owningSystemUrl=null,this.owningTenant=null,this.server=null,this.shortLivedTokenValidity=null,this.tokenServiceUrl=null,this.webTierAuth=null;}};e$x([y$d({json:{write:!0}})],s$1.prototype,"adminTokenServiceUrl",void 0),e$x([y$d({json:{write:!0}})],s$1.prototype,"currentVersion",void 0),e$x([y$d({json:{write:!0}})],s$1.prototype,"hasPortal",void 0),e$x([y$d({json:{write:!0}})],s$1.prototype,"hasServer",void 0),e$x([y$d({json:{write:!0}})],s$1.prototype,"owningSystemUrl",void 0),e$x([y$d({json:{write:!0}})],s$1.prototype,"owningTenant",void 0),e$x([y$d({json:{write:!0}})],s$1.prototype,"server",void 0),e$x([y$d({json:{write:!0}})],s$1.prototype,"shortLivedTokenValidity",void 0),e$x([y$d({json:{write:!0}})],s$1.prototype,"tokenServiceUrl",void 0),e$x([y$d({json:{write:!0}})],s$1.prototype,"webTierAuth",void 0),s$1=e$x([a$i("esri.identity.ServerInfo")],s$1);const i=s$1;

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
const C={},b=e=>{const t=new $$4(e.owningSystemUrl).host,r=new $$4(e.server).host,s=/.+\.arcgis\.com$/i;return s.test(t)&&s.test(r)},D=(e,t)=>!!(b(e)&&t&&t.some((t=>t.test(e.server))));let q=null,j=null;try{q=window.localStorage,j=window.sessionStorage;}catch{}class E extends n$9{constructor(){super(),this._portalConfig=globalThis.esriGeowConfig,this.serverInfos=[],this.oAuthInfos=[],this.credentials=[],this._soReqs=[],this._xoReqs=[],this._portals=[],this._defaultOAuthInfo=null,this._defaultTokenValidity=60,this.dialog=null,this.formConstructor=c,this.tokenValidity=null,this.normalizeWebTierAuth=!1,this._appOrigin="null"!==window.origin?window.origin:window.location.origin,this._appUrlObj=L$6(window.location.href),this._busy=null,this._rejectOnPersistedPageShow=!1,this._oAuthLocationParams=null,this._gwTokenUrl="/sharing/rest/generateToken",this._agsRest="/rest/services",this._agsPortal=/\/sharing(\/|$)/i,this._agsAdmin=/(https?:\/\/[^\/]+\/[^\/]+)\/admin\/?(\/.*)?$/i,this._adminSvcs=/\/rest\/admin\/services(\/|$)/i,this._gwDomains=[{regex:/^https?:\/\/www\.arcgis\.com/i,customBaseUrl:"maps.arcgis.com",tokenServiceUrl:"https://www.arcgis.com/sharing/rest/generateToken"},{regex:/^https?:\/\/(?:dev|[a-z\d-]+\.mapsdev)\.arcgis\.com/i,customBaseUrl:"mapsdev.arcgis.com",tokenServiceUrl:"https://dev.arcgis.com/sharing/rest/generateToken"},{regex:/^https?:\/\/(?:devext|[a-z\d-]+\.mapsdevext)\.arcgis\.com/i,customBaseUrl:"mapsdevext.arcgis.com",tokenServiceUrl:"https://devext.arcgis.com/sharing/rest/generateToken"},{regex:/^https?:\/\/(?:qaext|[a-z\d-]+\.mapsqa)\.arcgis\.com/i,customBaseUrl:"mapsqa.arcgis.com",tokenServiceUrl:"https://qaext.arcgis.com/sharing/rest/generateToken"},{regex:/^https?:\/\/[a-z\d-]+\.maps\.arcgis\.com/i,customBaseUrl:"maps.arcgis.com",tokenServiceUrl:"https://www.arcgis.com/sharing/rest/generateToken"}],this._legacyFed=[],this._regexSDirUrl=/http.+\/rest\/services\/?/gi,this._regexServerType=/(\/(FeatureServer|GPServer|GeoDataServer|GeocodeServer|GeoenrichmentServer|GeometryServer|GlobeServer|ImageServer|KnowledgeGraphServer|MapServer|MissionServer|MobileServer|NAServer|NetworkDiagramServer|OGCFeatureServer|ParcelFabricServer|RelationalCatalogServer|SceneServer|StreamServer|UtilityNetworkServer|ValidationServer|VectorTileServer|VersionManagementServer|VideoServer)).*/gi,this._gwUser=/http.+\/users\/([^\/]+)\/?.*/i,this._gwItem=/http.+\/items\/([^\/]+)\/?.*/i,this._gwGroup=/http.+\/groups\/([^\/]+)\/?.*/i,this._rePortalTokenSvc=/\/sharing(\/rest)?\/generatetoken/i,this._createDefaultOAuthInfo=!0,this._hasTestedIfAppIsOnPortal=!1,this._getOAuthLocationParams(),window.addEventListener("pageshow",(e=>{this._pageShowHandler(e);}));}registerServers(e){const t=this.serverInfos;t?(e=e.filter((e=>!this.findServerInfo(e.server))),this.serverInfos=t.concat(e)):this.serverInfos=e,e.forEach((e=>{e.owningSystemUrl&&this._portals.push(e.owningSystemUrl),e.hasPortal&&this._portals.push(e.server);}));}registerOAuthInfos(e){const t=this.oAuthInfos;if(t){for(const r of e){const e=this.findOAuthInfo(r.portalUrl);e&&t.splice(t.indexOf(e),1);}this.oAuthInfos=t.concat(e);}else this.oAuthInfos=e;}registerToken(e){e={...e};const t=this._sanitizeUrl(e.server),r=this._isServerRsrc(t);let s,i$1=this.findServerInfo(t),o=!0;i$1||(i$1=new i,i$1.server=this._getServerInstanceRoot(t),r?i$1.hasServer=!0:(i$1.tokenServiceUrl=this._getTokenSvcUrl(t),i$1.hasPortal=!0),this.registerServers([i$1])),s=this._findCredential(t),s?(delete e.server,Object.assign(s,e),o=!1):(s=new L({userId:e.userId,server:i$1.server,token:e.token,expires:e.expires,ssl:e.ssl,scope:r?"server":"portal"}),s.resources=[t],this.credentials.push(s)),s.emitTokenChange(!1),o||s.refreshServerTokens();}toJSON(){return l$t({serverInfos:this.serverInfos.map((e=>e.toJSON())),oAuthInfos:this.oAuthInfos.map((e=>e.toJSON())),credentials:this.credentials.map((e=>e.toJSON()))})}initialize(e){if(!e)return;"string"==typeof e&&(e=JSON.parse(e));const t=e.serverInfos,r=e.oAuthInfos,s=e.credentials;if(t){const e=[];t.forEach((t=>{t.server&&t.tokenServiceUrl&&e.push(t.declaredClass?t:new i(t));})),e.length&&this.registerServers(e);}if(r){const e=[];r.forEach((t=>{t.appId&&e.push(t.declaredClass?t:new i$1(t));})),e.length&&this.registerOAuthInfos(e);}s&&s.forEach((e=>{e.server&&e.token&&e.expires&&e.expires>Date.now()&&((e=e.declaredClass?e:new L(e)).emitTokenChange(),this.credentials.push(e));}));}findServerInfo(e){let t;e=this._sanitizeUrl(e);for(const r of this.serverInfos)if(this._hasSameServerInstance(r.server,e)){t=r;break}return t}findOAuthInfo(e){let t;e=this._sanitizeUrl(e);for(const r of this.oAuthInfos)if(this._hasSameServerInstance(r.portalUrl,e)){t=r;break}return t}findCredential(e,t){if(!e)return;let r;e=this._sanitizeUrl(e);const s=this._isServerRsrc(e)?"server":"portal";if(t){for(const i of this.credentials)if(this._hasSameServerInstance(i.server,e)&&t===i.userId&&i.scope===s){r=i;break}}else for(const i of this.credentials)if(this._hasSameServerInstance(i.server,e)&&-1!==this._getIdenticalSvcIdx(e,i)&&i.scope===s){r=i;break}return r}getCredential(e,t){let r,s,o=!0;t&&(r=!!t.token,s=t.error,o=!1!==t.prompt),t={...t},e=this._sanitizeUrl(e);const n=new AbortController,a=C$6();if(t.signal&&w$7(t.signal,(()=>{n.abort();})),w$7(n,(()=>{a.reject(new s$C("identity-manager:user-aborted","ABORTED"));})),a$t(n))return a.promise;t.signal=n.signal;const h=this._isAdminResource(e),u=r?this.findCredential(e):null;let p;if(u&&s&&s.details&&498===s.details.httpStatus)u.destroy();else if(u)return p=new s$C("identity-manager:not-authorized","You are currently signed in as: '"+u.userId+"'. You do not have access to this resource: "+e,{error:s}),a.reject(p),a.promise;const f=this._findCredential(e,t);if(f)return a.resolve(f),a.promise;let g=this.findServerInfo(e);if(g)!g.hasServer&&this._isServerRsrc(e)&&(g._restInfoPms=this._getTokenSvcUrl(e),g.hasServer=!0);else {const t=this._getTokenSvcUrl(e);if(!t)return p=new s$C("identity-manager:unknown-resource","Unknown resource - could not find token service endpoint."),a.reject(p),a.promise;g=new i,g.server=this._getServerInstanceRoot(e),"string"==typeof t?(g.tokenServiceUrl=t,g.hasPortal=!0):(g._restInfoPms=t,g.hasServer=!0),this.registerServers([g]);}return g.hasPortal&&void 0===g._selfReq&&(o||F$4(g.tokenServiceUrl,this._appOrigin)||this._gwDomains.some((e=>e.tokenServiceUrl===g.tokenServiceUrl)))&&(g._selfReq={owningTenant:t&&t.owningTenant,selfDfd:this._getPortalSelf(g.tokenServiceUrl.replace(this._rePortalTokenSvc,"/sharing/rest/portals/self"),e)}),this._enqueue(e,g,t,a,h)}getResourceName(e){return this._isRESTService(e)?e.replace(this._regexSDirUrl,"").replace(this._regexServerType,"")||"":this._gwUser.test(e)&&e.replace(this._gwUser,"$1")||this._gwItem.test(e)&&e.replace(this._gwItem,"$1")||this._gwGroup.test(e)&&e.replace(this._gwGroup,"$1")||""}generateToken(e,t,r){const o=this._rePortalTokenSvc.test(e.tokenServiceUrl),n=new $$4(this._appOrigin),a=e.shortLivedTokenValidity;let h,l,c,d,u,p,g,m;t&&(m=this.tokenValidity||a||this._defaultTokenValidity,m>a&&a>0&&(m=a)),r&&(h=r.isAdmin,l=r.serverUrl,c=r.token,p=r.signal,g=r.ssl,e.customParameters=r.customParameters),h?d=e.adminTokenServiceUrl:(d=e.tokenServiceUrl,u=new $$4(d.toLowerCase()),e.webTierAuth&&r?.serverUrl&&!g&&"http"===n.scheme&&(F$4(n.uri,d,!0)||"https"===u.scheme&&n.host===u.host&&"7080"===n.port&&"7443"===u.port)&&(d=d.replace(/^https:/i,"http:").replace(/:7443/i,":7080")));const v={query:{request:"getToken",username:t?.username,password:t?.password,serverUrl:l,token:c,expiration:m,referer:h||o?this._appOrigin:null,client:h?"referer":null,f:"json",...e.customParameters},method:"post",authMode:"anonymous",useProxy:this._useProxy(e,r),signal:p,...r?.ioArgs};o||(v.withCredentials=!1);return j$b(d,v).then((r=>{const s=r.data;if(!s||!s.token)return new s$C("identity-manager:authentication-failed","Unable to generate token");const o=e.server;return C[o]||(C[o]={}),t&&(C[o][t.username]=t.password),s.validity=m,s}))}isBusy(){return !!this._busy}checkSignInStatus(e){return this.checkAppAccess(e,"").then((e=>e.credential))}checkAppAccess(e,t,r){let o=!1;return this.getCredential(e,{prompt:!1}).then((n=>{let a;const h={f:"json"};if("portal"===n.scope)if(t&&(this._doPortalSignIn(e)||r&&r.force))a=n.server+"/sharing/rest/oauth2/validateAppAccess",h.client_id=t;else {if(!n.token)return {credential:n};a=n.server+"/sharing/rest";}else {if(!n.token)return {credential:n};a=n.server+"/rest/services";}return n.token&&(h.token=n.token),j$b(a,{query:h,authMode:"anonymous"}).then((e=>{if(!1===e.data.valid)throw new s$C("identity-manager:not-authorized",`You are currently signed in as: '${n.userId}'.`,e.data);return o=!!e.data.viewOnlyUserTypeApp,{credential:n}})).catch((e=>{if("identity-manager:not-authorized"===e.name)throw e;const t=e.details&&e.details.httpStatus;if(498===t)throw n.destroy(),new s$C("identity-manager:not-authenticated","User is not signed in.");if(400===t)throw new s$C("identity-manager:invalid-request");return {credential:n}}))})).then((e=>({credential:e.credential,viewOnly:o})))}setOAuthResponseHash(e){e&&("#"===e.charAt(0)&&(e=e.substring(1)),this._processOAuthPopupParams(I$6(e)));}setOAuthRedirectionHandler(e){this._oAuthRedirectFunc=e;}setProtocolErrorHandler(e){this._protocolFunc=e;}signIn(e,t,r={}){const s=C$6(),o=()=>{h$1?.remove(),d?.remove(),p?.remove(),a?.destroy(),this.dialog?.destroy(),this.dialog=a=h$1=d=p=null;},n=()=>{o(),this._oAuthDfd=null,s.reject(new s$C("identity-manager:user-aborted","ABORTED"));};r.signal&&w$7(r.signal,(()=>{n();}));let a=new this.formConstructor;a.resource=this.getResourceName(e),a.server=t.server,this.dialog=new h,this.dialog.content=a,this.dialog.open=!0,this.emit("dialog-create");let h$1=a.on("cancel",n),d=l$4((()=>this.dialog.open),n),p=a.on("submit",(e=>{this.generateToken(t,e,{isAdmin:r.isAdmin,signal:r.signal}).then((i=>{o();const n=new L({userId:e.username,server:t.server,token:i.token,expires:null!=i.expires?Number(i.expires):null,ssl:!!i.ssl,isAdmin:r.isAdmin,validity:i.validity});s.resolve(n);})).catch((e=>{a.error=e,a.signingIn=!1;}));}));return s.promise}oAuthSignIn(e,t,r,s){this._oAuthDfd=C$6();const o=this._oAuthDfd;let n;s?.signal&&w$7(s.signal,(()=>{const e=this._oAuthDfd&&this._oAuthDfd.oAuthWin_;e&&!e.closed?e.close():this.dialog&&f();})),o.resUrl_=e,o.sinfo_=t,o.oinfo_=r;const a=r._oAuthCred;if(a.storage&&("authorization-code"===r.flowType||"auto"===r.flowType&&!r.popup&&t.currentVersion>=8.4)){let e=crypto.getRandomValues(new Uint8Array(32));n=et(e),a.codeVerifier=n,e=crypto.getRandomValues(new Uint8Array(32)),a.stateUID=et(e),a.save()||(a.codeVerifier=n=null);}else a.codeVerifier=null;let h$1,d,p,_;this._getCodeChallenge(n).then((i=>{const o=!s||!1!==s.oAuthPopupConfirmation;r.popup&&o?(h$1=new this.formConstructor,h$1.oAuthPrompt=!0,h$1.server=t.server,this.dialog=new h,this.dialog.content=h$1,this.dialog.open=!0,this.emit("dialog-create"),d=h$1.on("cancel",f),p=l$4((()=>this.dialog.open),f),_=h$1.on("submit",(()=>{g(),this._doOAuthSignIn(e,t,r,i);}))):this._doOAuthSignIn(e,t,r,i);}));const f=()=>{g(),this._oAuthDfd=null,o.reject(new s$C("identity-manager:user-aborted","ABORTED"));},g=()=>{d?.remove(),p?.remove(),_?.remove(),h$1?.destroy(),this.dialog?.destroy(),this.dialog=null;};return o.promise}destroyCredentials(){if(this.credentials){this.credentials.slice().forEach((e=>{e.destroy();}));}this.emit("credentials-destroy");}enablePostMessageAuth(e="https://www.arcgis.com/sharing/rest"){this._postMessageAuthHandle&&this._postMessageAuthHandle.remove(),this._postMessageAuthHandle=r$o(window,"message",(t=>{if((t.origin===this._appOrigin||t.origin.endsWith(".arcgis.com"))&&"arcgis:auth:requestCredential"===t.data?.type){const r=t.source;this.getCredential(e).then((e=>{r.postMessage({type:"arcgis:auth:credential",credential:{expires:e.expires,server:e.server,ssl:e.ssl,token:e.token,userId:e.userId}},t.origin);})).catch((e=>{r.postMessage({type:"arcgis:auth:error",error:{name:e.name,message:e.message}},t.origin);}));}}));}disablePostMessageAuth(){this._postMessageAuthHandle&&(this._postMessageAuthHandle.remove(),this._postMessageAuthHandle=null);}_getOAuthLocationParams(){let e=window.location.hash;if(e){"#"===e.charAt(0)&&(e=e.substring(1));const t=I$6(e);let r=!1;if(t.access_token&&t.expires_in&&t.state&&t.hasOwnProperty("username"))try{t.state=JSON.parse(t.state),t.state.portalUrl&&(this._oAuthLocationParams=t,r=!0);}catch{}else if(t.error&&t.error_description&&(console.log("IdentityManager OAuth Error: ",t.error," - ",t.error_description),"access_denied"===t.error&&(r=!0,t.state)))try{t.state=JSON.parse(t.state);}catch{}r&&(window.location.hash=t.state?.hash||"");}let t=window.location.search;if(t){"?"===t.charAt(0)&&(t=t.substring(1));const e=I$6(t);let r=!1;if(e.code&&e.state)try{e.state=JSON.parse(e.state),e.state.portalUrl&&e.state.uid&&(this._oAuthLocationParams=e,r=!0);}catch{}else if(e.error&&e.error_description&&(console.log("IdentityManager OAuth Error: ",e.error," - ",e.error_description),"access_denied"===e.error&&(r=!0,e.state)))try{e.state=JSON.parse(e.state);}catch{}if(r){const t={...e};["code","error","error_description","message_code","persist","state"].forEach((e=>{delete t[e];}));const r=v$a(t),s=window.location.pathname+(r?`?${r}`:"")+(e.state?.hash||"");window.history.replaceState(window.history.state,"",s);}}}_getOAuthToken(e,t,r,i,o){return e=e.replace(/^http:/i,"https:"),j$b(`${e}/sharing/rest/oauth2/token`,{authMode:"anonymous",method:"post",query:i&&o?{grant_type:"authorization_code",code:t,redirect_uri:i,client_id:r,code_verifier:o}:{grant_type:"refresh_token",refresh_token:t,client_id:r}}).then((e=>e.data))}_getCodeChallenge(e){if(e&&globalThis.isSecureContext){const t=(new TextEncoder).encode(e);return crypto.subtle.digest("SHA-256",t).then((e=>et(new Uint8Array(e))))}return Promise.resolve(null)}_pageShowHandler(e){if(e.persisted&&this.isBusy()&&this._rejectOnPersistedPageShow){const e=new s$C("identity-manager:user-aborted","ABORTED");this._errbackFunc(e);}}_findCredential(e,t){let r,s,i,o,n=-1;const a=t&&t.token,h=t&&t.resource,l=this._isServerRsrc(e)?"server":"portal",c=this.credentials.filter((t=>this._hasSameServerInstance(t.server,e)&&t.scope===l));if(e=h||e,c.length)if(1===c.length){if(r=c[0],i=this.findServerInfo(r.server),s=i&&i.owningSystemUrl,o=s?this.findCredential(s,r.userId):void 0,n=this._getIdenticalSvcIdx(e,r),!a)return -1===n&&r.resources.push(e),this._addResource(e,o),r;-1!==n&&(r.resources.splice(n,1),this._removeResource(e,o));}else {let t,r;if(c.some((a=>(r=this._getIdenticalSvcIdx(e,a),-1!==r&&(t=a,i=this.findServerInfo(t.server),s=i&&i.owningSystemUrl,o=s?this.findCredential(s,t.userId):void 0,n=r,!0)))),a)t&&(t.resources.splice(n,1),this._removeResource(e,o));else if(t)return this._addResource(e,o),t}}_findOAuthInfo(e){let t=this.findOAuthInfo(e);if(!t)for(const r of this.oAuthInfos)if(this._isIdProvider(r.portalUrl,e)){t=r;break}return t}_addResource(e,t){t&&-1===this._getIdenticalSvcIdx(e,t)&&t.resources.push(e);}_removeResource(e,t){let r=-1;t&&(r=this._getIdenticalSvcIdx(e,t),r>-1&&t.resources.splice(r,1));}_useProxy(e,t){return t&&t.isAdmin&&!F$4(e.adminTokenServiceUrl,this._appOrigin)||!this._isPortalDomain(e.tokenServiceUrl)&&"10.1"===String(e.currentVersion)&&!F$4(e.tokenServiceUrl,this._appOrigin)}_getOrigin(e){const t=new $$4(e);return t.scheme+"://"+t.host+(null!=t.port?":"+t.port:"")}_getServerInstanceRoot(e){const t=e.toLowerCase();let r=t.indexOf(this._agsRest);return -1===r&&this._isAdminResource(e)&&(r=this._agsAdmin.test(e)?e.replace(this._agsAdmin,"$1").length:e.search(this._adminSvcs)),-1!==r||t$w(t)||(r=t.indexOf("/sharing")),-1===r&&"/"===t.substr(-1)&&(r=t.length-1),r>-1?e.substring(0,r):e}_hasSameServerInstance(e,t){return "/"===e.substr(-1)&&(e=e.slice(0,-1)),e=e.toLowerCase(),t=this._getServerInstanceRoot(t).toLowerCase(),e=this._normalizeAGOLorgDomain(e),t=this._normalizeAGOLorgDomain(t),(e=e.substr(e.indexOf(":")))===(t=t.substr(t.indexOf(":")))}_normalizeAGOLorgDomain(e){const t=/^https?:\/\/(?:cdn|[a-z\d-]+\.maps)\.arcgis\.com/i,r=/^https?:\/\/(?:cdndev|[a-z\d-]+\.mapsdevext)\.arcgis\.com/i,s=/^https?:\/\/(?:cdnqa|[a-z\d-]+\.mapsqa)\.arcgis\.com/i;return t.test(e)?e=e.replace(t,"https://www.arcgis.com"):r.test(e)?e=e.replace(r,"https://devext.arcgis.com"):s.test(e)&&(e=e.replace(s,"https://qaext.arcgis.com")),e}_sanitizeUrl(e){const r=(s$F.request.proxyUrl||"").toLowerCase(),s=r?e.toLowerCase().indexOf(r+"?"):-1;return -1!==s&&(e=e.substring(s+r.length+1)),e=K$2(e),L$6(e).path}_isRESTService(e){return e.includes(this._agsRest)}_isAdminResource(e){return this._agsAdmin.test(e)||this._adminSvcs.test(e)}_isServerRsrc(e){return this._isRESTService(e)||this._isAdminResource(e)}_isIdenticalService(e,t){let r=!1;if(this._isRESTService(e)&&this._isRESTService(t)){const s=this._getSuffix(e).toLowerCase(),i=this._getSuffix(t).toLowerCase();if(r=s===i,!r){const e=/(.*)\/(MapServer|FeatureServer|UtilityNetworkServer).*/gi;r=s.replaceAll(e,"$1")===i.replaceAll(e,"$1");}}else this._isAdminResource(e)&&this._isAdminResource(t)?r=!0:this._isServerRsrc(e)||this._isServerRsrc(t)||!this._isPortalDomain(e)||(r=!0);return r}_isPortalDomain(e){const r=new $$4(e.toLowerCase()),s=this._portalConfig;let i=this._gwDomains.some((e=>e.regex.test(r.uri)));return !i&&s&&(i=this._hasSameServerInstance(this._getServerInstanceRoot(s.restBaseUrl),r.uri)),i||s$F.portalUrl&&(i=F$4(r,s$F.portalUrl,!0)),i||(i=this._portals.some((e=>this._hasSameServerInstance(e,r.uri)))),i=i||this._agsPortal.test(r.path),i}_isIdProvider(e,t){let r=-1,s=-1;this._gwDomains.forEach(((i,o)=>{-1===r&&i.regex.test(e)&&(r=o),-1===s&&i.regex.test(t)&&(s=o);}));let i=!1;if(r>-1&&s>-1&&(0===r||4===r?0!==s&&4!==s||(i=!0):1===r?1!==s&&2!==s||(i=!0):2===r?2===s&&(i=!0):3===r&&3===s&&(i=!0)),!i){const r=this.findServerInfo(t),s=r&&r.owningSystemUrl;s&&b(r)&&this._isPortalDomain(s)&&this._isIdProvider(e,s)&&(i=!0);}return i}_getIdenticalSvcIdx(e,t){let r=-1;for(let s=0;s<t.resources.length;s++){const i=t.resources[s];if(this._isIdenticalService(e,i)){r=s;break}}return r}_getSuffix(e){return e.replace(this._regexSDirUrl,"").replace(this._regexServerType,"$1")}_getTokenSvcUrl(e){let t,r,i;if(this._isRESTService(e)||this._isAdminResource(e)){const i=this._getServerInstanceRoot(e);return t=i+"/admin/generateToken",r=j$b(e=i+"/rest/info",{query:{f:"json"}}).then((e=>e.data)),{adminUrl:t,promise:r}}if(this._isPortalDomain(e)){let t="";if(this._gwDomains.some((r=>(r.regex.test(e)&&(t=r.tokenServiceUrl),!!t))),t||this._portals.some((r=>(this._hasSameServerInstance(r,e)&&(t=r+this._gwTokenUrl),!!t))),t||(i=e.toLowerCase().indexOf("/sharing"),-1!==i&&(t=e.substring(0,i)+this._gwTokenUrl)),t||(t=this._getOrigin(e)+this._gwTokenUrl),t){const r=new $$4(e).port;/^http:\/\//i.test(e)&&"7080"===r&&(t=t.replace(/:7080/i,":7443")),t=t.replace(/http:/i,"https:");}return t}if(e.toLowerCase().includes("premium.arcgisonline.com"))return "https://premium.arcgisonline.com/server/tokens"}_processOAuthResponseParams(e,t,r){const s=t._oAuthCred;if(e.code){const i=s.codeVerifier;return s.codeVerifier=null,s.stateUID=null,s.save(),this._getOAuthToken(r.server,e.code,t.appId,this._getRedirectURI(t,!0),i).then((i=>{const o=new L({userId:i.username,server:r.server,token:i.access_token,expires:Date.now()+1e3*i.expires_in,ssl:i.ssl,oAuthState:e.state,_oAuthCred:s});return t.userId=o.userId,s.storage=i.persist?q:j,s.refreshToken=i.refresh_token,s.token=null,s.expires=i.refresh_token_expires_in?Date.now()+1e3*i.refresh_token_expires_in:null,s.userId=o.userId,s.ssl=o.ssl,s.save(),o}))}const i=new L({userId:e.username,server:r.server,token:e.access_token,expires:Date.now()+1e3*Number(e.expires_in),ssl:"true"===e.ssl,oAuthState:e.state,_oAuthCred:s});return t.userId=i.userId,s.storage=e.persist?q:j,s.refreshToken=null,s.token=i.token,s.expires=i.expires,s.userId=i.userId,s.ssl=i.ssl,s.save(),Promise.resolve(i)}_processOAuthPopupParams(e){const t=this._oAuthDfd;if(this._oAuthDfd=null,t)if(clearInterval(this._oAuthIntervalId),this._oAuthOnPopupHandle?.remove(),e.error){const r="access_denied"===e.error,s=new s$C(r?"identity-manager:user-aborted":"identity-manager:authentication-failed",r?"ABORTED":"OAuth: "+e.error+" - "+e.error_description);t.reject(s);}else this._processOAuthResponseParams(e,t.oinfo_,t.sinfo_).then((e=>{t.resolve(e);})).catch((e=>{t.reject(e);}));}_setOAuthResponseQueryString(e){e&&("?"===e.charAt(0)&&(e=e.substring(1)),this._processOAuthPopupParams(I$6(e)));}_exchangeToken(e,t,r){return j$b(`${e}/sharing/rest/oauth2/exchangeToken`,{authMode:"anonymous",method:"post",query:{f:"json",client_id:t,token:r}}).then((e=>e.data.token))}_getPlatformSelf(e,t){return e=e.replace(/^http:/i,"https:"),j$b(`${e}/sharing/rest/oauth2/platformSelf`,{authMode:"anonymous",headers:{"X-Esri-Auth-Client-Id":t,"X-Esri-Auth-Redirect-Uri":window.location.href.replace(/#.*$/,"")},method:"post",query:{f:"json",expiration:30},withCredentials:!0}).then((e=>e.data))}_getPortalSelf(e,t){let r;if(this._gwDomains.some((t=>(t.regex.test(e)&&(r=t.customBaseUrl),!!r))),r)return Promise.resolve({allSSL:!0,currentVersion:"8.4",customBaseUrl:r,portalMode:"multitenant",supportsOAuth:!0});this._appOrigin.startsWith("https:")?e=e.replace(/^http:/i,"https:").replace(/:7080/i,":7443"):/^http:/i.test(t)&&(e=e.replace(/^https:/i,"http:").replace(/:7443/i,":7080"));return j$b(e,{query:{f:"json"},authMode:"anonymous",withCredentials:!0}).then((e=>e.data))}_doPortalSignIn(e){const t=this._portalConfig,r=window.location.href,s=this.findServerInfo(e);return !(!t&&!this._isPortalDomain(r)||!(s?s.hasPortal||s.owningSystemUrl&&this._isPortalDomain(s.owningSystemUrl):this._isPortalDomain(e))||!(this._isIdProvider(r,e)||t&&(this._hasSameServerInstance(this._getServerInstanceRoot(t.restBaseUrl),e)||this._isIdProvider(t.restBaseUrl,e))||F$4(r,e,!0)))}_checkProtocol(e,t,r,s){let o=!0;const n=s?t.adminTokenServiceUrl:t.tokenServiceUrl;if(n.trim().toLowerCase().startsWith("https:")&&!this._appOrigin.startsWith("https:")&&J$2(n)&&(o=!!this._protocolFunc&&!!this._protocolFunc({resourceUrl:e,serverInfo:t}),!o)){r(new s$C("identity-manager:aborted","Aborted the Sign-In process to avoid sending password over insecure connection."));}return o}_enqueue(e,t,r,s,i,o){return s||(s=C$6()),s.resUrl_=e,s.sinfo_=t,s.options_=r,s.admin_=i,s.refresh_=o,this._busy?this._hasSameServerInstance(this._getServerInstanceRoot(e),this._busy.resUrl_)?(this._oAuthDfd&&this._oAuthDfd.oAuthWin_&&this._oAuthDfd.oAuthWin_.focus(),this._soReqs.push(s)):this._xoReqs.push(s):this._doSignIn(s),s.promise}_doSignIn(e$1){this._busy=e$1,this._rejectOnPersistedPageShow=!1;const t=t=>{const r=e$1.options_&&e$1.options_.resource,s=e$1.resUrl_,i=e$1.refresh_;let o=!1;this.credentials.includes(t)||(i&&this.credentials.includes(i)?(i.userId=t.userId,i.token=t.token,i.expires=t.expires,i.validity=t.validity,i.ssl=t.ssl,i.creationTime=t.creationTime,o=!0,t=i):this.credentials.push(t)),t.resources||(t.resources=[]),t.resources.includes(r||s)||t.resources.push(r||s),t.scope=this._isServerRsrc(s)?"server":"portal",t.emitTokenChange();const n=this._soReqs,a={};this._soReqs=[],n.forEach((e=>{if(!this._isIdenticalService(s,e.resUrl_)){const r=this._getSuffix(e.resUrl_);a[r]||(a[r]=!0,t.resources.push(e.resUrl_));}})),e$1.resolve(t),n.forEach((e=>{this._hasSameServerInstance(this._getServerInstanceRoot(s),e.resUrl_)?e.resolve(t):this._soReqs.push(e);})),this._busy=e$1.resUrl_=e$1.sinfo_=e$1.refresh_=null,o||this.emit("credential-create",{credential:t}),this._soReqs.length?this._doSignIn(this._soReqs.shift()):this._xoReqs.length&&this._doSignIn(this._xoReqs.shift());},r=t=>{e$1.reject(t),this._busy=e$1.resUrl_=e$1.sinfo_=e$1.refresh_=null,this._soReqs.length?this._doSignIn(this._soReqs.shift()):this._xoReqs.length&&this._doSignIn(this._xoReqs.shift());},s=(o,a,h,l)=>{const d=e$1.sinfo_,u=!e$1.options_||!1!==e$1.options_.prompt,p=d.hasPortal&&this._findOAuthInfo(e$1.resUrl_);let f,g;if(o)t(new L({userId:o,server:d.server,token:h||null,expires:null!=l?Number(l):null,ssl:!!a}));else if(window!==window.parent&&this._appUrlObj.query?.["arcgis-auth-origin"]&&this._appUrlObj.query?.["arcgis-auth-portal"]&&this._hasSameServerInstance(this._getServerInstanceRoot(this._appUrlObj.query["arcgis-auth-portal"]),e$1.resUrl_)){window.parent.postMessage({type:"arcgis:auth:requestCredential"},this._appUrlObj.query["arcgis-auth-origin"]);const s=r$o(window,"message",(e=>{e.source===window.parent&&e.data&&("arcgis:auth:credential"===e.data.type?(s.remove(),e.data.credential.expires<Date.now()?r(new s$C("identity-manager:credential-request-failed","Parent application's token has expired.")):t(new L(e.data.credential))):"arcgis:auth:error"===e.data.type&&(s.remove(),"tokenExpiredError"===e.data.error.name?r(new s$C("identity-manager:credential-request-failed","Parent application's token has expired.")):r(s$C.fromJSON(e.data.error))));}));w$7(e$1.options_?.signal,(()=>{s.remove();}));}else if(p){let o=p._oAuthCred;if(!o){const e$1=new e(p,q),t=new e(p,j);e$1.isValid()&&t.isValid()?e$1.expires>t.expires?(o=e$1,t.destroy()):(o=t,e$1.destroy()):o=e$1.isValid()?e$1:t,p._oAuthCred=o;}if(o.isValid()){f=new L({userId:o.userId,server:d.server,token:o.token,expires:o.expires,ssl:o.ssl,_oAuthCred:o});const r=p.appId!==o.appId&&this._doPortalSignIn(e$1.resUrl_);r||o.refreshToken?(e$1._pendingDfd=o.refreshToken?this._getOAuthToken(d.server,o.refreshToken,o.appId).then((e=>(f.expires=Date.now()+1e3*e.expires_in,f.token=e.access_token,f))):Promise.resolve(f),e$1._pendingDfd.then((e=>r?this._exchangeToken(e.server,p.appId,e.token).then((t=>(e.token=t,e))).catch((()=>e)):e)).then((e=>{t(e);})).catch((()=>{o?.destroy(),s();}))):t(f);}else if(this._oAuthLocationParams&&this._hasSameServerInstance(p.portalUrl,this._oAuthLocationParams.state.portalUrl)&&(this._oAuthLocationParams.access_token||this._oAuthLocationParams.code&&this._oAuthLocationParams.state.uid===o.stateUID&&o.codeVerifier)){const s=this._oAuthLocationParams;this._oAuthLocationParams=null,e$1._pendingDfd=this._processOAuthResponseParams(s,p,d).then((e=>{t(e);})).catch(r);}else {const s=()=>{u?e$1._pendingDfd=this.oAuthSignIn(e$1.resUrl_,d,p,e$1.options_).then(t,r):(g=new s$C("identity-manager:not-authenticated","User is not signed in."),r(g));};this._doPortalSignIn(e$1.resUrl_)?e$1._pendingDfd=this._getPlatformSelf(d.server,p.appId).then((e=>{F$4(e.portalUrl,this._appOrigin,!0)?(f=new L({userId:e.username,server:d.server,expires:Date.now()+1e3*e.expires_in,token:e.token}),t(f)):s();})).catch(s):s();}}else if(u){if(this._checkProtocol(e$1.resUrl_,d,r,e$1.admin_)){let s=e$1.options_;e$1.admin_&&(s=s||{},s.isAdmin=!0),e$1._pendingDfd=this.signIn(e$1.resUrl_,d,s).then(t,r);}}else g=new s$C("identity-manager:not-authenticated","User is not signed in."),r(g);},o=()=>{const s=e$1.sinfo_,i=s.owningSystemUrl,o=e$1.options_;let n,a,h,l;if(o&&(n=o.token,a=o.error,h=o.prompt),l=this._findCredential(i,{token:n,resource:e$1.resUrl_}),!l)for(const e of this.credentials)if(this._isIdProvider(i,e.server)){l=e;break}if(l){const i=this.findCredential(e$1.resUrl_,l.userId);if(i)t(i);else if(D(s,this._legacyFed)){const e=l.toJSON();e.server=s.server,e.resources=null,t(new L(e));}else {(e$1._pendingDfd=this.generateToken(this.findServerInfo(l.server),null,{serverUrl:e$1.resUrl_,token:l.token,signal:e$1.options_.signal,ssl:l.ssl})).then((r=>{t(new L({userId:l?.userId,server:s.server,token:r.token,expires:null!=r.expires?Number(r.expires):null,ssl:!!r.ssl,isAdmin:e$1.admin_,validity:r.validity}));}),r);}}else {this._busy=null,n&&(e$1.options_.token=null);(e$1._pendingDfd=this.getCredential(i.replace(/\/?$/,"/sharing"),{resource:e$1.resUrl_,owningTenant:s.owningTenant,signal:e$1.options_.signal,token:n,error:a,prompt:h})).then((()=>{this._enqueue(e$1.resUrl_,e$1.sinfo_,e$1.options_,e$1,e$1.admin_);}),(t=>{e$1.resUrl_=e$1.sinfo_=e$1.refresh_=null,e$1.reject(t);}));}};this._errbackFunc=r;const a=e$1.sinfo_.owningSystemUrl,l=this._isServerRsrc(e$1.resUrl_),d=e$1.sinfo_._restInfoPms;d?d.promise.then((t=>{const r=e$1.sinfo_;if(r._restInfoPms){r.adminTokenServiceUrl=r._restInfoPms.adminUrl,r._restInfoPms=null,r.tokenServiceUrl=(t$x("authInfo.tokenServicesUrl",t)||t$x("authInfo.tokenServiceUrl",t)||t$x("tokenServiceUrl",t))??null,r.shortLivedTokenValidity=t$x("authInfo.shortLivedTokenValidity",t)??null,r.currentVersion=t.currentVersion,r.owningTenant=t.owningTenant;const e=r.owningSystemUrl=t.owningSystemUrl;e&&this._portals.push(e);}l&&r.owningSystemUrl?o():s();}),(()=>{e$1.sinfo_._restInfoPms=null;const t=new s$C("identity-manager:server-identification-failed","Unknown resource - could not find token service endpoint.");r(t);})):l&&a?o():e$1.sinfo_._selfReq?e$1.sinfo_._selfReq.selfDfd.then((t=>{const r={};let s,i,o,n;return t&&(s=t.user&&t.user.username,r.username=s,r.allSSL=t.allSSL,i=t.supportsOAuth,n=parseFloat(t.currentVersion),"multitenant"===t.portalMode&&(o=t.customBaseUrl),e$1.sinfo_.currentVersion=n),e$1.sinfo_.webTierAuth=!!s,s&&this.normalizeWebTierAuth?this.generateToken(e$1.sinfo_,null,{ssl:r.allSSL}).catch((()=>null)).then((e=>(r.portalToken=e&&e.token,r.tokenExpiration=e&&e.expires,r))):!s&&i&&n>=4.4&&!this._findOAuthInfo(e$1.resUrl_)?this._generateOAuthInfo({portalUrl:e$1.sinfo_.server,customBaseUrl:o,owningTenant:e$1.sinfo_._selfReq.owningTenant}).catch((()=>null)).then((()=>r)):r})).catch((()=>null)).then((t=>{e$1.sinfo_._selfReq=null,t?s(t.username,t.allSSL,t.portalToken,t.tokenExpiration):s();})):s();}_generateOAuthInfo(e){let t,r=null,i=e.portalUrl;const o=e.customBaseUrl,n=e.owningTenant,a=!this._defaultOAuthInfo&&this._createDefaultOAuthInfo&&!this._hasTestedIfAppIsOnPortal;if(a){r=window.location.href;let e=r.indexOf("?");e>-1&&(r=r.slice(0,e)),e=r.search(/\/(apps|home)\//),r=e>-1?r.slice(0,e):null;}return a&&r?(this._hasTestedIfAppIsOnPortal=!0,t=j$b(r+"/sharing/rest",{query:{f:"json"}}).then((()=>{this._defaultOAuthInfo=new i$1({appId:"arcgisonline",popupCallbackUrl:r+"/home/oauth-callback.html"});}))):t=Promise.resolve(),t.then((()=>{if(this._defaultOAuthInfo)return i=i.replace(/^http:/i,"https:"),j$b(i+"/sharing/rest/oauth2/validateRedirectUri",{query:{accountId:n,client_id:this._defaultOAuthInfo.appId,redirect_uri:_$d(this._defaultOAuthInfo.popupCallbackUrl),f:"json"}}).then((e=>{if(e.data.valid){const t=this._defaultOAuthInfo.clone();e.data.urlKey&&o?t.portalUrl="https://"+e.data.urlKey.toLowerCase()+"."+o:t.portalUrl=i,t.popup=window!==window.top||!(F$4(i,this._appOrigin)||this._gwDomains.some((e=>e.regex.test(i)&&e.regex.test(this._appOrigin)))),this.oAuthInfos.push(t);}}))}))}_doOAuthSignIn(e,t,r,s){const o=r._oAuthCred,a={portalUrl:r.portalUrl};!r.popup&&r.preserveUrlHash&&window.location.hash&&(a.hash=window.location.hash),o.stateUID&&(a.uid=o.stateUID);const h={client_id:r.appId,response_type:o.codeVerifier?"code":"token",state:JSON.stringify(a),expiration:r.expiration,locale:r.locale,redirect_uri:this._getRedirectURI(r,!!o.codeVerifier)};r.forceLogin&&(h.force_login=!0),r.forceUserId&&r.userId&&(h.prepopulatedusername=r.userId),!r.popup&&this._doPortalSignIn(e)&&(h.redirectToUserOrgUrl=!0),o.codeVerifier&&(h.code_challenge=s||o.codeVerifier,h.code_challenge_method=s?"S256":"plain");const l=r.portalUrl.replace(/^http:/i,"https:")+"/sharing/oauth2/authorize",c=l+"?"+v$a(h);if(r.popup){const e=window.open(c,"esriJSAPIOAuth",r.popupWindowFeatures);if(e)e.focus(),this._oAuthDfd.oAuthWin_=e,this._oAuthIntervalId=setInterval((()=>{if(e.closed){clearInterval(this._oAuthIntervalId),this._oAuthOnPopupHandle.remove();const e=this._oAuthDfd;if(e){const t=new s$C("identity-manager:user-aborted","ABORTED");e.reject(t);}}}),500),this._oAuthOnPopupHandle=r$o(window,["arcgis:auth:hash","arcgis:auth:location:search"],(e=>{"arcgis:auth:hash"===e.type?this.setOAuthResponseHash(e.detail):this._setOAuthResponseQueryString(e.detail);}));else {const e=new s$C("identity-manager:popup-blocked","ABORTED");this._oAuthDfd.reject(e);}}else this._rejectOnPersistedPageShow=!0,this._oAuthRedirectFunc?this._oAuthRedirectFunc({authorizeParams:h,authorizeUrl:l,resourceUrl:e,serverInfo:t,oAuthInfo:r}):window.location.href=c;}_getRedirectURI(e,t){const r=window.location.href.replace(/#.*$/,"");if(e.popup)return _$d(e.popupCallbackUrl);if(t){const e=L$6(r);return e.query&&["code","error","error_description","message_code","persist","state"].forEach((t=>{delete e.query[t];})),kt(e.path,e.query)}return r}}E.prototype.declaredClass="esri.identity.IdentityManagerBase";let L=class extends n$9.EventedAccessor{constructor(e){super(e),this._oAuthCred=null,this.tokenRefreshBuffer=2,e&&e._oAuthCred&&(this._oAuthCred=e._oAuthCred);}initialize(){this.resources=this.resources||[],null==this.creationTime&&(this.creationTime=Date.now());}refreshToken(){const e=n$s.findServerInfo(this.server),t=e&&e.owningSystemUrl,s=!!t&&"server"===this.scope,i=s&&D(e,n$s._legacyFed),o=e.webTierAuth,n=o&&n$s.normalizeWebTierAuth,a=C[this.server],h=a&&a[this.userId];let l,c=this.resources&&this.resources[0],d=s?n$s.findServerInfo(t):null,u={username:this.userId,password:h};if(o&&!n)return;s&&!d&&n$s.serverInfos.some((e=>(n$s._isIdProvider(t,e.server)&&(d=e),!!d)));const p=d?n$s.findCredential(d.server,this.userId):null;if(!s||p){if(!i){if(s)l={serverUrl:c,token:p&&p.token,ssl:p&&p.ssl};else if(n)u=null,l={ssl:this.ssl};else {if(!h){let t;return c&&(c=n$s._sanitizeUrl(c),this._enqueued=1,t=n$s._enqueue(c,e,null,null,this.isAdmin,this),t.then((()=>{this._enqueued=0,this.refreshServerTokens();})).catch((()=>{this._enqueued=0;}))),t}this.isAdmin&&(l={isAdmin:!0});}return n$s.generateToken(s?d:e,s?null:u,l).then((e=>{this.token=e.token,this.expires=null!=e.expires?Number(e.expires):null,this.creationTime=Date.now(),this.validity=e.validity,this.emitTokenChange(),this.refreshServerTokens();})).catch((()=>{}))}p?.refreshToken();}}refreshServerTokens(){"portal"===this.scope&&n$s.credentials.forEach((e=>{const t=n$s.findServerInfo(e.server),s=t&&t.owningSystemUrl;e!==this&&e.userId===this.userId&&s&&"server"===e.scope&&(n$s._hasSameServerInstance(this.server,s)||n$s._isIdProvider(s,this.server))&&(D(t,n$s._legacyFed)?(e.token=this.token,e.expires=this.expires,e.creationTime=this.creationTime,e.validity=this.validity,e.emitTokenChange()):e.refreshToken());}));}emitTokenChange(e){clearTimeout(this._refreshTimer);const t=this.server&&n$s.findServerInfo(this.server),s=t&&t.owningSystemUrl,i=s&&n$s.findServerInfo(s);!1===e||s&&"portal"!==this.scope&&(!i||!i.webTierAuth||n$s.normalizeWebTierAuth)||null==this.expires&&null==this.validity||this._startRefreshTimer(),this.emit("token-change");}destroy(){this.userId=this.server=this.token=this.expires=this.validity=this.resources=this.creationTime=null,this._oAuthCred&&(this._oAuthCred.destroy(),this._oAuthCred=null);const e=n$s.credentials.indexOf(this);e>-1&&n$s.credentials.splice(e,1),this.emitTokenChange(),this.emit("destroy");}toJSON(){const e=l$t({userId:this.userId,server:this.server,token:this.token,expires:this.expires,validity:this.validity,ssl:this.ssl,isAdmin:this.isAdmin,creationTime:this.creationTime,scope:this.scope}),t=this.resources;return t&&t.length>0&&(e.resources=t.slice()),e}_startRefreshTimer(){clearTimeout(this._refreshTimer);const e=6e4*this.tokenRefreshBuffer,t=2**31-1;let r=(this.validity?this.creationTime+6e4*this.validity:this.expires)-Date.now();r<0?r=0:r>t&&(r=t),this._refreshTimer=setTimeout(this.refreshToken.bind(this),r>e?r-e:r);}};e$x([y$d()],L.prototype,"creationTime",void 0),e$x([y$d()],L.prototype,"expires",void 0),e$x([y$d()],L.prototype,"isAdmin",void 0),e$x([y$d()],L.prototype,"oAuthState",void 0),e$x([y$d()],L.prototype,"resources",void 0),e$x([y$d()],L.prototype,"scope",void 0),e$x([y$d()],L.prototype,"server",void 0),e$x([y$d()],L.prototype,"ssl",void 0),e$x([y$d()],L.prototype,"token",void 0),e$x([y$d()],L.prototype,"tokenRefreshBuffer",void 0),e$x([y$d()],L.prototype,"userId",void 0),e$x([y$d()],L.prototype,"validity",void 0),L=e$x([a$i("esri.identity.Credential")],L);

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
class r extends E{}r.prototype.declaredClass="esri.identity.IdentityManager";const s=new r;o$z(s);

const IdentityManager = /*#__PURE__*/Object.freeze({
  __proto__: null,
  'default': s
});

class GeocoderClient {
  constructor(token, geocoderUrl) {
    this.token = token;
    this.geocoderUrl = geocoderUrl || _GEClient_f71049f8_js__WEBPACK_IMPORTED_MODULE_1__.E.getUrl('geocode');
    if (!this.geocoderUrl.endsWith('/'))
      this.geocoderUrl += '/';
    s$F.apiKey = token;
  }
  /**
   * Provides quick search suggestions by single-line text and optional parameters.
   * See https://developers.arcgis.com/rest/geocode/api-reference/geocoding-suggest.htm
   *
   * @param text
   * @param options Optional parameters:
   *    location - origin point used to prefer geocoding candidates; string in format "x,y" (e.g., "-117.196,34.056")
   *    sourceCountry - sourceCountry to be used for search
   *    langCode - locale for search
   */
  suggest(text, options) {
    return new Promise((resolve, reject) => {
      if (!text || !text.length) {
        resolve([]);
        return;
      }
      let suggestParams = new URLSearchParams({
        text: text
      });
      options?.location && suggestParams.set('location', options.location);
      options?.sourceCountry && suggestParams.set('sourceCountry', options.sourceCountry);
      options?.langCode && suggestParams.set('langCode', options.langCode);
      this._request(this.geocoderUrl + 'suggest', suggestParams)
        .then(result => {
        resolve(result.suggestions);
      }).catch(error => {
        reject(error);
      });
    });
  }
  /**
   * Geocodes location by single-line address and optional parameters.
   * See https://developers.arcgis.com/rest/geocode/api-reference/geocoding-find-address-candidates.htm
   *
   * @param text Location to be geocoded
   * @param options Optional parameters:
   *    location - origin point used to prefer geocoding candidates; string in format "x,y" (e.g., "-117.196,34.056")
   *    magicKey - key returned from 'suggest' operation for 'text' input; string
   *    maxLocations - maximum number of locations to be returned; number, default is 10
   *    outFields - list of fields to be returned as attributes; string (e.g., "Region,City,Phone")
   */
  geocode(text, options) {
    return new Promise((resolve, reject) => {
      if (!text || !text.length) {
        resolve([]);
        return;
      }
      let geocodeParams = new URLSearchParams({
        maxLocations: options?.maxLocations || 10,
        singleLine: text
      });
      options?.location && geocodeParams.set('location', options.location);
      options?.outFields && geocodeParams.set('outFields', options.outFields);
      options?.magicKey && geocodeParams.set('magicKey', options.magicKey);
      // For the online geocoder service, we want to bypass sending the token, it is not required and causes an issue for Enterprise implementations
      this._request(this.geocoderUrl + 'findAddressCandidates', geocodeParams, _GEClient_f71049f8_js__WEBPACK_IMPORTED_MODULE_1__.E.isOnlineGeocoder(this.geocoderUrl))
        .then(result => {
        resolve(result);
      }).catch(error => {
        reject(error);
      });
    });
  }
  geocodeUsingApi(lat, lon) {
    return new Promise((resolve, reject) => {
      const pt = new x$a({ latitude: lat, longitude: lon });
      const serviceUrl = this.geocoderUrl;
      const params = {
        location: pt
      };
      // Register token if we are NOT using the online Geocoder Service
      if (!_GEClient_f71049f8_js__WEBPACK_IMPORTED_MODULE_1__.E.isOnlineGeocoder(serviceUrl)) {
        s.registerToken({
          server: serviceUrl,
          token: this.token
        });
      }
      // Else if we are using the online Geocoder Service, unset the token as it's not required
      else {
        s$F.apiKey = "";
      }
      n$a(serviceUrl, params)
        .then(result => {
        const data = {
          address: result.address,
          shortAddressType: result.attributes.Addr_type,
          shortAddress: result.attributes.Address,
          city: result.attributes.City,
          countryCode: result.attributes.CountryCode,
          postal: result.attributes.Postal,
          label: result.attributes.LongLabel,
          matchAddr: result.attributes.Match_addr
        };
        resolve(data);
      }).catch(error => {
        reject(error);
      });
    });
  }
  _request(url, params, bypassToken) {
    return new Promise((resolve, reject) => {
      if (!bypassToken) {
        params.set('token', this.token);
      }
      params.set('f', 'json');
      let requestUrl = url + '?' + params.toString();
      fetch(requestUrl, {
        method: 'GET'
      }).then(response => {
        if (!response.ok)
          throw new Error(_ElementIds_a2c40592_js__WEBPACK_IMPORTED_MODULE_2__.B.i18n('network-response-error'));
        return response.json();
      }).then(result => {
        result.error ? reject(result.error) : resolve(result);
      }).catch(error => {
        reject(error);
      });
    });
  }
}

const arcgisBaSearchCss = ":host{display:block}arcgis-ba-search{width:50%;height:36px}.ba-calcite-dropdown-group{display:block;min-width:240px}.arcgisBaSearchIconButton{width:30px;height:30px;}.arcgisBaSearchInputNoGeog{position:relative;left:0;width:100%;z-index:1}.arcgisBASearchOuter{position:relative}.baSearchElement{position:absolute;top:0;left:0;width:32px;height:32px;font-family:arial;font-size:13pt;z-index:1}.baSearchMagGlass{position:absolute;top:0;right:-7px;height:calc(100% - 2px);width:32px;background-image:url(\"data:image/svg+xml,%3Csvg xmlns:svg='http://www.w3.org/2000/svg' xmlns='http://www.w3.org/2000/svg' version='1.1' x='0px' y='0px' width='28px' height='28px' viewBox='0 0 28 28' enable-background='new 0 0 28 28' xml:space='preserve'%3E%3Cpath d='M29.974,53.745c-0.034-0.165-0.307-0.782-0.402-0.923c-0.096-0.137-1.078-0.882-1.232-0.942 c-0.158-0.06-0.851-0.03-1.041-0.03l-14.906,0.033l2.392-2.447c0.085-0.086,0.173-0.184,0.259-0.27 c0.087-0.086,0.173-0.173,0.261-0.26c0.086-0.086,0.168-0.172,0.247-0.26c0.077-0.086,0.149-0.172,0.22-0.259 c0.139-0.12,0.258-0.251,0.352-0.39c0.096-0.139,0.176-0.281,0.247-0.428c0.07-0.148,0.12-0.303,0.156-0.469 c0.035-0.166,0.051-0.342,0.051-0.533c0-0.087-0.005-0.168-0.014-0.247c-0.008-0.078-0.021-0.155-0.038-0.233 c-0.018-0.077-0.039-0.156-0.065-0.234c-0.025-0.077-0.057-0.16-0.091-0.246c-0.035-0.086-0.074-0.169-0.117-0.246 c-0.043-0.078-0.092-0.156-0.143-0.234c-0.051-0.077-0.108-0.151-0.168-0.221c-0.061-0.07-0.126-0.138-0.195-0.207 c-0.139-0.121-0.281-0.225-0.429-0.312s-0.3-0.158-0.455-0.22c-0.156-0.061-0.321-0.102-0.494-0.127 c-0.172-0.025-0.354-0.035-0.546-0.035c-0.19,0-0.372,0.025-0.545,0.051c-0.173,0.025-0.337,0.092-0.494,0.152 c-0.156,0.061-0.307,0.178-0.455,0.264c-0.146,0.086-0.29,0.279-0.429,0.4L2,54.301l9.95,9.646c0.138,0.139,0.281,0.08,0.429,0.174 c0.147,0.096,0.298,0.18,0.454,0.248c0.156,0.07,0.321,0.121,0.494,0.154c0.173,0.035,0.355,0.053,0.546,0.053 c0.19,0,0.372-0.018,0.545-0.053c0.174-0.033,0.339-0.084,0.493-0.154c0.155-0.068,0.308-0.152,0.454-0.248 c0.148-0.094,0.29-0.211,0.43-0.35c0.139-0.121,0.257-0.252,0.351-0.391c0.096-0.139,0.178-0.285,0.248-0.441 c0.068-0.156,0.121-0.318,0.156-0.482c0.034-0.164,0.051-0.34,0.051-0.531c0-0.07-0.004-0.143-0.014-0.221 c-0.009-0.078-0.021-0.156-0.038-0.234c-0.018-0.076-0.04-0.154-0.064-0.232c-0.026-0.078-0.058-0.162-0.092-0.248 c-0.035-0.088-0.075-0.168-0.117-0.246c-0.043-0.078-0.091-0.15-0.143-0.223c-0.051-0.068-0.107-0.139-0.168-0.205 c-0.061-0.072-0.127-0.141-0.195-0.211c-0.07-0.084-0.143-0.174-0.221-0.258c-0.078-0.088-0.16-0.176-0.247-0.262 c-0.088-0.086-0.173-0.176-0.261-0.262c-0.085-0.088-0.172-0.18-0.259-0.266l-2.391-2.352l14.906-0.031 c0.19,0,0.883-0.059,1.041-0.121c0.154-0.061,0.742-0.436,0.882-0.559c0.139-0.121,0.528-0.676,0.598-0.832 c0.068-0.156,0.121-0.217,0.155-0.379C30.009,54.619,30.009,53.91,29.974,53.745z' style='fill:%23555;fill-opacity:1'/%3E%3Cg id='g2988' style='fill:%23555;fill-opacity:1'%3E%3Cpath d='M0.1,10.535c0-1.45,0.271-2.808,0.815-4.076c0.543-1.268,1.286-2.374,2.229-3.315c0.941-0.942,2.047-1.685,3.315-2.229 C7.727,0.372,9.085,0.1,10.535,0.1s2.808,0.271,4.076,0.815c1.269,0.543,2.374,1.286,3.315,2.229 c0.94,0.941,1.685,2.047,2.229,3.315c0.543,1.268,0.814,2.626,0.814,4.076c0,0.508-0.035,1.01-0.109,1.509 c-0.071,0.498-0.177,0.982-0.311,1.453c-0.138,0.47-0.306,0.924-0.504,1.358c-0.198,0.434-0.428,0.851-0.681,1.25l7.88,7.853 c0.221,0.219,0.381,0.471,0.491,0.762c0.108,0.291,0.163,0.586,0.163,0.883c0,0.298-0.055,0.595-0.163,0.884 c-0.11,0.291-0.271,0.543-0.491,0.76c-0.106,0.109-0.227,0.206-0.351,0.287c-0.127,0.08-0.26,0.149-0.395,0.204 c-0.137,0.054-0.275,0.095-0.422,0.124c-0.145,0.025-0.29,0.039-0.435,0.039s-0.291-0.014-0.436-0.039 c-0.146-0.029-0.291-0.07-0.434-0.124c-0.146-0.055-0.281-0.124-0.408-0.204c-0.127-0.081-0.244-0.178-0.354-0.287l-7.853-7.881 c-0.398,0.255-0.816,0.483-1.25,0.681c-0.435,0.2-0.888,0.367-1.359,0.505c-0.471,0.136-0.956,0.238-1.454,0.312 c-0.499,0.072-1,0.107-1.509,0.107c-1.448,0-2.807-0.271-4.076-0.814c-1.268-0.543-2.373-1.288-3.314-2.229 c-0.943-0.942-1.685-2.048-2.229-3.315c-0.543-1.268-0.815-2.626-0.815-4.076H0.1z M3.579,10.535c0,0.961,0.182,1.862,0.544,2.704 c0.362,0.844,0.86,1.581,1.494,2.215c0.634,0.635,1.372,1.131,2.215,1.493c0.841,0.363,1.742,0.545,2.703,0.545 s1.862-0.182,2.704-0.545c0.844-0.362,1.581-0.858,2.214-1.493c0.635-0.634,1.132-1.372,1.494-2.215 c0.363-0.841,0.545-1.743,0.545-2.704s-0.182-1.862-0.545-2.703c-0.362-0.843-0.859-1.582-1.494-2.215 c-0.633-0.634-1.371-1.132-2.214-1.494c-0.841-0.362-1.743-0.544-2.704-0.544S8.673,3.76,7.832,4.123 C6.989,4.485,6.25,4.983,5.617,5.617S4.485,6.989,4.123,7.832C3.76,8.673,3.579,9.574,3.579,10.535z' id='path2990' style='fill:%23555;fill-opacity:1'/%3E%3C/g%3E%3C/svg%3E\");background-size:18px;background-position:2px 6px;background-repeat:no-repeat;border:none}.baSearchInput{position:absolute;top:0;left:32px;height:28px;width:100%;border:none;font-size:12pt}.htmlSearchBounds{position:relative;top:0;left:40px;width:50%}.baSearchToggle{position:absolute;top:0;left:0;width:32px;height:32px;background-image:url(\"data:image/svg+xml,%3Csvg version='1.1' xmlns='http://www.w3.org/2000/svg' x='0px' y='0px' viewBox='0 0 1000 1000' enable-background='new 0 0 1000 1000' xml:space='preserve'%3E%3Cg%3E%3Cpath d='M18.1,232.2l452.4,581.9c15.1,19.5,44.5,19.5,59.7,0L982,232.2c19.3-24.8,1.5-60.9-29.9-60.9H47.9C16.4,171.2-1.3,207.4,18.1,232.2z'/%3E%3C/g%3E%3C/svg%3E%0A\");background-size:12px;background-position:12px;background-repeat:no-repeat;border:none}.baSearchInput:focus{outline:none}.baSearchDropdownTarget{position:absolute;top:-10px;left:-10px;width:42px;height:42px;z-index:3}.baSearchDropdownText{position:absolute;top:8px;left:37px}.baSearchDropdownImgLoc{position:absolute;top:6px;left:4px;width:24px;height:26px;background-image:url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'%3E%3Cpath fill='%236F6F6F' d='M7.4688 0C5.3586 0 3 .8459 3 3.0469V12l4.5 4 4.5-4V3.047C12 .8459 9.5797 0 7.4687 0zM11 11.5508L7.5 14.662 4 11.5508v-8.504C4 1.0577 7.1138 1 7.4688 1 8.7803 1 11 1.4312 11 3.0469v8.5039zM7.5 3C6.1193 3 5 4.1193 5 5.5S6.1193 8 7.5 8 10 6.8807 10 5.5 8.8807 3 7.5 3zm0 4.125c-.896 0-1.625-.729-1.625-1.625 0-.8961.729-1.625 1.625-1.625s1.625.7289 1.625 1.625c0 .896-.729 1.625-1.625 1.625z'/%3E%3C/svg%3E\");background-size:24px;background-repeat:no-repeat}.baSearchDropdownImgBdy{position:absolute;top:6px;left:4px;width:24px;height:24px;background-image:url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'%3E%3Cpath fill='%236F6F6F' d='M2 16H1V1h1v15zM15 .5h-1v7h1v-7zm0 .5V0H1v1h14zm-5 6.4928V8h5V7h-4.5432M3.445 15.8799V15H1v1h2.2299m8.5968-8.9816h-.9945l-.112.1134c-.1064.1133-.375.4022-.4073.4598-.1172.21-.1445.5303-.1787 1.0361-.0117.168-.0628.9791-.1039 1.0621-.2607.3682-.1006.8613.0166 1.2237a1.806 1.806 0 0 1 .0264.078c-.0977.0157-.1816.047-.252.0929l-.0605-.0127c-.0068-.002-.7373-.1768-1.3828-.1768-.4082 0-.6934.0674-.876.21-.3232.2548-.501.3945-.5195.6513-.0166.2373.1289.3887.2558.5205l.0899.0957c.2217.2412.33.545.2617.7393-.0791.2275-.417.3135-.6113.3437a1.6306 1.6306 0 0 1-.2725.0235c-.3242 0-.5664-.1084-.8525-.2354-.3399-.1513-.9566-.3222-1.5338-.3398-.3095 0-.9385.25-1.0361.7265-.043.2042-.0918.5948.0596.8975.0039.0381.2027.2861-.7915 1.3555L2.4448 16h1.0748c.5275-.638.8057-1.2883.5453-1.815-.0214-.044-.04-.1885-.0127-.3555.0342-.042.2041-.124.255-.125.4072.0127.9077.1308 1.2241.2705.3193.1426.6807.3027 1.1748.3027.123 0 .2549-.0098.3975-.0312.8203-.13 1.128-.546 1.2422-.873.168-.4815.0029-1.0724-.4297-1.544l-.0176-.0186c.0322-.0254.0664-.0517.0996-.0781.001 0 .0664-.039.3408-.039.3545 0 .8496.0624 1.2334.1552.1338.0322.2373.0527.336.0527.162 0 .288-.0556.3379-.121l.1445.0038c.1816 0 .3262-.0683.4297-.203.2011-.2589.0976-.5772-.0127-.917-.0957-.291-.1358-.4678-.126-.5108.1611-.2246.2103-.8912.2513-1.484.0127-.1826.043-.6093.0752-.6826a.309.309 0 0 1 .0303-.039h2.8057v-.8008l-2.0175-.129z'/%3E%3C/svg%3E\");background-size:24px;background-repeat:no-repeat}.baSearchDropdownMenu{position:absolute;top:27px;left:6px;min-width:260px;margin:0;list-style:none;padding-left:0;z-index:4;display:none}.baSearchDropdownMenu.baSearchMenuIsVisible{display:block}.baSearchDropdownMenu li{padding:5px 10px}ul.baSearchDropdownMenu li{position:relative;height:30px;padding-top:9px;padding-bottom:0;z-index:4}.lightSuggestionOuter,.baSearchSuggestionsOuter{position:absolute;top:30px;left:0px;min-width:210px;height:auto;min-height:41px;overflow-y:none;max-height:0px;transition-property:all;transition-duration:.5s;transition-timing-function:cubic-bezier(0, 1, 0.5, 1);font-family:arial;font-size:10pt;z-index:4;overflow:none;display:none}.baSearchSuggestionsOuter{width:210px;max-width:210px;}.lightSuggestionOuter{width:100%;max-width:100%;}ul.baSearchSuggestionsUl{padding-inline-start:12px;margin-block-start:8px;margin-block-end:6px;width:calc(100% - 14px)}ul.baSearchSuggestionsUl li{position:relative;display:flex;flex-direction:row;align-items:center;padding-top:4px;padding-left:1px;padding-bottom:4px;font-size:9.5pt;list-style:none;z-index:4}.baSearchSuggestionNoSub{font-size:11.5pt;}.baSearchStdGeographyInfo{font-size:8.5pt;padding-top:4px;}.baSearchStdGeographyName{font-size:11.5pt}calcite-input::part(badarkinput)::placeholder{opacity:1;}calcite-input::part(badarkinput):-ms-input-placeholder{}calcite-input::part(badarkinput)::-ms-input-placeholder{}.baSearchOuter{position:relative;width:100%;height:32px;display:flex;justify-content:left;align-items:center;}.arcgisBaSearchDropdownChooser{position:relative;width:30px;height:32px;z-index:5}.arcgisBaSearchInput{flex-grow:1;height:32px;z-index:1;}.arcgisBaSearchInput>input{left:1px}.arcgisBaSearchNoDropdown{display:none}";

const ArcgisBaSearch = class {
  //
  // _localeSettings: LocaleSettings = {
  //   language: 'en-US',
  //   country: 'US',
  //   location: '-117.196,34.056',
  //   geocodeOutFields: 'Subregion,Region,PlaceName,Match_addr,Country,Addr_type,City,Place_addr,Phone,URL'
  // }
  constructor(hostRef) {
    (0,_index_4e647411_js__WEBPACK_IMPORTED_MODULE_3__.r)(this, hostRef);
    this.searchResults = (0,_index_4e647411_js__WEBPACK_IMPORTED_MODULE_3__.c)(this, "searchResults", 6);
    this.searchCleared = (0,_index_4e647411_js__WEBPACK_IMPORTED_MODULE_3__.c)(this, "searchCleared", 7);
    this.geocoderClient = GeocoderClient;
    this.baSearchKeyTimer = null;
    this.suggestionTimer = null;
    this._lastInputValue = '';
    this._openFirst = false;
    this._hasSetEnv = false;
    this._verboseLogging = true;
    this._searchTypeConv = ['all', 'address', 'boundary'];
    this._idPrefix = 'arcgis-ba-search-';
    this._idPrefixInput = 'ba-search-input-';
    this._idPrefixDropDown = 'ba-search-drop-';
    this._idPrefixDropLoc = 'ba-search-drop-loc-';
    this._idPrefixDropAll = 'ba-search-drop-all-';
    this._idPrefixDropBdy = 'ba-search-drop-bdy-';
    this._idPrefixDropGroup = 'ba-search-drop-group-';
    this._idPrefixSuggest = 'ba-search-suggest-';
    this._geographyActiveLevels = [];
    this._dbg = false;
    this._searchScopeDropDownSelected = false;
    this.stSearchScope = 'all';
    this.searchQuery = null;
    this.suggestionResults = { location: [], boundary: [] }; // contains location, STD GEO suggestion, or both query results
    this.baseConfig = new _base_util_b7db69f0_js__WEBPACK_IMPORTED_MODULE_4__.B('search', this, this.onUpdateUI);
    _ElementIds_a2c40592_js__WEBPACK_IMPORTED_MODULE_2__.A.announceVersion();
    this.stSearchScope = 'all';
    this._onChangeQueue = {};
    if (this._dbg) {
      console.log('%c SEARCH constructor', 'color:orange;font-size:11pt');
    }
    // // Use passed in langCode if set
    // if (this.langCode) {
    //   this._base._localeSettings.language = this.langCode;
    // }
    this.langCode = this.langCode || 'en-us';
    _ElementIds_a2c40592_js__WEBPACK_IMPORTED_MODULE_2__.B._initialize(this.langCode);
    this.setLocaleStrings();
    this.sourceCountry = this.sourceCountry || 'US';
    this.stSearchScope = 'all';
    this.baseConfig.updateLocaleSettings({ language: this.langCode, country: this.sourceCountry });
    if (this.config) {
      const cfg = JSON.parse(this.config);
      this.baseConfig.updateConfig(cfg, null);
      if (cfg?.selectedGeographyLevels && cfg?.selectedGeographyLevels.length > 0) {
        this.setActiveLevels(cfg.selectedGeographyLevels, true);
      }
    }
    this._onChangeQueue = {};
  }
  //
  // Update Props/States and base config when the component config changes
  onConfigChange(newConfig) {
    // Logz.show("%lg", "arcgis-ba-search Config has changed:", newConfig, oldConfig)
    if (this._dbg) {
      console.log('%c SEARCH configChange', 'color:yellow;font-size:11pt');
    }
    if (this.baseConfig) {
      if (newConfig && _ElementIds_a2c40592_js__WEBPACK_IMPORTED_MODULE_2__.A.hasText(newConfig)) {
        const newCfg = JSON.parse(newConfig);
        if (this._dbg) {
          console.log('%c ...SEARCH config changed=', 'color:yellow;font-size:11pt', newCfg);
        }
        //
        // COLORS:
        // define a temp color object so that we update the 'colors' Prop one time
        this.baseConfig.updateConfig(newCfg, null);
        if (this.baseConfig?.config?.selectedGeographyLevels && this.baseConfig?.config?.selectedGeographyLevels.length > 0) {
          this.setActiveLevels(this.baseConfig.config.selectedGeographyLevels);
        }
        this.syncSearchScopeFromConfig(true);
      }
    }
  }
  onLocaleSettingsChanged() {
    this.getFilteredGeographyLevels();
  }
  parseGeographyFlag(flag) {
    return (typeof flag != undefined && _ElementIds_a2c40592_js__WEBPACK_IMPORTED_MODULE_2__.A.hasText(flag) && flag.trim().toLowerCase() == 'true');
  }
  onNoGeographyChanged() {
    this.stNoGeography = this.parseGeographyFlag(this.nogeography);
    if (this.stNoGeography === false) {
      this.stSearchScope = 'all'; // default restored
    }
  }
  onMaxSuggestionHeightChanged() {
    this.stMaxSuggestionHeight = (typeof this.maxsuggestionheight != undefined && _ElementIds_a2c40592_js__WEBPACK_IMPORTED_MODULE_2__.A.hasText(this.maxsuggestionheight)) ? parseInt(this.maxsuggestionheight) : 300;
  }
  // @@@@@@
  // @Watch('theme') onThemeChanged() {
  //   if (typeof this.theme != undefined && ACLUtils.hasText(this.theme)) {
  //     const t = this.theme.trim().toLowerCase()
  //     this.stColorTheme = (t == 'dark') ? 'dark' : 'light'
  //     this.nogeography = this.stNoGeography.toString()
  //   } else { this.stColorTheme = 'light' }
  // }
  onEnvChanged() {
    this.stEnv = this.env;
    _GEClient_f71049f8_js__WEBPACK_IMPORTED_MODULE_1__.E.setEnvironment(this.env);
    if (this.baseConfig) {
      // updates config and sub-component configs
      this.baseConfig.updateConfig({ env: this.env }, null);
    }
  }
  onTokenChanged() {
    this.stToken = this.token;
    if (this.baseConfig) {
      // updates config and sub-component configs
      this.baseConfig.updateConfig({ token: this.token }, null);
    }
  }
  onUsernameChanged() {
    this.stUsername = this.username;
    if (this.baseConfig) {
      // updates config and sub-component configs
      this.baseConfig.updateConfig({ username: this.username }, null);
    }
  }
  onLangCodeChanged() {
    this.stLangCode = this.langCode;
    if (this.baseConfig) {
      // updates config and sub-component configs
      this.baseConfig.updateConfig({ langCode: this.langCode }, null);
    }
  }
  onGeoenrichmentUrlChanged() {
    this.stGeoenrichmentUrl = this.geoenrichmentUrl;
    if (this.baseConfig) {
      // updates config and sub-component configs
      this.baseConfig.updateConfig({ geoenrichmentUrl: this.geoenrichmentUrl }, null);
    }
  }
  onThemeChanged() {
    this.stTheme = this.theme;
    if (this.baseConfig) {
      this.baseConfig.setTheme(this.theme);
    }
  }
  onCountryChanged() {
    this.stSourceCountry = this.sourceCountry;
    if (this.baseConfig) {
      // updates config and sub-component configs
      this.baseConfig.updateConfig({ sourceCountry: this.sourceCountry }, null);
    }
  }
  onSearchTextChanged() {
    this.hideDropdown();
    this.hideSuggestions(null);
    const inp = _ElementIds_a2c40592_js__WEBPACK_IMPORTED_MODULE_2__.A.queryElementById.call(this, this._inputId);
    if (inp && this.currentSearchText) { // @ts-ignore
      inp.value = this.currentSearchText;
    }
  }
  onModeChanged() {
    this.stMode = this.mode;
  }
  onSugliteChanged() {
    this.stSuglite = false;
    if (typeof this.suglite !== undefined && (this.suglite === 'true')) {
      this.stSuglite = true;
    }
  }
  onActiveLevelsChanged() {
    // should be an array of strings
    this.stActiveLevels = JSON.parse(this.activeLevels);
  }
  onStandardGeographyItemSelected(event) {
    this._onSelectedGeographyItem(event.detail.item);
    this.hideSuggestions(null);
    this._clearSearchText();
    this.focusInput();
  }
  onStandardGeographyItemChecked(event) {
    if (event.detail.itemsType == 'other') {
      this.hideSuggestions(null);
      this._clearSearchText();
      this.focusInput();
    }
  }
  async searchIsEmpty() {
    const searchInput = _ElementIds_a2c40592_js__WEBPACK_IMPORTED_MODULE_2__.A.queryElementById.call(this, this._inputId);
    if (!searchInput) {
      return false;
    }
    const inputElem = _ElementIds_a2c40592_js__WEBPACK_IMPORTED_MODULE_2__.A.queryElement.call(self, 'input', searchInput);
    if (!inputElem) {
      return false;
    }
    const str = inputElem.value;
    return !(str && _ElementIds_a2c40592_js__WEBPACK_IMPORTED_MODULE_2__.A.hasText(str));
  }
  /**
   * getSearchResults
   *    Returns the latest selected suggestion info and related geometry
   */
  async getSearchResults() {
    return this._searchResponseItemData;
  }
  async getConfig() {
    const myCfg = this.baseConfig;
    return myCfg;
  }
  async setLocale(options) {
    if (!options)
      return;
    if (typeof options.language != undefined)
      this.baseConfig.updateLocaleSettings({ language: options.language });
    if (typeof options.country != undefined)
      this.baseConfig.updateLocaleSettings({ country: options.country });
    if (typeof options.location != undefined)
      this.baseConfig.updateLocaleSettings({ location: options.location });
    if (typeof options.geocodeOutFields != undefined)
      this.baseConfig.updateLocaleSettings({ geocodeOutFields: options.geocodeOutFields });
    this.onLocaleSettingsChanged();
  }
  /**
   * getGeographyLevels
   *    Returns the geography level names for the country
   */
  async getGeographyLevels() {
    let list = [];
    let arr = await this.getFilteredGeographyLevels();
    if (arr && arr.length > 0) {
      arr.forEach((item) => {
        list.push(item.name);
      });
    }
    return list;
  }
  /**
   * setActiveLevels
   *    Sets the geography levels that will be requested/displayed
   *    This accepts geography level 'names' but then tracks the
   *    level using the level 'id' internally
   *
   *    Passing 'names' with empty array will enable all levels
   *    Example: ['US.States','US.ZIP5', 'US.Places']
   *    The example array will only show those 3 levels
   */
  async setActiveLevels(names, skipUI = false) {
    if (!skipUI)
      this.resetUI(true, false);
    if (names) {
      if (names.length > 0) {
        this.stActiveLevels = [...names];
        this._geographyActiveLevels = [];
        for (let ii = 0; ii < names.length; ii++) {
          let id = await this.levelNameIsValid(names[ii]);
          if (id) {
            this._geographyActiveLevels.push(id);
          }
        }
        // display updated results using new levels
        if (!skipUI)
          this.populateSuggestions();
      }
      else {
        this._geographyActiveLevels = [];
      }
    }
  }
  async setMapView(mapView) {
  }
  async setColors(colors) {
    this.colors = colors;
    this.baseConfig.syncConfigFromProps();
  }
  async setTheme(theme) {
    this.baseConfig.setTheme(theme);
  }
  /**
   * Sets host callback for property change notifications
   * @param callback  - function supplied by host after component is instantiated
   * @param context   - object reference that is returned in the callback (to the host)
   *
   * Callback data format:
   *    {
   *      <property name>: <value>,
   *      <other prop name: value,
   *      ...
   *    }
   */
  async onPropChange(callback, context) {
    this._onChangeCallback = { fn: callback, ctx: context };
  }
  // BaseUtil config-changed render callback
  onUpdateUI() {
    this.applyStyles();
  }
  applyStyles() {
    if (this.baseConfig?.config?.colors && Object.keys(this.baseConfig.config.colors).length > 0) {
      const c = this.baseConfig.config.colors;
      const searchOuter = _ElementIds_a2c40592_js__WEBPACK_IMPORTED_MODULE_2__.A.queryElement.call(this, 'div.baSearchOuter');
      if (searchOuter && 'style' in searchOuter) {
        searchOuter.style.setProperty("--calcite-ui-border-input", 'unset');
        searchOuter.style.setProperty("--calcite-ui-foreground-1", c.foreground);
        searchOuter.style.setProperty("--calcite-ui-brand", c.brand);
      }
      if (searchOuter) {
        const dropdown = searchOuter.querySelectorAll("calcite-dropdown");
        if (dropdown && 'style' in dropdown) {
          dropdown.style.setProperty("height", '32px');
        }
        searchOuter.querySelectorAll("calcite-button").forEach(node => {
          if (node.shadowRoot) {
            let button = node.shadowRoot.querySelector("button");
            // console.log(button);
            if (button && 'style' in button) {
              button.style.setProperty("height", '32px');
              // (button as HTMLElement).style.setProperty("--calcite-ui-foreground-3", c.brand);
              // (button as HTMLElement).style.setProperty("--calcite-ui-foreground-2", c.brandHover);
              // (button as HTMLElement).style.setProperty("--calcite-ui-foreground-1", c.brandPress);
            }
          }
        });
        // searchOuter.querySelectorAll("calcite-input").forEach(node => {
        //   if (node.shadowRoot) {
        //       let input = node.shadowRoot.querySelector("input");
        //       // console.log(input)
        //       if (input && 'style' in input) {
        //         (input as HTMLElement).style.setProperty("--calcite-ui-border-input", 'unset');
        //         (input as HTMLElement).style.setProperty("--calcite-ui-foreground-1", c.foreground);
        //         (input as HTMLElement).style.setProperty("--calcite-ui-brand", c.brand);
        //       }
        //   }
        // })
        // searchOuter.querySelectorAll("calcite-input").forEach(node => {
        //   if (node.shadowRoot) {
        //       let input = node.shadowRoot.querySelector("input");
        //       // console.log(input)
        //       if (input && 'style' in input) {
        //         (input as HTMLElement).style.setProperty("--calcite-ui-border-input", 'unset');
        //         (input as HTMLElement).style.setProperty("--calcite-ui-foreground-1", c.foreground);
        //         (input as HTMLElement).style.setProperty("--calcite-ui-brand", c.brand);
        //       }
        //   }
        // })
        // calcite-list
      }
    }
  }
  syncSearchScopeFromConfig(allowReset) {
    if (this._dbg) {
      console.log('%c SEARCH syncSearchScope', 'color:orange;font-size:11pt', this.baseConfig.config);
    }
    // Check for search type and apply
    let changed = false;
    const searchType = this.baseConfig.config.baSearchType;
    if (searchType) {
      if (searchType == 1) {
        changed = this.stSearchScope != 'address';
        this.stSearchScope = 'address';
      }
      else if (searchType == 2) {
        changed = this.stSearchScope != 'boundary';
        this.stSearchScope = 'boundary';
      }
      else {
        changed = this.stSearchScope != 'all';
        this.stSearchScope = 'all';
      }
      if (this._dbg) {
        console.log('%c SEARCH searchScope is now:', 'color:orange;font-size:11pt', this.stSearchScope);
      }
    }
    if (changed && allowReset) {
      this.hideSuggestions(null);
      this._clearSearchText();
      this.focusInput();
    }
  }
  _debug(...items) {
    if (!this._verboseLogging) {
      return;
    }
    if (items)
      return; // remove this
    // Logz.show('%y', ...items)
  }
  /**
   * Filters out multiple rapid events of the same type.  The callback
   * function will be called if no new events have happened during the
   * 'wait' time.
   * @param callback - your function to call when the events have settled
   * @param wait     - milliseconds delay (ex: 250)
   */
  _debounce2(callback, wait) {
    const self = this;
    const delayedCall = function () {
      self._debounceTimer = null;
      callback.apply(self);
    };
    // everytime _debounce2 is called we kill the previous timer
    if (self._debounceTimer)
      clearTimeout(self._debounceTimer);
    self._debounceTimer = setTimeout(delayedCall, wait);
  }
  _onFilteredPropChanged() {
    if (this._onChangeCallback)
      this._onChangeCallback.fn(this._onChangeCallback.ctx, this._onChangeQueue);
    // clear queue
    this._onChangeQueue = {};
  }
  // ***********************************************************************
  // Set locale string
  // **********************************************************************
  setLocaleStrings() {
    _ElementIds_a2c40592_js__WEBPACK_IMPORTED_MODULE_2__.B._initialize(this.langCode);
    this.labels = {
      dropdownLocation: _ElementIds_a2c40592_js__WEBPACK_IMPORTED_MODULE_2__.B.i18n('address-location-or-place'),
      dropdownBoundary: _ElementIds_a2c40592_js__WEBPACK_IMPORTED_MODULE_2__.B.i18n('boundary-name'),
      dropdownAll: _ElementIds_a2c40592_js__WEBPACK_IMPORTED_MODULE_2__.B.i18n('dropdown-all'),
      watermarkAll: _ElementIds_a2c40592_js__WEBPACK_IMPORTED_MODULE_2__.B.i18n('all-placeholder'),
      watermarkLocation: _ElementIds_a2c40592_js__WEBPACK_IMPORTED_MODULE_2__.B.i18n('enter-address-loc-or-place'),
      watermarkBoundary: _ElementIds_a2c40592_js__WEBPACK_IMPORTED_MODULE_2__.B.i18n('enter-boundary-name')
    };
    this.showSearch = _ElementIds_a2c40592_js__WEBPACK_IMPORTED_MODULE_2__.B.i18n('show-search');
    this.searchPlaceholder = _ElementIds_a2c40592_js__WEBPACK_IMPORTED_MODULE_2__.B.i18n('search-placeholder');
    this.searchLabel = _ElementIds_a2c40592_js__WEBPACK_IMPORTED_MODULE_2__.B.i18n('search-label');
    this.searchAll = _ElementIds_a2c40592_js__WEBPACK_IMPORTED_MODULE_2__.B.i18n('dropdown-all');
    this.searchAllPlaceholder = _ElementIds_a2c40592_js__WEBPACK_IMPORTED_MODULE_2__.B.i18n('all-placeholder');
    this.searchPlaceholderShort = _ElementIds_a2c40592_js__WEBPACK_IMPORTED_MODULE_2__.B.i18n('search-placeholder-short');
    this.searchEnterBoundary = _ElementIds_a2c40592_js__WEBPACK_IMPORTED_MODULE_2__.B.i18n('search-enter-boundary');
    this.searchBoundary = _ElementIds_a2c40592_js__WEBPACK_IMPORTED_MODULE_2__.B.i18n('search-boundary');
  }
  /**
   * Function called by this component internally when a Prop changes
   * @param name  - of Prop
   * @param value - value after change
   */
  _onPropChanged(name, value) {
    const self = this;
    // Add name/value to queue
    // Subsequent calls with the same name/value just updates
    // the value until the callback clears the queue
    this._onChangeQueue[name] = value;
    this._debounce2(() => { self._onFilteredPropChanged.call(self); }, 250);
  }
  _clearSearchText() {
    const inp = _ElementIds_a2c40592_js__WEBPACK_IMPORTED_MODULE_2__.A.queryElementById.call(this, this._inputId);
    inp.value = '';
    //this._onPropChanged('searchCleared', '')
  }
  async onClickLocationSuggestionItem(item) {
    const self = this;
    await this.geocoderClient.geocode(item.text, {
      magicKey: item.magicKey,
      outFields: this.baseConfig._localeSettings.geocodeOutFields
    }).then((results) => {
      if (results) {
        self._searchResponseItemData = {
          context: self,
          type: 'location',
          mode: self.stMode,
          name: results.candidates[0].attributes.PlaceName,
          address: results.candidates[0].attributes.Place_addr,
          location: { lon: results.candidates[0].location.x, lat: results.candidates[0].location.y }
        };
        self.searchResults.emit(self._searchResponseItemData);
        this._onPropChanged('searchResults', self._searchResponseItemData);
        self.resetUI(false);
      }
    })
      .catch((ex) => {
      _ElementIds_a2c40592_js__WEBPACK_IMPORTED_MODULE_2__.L.show('%e', 'arcgis-ba-search Error:', ex);
    });
    this.hideSuggestions(null);
    this._clearSearchText();
    this.focusInput();
  }
  _findGeographyLevel(id) {
    let level;
    if (this._geographyLevels) {
      for (let ii = 0; ii < this._geographyLevels.length; ii++) {
        const l = this._geographyLevels[ii];
        if (l.id === id) {
          level = l;
          break;
        }
      }
    }
    return level;
  }
  _onSelectedGeographyItem(item) {
    const self = this;
    const id = item.id;
    const fullname = item.name;
    if (!this.suggestionResults?.boundary)
      return;
    // Find the search result item using ObjectId
    for (let ii = 0; ii < this.suggestionResults.boundary.length; ii++) {
      let rec = this.suggestionResults.boundary[ii];
      if (rec.attributes && rec.attributes.ObjectId == id) {
        let a = rec.attributes;
        let currentlevel = self._findGeographyLevel(a.DataLayerID);
        const defGen = (currentlevel) ? currentlevel.defaultGeneralization : 0;
        // Get boundary geometry from server
        _GEClient_f71049f8_js__WEBPACK_IMPORTED_MODULE_1__.G.requestStdGeography(a.DataLayerID, a.AreaID, {
          generalizationLevel: defGen,
          returnGeometry: true,
          sourceCountry: self.stSourceCountry || 'US',
          langCode: self.langCode,
          token: self.token
        }).then((result) => {
          if (result && result.length > 0) {
            let geoFeature = result[0];
            self._searchResponseItemData = {
              context: self,
              type: 'geography',
              areaName: rec.attributes.AreaName,
              areaId: rec.attributes.AreaID,
              geometry: geoFeature.geometry.rings,
              mode: self.stMode,
              attributes: a,
              title: fullname
            };
            self.searchResults.emit(self._searchResponseItemData);
            this._onPropChanged('searchResults', self._searchResponseItemData);
            self.resetUI(false);
          }
        }, (err) => {
          _ElementIds_a2c40592_js__WEBPACK_IMPORTED_MODULE_2__.L.show('%e', 'arcgis-ba-search Error ', err);
          if (err)
            throw err;
        });
        break;
      }
    }
  }
  // accepts a level name
  // return:  level id if valid (or undefined)
  async levelNameIsValid(name) {
    if (!name || !_ElementIds_a2c40592_js__WEBPACK_IMPORTED_MODULE_2__.A.hasText(name))
      return undefined;
    let arr = await this.getFilteredGeographyLevels();
    for (let ii = 0; ii < arr.length; ii++) {
      if (arr[ii].name == name)
        return arr[ii].id;
    }
    return undefined;
  }
  focusInput() {
    const calInputElem = _ElementIds_a2c40592_js__WEBPACK_IMPORTED_MODULE_2__.A.queryElementById.call(this, this._inputId);
    _ElementIds_a2c40592_js__WEBPACK_IMPORTED_MODULE_2__.A.queryElement.call(this, 'input', calInputElem).focus();
  }
  _loadInstances() {
    if (!this._instanceId)
      this._instanceId = _ElementIds_a2c40592_js__WEBPACK_IMPORTED_MODULE_2__.E.generateId(this._idPrefix).id;
    if (!this._inputId)
      this._inputId = _ElementIds_a2c40592_js__WEBPACK_IMPORTED_MODULE_2__.E.generateId(this._idPrefixInput).id;
    if (!this._dropLocId)
      this._dropLocId = _ElementIds_a2c40592_js__WEBPACK_IMPORTED_MODULE_2__.E.generateId(this._idPrefixDropLoc).id;
    if (!this._dropAllid)
      this._dropAllid = _ElementIds_a2c40592_js__WEBPACK_IMPORTED_MODULE_2__.E.generateId(this._idPrefixDropAll).id;
    if (!this._dropBdyId)
      this._dropBdyId = _ElementIds_a2c40592_js__WEBPACK_IMPORTED_MODULE_2__.E.generateId(this._idPrefixDropBdy).id;
    if (!this._dropGroupId)
      this._dropGroupId = _ElementIds_a2c40592_js__WEBPACK_IMPORTED_MODULE_2__.E.generateId(this._idPrefixDropGroup).id;
    if (!this._suggestId)
      this._suggestId = _ElementIds_a2c40592_js__WEBPACK_IMPORTED_MODULE_2__.E.generateId(this._idPrefixSuggest).id;
    if (!this._dropdownId)
      this._dropdownId = _ElementIds_a2c40592_js__WEBPACK_IMPORTED_MODULE_2__.E.generateId(this._idPrefixDropDown).id;
  }
  getCountry() {
    return this.stSourceCountry || this.baseConfig._localeSettings.country;
  }
  /*
   * Geography level are normally displayed using their 'names' in the UI.  Requests use
   * the level IDs.  Therefore stActiveLevels is an array of level names, and
   */
  async getFilteredGeographyLevels() {
    let self = this;
    let hasActiveList = (self.stActiveLevels && self.stActiveLevels.length > 0);
    // look for cached values - if we have active level names from the user, always fetch levels and match to those
    if (hasActiveList || !self._geographyLevels || self._geographyLevels.length <= 0 || self._geographyLevelsSource != self.getCountry()) {
      // Request new levels for this country
      let response = await _GEClient_f71049f8_js__WEBPACK_IMPORTED_MODULE_1__.G.getStandardGeographyLevels(self.getCountry(), self.langCode);
      if (response) {
        if (response && response.levels && response.levels.length > 0) {
          // create our level objects list - filtered by user (if applies)
          self._geographyLevels = [];
          for (let ii = 0; ii < response.levels.length; ii++) {
            let lev = response.levels[ii];
            // if the user passed us a list of level names, filter by those
            let active = !hasActiveList || (self.stActiveLevels && self.stActiveLevels.length > 0 && self.stActiveLevels.includes(lev.name));
            if (active && lev && lev.id && lev.name && _ElementIds_a2c40592_js__WEBPACK_IMPORTED_MODULE_2__.A.hasText(lev.id) && _ElementIds_a2c40592_js__WEBPACK_IMPORTED_MODULE_2__.A.hasText(lev.name)) {
              self._geographyLevels.push({ id: lev.id, name: lev.name, show: true, defaultGeneralization: lev.defaultGeneralizationLevel });
            }
          }
          self._geographyLevelsSource = self.getCountry();
        }
      }
    }
    return self._geographyLevels;
  }
  // Stencil lifecycle - called once after component is first connected to the DOM
  async componentWillLoad() {
    this.stNoGeography = this.parseGeographyFlag(this.nogeography);
    this.stMaxSuggestionHeight = (typeof this.maxsuggestionheight != undefined && _ElementIds_a2c40592_js__WEBPACK_IMPORTED_MODULE_2__.A.hasText(this.maxsuggestionheight)) ? parseInt(this.maxsuggestionheight) : 300;
    // if (typeof this.theme != undefined && ACLUtils.hasText(this.theme)) {
    //   const t = this.theme.trim().toLowerCase()
    //   this.stColorTheme = (t == 'dark') ? 'dark' : 'light'
    //   this.nogeography = this.stNoGeography.toString()
    // }
    // if (typeof this.theme != undefined && ACLUtils.hasText(this.theme)) {
    //   const t = this.theme.trim().toLowerCase()
    //   this.stColorTheme = (t == 'dark') ? 'dark' : 'light'
    //   this.nogeography = this.stNoGeography.toString()
    // } else { this.stColorTheme = 'light' }
    if (this.activeLevels && _ElementIds_a2c40592_js__WEBPACK_IMPORTED_MODULE_2__.A.hasText(this.activeLevels)) {
      this.stActiveLevels = JSON.parse(this.activeLevels);
    }
    if (this.sourceCountry && _ElementIds_a2c40592_js__WEBPACK_IMPORTED_MODULE_2__.A.hasText(this.sourceCountry)) {
      this.stSourceCountry = this.sourceCountry;
    }
    // Set Environment BEFORE Geocoder is instantiated to ensure correct geocode URL is used
    if (!this._hasSetEnv && this.env) {
      this._hasSetEnv = true;
      this.stEnv = this.env;
      _GEClient_f71049f8_js__WEBPACK_IMPORTED_MODULE_1__.E.setEnvironment(this.env);
    }
    // Set if GeoenrichmentUrl was optionally passed in
    if (this.geoenrichmentUrl) {
      _GEClient_f71049f8_js__WEBPACK_IMPORTED_MODULE_1__.E.setGeoenrichmentUrl(this.geoenrichmentUrl);
    }
    // Set if GeocodeUrl was optionally passed in
    if (this.geocodeUrl) {
      _GEClient_f71049f8_js__WEBPACK_IMPORTED_MODULE_1__.E.setGeocodeUrl(this.geocodeUrl);
    }
    if (this.theme) {
      this.baseConfig.setTheme(this.theme);
    }
    else {
      this.baseConfig.setTheme('light');
    }
    this.nogeography = this.stNoGeography.toString();
    this.geocoderClient = new GeocoderClient(this.token);
    this._loadInstances();
    this.stMode = this.mode;
    this.stSuglite = false;
    if (typeof this.suglite !== undefined && (this.suglite === 'true')) {
      this.stSuglite = true;
    }
    await this.getFilteredGeographyLevels();
  }
  resetUI(keepValue, keepDropdown) {
    if (!keepDropdown)
      this.hideDropdown();
    this.hideSuggestions(null);
    if (!keepValue) {
      const inp = _ElementIds_a2c40592_js__WEBPACK_IMPORTED_MODULE_2__.A.queryElementById.call(this, this._inputId);
      inp.value = '';
    }
  }
  // Stencil lifecycle - called once after component is fully loaded and 1st render occurred
  componentDidLoad() {
    const self = this;
    self._loadInstances();
    self.applyCssAndThemeTo_Search();
    _GEClient_f71049f8_js__WEBPACK_IMPORTED_MODULE_1__.T.setToken(self.username, self.token);
    if (!self.baseConfig._localeSettings.language || self.baseConfig._localeSettings.language.length <= 0 || (self.baseConfig._localeSettings.language !== this.langCode && this.langCode)) {
      self.baseConfig._localeSettings.language = this.langCode || 'en-us'; // reset to default
      _ElementIds_a2c40592_js__WEBPACK_IMPORTED_MODULE_2__.B._initialize(self.baseConfig._localeSettings.language);
      self.setLocaleStrings();
    }
    const searchInput = _ElementIds_a2c40592_js__WEBPACK_IMPORTED_MODULE_2__.A.queryElementById.call(self, self._inputId);
    const inputElem = _ElementIds_a2c40592_js__WEBPACK_IMPORTED_MODULE_2__.A.queryElement.call(self, 'input', searchInput);
    const ddItemAll = _ElementIds_a2c40592_js__WEBPACK_IMPORTED_MODULE_2__.A.queryElementById.call(self, self._dropAllid);
    if (ddItemAll)
      ddItemAll.innerText = self.labels.dropdownAll;
    const ddItemLoc = _ElementIds_a2c40592_js__WEBPACK_IMPORTED_MODULE_2__.A.queryElementById.call(self, self._dropLocId);
    if (ddItemLoc)
      ddItemLoc.innerText = self.labels.dropdownLocation;
    const ddItemBdy = _ElementIds_a2c40592_js__WEBPACK_IMPORTED_MODULE_2__.A.queryElementById.call(self, self._dropBdyId);
    if (ddItemBdy)
      ddItemBdy.innerText = self.labels.dropdownBoundary;
    // Event handlers
    if (searchInput) {
      let label = 'all';
      switch (this.stSearchScope) {
        case ('all'): {
          label = self.labels.watermarkAll;
          break;
        }
        case ('address'): {
          label = self.labels.watermarkLocation;
          break;
        }
        case ('boundary'): {
          label = self.labels.watermarkBoundary;
          break;
        }
      }
      searchInput.setAttribute('placeholder', label);
    }
    function _keyDelay() {
      self.baSearchKeyTimer = null;
      const elem = _ElementIds_a2c40592_js__WEBPACK_IMPORTED_MODULE_2__.A.queryElementById.call(self, self._inputId);
      self._lastInputValue = elem.value;
      self.populateSuggestions();
      // open top accordion
      let acc = _ElementIds_a2c40592_js__WEBPACK_IMPORTED_MODULE_2__.A.queryElement.call(self, 'ba-accordion');
      if (acc) { // @ts-ignore
        acc.openAccordion();
      }
    }
    function _resetInputTimer() {
      const timeout = 1200;
      if (self.baSearchKeyTimer) {
        let t = self.baSearchKeyTimer;
        self.baSearchKeyTimer = null;
        clearTimeout(t);
      }
      self.baSearchKeyTimer = setTimeout(_keyDelay, timeout);
    }
    if (inputElem) {
      inputElem.addEventListener('focusin', () => { self.hideSuggestions(null); });
      inputElem.onchange = () => {
        const inp = _ElementIds_a2c40592_js__WEBPACK_IMPORTED_MODULE_2__.A.queryElementById.call(this, this._inputId);
        const v = inp.value;
        if (this._lastInputValue != v) {
          self.toggleSuggestions();
        }
        this._lastInputValue = v;
      };
      inputElem.onkeydown = (e) => {
        // DO NOT DELETE - Fix for Calcite Issue
        function _ui() {
          if (e.key === 'Backspace' || e.key === 'Delete') {
            e.preventDefault();
            e.stopPropagation();
            const target = e.target;
            if (target?.value && target.value.length > 0 && target.selectionStart != null && target.selectionEnd != null) {
              const start = target.selectionStart;
              const end = target.selectionEnd;
              const newVal = start === end
                ? target.value.slice(0, start - 1) + target.value.slice(start)
                : target.value.slice(0, start) + target.value.slice(end);
              target.value = newVal;
              target.focus();
              if (start === end)
                target.setSelectionRange(start - 1, start - 1);
              else
                target.setSelectionRange(start + 1, start);
            }
            _resetInputTimer();
          }
        }
        setTimeout(_ui, 0);
      };
      inputElem.onkeyup = () => {
        function _ui() {
          self.hideDropdown();
          _resetInputTimer();
        }
        setTimeout(_ui, 0);
      };
    }
    function onOpenDropdown() {
      self.resetUI(false, true);
      // self.showDropdown()
    }
    let elem = _ElementIds_a2c40592_js__WEBPACK_IMPORTED_MODULE_2__.A.queryElementById.call(self, self._dropdownId);
    if (elem)
      elem.addEventListener('calciteDropdownOpen', onOpenDropdown);
    if (self.baseConfig) {
      self.baseConfig.onComponentHasRendered();
    }
    setTimeout(() => {
      self.applyCssAndThemeTo_Suggestions();
    }, 0);
  }
  componentWillRender() {
    const self = this;
    try {
      const cfgType = self.baseConfig.config.baSearchType;
      if (cfgType) {
        const cfgScope = self._searchTypeConv[cfgType];
        if (cfgScope != self.stSearchScope && !self._searchScopeDropDownSelected) {
          const allowReset = true;
          self.syncSearchScopeFromConfig(allowReset);
        }
      }
    }
    catch (ex) {
      console.log('error: search has invalid config baSearchType', ex);
    }
  }
  // Stencil lifecycle - called just after component updates, but not called during first render()
  componentDidUpdate() {
    const self = this;
    if (self.baseConfig) {
      self.baseConfig.onComponentHasRendered();
    }
    /*
    try {
      const cfgType = self.baseConfig.config.baSearchType
      if (cfgType) {
        const cfgScope = self._searchTypeConv[cfgType as number]
        if (cfgScope != self.stSearchScope) {
          const allowReset = true
          self.syncSearchScopeFromConfig(allowReset)
        }
      }
    } catch (ex) {
      console.log('error: search has invalid config baSearchType', ex)
    }*/
  }
  handleSearchScopeSelection(scope) {
    this.stSearchScope = scope;
    this._searchScopeDropDownSelected = true;
    this.suggestionResults = { location: [], boundary: [] };
    this.focusInput();
  }
  handleLocationSelection(e, data) {
    data.context.onClickLocationSuggestionItem(data.item);
    e.preventDefault();
    e.stopPropagation();
    return false;
  }
  renderLocationSuggestions() {
    const self = this;
    const iconStyle = {
      'padding-right': '0',
      'padding-left': '5px'
    };
    if ((self.stSearchScope == 'address' || self.stSearchScope == 'all') && self.suggestionResults?.location && self.suggestionResults.location.length > 0) {
      return ((0,_index_4e647411_js__WEBPACK_IMPORTED_MODULE_3__.h)("calcite-list", null, this.suggestionResults.location.map(item => (0,_index_4e647411_js__WEBPACK_IMPORTED_MODULE_3__.h)("calcite-list-item", { value: item.magicKey, label: item.text, onclick: (e) => self.handleLocationSelection(e, { context: self, item: item }) }, (0,_index_4e647411_js__WEBPACK_IMPORTED_MODULE_3__.h)("calcite-icon", { style: iconStyle, icon: "pin", scale: "s", slot: "content-start" })))));
    }
    else {
      return ((0,_index_4e647411_js__WEBPACK_IMPORTED_MODULE_3__.h)("ul", { class: 'baSearchSuggestionsUl' }));
    }
  }
  renderBoundarySuggestions() {
    const self = this;
    /*  ba-accordion format
     export interface AccordionItem {
     id: string;
     inlineSvgIcon?: string;
     name: string;
     subText?: string;
     usesPin?: boolean;
     isPinned?: boolean;
     usesCheckbox?: boolean;
     isChecked?: boolean;
     }
     */
    if ((self.stSearchScope == 'boundary' || self.stSearchScope == 'all')
      && self.suggestionResults?.boundary
      && self.suggestionResults.boundary.length > 0
      && self.suggestionResults.boundary[0].attributes
      && self.suggestionResults.boundary[0].attributes.DataLayerID) {
      let levels = {};
      // Build the data for the accordion lists
      // Start by capturing all the levels/accordions
      /*
       * levels => index of DataLayer types by name
       *  Each level is an array of records that form the
       *  content of the particular accordion
       */
      let record, levelName;
      // Categorize the results by DataLayerID
      /*
       * level = {
       *    aveScore:<average score for all records in level>,
       *    records: <search result records for the level>
       *  }
       */
      for (let ii = 0; ii < self.suggestionResults.boundary.length; ii++) {
        try {
          record = self.suggestionResults.boundary[ii];
          levelName = record.attributes.DataLayerID;
          if (_ElementIds_a2c40592_js__WEBPACK_IMPORTED_MODULE_2__.A.hasText(levelName)) {
            // create lvl if needed
            if (!levels[levelName]) {
              levels[levelName] = { aveScore: null, records: [] };
            }
            let score = '   Score:' + record.attributes.Score.toString();
            let sub = record.attributes.CountryAbbr + '/' + record.attributes.MajorSubdivisionName + '/' + record.attributes.AreaID + score;
            // add search result record to the level using the ba-accordion's AccordionItem interface
            // once all the records are added to each DataLayerID level, we pass the data to the ba-accordion component
            // that will render the list.
            let rec = {
              id: record.attributes.ObjectId,
              areaId: record.attributes.AreaID,
              name: record.attributes.AreaName,
              major: record.attributes.MajorSubdivisionAbbr,
              subText: sub,
              score: record.attributes.Score,
              isZipcode: record.attributes.DataLayerID.toLowerCase().includes('zip')
            };
            levels[levelName].records.push(rec);
          }
        }
        catch (ex) {
          _ElementIds_a2c40592_js__WEBPACK_IMPORTED_MODULE_2__.L.show("%e", 'arcgis-ba-search error', ex);
        }
      }
      // All the accordions for these results are assigned to a unique group id
      // for toggling open/close behavior
      let groupId = new Date().getTime();
      return self.renderStdGeographyLevelLists(levels, groupId);
    }
  }
  _getAccordionTitle(displayName) {
    let title = displayName;
    if (this._geographyLevelData) {
      for (let ii = 0; ii < this._geographyLevelData.length; ii++) {
        const item = this._geographyLevelData[ii];
        const levelId = item.id;
        if (displayName == levelId && _ElementIds_a2c40592_js__WEBPACK_IMPORTED_MODULE_2__.A.hasText(item.name)) {
          title = item.name;
          break;
        }
      }
    }
    return title;
  }
  renderStdGeographyLevelAccordion(displayName, level, groupId) {
    const self = this;
    if (level.records && level.records.length > 0) {
      // sort this level records by score (descending)
      let sortedRecords = level.records.sort(function (a, b) {
        if (a.score == null)
          return 0;
        if (b.score == null)
          return 1;
        return b.score - a.score;
      });
      // limit level records to a fixed maximum count
      const accordionRecordLimit = 100;
      const limitedRecords = sortedRecords.slice(0, accordionRecordLimit);
      // Build the accordion content
      //
      // export interface AccordionItem {
      //   id: string;
      //   inlineSvgIcon?: string;
      //   name: string;
      //   subText?: string;
      //   usesPin?: boolean;
      //   isPinned?: boolean;
      //   usesCheckbox?: boolean;
      //   isChecked?: boolean;
      // }
      let arr = [];
      limitedRecords.forEach(function (item) {
        const suffix = ', ' + item.major;
        const hasMajor = (item.name.includes(suffix));
        const strMajor = (hasMajor) ? '' : suffix;
        const specialNaming = (item.isZipcode && (self.sourceCountry == 'US' || self.sourceCountry === 'PR'));
        const isNonUS = !(self.sourceCountry == 'US' || self.sourceCountry === 'PR');
        // For US/PR zip codes AND rest of world we do "ID (name)", else for US/PR (non zipcode) we do "name, major"
        const name = (specialNaming || isNonUS) ? item.areaId + ' (' + item.name + ')' : item.name + strMajor;
        arr.push({
          id: item.id,
          name: name,
          subText: (item.subText) || '',
          score: item.score,
          icon: 'polygon-area'
        });
      });
      const content = JSON.stringify(arr);
      const suggestLite = (typeof this.stSuglite !== undefined && this.stSuglite !== false) ? 'true' : 'false';
      const title = this._getAccordionTitle(displayName);
      // create an accordion for this level with all records
      return ((0,_index_4e647411_js__WEBPACK_IMPORTED_MODULE_3__.h)("ba-accordion", { suglite: suggestLite, groupid: groupId, calciteicon: 'polygon-area', displayname: title, content: content }));
    }
  }
  calculateLevelAverageScores(levels) {
    // This will assign an 'aveScore' value for every Hierarchy Level.
    // Levels that are empty will be assigned a 'null' score.
    let keys = _ElementIds_a2c40592_js__WEBPACK_IMPORTED_MODULE_2__.A.getKeys(levels);
    for (let ii = 0; ii < keys.length; ii++) {
      let lvl = levels[keys[ii]];
      if (!lvl.records || lvl.records.length <= 0) {
        lvl.aveScore = null;
      }
      else {
        let total = 0;
        let count = 0;
        lvl.records.forEach(function (record) {
          total += record.score;
          count++;
        });
        lvl.aveScore = total / count;
      }
    }
  }
  renderStdGeographyLevelLists(levels, groupId) {
    let accordions = [];
    let keys = _ElementIds_a2c40592_js__WEBPACK_IMPORTED_MODULE_2__.A.getKeys(levels);
    if (keys.length > 0) {
      this.calculateLevelAverageScores(levels);
      // sort levels by content overall record score averages.
      // Account for the possibility of null aveScore
      let sKeys = keys.sort(function (a, b) {
        if (levels[a].aveScore == null)
          return 0;
        if (levels[b].aveScore == null)
          return 1;
        return levels[b].aveScore - levels[a].aveScore;
      });
      // Generate Accordions for each boundary type
      for (let ii = 0; ii < sKeys.length; ii++) {
        let lvl = levels[sKeys[ii]];
        if (lvl.aveScore != null) {
          accordions.push(this.renderStdGeographyLevelAccordion(sKeys[ii], lvl, groupId));
        }
      }
      if (accordions && accordions.length > 0) {
        return ((0,_index_4e647411_js__WEBPACK_IMPORTED_MODULE_3__.h)("div", { class: 'ba-search-boundary-types' }, accordions));
      }
      else {
        return ((0,_index_4e647411_js__WEBPACK_IMPORTED_MODULE_3__.h)("div", null));
      }
    }
  }
  //  Hide all dropdown menus
  hideDropdown() {
    let elem = _ElementIds_a2c40592_js__WEBPACK_IMPORTED_MODULE_2__.A.queryElementById.call(this, this._dropdownId);
    if (elem) {
      elem.setAttribute('open', 'false');
    }
  }
  //  Hide all dropdown menus
  showDropdown() {
    let elem = _ElementIds_a2c40592_js__WEBPACK_IMPORTED_MODULE_2__.A.queryElementById.call(this, this._dropdownId);
    if (elem) {
      elem.setAttribute('open', 'true');
    }
  }
  // ***********************************************************************
  // Initiate dropdown
  // **********************************************************************
  toggleDropdown() {
    let elem = _ElementIds_a2c40592_js__WEBPACK_IMPORTED_MODULE_2__.A.queryElementById.call(this, this._dropdownId);
    if (!elem) {
      this._debug('arcgis-ba-search: missing dropdown...', this._dropdownId);
    }
    else {
      const isVisible = elem.getAttribute('open') == 'true';
      if (isVisible) {
        this.hideDropdown();
      }
      else {
        this.hideSuggestions(null);
        elem.setAttribute('open', 'true');
      }
    }
    const inp = _ElementIds_a2c40592_js__WEBPACK_IMPORTED_MODULE_2__.A.queryElementById.call(this, this._inputId);
    inp.value = '';
  }
  toggleSuggestions() {
    const elem = _ElementIds_a2c40592_js__WEBPACK_IMPORTED_MODULE_2__.A.queryElementById.call(this, this._suggestId);
    if (elem) {
      if (elem.style.maxHeight == '0')
        this.showSuggestions(elem);
      else
        this.hideSuggestions(elem);
    }
  }
  applyCssAndThemeTo_Suggestions() {
    let self = this;
    // ACLUtils.applyCss.call(self, [['background-color', '#282828'], ['color', '#f4f3f3']], { selector: 'div.baSearchSuggestionsOuter' })
    let items = _ElementIds_a2c40592_js__WEBPACK_IMPORTED_MODULE_2__.A.queryElementAll.call(self, 'calcite-dropdown-item');
    if (items && items.length > 0) {
      items.forEach(function (i) {
        let elem = _ElementIds_a2c40592_js__WEBPACK_IMPORTED_MODULE_2__.A.queryElement.call(self, 'div.container', i);
        elem.style.paddingLeft = '4px';
      });
    }
  }
  applyCssAndThemeTo_Search() {
    const self = this;
    // sync the config for the 1st time this component renders.  After that
    // it uses the @watch function
    if (this.config && _ElementIds_a2c40592_js__WEBPACK_IMPORTED_MODULE_2__.A.hasText(this.config) && !this.baseConfig.config) {
      // initialize our config object
      this.onConfigChange(this.config);
    }
    // CSS adjustments to shadow dom element styles
    _ElementIds_a2c40592_js__WEBPACK_IMPORTED_MODULE_2__.A.applyCss.call(self, [['paddingLeft', '4px']], {
      id: _ElementIds_a2c40592_js__WEBPACK_IMPORTED_MODULE_2__.A.fixId(self._dropLocId),
      subSelector: 'div.container'
    });
    // ACLUtils.applyCss.call(self, [['paddingLeft', '4px']], {
    //   id: ACLUtils.fixId(self._dropBdyId),
    //   subSelector: 'div.container'
    // })
    // const bgColor: string = this.colors?.background as string | 'transparent';
    // ACLUtils.applyCss.call(self, [['margin-top', '1px']], {
    //   selector: 'calcite-input',
    //   subSelector: 'button'
    // })
    _ElementIds_a2c40592_js__WEBPACK_IMPORTED_MODULE_2__.A.applyCss.call(self, [['fontSize', '9pt']], {
      selector: 'calcite-dropdown-item',
      subSelector: 'div.container'
    });
    _ElementIds_a2c40592_js__WEBPACK_IMPORTED_MODULE_2__.A.applyCss.call(self, [['minWidth', '212px']], { selector: 'calcite-dropdown-group' });
  }
  showSuggestions(elem) {
    let self = this;
    elem = elem || _ElementIds_a2c40592_js__WEBPACK_IMPORTED_MODULE_2__.A.queryElementById.call(self, self._suggestId);
    if (elem) {
      const suggestHeight = (typeof self.stMaxSuggestionHeight !== undefined) ? self.stMaxSuggestionHeight : 300;
      const suggestStr = suggestHeight + 'px';
      elem.style.maxHeight = suggestStr;
      elem.style.display = 'block';
      // change the background style of calcite 'clear' button
      let input = _ElementIds_a2c40592_js__WEBPACK_IMPORTED_MODULE_2__.A.queryElementById.call(self, _ElementIds_a2c40592_js__WEBPACK_IMPORTED_MODULE_2__.A.fixId(self._inputId));
      let btn = _ElementIds_a2c40592_js__WEBPACK_IMPORTED_MODULE_2__.A.queryElement.call(self, 'button.calcite-input__clear-button', input);
      if (btn) {
        btn.style.border = 'none';
        btn.style.backgroundColor = 'transparent';
      }
      // TODO: change suggestion width to full search width for all themes
      // (the following is experience builder customization)
      // if (self.stColorTheme == 'light') {
      //   function _after() {
      //     // full width suggestions
      //   }
      //   setTimeout(_after, 0)
      // }
    }
  }
  hideSuggestions(elem) {
    if (!elem)
      elem = _ElementIds_a2c40592_js__WEBPACK_IMPORTED_MODULE_2__.A.queryElementById.call(this, this._suggestId);
    if (elem && elem.style.maxHeight != '0') {
      elem.style.maxHeight = '0';
      elem.style.display = 'none';
    }
  }
  async populateSuggestions() {
    const self = this;
    self.suggestionResults = { location: [], boundary: [] };
    const suggestions = { location: [], boundary: [] };
    if (!self.token || !self.username) {
      _ElementIds_a2c40592_js__WEBPACK_IMPORTED_MODULE_2__.L.show('%ex', 'arcgis-ba-search Error: no token set for suggestions search request');
      return;
    }
    self.showSuggestions(null);
    const inp = _ElementIds_a2c40592_js__WEBPACK_IMPORTED_MODULE_2__.A.queryElementById.call(self, self._inputId);
    // capture search string for query of suggestions
    self.searchQuery = inp.value;
    if (self.searchQuery && self.searchQuery.length > 0) {
      // ---------------------------------------------
      if (self.stSearchScope === 'address' || self.stSearchScope === 'all') {
        // Address, location, or place
        try {
          // query using search string using specified location
          const results = await self.geocoderClient.suggest(self.searchQuery, {
            sourceCountry: self.sourceCountry,
            langCode: self.langCode
          });
          if (results && results.length > 0) {
            results.forEach((i) => {
              if (!i.isCollection)
                // @ts-ignore
                suggestions.location.push(i);
            });
          }
          else if (self.stSearchScope === 'address') {
            this._debug('arcgis-ba-search: no locations found ');
            self.hideSuggestions(null);
          }
        }
        catch (error) {
          self.suggestionResults = { location: [], boundary: [] };
          _ElementIds_a2c40592_js__WEBPACK_IMPORTED_MODULE_2__.L.show('%e', 'arcgis-ba-search error ', error);
          if (self.stSearchScope === 'address') {
            self.hideSuggestions(null);
          }
        }
      }
      // ---------------------------------------------
      if (self.stSearchScope === 'boundary' || self.stSearchScope === 'all') {
        self._geographyLevelData = await self.getFilteredGeographyLevels();
        if (self._geographyLevelData && self._geographyLevelData.length > 0) {
          const token = await _GEClient_f71049f8_js__WEBPACK_IMPORTED_MODULE_1__.T.getToken();
          if (!token || !_ElementIds_a2c40592_js__WEBPACK_IMPORTED_MODULE_2__.A.hasText(token.toString())) {
            _ElementIds_a2c40592_js__WEBPACK_IMPORTED_MODULE_2__.L.show('%e', 'arcgis-ba-search ERROR: Invalid or expired token.  Must update.');
            self.hideSuggestions(null);
          }
          else {
            const levelIdStrings = self._geographyLevelData.map(lev => lev.id.toString());
            let geoFeatures;
            try {
              // Request the list of Boundaries to suggest
              geoFeatures = await _GEClient_f71049f8_js__WEBPACK_IMPORTED_MODULE_1__.G.searchStdGeography(self.searchQuery, {
                featureLimit: 1000,
                geographyLayers: levelIdStrings,
                useFuzzySearch: true,
                langCode: self.langCode,
                sourceCountry: self.stSourceCountry,
                token
              });
            }
            catch (error) {
              self.suggestionResults = { location: [], boundary: [] };
              if (error.message.indexOf('token') != -1) {
                _ElementIds_a2c40592_js__WEBPACK_IMPORTED_MODULE_2__.L.show('%e', 'search: invalid token', error);
              }
              else {
                _ElementIds_a2c40592_js__WEBPACK_IMPORTED_MODULE_2__.L.show('%e', 'arcgis-ba-search error ', error);
              }
            }
            if (!geoFeatures?.length) {
              _ElementIds_a2c40592_js__WEBPACK_IMPORTED_MODULE_2__.L.show('%y', 'arcgis-ba-search Warning: No STD GEO search results');
              if (self.stSearchScope === 'boundary') {
                self.hideSuggestions(null);
              }
            }
            else {
              self._openFirst = true;
              suggestions.boundary = geoFeatures;
            }
          }
        }
        else {
          _ElementIds_a2c40592_js__WEBPACK_IMPORTED_MODULE_2__.L.show('%y', 'arcgis-ba-search searchStdGeography error: no geography levels selected');
          self.hideSuggestions(null);
        }
      }
      self.suggestionResults = suggestions;
    }
    else {
      self.hideSuggestions(null);
    }
  }
  render() {
    const self = this;
    if (this._dbg) {
      console.log('%c SEARCH render', 'color:yellow;font-size:11pt', this.baseConfig.config, this.stSearchScope);
    }
    // console.log('%c Rendering search', 'color:green;font-size:8pt')
    if (self._openFirst) {
      self._openFirst = false;
      function _open() {
        // open first accordion
        let first = _ElementIds_a2c40592_js__WEBPACK_IMPORTED_MODULE_2__.A.queryElement.call(self, 'ba-accordion');
        // @ts-ignore
        if (first)
          first.openAccordion();
      }
      setTimeout(_open, 100);
    }
    //const btnColor = this.colors ? this.colors.brand : ''
    // in case our scope doesn't match the nogeography attribute
    if (self.stNoGeography != undefined && self.stNoGeography === true) {
      self.stSearchScope = 'address';
    }
    // searchElem=document.getElementById('mySearch')
    // userInput=document.getElementById('inputUsername')
    // tokenInput=document.getElementById('inputToken')
    // geographyLevels=document.getElementById('mySearchLevels')
    //const suggestionClass = (this.stColorTheme === 'light') ? 'lightSuggestionOuter' : 'baSearchSuggestionsOuter'
    const suggestionClass = 'lightSuggestionOuter';
    const dropdownClass = (typeof (this.baseConfig.config?.baSearchType) !== 'undefined' && this.baseConfig.config?.baSearchType !== "0") ? 'arcgisBaSearchNoDropdown' : 'arcgisBaSearchDropdownChooser';
    // const dropdownClass2 = 'arcgisBaSearchDropdownChooser2'
    const inputClass = 'arcgisBaSearchInput'; //(this.stNoGeography) ? 'arcgisBaSearchInputNoGeog' : 'arcgisBaSearchInput'
    const dropdownButtonStyle = {
      'position': 'absolute',
      'width': '30px',
      'height': '32px',
      'overflow': 'hidden'
    };
    return ((0,_index_4e647411_js__WEBPACK_IMPORTED_MODULE_3__.h)("div", null, (0,_index_4e647411_js__WEBPACK_IMPORTED_MODULE_3__.h)("div", { class: "baSearchOuter" }, (0,_index_4e647411_js__WEBPACK_IMPORTED_MODULE_3__.h)("calcite-dropdown", { class: dropdownClass }, (0,_index_4e647411_js__WEBPACK_IMPORTED_MODULE_3__.h)("calcite-button", { slot: "trigger", style: dropdownButtonStyle, kind: "neutral", "icon-start": "chevron-down" }), (0,_index_4e647411_js__WEBPACK_IMPORTED_MODULE_3__.h)("calcite-dropdown-group", { "selection-mode": "single" }, (0,_index_4e647411_js__WEBPACK_IMPORTED_MODULE_3__.h)("calcite-dropdown-item", { "icon-start": 'analysis', tabIndex: '0', onClick: () => this.handleSearchScopeSelection('all') }, this.searchAll), (0,_index_4e647411_js__WEBPACK_IMPORTED_MODULE_3__.h)("calcite-dropdown-item", { "icon-start": 'pin', tabIndex: '0', onClick: () => this.handleSearchScopeSelection('address') }, this.searchPlaceholderShort), (0,_index_4e647411_js__WEBPACK_IMPORTED_MODULE_3__.h)("calcite-dropdown-item", { "icon-start": 'polygon', tabIndex: '0', onClick: () => this.handleSearchScopeSelection('boundary') }, this.searchBoundary, " "))), (0,_index_4e647411_js__WEBPACK_IMPORTED_MODULE_3__.h)("calcite-input", { id: this._inputId, class: inputClass, clearable: "true", placeholder: this.stSearchScope === 'address' ? this.searchPlaceholder : (this.stSearchScope === 'all') ? this.searchAllPlaceholder : this.searchEnterBoundary }), (0,_index_4e647411_js__WEBPACK_IMPORTED_MODULE_3__.h)("div", { id: this._suggestId, class: suggestionClass }, (this.stSearchScope === 'address' || this.stSearchScope === 'all') && this.renderLocationSuggestions(), (this.stSearchScope === 'boundary' || this.stSearchScope === 'all') && this.renderBoundarySuggestions()))));
  }
  get el() { return (0,_index_4e647411_js__WEBPACK_IMPORTED_MODULE_3__.g)(this); }
  static get watchers() { return {
    "config": ["onConfigChange"],
    "nogeography": ["onNoGeographyChanged"],
    "maxsuggestionheight": ["onMaxSuggestionHeightChanged"],
    "env": ["onEnvChanged"],
    "token": ["onTokenChanged"],
    "username": ["onUsernameChanged"],
    "langCode": ["onLangCodeChanged"],
    "geoenrichmentUrl": ["onGeoenrichmentUrlChanged"],
    "theme": ["onThemeChanged"],
    "sourceCountry": ["onCountryChanged"],
    "currentSearchText": ["onSearchTextChanged"],
    "mode": ["onModeChanged"],
    "suglite": ["onSugliteChanged"],
    "activeLevels": ["onActiveLevelsChanged"]
  }; }
};
ArcgisBaSearch.style = arcgisBaSearchCss;



//# sourceMappingURL=arcgis-ba-search-b60a78f9.js.map

/***/ }),

/***/ "./extensions/widgets/ba-infographic/node_modules/@arcgis/business-analyst-components/dist/stencil-components/dist/esm/arcgis-ba-search.entry.js":
/*!*******************************************************************************************************************************************************!*\
  !*** ./extensions/widgets/ba-infographic/node_modules/@arcgis/business-analyst-components/dist/stencil-components/dist/esm/arcgis-ba-search.entry.js ***!
  \*******************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   arcgis_ba_search: () => (/* reexport safe */ _arcgis_ba_search_b60a78f9_js__WEBPACK_IMPORTED_MODULE_0__.A)
/* harmony export */ });
/* harmony import */ var _arcgis_ba_search_b60a78f9_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./arcgis-ba-search-b60a78f9.js */ "./extensions/widgets/ba-infographic/node_modules/@arcgis/business-analyst-components/dist/stencil-components/dist/esm/arcgis-ba-search-b60a78f9.js");







//# sourceMappingURL=arcgis-ba-search.entry.js.map

/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,