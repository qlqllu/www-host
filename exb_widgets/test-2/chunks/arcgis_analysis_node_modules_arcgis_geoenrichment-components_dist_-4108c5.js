"use strict";
(self["webpackChunkexb_client"] = self["webpackChunkexb_client"] || []).push([["vendors-extensions_widgets_arcgis_analysis_node_modules_arcgis_geoenrichment-components_dist_-4108c5"],{

/***/ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/geoenrichment-components/dist/esm/StyleRepository-533fd5df.js":
/*!*******************************************************************************************************************************!*\
  !*** ./extensions/widgets/arcgis/analysis/node_modules/@arcgis/geoenrichment-components/dist/esm/StyleRepository-533fd5df.js ***!
  \*******************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   P: () => (/* binding */ P$2),
/* harmony export */   a: () => (/* binding */ a$1),
/* harmony export */   b: () => (/* binding */ t$6),
/* harmony export */   c: () => (/* binding */ f),
/* harmony export */   d: () => (/* binding */ d),
/* harmony export */   e: () => (/* binding */ b$1),
/* harmony export */   f: () => (/* binding */ f$1),
/* harmony export */   g: () => (/* binding */ a),
/* harmony export */   h: () => (/* binding */ h$1),
/* harmony export */   n: () => (/* binding */ n),
/* harmony export */   r: () => (/* binding */ r),
/* harmony export */   t: () => (/* binding */ t$1)
/* harmony export */ });
/* harmony import */ var _DataBrowser_5ce2ade9_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./DataBrowser-5ce2ade9.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/geoenrichment-components/dist/esm/DataBrowser-5ce2ade9.js");
/* harmony import */ var _colorUtils_c85d85b1_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./colorUtils-c85d85b1.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/geoenrichment-components/dist/esm/colorUtils-c85d85b1.js");
/* harmony import */ var _definitions_e63f4fe2_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./definitions-e63f4fe2.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/geoenrichment-components/dist/esm/definitions-e63f4fe2.js");




/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
function n$2(){return new Float32Array(4)}function r$4(n){const r=new Float32Array(4);return r[0]=n[0],r[1]=n[1],r[2]=n[2],r[3]=n[3],r}function t$7(n,r,t,a){const e=new Float32Array(4);return e[0]=n,e[1]=r,e[2]=t,e[3]=a,e}function a$3(n,r){return new Float32Array(n,r,4)}function e$6(){return n$2()}function u$1(){return t$7(1,1,1,1)}function o$3(){return t$7(1,0,0,0)}function s(){return t$7(0,1,0,0)}function c$2(){return t$7(0,0,1,0)}function i$2(){return t$7(0,0,0,1)}const f$3=e$6(),l$1=u$1(),_$1=o$3(),w=s(),N$2=c$2(),U$1=i$2();Object.freeze({__proto__:null,create:n$2,clone:r$4,fromValues:t$7,createView:a$3,zeros:e$6,ones:u$1,unitX:o$3,unitY:s,unitZ:c$2,unitW:i$2,ZEROS:f$3,ONES:l$1,UNIT_X:_$1,UNIT_Y:w,UNIT_Z:N$2,UNIT_W:U$1});

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
class t$6{constructor(t){this._array=[],t<=0&&console.error("strideInBytes must be positive!"),this._stride=t;}get array(){return this._array}get index(){return 4*this._array.length/this._stride}get itemSize(){return this._stride}get sizeInBytes(){return 4*this._array.length}reset(){this.array.length=0;}toBuffer(){return new Uint32Array(this._array).buffer}static i1616to32(t,r){return 65535&t|r<<16}static i8888to32(t,r,e,i){return 255&t|(255&r)<<8|(255&e)<<16|i<<24}static i8816to32(t,r,e){return 255&t|(255&r)<<8|e<<16}}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
class o$2{constructor(e){this._color=n$2(),this._key=e;}get key(){return this._key}get type(){return 7&this._key}defines(){return []}getStride(){return this._layoutInfo||this._buildAttributesInfo(),this._stride}getAttributeLocations(){return this._locations||this._buildAttributesInfo(),this._locations}getLayoutInfo(){return this._layoutInfo||this._buildAttributesInfo(),this._layoutInfo}getEncodingInfos(){return this._propertyEncodingInfo||this._buildAttributesInfo(),this._propertyEncodingInfo}getUniforms(){return this._uniforms||this._buildAttributesInfo(),this._uniforms}getShaderHeader(){return this._shaderHeader||this._buildAttributesInfo(),this._shaderHeader}getShaderMain(){return this._shaderMain||this._buildAttributesInfo(),this._shaderMain}setDataUniforms(t,e,o,n){const s=this.getUniforms();for(const r in s){const i=s[r];switch(i.type){case"float":t.setUniform1f(i.name,i.getValue(o,e,n));break;case"vec2":t.setUniform2fv(i.name,i.getValue(o,e,n));break;case"vec4":{const s=i.getValue(o,e,n),r=s[3];this._color[0]=r*s[0],this._color[1]=r*s[1],this._color[2]=r*s[2],this._color[3]=r,t.setUniform4fv(i.name,this._color);}}}}encodeAttributes(t,e,o){const n=this.attributesInfo(),s=this.getEncodingInfos(),r=[];for(const a of Object.keys(s)){var i;const c=s[a],{type:u,precisionFactor:f,isLayout:h}=n[a],d=h?o.getLayoutProperty(a):o.getPaintProperty(a),l=null==(i=d.interpolator)?void 0:i.getInterpolationRange(e);let _=0;for(const o of c){o.dataIndex>=r.length&&r.push(0);const n=d.getValue(l?l[_]:e,t);switch(u){case 0:r[o.dataIndex]|=this._encodeByte(n*(f||1),8*o.offset);break;case 1:r[o.dataIndex]|=this._encodeByte(n*(f||1)+128,8*o.offset);break;case 2:r[o.dataIndex]=this._encodeColor(n);break;default:throw new Error("Unsupported encoding type")}++_;}}return r}getAtributeState(t){let e=0;const o=3+2*t;return e|=this._bit(o),e|=this._bit(o+1)<<1,e}_buildAttributesInfo(){const t=[],e={},n={};let s=-1;const r=this.attributesInfo(),i=this.attributes();let a=-1;for(const d of i){++a;const i=this.getAtributeState(a);if(0===i)continue;const c=r[d],u=[];e[d]=u;const f=c.type;for(let e=0;e<i;++e){const{dataType:e,bytesPerElement:r,count:i,normalized:a}=o$2._encodingInfo[f],c=e<<2|i;let h=n[c];h&&4!==h.offset||(++s,n[c]=h={dataIndex:s,offset:0},t.push({location:-1,name:"a_data_"+s,count:4/r,type:e,normalized:a})),u.push({dataIndex:h.dataIndex,offset:h.offset}),h.offset+=r*i;}}this._buildVertexBufferLayout(t);const c={};let u=0;const f=this._layoutInfo.geometry;for(const o of f)c[o.name]=u++;const h=this._layoutInfo.opacity;if(h)for(const o of h)c[o.name]=u++;this._buildShaderInfo(t,e),this._propertyEncodingInfo=e,this._locations=c;}_buildVertexBufferLayout(t){const e={},o=this.geometryInfo();let s=o[0].stride;if(0===t.length)e.geometry=o;else {const r=[];let i=s;s+=4*t.length;for(const t of o){const e={...t};e.stride=s,r.push(e);}for(const e of t)r.push({name:e.name,count:e.count,type:e.type,offset:i,stride:s,normalized:e.normalized||!1,divisor:0}),i+=n$1(e.type)*e.count;e.geometry=r;}this.opacityInfo()&&(e.opacity=this.opacityInfo()),this._layoutInfo=e,this._stride=s;}_buildShaderInfo(t,e){let n="\n",s="\n";const r=[];for(const o of t)n+=`attribute ${this._getType(o.count)} ${o.name};\n`;const i=this.attributes(),a=this.attributesInfo();let c=-1;for(const u of i){++c;const{name:t,type:i,precisionFactor:f,isLayout:h}=a[u],d=f&&1!==f?" * "+1/f:"",{bytesPerElement:l,count:_}=o$2._encodingInfo[i],y=t=>{const e=2===i?"":`[${t.offset/l}]`;return `a_data_${t.dataIndex}${e}`};switch(this.getAtributeState(c)){case 0:{const e=this._getType(_),o=`u_${t}`;r.push({name:o,type:e,getValue:(t,e)=>h?t.getLayoutValue(u,e):t.getPaintValue(u,e)}),n+=`uniform ${e} ${o};\n`,s+=`${e} ${t} = ${o};\n`;}break;case 1:{const o=y(e[u][0]);s+=`${this._getType(_)} ${t} = ${o}${d};\n`;}break;case 2:{const o=`u_t_${t}`;r.push({name:o,type:"float",getValue:(t,e,o)=>(h?t.getLayoutProperty(u):t.getPaintProperty(u)).interpolator.interpolationUniformValue(o,e)}),n+=`uniform float ${o};\n`;const i=y(e[u][0]),a=y(e[u][1]);s+=`${this._getType(_)} ${t} = mix(${i}${d}, ${a}${d}, ${o});\n`;}}}this._shaderHeader=n,this._shaderMain=s,this._uniforms=r;}_bit(t){return (this._key&1<<t)>>t}_getType(t){switch(t){case 1:return "float";case 2:return "vec2";case 4:return "vec4"}throw new Error("Invalid count")}_encodeColor(t){const o=255*t[3];return t$6.i8888to32(t[0]*o,t[1]*o,t[2]*o,o)}_encodeByte(t,e){return (255&t)<<e}}o$2._encodingInfo=[{dataType:5121,bytesPerElement:1,count:1,normalized:!1},{dataType:5121,bytesPerElement:1,count:1,normalized:!1},{dataType:5121,bytesPerElement:1,count:4,normalized:!0}];const n$1=t=>{switch(t){case 5126:case 5124:case 5125:return 4;case 5122:case 5123:return 2;case 5120:case 5121:return 1}};

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
class r$3 extends o$2{constructor(t){super(t);}geometryInfo(){return r$3.GEOMETRY_LAYOUT}opacityInfo(){return null}attributes(){return r$3.ATTRIBUTES}attributesInfo(){return r$3.ATTRIBUTES_INFO}}r$3.ATTRIBUTES=[],r$3.GEOMETRY_LAYOUT=[{name:"a_pos",count:2,type:5120,offset:0,stride:2,normalized:!1,divisor:0}],r$3.ATTRIBUTES_INFO={};

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
class e$5 extends o$2{constructor(r){super(r);}geometryInfo(){return e$5.GEOMETRY_LAYOUT}opacityInfo(){return null}attributes(){return e$5.ATTRIBUTES}attributesInfo(){return e$5.ATTRIBUTES_INFO}}e$5.ATTRIBUTES=["circle-radius","circle-color","circle-opacity","circle-stroke-width","circle-stroke-color","circle-stroke-opacity","circle-blur"],e$5.GEOMETRY_LAYOUT=[{name:"a_pos",count:2,type:5122,offset:0,stride:4,normalized:!1,divisor:0}],e$5.ATTRIBUTES_INFO={"circle-radius":{name:"radius",type:0},"circle-color":{name:"color",type:2},"circle-opacity":{name:"opacity",type:0,precisionFactor:100},"circle-stroke-width":{name:"stroke_width",type:0,precisionFactor:4},"circle-stroke-color":{name:"stroke_color",type:2},"circle-stroke-opacity":{name:"stroke_opacity",type:0,precisionFactor:100},"circle-blur":{name:"blur",type:0,precisionFactor:32}};

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
class t$5 extends o$2{constructor(o){super(o);}geometryInfo(){return t$5.GEOMETRY_LAYOUT}opacityInfo(){return null}attributes(){return t$5.ATTRIBUTES}attributesInfo(){return t$5.ATTRIBUTES_INFO}}t$5.ATTRIBUTES=["fill-color","fill-opacity"],t$5.GEOMETRY_LAYOUT=[{name:"a_pos",count:2,type:5122,offset:0,stride:4,normalized:!1,divisor:0}],t$5.ATTRIBUTES_INFO={"fill-color":{name:"color",type:2},"fill-opacity":{name:"opacity",type:0,precisionFactor:100}};class e$4 extends o$2{constructor(o,t){super(o),this.usefillColor=t;}geometryInfo(){return e$4.GEOMETRY_LAYOUT}opacityInfo(){return null}attributes(){return this.usefillColor?e$4.ATTRIBUTES_FILL:e$4.ATTRIBUTES_OUTLINE}attributesInfo(){return this.usefillColor?e$4.ATTRIBUTES_INFO_FILL:e$4.ATTRIBUTES_INFO_OUTLINE}}e$4.ATTRIBUTES_OUTLINE=["fill-outline-color","fill-opacity"],e$4.ATTRIBUTES_FILL=["fill-color","fill-opacity"],e$4.GEOMETRY_LAYOUT=[{name:"a_pos",count:2,type:5122,offset:0,stride:8,normalized:!1,divisor:0},{name:"a_offset",count:2,type:5120,offset:4,stride:8,normalized:!1,divisor:0},{name:"a_xnormal",count:2,type:5120,offset:6,stride:8,normalized:!1,divisor:0}],e$4.ATTRIBUTES_INFO_OUTLINE={"fill-outline-color":{name:"color",type:2},"fill-opacity":{name:"opacity",type:0,precisionFactor:100}},e$4.ATTRIBUTES_INFO_FILL={"fill-color":{name:"color",type:2},"fill-opacity":{name:"opacity",type:0,precisionFactor:100}};

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
class t$4 extends o$2{constructor(e){super(e);}geometryInfo(){return t$4.GEOMETRY_LAYOUT}opacityInfo(){return null}attributes(){return t$4.ATTRIBUTES}attributesInfo(){return t$4.ATTRIBUTES_INFO}}t$4.ATTRIBUTES=["line-blur","line-color","line-gap-width","line-offset","line-opacity","line-width"],t$4.GEOMETRY_LAYOUT=[{name:"a_pos",count:2,type:5122,offset:0,stride:12,normalized:!1,divisor:0},{name:"a_offsetAndNormal",count:4,type:5120,offset:4,stride:12,normalized:!1,divisor:0},{name:"a_accumulatedDistance",count:2,type:5123,offset:8,stride:12,normalized:!1,divisor:0}],t$4.ATTRIBUTES_INFO={"line-width":{name:"width",type:0,precisionFactor:2},"line-gap-width":{name:"gap_width",type:0,precisionFactor:2},"line-offset":{name:"offset",type:1,precisionFactor:2},"line-color":{name:"color",type:2},"line-opacity":{name:"opacity",type:0,precisionFactor:100},"line-blur":{name:"blur",type:0,precisionFactor:4}};

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
const t$3=[{name:"a_pos",count:2,type:5122,offset:0,stride:16,normalized:!1,divisor:0},{name:"a_vertexOffset",count:2,type:5122,offset:4,stride:16,normalized:!1,divisor:0},{name:"a_texAngleRange",count:4,type:5121,offset:8,stride:16,normalized:!1,divisor:0},{name:"a_levelInfo",count:4,type:5121,offset:12,stride:16,normalized:!1,divisor:0}],e$3=[{name:"a_opacityInfo",count:1,type:5121,offset:0,stride:1,normalized:!1,divisor:0}];class r$2 extends o$2{constructor(o){super(o);}geometryInfo(){return t$3}opacityInfo(){return e$3}attributes(){return r$2.ATTRIBUTES}attributesInfo(){return r$2.ATTRIBUTES_INFO}}r$2.ATTRIBUTES=["icon-color","icon-opacity","icon-halo-blur","icon-halo-color","icon-halo-width","icon-size"],r$2.ATTRIBUTES_INFO={"icon-color":{name:"color",type:2},"icon-opacity":{name:"opacity",type:0,precisionFactor:100},"icon-halo-color":{name:"halo_color",type:2},"icon-halo-width":{name:"halo_width",type:0,precisionFactor:4},"icon-halo-blur":{name:"halo_blur",type:0,precisionFactor:4},"icon-size":{name:"size",type:0,precisionFactor:32,isLayout:!0}};class i$1 extends o$2{constructor(o){super(o);}geometryInfo(){return t$3}opacityInfo(){return e$3}attributes(){return i$1.ATTRIBUTES}attributesInfo(){return i$1.ATTRIBUTES_INFO}}i$1.ATTRIBUTES=["text-color","text-opacity","text-halo-blur","text-halo-color","text-halo-width","text-size"],i$1.ATTRIBUTES_INFO={"text-color":{name:"color",type:2},"text-opacity":{name:"opacity",type:0,precisionFactor:100},"text-halo-color":{name:"halo_color",type:2},"text-halo-width":{name:"halo_width",type:0,precisionFactor:4},"text-halo-blur":{name:"halo_blur",type:0,precisionFactor:4},"text-size":{name:"size",type:0,isLayout:!0}};

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
const r$1={kind:"null"},e$2={kind:"number"},t$2={kind:"string"},i={kind:"boolean"},o$1={kind:"color"},f$2={kind:"object"},u={kind:"value"};function a$2(n,r){return {kind:"array",itemType:n,n:r}}const y$2=[r$1,e$2,t$2,i,o$1,f$2,a$2(u)];function k$1(n){if("array"===n.kind){const r=k$1(n.itemType);return "number"==typeof n.n?`array<${r}, ${n.n}>`:"value"===n.itemType.kind?"array":`array<${r}>`}return n.kind}function l(y){if(null===y)return r$1;if("string"==typeof y)return t$2;if("boolean"==typeof y)return i;if("number"==typeof y)return e$2;if(y instanceof _DataBrowser_5ce2ade9_js__WEBPACK_IMPORTED_MODULE_0__.bu)return o$1;if(Array.isArray(y)){let n;for(const r of y){const e=l(r);if(n){if(n!==e){n=u;break}}else n=e;}return a$2(n||u,y.length)}return "object"==typeof y?f$2:u}function c$1(n,r){if("array"===r.kind)return "array"===n.kind&&(0===n.n&&"value"===n.itemType.kind||c$1(n.itemType,r.itemType))&&("number"!=typeof r.n||r.n===n.n);if("value"===r.kind)for(const e of y$2)if(c$1(n,e))return !0;return r.kind===n.kind}function d$2(r){if(null===r)return "";const e=typeof r;return "string"===e?r:"number"===e||"boolean"===e?String(r):r instanceof _DataBrowser_5ce2ade9_js__WEBPACK_IMPORTED_MODULE_0__.bu?r.toString():JSON.stringify(r)}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
function e$1(e,n,t,r){const u=3*e,i=3*(t-e)-u,a=1-u-i,o=3*n,s=3*(r-n)-o,f=1-o-s;function c(e){return ((a*e+i)*e+u)*e}function l(e){return ((f*e+s)*e+o)*e}function b(e){return (3*a*e+2*i)*e+u}function p(e,n){let t,r,u,i,a,o;for(u=e,o=0;o<8;o++){if(i=c(u)-e,Math.abs(i)<n)return u;if(a=b(u),Math.abs(a)<1e-6)break;u-=i/a;}if(t=0,r=1,u=e,u<t)return t;if(u>r)return r;for(;t<r;){if(i=c(u),Math.abs(i-e)<n)return u;e>i?t=u:r=u,u=.5*(r-t)+t;}return u}return function(e,n=1e-6){return l(p(e,n))}}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
const n=Number.POSITIVE_INFINITY,t$1=Math.PI,r=2*t$1,o=128/t$1,f$1=t$1/180,N$1=1/Math.LN2;function a$1(n,t){return (n%=t)>=0?n:n+t}function h$1(n){return a$1(n*o,256)}function P$2(n){return Math.log(n)*N$1}function b$1(n,t,r){return n*(1-r)+t*r}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
class y$1{constructor(t){this.parent=t,this.vars={};}add(t,e){this.vars[t]=e;}get(t){return this.vars[t]?this.vars[t]:this.parent?this.parent.get(t):null}}class v{constructor(){this.type=u;}static parse(t){if(t.length>1)throw new Error('"id" does not expect arguments');return new v}evaluate(t,e){return t.id||null}}class b{constructor(){this.type=t$2;}static parse(t){if(t.length>1)throw new Error('"geometry-type" does not expect arguments');return new b}evaluate(t,e){switch(t.type){case 1:return "Point";case 2:return "LineString";case 3:return "Polygon";default:return null}}}class d$1{constructor(){this.type=f$2;}static parse(t){if(t.length>1)throw new Error('"properties" does not expect arguments');return new d$1}evaluate(t,e){return t.values}}class x{constructor(){this.type=e$2;}static parse(t){if(t.length>1)throw new Error('"zoom" does not expect arguments');return new x}evaluate(t,e){return e}}class E{constructor(t,e,r){this.lhs=t,this.rhs=e,this.compare=r,this.type=i;}static parse(t,e,r){if(3!==t.length&&4!==t.length)throw new Error(`"${t[0]}" expects 2 or 3 arguments`);if(4===t.length)throw new Error(`"${t[0]}" collator not supported`);return new E(ht(t[1],e),ht(t[2],e),r)}evaluate(t,e){return this.compare(this.lhs.evaluate(t,e),this.rhs.evaluate(t,e))}}class $ extends E{static parse(t,e){return E.parse(t,e,((t,e)=>t===e))}}class M extends E{static parse(t,e){return E.parse(t,e,((t,e)=>t!==e))}}class k extends E{static parse(t,e){return E.parse(t,e,((t,e)=>t<e))}}class A extends E{static parse(t,e){return E.parse(t,e,((t,e)=>t<=e))}}class j extends E{static parse(t,e){return E.parse(t,e,((t,e)=>t>e))}}class q extends E{static parse(t,e){return E.parse(t,e,((t,e)=>t>=e))}}class N{constructor(t){this.arg=t,this.type=i;}static parse(t,e){if(2!==t.length)throw new Error('"!" expects 1 argument');return new N(ht(t[1],e))}evaluate(t,e){return !this.arg.evaluate(t,e)}}class _{constructor(t){this.args=t,this.type=i;}static parse(t,e){const r=[];for(let s=1;s<t.length;s++)r.push(ht(t[s],e));return new _(r)}evaluate(t,e){for(const r of this.args)if(!r.evaluate(t,e))return !1;return !0}}class R{constructor(t){this.args=t,this.type=i;}static parse(t,e){const r=[];for(let s=1;s<t.length;s++)r.push(ht(t[s],e));return new R(r)}evaluate(t,e){for(const r of this.args)if(r.evaluate(t,e))return !0;return !1}}class C{constructor(t){this.args=t,this.type=i;}static parse(t,e){const r=[];for(let s=1;s<t.length;s++)r.push(ht(t[s],e));return new C(r)}evaluate(t,e){for(const r of this.args)if(r.evaluate(t,e))return !1;return !0}}class z{constructor(t,e,r){this.type=t,this.args=e,this.fallback=r;}static parse(t,e,r){if(t.length<4)throw new Error('"case" expects at least 3 arguments');if(t.length%2==1)throw new Error('"case" expects an odd number of arguments');let s;const n=[];for(let o=1;o<t.length-1;o+=2){const a=ht(t[o],e),i=ht(t[o+1],e,r);s||(s=i.type),n.push({condition:a,output:i});}const a=ht(t[t.length-1],e,r);return s||(s=a.type),new z(s,n,a)}evaluate(t,e){for(const r of this.args)if(r.condition.evaluate(t,e))return r.output.evaluate(t,e);return this.fallback.evaluate(t,e)}}class I{constructor(t,e){this.type=t,this.args=e;}static parse(t,e){if(t.length<2)throw new Error('"coalesce" expects at least 1 argument');let r;const s=[];for(let n=1;n<t.length;n++){const a=ht(t[n],e);r||(r=a.type),s.push(a);}return new I(r,s)}evaluate(t,e){for(const r of this.args){const s=r.evaluate(t,e);if(null!==s)return s}return null}}class L{constructor(t,e,r,s,n){this.type=t,this.input=e,this.labels=r,this.outputs=s,this.fallback=n;}static parse(t,e){if(t.length<3)throw new Error('"match" expects at least 3 arguments');if(t.length%2==0)throw new Error('"case" expects an even number of arguments');let r;const s=ht(t[1],e),n=[],a={};let o;for(let i=2;i<t.length-1;i+=2){let s=t[i];Array.isArray(s)||(s=[s]);for(const t of s){const e=typeof t;if("string"!==e&&"number"!==e)throw new Error('"match" requires string or number literal as labels');if(o){if(e!==o)throw new Error('"match" requires labels to have the same type')}else o=e;a[t]=n.length;}const l=ht(t[i+1],e);r||(r=l.type),n.push(l);}return new L(r,s,a,n,ht(t[t.length-1],e))}evaluate(t,e){const r=this.input.evaluate(t,e);return (this.outputs[this.labels[r]]||this.fallback).evaluate(t,e)}}class U{constructor(t,e,r,s,n){this.operator=t,this.type=e,this.interpolation=r,this.input=s,this.stops=n;}static parse(t,e,r){const s=t[0];if(t.length<5)throw new Error(`"${s}" expects at least 4 arguments`);const n=t[1];if(!Array.isArray(n)||0===n.length)throw new Error(`"${n}" is not a valid interpolation`);switch(n[0]){case"linear":if(1!==n.length)throw new Error("Linear interpolation cannot have parameters");break;case"exponential":if(2!==n.length||"number"!=typeof n[1])throw new Error("Exponential interpolation requires one numeric argument");break;case"cubic-bezier":if(5!==n.length)throw new Error("Cubic bezier interpolation requires four numeric arguments with values between 0 and 1");for(let t=1;t<5;t++){const e=n[t];if("number"!=typeof e||e<0||e>1)throw new Error("Cubic bezier interpolation requires four numeric arguments with values between 0 and 1")}break;default:throw new Error(`"${t[0]}" unknown interpolation type "${n[0]}"`)}if(t.length%2!=1)throw new Error(`"${s}" expects an even number of arguments`);const a=ht(t[2],e,e$2);let o;"interpolate-hcl"===s||"interpolate-lab"===s?o=o$1:r&&"value"!==r.kind&&(o=r);const i=[];for(let l=3;l<t.length;l+=2){const r=t[l];if("number"!=typeof r)throw new Error(`"${s}" requires stop inputs as literal numbers`);if(i.length&&i[i.length-1][0]>=r)throw new Error(`"${s}" requires strictly ascending stop inputs`);const n=ht(t[l+1],e,o);o||(o=n.type),i.push([r,n]);}if(o&&o!==o$1&&o!==e$2&&("array"!==o.kind||o.itemType!==e$2))throw new Error(`"${s}" cannot interpolate type ${k$1(o)}`);return new U(s,o,n,a,i)}evaluate(n,o){const i=this.stops;if(1===i.length)return i[0][1].evaluate(n,o);const l=this.input.evaluate(n,o);if(l<=i[0][0])return i[0][1].evaluate(n,o);if(l>=i[i.length-1][0])return i[i.length-1][1].evaluate(n,o);let u=0;for(;++u<i.length&&!(l<i[u][0]););const c=i[u-1][0],h=i[u][0],g=U.interpolationRatio(this.interpolation,l,c,h),f=i[u-1][1].evaluate(n,o),w=i[u][1].evaluate(n,o);if("interpolate"===this.operator){if("array"===this.type.kind&&Array.isArray(f)&&Array.isArray(w))return f.map(((t,e)=>b$1(t,w[e],g)));if("color"===this.type.kind&&f instanceof _DataBrowser_5ce2ade9_js__WEBPACK_IMPORTED_MODULE_0__.bu&&w instanceof _DataBrowser_5ce2ade9_js__WEBPACK_IMPORTED_MODULE_0__.bu){const e=new _DataBrowser_5ce2ade9_js__WEBPACK_IMPORTED_MODULE_0__.bu(f),r=new _DataBrowser_5ce2ade9_js__WEBPACK_IMPORTED_MODULE_0__.bu(w);return new _DataBrowser_5ce2ade9_js__WEBPACK_IMPORTED_MODULE_0__.bu([b$1(e.r,r.r,g),b$1(e.g,r.g,g),b$1(e.b,r.b,g),b$1(e.a,r.a,g)])}if("number"===this.type.kind&&"number"==typeof f&&"number"==typeof w)return b$1(f,w,g);throw new Error(`"${this.operator}" cannot interpolate type ${k$1(this.type)}`)}if("interpolate-hcl"===this.operator){const s=(0,_colorUtils_c85d85b1_js__WEBPACK_IMPORTED_MODULE_1__.v)(f),n=(0,_colorUtils_c85d85b1_js__WEBPACK_IMPORTED_MODULE_1__.v)(w),o=n.h-s.h,i=(0,_colorUtils_c85d85b1_js__WEBPACK_IMPORTED_MODULE_1__.p)({h:s.h+g*(o>180||o<-180?o-360*Math.round(o/360):o),c:b$1(s.c,n.c,g),l:b$1(s.l,n.l,g)});return new _DataBrowser_5ce2ade9_js__WEBPACK_IMPORTED_MODULE_0__.bu({a:b$1(f.a,w.a,g),...i})}if("interpolate-lab"===this.operator){const e=(0,_colorUtils_c85d85b1_js__WEBPACK_IMPORTED_MODULE_1__.z)(f),n=(0,_colorUtils_c85d85b1_js__WEBPACK_IMPORTED_MODULE_1__.z)(w),o=(0,_colorUtils_c85d85b1_js__WEBPACK_IMPORTED_MODULE_1__.p)({l:b$1(e.l,n.l,g),a:b$1(e.a,n.a,g),b:b$1(e.b,n.b,g)});return new _DataBrowser_5ce2ade9_js__WEBPACK_IMPORTED_MODULE_0__.bu({a:b$1(f.a,w.a,g),...o})}throw new Error(`Unexpected operator "${this.operator}"`)}interpolationUniformValue(t,e){const r=this.stops;if(1===r.length)return 0;if(t>=r[r.length-1][0])return 0;let s=0;for(;++s<r.length&&!(t<r[s][0]););const n=r[s-1][0],a=r[s][0];return U.interpolationRatio(this.interpolation,e,n,a)}getInterpolationRange(t){const e=this.stops;if(1===e.length){const t=e[0][0];return [t,t]}const r=e[e.length-1][0];if(t>=r)return [r,r];let s=0;for(;++s<e.length&&!(t<e[s][0]););return [e[s-1][0],e[s][0]]}static interpolationRatio(t,e,r,s){let a=0;if("linear"===t[0])a=U.exponentialInterpolationRatio(e,1,r,s);else if("exponential"===t[0])a=U.exponentialInterpolationRatio(e,t[1],r,s);else if("cubic-bezier"===t[0]){a=e$1(t[1],t[2],t[3],t[4])(U.exponentialInterpolationRatio(e,1,r,s),1e-5);}return a<0?a=0:a>1&&(a=1),a}static exponentialInterpolationRatio(t,e,r,s){const n=s-r;if(0===n)return 0;const a=t-r;return 1===e?a/n:(e**a-1)/(e**n-1)}}class B{constructor(t,e,r){this.type=t,this.input=e,this.stops=r;}static parse(t,e){if(t.length<5)throw new Error('"step" expects at least 4 arguments');if(t.length%2!=1)throw new Error('"step" expects an even number of arguments');const r=ht(t[1],e,e$2);let s;const n=[];n.push([-1/0,ht(t[2],e)]);for(let a=3;a<t.length;a+=2){const r=t[a];if("number"!=typeof r)throw new Error('"step" requires stop inputs as literal numbers');if(n.length&&n[n.length-1][0]>=r)throw new Error('"step" requires strictly ascending stop inputs');const o=ht(t[a+1],e);s||(s=o.type),n.push([r,o]);}return new B(s,r,n)}evaluate(t,e){const r=this.stops;if(1===r.length)return r[0][1].evaluate(t,e);const s=this.input.evaluate(t,e);let n=0;for(;++n<r.length&&!(s<r[n][0]););return this.stops[n-1][1].evaluate(t,e)}}class S{constructor(t,e){this.type=t,this.output=e;}static parse(t,e,r){if(t.length<4)throw new Error('"let" expects at least 3 arguments');if(t.length%2==1)throw new Error('"let" expects an odd number of arguments');const s=new y$1(e);for(let a=1;a<t.length-1;a+=2){const r=t[a];if("string"!=typeof r)throw new Error(`"let" requires a string to define variable names - found ${r}`);s.add(r,ht(t[a+1],e));}const n=ht(t[t.length-1],s,r);return new S(n.type,n)}evaluate(t,e){return this.output.evaluate(t,e)}}class O{constructor(t,e){this.type=t,this.output=e;}static parse(t,e,r){if(2!==t.length||"string"!=typeof t[1])throw new Error('"var" requires just one literal string argument');const s=e.get(t[1]);if(!s)throw new Error(`${t[1]} must be defined before being used in a "var" expression`);return new O(r||u,s)}evaluate(t,e){return this.output.evaluate(t,e)}}class P$1{constructor(t,e,r){this.type=t,this.index=e,this.array=r;}static parse(t,e){if(3!==t.length)throw new Error('"at" expects 2 arguments');const r=ht(t[1],e,e$2),s=ht(t[2],e);return new P$1(s.type.itemType,r,s)}evaluate(t,e){const r=this.index.evaluate(t,e),s=this.array.evaluate(t,e);if(r<0||r>=s.length)throw new Error('"at" index out of bounds');if(r!==Math.floor(r))throw new Error('"at" index must be an integer');return s[r]}}class T{constructor(t,e){this.key=t,this.obj=e,this.type=u;}static parse(t,e){let r,s;switch(t.length){case 2:return r=ht(t[1],e),new T(r);case 3:return r=ht(t[1],e),s=ht(t[2],e),new T(r,s);default:throw new Error('"get" expects 1 or 2 arguments')}}evaluate(t,e){const r=this.key.evaluate(t,e);if(this.obj){return this.obj.evaluate(t,e)[r]}return t.values[r]}}class F{constructor(t,e){this.key=t,this.obj=e,this.type=i;}static parse(t,e){let r,s;switch(t.length){case 2:return r=ht(t[1],e),new F(r);case 3:return r=ht(t[1],e),s=ht(t[2],e),new F(r,s);default:throw new Error('"has" expects 1 or 2 arguments')}}evaluate(t,e){const r=this.key.evaluate(t,e);if(this.obj){return r in this.obj.evaluate(t,e)}return void 0!==t.values[r]}}class G{constructor(t,e){this.key=t,this.vals=e,this.type=i;}static parse(t,e){if(3!==t.length)throw new Error('"in" expects 2 arguments');return new G(ht(t[1],e),ht(t[2],e))}evaluate(t,e){const r=this.key.evaluate(t,e);return -1!==this.vals.evaluate(t,e).indexOf(r)}}class V{constructor(t,e,r){this.item=t,this.array=e,this.from=r,this.type=e$2;}static parse(t,e){if(t.length<3||t.length>4)throw new Error('"index-of" expects 3 or 4 arguments');const r=ht(t[1],e),s=ht(t[2],e);if(4===t.length){const n=ht(t[3],e,e$2);return new V(r,s,n)}return new V(r,s)}evaluate(t,e){const r=this.item.evaluate(t,e),s=this.array.evaluate(t,e);if(this.from){const n=this.from.evaluate(t,e);if(n!==Math.floor(n))throw new Error('"index-of" index must be an integer');return s.indexOf(r,n)}return s.indexOf(r)}}class D$1{constructor(t){this.arg=t,this.type=e$2;}static parse(t,e){if(2!==t.length)throw new Error('"length" expects 2 arguments');const r=ht(t[1],e);return new D$1(r)}evaluate(t,e){const r=this.arg.evaluate(t,e);if("string"==typeof r)return r.length;if(Array.isArray(r))return r.length;throw new Error('"length" expects string or array')}}class H{constructor(t,e,r,s){this.type=t,this.array=e,this.from=r,this.to=s;}static parse(t,e){if(t.length<3||t.length>4)throw new Error('"slice" expects 2 or 3 arguments');const r=ht(t[1],e),s=ht(t[2],e,e$2);if(s.type!==e$2)throw new Error('"slice" index must return a number');if(4===t.length){const n=ht(t[3],e,e$2);if(n.type!==e$2)throw new Error('"slice" index must return a number');return new H(r.type,r,s,n)}return new H(r.type,r,s)}evaluate(t,e){const r=this.array.evaluate(t,e);if(!Array.isArray(r)&&"string"!=typeof r)throw new Error('"slice" input must be an array or a string');const s=this.from.evaluate(t,e);if(s<0||s>=r.length)throw new Error('"slice" index out of bounds');if(s!==Math.floor(s))throw new Error('"slice" index must be an integer');if(this.to){const n=this.to.evaluate(t,e);if(n<0||n>=r.length)throw new Error('"slice" index out of bounds');if(n!==Math.floor(n))throw new Error('"slice" index must be an integer');return r.slice(s,n)}return r.slice(s)}}class J{constructor(){this.type=i;}static parse(t){if(1!==t.length)throw new Error('"has-id" expects no arguments');return new J}evaluate(t,e){return void 0!==t.id}}class K{constructor(t,e){this.args=t,this.calculate=e,this.type=e$2;}static parse(t,e,r){const s=t.slice(1).map((t=>ht(t,e)));return new K(s,r)}evaluate(t,e){let r;return this.args&&(r=this.args.map((r=>r.evaluate(t,e)))),this.calculate(r)}}class Q extends K{static parse(t,e){switch(t.length){case 2:return K.parse(t,e,(t=>-t[0]));case 3:return K.parse(t,e,(t=>t[0]-t[1]));default:throw new Error('"-" expects 1 or 2 arguments')}}}class W extends K{static parse(t,e){return K.parse(t,e,(t=>{let e=1;for(const r of t)e*=r;return e}))}}class X extends K{static parse(t,e){if(3===t.length)return K.parse(t,e,(t=>t[0]/t[1]));throw new Error('"/" expects 2 arguments')}}class Y extends K{static parse(t,e){if(3===t.length)return K.parse(t,e,(t=>t[0]%t[1]));throw new Error('"%" expects 2 arguments')}}class Z extends K{static parse(t,e){if(3===t.length)return K.parse(t,e,(t=>t[0]**t[1]));throw new Error('"^" expects 1 or 2 arguments')}}class tt extends K{static parse(t,e){return K.parse(t,e,(t=>{let e=0;for(const r of t)e+=r;return e}))}}class et{constructor(t,e){this.args=t,this.calculate=e,this.type=e$2;}static parse(t,e){const r=t.slice(1).map((t=>ht(t,e)));return new et(r,et.ops[t[0]])}evaluate(t,e){let r;return this.args&&(r=this.args.map((r=>r.evaluate(t,e)))),this.calculate(r)}}et.ops={abs:t=>Math.abs(t[0]),acos:t=>Math.acos(t[0]),asin:t=>Math.asin(t[0]),atan:t=>Math.atan(t[0]),ceil:t=>Math.ceil(t[0]),cos:t=>Math.cos(t[0]),e:()=>Math.E,floor:t=>Math.floor(t[0]),ln:t=>Math.log(t[0]),ln2:()=>Math.LN2,log10:t=>Math.log(t[0])/Math.LN10,log2:t=>Math.log(t[0])/Math.LN2,max:t=>Math.max(...t),min:t=>Math.min(...t),pi:()=>Math.PI,round:t=>Math.round(t[0]),sin:t=>Math.sin(t[0]),sqrt:t=>Math.sqrt(t[0]),tan:t=>Math.tan(t[0])};class rt{constructor(t){this.args=t,this.type=t$2;}static parse(t,e){return new rt(t.slice(1).map((t=>ht(t,e))))}evaluate(t,e){return this.args.map((r=>r.evaluate(t,e))).join("")}}class st{constructor(t,e){this.arg=t,this.calculate=e,this.type=t$2;}static parse(t,e){if(2!==t.length)throw new Error(`${t[0]} expects 1 argument`);const r=ht(t[1],e);return new st(r,st.ops[t[0]])}evaluate(t,e){return this.calculate(this.arg.evaluate(t,e))}}st.ops={downcase:t=>t.toLowerCase(),upcase:t=>t.toUpperCase()};class nt{constructor(t){this.args=t,this.type=o$1;}static parse(t,e){if(4!==t.length)throw new Error('"rgb" expects 3 arguments');const r=t.slice(1).map((t=>ht(t,e)));return new nt(r)}evaluate(e,r){const s=this._validate(this.args[0].evaluate(e,r)),n=this._validate(this.args[1].evaluate(e,r)),a=this._validate(this.args[2].evaluate(e,r));return new _DataBrowser_5ce2ade9_js__WEBPACK_IMPORTED_MODULE_0__.bu({r:s,g:n,b:a})}_validate(t){if("number"!=typeof t||t<0||t>255)throw new Error(`${t}: invalid color component`);return Math.round(t)}}class at{constructor(t){this.args=t,this.type=o$1;}static parse(t,e){if(5!==t.length)throw new Error('"rgba" expects 4 arguments');const r=t.slice(1).map((t=>ht(t,e)));return new at(r)}evaluate(e,r){const s=this._validate(this.args[0].evaluate(e,r)),n=this._validate(this.args[1].evaluate(e,r)),a=this._validate(this.args[2].evaluate(e,r)),o=this._validateAlpha(this.args[3].evaluate(e,r));return new _DataBrowser_5ce2ade9_js__WEBPACK_IMPORTED_MODULE_0__.bu({r:s,g:n,b:a,a:o})}_validate(t){if("number"!=typeof t||t<0||t>255)throw new Error(`${t}: invalid color component`);return Math.round(t)}_validateAlpha(t){if("number"!=typeof t||t<0||t>1)throw new Error(`${t}: invalid alpha color component`);return t}}class ot{constructor(t){this.color=t,this.type=a$2(e$2,4);}static parse(t,e){if(2!==t.length)throw new Error('"to-rgba" expects 1 argument');const r=ht(t[1],e);return new ot(r)}evaluate(e,r){return new _DataBrowser_5ce2ade9_js__WEBPACK_IMPORTED_MODULE_0__.bu(this.color.evaluate(e,r)).toRgba()}}class it{constructor(t,e){this.type=t,this.args=e;}static parse(t,e){const r=t[0];if(t.length<2)throw new Error(`${r} expects at least one argument`);let s,n=1;if("array"===r){if(t.length>2){switch(t[1]){case"string":s=t$2;break;case"number":s=e$2;break;case"boolean":s=i;break;default:throw new Error('"array" type argument must be string, number or boolean')}n++;}else s=u;let e;if(t.length>3){if(e=t[2],null!==e&&("number"!=typeof e||e<0||e!==Math.floor(e)))throw new Error('"array" length argument must be a positive integer literal');n++;}s=a$2(s,e);}else switch(r){case"string":s=t$2;break;case"number":s=e$2;break;case"boolean":s=i;break;case"object":s=f$2;}const a=[];for(;n<t.length;n++){const r=ht(t[n],e);a.push(r);}return new it(s,a)}evaluate(t,e){let r;for(const s of this.args){const n=s.evaluate(t,e);if(r=l(n),c$1(r,this.type))return n}throw new Error(`Expected ${k$1(this.type)} but got ${k$1(r)}`)}}class lt{constructor(t,e){this.type=t,this.args=e;}static parse(t,e){const r=t[0],s=lt.types[r];if(s===i||s===t$2){if(2!==t.length)throw new Error(`${r} expects one argument`)}else if(t.length<2)throw new Error(`${r} expects at least one argument`);const n=[];for(let a=1;a<t.length;a++){const r=ht(t[a],e);n.push(r);}return new lt(s,n)}evaluate(e,r){if(this.type===i)return Boolean(this.args[0].evaluate(e,r));if(this.type===t$2)return d$2(this.args[0].evaluate(e,r));if(this.type===e$2){for(const t of this.args){const s=Number(t.evaluate(e,r));if(!isNaN(s))return s}return null}if(this.type===o$1){for(const s of this.args)try{const n=lt.toColor(s.evaluate(e,r));if(n instanceof _DataBrowser_5ce2ade9_js__WEBPACK_IMPORTED_MODULE_0__.bu)return n}catch{}return null}}static toBoolean(t){return Boolean(t)}static toString(t){return d$2(t)}static toNumber(t){const e=Number(t);if(isNaN(e))throw new Error(`"${t}" is not a number`);return e}static toColor(e){if(e instanceof _DataBrowser_5ce2ade9_js__WEBPACK_IMPORTED_MODULE_0__.bu)return e;if("string"==typeof e){const r=_DataBrowser_5ce2ade9_js__WEBPACK_IMPORTED_MODULE_0__.bu.fromString(e);if(r)return r;throw new Error(`"${e}" is not a color`)}if(Array.isArray(e))return _DataBrowser_5ce2ade9_js__WEBPACK_IMPORTED_MODULE_0__.bu.fromArray(e);throw new Error(`"${e}" is not a color`)}}lt.types={"to-boolean":i,"to-color":o$1,"to-number":e$2,"to-string":t$2};class ut{constructor(t){this.val=t,this.type=l(t);}static parse(t){if(2!==t.length)throw new Error('"literal" expects 1 argument');return new ut(t[1])}evaluate(t,e){return this.val}}class ct{constructor(t){this.arg=t,this.type=t$2;}static parse(t,e){if(2!==t.length)throw new Error('"typeof" expects 1 argument');return new ct(ht(t[1],e))}evaluate(t,e){return k$1(l(this.arg.evaluate(t,e)))}}function ht(t,e,r){const s=typeof t;if("string"===s||"boolean"===s||"number"===s||null===t){if(r)switch(r.kind){case"string":"string"!==s&&(t=lt.toString(t));break;case"number":"number"!==s&&(t=lt.toNumber(t));break;case"color":t=lt.toColor(t);}t=["literal",t];}if(!Array.isArray(t)||0===t.length)throw new Error("Expression must be a non empty array");const n=t[0];if("string"!=typeof n)throw new Error("First element of expression must be a string");const a=pt[n];if(void 0===a)throw new Error(`Invalid expression operator "${n}"`);if(!a)throw new Error(`Unimplemented expression operator "${n}"`);return a.parse(t,e,r)}const pt={array:it,boolean:it,collator:null,format:null,image:null,literal:ut,number:it,"number-format":null,object:it,string:it,"to-boolean":lt,"to-color":lt,"to-number":lt,"to-string":lt,typeof:ct,accumulated:null,"feature-state":null,"geometry-type":b,id:v,"line-progress":null,properties:d$1,at:P$1,get:T,has:F,in:G,"index-of":V,length:D$1,slice:H,"!":N,"!=":M,"<":k,"<=":A,"==":$,">":j,">=":q,all:_,any:R,case:z,coalesce:I,match:L,within:null,interpolate:U,"interpolate-hcl":U,"interpolate-lab":U,step:B,let:S,var:O,concat:rt,downcase:st,"is-supported-script":null,"resolved-locale":null,upcase:st,rgb:nt,rgba:at,"to-rgba":ot,"-":Q,"*":W,"/":X,"%":Y,"^":Z,"+":tt,abs:et,acos:et,asin:et,atan:et,ceil:et,cos:et,e:et,floor:et,ln:et,ln2:et,log10:et,log2:et,max:et,min:et,pi:et,round:et,sin:et,sqrt:et,tan:et,zoom:x,"heatmap-density":null,"has-id":J,none:C};

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
class t{constructor(e){this._expression=e;}filter(e,r){if(!this._expression)return !0;try{return this._expression.evaluate(e,r)}catch(t){return console.log(t.message),!0}}static createFilter(n){if(!n)return null;this.isLegacyFilter(n)&&(n=this.convertLegacyFilter(n));try{const s=ht(n,null,i);return new t(s)}catch(s){return console.log(s.message),null}}static isLegacyFilter(e){if(!Array.isArray(e))return !0;if(0===e.length)return !0;switch(e[0]){case"==":case"!=":case">":case"<":case">=":case"<=":return 3===e.length&&"string"==typeof e[1]&&!Array.isArray(e[2]);case"in":return e.length>=3&&"string"==typeof e[1]&&!Array.isArray(e[2]);case"!in":return !0;case"any":case"all":for(let r=1;r<e.length;r++)if(!this.isLegacyFilter(e[1]))return !1;return !0;case"none":return !0;case"has":return 2===e.length&&("$id"===e[1]||"$type"===e[1]);case"!has":return !0;default:return !1}}static convertLegacyFilter(e){if(!Array.isArray(e)||0===e.length)return !0;const r=e[0];if(1===e.length)return "any"!==r;switch(r){case"==":return t.convertComparison("==",e[1],e[2]);case"!=":return t.negate(t.convertComparison("==",e[1],e[2]));case">":case"<":case">=":case"<=":return t.convertComparison(r,e[1],e[2]);case"in":return t.convertIn(e[1],e.slice(2));case"!in":return t.negate(t.convertIn(e[1],e.slice(2)));case"any":case"all":case"none":return t.convertCombining(r,e.slice(1));case"has":return t.convertHas(e[1]);case"!has":return t.negate(t.convertHas(e[1]));default:throw new Error("Unexpected legacy filter.")}}static convertComparison(e,r,t){switch(r){case"$type":return [e,["geometry-type"],t];case"$id":return [e,["id"],t];default:return [e,["get",r],t]}}static convertIn(e,r){switch(e){case"$type":return ["in",["geometry-type"],["literal",r]];case"$id":return ["in",["id"],["literal",r]];default:return ["in",["get",e],["literal",r]]}}static convertHas(e){switch(e){case"$type":return !0;case"$id":return ["has-id"];default:return ["has",e]}}static convertCombining(e,r){return [e].concat(r.map(this.convertLegacyFilter))}static negate(e){return ["!",e]}}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
class e{}e.backgroundLayoutDefinition={visibility:{type:"enum",values:["visible","none"],default:0}},e.fillLayoutDefinition={visibility:{type:"enum",values:["visible","none"],default:0}},e.lineLayoutDefinition={visibility:{type:"enum",values:["visible","none"],default:0},"line-cap":{type:"enum",values:["butt","round","square"],default:0},"line-join":{type:"enum",values:["bevel","round","miter"],default:2},"line-miter-limit":{type:"number",default:2},"line-round-limit":{type:"number",default:1.05}},e.symbolLayoutDefinition={visibility:{type:"enum",values:["visible","none"],default:0},"symbol-avoid-edges":{type:"boolean",default:!1},"symbol-placement":{type:"enum",values:["point","line","line-center"],default:0},"symbol-sort-key":{type:"number",default:-1},"symbol-spacing":{type:"number",minimum:1,default:250},"icon-allow-overlap":{type:"boolean",default:!1},"icon-anchor":{type:"enum",values:["center","left","right","top","bottom","top-left","top-right","bottom-left","bottom-right"],default:0},"icon-ignore-placement":{type:"boolean",default:!1},"icon-image":{type:"string"},"icon-keep-upright":{type:"boolean",default:!1},"icon-offset":{type:"array",value:"number",length:2,default:[0,0]},"icon-optional":{type:"boolean",default:!1},"icon-padding":{type:"number",minimum:0,default:2},"icon-rotate":{type:"number",default:0},"icon-rotation-alignment":{type:"enum",values:["map","viewport","auto"],default:2},"icon-size":{type:"number",minimum:0,default:1},"text-allow-overlap":{type:"boolean",default:!1},"text-anchor":{type:"enum",values:["center","left","right","top","bottom","top-left","top-right","bottom-left","bottom-right"],default:0},"text-field":{type:"string"},"text-font":{type:"array",value:"string",default:["Open Sans Regular","Arial Unicode MS Regular"]},"text-ignore-placement":{type:"boolean",default:!1},"text-justify":{type:"enum",values:["auto","left","center","right"],default:2},"text-keep-upright":{type:"boolean",default:!0},"text-letter-spacing":{type:"number",default:0},"text-line-height":{type:"number",default:1.2},"text-max-angle":{type:"number",minimum:0,default:45},"text-max-width":{type:"number",minimum:0,default:10},"text-offset":{type:"array",value:"number",length:2,default:[0,0]},"text-optional":{type:"boolean",default:!1},"text-padding":{type:"number",minimum:0,default:2},"text-rotate":{type:"number",default:0},"text-rotation-alignment":{type:"enum",values:["map","viewport","auto"],default:2},"text-size":{type:"number",minimum:0,default:16},"text-transform":{type:"enum",values:["none","uppercase","lowercase"],default:0},"text-writing-mode":{type:"array",value:"enum",values:["horizontal","vertical"],default:[0]}},e.circleLayoutDefinition={visibility:{type:"enum",values:["visible","none"],default:0}},e.backgroundPaintDefinition={"background-color":{type:"color",default:[0,0,0,1]},"background-opacity":{type:"number",minimum:0,maximum:1,default:1},"background-pattern":{type:"string"}},e.fillPaintDefinition={"fill-antialias":{type:"boolean",default:!0},"fill-color":{type:"color",default:[0,0,0,1]},"fill-opacity":{type:"number",minimum:0,maximum:1,default:1},"fill-outline-color":{type:"color",default:[0,0,0,0]},"fill-pattern":{type:"string"},"fill-translate":{type:"array",value:"number",length:2,default:[0,0]},"fill-translate-anchor":{type:"enum",values:["map","viewport"],default:0}},e.linePaintDefinition={"line-blur":{type:"number",minimum:0,default:0},"line-color":{type:"color",default:[0,0,0,1]},"line-dasharray":{type:"array",value:"number",default:[]},"line-gap-width":{type:"number",minimum:0,default:0},"line-offset":{type:"number",default:0},"line-opacity":{type:"number",minimum:0,maximum:1,default:1},"line-pattern":{type:"string"},"line-translate":{type:"array",value:"number",length:2,default:[0,0]},"line-translate-anchor":{type:"enum",values:["map","viewport"],default:0},"line-width":{type:"number",minimum:0,default:1}},e.symbolPaintDefinition={"icon-color":{type:"color",default:[0,0,0,1]},"icon-halo-blur":{type:"number",minimum:0,default:0},"icon-halo-color":{type:"color",default:[0,0,0,0]},"icon-halo-width":{type:"number",minimum:0,default:0},"icon-opacity":{type:"number",minimum:0,maximum:1,default:1},"icon-translate":{type:"array",value:"number",length:2,default:[0,0]},"icon-translate-anchor":{type:"enum",values:["map","viewport"],default:0},"text-color":{type:"color",default:[0,0,0,1]},"text-halo-blur":{type:"number",minimum:0,default:0},"text-halo-color":{type:"color",default:[0,0,0,0]},"text-halo-width":{type:"number",minimum:0,default:0},"text-opacity":{type:"number",minimum:0,maximum:1,default:1},"text-translate":{type:"array",value:"number",length:2,default:[0,0]},"text-translate-anchor":{type:"enum",values:["map","viewport"],default:0}},e.rasterPaintDefinition={"raster-opacity":{type:"number",minimum:0,maximum:1,default:1},"raster-hue-rotate":{type:"number",default:0},"raster-brightness-min":{type:"number",minimum:0,maximum:1,default:0},"raster-brightness-max":{type:"number",minimum:0,maximum:1,default:1},"raster-saturation":{type:"number",minimum:-1,maximum:1,default:0},"raster-contrast":{type:"number",minimum:-1,maximum:1,default:0},"raster-fade-duration":{type:"number",minimum:0,default:300}},e.circlePaintDefinition={"circle-blur":{type:"number",minimum:0,default:0},"circle-color":{type:"color",default:[0,0,0,1]},"circle-opacity":{type:"number",minimum:0,maximum:1,default:1},"circle-radius":{type:"number",minimum:0,default:5},"circle-stroke-color":{type:"color",default:[0,0,0,1]},"circle-stroke-opacity":{type:"number",minimum:0,maximum:1,default:1},"circle-stroke-width":{type:"number",minimum:0,default:0},"circle-translate":{type:"array",value:"number",length:2,default:[0,0]},"circle-translate-anchor":{type:"enum",values:["map","viewport"],default:0}};

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
class h{constructor(t,e){let a;switch(this.isDataDriven=!1,this.interpolator=null,t.type){case"number":case"color":a=!0;break;case"array":a="number"===t.value;break;default:a=!1;}if(null==e&&(e=t.default),Array.isArray(e)&&e.length>0&&pt[e[0]]){const a={number:e$2,color:o$1,string:t$2,boolean:i,enum:t$2};try{const l="array"===t.type?a$2(a[t.value]||u,t.length):a[t.type],s=ht(e,null,l);this.getValue=this._buildExpression(s,t),this.isDataDriven=!0,s instanceof U&&s.input instanceof x&&(this.interpolator=s);}catch(c){console.log(c.message),this.getValue=this._buildSimple(t.default);}return}a&&"interval"===e.type&&(a=!1);const h=e&&e.stops&&e.stops.length>0;if(h)for(const r of e.stops)r[1]=this._validate(r[1],t);if(this.isDataDriven=!!e&&!!e.property,this.isDataDriven)if(void 0!==e.default&&(e.default=this._validate(e.default,t)),h)switch(e.type){case"identity":this.getValue=this._buildIdentity(e,t);break;case"categorical":this.getValue=this._buildCategorical(e,t);break;default:this.getValue=a?this._buildInterpolate(e,t):this._buildInterval(e,t);}else this.getValue=this._buildIdentity(e,t);else h?this.getValue=a?this._buildZoomInterpolate(e):this._buildZoomInterval(e):(e=this._validate(e,t),this.getValue=this._buildSimple(e));}_validate(t,e){if("number"===e.type){if(t<e.minimum)return e.minimum;if(t>e.maximum)return e.maximum}else "color"===e.type?t=h._parseColor(t):"enum"===e.type?"string"==typeof t&&(t=e.values.indexOf(t)):"array"===e.type&&"enum"===e.value?t=t.map((r=>"string"==typeof t?e.values.indexOf(r):r)):"string"===e.type&&(t=d$2(t));return t}_buildSimple(t){return ()=>t}_buildExpression(t,e){return (r,i)=>{try{const a=t.evaluate(i,r);return void 0===a?e.default:this._validate(a,e)}catch(a){return console.log(a.message),e.default}}}_buildIdentity(t,e){return (r,i)=>{let a;return i&&(a=i.values[t.property]),void 0!==a?this._validate(a,e):void 0!==t.default?t.default:e.default}}_buildCategorical(t,e){return (r,i)=>{let a;return i&&(a=i.values[t.property]),a=this._categorical(a,t.stops),void 0!==a?a:void 0!==t.default?t.default:e.default}}_buildInterval(t,e){return (r,i)=>{let a;return i&&(a=i.values[t.property]),"number"==typeof a?this._interval(a,t.stops):void 0!==t.default?t.default:e.default}}_buildInterpolate(t,e){return (r,i)=>{let a;return i&&(a=i.values[t.property]),"number"==typeof a?this._interpolate(a,t.stops,t.base||1):void 0!==t.default?t.default:e.default}}_buildZoomInterpolate(t){return e=>this._interpolate(e,t.stops,t.base||1)}_buildZoomInterval(t){return e=>this._interval(e,t.stops)}_categorical(t,e){const r=e.length;for(let i=0;i<r;i++)if(e[i][0]===t)return e[i][1]}_interval(t,e){const r=e.length;let i=0;for(let a=0;a<r&&e[a][0]<=t;a++)i=a;return e[i][1]}_interpolate(t,r,i){let a,l;const s=r.length;for(let e=0;e<s;e++){const i=r[e];if(!(i[0]<=t)){l=i;break}a=i;}if(a&&l){const r=l[0]-a[0],s=t-a[0],o=1===i?s/r:(i**s-1)/(i**r-1);if(Array.isArray(a[1])){const t=a[1],r=l[1],i=[];for(let a=0;a<t.length;a++)i.push(b$1(t[a],r[a],o));return i}return b$1(a[1],l[1],o)}return a?a[1]:l?l[1]:void 0}static _isEmpty(t){for(const e in t)if(t.hasOwnProperty(e))return !1;return !0}static _parseColor(e){return Array.isArray(e)?e:("string"==typeof e&&(e=new _DataBrowser_5ce2ade9_js__WEBPACK_IMPORTED_MODULE_0__.bu(e)),e instanceof _DataBrowser_5ce2ade9_js__WEBPACK_IMPORTED_MODULE_0__.bu?this._isEmpty(e)?void 0:_DataBrowser_5ce2ade9_js__WEBPACK_IMPORTED_MODULE_0__.bu.toUnitRGBA(e):e)}}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
class p{constructor(t,i,e$1,a){switch(this.type=t,this.typeName=i.type,this.id=i.id,this.source=i.source,this.sourceLayer=i["source-layer"],this.minzoom=i.minzoom,this.maxzoom=i.maxzoom,this.filter=i.filter,this.layout=i.layout,this.paint=i.paint,this.z=e$1,this.uid=a,t){case 0:this._layoutDefinition=e.backgroundLayoutDefinition,this._paintDefinition=e.backgroundPaintDefinition;break;case 1:this._layoutDefinition=e.fillLayoutDefinition,this._paintDefinition=e.fillPaintDefinition;break;case 2:this._layoutDefinition=e.lineLayoutDefinition,this._paintDefinition=e.linePaintDefinition;break;case 3:this._layoutDefinition=e.symbolLayoutDefinition,this._paintDefinition=e.symbolPaintDefinition;break;case 4:this._layoutDefinition=e.circleLayoutDefinition,this._paintDefinition=e.circlePaintDefinition;}this._layoutProperties=this._parseLayout(this.layout),this._paintProperties=this._parsePaint(this.paint);}getFeatureFilter(){return void 0!==this._featureFilter?this._featureFilter:this._featureFilter=t.createFilter(this.filter)}getLayoutProperty(t){return this._layoutProperties[t]}getPaintProperty(t){return this._paintProperties[t]}getLayoutValue(t,i,e){let a;const o=this._layoutProperties[t];return o&&(a=o.getValue(i,e)),void 0===a&&(a=this._layoutDefinition[t].default),a}getPaintValue(t,i,e){let a;const o=this._paintProperties[t];return o&&(a=o.getValue(i,e)),void 0===a&&(a=this._paintDefinition[t].default),a}isPainterDataDriven(){const t=this._paintProperties;if(t)for(const i in t)if(t[i].isDataDriven)return !0;return !1}_parseLayout(t){const i={};for(const e in t){const a=this._layoutDefinition[e];a&&(i[e]=new h(a,t[e]));}return i}_parsePaint(t){const i={};for(const e in t){const a=this._paintDefinition[e];a&&(i[e]=new h(a,t[e]));}return i}computeAttributesKey(t,i){let e=0,a=0;for(const o of i){const t="icon-size"===o||"text-size"===o?this.getLayoutProperty(o):this.getPaintProperty(o);a|=(null!=t&&t.interpolator?2:null!=t&&t.isDataDriven?1:0)<<e,e+=2;}return a<<3|t}}class g extends p{constructor(i,e,a,o){super(i,e,a,o),this.backgroundMaterial=new r$3(this.computeAttributesKey(0,r$3.ATTRIBUTES));}}class y extends p{constructor(t,i,o,r){super(t,i,o,r);const n=this.getPaintProperty("fill-color"),s=this.getPaintProperty("fill-opacity"),l=this.getPaintProperty("fill-pattern");this.hasDataDrivenColor=null==n?void 0:n.isDataDriven,this.hasDataDrivenOpacity=null==s?void 0:s.isDataDriven,this.hasDataDrivenFill=this.hasDataDrivenColor||this.hasDataDrivenOpacity||(null==l?void 0:l.isDataDriven);const h=this.getPaintProperty("fill-outline-color");this.outlineUsesFillColor=!h,this.hasDataDrivenOutlineColor=null==h?void 0:h.isDataDriven,this.hasDataDrivenOutline=h?h.isDataDriven:!!n&&n.isDataDriven,this.hasDataDrivenOutline=(h?this.hasDataDrivenOutlineColor:this.hasDataDrivenColor)||this.hasDataDrivenOpacity,this.fillMaterial=new t$5(this.computeAttributesKey(1,t$5.ATTRIBUTES)),this.outlineMaterial=new e$4(this.computeAttributesKey(2,this.outlineUsesFillColor?e$4.ATTRIBUTES_FILL:e$4.ATTRIBUTES_OUTLINE),this.outlineUsesFillColor);}}class D extends p{constructor(t,i,e$1,a){var r,n,s,h,p,g,y;super(t,i,e$1,a),this.lineMaterial=new t$4(this.computeAttributesKey(3,t$4.ATTRIBUTES)),this.hasDataDrivenLine=(null==(r=this.getPaintProperty("line-blur"))?void 0:r.isDataDriven)||(null==(n=this.getPaintProperty("line-color"))?void 0:n.isDataDriven)||(null==(s=this.getPaintProperty("line-gap-width"))?void 0:s.isDataDriven)||(null==(h=this.getPaintProperty("line-offset"))?void 0:h.isDataDriven)||(null==(p=this.getPaintProperty("line-opacity"))?void 0:p.isDataDriven)||(null==(g=this.getPaintProperty("line-pattern"))?void 0:g.isDataDriven)||(null==(y=this.getPaintProperty("line-width"))?void 0:y.isDataDriven);let D=i.paint["line-width"];D||(D=e.linePaintDefinition["line-width"].default);const P=this.getPaintProperty("line-width");this.isThinLine=!(null!=P&&P.isDataDriven)&&"number"==typeof D&&D<_definitions_e63f4fe2_js__WEBPACK_IMPORTED_MODULE_2__.S;}}class P extends p{constructor(t,i,e,a){var o,s,l,h,u,p,g,y,D,P,c,d;super(t,i,e,a),this.iconMaterial=new r$2(this.computeAttributesKey(4,r$2.ATTRIBUTES)),this.textMaterial=new i$1(this.computeAttributesKey(6,i$1.ATTRIBUTES)),this.hasDataDrivenIcon=(null==(o=this.getPaintProperty("icon-color"))?void 0:o.isDataDriven)||(null==(s=this.getPaintProperty("icon-halo-blur"))?void 0:s.isDataDriven)||(null==(l=this.getPaintProperty("icon-halo-color"))?void 0:l.isDataDriven)||(null==(h=this.getPaintProperty("icon-halo-width"))?void 0:h.isDataDriven)||(null==(u=this.getPaintProperty("icon-opacity"))?void 0:u.isDataDriven)||(null==(p=this.getLayoutProperty("icon-size"))?void 0:p.isDataDriven),this.hasDataDrivenText=(null==(g=this.getPaintProperty("text-color"))?void 0:g.isDataDriven)||(null==(y=this.getPaintProperty("text-halo-blur"))?void 0:y.isDataDriven)||(null==(D=this.getPaintProperty("text-halo-color"))?void 0:D.isDataDriven)||(null==(P=this.getPaintProperty("text-halo-width"))?void 0:P.isDataDriven)||(null==(c=this.getPaintProperty("text-opacity"))?void 0:c.isDataDriven)||(null==(d=this.getLayoutProperty("text-size"))?void 0:d.isDataDriven);}}class c extends p{constructor(t,e,a,o){super(t,e,a,o),this.circleMaterial=new e$5(this.computeAttributesKey(5,e$5.ATTRIBUTES));}}class d{constructor(t,i,e){var a,o,r,n,s;let l;this.allowOverlap=t.getLayoutValue("icon-allow-overlap",i),this.ignorePlacement=t.getLayoutValue("icon-ignore-placement",i),this.keepUpright=t.getLayoutValue("icon-keep-upright",i),this.optional=t.getLayoutValue("icon-optional",i),this.rotationAlignment=t.getLayoutValue("icon-rotation-alignment",i),2===this.rotationAlignment&&(this.rotationAlignment=e?0:1),l=t.getLayoutProperty("icon-anchor"),null!=(a=l)&&a.isDataDriven?this._anchorProp=l:this.anchor=t.getLayoutValue("icon-anchor",i),l=t.getLayoutProperty("icon-offset"),null!=(o=l)&&o.isDataDriven?this._offsetProp=l:this.offset=t.getLayoutValue("icon-offset",i),l=t.getLayoutProperty("icon-padding"),null!=(r=l)&&r.isDataDriven?this._paddingProp=l:this.padding=t.getLayoutValue("icon-padding",i),l=t.getLayoutProperty("icon-rotate"),null!=(n=l)&&n.isDataDriven?this._rotateProp=l:this.rotate=t.getLayoutValue("icon-rotate",i),l=t.getLayoutProperty("icon-size"),null!=(s=l)&&s.isDataDriven?this._sizeProp=l:this.size=t.getLayoutValue("icon-size",i);}update(t,i){this._anchorProp&&(this.anchor=this._anchorProp.getValue(t,i)),this._offsetProp&&(this.offset=this._offsetProp.getValue(t,i)),this._paddingProp&&(this.padding=this._paddingProp.getValue(t,i)),this._rotateProp&&(this.rotate=this._rotateProp.getValue(t,i)),this._sizeProp&&(this.size=this._sizeProp.getValue(t,i));}}class f{constructor(t,i,e){var a,o,r,n,s,l,h,u,p,g,y;let D;this.allowOverlap=t.getLayoutValue("text-allow-overlap",i),this.ignorePlacement=t.getLayoutValue("text-ignore-placement",i),this.keepUpright=t.getLayoutValue("text-keep-upright",i),this.optional=t.getLayoutValue("text-optional",i),this.rotationAlignment=t.getLayoutValue("text-rotation-alignment",i),2===this.rotationAlignment&&(this.rotationAlignment=e?0:1),D=t.getLayoutProperty("text-anchor"),null!=(a=D)&&a.isDataDriven?this._anchorProp=D:this.anchor=t.getLayoutValue("text-anchor",i),D=t.getLayoutProperty("text-justify"),null!=(o=D)&&o.isDataDriven?this._justifyProp=D:this.justify=t.getLayoutValue("text-justify",i),D=t.getLayoutProperty("text-letter-spacing"),null!=(r=D)&&r.isDataDriven?this._letterSpacingProp=D:this.letterSpacing=t.getLayoutValue("text-letter-spacing",i),D=t.getLayoutProperty("text-line-height"),null!=(n=D)&&n.isDataDriven?this._lineHeightProp=D:this.lineHeight=t.getLayoutValue("text-line-height",i),D=t.getLayoutProperty("text-max-angle"),null!=(s=D)&&s.isDataDriven?this._maxAngleProp=D:this.maxAngle=t.getLayoutValue("text-max-angle",i),D=t.getLayoutProperty("text-max-width"),null!=(l=D)&&l.isDataDriven?this._maxWidthProp=D:this.maxWidth=t.getLayoutValue("text-max-width",i),D=t.getLayoutProperty("text-offset"),null!=(h=D)&&h.isDataDriven?this._offsetProp=D:this.offset=t.getLayoutValue("text-offset",i),D=t.getLayoutProperty("text-padding"),null!=(u=D)&&u.isDataDriven?this._paddingProp=D:this.padding=t.getLayoutValue("text-padding",i),D=t.getLayoutProperty("text-rotate"),null!=(p=D)&&p.isDataDriven?this._rotateProp=D:this.rotate=t.getLayoutValue("text-rotate",i),D=t.getLayoutProperty("text-size"),null!=(g=D)&&g.isDataDriven?this._sizeProp=D:this.size=t.getLayoutValue("text-size",i),D=t.getLayoutProperty("text-writing-mode"),null!=(y=D)&&y.isDataDriven?this._writingModeProp=D:this.writingMode=t.getLayoutValue("text-writing-mode",i);}update(t,i){this._anchorProp&&(this.anchor=this._anchorProp.getValue(t,i)),this._justifyProp&&(this.justify=this._justifyProp.getValue(t,i)),this._letterSpacingProp&&(this.letterSpacing=this._letterSpacingProp.getValue(t,i)),this._lineHeightProp&&(this.lineHeight=this._lineHeightProp.getValue(t,i)),this._maxAngleProp&&(this.maxAngle=this._maxAngleProp.getValue(t,i)),this._maxWidthProp&&(this.maxWidth=this._maxWidthProp.getValue(t,i)),this._offsetProp&&(this.offset=this._offsetProp.getValue(t,i)),this._paddingProp&&(this.padding=this._paddingProp.getValue(t,i)),this._rotateProp&&(this.rotate=this._rotateProp.getValue(t,i)),this._sizeProp&&(this.size=this._sizeProp.getValue(t,i)),this._writingModeProp&&(this.writingMode=this._writingModeProp.getValue(t,i));}}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
class a{constructor(e,t){if(this.backgroundBucketIds=[],this._uidToLayer=new Map,this._layerByName={},this._runningId=0,e.layers||(e.layers=[]),this.version=parseFloat(e.version),this.sprite=t?t.spriteUrl:e.sprite,this.glyphs=t?t.glyphsUrl:e.glyphs,this.layers=e.layers.map(((e,t,r)=>this._create(e,t,r))),this.layers){let e;for(let t=0;t<this.layers.length;t++)e=this.layers[t],this._layerByName[e.id.toLowerCase()]=e,this._uidToLayer.set(e.uid,e),0===e.type&&this.backgroundBucketIds.push(e.id);}this._identifyRefLayers();}isPainterDataDriven(e){const t=this._layerByName[e.toLowerCase()];return !!t&&t.isPainterDataDriven()}getStyleLayerId(e){return e>=this.layers.length?null:this.layers[e].id}getStyleLayerByUID(e){const t=this._uidToLayer.get(e);return null!=t?t:null}getStyleLayerIndex(e){const t=this._layerByName[e.toLowerCase()];return t?this.layers.indexOf(t):-1}setStyleLayer(e,t){if(!e||!e.id)return;t&&t>=this.layers.length&&(t=this.layers.length-1);let r,i=!0;const s=this._layerByName[e.id.toLowerCase()];if(s){const y=this.layers.indexOf(s);t||(t=y),t===y?(i=!1,r=a._recreateLayer(e,s),this.layers[t]=r):(this.layers.splice(y,1),r=this._create(e,t,this.layers),this.layers.splice(t,0,r));}else r=this._create(e,t,this.layers),!t||t>=this.layers.length?this.layers.push(r):this.layers.splice(t,0,r);this._layerByName[e.id.toLowerCase()]=r,this._uidToLayer.set(r.uid,r),i&&this._recomputeZValues(),this._identifyRefLayers();}getStyleLayer(e){const t=this._layerByName[e.toLowerCase()];return t?{type:t.typeName,id:t.id,source:t.source,"source-layer":t.sourceLayer,minzoom:t.minzoom,maxzoom:t.maxzoom,filter:t.filter,layout:t.layout,paint:t.paint}:null}deleteStyleLayer(e){const t=this._layerByName[e.toLowerCase()];if(t){delete this._layerByName[e.toLowerCase()],this._uidToLayer.delete(t.uid);const r=this.layers.indexOf(t);this.layers.splice(r,1),this._recomputeZValues(),this._identifyRefLayers();}}getLayerById(e){return this._layerByName[e.toLowerCase()]}getLayoutProperties(e){const t=this._layerByName[e.toLowerCase()];return t?t.layout:null}getPaintProperties(e){const t=this._layerByName[e.toLowerCase()];return t?t.paint:null}setPaintProperties(e,t){const r=this._layerByName[e.toLowerCase()];if(!r)return "";const i={type:r.typeName,id:r.id,source:r.source,"source-layer":r.sourceLayer,minzoom:r.minzoom,maxzoom:r.maxzoom,filter:r.filter,layout:r.layout,paint:t},s=a._recreateLayer(i,r),y=this.layers.indexOf(r);return this.layers[y]=s,this._layerByName[r.id.toLowerCase()]=s,this._uidToLayer.set(r.uid,s),r.id}setLayoutProperties(e,t){const r=this._layerByName[e.toLowerCase()];if(!r)return "";const i={type:r.typeName,id:r.id,source:r.source,"source-layer":r.sourceLayer,minzoom:r.minzoom,maxzoom:r.maxzoom,filter:r.filter,layout:t,paint:r.paint},s=a._recreateLayer(i,r),y=this.layers.indexOf(r);return this.layers[y]=s,this._layerByName[r.id.toLowerCase()]=s,this._uidToLayer.set(r.uid,s),r.id}setStyleLayerVisibility(e,t){const r=this._layerByName[e.toLowerCase()];if(!r)return;const i=r.layout||{};i.visibility=t;const s={type:r.typeName,id:r.id,source:r.source,"source-layer":r.sourceLayer,minzoom:r.minzoom,maxzoom:r.maxzoom,filter:r.filter,layout:i,paint:r.paint},y=a._recreateLayer(s,r),o=this.layers.indexOf(r);this.layers[o]=y,this._layerByName[r.id.toLowerCase()]=y,this._uidToLayer.set(r.uid,y);}getStyleLayerVisibility(e){var t;const r=this._layerByName[e.toLowerCase()];if(!r)return "none";const i=r.layout;return null!=(t=null==i?void 0:i.visibility)?t:"visible"}_recomputeZValues(){const e=this.layers,t=1/(e.length+1);for(let r=0;r<e.length;r++)e[r].z=1-(1+r)*t;}_identifyRefLayers(){const e=[],t=[];let r=0;for(const i of this.layers){if(1===i.type){const t=i;let s=i.source+"|"+i.sourceLayer;s+="|"+JSON.stringify(i.layout&&i.layout.visibility),s+="|"+JSON.stringify(i.minzoom),s+="|"+JSON.stringify(i.maxzoom),s+="|"+JSON.stringify(i.filter),(t.hasDataDrivenFill||t.hasDataDrivenOutline)&&(s+="|"+JSON.stringify(r)),e.push({key:s,layer:i});}if(2===i.type){const e=i;let s=i.source+"|"+i.sourceLayer;s+="|"+JSON.stringify(i.layout&&i.layout.visibility),s+="|"+JSON.stringify(i.minzoom),s+="|"+JSON.stringify(i.maxzoom),s+="|"+JSON.stringify(i.filter),s+="|"+JSON.stringify(i.layout&&i.layout["line-cap"]),s+="|"+JSON.stringify(i.layout&&i.layout["line-join"]),e.hasDataDrivenLine&&(s+="|"+JSON.stringify(r)),t.push({key:s,layer:i});}++r;}this._assignRefLayers(e),this._assignRefLayers(t);}_assignRefLayers(e){let t,r;e.sort(((e,t)=>e.key<t.key?-1:e.key>t.key?1:0));const i=e.length;for(let s=0;s<i;s++){const a=e[s];if(a.key===t)a.layer.refLayerId=r;else if(t=a.key,r=a.layer.id,1===a.layer.type&&!a.layer.getPaintProperty("fill-outline-color"))for(let y=s+1;y<i;y++){const i=e[y];if(i.key!==t)break;if(i.layer.getPaintProperty("fill-outline-color")){e[s]=i,e[y]=a,r=i.layer.id;break}}}}_create(a,y$1,o){const l=1-(1+y$1)*(1/(o.length+1)),n=this._runningId++;switch(a.type){case"background":return new g(0,a,l,n);case"fill":return new y(1,a,l,n);case"line":return new D(2,a,l,n);case"symbol":return new P(3,a,l,n);case"raster":throw new Error("Unsupported vector tile raster layer");case"circle":return new c(4,a,l,n)}throw new Error("Unknown vector tile layer")}static _recreateLayer(a,y$1){switch(a.type){case"background":return new g(0,a,y$1.z,y$1.uid);case"fill":return new y(1,a,y$1.z,y$1.uid);case"line":return new D(2,a,y$1.z,y$1.uid);case"symbol":return new P(3,a,y$1.z,y$1.uid);case"raster":throw new Error("Unsupported vector tile raster layer");case"circle":return new c(4,a,y$1.z,y$1.uid)}}}



//# sourceMappingURL=StyleRepository-533fd5df.js.map

/***/ }),

/***/ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/geoenrichment-components/dist/esm/colorUtils-c85d85b1.js":
/*!**************************************************************************************************************************!*\
  !*** ./extensions/widgets/arcgis/analysis/node_modules/@arcgis/geoenrichment-components/dist/esm/colorUtils-c85d85b1.js ***!
  \**************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   p: () => (/* binding */ p),
/* harmony export */   v: () => (/* binding */ v),
/* harmony export */   y: () => (/* binding */ y),
/* harmony export */   z: () => (/* binding */ z)
/* harmony export */ });
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
function n(n){return "r"in n&&"g"in n&&"b"in n}function t(n){return "h"in n&&"s"in n&&"v"in n}function r(n){return "l"in n&&"a"in n&&"b"in n}function u(n){return "l"in n&&"c"in n&&"h"in n}function o(n){return "x"in n&&"y"in n&&"z"in n}const e=[[.4124,.3576,.1805],[.2126,.7152,.0722],[.0193,.1192,.9505]],c=[[3.2406,-1.5372,-.4986],[-.9689,1.8758,.0415],[.0557,-.204,1.057]];function i(n,t){const r=[];let u,o;if(n[0].length!==t.length)throw "dimensions do not match";const e=n.length,c=n[0].length;let i=0;for(u=0;u<e;u++){for(i=0,o=0;o<c;o++)i+=n[u][o]*t[o];r.push(i);}return r}function a(n){const t=[n.r/255,n.g/255,n.b/255].map((n=>n<=.04045?n/12.92:((n+.055)/1.055)**2.4)),r=i(e,t);return {x:100*r[0],y:100*r[1],z:100*r[2]}}function h(n){const t=i(c,[n.x/100,n.y/100,n.z/100]).map((n=>{const t=n<=.0031308?12.92*n:1.055*n**(1/2.4)-.055;return Math.min(1,Math.max(t,0))}));return {r:Math.round(255*t[0]),g:Math.round(255*t[1]),b:Math.round(255*t[2])}}function s(n){const t=[n.x/95.047,n.y/100,n.z/108.883].map((n=>n>(6/29)**3?n**(1/3):1/3*(29/6)**2*n+4/29));return {l:116*t[1]-16,a:500*(t[0]-t[1]),b:200*(t[1]-t[2])}}function f(n){const t=n.l,r=[(t+16)/116+n.a/500,(t+16)/116,(t+16)/116-n.b/200].map((n=>n>6/29?n**3:3*(6/29)**2*(n-4/29)));return {x:95.047*r[0],y:100*r[1],z:108.883*r[2]}}function b(n){const t=n.l,r=n.a,u=n.b,o=Math.sqrt(r*r+u*u);let e=Math.atan2(u,r);return e=e>0?e:e+2*Math.PI,{l:t,c:o,h:e}}function l(n){const t=n.l,r=n.c,u=n.h;return {l:t,a:r*Math.cos(u),b:r*Math.sin(u)}}function g(n){return s(a(n))}function M(n){return h(f(n))}function m(n){return b(s(a(n)))}function d(n){return h(f(l(n)))}function x(n){const t=n.r,r=n.g,u=n.b,o=Math.max(t,r,u),e=o-Math.min(t,r,u);let c=o,i=0===e?0:o===t?(r-u)/e%6:o===r?(u-t)/e+2:(t-r)/e+4,a=0===e?0:e/c;return i<0&&(i+=6),i*=60,a*=100,c*=100/255,{h:i,s:a,v:c}}function k(n){const t=(n.h+360)%360/60,r=n.s/100,u=n.v/100*255,o=u*r,e=o*(1-Math.abs(t%2-1));let c;switch(Math.floor(t)){case 0:c={r:o,g:e,b:0};break;case 1:c={r:e,g:o,b:0};break;case 2:c={r:0,g:o,b:e};break;case 3:c={r:0,g:e,b:o};break;case 4:c={r:e,g:0,b:o};break;case 5:case 6:c={r:o,g:0,b:e};break;default:c={r:0,g:0,b:0};}return c.r=Math.round(c.r+u-o),c.g=Math.round(c.g+u-o),c.b=Math.round(c.b+u-o),c}function p(e){return n(e)?e:u(e)?d(e):r(e)?M(e):o(e)?h(e):t(e)?k(e):e}function y(n){if(t(n))return n;return x(p(n))}function z(n){return r(n)?n:g(p(n))}function v(n){return u(n)?n:m(p(n))}



//# sourceMappingURL=colorUtils-c85d85b1.js.map

/***/ }),

/***/ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/geoenrichment-components/dist/esm/definitions-e63f4fe2.js":
/*!***************************************************************************************************************************!*\
  !*** ./extensions/widgets/arcgis/analysis/node_modules/@arcgis/geoenrichment-components/dist/esm/definitions-e63f4fe2.js ***!
  \***************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   $: () => (/* binding */ $),
/* harmony export */   J: () => (/* binding */ J),
/* harmony export */   K: () => (/* binding */ K),
/* harmony export */   N: () => (/* binding */ N),
/* harmony export */   O: () => (/* binding */ O),
/* harmony export */   S: () => (/* binding */ S),
/* harmony export */   Y: () => (/* binding */ Y),
/* harmony export */   Z: () => (/* binding */ Z),
/* harmony export */   c: () => (/* binding */ c),
/* harmony export */   g: () => (/* binding */ g),
/* harmony export */   i: () => (/* binding */ i),
/* harmony export */   j: () => (/* binding */ j),
/* harmony export */   o: () => (/* binding */ o),
/* harmony export */   s: () => (/* binding */ s)
/* harmony export */ });
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
const c=1e-30,i=4294967295,o=512,s=29,g=16,j=8,J=1,K=2,N=2,O=1,S=2.5,Y=2,Z=7,$=500;



//# sourceMappingURL=definitions-e63f4fe2.js.map

/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,