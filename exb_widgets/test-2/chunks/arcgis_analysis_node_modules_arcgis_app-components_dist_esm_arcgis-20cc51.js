"use strict";
(self["webpackChunkexb_client"] = self["webpackChunkexb_client"] || []).push([["vendors-extensions_widgets_arcgis_analysis_node_modules_arcgis_app-components_dist_esm_arcgis-20cc51"],{

/***/ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/arcgis-new-item-pages-data-store-select-server-list.entry.js":
/*!******************************************************************************************************************************************************!*\
  !*** ./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/arcgis-new-item-pages-data-store-select-server-list.entry.js ***!
  \******************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   arcgis_new_item_pages_data_store_select_server_list: () => (/* binding */ ArcgisNewItemPagesDataStoreSelectServerList)
/* harmony export */ });
/* harmony import */ var _index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index-92ebb396.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/index-92ebb396.js");
/* harmony import */ var _data_store_f509564d_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./data-store-f509564d.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/data-store-f509564d.js");
/* harmony import */ var _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./add-item-97d577a9.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/add-item-97d577a9.js");
/* harmony import */ var _ui_ecf86bba_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ui-ecf86bba.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/ui-ecf86bba.js");
/* harmony import */ var _data_store_e8b5ce2f_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./data-store-e8b5ce2f.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/data-store-e8b5ce2f.js");
/* harmony import */ var _portal_79caaeff_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./portal-79caaeff.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/portal-79caaeff.js");
/* harmony import */ var _loadModules_aaf30bd6_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./loadModules-aaf30bd6.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/loadModules-aaf30bd6.js");
/* harmony import */ var _config_eb5f7dc2_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./config-eb5f7dc2.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/config-eb5f7dc2.js");
/* harmony import */ var _index_81d548b7_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./index-81d548b7.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/index-81d548b7.js");
/* harmony import */ var _privileges_ccd5f37d_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./privileges-ccd5f37d.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/privileges-ccd5f37d.js");
/* harmony import */ var _functional_c82f5ab9_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./functional-c82f5ab9.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/functional-c82f5ab9.js");
/* harmony import */ var _item_d9d70416_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./item-d9d70416.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/item-d9d70416.js");
/* harmony import */ var _feature_layer_38cdae87_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./feature-layer-38cdae87.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/feature-layer-38cdae87.js");
/* harmony import */ var _item_properties_e6412a9a_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./item-properties-e6412a9a.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/item-properties-e6412a9a.js");
/* harmony import */ var _feature_layer_d33ea114_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./feature-layer-d33ea114.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/feature-layer-d33ea114.js");
/* harmony import */ var _guid_4f4176ba_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./guid-4f4176ba.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/guid-4f4176ba.js");
/* harmony import */ var _thumbnail_0b7adfcd_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./thumbnail-0b7adfcd.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/thumbnail-0b7adfcd.js");
/* harmony import */ var _query_4f7b7e4d_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./query-4f7b7e4d.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/query-4f7b7e4d.js");
/* harmony import */ var _user_e3dedc4a_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./user-e3dedc4a.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/user-e3dedc4a.js");
/* harmony import */ var _api_f7934cd7_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./api-f7934cd7.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/api-f7934cd7.js");
/* harmony import */ var _server_item_f12153e6_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./server-item-f12153e6.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/server-item-f12153e6.js");
/* harmony import */ var _functional_9f648bee_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./functional-9f648bee.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/functional-9f648bee.js");
/* harmony import */ var _item_types_b4fe86ad_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./item-types-b4fe86ad.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/item-types-b4fe86ad.js");
/* harmony import */ var _dom_13f5b00c_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./dom-13f5b00c.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/dom-13f5b00c.js");
/* harmony import */ var _feature_layer_69305a85_js__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./feature-layer-69305a85.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/feature-layer-69305a85.js");
/* harmony import */ var _ags_68d4ae20_js__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./ags-68d4ae20.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/ags-68d4ae20.js");
/* harmony import */ var _url_f3b82cc7_js__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./url-f3b82cc7.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/url-f3b82cc7.js");
/* harmony import */ var _storage_d7f5822e_js__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./storage-d7f5822e.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/storage-d7f5822e.js");
/* harmony import */ var _file_f36193e9_js__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./file-f36193e9.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/file-f36193e9.js");
/* harmony import */ var _store_3210b604_js__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./store-3210b604.js */ "./extensions/widgets/arcgis/analysis/node_modules/@arcgis/app-components/dist/esm/store-3210b604.js");
/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * v3.0.99
 */































const arcgisNewItemPagesDataStoreSelectServerListCss = ".sub-heading {\n  color: var(--calcite-ui-text-3);\n  font-weight: 400;\n}\n\n.row-wrapper {\n  width: 100%;\n  padding-top: 0.75rem;\n  margin-top: 0.5rem;\n  margin-bottom: 0.5rem;\n  display: flex;\n}\n\n.row-divider {\n  box-shadow: 0 -1px 0 #eaeaea;\n}\n\n.title {\n  grid-gap: 0.5rem;\n  gap: 0.5rem;\n}\n\n.status-wrapper {\n  display: flex;\n  grid-gap: 0.5rem;\n  gap: 0.5rem;\n  line-height: 1rem;\n}\n\n.success {\n  --calcite-ui-icon-color: var(--calcite-ui-success);\n}\n\n.failure {\n  --calcite-ui-icon-color: var(--calcite-ui-danger);\n}\n\n.error {\n  --calcite-ui-icon-color: var(--calcite-ui-danger);\n}\n\n.validating {\n  --calcite-ui-icon-color: var(--calcite-ui-info);\n}\n\n.half-row {\n  width: 50%;\n  padding-left: 0.5rem;\n  padding-right: 0.5rem;\n}\n\n.server-wrapper {\n  &:hover {\n    cursor: pointer;\n  }\n}\n";

const ArcgisNewItemPagesDataStoreSelectServerList = class {
  constructor(hostRef) {
    (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.r)(this, hostRef);
    this.newItemUpdatePage = (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, "newItemUpdatePage", 7);
    this.loading = true;
    this.noValidServers = true;
    this.serverTypes = [];
    this.serverStatusIcons = {
      success: "check-circle-f",
      failure: "exclamation-mark-circle-f",
      error: "exclamation-mark-triangle-f",
      validating: "information"
    };
    this.selectedServers = [];
    this.serverList = [];
    this.allBoxesSelected = false;
    this.error = null;
  }
  async componentWillLoad() {
    this.i18n = _ui_ecf86bba_js__WEBPACK_IMPORTED_MODULE_3__.u.i18n.serverSelection;
    this.dataStoreType = _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_2__.a.addDataStoreType;
    this.serverList = _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_2__.a.dataStoreSelectServerList || [];
    this.serverList = this.filterServers(false, false, false, false);
  }
  async componentDidLoad() {
    //TODO: catch unhandled errors
    const validatedServers = await (0,_data_store_f509564d_js__WEBPACK_IMPORTED_MODULE_1__.c)(_add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_2__.a, this.serverList, this.dataStoreType);
    this.serverList = [...validatedServers];
    const result = await (0,_data_store_f509564d_js__WEBPACK_IMPORTED_MODULE_1__.d)(this.serverList);
    this.serverList = [...result.servers];
    this.serverTypes = [...result.serverTypes];
    this.renderTable();
    this.appendServerTypes();
    this.loading = false;
  }
  filterServers(isBigDataFileShare, isNoSQL, isHostingServerOnlyForDatabase, isNFS) {
    return (this.serverList || []).filter((server) => {
      const serverRole = (server.serverRole || "").toUpperCase();
      const excludedServerRoles = [
        "ARCGIS_NOTEBOOK_SERVER",
        "ARCGIS_MISSION_SERVER",
        "ARCGIS_VIDEO_SERVER"
      ];
      const serverFunctions = (server.serverFunction && server.serverFunction.replace(/\s+/g, "").split(",")) || [];
      const excludedServerFunctions = [
        "NOTEBOOKSERVER",
        "WORKFLOWMANAGER",
        "MISSIONSERVER",
        "VIDEOSERVER"
      ];
      let isHostingServer = serverRole === "HOSTING_SERVER";
      // only display GeoAnalytics server for BDFS
      if (isBigDataFileShare && serverFunctions.indexOf("GeoAnalytics") === -1) {
        excludedServerRoles.push(serverRole);
        isHostingServer = false;
      }
      if (isNoSQL && serverFunctions.indexOf("KnowledgeServer") === -1) {
        excludedServerRoles.push(serverRole);
        isHostingServer = false;
      }
      if (isNFS && (0,_data_store_e8b5ce2f_js__WEBPACK_IMPORTED_MODULE_4__.i)()) {
        isHostingServer = true;
      }
      let allowedServerRole = excludedServerRoles.indexOf(serverRole) === -1;
      // only display hosting servers for Database when client type is bigquery, snowflake or redshift
      if (isHostingServerOnlyForDatabase) {
        allowedServerRole = false;
      }
      return (isHostingServer ||
        (allowedServerRole &&
          (!serverFunctions.length ||
            serverFunctions.some(function (func) {
              return excludedServerFunctions.indexOf(func.toUpperCase()) === -1;
            }))));
    });
  }
  renderTable() {
    const dataStoreType = this.dataStoreType;
    const isBigDataFileShare = dataStoreType === "bdfs";
    const isNoSQL = dataStoreType === "nosql";
    const isNFS = _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_2__.a.serverFolderPath === "nfsHostAndPath" && dataStoreType === "folder";
    // filter servers and only display hosting servers for database: bigquery, snowflake or redshift
    const isHostingServerOnlyForDatabase = this.checkDatabaseClient();
    // filter servers for bdfs
    this.serverList = this.filterServers(isBigDataFileShare, isNoSQL, isHostingServerOnlyForDatabase, isNFS);
    // filter servers by users input server path - only for folder & file share
    if (!isNFS) {
      if (["folder", "fileshare"].includes(dataStoreType)) {
        this.serverList = this.filterServersByServerPath();
      }
    }
  }
  checkDatabaseClient() {
    const dataStoreType = this.dataStoreType;
    const publisherConnectionString = _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_2__.a.publisherConnectionString;
    let isHostingServerOnly = false;
    if (dataStoreType === "database" && publisherConnectionString) {
      const dbConnectionStringArray = publisherConnectionString.split(";");
      dbConnectionStringArray.forEach(function (keyword) {
        // "DBCLIENT=bigquery"
        if (keyword.indexOf("DBCLIENT") > -1 &&
          ["bigquery", "snowflake", "redshift"].indexOf(keyword.split("=")[1]) > -1) {
          isHostingServerOnly = true;
        }
      });
    }
    return isHostingServerOnly;
  }
  filterServersByServerPath() {
    const dataStoreType = _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_2__.a.addDataStoreType;
    const serverPath = dataStoreType === "folder"
      ? _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_2__.a.newServerFolderPath || _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_2__.a.publisherFolderPath
      : _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_2__.a.publisherFileShareFolderPath;
    const serverPathType = serverPath[0].indexOf("/") > -1 ? "Linux" : "Windows";
    const isNFS = _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_2__.a.serverFolderPath === "nfsHostAndPath" && dataStoreType === "folder";
    return this.serverList.filter((federatedServer) => {
      return !!this.serverTypes.find((serverItem) => {
        return ((serverItem.name === federatedServer.adminUrl ||
          serverItem.name === `${federatedServer.adminUrl}/admin`) &&
          (isNFS ? federatedServer.isHosted : serverItem.type === serverPathType));
      });
    });
  }
  appendServerTypes() {
    const { serverList, i18n } = this;
    serverList.map((server) => {
      const serverFunction = (server.serverFunction && server.serverFunction.replace(/\s+/g, "").split(",")) || [];
      let serverType = "";
      if (server.serverRole === "HOSTING_SERVER") {
        serverType += i18n.types.hostedSetting;
      }
      if (serverFunction.indexOf("NotebookServer") > -1) {
        serverType += (serverType && ", ") + i18n.types.notebookServerSetting;
      }
      if (serverFunction.indexOf("GeoAnalytics") > -1) {
        serverType += (serverType && ", ") + i18n.types.geoAnalyticsServerSetting;
      }
      if (serverFunction.indexOf("RasterAnalytics") > -1) {
        serverType += (serverType && ", ") + i18n.types.rasterAnalysisSetting;
      }
      if (serverFunction.indexOf("ImageHosting") > -1) {
        serverType += (serverType && ", ") + i18n.types.imageHostingSetting;
      }
      if (serverFunction.indexOf("MissionServer") > -1) {
        serverType += (serverType && ", ") + i18n.types.missionServerSetting;
      }
      server.serverType = serverType;
    });
  }
  convertStatusDisplayText(server) {
    const i18n = this.i18n;
    const status = server.serverStatus;
    const displayTable = {
      success: i18n.status.success,
      failure: i18n.status.failure,
      error: i18n.status.error,
      validating: i18n.status.validating
    };
    return displayTable[status];
  }
  checkValidServers() {
    this.noValidServers = !this.serverList.some((server) => {
      return server.serverStatus === "success";
    });
  }
  checkAllBoxes() {
    this.selectedServers = [...[]];
    if (!this.allBoxesSelected) {
      this.serverList.forEach((server) => {
        this.selectedServers = [...this.selectedServers, server.id];
      });
    }
    this.allBoxesSelected = !this.allBoxesSelected;
  }
  handleNext() {
    const selectedServers = this.selectedServers || [];
    if (selectedServers.length === 0) {
      this.error = "noServerSelected";
      return;
    }
    _add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_2__.a.dataStoreSelectedServers = selectedServers;
    this.newItemUpdatePage.emit("itemProperties");
  }
  render() {
    const { i18n, error, serverList, dataStoreType, loading, allBoxesSelected, noValidServers } = this;
    return ((0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", null, (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("arcgis-new-item-description", { header: dataStoreType === "bdfs" && ["fileshare", "cloud"].includes(_add_item_97d577a9_js__WEBPACK_IMPORTED_MODULE_2__.a.bdfsType)
        ? i18n.dataStoreServerSelect.bdfsHeading
        : i18n.dataStoreServerSelect.heading }), (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("p", { class: "sub-heading" }, i18n.dataStoreServerSelect.subHeading), loading ? ((0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-loader", { label: "server-loader", text: i18n.loader.validating })) : ((0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)(_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.F, null, (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: "row-wrapper" }, (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: "half-row" }, (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-label", { layout: "inline" }, (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-checkbox", { disabled: noValidServers, checked: allBoxesSelected, onCalciteCheckboxChange: () => {
        this.checkAllBoxes();
      } }), i18n.list.title)), (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: "half-row" }, (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-label", { layout: "inline" }, i18n.list.status))), serverList.map((server) => {
      return ((0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: "row-wrapper row-divider" }, (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: "half-row" }, (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-label", { layout: "inline", class: "server-wrapper" }, (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-checkbox", { disabled: server.serverStatus !== "success", value: server.id, onCalciteCheckboxChange: (e) => {
          const serverId = e.target.value;
          if (this.selectedServers.indexOf(serverId) === -1) {
            this.selectedServers = [...this.selectedServers, serverId];
          }
          else {
            this.selectedServers = this.selectedServers.filter((server) => {
              return server !== serverId;
            });
          }
        }, checked: this.selectedServers.includes(server.id) }), server.url + (server.serverType && ` (${server.serverType})`))), (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: "half-row" }, (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("div", { class: "status-wrapper", title: server.errorMsg || server.serverStatus }, (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("calcite-icon", { class: {
          success: server.serverStatus === "success",
          failure: server.serverStatus === "failure",
          error: server.serverStatus === "error",
          validating: server.serverStatus === "validating"
        }, scale: "s", icon: this.serverStatusIcons[server.serverStatus] }), this.convertStatusDisplayText(server)))));
    }), (0,_index_92ebb396_js__WEBPACK_IMPORTED_MODULE_0__.h)("arcgis-new-item-alert", { heading: i18n.dataStoreServerSelect.noServerSelected.heading, description: i18n.dataStoreServerSelect.noServerSelected.description, active: error !== null && !loading, onAlertDismiss: () => {
        this.error = null;
      } })))));
  }
  static get watchers() { return {
    "serverList": ["checkValidServers"]
  }; }
};
ArcgisNewItemPagesDataStoreSelectServerList.style = arcgisNewItemPagesDataStoreSelectServerListCss;




/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,