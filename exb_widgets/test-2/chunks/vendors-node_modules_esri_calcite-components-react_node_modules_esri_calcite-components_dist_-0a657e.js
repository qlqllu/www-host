"use strict";
(self["webpackChunkexb_client"] = self["webpackChunkexb_client"] || []).push([["vendors-node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_-0a657e"],{

/***/ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-input-time-zone.js":
/*!**************************************************************************************************************************************!*\
  !*** ./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/calcite-input-time-zone.js ***!
  \**************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   CalciteInputTimeZone: () => (/* binding */ CalciteInputTimeZone),
/* harmony export */   defineCustomElement: () => (/* binding */ defineCustomElement)
/* harmony export */ });
/* harmony import */ var _stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @stencil/core/internal/client/index.js */ "./node_modules/@esri/calcite-components-react/node_modules/@stencil/core/internal/client/index.js");
/* harmony import */ var _label2_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./label2.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/label2.js");
/* harmony import */ var _interactive_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./interactive.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/interactive.js");
/* harmony import */ var _locale_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./locale.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/locale.js");
/* harmony import */ var _t9n_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./t9n.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/t9n.js");
/* harmony import */ var _loadable_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./loadable.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/loadable.js");
/* harmony import */ var _form_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./form.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/form.js");
/* harmony import */ var _chip_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./chip.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/chip.js");
/* harmony import */ var _combobox_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./combobox.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/combobox.js");
/* harmony import */ var _combobox_item_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./combobox-item.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/combobox-item.js");
/* harmony import */ var _icon_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./icon.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/icon.js");
/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-design-system/blob/main/LICENSE.md for details.
 * v1.11.0
 */












const hourToMinutes = 60;
const timeZoneNameBlockList = [
  "CET",
  "CST6CDT",
  "EET",
  "EST",
  "EST5EDT",
  "Factory",
  "HST",
  "MET",
  "MST",
  "MST7MDT",
  "PST8PDT",
  "UTC",
  "WET",
];
function timeZoneOffsetToDecimal(shortOffsetTimeZoneName) {
  const minusSign = "âˆ’";
  const hyphen = "-";
  return (shortOffsetTimeZoneName
    .replace(":15", ".25")
    .replace(":30", ".5")
    .replace(":45", ".75")
    // ensures decimal string representation is parseable
    .replace(minusSign, hyphen));
}
function toOffsetValue(timeZoneName, referenceDateInMs) {
  // we use "en-US" to allow us to reliably remove the standard time token
  const offset = getTimeZoneShortOffset(timeZoneName, "en-US", referenceDateInMs).replace("GMT", "");
  if (offset === "") {
    return 0;
  }
  return Number(timeZoneOffsetToDecimal(offset)) * hourToMinutes;
}
function getUserTimeZoneOffset() {
  const localDate = new Date();
  return localDate.getTimezoneOffset() * -1;
}
function getUserTimeZoneName() {
  const dateFormatter = new Intl.DateTimeFormat();
  return dateFormatter.resolvedOptions().timeZone;
}
/**
 * The lazy-loaded timezone-groups lib to be used across instances.
 */
let timeZoneGroups;
async function createTimeZoneItems(locale, messages, mode, referenceDate) {
  const referenceDateInMs = referenceDate.getTime();
  const timeZoneNames = Intl.supportedValuesOf("timeZone");
  if (mode === "offset") {
    if (!timeZoneGroups) {
      timeZoneGroups = Promise.all([
        __webpack_require__.e(/*! import() */ "node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-dab0e4").then(__webpack_require__.bind(__webpack_require__, /*! ./index3.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/index3.js")),
        __webpack_require__.e(/*! import() */ "node_modules_esri_calcite-components-react_node_modules_esri_calcite-components_dist_componen-2dc0ec").then(__webpack_require__.bind(__webpack_require__, /*! ./index4.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/index4.js")),
      ]);
    }
    return timeZoneGroups.then(async ([{ groupTimeZones }, { DateEngine }]) => {
      const timeZoneGroups = await groupTimeZones({
        dateEngine: new DateEngine(),
        groupDateRange: 1,
        startDate: new Date(referenceDateInMs).toISOString(),
      });
      const listFormatter = new Intl.ListFormat(locale, { style: "long", type: "conjunction" });
      // we remove blocked entries from tzs and adjust label indices accordingly
      timeZoneGroups.forEach((group) => {
        const indexOffsets = [];
        let removedSoFar = 0;
        group.tzs.forEach((tz, index) => {
          if (timeZoneNameBlockList.includes(tz)) {
            removedSoFar++;
          }
          indexOffsets[index] = removedSoFar;
        });
        group.tzs = group.tzs.filter((tz) => !timeZoneNameBlockList.includes(tz));
        group.labelTzIndices = group.labelTzIndices
          .map((index) => index - indexOffsets[index])
          .filter((index) => index >= 0 && index < group.tzs.length);
      });
      return timeZoneGroups
        .map(({ labelTzIndices, tzs }) => {
        const groupRepTz = tzs[0];
        const decimalOffset = timeZoneOffsetToDecimal(getTimeZoneShortOffset(groupRepTz, locale, referenceDateInMs));
        const value = toOffsetValue(groupRepTz, referenceDateInMs);
        const tzLabels = labelTzIndices.map((index) => {
          const timeZone = tzs[index];
          const timeZoneLabel = messages[timeZone];
          return (timeZoneLabel ||
            // get city token
            timeZone.split("/").pop());
        });
        const label = createTimeZoneOffsetLabel(messages, decimalOffset, listFormatter.format(tzLabels));
        return {
          label,
          value,
          filterValue: tzs.map((tz) => toUserFriendlyName(tz)),
        };
      })
        .filter((group) => !!group)
        .sort((groupA, groupB) => groupA.value - groupB.value);
    });
  }
  return timeZoneNames
    .map((timeZone) => {
    const label = toUserFriendlyName(timeZone);
    const value = timeZone;
    return {
      label,
      value,
      filterValue: timeZone,
    };
  })
    .filter((group) => !!group)
    .sort();
}
/**
 * Exported for testing purposes only
 *
 * @internal
 */
function toUserFriendlyName(timeZoneName) {
  return timeZoneName.replace(/_/g, " ");
}
function createTimeZoneOffsetLabel(messages, offsetLabel, groupLabel) {
  return messages.timeZoneLabel.replace("{offset}", offsetLabel).replace("{cities}", groupLabel);
}
function getTimeZoneShortOffset(timeZone, locale, referenceDateInMs = Date.now()) {
  const dateTimeFormat = (0,_locale_js__WEBPACK_IMPORTED_MODULE_2__.b)(locale, { timeZone, timeZoneName: "shortOffset" });
  const parts = dateTimeFormat.formatToParts(referenceDateInMs);
  return parts.find(({ type }) => type === "timeZoneName").value;
}

const inputTimeZoneCss = ":host([disabled]){cursor:default;-webkit-user-select:none;user-select:none;opacity:var(--calcite-ui-opacity-disabled)}:host([disabled]) *,:host([disabled]) ::slotted(*){pointer-events:none}:host{display:block}:host([hidden]){display:none}[hidden]{display:none}:host([disabled]) ::slotted([calcite-hydrated][disabled]),:host([disabled]) [calcite-hydrated][disabled]{opacity:1}::slotted(input[slot=hidden-form-input]){margin:0 !important;opacity:0 !important;outline:none !important;padding:0 !important;position:absolute !important;inset:0 !important;transform:none !important;-webkit-appearance:none !important;z-index:-1 !important}";

const InputTimeZone = /*@__PURE__*/ (0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_10__.proxyCustomElement)(class extends _stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_10__.HTMLElement {
  constructor() {
    super();
    this.__registerHost();
    this.__attachShadow();
    this.calciteInputTimeZoneBeforeClose = (0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_10__.createEvent)(this, "calciteInputTimeZoneBeforeClose", 6);
    this.calciteInputTimeZoneBeforeOpen = (0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_10__.createEvent)(this, "calciteInputTimeZoneBeforeOpen", 6);
    this.calciteInputTimeZoneChange = (0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_10__.createEvent)(this, "calciteInputTimeZoneChange", 6);
    this.calciteInputTimeZoneClose = (0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_10__.createEvent)(this, "calciteInputTimeZoneClose", 6);
    this.calciteInputTimeZoneOpen = (0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_10__.createEvent)(this, "calciteInputTimeZoneOpen", 6);
    this.setComboboxRef = (el) => {
      this.comboboxEl = el;
    };
    this.onComboboxBeforeClose = (event) => {
      event.stopPropagation();
      this.calciteInputTimeZoneBeforeClose.emit();
    };
    this.onComboboxBeforeOpen = (event) => {
      event.stopPropagation();
      this.calciteInputTimeZoneBeforeOpen.emit();
    };
    this.onComboboxChange = (event) => {
      event.stopPropagation();
      const combobox = event.target;
      const selected = this.findTimeZoneItem(combobox.selectedItems[0].getAttribute("data-value"));
      const selectedValue = `${selected.value}`;
      if (this.value === selectedValue) {
        return;
      }
      this.value = selectedValue;
      this.selectedTimeZoneItem = selected;
      this.calciteInputTimeZoneChange.emit();
    };
    this.onComboboxClose = (event) => {
      event.stopPropagation();
      this.open = false;
      this.calciteInputTimeZoneClose.emit();
    };
    this.onComboboxOpen = (event) => {
      this.open = true;
      event.stopPropagation();
      this.calciteInputTimeZoneOpen.emit();
    };
    this.disabled = false;
    this.form = undefined;
    this.maxItems = 0;
    this.messages = undefined;
    this.messageOverrides = undefined;
    this.mode = "offset";
    this.name = undefined;
    this.open = false;
    this.overlayPositioning = "absolute";
    this.referenceDate = undefined;
    this.required = false;
    this.scale = "m";
    this.value = undefined;
    this.defaultMessages = undefined;
    this.effectiveLocale = "";
  }
  onMessagesChange() {
    /* wired up by t9n util */
  }
  handleTimeZoneItemPropsChange() {
    this.createTimeZoneItems();
  }
  handleValueChange(value, oldValue) {
    const timeZoneItem = this.findTimeZoneItem(value);
    if (!timeZoneItem) {
      this.value = oldValue;
      return;
    }
    this.selectedTimeZoneItem = timeZoneItem;
  }
  //--------------------------------------------------------------------------
  //
  //  Public Methods
  //
  //--------------------------------------------------------------------------
  async setFocus() {
    await (0,_loadable_js__WEBPACK_IMPORTED_MODULE_4__.c)(this);
    await this.comboboxEl.setFocus();
  }
  effectiveLocaleWatcher() {
    (0,_t9n_js__WEBPACK_IMPORTED_MODULE_3__.u)(this, this.effectiveLocale);
  }
  //--------------------------------------------------------------------------
  //
  //  Private Methods
  //
  //--------------------------------------------------------------------------
  onLabelClick() {
    this.setFocus();
  }
  findTimeZoneItem(value) {
    const valueToMatch = value;
    return this.timeZoneItems.find(({ value }) => 
    // intentional == to match string to number
    value == valueToMatch);
  }
  async createTimeZoneItems() {
    if (!this.effectiveLocale || !this.messages) {
      return [];
    }
    return createTimeZoneItems(this.effectiveLocale, this.messages, this.mode, this.referenceDate instanceof Date
      ? this.referenceDate
      : new Date(this.referenceDate ?? Date.now()));
  }
  // --------------------------------------------------------------------------
  //
  //  Lifecycle
  //
  //--------------------------------------------------------------------------
  connectedCallback() {
    (0,_form_js__WEBPACK_IMPORTED_MODULE_5__.c)(this);
    (0,_label2_js__WEBPACK_IMPORTED_MODULE_0__.c)(this);
    (0,_locale_js__WEBPACK_IMPORTED_MODULE_2__.c)(this);
    (0,_t9n_js__WEBPACK_IMPORTED_MODULE_3__.c)(this);
  }
  disconnectedCallback() {
    (0,_form_js__WEBPACK_IMPORTED_MODULE_5__.d)(this);
    (0,_label2_js__WEBPACK_IMPORTED_MODULE_0__.d)(this);
    (0,_locale_js__WEBPACK_IMPORTED_MODULE_2__.d)(this);
    (0,_t9n_js__WEBPACK_IMPORTED_MODULE_3__.d)(this);
  }
  async componentWillLoad() {
    (0,_loadable_js__WEBPACK_IMPORTED_MODULE_4__.a)(this);
    await (0,_t9n_js__WEBPACK_IMPORTED_MODULE_3__.s)(this);
    this.timeZoneItems = await this.createTimeZoneItems();
    const fallbackValue = this.mode === "offset" ? getUserTimeZoneOffset() : getUserTimeZoneName();
    const valueToMatch = this.value ?? fallbackValue;
    this.selectedTimeZoneItem = this.findTimeZoneItem(valueToMatch);
    if (!this.selectedTimeZoneItem) {
      this.selectedTimeZoneItem = this.findTimeZoneItem(fallbackValue);
    }
    const selectedValue = `${this.selectedTimeZoneItem.value}`;
    (0,_form_js__WEBPACK_IMPORTED_MODULE_5__.a)(this, selectedValue);
    this.value = selectedValue;
  }
  componentDidLoad() {
    (0,_loadable_js__WEBPACK_IMPORTED_MODULE_4__.s)(this);
  }
  componentDidRender() {
    (0,_interactive_js__WEBPACK_IMPORTED_MODULE_1__.u)(this);
  }
  render() {
    return ((0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_10__.h)(_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_10__.Host, null, (0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_10__.h)("calcite-combobox", { clearDisabled: true, disabled: this.disabled, label: this.messages.chooseTimeZone, lang: this.effectiveLocale, maxItems: this.maxItems, onCalciteComboboxBeforeClose: this.onComboboxBeforeClose, onCalciteComboboxBeforeOpen: this.onComboboxBeforeOpen, onCalciteComboboxChange: this.onComboboxChange, onCalciteComboboxClose: this.onComboboxClose, onCalciteComboboxOpen: this.onComboboxOpen, open: this.open, overlayPositioning: this.overlayPositioning, scale: this.scale, selectionMode: "single-persist",
      // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)
      ref: this.setComboboxRef }, this.timeZoneItems.map((group) => {
      const selected = this.selectedTimeZoneItem === group;
      const { label, value } = group;
      return ((0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_10__.h)("calcite-combobox-item", { "data-value": value, key: label, selected: selected, textLabel: label, value: `${group.filterValue}` }));
    })), (0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_10__.h)(_form_js__WEBPACK_IMPORTED_MODULE_5__.H, { component: this })));
  }
  static get delegatesFocus() { return true; }
  static get assetsDirs() { return ["assets"]; }
  get el() { return this; }
  static get watchers() { return {
    "messageOverrides": ["onMessagesChange"],
    "effectiveLocale": ["handleTimeZoneItemPropsChange", "effectiveLocaleWatcher"],
    "messages": ["handleTimeZoneItemPropsChange"],
    "mode": ["handleTimeZoneItemPropsChange"],
    "referenceDate": ["handleTimeZoneItemPropsChange"],
    "value": ["handleValueChange"]
  }; }
  static get style() { return inputTimeZoneCss; }
}, [17, "calcite-input-time-zone", {
    "disabled": [516],
    "form": [513],
    "maxItems": [514, "max-items"],
    "messages": [1040],
    "messageOverrides": [1040],
    "mode": [513],
    "name": [513],
    "open": [1540],
    "overlayPositioning": [513, "overlay-positioning"],
    "referenceDate": [1, "reference-date"],
    "required": [516],
    "scale": [513],
    "value": [1025],
    "defaultMessages": [32],
    "effectiveLocale": [32],
    "setFocus": [64]
  }]);
function defineCustomElement$1() {
  if (typeof customElements === "undefined") {
    return;
  }
  const components = ["calcite-input-time-zone", "calcite-chip", "calcite-combobox", "calcite-combobox-item", "calcite-icon"];
  components.forEach(tagName => { switch (tagName) {
    case "calcite-input-time-zone":
      if (!customElements.get(tagName)) {
        customElements.define(tagName, InputTimeZone);
      }
      break;
    case "calcite-chip":
      if (!customElements.get(tagName)) {
        (0,_chip_js__WEBPACK_IMPORTED_MODULE_6__.d)();
      }
      break;
    case "calcite-combobox":
      if (!customElements.get(tagName)) {
        (0,_combobox_js__WEBPACK_IMPORTED_MODULE_7__.d)();
      }
      break;
    case "calcite-combobox-item":
      if (!customElements.get(tagName)) {
        (0,_combobox_item_js__WEBPACK_IMPORTED_MODULE_8__.d)();
      }
      break;
    case "calcite-icon":
      if (!customElements.get(tagName)) {
        (0,_icon_js__WEBPACK_IMPORTED_MODULE_9__.d)();
      }
      break;
  } });
}
defineCustomElement$1();

const CalciteInputTimeZone = InputTimeZone;
const defineCustomElement = defineCustomElement$1;




/***/ }),

/***/ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/combobox-item.js":
/*!****************************************************************************************************************************!*\
  !*** ./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/combobox-item.js ***!
  \****************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   C: () => (/* binding */ ComboboxItem),
/* harmony export */   d: () => (/* binding */ defineCustomElement)
/* harmony export */ });
/* harmony import */ var _stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @stencil/core/internal/client/index.js */ "./node_modules/@esri/calcite-components-react/node_modules/@stencil/core/internal/client/index.js");
/* harmony import */ var _conditionalSlot_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./conditionalSlot.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/conditionalSlot.js");
/* harmony import */ var _dom_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dom.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/dom.js");
/* harmony import */ var _guid_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./guid.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/guid.js");
/* harmony import */ var _interactive_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./interactive.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/interactive.js");
/* harmony import */ var _utils2_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utils2.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/utils2.js");
/* harmony import */ var _component_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./component.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/component.js");
/* harmony import */ var _icon_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./icon.js */ "./node_modules/@esri/calcite-components-react/node_modules/@esri/calcite-components/dist/components/icon.js");
/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-design-system/blob/main/LICENSE.md for details.
 * v1.11.0
 */









const CSS = {
  icon: "icon",
  iconActive: "icon--active",
  iconIndent: "icon--indent",
  custom: "icon--custom",
  dot: "icon--dot",
  single: "label--single",
  label: "label",
  active: "label--active",
  selected: "label--selected",
  title: "title",
  textContainer: "text-container",
};

const comboboxItemCss = "@charset \"UTF-8\";:host([disabled]){cursor:default;-webkit-user-select:none;user-select:none;opacity:var(--calcite-ui-opacity-disabled)}:host([disabled]) *,:host([disabled]) ::slotted(*){pointer-events:none}:host([hidden]){display:none}[hidden]{display:none}.scale--s{font-size:var(--calcite-font-size--2);line-height:1rem;--calcite-combobox-item-spacing-unit-l:0.5rem;--calcite-combobox-item-spacing-unit-s:0.25rem;--calcite-combobox-item-spacing-indent:0.5rem;--calcite-combobox-item-selector-icon-size:1rem}.scale--m{font-size:var(--calcite-font-size--1);line-height:1rem;--calcite-combobox-item-spacing-unit-l:0.75rem;--calcite-combobox-item-spacing-unit-s:0.5rem;--calcite-combobox-item-spacing-indent:0.75rem;--calcite-combobox-item-selector-icon-size:1rem}.scale--l{font-size:var(--calcite-font-size-0);line-height:1.25rem;--calcite-combobox-item-spacing-unit-l:1rem;--calcite-combobox-item-spacing-unit-s:0.625rem;--calcite-combobox-item-spacing-indent:1rem;--calcite-combobox-item-selector-icon-size:1.5rem}.container{--calcite-combobox-item-indent-value:calc(\n    var(--calcite-combobox-item-spacing-indent) * var(--calcite-combobox-item-spacing-indent-multiplier)\n  )}:host(:focus){--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}:host([disabled]) ::slotted([calcite-hydrated][disabled]),:host([disabled]) [calcite-hydrated][disabled]{opacity:1}:host,ul{margin:0px;display:flex;flex-direction:column;padding:0px}:host(:focus),ul:focus{outline:2px solid transparent;outline-offset:2px}.label{position:relative;box-sizing:border-box;display:flex;inline-size:100%;min-inline-size:100%;cursor:pointer;align-items:center;color:var(--calcite-ui-text-3);text-decoration-line:none;transition-duration:150ms;transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1);outline-color:transparent;word-wrap:break-word;word-break:break-word;padding-block:var(--calcite-combobox-item-spacing-unit-s);padding-inline:var(--calcite-combobox-item-spacing-unit-l)}:host([disabled]) .label{cursor:default}.label--selected{font-weight:var(--calcite-font-weight-medium);color:var(--calcite-ui-text-1)}.label--active{outline:2px solid var(--calcite-ui-focus-color, var(--calcite-ui-brand));outline-offset:calc(\n            -2px *\n            calc(\n              1 -\n              2 * clamp(\n                0,\n                var(--calcite-ui-focus-offset-invert),\n                1\n              )\n            )\n          )}.label:hover,.label:active{background-color:var(--calcite-ui-foreground-2);color:var(--calcite-ui-text-1);text-decoration-line:none;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}.title{padding-block:0;padding-inline:var(--calcite-combobox-item-spacing-unit-l)}.icon{display:inline-flex;opacity:0;transition-duration:150ms;transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1);color:var(--calcite-ui-border-1)}.icon--indent{padding-inline-start:var(--calcite-combobox-item-indent-value)}.icon--custom{margin-block-start:-1px;padding-inline-start:var(--calcite-combobox-item-spacing-unit-l);color:var(--calcite-ui-text-3)}.icon--active{color:var(--calcite-ui-text-1)}.icon--dot{display:flex;justify-content:center;min-inline-size:var(--calcite-combobox-item-selector-icon-size)}.icon--dot:before{text-align:start;content:\"â€¢\"}.label--active .icon{opacity:1}.label--selected .icon{opacity:1;color:var(--calcite-ui-brand)}:host(:hover[disabled]) .icon{opacity:1}";

const ComboboxItem = /*@__PURE__*/ (0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_7__.proxyCustomElement)(class extends _stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_7__.HTMLElement {
  constructor() {
    super();
    this.__registerHost();
    this.__attachShadow();
    this.calciteComboboxItemChange = (0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_7__.createEvent)(this, "calciteComboboxItemChange", 6);
    this.itemClickHandler = () => {
      this.toggleSelected();
    };
    this.disabled = false;
    this.selected = false;
    this.active = false;
    this.ancestors = undefined;
    this.guid = (0,_guid_js__WEBPACK_IMPORTED_MODULE_2__.g)();
    this.icon = undefined;
    this.iconFlipRtl = false;
    this.textLabel = undefined;
    this.value = undefined;
    this.filterDisabled = undefined;
    this.selectionMode = "multiple";
    this.scale = "m";
  }
  selectedWatchHandler() {
    this.calciteComboboxItemChange.emit();
  }
  // --------------------------------------------------------------------------
  //
  //  Lifecycle
  //
  // --------------------------------------------------------------------------
  connectedCallback() {
    this.ancestors = (0,_utils2_js__WEBPACK_IMPORTED_MODULE_4__.g)(this.el);
    (0,_conditionalSlot_js__WEBPACK_IMPORTED_MODULE_0__.c)(this);
    (0,_interactive_js__WEBPACK_IMPORTED_MODULE_3__.c)(this);
  }
  disconnectedCallback() {
    (0,_conditionalSlot_js__WEBPACK_IMPORTED_MODULE_0__.d)(this);
    (0,_interactive_js__WEBPACK_IMPORTED_MODULE_3__.d)(this);
  }
  componentDidRender() {
    (0,_interactive_js__WEBPACK_IMPORTED_MODULE_3__.u)(this);
  }
  // --------------------------------------------------------------------------
  //
  //  Private Methods
  //
  // --------------------------------------------------------------------------
  toggleSelected() {
    const isSinglePersistSelect = this.selectionMode === "single-persist";
    if (this.disabled || (isSinglePersistSelect && this.selected)) {
      return;
    }
    this.selected = !this.selected;
  }
  // --------------------------------------------------------------------------
  //
  //  Render Methods
  //
  // --------------------------------------------------------------------------
  renderIcon(iconPath) {
    return this.icon ? ((0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_7__.h)("calcite-icon", { class: {
        [CSS.custom]: !!this.icon,
        [CSS.iconActive]: this.icon && this.selected,
        [CSS.iconIndent]: true,
      }, flipRtl: this.iconFlipRtl, icon: this.icon || iconPath, key: "icon", scale: (0,_component_js__WEBPACK_IMPORTED_MODULE_5__.g)(this.scale) })) : null;
  }
  renderSelectIndicator(showDot, iconPath) {
    return showDot ? ((0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_7__.h)("span", { class: {
        [CSS.icon]: true,
        [CSS.dot]: true,
        [CSS.iconIndent]: true,
      } })) : ((0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_7__.h)("calcite-icon", { class: {
        [CSS.icon]: true,
        [CSS.iconActive]: this.selected,
        [CSS.iconIndent]: true,
      }, flipRtl: this.iconFlipRtl, icon: iconPath, key: "indicator", scale: (0,_component_js__WEBPACK_IMPORTED_MODULE_5__.g)(this.scale) }));
  }
  renderChildren() {
    if ((0,_dom_js__WEBPACK_IMPORTED_MODULE_1__.g)(this.el)) {
      return ((0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_7__.h)("ul", { key: "default-slot-container" }, (0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_7__.h)("slot", null)));
    }
    return null;
  }
  render() {
    const isSingleSelect = (0,_utils2_js__WEBPACK_IMPORTED_MODULE_4__.i)(this.selectionMode);
    const showDot = isSingleSelect && !this.disabled;
    const defaultIcon = isSingleSelect ? "dot" : "check";
    const iconPath = this.disabled ? "" : defaultIcon;
    const classes = {
      [CSS.label]: true,
      [CSS.selected]: this.selected,
      [CSS.active]: this.active,
      [CSS.single]: isSingleSelect,
    };
    const depth = (0,_utils2_js__WEBPACK_IMPORTED_MODULE_4__.a)(this.el);
    return ((0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_7__.h)(_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_7__.Host, { "aria-hidden": "true" }, (0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_7__.h)("div", { class: `container scale--${this.scale}`, style: { "--calcite-combobox-item-spacing-indent-multiplier": `${depth}` } }, (0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_7__.h)("li", { class: classes, id: this.guid, onClick: this.itemClickHandler }, this.renderSelectIndicator(showDot, iconPath), this.renderIcon(iconPath), (0,_stencil_core_internal_client_index_js__WEBPACK_IMPORTED_MODULE_7__.h)("span", { class: "title" }, this.textLabel)), this.renderChildren())));
  }
  get el() { return this; }
  static get watchers() { return {
    "selected": ["selectedWatchHandler"]
  }; }
  static get style() { return comboboxItemCss; }
}, [1, "calcite-combobox-item", {
    "disabled": [516],
    "selected": [1540],
    "active": [516],
    "ancestors": [1040],
    "guid": [513],
    "icon": [513],
    "iconFlipRtl": [516, "icon-flip-rtl"],
    "textLabel": [513, "text-label"],
    "value": [8],
    "filterDisabled": [516, "filter-disabled"],
    "selectionMode": [513, "selection-mode"],
    "scale": [1]
  }]);
function defineCustomElement() {
  if (typeof customElements === "undefined") {
    return;
  }
  const components = ["calcite-combobox-item", "calcite-icon"];
  components.forEach(tagName => { switch (tagName) {
    case "calcite-combobox-item":
      if (!customElements.get(tagName)) {
        customElements.define(tagName, ComboboxItem);
      }
      break;
    case "calcite-icon":
      if (!customElements.get(tagName)) {
        (0,_icon_js__WEBPACK_IMPORTED_MODULE_6__.d)();
      }
      break;
  } });
}
defineCustomElement();




/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,