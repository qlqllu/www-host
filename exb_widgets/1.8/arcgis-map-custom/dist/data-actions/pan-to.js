/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
System.register(["jimu-core","jimu-arcgis"], function(__WEBPACK_DYNAMIC_EXPORT__, __system_context__) {
	var __WEBPACK_EXTERNAL_MODULE_jimu_core__ = {};
	var __WEBPACK_EXTERNAL_MODULE_jimu_arcgis__ = {};
	Object.defineProperty(__WEBPACK_EXTERNAL_MODULE_jimu_core__, "__esModule", { value: true });
	Object.defineProperty(__WEBPACK_EXTERNAL_MODULE_jimu_arcgis__, "__esModule", { value: true });
	return {
		setters: [
			function(module) {
				Object.keys(module).forEach(function(key) {
					__WEBPACK_EXTERNAL_MODULE_jimu_core__[key] = module[key];
				});
			},
			function(module) {
				Object.keys(module).forEach(function(key) {
					__WEBPACK_EXTERNAL_MODULE_jimu_arcgis__[key] = module[key];
				});
			}
		],
		execute: function() {
			__WEBPACK_DYNAMIC_EXPORT__(
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./extensions/widgets/arcgis/arcgis-map/src/data-actions/pan-to.ts":
/*!*************************************************************************!*\
  !*** ./extensions/widgets/arcgis/arcgis-map/src/data-actions/pan-to.ts ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ PanTo)\n/* harmony export */ });\n/* harmony import */ var jimu_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jimu-core */ \"jimu-core\");\n/* harmony import */ var jimu_arcgis__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! jimu-arcgis */ \"jimu-arcgis\");\n/* harmony import */ var _runtime_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../runtime/utils */ \"./extensions/widgets/arcgis/arcgis-map/src/runtime/utils.ts\");\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n\n\nclass PanTo extends jimu_core__WEBPACK_IMPORTED_MODULE_0__.AbstractDataAction {\n    isSupported(dataSource, records) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // @ts-expect-error\n            return records.length > 0 && records.some(record => { var _a; return (_a = record.feature) === null || _a === void 0 ? void 0 : _a.geometry; });\n        });\n    }\n    onExecute(dataSource, records) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (0,jimu_arcgis__WEBPACK_IMPORTED_MODULE_1__.loadArcGISJSAPIModules)(['esri/Graphic']).then(modules => {\n                let Graphic = null;\n                [Graphic] = modules;\n                const featureSet = {\n                    features: records.map(record => { var _a; return (_a = (0,_runtime_utils__WEBPACK_IMPORTED_MODULE_2__.handleFeature)(record.feature, Graphic)) === null || _a === void 0 ? void 0 : _a.geometry; })\n                };\n                jimu_core__WEBPACK_IMPORTED_MODULE_0__.MutableStoreManager.getInstance().updateStateValue(this.widgetId, 'panToActionValue.value', featureSet);\n                return true;\n            });\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9leHRlbnNpb25zL3dpZGdldHMvYXJjZ2lzL2FyY2dpcy1tYXAvc3JjL2RhdGEtYWN0aW9ucy9wYW4tdG8udHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFFQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9leGItY2xpZW50Ly4vZXh0ZW5zaW9ucy93aWRnZXRzL2FyY2dpcy9hcmNnaXMtbWFwL3NyYy9kYXRhLWFjdGlvbnMvcGFuLXRvLnRzPzVkMjUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQWJzdHJhY3REYXRhQWN0aW9uLCBEYXRhU291cmNlLCBEYXRhUmVjb3JkLCBNdXRhYmxlU3RvcmVNYW5hZ2VyLCBGZWF0dXJlRGF0YVJlY29yZCB9IGZyb20gJ2ppbXUtY29yZSdcbmltcG9ydCB7IGxvYWRBcmNHSVNKU0FQSU1vZHVsZXMgfSBmcm9tICdqaW11LWFyY2dpcydcbmltcG9ydCB7IGhhbmRsZUZlYXR1cmUgfSBmcm9tICcuLi9ydW50aW1lL3V0aWxzJ1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQYW5UbyBleHRlbmRzIEFic3RyYWN0RGF0YUFjdGlvbiB7XG4gIGFzeW5jIGlzU3VwcG9ydGVkIChkYXRhU291cmNlOiBEYXRhU291cmNlLCByZWNvcmRzOiBEYXRhUmVjb3JkW10pOiBQcm9taXNlPGJvb2xlYW4+IHtcbiAgICAvLyBAdHMtZXhwZWN0LWVycm9yXG4gICAgcmV0dXJuIHJlY29yZHMubGVuZ3RoID4gMCAmJiByZWNvcmRzLnNvbWUocmVjb3JkID0+IHJlY29yZC5mZWF0dXJlPy5nZW9tZXRyeSlcbiAgfVxuXG4gIGFzeW5jIG9uRXhlY3V0ZSAoZGF0YVNvdXJjZTogRGF0YVNvdXJjZSwgcmVjb3JkczogRGF0YVJlY29yZFtdKTogUHJvbWlzZTxib29sZWFuPiB7XG4gICAgcmV0dXJuIGxvYWRBcmNHSVNKU0FQSU1vZHVsZXMoWydlc3JpL0dyYXBoaWMnXSkudGhlbihtb2R1bGVzID0+IHtcbiAgICAgIGxldCBHcmFwaGljOiBfX2VzcmkuR3JhcGhpY0NvbnN0cnVjdG9yID0gbnVsbDtcbiAgICAgIFtHcmFwaGljXSA9IG1vZHVsZXNcbiAgICAgIGNvbnN0IGZlYXR1cmVTZXQgPSB7XG4gICAgICAgIGZlYXR1cmVzOiByZWNvcmRzLm1hcChyZWNvcmQgPT4gaGFuZGxlRmVhdHVyZSgocmVjb3JkIGFzIEZlYXR1cmVEYXRhUmVjb3JkKS5mZWF0dXJlLCBHcmFwaGljKT8uZ2VvbWV0cnkpXG4gICAgICB9XG4gICAgICBNdXRhYmxlU3RvcmVNYW5hZ2VyLmdldEluc3RhbmNlKCkudXBkYXRlU3RhdGVWYWx1ZSh0aGlzLndpZGdldElkLCAncGFuVG9BY3Rpb25WYWx1ZS52YWx1ZScsIGZlYXR1cmVTZXQpXG4gICAgICByZXR1cm4gdHJ1ZVxuICAgIH0pXG4gIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./extensions/widgets/arcgis/arcgis-map/src/data-actions/pan-to.ts\n");

/***/ }),

/***/ "./extensions/widgets/arcgis/arcgis-map/src/runtime/utils.ts":
/*!*******************************************************************!*\
  !*** ./extensions/widgets/arcgis/arcgis-map/src/runtime/utils.ts ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"controlUIWidget\": () => (/* binding */ controlUIWidget),\n/* harmony export */   \"createNewFeaturelayer\": () => (/* binding */ createNewFeaturelayer),\n/* harmony export */   \"updateFeaturelayer\": () => (/* binding */ updateFeaturelayer),\n/* harmony export */   \"selectFeature\": () => (/* binding */ selectFeature),\n/* harmony export */   \"mapPanto\": () => (/* binding */ mapPanto),\n/* harmony export */   \"filterFeaturesByQuery\": () => (/* binding */ filterFeaturesByQuery),\n/* harmony export */   \"flashFeaturesByQuery\": () => (/* binding */ flashFeaturesByQuery),\n/* harmony export */   \"handleFeature\": () => (/* binding */ handleFeature),\n/* harmony export */   \"projectGeometries\": () => (/* binding */ projectGeometries),\n/* harmony export */   \"processZoomToFeatures\": () => (/* binding */ processZoomToFeatures),\n/* harmony export */   \"checkIsLive\": () => (/* binding */ checkIsLive),\n/* harmony export */   \"getMapBaseRestoreData\": () => (/* binding */ getMapBaseRestoreData),\n/* harmony export */   \"restoreMapBase\": () => (/* binding */ restoreMapBase)\n/* harmony export */ });\n/* harmony import */ var jimu_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jimu-core */ \"jimu-core\");\n/* harmony import */ var jimu_arcgis__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! jimu-arcgis */ \"jimu-arcgis\");\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n/* eslint-disable prefer-const */\n\n\nfunction controlUIWidget(mapBaseView, isOpen, uiWidget, position, widgetName) {\n    const ui = mapBaseView.ui;\n    if (!uiWidget) {\n        return;\n    }\n    if (isOpen) {\n        ui.add(uiWidget, position);\n        if (widgetName && ui.exbMapTools.indexOf(widgetName) === -1) {\n            ui.exbMapTools.push(widgetName);\n        }\n    }\n    else {\n        ui.remove(uiWidget);\n    }\n}\nfunction createNewFeaturelayer(mapBaseView, newFeatureSetValue) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const newLayerPromises = [];\n        newFeatureSetValue && Object.keys(newFeatureSetValue).forEach(layerId => {\n            const layer = mapBaseView.map.layers.find(layer => layer.id === layerId);\n            if (layer) {\n                console.warn('the feature layer is already created');\n                return;\n            }\n            newLayerPromises.push(addFeatureSetToMap(mapBaseView, newFeatureSetValue[layerId], layerId));\n        });\n        if (newLayerPromises.length === 0) {\n            return null;\n        }\n        else {\n            return Promise.all(newLayerPromises);\n        }\n    });\n}\nfunction updateFeaturelayer(mapBaseView, changedFeatureSetValue) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const updatePromises = [];\n        changedFeatureSetValue && Object.keys(changedFeatureSetValue).forEach(layerId => {\n            const layer = mapBaseView.map.layers.find(layer => layer.id === layerId);\n            if (layer) {\n                mapBaseView.map.remove(layer);\n                updatePromises.push(addFeatureSetToMap(mapBaseView, changedFeatureSetValue[layerId], layerId));\n            }\n        });\n        if (updatePromises.length === 0) {\n            return null;\n        }\n        else {\n            return Promise.all(updatePromises);\n        }\n    });\n}\nfunction addFeatureSetToMap(mapBaseView, featureSet, layerId) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return yield new Promise((resolve, reject) => {\n            return (0,jimu_arcgis__WEBPACK_IMPORTED_MODULE_1__.loadArcGISJSAPIModules)([\n                'esri/layers/FeatureLayer'\n            ]).then(modules => {\n                if (featureSet.features.length < 1) {\n                    return resolve(null);\n                }\n                else {\n                    // let FeatureSet: typeof  __esri.FeatureSet;\n                    let FeatureLayer;\n                    // eslint-disable-next-line\n                    [FeatureLayer] = modules;\n                    const layerFromFeatureSet = featureSet.features[0].layer;\n                    const fieldsInFeaturelayer = [];\n                    const fieldMap = {};\n                    for (let i = 0; i < layerFromFeatureSet.fields.length; i++) {\n                        const fieldsItem = getReasonableField(layerFromFeatureSet.fields[i]);\n                        fieldMap[layerFromFeatureSet.fields[i].name] = fieldsItem.name;\n                        fieldsInFeaturelayer.push(fieldsItem);\n                    }\n                    const fieldsInPopupTemplate = [];\n                    for (const key in featureSet.features[0].attributes) {\n                        if (fieldMap[key]) {\n                            const fieldsItem = {\n                                fieldName: fieldMap[key],\n                                label: key\n                            };\n                            fieldsInPopupTemplate.push(fieldsItem);\n                        }\n                    }\n                    const sourceFeatures = [];\n                    featureSet.features.forEach((feature, index) => {\n                        const tempFeature = feature;\n                        if (tempFeature.attributes) {\n                            for (const key in tempFeature.attributes) {\n                                tempFeature.attributes[fieldMap[key]] = tempFeature.attributes[key];\n                            }\n                            tempFeature.attributes.exbfid = index;\n                        }\n                        else {\n                            tempFeature.attributes = {\n                                exbfid: index\n                            };\n                        }\n                        sourceFeatures.push(tempFeature);\n                    });\n                    const layer = new FeatureLayer({\n                        id: layerId,\n                        title: layerFromFeatureSet.title,\n                        source: sourceFeatures,\n                        fields: fieldsInFeaturelayer,\n                        outFields: ['*'],\n                        objectIdField: 'exbfid',\n                        renderer: layerFromFeatureSet.renderer,\n                        popupEnabled: true,\n                        popupTemplate: {\n                            title: 'information',\n                            content: [{\n                                    type: 'fields',\n                                    fieldInfos: fieldsInPopupTemplate\n                                }]\n                        }\n                    });\n                    mapBaseView.map.add(layer);\n                    layer.on('layerview-create', event => {\n                        return resolve(null);\n                    });\n                }\n            });\n        });\n    });\n}\nfunction getReasonableField(field) {\n    // the function is supported to normalize the field.name\n    const fieldName = field.name;\n    return {\n        name: fieldName.replace(/\\./g, '_').replace(/\\(/g, '_').replace(/\\)/g, '_'),\n        alias: field.alias,\n        type: field.type\n    };\n}\nfunction selectFeature(mapBaseView, target, layerId) {\n    // In this function, we assume that features come from the same layer\n    let featureLayerId = layerId;\n    let featureLayerView = null;\n    let tempFeature = null;\n    // if layerId doesn't exist, we get layerId by feature\n    if (!featureLayerId) {\n        if (target instanceof Array) {\n            tempFeature = target[0];\n        }\n        else {\n            tempFeature = target;\n        }\n        if (tempFeature) {\n            featureLayerId = tempFeature.layer && tempFeature.layer.id;\n        }\n    }\n    if (featureLayerId) {\n        const layerViews = mapBaseView.allLayerViews;\n        for (let i = 0; i < layerViews.length; i++) {\n            if (layerViews.getItemAt(i).layer.id === featureLayerId) {\n                featureLayerView = layerViews.getItemAt(i);\n            }\n        }\n        if (featureLayerView) {\n            return {\n                layerId: featureLayerId,\n                handle: featureLayerView.highlight(target)\n            };\n        }\n        else {\n            return null;\n        }\n    }\n}\nfunction mapPanto(mapBaseView, target) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const panToTarget = target;\n        const tempBaseMapView = mapBaseView;\n        if (panToTarget instanceof Array) {\n            if (panToTarget.length === 0)\n                return yield Promise.resolve();\n            if (panToTarget[0].geometry) {\n                const geometryArr = [];\n                for (let i = 0; i < panToTarget.length; i++) {\n                    geometryArr.push(panToTarget[i].geometry);\n                }\n                return yield getGeometriesExtent(geometryArr).then((extent) => {\n                    return tempBaseMapView.goTo(extent.center);\n                });\n            }\n            else {\n                return getGeometriesExtent(panToTarget).then((extent) => {\n                    return tempBaseMapView.goTo(extent.center);\n                });\n            }\n        }\n        else {\n            if (panToTarget.geometry) {\n                const getmetry = panToTarget.geometry;\n                return tempBaseMapView.goTo(getCenterPoint(getmetry));\n            }\n            else {\n                return tempBaseMapView.goTo(getCenterPoint(panToTarget));\n            }\n        }\n    });\n}\nfunction getGeometriesExtent(geometries) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return yield (0,jimu_arcgis__WEBPACK_IMPORTED_MODULE_1__.loadArcGISJSAPIModules)([\n            'esri/geometry/Extent'\n        ]).then((modules) => __awaiter(this, void 0, void 0, function* () {\n            // eslint-disable-next-line\n            let Extent;\n            [Extent] = modules;\n            if (!geometries || !geometries.length) {\n                return yield Promise.resolve(null);\n            }\n            let fullExtent = null;\n            let index;\n            const numGeometries = geometries.length;\n            for (index = 0; index < numGeometries; index++) {\n                const geometry = geometries[index];\n                if (!geometry) {\n                    continue;\n                }\n                let extent = geometry.extent;\n                if (!extent && geometry.type === 'point') {\n                    const pointGeometry = geometry;\n                    if (pointGeometry.x && pointGeometry.y) {\n                        extent = new Extent({\n                            xmax: pointGeometry.x,\n                            xmin: pointGeometry.x,\n                            ymax: pointGeometry.y,\n                            ymin: pointGeometry.y,\n                            zmax: pointGeometry.z,\n                            zmin: pointGeometry.z,\n                            spatialReference: pointGeometry.spatialReference\n                        });\n                    }\n                }\n                if (!extent) {\n                    continue;\n                }\n                if (fullExtent) {\n                    fullExtent = fullExtent.union(extent);\n                }\n                else {\n                    fullExtent = extent;\n                }\n            }\n            if (fullExtent.width < 0 && fullExtent.height < 0) {\n                return yield Promise.resolve(null);\n            }\n            return yield Promise.resolve(fullExtent);\n        }));\n    });\n}\nfunction filterFeaturesByQuery(jimuMapView, layerDataSourceId, querySQL) {\n    if (layerDataSourceId) {\n        const jimuLayerViews = jimuMapView.jimuLayerViews;\n        const jimuLayerViewIds = Object.keys(jimuLayerViews);\n        for (let i = 0; i < jimuLayerViewIds.length; i++) {\n            let tempJimuLayerView = jimuLayerViews[jimuLayerViewIds[i]];\n            if (tempJimuLayerView && tempJimuLayerView.layer && tempJimuLayerView.layerDataSourceId === layerDataSourceId &&\n                (tempJimuLayerView.type === jimu_arcgis__WEBPACK_IMPORTED_MODULE_1__.LayerTypes.FeatureLayer || tempJimuLayerView.type === jimu_arcgis__WEBPACK_IMPORTED_MODULE_1__.LayerTypes.SceneLayer)) {\n                tempJimuLayerView.setLocalDefinitionExpression(querySQL);\n            }\n        }\n    }\n}\nfunction queryFeatures(layerObject, querySQL) {\n    return (0,jimu_arcgis__WEBPACK_IMPORTED_MODULE_1__.loadArcGISJSAPIModules)([\n        'esri/rest/support/Query'\n    ]).then(modules => {\n        let Query;\n        [Query] = modules;\n        const query = new Query();\n        query.where = querySQL;\n        query.outFields = ['*'];\n        query.returnGeometry = true;\n        return layerObject.queryFeatures(query).then(featureSet => {\n            return featureSet;\n        });\n    });\n}\nfunction flashOnFeatureLayer(jimuMapView, querySQL, tempJimuLayerView) {\n    if ((tempJimuLayerView).view) {\n        let featureLayerView = (tempJimuLayerView).view;\n        if (featureLayerView) {\n            queryFeatures(featureLayerView.layer, querySQL).then(featureSet => {\n                if (featureSet && featureSet.features && featureSet.features.length > 0) {\n                    const symbol = getFlashSymbol(featureLayerView.layer.geometryType);\n                    startFlash(jimuMapView.view, featureSet.features, symbol);\n                }\n            });\n        }\n        else {\n            return null;\n        }\n    }\n    else {\n        (0,jimu_arcgis__WEBPACK_IMPORTED_MODULE_1__.loadArcGISJSAPIModules)([\n            'esri/layers/FeatureLayer'\n        ]).then(modules => {\n            let FeatureLayer;\n            [FeatureLayer] = modules;\n            let tempFeatureLayer = new FeatureLayer({\n                url: jimu_core__WEBPACK_IMPORTED_MODULE_0__.dataSourceUtils.getUrlByLayer(tempJimuLayerView.layer)\n            });\n            tempFeatureLayer.load().then(() => {\n                queryFeatures(tempFeatureLayer, querySQL).then(featureSet => {\n                    if (featureSet && featureSet.features && featureSet.features.length > 0) {\n                        const symbol = getFlashSymbol(featureSet.features[0].geometry.type);\n                        startFlash(jimuMapView.view, featureSet.features, symbol);\n                    }\n                });\n            });\n        });\n    }\n}\nlet sceneHightlightHandle = null;\nfunction flashOnSceneLayer(jimuMapView, querySQL, tempJimuLayerView) {\n    var _a;\n    if ((tempJimuLayerView).view) {\n        let sceneLayerView = (tempJimuLayerView).view;\n        // @ts-expect-error\n        queryFeatures((_a = sceneLayerView === null || sceneLayerView === void 0 ? void 0 : sceneLayerView.layer) === null || _a === void 0 ? void 0 : _a.associatedLayer, querySQL).then(featureSet => {\n            if (featureSet && featureSet.features && featureSet.features.length > 0) {\n                const objectIdField = sceneLayerView.layer.objectIdField;\n                const objectIds = featureSet.features.map(feature => feature.attributes[objectIdField]);\n                let i = 0;\n                const maxFlashCount = 6;\n                let highlightColor = [255, 255, 0, 0.8];\n                const originalHighlightOptions = jimuMapView.view.highlightOptions;\n                const flash = function () {\n                    if (i < maxFlashCount) {\n                        i++;\n                        if (highlightColor) {\n                            highlightColor = null;\n                            // @ts-expect-error\n                            jimuMapView.view.highlightOptions = { color: [0, 0, 0, 0] };\n                            sceneHightlightHandle && sceneHightlightHandle.remove();\n                            sceneHightlightHandle = sceneLayerView.highlight(objectIds);\n                        }\n                        else {\n                            highlightColor = [255, 255, 0, 0.8];\n                            // @ts-expect-error\n                            jimuMapView.view.highlightOptions = { color: highlightColor };\n                            sceneHightlightHandle && sceneHightlightHandle.remove();\n                            sceneHightlightHandle = sceneLayerView.highlight(objectIds);\n                        }\n                        setTimeout(flash, 500);\n                    }\n                    else {\n                        jimuMapView.view.highlightOptions = originalHighlightOptions;\n                        sceneHightlightHandle && sceneHightlightHandle.remove();\n                    }\n                };\n                setTimeout(flash, 500);\n            }\n        });\n    }\n}\nfunction flashFeaturesByQuery(jimuMapView, layerDataSourceId, querySQL) {\n    if (layerDataSourceId) {\n        const jimuLayerViews = jimuMapView.jimuLayerViews;\n        const jimuLayerViewIds = Object.keys(jimuLayerViews);\n        for (let i = 0; i < jimuLayerViewIds.length; i++) {\n            let tempJimuLayerView = jimuLayerViews[jimuLayerViewIds[i]];\n            if (tempJimuLayerView && tempJimuLayerView.layer && tempJimuLayerView.layerDataSourceId === layerDataSourceId) {\n                if (tempJimuLayerView.type === jimu_arcgis__WEBPACK_IMPORTED_MODULE_1__.LayerTypes.FeatureLayer) {\n                    flashOnFeatureLayer(jimuMapView, querySQL, tempJimuLayerView);\n                }\n                else if (tempJimuLayerView.type === jimu_arcgis__WEBPACK_IMPORTED_MODULE_1__.LayerTypes.SceneLayer) {\n                    flashOnSceneLayer(jimuMapView, querySQL, tempJimuLayerView);\n                }\n            }\n        }\n    }\n}\nfunction startFlash(mapBaseView, features, symbol) {\n    (0,jimu_arcgis__WEBPACK_IMPORTED_MODULE_1__.loadArcGISJSAPIModules)([\n        'esri/Graphic'\n    ]).then(modules => {\n        // eslint-disable-next-line\n        let Graphic;\n        [Graphic] = modules;\n        const flashFeatures = function (features, maxFlashCount) {\n            const graphics = [];\n            let flashCount = 0;\n            for (let i = 0; i < features.length; i++) {\n                const tempGraphic = new Graphic({\n                    geometry: features[i].geometry,\n                    symbol: symbol,\n                    attributes: features[i].attributes\n                });\n                graphics.push(tempGraphic);\n            }\n            const singleFlash = function () {\n                mapBaseView.graphics.addMany(graphics);\n                setTimeout(() => {\n                    mapBaseView.graphics.removeMany(graphics);\n                    flashCount = flashCount + 1;\n                    if (flashCount < maxFlashCount) {\n                        setTimeout(() => {\n                            singleFlash();\n                        }, 500);\n                    }\n                }, 500);\n            };\n            singleFlash();\n        };\n        flashFeatures(features, 3);\n    });\n}\nfunction getFlashSymbol(geometryType) {\n    if (['point', 'multipoint'].includes(geometryType)) {\n        return {\n            type: 'simple-marker',\n            style: 'circle',\n            color: [255, 255, 0, 0.8],\n            size: '16px',\n            outline: {\n                color: [255, 255, 0, 0.8],\n                width: 3\n            }\n        };\n    }\n    else if (['polyline'].includes(geometryType)) {\n        return {\n            type: 'simple-line',\n            color: [255, 255, 0, 0.8],\n            width: 3,\n            style: 'solid'\n        };\n    }\n    else if (['polygon', 'extent'].includes(geometryType)) {\n        return {\n            type: 'simple-fill',\n            color: [255, 255, 0, 0.5],\n            style: 'solid',\n            outline: {\n                color: [255, 255, 0, 0.8],\n                width: 3\n            }\n        };\n    }\n    else if (['mesh'].includes(geometryType)) {\n        return {\n            type: 'mesh-3d',\n            symbolLayers: [{\n                    type: 'fill',\n                    material: { color: [255, 255, 0, 0.8] }\n                }]\n        };\n    }\n    else {\n        return null;\n    }\n}\nfunction getCenterPoint(geometry) {\n    // point | multipoint | polyline | polygon | extent | mesh\n    switch (geometry.type) {\n        case 'point':\n            return geometry;\n        case 'extent':\n            return geometry.center;\n        case 'polygon':\n            return geometry.centroid;\n        case 'polyline':\n            return geometry.extent.center;\n        default:\n            return geometry && geometry.extent ? geometry.extent.center : undefined;\n        // todo\n    }\n}\nfunction handleFeature(feature, Graphic) {\n    let tempFeature = null;\n    if (feature.clone) {\n        tempFeature = feature.clone();\n    }\n    else {\n        tempFeature = Graphic.fromJSON(Object.assign({}, feature));\n        tempFeature.attributes = Object.assign({}, feature.attributes);\n    }\n    return tempFeature;\n}\nfunction projectGeometries(geometries, spatialReference) {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (!geometries || geometries.length === 0 || !geometries[0] ||\n            spatialReference.wkid === geometries[0].spatialReference.wkid || (spatialReference.equals(geometries[0].spatialReference))) {\n            return yield Promise.resolve(geometries);\n        }\n        else if (spatialReference.isWebMercator && geometries[0].spatialReference.isWGS84) {\n            // In js api 4.x, the view can handle WebMercator and WGS84 spatialReference auto\n            return yield Promise.resolve(geometries);\n        }\n        else if (spatialReference.isWGS84 && geometries[0].spatialReference.isWebMercator) {\n            // In js api 4.x, the view can handle WebMercator and WGS84 spatialReference auto\n            return yield Promise.resolve(geometries);\n        }\n        else {\n            return yield jimu_arcgis__WEBPACK_IMPORTED_MODULE_1__.geometryUtils.projectToSpatialReference(geometries, spatialReference);\n        }\n    });\n}\nfunction processZoomToFeatures(mapBaseView, layer, features) {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (mapBaseView && mapBaseView.type === '3d' && layer && layer.queryFeatures && features) {\n            return yield (0,jimu_arcgis__WEBPACK_IMPORTED_MODULE_1__.loadArcGISJSAPIModules)([\n                'esri/rest/support/Query'\n            ]).then((modules) => {\n                const [Query] = modules;\n                const query = new Query();\n                query.returnGeometry = true;\n                query.outFields = ['*'];\n                query.objectIds = features.map(feature => feature.attributes[layer.objectIdField]);\n                return layer.queryFeatures(query).then((result) => __awaiter(this, void 0, void 0, function* () {\n                    if (result && result.features && result.features.length === features.length) {\n                        return yield Promise.resolve(result.features);\n                    }\n                    else {\n                        return yield Promise.resolve(features);\n                    }\n                }), () => __awaiter(this, void 0, void 0, function* () {\n                    return yield Promise.resolve(features);\n                }));\n            });\n        }\n        else {\n            return yield Promise.resolve(features);\n        }\n    });\n}\nfunction checkIsLive(appMode) {\n    if (window.jimuConfig.isInBuilder) {\n        if (appMode === jimu_core__WEBPACK_IMPORTED_MODULE_0__.AppMode.Design) {\n            return false;\n        }\n        else {\n            return true;\n        }\n    }\n    else {\n        return true;\n    }\n}\nfunction getMapBaseRestoreData(mapInstance) {\n    return {\n        mapContainer: mapInstance.mapContainer,\n        state: mapInstance.state,\n        MapView: mapInstance.MapView,\n        SceneView: mapInstance.SceneView,\n        Extent: mapInstance.Extent,\n        Viewpoint: mapInstance.Viewpoint,\n        mapView: mapInstance.mapView,\n        sceneView: mapInstance.sceneView,\n        extentWatch: mapInstance.extentWatch,\n        fatalErrorWatch: mapInstance.fatalErrorWatch,\n        dsManager: mapInstance.dsManager,\n        highLightHandles: mapInstance.highLightHandles,\n        mapBaseViewEventHandles: mapInstance.mapBaseViewEventHandles,\n        Color: mapInstance.Color,\n        isRequestingMap: mapInstance.isRequestingMap\n    };\n}\nfunction restoreMapBase(mapInstance, restoreData) {\n    mapInstance.mapContainer = restoreData.mapContainer;\n    mapInstance.state = restoreData.state;\n    mapInstance.MapView = restoreData.MapView;\n    mapInstance.SceneView = restoreData.SceneView;\n    mapInstance.Extent = restoreData.Extent;\n    mapInstance.Viewpoint = restoreData.Viewpoint;\n    mapInstance.mapView = restoreData.mapView;\n    mapInstance.sceneView = restoreData.sceneView;\n    mapInstance.extentWatch = restoreData.extentWatch;\n    mapInstance.fatalErrorWatch = restoreData.fatalErrorWatch;\n    mapInstance.dsManager = restoreData.dsManager;\n    mapInstance.highLightHandles = restoreData.highLightHandles;\n    mapInstance.mapBaseViewEventHandles = restoreData.mapBaseViewEventHandles;\n    mapInstance.Color = restoreData.Color;\n    mapInstance.isRequestingMap = restoreData.isRequestingMap;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./extensions/widgets/arcgis/arcgis-map/src/runtime/utils.ts\n");

/***/ }),

/***/ "jimu-arcgis":
/*!******************************!*\
  !*** external "jimu-arcgis" ***!
  \******************************/
/***/ ((module) => {

module.exports = __WEBPACK_EXTERNAL_MODULE_jimu_arcgis__;

/***/ }),

/***/ "jimu-core":
/*!****************************!*\
  !*** external "jimu-core" ***!
  \****************************/
/***/ ((module) => {

module.exports = __WEBPACK_EXTERNAL_MODULE_jimu_core__;

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./extensions/widgets/arcgis/arcgis-map/src/data-actions/pan-to.ts");
/******/ 	
/******/ 	return __webpack_exports__;
/******/ })()

			);
		}
	};
});