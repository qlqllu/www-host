/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
System.register(["jimu-core"], function(__WEBPACK_DYNAMIC_EXPORT__, __system_context__) {
	var __WEBPACK_EXTERNAL_MODULE_jimu_core__ = {};
	Object.defineProperty(__WEBPACK_EXTERNAL_MODULE_jimu_core__, "__esModule", { value: true });
	return {
		setters: [
			function(module) {
				Object.keys(module).forEach(function(key) {
					__WEBPACK_EXTERNAL_MODULE_jimu_core__[key] = module[key];
				});
			}
		],
		execute: function() {
			__WEBPACK_DYNAMIC_EXPORT__(
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./extensions/widgets/arcgis/arcgis-map/src/message-actions/flash-action.ts":
/*!**********************************************************************************!*\
  !*** ./extensions/widgets/arcgis/arcgis-map/src/message-actions/flash-action.ts ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ FlashAction)\n/* harmony export */ });\n/* harmony import */ var jimu_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jimu-core */ \"jimu-core\");\n\nclass FlashAction extends jimu_core__WEBPACK_IMPORTED_MODULE_0__.AbstractMessageAction {\n    filterMessageType(messageType, messageWidgetId) {\n        return messageType === jimu_core__WEBPACK_IMPORTED_MODULE_0__.MessageType.DataRecordsSelectionChange;\n    }\n    filterMessage(message) {\n        return true;\n    }\n    onExecute(message, actionConfig) {\n        switch (message.type) {\n            case jimu_core__WEBPACK_IMPORTED_MODULE_0__.MessageType.DataRecordsSelectionChange:\n                if (message.records.length === 0) {\n                    break;\n                }\n                let flashActionValue = null;\n                if (actionConfig) {\n                    if (actionConfig.messageUseDataSource && actionConfig.actionUseDataSource) {\n                        if (message.records.length > 0 &&\n                            message.records[0].dataSource.getMainDataSource().id !== actionConfig.messageUseDataSource.mainDataSourceId) {\n                            jimu_core__WEBPACK_IMPORTED_MODULE_0__.MutableStoreManager.getInstance().updateStateValue(this.widgetId, 'flashActionValue', null);\n                            break;\n                        }\n                        const messageDataSource = jimu_core__WEBPACK_IMPORTED_MODULE_0__.DataSourceManager.getInstance().getDataSource(actionConfig.messageUseDataSource.mainDataSourceId);\n                        const actionDataSource = jimu_core__WEBPACK_IMPORTED_MODULE_0__.DataSourceManager.getInstance().getDataSource(actionConfig.actionUseDataSource.mainDataSourceId);\n                        if (messageDataSource && actionDataSource) {\n                            // when ds instances exit\n                            if (actionConfig.enabledDataRelationShip) {\n                                // use DataRelationShip\n                                let messageField = null;\n                                let actionField = null;\n                                if (actionConfig.messageUseDataSource.mainDataSourceId === actionConfig.actionUseDataSource.mainDataSourceId &&\n                                    actionConfig.messageUseDataSource.rootDataSourceId === actionConfig.actionUseDataSource.rootDataSourceId) {\n                                    // if trigger ds is same to action ds\n                                    const messageDsSchema = messageDataSource.getSchema();\n                                    const objectIdJimuFieldName = messageDsSchema && messageDsSchema.fields &&\n                                        Object.keys(messageDsSchema.fields).find(jimuFieldName => messageDsSchema.fields[jimuFieldName].esriType === 'esriFieldTypeOID');\n                                    messageField = messageDsSchema && messageDsSchema.fields && messageDsSchema.fields[objectIdJimuFieldName];\n                                    actionField = messageField;\n                                }\n                                else {\n                                    // if trigger ds isn't same to action ds\n                                    const messageJimuFieldName = actionConfig.messageUseDataSource.fields[0];\n                                    const actionJimuFieldName = actionConfig.actionUseDataSource.fields[0];\n                                    messageField = messageDataSource.getSchema().fields[messageJimuFieldName];\n                                    actionField = actionDataSource.getSchema().fields[actionJimuFieldName];\n                                }\n                                let whereSql = '';\n                                if (messageField && actionField) {\n                                    const messageFieldName = messageField.name;\n                                    const messageFieldType = messageField.type;\n                                    const tempMessage = message;\n                                    const messageFieldValues = [];\n                                    for (let i = 0; i < tempMessage.records.length; i++) {\n                                        const tempFieldValue = tempMessage.records[i].getData()[messageFieldName];\n                                        if (messageFieldValues.includes(`${this.formatValue(tempFieldValue, messageFieldType)}`)) {\n                                            continue;\n                                        }\n                                        else {\n                                            messageFieldValues.push(`${this.formatValue(tempMessage.records[i].getData()[messageFieldName], messageFieldType)}`);\n                                        }\n                                    }\n                                    whereSql = `${actionField.name} IN `;\n                                    if (messageFieldValues.length > 0) {\n                                        whereSql = whereSql + `(${messageFieldValues.join(', ')})`;\n                                    }\n                                    else {\n                                        whereSql = '';\n                                    }\n                                }\n                                if (message.records.length > 0) {\n                                    const moreAditionSQL = actionConfig.sqlExprObj ? jimu_core__WEBPACK_IMPORTED_MODULE_0__.dataSourceUtils.getArcGISSQL(actionConfig.sqlExprObj, actionDataSource).sql : null;\n                                    if (moreAditionSQL) {\n                                        if (whereSql) {\n                                            whereSql = whereSql + ' AND ' + moreAditionSQL;\n                                        }\n                                        else {\n                                            whereSql = moreAditionSQL;\n                                        }\n                                    }\n                                }\n                                else {\n                                    whereSql = '';\n                                }\n                                const query = {\n                                    outFields: ['*'],\n                                    where: whereSql,\n                                    returnGeometry: true\n                                };\n                                const realQuery = actionDataSource.getRealQueryParams(query, 'query');\n                                flashActionValue = {\n                                    layerDataSourceId: actionDataSource && actionDataSource.id,\n                                    querySQL: realQuery && realQuery.where\n                                };\n                            }\n                            else {\n                                // not use DataRelationShip\n                                let whereSql = '';\n                                if (message.records.length > 0) {\n                                    const moreAditionSQL = actionConfig.sqlExprObj ? jimu_core__WEBPACK_IMPORTED_MODULE_0__.dataSourceUtils.getArcGISSQL(actionConfig.sqlExprObj, actionDataSource).sql : null;\n                                    if (moreAditionSQL) {\n                                        whereSql = moreAditionSQL;\n                                    }\n                                }\n                                else {\n                                    whereSql = '';\n                                }\n                                const query = {\n                                    outFields: ['*'],\n                                    where: whereSql,\n                                    returnGeometry: true\n                                };\n                                const realQuery = actionDataSource.getRealQueryParams(query, 'query');\n                                flashActionValue = {\n                                    layerDataSourceId: actionDataSource && actionDataSource.id,\n                                    querySQL: realQuery && realQuery.where\n                                };\n                            }\n                        }\n                        else {\n                            // when ds instances don't exist\n                            flashActionValue = null;\n                        }\n                    }\n                    else {\n                        flashActionValue = null;\n                    }\n                }\n                const actionKey = `flashActionValue-${flashActionValue === null || flashActionValue === void 0 ? void 0 : flashActionValue.layerDataSourceId}`;\n                jimu_core__WEBPACK_IMPORTED_MODULE_0__.MutableStoreManager.getInstance().updateStateValue(this.widgetId, actionKey, flashActionValue);\n                break;\n        }\n        return true;\n    }\n    getLayerIdFromLayerDs(ds) {\n        if (ds.layerId) {\n            return ds.layerId;\n        }\n        else if (ds.layer) {\n            return ds.layer.id;\n        }\n        else {\n            return null;\n        }\n    }\n    formatValue(value, type) {\n        if (type === 'STRING') {\n            return `'${value}'`;\n        }\n        else if (type === 'NUMBER') {\n            return `${value}`;\n        }\n        else if (type === 'DATE') {\n            return `'${value}'`;\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./extensions/widgets/arcgis/arcgis-map/src/message-actions/flash-action.ts\n");

/***/ }),

/***/ "jimu-core":
/*!****************************!*\
  !*** external "jimu-core" ***!
  \****************************/
/***/ ((module) => {

module.exports = __WEBPACK_EXTERNAL_MODULE_jimu_core__;

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./extensions/widgets/arcgis/arcgis-map/src/message-actions/flash-action.ts");
/******/ 	
/******/ 	return __webpack_exports__;
/******/ })()

			);
		}
	};
});